

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Dec 06 14:57:48 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	param0,global,class=BANK0,space=1,delta=1
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataCOMRAM
    55  003949                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _limiteSx
    59  003949  00B4               	dw	180
    60                           
    61                           	psect	idataBANK0
    62  003946                     __pidataBANK0:
    63                           	opt stack 0
    64                           
    65                           ;initializer for _currentSteering
    66  003946  B4                 	db	180
    67                           
    68                           ;initializer for _delay_quartz_frequency_value
    69  003947  10                 	db	16
    70                           
    71                           ;initializer for _pastSteering
    72  003948  01                 	db	1
    73                           
    74                           	psect	nvBANK0
    75  0000EA                     __pnvBANK0:
    76                           	opt stack 0
    77  0000EA                     _clock_counter_reference:
    78                           	opt stack 0
    79  0000EA                     	ds	2
    80  0000                     _RXB1CON	set	3920
    81  0000                     _RXB1CONbits	set	3920
    82  0000                     _RXB1D0	set	3926
    83  0000                     _RXB1D1	set	3927
    84  0000                     _RXB1D2	set	3928
    85  0000                     _RXB1D3	set	3929
    86  0000                     _RXB1D4	set	3930
    87  0000                     _RXB1D5	set	3931
    88  0000                     _RXB1D6	set	3932
    89  0000                     _RXB1D7	set	3933
    90  0000                     _RXB1DLC	set	3925
    91  0000                     _RXB1DLCbits	set	3925
    92  0000                     _RXB1EIDH	set	3923
    93  0000                     _RXB1EIDL	set	3924
    94  0000                     _RXB1SIDH	set	3921
    95  0000                     _RXB1SIDL	set	3922
    96  0000                     _RXB1SIDLbits	set	3922
    97  0000                     _RXF0EIDH	set	3842
    98  0000                     _RXF0EIDL	set	3843
    99  0000                     _RXF0SIDH	set	3840
   100  0000                     _RXF0SIDL	set	3841
   101  0000                     _RXF0SIDLbits	set	3841
   102  0000                     _RXF1EIDH	set	3846
   103  0000                     _RXF1EIDL	set	3847
   104  0000                     _RXF1SIDH	set	3844
   105  0000                     _RXF1SIDL	set	3845
   106  0000                     _RXF1SIDLbits	set	3845
   107  0000                     _RXF2EIDH	set	3850
   108  0000                     _RXF2EIDL	set	3851
   109  0000                     _RXF2SIDH	set	3848
   110  0000                     _RXF2SIDL	set	3849
   111  0000                     _RXF2SIDLbits	set	3849
   112  0000                     _RXF3EIDH	set	3854
   113  0000                     _RXF3EIDL	set	3855
   114  0000                     _RXF3SIDH	set	3852
   115  0000                     _RXF3SIDL	set	3853
   116  0000                     _RXF3SIDLbits	set	3853
   117  0000                     _RXF4EIDH	set	3858
   118  0000                     _RXF4EIDL	set	3859
   119  0000                     _RXF4SIDH	set	3856
   120  0000                     _RXF4SIDL	set	3857
   121  0000                     _RXF4SIDLbits	set	3857
   122  0000                     _RXF5EIDH	set	3862
   123  0000                     _RXF5EIDL	set	3863
   124  0000                     _RXF5SIDH	set	3860
   125  0000                     _RXF5SIDL	set	3861
   126  0000                     _RXF5SIDLbits	set	3861
   127  0000                     _RXM0EIDH	set	3866
   128  0000                     _RXM0EIDL	set	3867
   129  0000                     _RXM0SIDH	set	3864
   130  0000                     _RXM0SIDL	set	3865
   131  0000                     _RXM0SIDLbits	set	3865
   132  0000                     _RXM1EIDH	set	3870
   133  0000                     _RXM1EIDL	set	3871
   134  0000                     _RXM1SIDH	set	3868
   135  0000                     _RXM1SIDL	set	3869
   136  0000                     _RXM1SIDLbits	set	3869
   137  0000                     _TXB0CONbits	set	3904
   138  0000                     _TXB0D0	set	3910
   139  0000                     _TXB0D1	set	3911
   140  0000                     _TXB0D2	set	3912
   141  0000                     _TXB0D3	set	3913
   142  0000                     _TXB0D4	set	3914
   143  0000                     _TXB0D5	set	3915
   144  0000                     _TXB0D6	set	3916
   145  0000                     _TXB0D7	set	3917
   146  0000                     _TXB0DLC	set	3909
   147  0000                     _TXB0DLCbits	set	3909
   148  0000                     _TXB0EIDH	set	3907
   149  0000                     _TXB0EIDL	set	3908
   150  0000                     _TXB0SIDH	set	3905
   151  0000                     _TXB0SIDL	set	3906
   152  0000                     _TXB0SIDLbits	set	3906
   153  0000                     _TXB1CONbits	set	3888
   154  0000                     _TXB1D0	set	3894
   155  0000                     _TXB1D1	set	3895
   156  0000                     _TXB1D2	set	3896
   157  0000                     _TXB1D3	set	3897
   158  0000                     _TXB1D4	set	3898
   159  0000                     _TXB1D5	set	3899
   160  0000                     _TXB1D6	set	3900
   161  0000                     _TXB1D7	set	3901
   162  0000                     _TXB1DLC	set	3893
   163  0000                     _TXB1DLCbits	set	3893
   164  0000                     _TXB1EIDH	set	3891
   165  0000                     _TXB1EIDL	set	3892
   166  0000                     _TXB1SIDH	set	3889
   167  0000                     _TXB1SIDL	set	3890
   168  0000                     _TXB1SIDLbits	set	3890
   169  0000                     _TXB2CONbits	set	3872
   170  0000                     _TXB2D0	set	3878
   171  0000                     _TXB2D1	set	3879
   172  0000                     _TXB2D2	set	3880
   173  0000                     _TXB2D3	set	3881
   174  0000                     _TXB2D4	set	3882
   175  0000                     _TXB2D5	set	3883
   176  0000                     _TXB2D6	set	3884
   177  0000                     _TXB2D7	set	3885
   178  0000                     _TXB2DLC	set	3877
   179  0000                     _TXB2DLCbits	set	3877
   180  0000                     _TXB2EIDH	set	3875
   181  0000                     _TXB2EIDL	set	3876
   182  0000                     _TXB2SIDH	set	3873
   183  0000                     _TXB2SIDL	set	3874
   184  0000                     _TXB2SIDLbits	set	3874
   185  0000                     _ADCON0	set	4034
   186  0000                     _ADCON0bits	set	4034
   187  0000                     _ADCON1	set	4033
   188  0000                     _ADCON2	set	4032
   189  0000                     _ADRESH	set	4036
   190  0000                     _ADRESL	set	4035
   191  0000                     _BRGCON1	set	3952
   192  0000                     _BRGCON2	set	3953
   193  0000                     _BRGCON2bits	set	3953
   194  0000                     _BRGCON3	set	3954
   195  0000                     _BRGCON3bits	set	3954
   196  0000                     _CANCON	set	3951
   197  0000                     _CANCONbits	set	3951
   198  0000                     _CANSTAT	set	3950
   199  0000                     _COMSTATbits	set	3956
   200  0000                     _INTCON2bits	set	4081
   201  0000                     _INTCONbits	set	4082
   202  0000                     _IPR2bits	set	4002
   203  0000                     _IPR3bits	set	4005
   204  0000                     _LATA	set	3977
   205  0000                     _LATB	set	3978
   206  0000                     _LATC	set	3979
   207  0000                     _LATD	set	3980
   208  0000                     _LATE	set	3981
   209  0000                     _PIE1bits	set	3997
   210  0000                     _PIE2bits	set	4000
   211  0000                     _PIE3bits	set	4003
   212  0000                     _PIR1bits	set	3998
   213  0000                     _PIR2bits	set	4001
   214  0000                     _PIR3bits	set	4004
   215  0000                     _PORTAbits	set	3968
   216  0000                     _PORTC	set	3970
   217  0000                     _PORTCbits	set	3970
   218  0000                     _RCONbits	set	4048
   219  0000                     _RXB0CON	set	3936
   220  0000                     _RXB0CONbits	set	3936
   221  0000                     _RXB0D0	set	3942
   222  0000                     _RXB0D1	set	3943
   223  0000                     _RXB0D2	set	3944
   224  0000                     _RXB0D3	set	3945
   225  0000                     _RXB0D4	set	3946
   226  0000                     _RXB0D5	set	3947
   227  0000                     _RXB0D6	set	3948
   228  0000                     _RXB0D7	set	3949
   229  0000                     _RXB0DLC	set	3941
   230  0000                     _RXB0DLCbits	set	3941
   231  0000                     _RXB0EIDH	set	3939
   232  0000                     _RXB0EIDL	set	3940
   233  0000                     _RXB0SIDH	set	3937
   234  0000                     _RXB0SIDL	set	3938
   235  0000                     _RXB0SIDLbits	set	3938
   236  0000                     _RXERRCNT	set	3957
   237  0000                     _T0CON	set	4053
   238  0000                     _T0CONbits	set	4053
   239  0000                     _T3CON	set	4017
   240  0000                     _TMR0H	set	4055
   241  0000                     _TMR0L	set	4054
   242  0000                     _TMR3H	set	4019
   243  0000                     _TMR3L	set	4018
   244  0000                     _TRISA	set	3986
   245  0000                     _TRISB	set	3987
   246  0000                     _TRISC	set	3988
   247  0000                     _TRISD	set	3989
   248  0000                     _TRISE	set	3990
   249  0000                     _TXERRCNT	set	3958
   250                           
   251                           ; #config settings
   252  0000                     
   253                           	psect	cinit
   254  003720                     __pcinit:
   255                           	opt stack 0
   256  003720                     start_initialization:
   257                           	opt stack 0
   258  003720                     __initialization:
   259                           	opt stack 0
   260                           
   261                           ; Clear objects allocated to BANK0 (42 bytes)
   262  003720  EE00  F0BD         	lfsr	0,__pbssBANK0
   263  003724  0E2A               	movlw	42
   264  003726                     clear_0:
   265  003726  6AEE               	clrf	postinc0,c
   266  003728  06E8               	decf	wreg,f,c
   267  00372A  E1FD               	bnz	clear_0
   268                           
   269                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   270  00372C  6A45               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   271                           
   272                           ; Clear objects allocated to COMRAM (35 bytes)
   273  00372E  EE00  F001         	lfsr	0,__pbssCOMRAM
   274  003732  0E23               	movlw	35
   275  003734                     clear_1:
   276  003734  6AEE               	clrf	postinc0,c
   277  003736  06E8               	decf	wreg,f,c
   278  003738  E1FD               	bnz	clear_1
   279                           
   280                           ; Initialize objects allocated to BANK0 (3 bytes)
   281                           ; load TBLPTR registers with __pidataBANK0
   282  00373A  0E46               	movlw	low __pidataBANK0
   283  00373C  6EF6               	movwf	tblptrl,c
   284  00373E  0E39               	movlw	high __pidataBANK0
   285  003740  6EF7               	movwf	tblptrh,c
   286  003742  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   287  003744  6EF8               	movwf	tblptru,c
   288  003746  0009               	tblrd		*+	;fetch initializer
   289  003748  CFF5 F0E7          	movff	tablat,__pdataBANK0
   290  00374C  0009               	tblrd		*+	;fetch initializer
   291  00374E  CFF5 F0E8          	movff	tablat,__pdataBANK0+1
   292  003752  0009               	tblrd		*+	;fetch initializer
   293  003754  CFF5 F0E9          	movff	tablat,__pdataBANK0+2
   294                           
   295                           ; Initialize objects allocated to COMRAM (2 bytes)
   296                           ; load TBLPTR registers with __pidataCOMRAM
   297  003758  0E49               	movlw	low __pidataCOMRAM
   298  00375A  6EF6               	movwf	tblptrl,c
   299  00375C  0E39               	movlw	high __pidataCOMRAM
   300  00375E  6EF7               	movwf	tblptrh,c
   301  003760  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   302  003762  6EF8               	movwf	tblptru,c
   303  003764  0009               	tblrd		*+	;fetch initializer
   304  003766  CFF5 F043          	movff	tablat,__pdataCOMRAM
   305  00376A  0009               	tblrd		*+	;fetch initializer
   306  00376C  CFF5 F044          	movff	tablat,__pdataCOMRAM+1
   307  003770                     end_of_initialization:
   308                           	opt stack 0
   309  003770                     __end_of__initialization:
   310                           	opt stack 0
   311  003770  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   312  003772  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   313  003774  0E00               	movlw	low (__Lmediumconst shr (0+16))
   314  003776  6EF8               	movwf	tblptru,c
   315  003778  0100               	movlb	0
   316  00377A  EFFE  F009         	goto	_main	;jump to C main() function
   317                           tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           
   324                           	psect	bitbssCOMRAM
   325  000228                     __pbitbssCOMRAM:
   326                           	opt stack 0
   327  000228                     _remote_frame:
   328                           	opt stack 0
   329  000228                     	ds	1
   330                           tblptru	equ	0xFF8
   331                           tblptrh	equ	0xFF7
   332                           tblptrl	equ	0xFF6
   333                           tablat	equ	0xFF5
   334                           postinc0	equ	0xFEE
   335                           wreg	equ	0xFE8
   336                           
   337                           	psect	bssCOMRAM
   338  000001                     __pbssCOMRAM:
   339                           	opt stack 0
   340  000001                     _counter:
   341                           	opt stack 0
   342  000001                     	ds	4
   343  000005                     _timeCounter:
   344                           	opt stack 0
   345  000005                     	ds	4
   346  000009                     _calibration:
   347                           	opt stack 0
   348  000009                     	ds	2
   349  00000B                     _limiteDx:
   350                           	opt stack 0
   351  00000B                     	ds	2
   352  00000D                     _periodo:
   353                           	opt stack 0
   354  00000D                     	ds	2
   355  00000F                     _timer1:
   356                           	opt stack 0
   357  00000F                     	ds	2
   358  000011                     _valore1:
   359                           	opt stack 0
   360  000011                     	ds	2
   361  000013                     _theorySteering:
   362                           	opt stack 0
   363  000013                     	ds	1
   364  000014                     _valore:
   365                           	opt stack 0
   366  000014                     	ds	1
   367  000015                     _msg:
   368                           	opt stack 0
   369  000015                     	ds	15
   370                           tblptru	equ	0xFF8
   371                           tblptrh	equ	0xFF7
   372                           tblptrl	equ	0xFF6
   373                           tablat	equ	0xFF5
   374                           postinc0	equ	0xFEE
   375                           wreg	equ	0xFE8
   376                           
   377                           	psect	dataCOMRAM
   378  000043                     __pdataCOMRAM:
   379                           	opt stack 0
   380  000043                     _limiteSx:
   381                           	opt stack 0
   382  000043                     	ds	2
   383                           tblptru	equ	0xFF8
   384                           tblptrh	equ	0xFF7
   385                           tblptrl	equ	0xFF6
   386                           tablat	equ	0xFF5
   387                           postinc0	equ	0xFEE
   388                           wreg	equ	0xFE8
   389                           
   390                           	psect	bssBANK0
   391  0000BD                     __pbssBANK0:
   392                           	opt stack 0
   393  0000BD                     _counter_array:
   394                           	opt stack 0
   395  0000BD                     	ds	8
   396  0000C5                     _currentSteering_array:
   397                           	opt stack 0
   398  0000C5                     	ds	8
   399  0000CD                     _duty_cycle:
   400                           	opt stack 0
   401  0000CD                     	ds	4
   402  0000D1                     _id:
   403                           	opt stack 0
   404  0000D1                     	ds	4
   405  0000D5                     _previousTimeCounter:
   406                           	opt stack 0
   407  0000D5                     	ds	4
   408  0000D9                     _timer:
   409                           	opt stack 0
   410  0000D9                     	ds	4
   411  0000DD                     _ADCResult:
   412                           	opt stack 0
   413  0000DD                     	ds	2
   414  0000DF                     _data_array:
   415                           	opt stack 0
   416  0000DF                     	ds	8
   417                           tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           postinc0	equ	0xFEE
   422                           wreg	equ	0xFE8
   423                           
   424                           	psect	dataBANK0
   425  0000E7                     __pdataBANK0:
   426                           	opt stack 0
   427  0000E7                     _currentSteering:
   428                           	opt stack 0
   429  0000E7                     	ds	1
   430  0000E8                     _delay_quartz_frequency_value:
   431                           	opt stack 0
   432  0000E8                     	ds	1
   433  0000E9                     _pastSteering:
   434                           	opt stack 0
   435  0000E9                     	ds	1
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           postinc0	equ	0xFEE
   441                           wreg	equ	0xFE8
   442                           
   443                           	psect	cstackBANK1
   444  000100                     __pcstackBANK1:
   445                           	opt stack 0
   446  000100                     ?___fladd:
   447                           	opt stack 0
   448  000100                     ___fladd@b:
   449                           	opt stack 0
   450                           
   451                           ; 4 bytes @ 0x0
   452  000100                     	ds	4
   453  000104                     ___fladd@a:
   454                           	opt stack 0
   455                           
   456                           ; 4 bytes @ 0x4
   457  000104                     	ds	4
   458  000108                     ??___fladd:
   459                           
   460                           ; 0 bytes @ 0x8
   461  000108                     	ds	8
   462  000110                     ?___fltol:
   463                           	opt stack 0
   464  000110                     ___fltol@f1:
   465                           	opt stack 0
   466                           
   467                           ; 4 bytes @ 0x10
   468  000110                     	ds	4
   469  000114                     ??___fltol:
   470                           
   471                           ; 0 bytes @ 0x14
   472  000114                     	ds	4
   473  000118                     ??_main:
   474                           
   475                           ; 0 bytes @ 0x18
   476  000118                     	ds	8
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           
   484                           	psect	cstackBANK0
   485  000060                     __pcstackBANK0:
   486                           	opt stack 0
   487  000060                     WriteTimer0@timer0:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x0
   491  000060                     	ds	2
   492  000062                     WriteTimer0@timer:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x2
   496  000062                     	ds	2
   497  000064                     ??_ISR_alta:
   498                           
   499                           ; 0 bytes @ 0x4
   500  000064                     	ds	15
   501  000073                     ?_ReadADC:
   502                           	opt stack 0
   503  000073                     ?___wmul:
   504                           	opt stack 0
   505  000073                     ?___lwdiv:
   506                           	opt stack 0
   507  000073                     ?___lmul:
   508                           	opt stack 0
   509  000073                     CANOperationMode@mode:
   510                           	opt stack 0
   511  000073                     _CANisTxReady$2913:
   512                           	opt stack 0
   513  000073                     OpenADC@config2:
   514                           	opt stack 0
   515  000073                     ___wmul@multiplier:
   516                           	opt stack 0
   517  000073                     ___lwdiv@dividend:
   518                           	opt stack 0
   519  000073                     CANsendMessage@identifier:
   520                           	opt stack 0
   521  000073                     CANSetMask@mask:
   522                           	opt stack 0
   523  000073                     CANSetFilter@filter:
   524                           	opt stack 0
   525  000073                     ___lmul@multiplier:
   526                           	opt stack 0
   527                           
   528                           ; 4 bytes @ 0x13
   529  000073                     	ds	1
   530  000074                     OpenADC@portconfig:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x14
   534  000074                     	ds	1
   535  000075                     ??_ReadADC:
   536  000075                     ??_OpenADC:
   537  000075                     ___wmul@multiplicand:
   538                           	opt stack 0
   539  000075                     ___lwdiv@divisor:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x15
   543  000075                     	ds	2
   544  000077                     CANSetMask@type:
   545                           	opt stack 0
   546  000077                     CANSetFilter@type:
   547                           	opt stack 0
   548  000077                     OpenADC@config:
   549                           	opt stack 0
   550  000077                     CANsendMessage@data:
   551                           	opt stack 0
   552  000077                     ___wmul@product:
   553                           	opt stack 0
   554  000077                     ___lwdiv@quotient:
   555                           	opt stack 0
   556  000077                     ___lmul@multiplicand:
   557                           	opt stack 0
   558                           
   559                           ; 4 bytes @ 0x17
   560  000077                     	ds	1
   561  000078                     ??_CANSetMask:
   562  000078                     ??_CANSetFilter:
   563                           
   564                           ; 0 bytes @ 0x18
   565  000078                     	ds	1
   566  000079                     CANsendMessage@dataLength:
   567                           	opt stack 0
   568  000079                     ___lwdiv@counter:
   569                           	opt stack 0
   570  000079                     delay_ms@value_ms:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x19
   574  000079                     	ds	1
   575  00007A                     CANsendMessage@flags:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x1A
   579  00007A                     	ds	1
   580  00007B                     ??_CANsendMessage:
   581  00007B                     ___lmul@product:
   582                           	opt stack 0
   583                           
   584                           ; 4 bytes @ 0x1B
   585  00007B                     	ds	1
   586  00007C                     CANSetMask@numBuffer:
   587                           	opt stack 0
   588  00007C                     CANSetFilter@numBuffer:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x1C
   592  00007C                     	ds	1
   593  00007D                     CANSetMask@tamp:
   594                           	opt stack 0
   595  00007D                     CANSetFilter@tamp:
   596                           	opt stack 0
   597                           
   598                           ; 4 bytes @ 0x1D
   599  00007D                     	ds	2
   600  00007F                     ?___lldiv:
   601                           	opt stack 0
   602  00007F                     CANsendMessage@tamp:
   603                           	opt stack 0
   604  00007F                     ___lldiv@dividend:
   605                           	opt stack 0
   606                           
   607                           ; 4 bytes @ 0x1F
   608  00007F                     	ds	2
   609  000081                     CANInitialize@phaseSeg1:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x21
   613  000081                     	ds	1
   614  000082                     CANInitialize@phaseSeg2:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x22
   618  000082                     	ds	1
   619  000083                     CANInitialize@SJW:
   620                           	opt stack 0
   621  000083                     ___lldiv@divisor:
   622                           	opt stack 0
   623                           
   624                           ; 4 bytes @ 0x23
   625  000083                     	ds	1
   626  000084                     CANInitialize@BRP:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0x24
   630  000084                     	ds	1
   631  000085                     CANInitialize@flags:
   632                           	opt stack 0
   633                           
   634                           ; 1 bytes @ 0x25
   635  000085                     	ds	1
   636  000086                     ??_CANInitialize:
   637                           
   638                           ; 0 bytes @ 0x26
   639  000086                     	ds	1
   640  000087                     ___lldiv@quotient:
   641                           	opt stack 0
   642                           
   643                           ; 4 bytes @ 0x27
   644  000087                     	ds	3
   645  00008A                     CANInitialize@propSeg:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x2A
   649  00008A                     	ds	1
   650  00008B                     CANInitialize@FilterConfig1:
   651                           	opt stack 0
   652  00008B                     ___lldiv@counter:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0x2B
   656  00008B                     	ds	1
   657  00008C                     ?___xxtofl:
   658                           	opt stack 0
   659  00008C                     CANInitialize@FilterConfig2:
   660                           	opt stack 0
   661  00008C                     ___xxtofl@val:
   662                           	opt stack 0
   663                           
   664                           ; 4 bytes @ 0x2C
   665  00008C                     	ds	1
   666  00008D                     
   667                           ; 0 bytes @ 0x2D
   668  00008D                     	ds	3
   669  000090                     ??___xxtofl:
   670                           
   671                           ; 0 bytes @ 0x30
   672  000090                     	ds	4
   673  000094                     ___xxtofl@sign:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x34
   677  000094                     	ds	1
   678  000095                     ___xxtofl@exp:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x35
   682  000095                     	ds	1
   683  000096                     ___xxtofl@arg:
   684                           	opt stack 0
   685                           
   686                           ; 4 bytes @ 0x36
   687  000096                     	ds	4
   688  00009A                     ?___fldiv:
   689                           	opt stack 0
   690  00009A                     ?___flmul:
   691                           	opt stack 0
   692  00009A                     ___fldiv@b:
   693                           	opt stack 0
   694  00009A                     ___flmul@b:
   695                           	opt stack 0
   696                           
   697                           ; 4 bytes @ 0x3A
   698  00009A                     	ds	4
   699  00009E                     ___fldiv@a:
   700                           	opt stack 0
   701  00009E                     ___flmul@a:
   702                           	opt stack 0
   703                           
   704                           ; 4 bytes @ 0x3E
   705  00009E                     	ds	4
   706  0000A2                     ??___fldiv:
   707  0000A2                     ??___flmul:
   708                           
   709                           ; 0 bytes @ 0x42
   710  0000A2                     	ds	4
   711  0000A6                     ___fldiv@sign:
   712                           	opt stack 0
   713  0000A6                     ___flmul@sign:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0x46
   717  0000A6                     	ds	1
   718  0000A7                     ___fldiv@rem:
   719                           	opt stack 0
   720  0000A7                     ___flmul@grs:
   721                           	opt stack 0
   722                           
   723                           ; 4 bytes @ 0x47
   724  0000A7                     	ds	4
   725  0000AB                     ___flmul@aexp:
   726                           	opt stack 0
   727  0000AB                     ___fldiv@new_exp:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x4B
   731  0000AB                     	ds	1
   732  0000AC                     ___flmul@bexp:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0x4C
   736  0000AC                     	ds	1
   737  0000AD                     ___fldiv@grs:
   738                           	opt stack 0
   739  0000AD                     ___flmul@prod:
   740                           	opt stack 0
   741                           
   742                           ; 4 bytes @ 0x4D
   743  0000AD                     	ds	4
   744  0000B1                     ___fldiv@bexp:
   745                           	opt stack 0
   746  0000B1                     ___flmul@temp:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x51
   750  0000B1                     	ds	1
   751  0000B2                     ___fldiv@aexp:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0x52
   755  0000B2                     	ds	1
   756  0000B3                     ?___flneg:
   757                           	opt stack 0
   758  0000B3                     ___flneg@f1:
   759                           	opt stack 0
   760                           
   761                           ; 4 bytes @ 0x53
   762  0000B3                     	ds	4
   763  0000B7                     ___fladd@signs:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x57
   767  0000B7                     	ds	1
   768  0000B8                     ___fladd@aexp:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x58
   772  0000B8                     	ds	1
   773  0000B9                     ___fladd@bexp:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x59
   777  0000B9                     	ds	1
   778  0000BA                     ___fladd@grs:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x5A
   782  0000BA                     	ds	1
   783  0000BB                     ___fltol@sign1:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0x5B
   787  0000BB                     	ds	1
   788  0000BC                     ___fltol@exp1:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0x5C
   792  0000BC                     	ds	1
   793                           tblptru	equ	0xFF8
   794                           tblptrh	equ	0xFF7
   795                           tblptrl	equ	0xFF6
   796                           tablat	equ	0xFF5
   797                           postinc0	equ	0xFEE
   798                           wreg	equ	0xFE8
   799                           
   800                           	psect	cstackCOMRAM
   801  000024                     __pcstackCOMRAM:
   802                           	opt stack 0
   803  000024                     _CANisRxReady$2915:
   804                           	opt stack 0
   805  000024                     CANreceiveMessage@msg:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x0
   809  000024                     	ds	2
   810  000026                     ??_CANreceiveMessage:
   811                           
   812                           ; 0 bytes @ 0x2
   813  000026                     	ds	8
   814  00002E                     CANreceiveMessage@error:
   815                           	opt stack 0
   816                           
   817                           ; 1 bytes @ 0xA
   818  00002E                     	ds	1
   819  00002F                     CANreceiveMessage@tamp:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0xB
   823  00002F                     	ds	1
   824  000030                     ??_ISR_bassa:
   825                           
   826                           ; 0 bytes @ 0xC
   827  000030                     	ds	19
   828                           tblptru	equ	0xFF8
   829                           tblptrh	equ	0xFF7
   830                           tblptrl	equ	0xFF6
   831                           tablat	equ	0xFF5
   832                           postinc0	equ	0xFEE
   833                           wreg	equ	0xFE8
   834                           
   835 ;;
   836 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   837 ;;
   838 ;; *************** function _main *****************
   839 ;; Defined at:
   840 ;;		line 106 in file "newmain.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  2  649[None  ] int 
   847 ;; Registers used:
   848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   854 ;;      Params:         0       0       0       0
   855 ;;      Locals:         0       0       0       0
   856 ;;      Temps:          0       0       8       0
   857 ;;      Totals:         0       0       8       0
   858 ;;Total ram usage:        8 bytes
   859 ;; Hardware stack levels required when called:    7
   860 ;; This function calls:
   861 ;;		_CANisRXwarningON
   862 ;;		_CANisTXwarningON
   863 ;;		___fladd
   864 ;;		___fldiv
   865 ;;		___flmul
   866 ;;		___flneg
   867 ;;		___fltol
   868 ;;		___lldiv
   869 ;;		___lmul
   870 ;;		___xxtofl
   871 ;;		_calibrazione
   872 ;;		_configurazione_iniziale
   873 ;;		_delay_ms
   874 ;;		_send_data
   875 ;; This function is called by:
   876 ;;		Startup code after reset
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text0
   881  0013FC                     __ptext0:
   882                           	opt stack 0
   883  0013FC                     _main:
   884                           	opt stack 24
   885                           
   886                           ;newmain.c: 107: configurazione_iniziale();
   887                           
   888                           ;incstack = 0
   889  0013FC  ECB1  F019         	call	_configurazione_iniziale	;wreg free
   890                           
   891                           ;newmain.c: 108: PORTC = 0xFF;
   892  001400  6882               	setf	3970,c	;volatile
   893                           
   894                           ;newmain.c: 109: delay_ms(100);
   895  001402  0E00               	movlw	0
   896  001404  0100               	movlb	0	; () banked
   897  001406  6F7A               	movwf	(delay_ms@value_ms+1)& (0+255),b
   898  001408  0E64               	movlw	100
   899  00140A  6F79               	movwf	delay_ms@value_ms& (0+255),b
   900  00140C  EC01  F01C         	call	_delay_ms	;wreg free
   901                           
   902                           ;newmain.c: 110: PORTC = 0x00;
   903  001410  0E00               	movlw	0
   904  001412  6E82               	movwf	3970,c	;volatile
   905                           
   906                           ;newmain.c: 111: delay_ms(100);
   907  001414  0E00               	movlw	0
   908  001416  0100               	movlb	0	; () banked
   909  001418  6F7A               	movwf	(delay_ms@value_ms+1)& (0+255),b
   910  00141A  0E64               	movlw	100
   911  00141C  6F79               	movwf	delay_ms@value_ms& (0+255),b
   912  00141E  EC01  F01C         	call	_delay_ms	;wreg free
   913                           
   914                           ;newmain.c: 113: TMR0H = 0xdd;
   915  001422  0EDD               	movlw	221
   916  001424  6ED7               	movwf	4055,c	;volatile
   917                           
   918                           ;newmain.c: 114: TMR0L = 0xa0;
   919  001426  0EA0               	movlw	160
   920  001428  6ED6               	movwf	4054,c	;volatile
   921                           
   922                           ;newmain.c: 115: T0CONbits.TMR0ON = 1;
   923  00142A  8ED5               	bsf	4053,7,c	;volatile
   924                           
   925                           ;newmain.c: 116: periodo = 0x4588;
   926  00142C  0E45               	movlw	69
   927  00142E  6E0E               	movwf	_periodo+1,c
   928  001430  0E88               	movlw	136
   929  001432  6E0D               	movwf	_periodo,c
   930  001434                     l5139:
   931                           
   932                           ;newmain.c: 119: calibrazione();
   933  001434  ECBF  F01B         	call	_calibrazione	;wreg free
   934                           
   935                           ;newmain.c: 120: if (timeCounter - previousTimeCounter > 2) {
   936  001438  C0D5  F118         	movff	_previousTimeCounter,??_main
   937  00143C  C0D6  F119         	movff	_previousTimeCounter+1,??_main+1
   938  001440  C0D7  F11A         	movff	_previousTimeCounter+2,??_main+2
   939  001444  C0D8  F11B         	movff	_previousTimeCounter+3,??_main+3
   940  001448  0101               	movlb	1	; () banked
   941  00144A  1F18               	comf	??_main& (0+255),f,b
   942  00144C  1F19               	comf	(??_main+1)& (0+255),f,b
   943  00144E  1F1A               	comf	(??_main+2)& (0+255),f,b
   944  001450  1F1B               	comf	(??_main+3)& (0+255),f,b
   945  001452  2B18               	incf	??_main& (0+255),f,b
   946  001454  0E00               	movlw	0
   947  001456  2319               	addwfc	(??_main+1)& (0+255),f,b
   948  001458  231A               	addwfc	(??_main+2)& (0+255),f,b
   949  00145A  231B               	addwfc	(??_main+3)& (0+255),f,b
   950  00145C  5005               	movf	_timeCounter,w,c
   951  00145E  0101               	movlb	1	; () banked
   952  001460  2518               	addwf	??_main& (0+255),w,b
   953  001462  0101               	movlb	1	; () banked
   954  001464  6F1C               	movwf	(??_main+4)& (0+255),b
   955  001466  5006               	movf	_timeCounter+1,w,c
   956  001468  0101               	movlb	1	; () banked
   957  00146A  2119               	addwfc	(??_main+1)& (0+255),w,b
   958  00146C  0101               	movlb	1	; () banked
   959  00146E  6F1D               	movwf	(??_main+5)& (0+255),b
   960  001470  5007               	movf	_timeCounter+2,w,c
   961  001472  0101               	movlb	1	; () banked
   962  001474  211A               	addwfc	(??_main+2)& (0+255),w,b
   963  001476  0101               	movlb	1	; () banked
   964  001478  6F1E               	movwf	(??_main+6)& (0+255),b
   965  00147A  5008               	movf	_timeCounter+3,w,c
   966  00147C  0101               	movlb	1	; () banked
   967  00147E  211B               	addwfc	(??_main+3)& (0+255),w,b
   968  001480  0101               	movlb	1	; () banked
   969  001482  6F1F               	movwf	(??_main+7)& (0+255),b
   970  001484  0101               	movlb	1	; () banked
   971  001486  511F               	movf	(??_main+7)& (0+255),w,b
   972  001488  0101               	movlb	1	; () banked
   973  00148A  111E               	iorwf	(??_main+6)& (0+255),w,b
   974  00148C  0101               	movlb	1	; () banked
   975  00148E  111D               	iorwf	(??_main+5)& (0+255),w,b
   976  001490  E105               	bnz	u6720
   977  001492  0E03               	movlw	3
   978  001494  0101               	movlb	1	; () banked
   979  001496  5D1C               	subwf	(??_main+4)& (0+255),w,b
   980  001498  A0D8               	btfss	status,0,c
   981  00149A  D126               	goto	l5173
   982  00149C                     u6720:
   983                           
   984                           ; BSR set to: 1
   985                           ;newmain.c: 121: if (currentSteering - pastSteering >0){
   986  00149C  0100               	movlb	0	; () banked
   987  00149E  51E9               	movf	_pastSteering& (0+255),w,b
   988  0014A0  0101               	movlb	1	; () banked
   989  0014A2  6F18               	movwf	??_main& (0+255),b
   990  0014A4  6B19               	clrf	(??_main+1)& (0+255),b
   991  0014A6  0101               	movlb	1	; () banked
   992  0014A8  1F18               	comf	??_main& (0+255),f,b
   993  0014AA  1F19               	comf	(??_main+1)& (0+255),f,b
   994  0014AC  4B18               	infsnz	??_main& (0+255),f,b
   995  0014AE  2B19               	incf	(??_main+1)& (0+255),f,b
   996  0014B0  0100               	movlb	0	; () banked
   997  0014B2  51E7               	movf	_currentSteering& (0+255),w,b
   998  0014B4  0101               	movlb	1	; () banked
   999  0014B6  6F1A               	movwf	(??_main+2)& (0+255),b
  1000  0014B8  6B1B               	clrf	(??_main+3)& (0+255),b
  1001  0014BA  0101               	movlb	1	; () banked
  1002  0014BC  5118               	movf	??_main& (0+255),w,b
  1003  0014BE  0101               	movlb	1	; () banked
  1004  0014C0  271A               	addwf	(??_main+2)& (0+255),f,b
  1005  0014C2  0101               	movlb	1	; () banked
  1006  0014C4  5119               	movf	(??_main+1)& (0+255),w,b
  1007  0014C6  0101               	movlb	1	; () banked
  1008  0014C8  231B               	addwfc	(??_main+3)& (0+255),f,b
  1009  0014CA  0101               	movlb	1	; () banked
  1010  0014CC  BF1B               	btfsc	(??_main+3)& (0+255),7,b
  1011  0014CE  D081               	goto	l5157
  1012  0014D0  0101               	movlb	1	; () banked
  1013  0014D2  511B               	movf	(??_main+3)& (0+255),w,b
  1014  0014D4  E104               	bnz	u6730
  1015  0014D6  0101               	movlb	1	; () banked
  1016  0014D8  051A               	decf	(??_main+2)& (0+255),w,b
  1017  0014DA  A0D8               	btfss	status,0,c
  1018  0014DC  D07A               	goto	l5157
  1019  0014DE                     u6730:
  1020                           
  1021                           ; BSR set to: 1
  1022                           ;newmain.c: 122: if (currentSteering - pastSteering > 50) {
  1023  0014DE  0100               	movlb	0	; () banked
  1024  0014E0  51E9               	movf	_pastSteering& (0+255),w,b
  1025  0014E2  0101               	movlb	1	; () banked
  1026  0014E4  6F18               	movwf	??_main& (0+255),b
  1027  0014E6  6B19               	clrf	(??_main+1)& (0+255),b
  1028  0014E8  0101               	movlb	1	; () banked
  1029  0014EA  1F18               	comf	??_main& (0+255),f,b
  1030  0014EC  1F19               	comf	(??_main+1)& (0+255),f,b
  1031  0014EE  4B18               	infsnz	??_main& (0+255),f,b
  1032  0014F0  2B19               	incf	(??_main+1)& (0+255),f,b
  1033  0014F2  0100               	movlb	0	; () banked
  1034  0014F4  51E7               	movf	_currentSteering& (0+255),w,b
  1035  0014F6  0101               	movlb	1	; () banked
  1036  0014F8  6F1A               	movwf	(??_main+2)& (0+255),b
  1037  0014FA  6B1B               	clrf	(??_main+3)& (0+255),b
  1038  0014FC  0101               	movlb	1	; () banked
  1039  0014FE  5118               	movf	??_main& (0+255),w,b
  1040  001500  0101               	movlb	1	; () banked
  1041  001502  271A               	addwf	(??_main+2)& (0+255),f,b
  1042  001504  0101               	movlb	1	; () banked
  1043  001506  5119               	movf	(??_main+1)& (0+255),w,b
  1044  001508  0101               	movlb	1	; () banked
  1045  00150A  231B               	addwfc	(??_main+3)& (0+255),f,b
  1046  00150C  0101               	movlb	1	; () banked
  1047  00150E  BF1B               	btfsc	(??_main+3)& (0+255),7,b
  1048  001510  D00A               	goto	l5149
  1049  001512  0101               	movlb	1	; () banked
  1050  001514  511B               	movf	(??_main+3)& (0+255),w,b
  1051  001516  E105               	bnz	u6740
  1052  001518  0E33               	movlw	51
  1053  00151A  0101               	movlb	1	; () banked
  1054  00151C  5D1A               	subwf	(??_main+2)& (0+255),w,b
  1055  00151E  A0D8               	btfss	status,0,c
  1056  001520  D002               	goto	l5149
  1057  001522                     u6740:
  1058                           
  1059                           ; BSR set to: 1
  1060                           ;newmain.c: 123: duty_cycle = duty_cycle + 20;
  1061  001522  0E14               	movlw	20
  1062  001524  D023               	goto	L1
  1063  001526                     l5149:
  1064                           
  1065                           ;newmain.c: 125: if (currentSteering - pastSteering > 20) {
  1066  001526  0100               	movlb	0	; () banked
  1067  001528  51E9               	movf	_pastSteering& (0+255),w,b
  1068  00152A  0101               	movlb	1	; () banked
  1069  00152C  6F18               	movwf	??_main& (0+255),b
  1070  00152E  6B19               	clrf	(??_main+1)& (0+255),b
  1071  001530  0101               	movlb	1	; () banked
  1072  001532  1F18               	comf	??_main& (0+255),f,b
  1073  001534  1F19               	comf	(??_main+1)& (0+255),f,b
  1074  001536  4B18               	infsnz	??_main& (0+255),f,b
  1075  001538  2B19               	incf	(??_main+1)& (0+255),f,b
  1076  00153A  0100               	movlb	0	; () banked
  1077  00153C  51E7               	movf	_currentSteering& (0+255),w,b
  1078  00153E  0101               	movlb	1	; () banked
  1079  001540  6F1A               	movwf	(??_main+2)& (0+255),b
  1080  001542  6B1B               	clrf	(??_main+3)& (0+255),b
  1081  001544  0101               	movlb	1	; () banked
  1082  001546  5118               	movf	??_main& (0+255),w,b
  1083  001548  0101               	movlb	1	; () banked
  1084  00154A  271A               	addwf	(??_main+2)& (0+255),f,b
  1085  00154C  0101               	movlb	1	; () banked
  1086  00154E  5119               	movf	(??_main+1)& (0+255),w,b
  1087  001550  0101               	movlb	1	; () banked
  1088  001552  231B               	addwfc	(??_main+3)& (0+255),f,b
  1089  001554  0101               	movlb	1	; () banked
  1090  001556  BF1B               	btfsc	(??_main+3)& (0+255),7,b
  1091  001558  D019               	goto	l5153
  1092  00155A  0101               	movlb	1	; () banked
  1093  00155C  511B               	movf	(??_main+3)& (0+255),w,b
  1094  00155E  E105               	bnz	u6750
  1095  001560  0E15               	movlw	21
  1096  001562  0101               	movlb	1	; () banked
  1097  001564  5D1A               	subwf	(??_main+2)& (0+255),w,b
  1098  001566  A0D8               	btfss	status,0,c
  1099  001568  D011               	goto	l5153
  1100  00156A                     u6750:
  1101                           
  1102                           ; BSR set to: 1
  1103                           ;newmain.c: 126: duty_cycle = duty_cycle + 5;
  1104  00156A  0E05               	movlw	5
  1105  00156C                     L1:
  1106  00156C  0100               	movlb	0	; () banked
  1107  00156E  25CD               	addwf	_duty_cycle& (0+255),w,b
  1108  001570  0100               	movlb	0	; () banked
  1109  001572  6FCD               	movwf	_duty_cycle& (0+255),b
  1110  001574  0E00               	movlw	0
  1111  001576  0100               	movlb	0	; () banked
  1112  001578  21CE               	addwfc	(_duty_cycle+1)& (0+255),w,b
  1113  00157A  0100               	movlb	0	; () banked
  1114  00157C  6FCE               	movwf	(_duty_cycle+1)& (0+255),b
  1115  00157E  0E00               	movlw	0
  1116  001580  0100               	movlb	0	; () banked
  1117  001582  21CF               	addwfc	(_duty_cycle+2)& (0+255),w,b
  1118  001584  0100               	movlb	0	; () banked
  1119  001586  6FCF               	movwf	(_duty_cycle+2)& (0+255),b
  1120  001588  0E00               	movlw	0
  1121  00158A  D047               	goto	L2
  1122  00158C                     l5153:
  1123                           
  1124                           ;newmain.c: 128: if (currentSteering - pastSteering < 5) {
  1125  00158C  0100               	movlb	0	; () banked
  1126  00158E  51E9               	movf	_pastSteering& (0+255),w,b
  1127  001590  0101               	movlb	1	; () banked
  1128  001592  6F18               	movwf	??_main& (0+255),b
  1129  001594  6B19               	clrf	(??_main+1)& (0+255),b
  1130  001596  0101               	movlb	1	; () banked
  1131  001598  1F18               	comf	??_main& (0+255),f,b
  1132  00159A  1F19               	comf	(??_main+1)& (0+255),f,b
  1133  00159C  4B18               	infsnz	??_main& (0+255),f,b
  1134  00159E  2B19               	incf	(??_main+1)& (0+255),f,b
  1135  0015A0  0100               	movlb	0	; () banked
  1136  0015A2  51E7               	movf	_currentSteering& (0+255),w,b
  1137  0015A4  0101               	movlb	1	; () banked
  1138  0015A6  6F1A               	movwf	(??_main+2)& (0+255),b
  1139  0015A8  6B1B               	clrf	(??_main+3)& (0+255),b
  1140  0015AA  0101               	movlb	1	; () banked
  1141  0015AC  5118               	movf	??_main& (0+255),w,b
  1142  0015AE  0101               	movlb	1	; () banked
  1143  0015B0  271A               	addwf	(??_main+2)& (0+255),f,b
  1144  0015B2  0101               	movlb	1	; () banked
  1145  0015B4  5119               	movf	(??_main+1)& (0+255),w,b
  1146  0015B6  0101               	movlb	1	; () banked
  1147  0015B8  231B               	addwfc	(??_main+3)& (0+255),f,b
  1148  0015BA  0101               	movlb	1	; () banked
  1149  0015BC  BF1B               	btfsc	(??_main+3)& (0+255),7,b
  1150  0015BE  D083               	goto	l5167
  1151  0015C0  0101               	movlb	1	; () banked
  1152  0015C2  511B               	movf	(??_main+3)& (0+255),w,b
  1153  0015C4  E104               	bnz	u6761
  1154  0015C6  0E05               	movlw	5
  1155  0015C8  0101               	movlb	1	; () banked
  1156  0015CA  5D1A               	subwf	(??_main+2)& (0+255),w,b
  1157  0015CC  B0D8               	btfsc	status,0,c
  1158  0015CE                     u6761:
  1159  0015CE  D082               	goto	l5169
  1160  0015D0  D07A               	goto	l5167
  1161  0015D2                     l5157:
  1162                           
  1163                           ;newmain.c: 134: else{
  1164                           ;newmain.c: 135: if (pastSteering - currentSteering > 50) {
  1165  0015D2  0100               	movlb	0	; () banked
  1166  0015D4  51E7               	movf	_currentSteering& (0+255),w,b
  1167  0015D6  0101               	movlb	1	; () banked
  1168  0015D8  6F18               	movwf	??_main& (0+255),b
  1169  0015DA  6B19               	clrf	(??_main+1)& (0+255),b
  1170  0015DC  0101               	movlb	1	; () banked
  1171  0015DE  1F18               	comf	??_main& (0+255),f,b
  1172  0015E0  1F19               	comf	(??_main+1)& (0+255),f,b
  1173  0015E2  4B18               	infsnz	??_main& (0+255),f,b
  1174  0015E4  2B19               	incf	(??_main+1)& (0+255),f,b
  1175  0015E6  0100               	movlb	0	; () banked
  1176  0015E8  51E9               	movf	_pastSteering& (0+255),w,b
  1177  0015EA  0101               	movlb	1	; () banked
  1178  0015EC  6F1A               	movwf	(??_main+2)& (0+255),b
  1179  0015EE  6B1B               	clrf	(??_main+3)& (0+255),b
  1180  0015F0  0101               	movlb	1	; () banked
  1181  0015F2  5118               	movf	??_main& (0+255),w,b
  1182  0015F4  0101               	movlb	1	; () banked
  1183  0015F6  271A               	addwf	(??_main+2)& (0+255),f,b
  1184  0015F8  0101               	movlb	1	; () banked
  1185  0015FA  5119               	movf	(??_main+1)& (0+255),w,b
  1186  0015FC  0101               	movlb	1	; () banked
  1187  0015FE  231B               	addwfc	(??_main+3)& (0+255),f,b
  1188  001600  0101               	movlb	1	; () banked
  1189  001602  BF1B               	btfsc	(??_main+3)& (0+255),7,b
  1190  001604  D00F               	goto	l5161
  1191  001606  0101               	movlb	1	; () banked
  1192  001608  511B               	movf	(??_main+3)& (0+255),w,b
  1193  00160A  E105               	bnz	u6770
  1194  00160C  0E33               	movlw	51
  1195  00160E  0101               	movlb	1	; () banked
  1196  001610  5D1A               	subwf	(??_main+2)& (0+255),w,b
  1197  001612  A0D8               	btfss	status,0,c
  1198  001614  D007               	goto	l5161
  1199  001616                     u6770:
  1200                           
  1201                           ; BSR set to: 1
  1202                           ;newmain.c: 136: duty_cycle = duty_cycle - 20;
  1203  001616  0EEC               	movlw	236
  1204  001618  D028               	goto	L3
  1205  00161A                     L2:
  1206  00161A  0100               	movlb	0	; () banked
  1207  00161C  21D0               	addwfc	(_duty_cycle+3)& (0+255),w,b
  1208  00161E  0100               	movlb	0	; () banked
  1209  001620  6FD0               	movwf	(_duty_cycle+3)& (0+255),b
  1210                           
  1211                           ;newmain.c: 137: } else {
  1212  001622  D058               	goto	l5169
  1213  001624                     l5161:
  1214                           
  1215                           ;newmain.c: 138: if (pastSteering - currentSteering > 20) {
  1216  001624  0100               	movlb	0	; () banked
  1217  001626  51E7               	movf	_currentSteering& (0+255),w,b
  1218  001628  0101               	movlb	1	; () banked
  1219  00162A  6F18               	movwf	??_main& (0+255),b
  1220  00162C  6B19               	clrf	(??_main+1)& (0+255),b
  1221  00162E  0101               	movlb	1	; () banked
  1222  001630  1F18               	comf	??_main& (0+255),f,b
  1223  001632  1F19               	comf	(??_main+1)& (0+255),f,b
  1224  001634  4B18               	infsnz	??_main& (0+255),f,b
  1225  001636  2B19               	incf	(??_main+1)& (0+255),f,b
  1226  001638  0100               	movlb	0	; () banked
  1227  00163A  51E9               	movf	_pastSteering& (0+255),w,b
  1228  00163C  0101               	movlb	1	; () banked
  1229  00163E  6F1A               	movwf	(??_main+2)& (0+255),b
  1230  001640  6B1B               	clrf	(??_main+3)& (0+255),b
  1231  001642  0101               	movlb	1	; () banked
  1232  001644  5118               	movf	??_main& (0+255),w,b
  1233  001646  0101               	movlb	1	; () banked
  1234  001648  271A               	addwf	(??_main+2)& (0+255),f,b
  1235  00164A  0101               	movlb	1	; () banked
  1236  00164C  5119               	movf	(??_main+1)& (0+255),w,b
  1237  00164E  0101               	movlb	1	; () banked
  1238  001650  231B               	addwfc	(??_main+3)& (0+255),f,b
  1239  001652  0101               	movlb	1	; () banked
  1240  001654  BF1B               	btfsc	(??_main+3)& (0+255),7,b
  1241  001656  D019               	goto	l5165
  1242  001658  0101               	movlb	1	; () banked
  1243  00165A  511B               	movf	(??_main+3)& (0+255),w,b
  1244  00165C  E105               	bnz	u6780
  1245  00165E  0E15               	movlw	21
  1246  001660  0101               	movlb	1	; () banked
  1247  001662  5D1A               	subwf	(??_main+2)& (0+255),w,b
  1248  001664  A0D8               	btfss	status,0,c
  1249  001666  D011               	goto	l5165
  1250  001668                     u6780:
  1251                           
  1252                           ; BSR set to: 1
  1253                           ;newmain.c: 139: duty_cycle = duty_cycle - 5;
  1254  001668  0EFB               	movlw	251
  1255  00166A                     L3:
  1256  00166A  0100               	movlb	0	; () banked
  1257  00166C  25CD               	addwf	_duty_cycle& (0+255),w,b
  1258  00166E  0100               	movlb	0	; () banked
  1259  001670  6FCD               	movwf	_duty_cycle& (0+255),b
  1260  001672  0EFF               	movlw	255
  1261  001674  0100               	movlb	0	; () banked
  1262  001676  21CE               	addwfc	(_duty_cycle+1)& (0+255),w,b
  1263  001678  0100               	movlb	0	; () banked
  1264  00167A  6FCE               	movwf	(_duty_cycle+1)& (0+255),b
  1265  00167C  0EFF               	movlw	255
  1266  00167E  0100               	movlb	0	; () banked
  1267  001680  21CF               	addwfc	(_duty_cycle+2)& (0+255),w,b
  1268  001682  0100               	movlb	0	; () banked
  1269  001684  6FCF               	movwf	(_duty_cycle+2)& (0+255),b
  1270  001686  0EFF               	movlw	255
  1271  001688  D7C8               	goto	L2
  1272  00168A                     l5165:
  1273                           
  1274                           ;newmain.c: 141: if (pastSteering - currentSteering < 5) {
  1275  00168A  0100               	movlb	0	; () banked
  1276  00168C  51E7               	movf	_currentSteering& (0+255),w,b
  1277  00168E  0101               	movlb	1	; () banked
  1278  001690  6F18               	movwf	??_main& (0+255),b
  1279  001692  6B19               	clrf	(??_main+1)& (0+255),b
  1280  001694  0101               	movlb	1	; () banked
  1281  001696  1F18               	comf	??_main& (0+255),f,b
  1282  001698  1F19               	comf	(??_main+1)& (0+255),f,b
  1283  00169A  4B18               	infsnz	??_main& (0+255),f,b
  1284  00169C  2B19               	incf	(??_main+1)& (0+255),f,b
  1285  00169E  0100               	movlb	0	; () banked
  1286  0016A0  51E9               	movf	_pastSteering& (0+255),w,b
  1287  0016A2  0101               	movlb	1	; () banked
  1288  0016A4  6F1A               	movwf	(??_main+2)& (0+255),b
  1289  0016A6  6B1B               	clrf	(??_main+3)& (0+255),b
  1290  0016A8  0101               	movlb	1	; () banked
  1291  0016AA  5118               	movf	??_main& (0+255),w,b
  1292  0016AC  0101               	movlb	1	; () banked
  1293  0016AE  271A               	addwf	(??_main+2)& (0+255),f,b
  1294  0016B0  0101               	movlb	1	; () banked
  1295  0016B2  5119               	movf	(??_main+1)& (0+255),w,b
  1296  0016B4  0101               	movlb	1	; () banked
  1297  0016B6  231B               	addwfc	(??_main+3)& (0+255),f,b
  1298  0016B8  0101               	movlb	1	; () banked
  1299  0016BA  BF1B               	btfsc	(??_main+3)& (0+255),7,b
  1300  0016BC  D004               	goto	l5167
  1301  0016BE  0101               	movlb	1	; () banked
  1302  0016C0  511B               	movf	(??_main+3)& (0+255),w,b
  1303  0016C2  E108               	bnz	l5169
  1304  0016C4  D780               	goto	L4
  1305  0016C6                     l5167:
  1306                           
  1307                           ; BSR set to: 1
  1308                           ;newmain.c: 142: duty_cycle = currentSteering;
  1309  0016C6  0100               	movlb	0	; () banked
  1310  0016C8  51E7               	movf	_currentSteering& (0+255),w,b
  1311  0016CA  0100               	movlb	0	; () banked
  1312  0016CC  6FCD               	movwf	_duty_cycle& (0+255),b
  1313  0016CE  6BCE               	clrf	(_duty_cycle+1)& (0+255),b
  1314  0016D0  6BCF               	clrf	(_duty_cycle+2)& (0+255),b
  1315  0016D2  6BD0               	clrf	(_duty_cycle+3)& (0+255),b
  1316  0016D4                     l5169:
  1317                           
  1318                           ;newmain.c: 143: }
  1319                           ;newmain.c: 144: }
  1320                           ;newmain.c: 145: }
  1321                           ;newmain.c: 146: }
  1322                           ;newmain.c: 147: pastSteering = duty_cycle;
  1323  0016D4  C0CD  F0E9         	movff	_duty_cycle,_pastSteering
  1324                           
  1325                           ;newmain.c: 148: previousTimeCounter = timeCounter;
  1326  0016D8  C005  F0D5         	movff	_timeCounter,_previousTimeCounter
  1327  0016DC  C006  F0D6         	movff	_timeCounter+1,_previousTimeCounter+1
  1328  0016E0  C007  F0D7         	movff	_timeCounter+2,_previousTimeCounter+2
  1329  0016E4  C008  F0D8         	movff	_timeCounter+3,_previousTimeCounter+3
  1330  0016E8                     l5173:
  1331                           
  1332                           ;newmain.c: 149: }
  1333                           ;newmain.c: 150: if (PORTCbits.RC0 == 0) {
  1334  0016E8  B082               	btfsc	3970,0,c	;volatile
  1335  0016EA  D100               	goto	l5183
  1336                           
  1337                           ;newmain.c: 151: timer = (((duty_cycle * 700) / 90) + 800) / 0.5;
  1338  0016EC  0E00               	movlw	0
  1339  0016EE  0100               	movlb	0	; () banked
  1340  0016F0  6F9E               	movwf	___fldiv@a& (0+255),b
  1341  0016F2  0E00               	movlw	0
  1342  0016F4  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
  1343  0016F6  0E00               	movlw	0
  1344  0016F8  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
  1345  0016FA  0E3F               	movlw	63
  1346  0016FC  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
  1347  0016FE  0E5A               	movlw	90
  1348  001700  0100               	movlb	0	; () banked
  1349  001702  6F83               	movwf	___lldiv@divisor& (0+255),b
  1350  001704  0E00               	movlw	0
  1351  001706  6F84               	movwf	(___lldiv@divisor+1)& (0+255),b
  1352  001708  0E00               	movlw	0
  1353  00170A  6F85               	movwf	(___lldiv@divisor+2)& (0+255),b
  1354  00170C  0E00               	movlw	0
  1355  00170E  6F86               	movwf	(___lldiv@divisor+3)& (0+255),b
  1356  001710  C0CD  F073         	movff	_duty_cycle,___lmul@multiplier
  1357  001714  C0CE  F074         	movff	_duty_cycle+1,___lmul@multiplier+1
  1358  001718  C0CF  F075         	movff	_duty_cycle+2,___lmul@multiplier+2
  1359  00171C  C0D0  F076         	movff	_duty_cycle+3,___lmul@multiplier+3
  1360  001720  0EBC               	movlw	188
  1361  001722  0100               	movlb	0	; () banked
  1362  001724  6F77               	movwf	___lmul@multiplicand& (0+255),b
  1363  001726  0E02               	movlw	2
  1364  001728  6F78               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1365  00172A  0E00               	movlw	0
  1366  00172C  6F79               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1367  00172E  0E00               	movlw	0
  1368  001730  6F7A               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1369  001732  EC55  F01B         	call	___lmul	;wreg free
  1370  001736  C073  F07F         	movff	?___lmul,___lldiv@dividend
  1371  00173A  C074  F080         	movff	?___lmul+1,___lldiv@dividend+1
  1372  00173E  C075  F081         	movff	?___lmul+2,___lldiv@dividend+2
  1373  001742  C076  F082         	movff	?___lmul+3,___lldiv@dividend+3
  1374  001746  EC24  F01A         	call	___lldiv	;wreg free
  1375  00174A  0E20               	movlw	32
  1376  00174C  0100               	movlb	0	; () banked
  1377  00174E  257F               	addwf	?___lldiv& (0+255),w,b
  1378  001750  0100               	movlb	0	; () banked
  1379  001752  6F8C               	movwf	___xxtofl@val& (0+255),b
  1380  001754  0E03               	movlw	3
  1381  001756  0100               	movlb	0	; () banked
  1382  001758  2180               	addwfc	(?___lldiv+1)& (0+255),w,b
  1383  00175A  0100               	movlb	0	; () banked
  1384  00175C  6F8D               	movwf	(___xxtofl@val+1)& (0+255),b
  1385  00175E  0E00               	movlw	0
  1386  001760  0100               	movlb	0	; () banked
  1387  001762  2181               	addwfc	(?___lldiv+2)& (0+255),w,b
  1388  001764  0100               	movlb	0	; () banked
  1389  001766  6F8E               	movwf	(___xxtofl@val+2)& (0+255),b
  1390  001768  0E00               	movlw	0
  1391  00176A  0100               	movlb	0	; () banked
  1392  00176C  2182               	addwfc	(?___lldiv+3)& (0+255),w,b
  1393  00176E  0100               	movlb	0	; () banked
  1394  001770  6F8F               	movwf	(___xxtofl@val+3)& (0+255),b
  1395  001772  0E00               	movlw	0
  1396  001774  EC61  F017         	call	___xxtofl
  1397  001778  C08C  F09A         	movff	?___xxtofl,___fldiv@b
  1398  00177C  C08D  F09B         	movff	?___xxtofl+1,___fldiv@b+1
  1399  001780  C08E  F09C         	movff	?___xxtofl+2,___fldiv@b+2
  1400  001784  C08F  F09D         	movff	?___xxtofl+3,___fldiv@b+3
  1401  001788  ECB2  F013         	call	___fldiv	;wreg free
  1402  00178C  C09A  F110         	movff	?___fldiv,___fltol@f1
  1403  001790  C09B  F111         	movff	?___fldiv+1,___fltol@f1+1
  1404  001794  C09C  F112         	movff	?___fldiv+2,___fltol@f1+2
  1405  001798  C09D  F113         	movff	?___fldiv+3,___fltol@f1+3
  1406  00179C  EC2B  F019         	call	___fltol	;wreg free
  1407  0017A0  C110  F0D9         	movff	?___fltol,_timer
  1408  0017A4  C111  F0DA         	movff	?___fltol+1,_timer+1
  1409  0017A8  C112  F0DB         	movff	?___fltol+2,_timer+2
  1410  0017AC  C113  F0DC         	movff	?___fltol+3,_timer+3
  1411                           
  1412                           ;newmain.c: 152: timer1 = 65536 - timer;
  1413  0017B0  C0D9  F118         	movff	_timer,??_main
  1414  0017B4  C0DA  F119         	movff	_timer+1,??_main+1
  1415  0017B8  0101               	movlb	1	; () banked
  1416  0017BA  1F18               	comf	??_main& (0+255),f,b
  1417  0017BC  1F19               	comf	(??_main+1)& (0+255),f,b
  1418  0017BE  4B18               	infsnz	??_main& (0+255),f,b
  1419  0017C0  2B19               	incf	(??_main+1)& (0+255),f,b
  1420  0017C2  C118  F00F         	movff	??_main,_timer1
  1421  0017C6  C119  F010         	movff	??_main+1,_timer1+1
  1422                           
  1423                           ; BSR set to: 1
  1424                           ;newmain.c: 153: periodo = 20000 - (timer * 0.5);
  1425  0017CA  0E00               	movlw	0
  1426  0017CC  0101               	movlb	1	; () banked
  1427  0017CE  6F04               	movwf	___fladd@a& (0+255),b
  1428  0017D0  0E40               	movlw	64
  1429  0017D2  6F05               	movwf	(___fladd@a+1)& (0+255),b
  1430  0017D4  0E9C               	movlw	156
  1431  0017D6  6F06               	movwf	(___fladd@a+2)& (0+255),b
  1432  0017D8  0E46               	movlw	70
  1433  0017DA  6F07               	movwf	(___fladd@a+3)& (0+255),b
  1434  0017DC  0E00               	movlw	0
  1435  0017DE  0100               	movlb	0	; () banked
  1436  0017E0  6F9E               	movwf	___flmul@a& (0+255),b
  1437  0017E2  0E00               	movlw	0
  1438  0017E4  6F9F               	movwf	(___flmul@a+1)& (0+255),b
  1439  0017E6  0E00               	movlw	0
  1440  0017E8  6FA0               	movwf	(___flmul@a+2)& (0+255),b
  1441  0017EA  0E3F               	movlw	63
  1442  0017EC  6FA1               	movwf	(___flmul@a+3)& (0+255),b
  1443  0017EE  C0D9  F08C         	movff	_timer,___xxtofl@val
  1444  0017F2  C0DA  F08D         	movff	_timer+1,___xxtofl@val+1
  1445  0017F6  C0DB  F08E         	movff	_timer+2,___xxtofl@val+2
  1446  0017FA  C0DC  F08F         	movff	_timer+3,___xxtofl@val+3
  1447  0017FE  0E00               	movlw	0
  1448  001800  EC61  F017         	call	___xxtofl
  1449  001804  C08C  F09A         	movff	?___xxtofl,___flmul@b
  1450  001808  C08D  F09B         	movff	?___xxtofl+1,___flmul@b+1
  1451  00180C  C08E  F09C         	movff	?___xxtofl+2,___flmul@b+2
  1452  001810  C08F  F09D         	movff	?___xxtofl+3,___flmul@b+3
  1453  001814  EC5F  F011         	call	___flmul	;wreg free
  1454  001818  C09A  F0B3         	movff	?___flmul,___flneg@f1
  1455  00181C  C09B  F0B4         	movff	?___flmul+1,___flneg@f1+1
  1456  001820  C09C  F0B5         	movff	?___flmul+2,___flneg@f1+2
  1457  001824  C09D  F0B6         	movff	?___flmul+3,___flneg@f1+3
  1458  001828  EC1E  F01C         	call	___flneg	;wreg free
  1459  00182C  C0B3  F100         	movff	?___flneg,___fladd@b
  1460  001830  C0B4  F101         	movff	?___flneg+1,___fladd@b+1
  1461  001834  C0B5  F102         	movff	?___flneg+2,___fladd@b+2
  1462  001838  C0B6  F103         	movff	?___flneg+3,___fladd@b+3
  1463  00183C  EC0B  F00F         	call	___fladd	;wreg free
  1464  001840  C100  F110         	movff	?___fladd,___fltol@f1
  1465  001844  C101  F111         	movff	?___fladd+1,___fltol@f1+1
  1466  001848  C102  F112         	movff	?___fladd+2,___fltol@f1+2
  1467  00184C  C103  F113         	movff	?___fladd+3,___fltol@f1+3
  1468  001850  EC2B  F019         	call	___fltol	;wreg free
  1469  001854  C110  F00D         	movff	?___fltol,_periodo
  1470  001858  C111  F00E         	movff	?___fltol+1,_periodo+1
  1471                           
  1472                           ;newmain.c: 154: periodo = (65536 - (periodo / 0.5));
  1473  00185C  0E00               	movlw	0
  1474  00185E  0101               	movlb	1	; () banked
  1475  001860  6F04               	movwf	___fladd@a& (0+255),b
  1476  001862  0E00               	movlw	0
  1477  001864  6F05               	movwf	(___fladd@a+1)& (0+255),b
  1478  001866  0E80               	movlw	128
  1479  001868  6F06               	movwf	(___fladd@a+2)& (0+255),b
  1480  00186A  0E47               	movlw	71
  1481  00186C  6F07               	movwf	(___fladd@a+3)& (0+255),b
  1482  00186E  0E00               	movlw	0
  1483  001870  0100               	movlb	0	; () banked
  1484  001872  6F9E               	movwf	___fldiv@a& (0+255),b
  1485  001874  0E00               	movlw	0
  1486  001876  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
  1487  001878  0E00               	movlw	0
  1488  00187A  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
  1489  00187C  0E3F               	movlw	63
  1490  00187E  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
  1491  001880  C00D  F08C         	movff	_periodo,___xxtofl@val
  1492  001884  C00E  F08D         	movff	_periodo+1,___xxtofl@val+1
  1493  001888  0100               	movlb	0	; () banked
  1494  00188A  6B8E               	clrf	(___xxtofl@val+2)& (0+255),b
  1495  00188C  6B8F               	clrf	(___xxtofl@val+3)& (0+255),b
  1496  00188E  0E00               	movlw	0
  1497  001890  EC61  F017         	call	___xxtofl
  1498  001894  C08C  F09A         	movff	?___xxtofl,___fldiv@b
  1499  001898  C08D  F09B         	movff	?___xxtofl+1,___fldiv@b+1
  1500  00189C  C08E  F09C         	movff	?___xxtofl+2,___fldiv@b+2
  1501  0018A0  C08F  F09D         	movff	?___xxtofl+3,___fldiv@b+3
  1502  0018A4  ECB2  F013         	call	___fldiv	;wreg free
  1503  0018A8  C09A  F0B3         	movff	?___fldiv,___flneg@f1
  1504  0018AC  C09B  F0B4         	movff	?___fldiv+1,___flneg@f1+1
  1505  0018B0  C09C  F0B5         	movff	?___fldiv+2,___flneg@f1+2
  1506  0018B4  C09D  F0B6         	movff	?___fldiv+3,___flneg@f1+3
  1507  0018B8  EC1E  F01C         	call	___flneg	;wreg free
  1508  0018BC  C0B3  F100         	movff	?___flneg,___fladd@b
  1509  0018C0  C0B4  F101         	movff	?___flneg+1,___fladd@b+1
  1510  0018C4  C0B5  F102         	movff	?___flneg+2,___fladd@b+2
  1511  0018C8  C0B6  F103         	movff	?___flneg+3,___fladd@b+3
  1512  0018CC  EC0B  F00F         	call	___fladd	;wreg free
  1513  0018D0  C100  F110         	movff	?___fladd,___fltol@f1
  1514  0018D4  C101  F111         	movff	?___fladd+1,___fltol@f1+1
  1515  0018D8  C102  F112         	movff	?___fladd+2,___fltol@f1+2
  1516  0018DC  C103  F113         	movff	?___fladd+3,___fltol@f1+3
  1517  0018E0  EC2B  F019         	call	___fltol	;wreg free
  1518  0018E4  C110  F00D         	movff	?___fltol,_periodo
  1519  0018E8  C111  F00E         	movff	?___fltol+1,_periodo+1
  1520  0018EC                     l5183:
  1521                           
  1522                           ;newmain.c: 155: }
  1523                           ;newmain.c: 156: if (remote_frame == 1) {
  1524  0018EC  B045               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c
  1525                           
  1526                           ;newmain.c: 157: send_data();
  1527  0018EE  ECE2  F01B         	call	_send_data	;wreg free
  1528                           
  1529                           ;newmain.c: 158: }
  1530                           ;newmain.c: 159: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
  1531  0018F2  EC95  F01C         	call	_CANisTXwarningON	;wreg free
  1532  0018F6  06E8               	decf	wreg,f,c
  1533  0018F8  B4D8               	btfsc	status,2,c
  1534  0018FA  D005               	goto	l668
  1535  0018FC  EC9B  F01C         	call	_CANisRXwarningON	;wreg free
  1536  001900  06E8               	decf	wreg,f,c
  1537  001902  A4D8               	btfss	status,2,c
  1538  001904  D597               	goto	l5139
  1539  001906                     l668:
  1540                           
  1541                           ;newmain.c: 160: PORTAbits.RA5 = 1;
  1542  001906  8A80               	bsf	3968,5,c	;volatile
  1543  001908  D595               	goto	l5139
  1544  00190A                     __end_of_main:
  1545                           	opt stack 0
  1546                           tblptru	equ	0xFF8
  1547                           tblptrh	equ	0xFF7
  1548                           tblptrl	equ	0xFF6
  1549                           tablat	equ	0xFF5
  1550                           postinc0	equ	0xFEE
  1551                           wreg	equ	0xFE8
  1552                           status	equ	0xFD8
  1553                           
  1554 ;; *************** function _send_data *****************
  1555 ;; Defined at:
  1556 ;;		line 168 in file "newmain.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;		None               void
  1563 ;; Registers used:
  1564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1570 ;;      Params:         0       0       0       0
  1571 ;;      Locals:         0       0       0       0
  1572 ;;      Temps:          0       0       0       0
  1573 ;;      Totals:         0       0       0       0
  1574 ;;Total ram usage:        0 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    5
  1577 ;; This function calls:
  1578 ;;		_CANisTxReady
  1579 ;;		_CANsendMessage
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text1
  1586  0037C4                     __ptext1:
  1587                           	opt stack 0
  1588  0037C4                     _send_data:
  1589                           	opt stack 25
  1590                           
  1591                           ;newmain.c: 169: if (CANisTxReady()) {
  1592                           
  1593                           ;incstack = 0
  1594  0037C4  EC55  F01C         	call	_CANisTxReady	;wreg free
  1595  0037C8  0900               	iorlw	0
  1596  0037CA  B4D8               	btfsc	status,2,c
  1597  0037CC  0012               	return	
  1598                           
  1599                           ;newmain.c: 170: if (remote_frame == 1) {
  1600  0037CE  A045               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1601  0037D0  D016               	goto	l4111
  1602                           
  1603                           ;newmain.c: 172: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG &
  1604                           ;newmain.c: 173: CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1605  0037D2  C0D1  F073         	movff	_id,CANsendMessage@identifier
  1606  0037D6  C0D2  F074         	movff	_id+1,CANsendMessage@identifier+1
  1607  0037DA  C0D3  F075         	movff	_id+2,CANsendMessage@identifier+2
  1608  0037DE  C0D4  F076         	movff	_id+3,CANsendMessage@identifier+3
  1609  0037E2  0EDF               	movlw	low _data_array
  1610  0037E4  0100               	movlb	0	; () banked
  1611  0037E6  6F77               	movwf	CANsendMessage@data& (0+255),b
  1612  0037E8  0E00               	movlw	high _data_array
  1613  0037EA  0100               	movlb	0	; () banked
  1614  0037EC  6F78               	movwf	(CANsendMessage@data+1)& (0+255),b
  1615  0037EE  0E08               	movlw	8
  1616  0037F0  0100               	movlb	0	; () banked
  1617  0037F2  6F79               	movwf	CANsendMessage@dataLength& (0+255),b
  1618  0037F4  0EBC               	movlw	188
  1619  0037F6  0100               	movlb	0	; () banked
  1620  0037F8  6F7A               	movwf	CANsendMessage@flags& (0+255),b
  1621  0037FA  EC38  F006         	call	_CANsendMessage	;wreg free
  1622  0037FE                     l4111:
  1623                           
  1624                           ;newmain.c: 178: }
  1625                           ;newmain.c: 179: remote_frame = 0;
  1626  0037FE  9045               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1627  003800  0012               	return	
  1628  003802                     __end_of_send_data:
  1629                           	opt stack 0
  1630                           tblptru	equ	0xFF8
  1631                           tblptrh	equ	0xFF7
  1632                           tblptrl	equ	0xFF6
  1633                           tablat	equ	0xFF5
  1634                           postinc0	equ	0xFEE
  1635                           wreg	equ	0xFE8
  1636                           status	equ	0xFD8
  1637                           
  1638 ;; *************** function _CANsendMessage *****************
  1639 ;; Defined at:
  1640 ;;		line 294 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  identifier      4   19[BANK0 ] unsigned long 
  1643 ;;  data            2   23[BANK0 ] PTR unsigned char 
  1644 ;;		 -> data_array(8), 
  1645 ;;  dataLength      1   25[BANK0 ] unsigned char 
  1646 ;;  flags           1   26[BANK0 ] enum E16866
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  tamp            4   31[BANK0 ] unsigned long 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;		None               void
  1651 ;; Registers used:
  1652 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1658 ;;      Params:         0       8       0       0
  1659 ;;      Locals:         0       4       0       0
  1660 ;;      Temps:          0       4       0       0
  1661 ;;      Totals:         0      16       0       0
  1662 ;;Total ram usage:       16 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    4
  1665 ;; This function calls:
  1666 ;;		Nothing
  1667 ;; This function is called by:
  1668 ;;		_send_data
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text2
  1673  000C70                     __ptext2:
  1674                           	opt stack 0
  1675  000C70                     _CANsendMessage:
  1676                           	opt stack 25
  1677                           
  1678                           ;inc\CANlib.h: 296: unsigned long tamp;
  1679                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1680                           
  1681                           ;incstack = 0
  1682  000C70  010F               	movlb	15	; () banked
  1683  000C72  B740               	btfsc	64,3,b	;volatile
  1684  000C74  D13F               	goto	l367
  1685                           
  1686                           ; BSR set to: 15
  1687                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1688  000C76  C079  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1689                           
  1690                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1691  000C7A  0100               	movlb	0	; () banked
  1692  000C7C  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1693  000C7E  D003               	goto	l368
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1697  000C80  010F               	movlb	15	; () banked
  1698  000C82  8D45               	bsf	69,6,b	;volatile
  1699  000C84  D002               	goto	l369
  1700  000C86                     l368:
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;inc\CANlib.h: 302: else
  1704                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1705  000C86  010F               	movlb	15	; () banked
  1706  000C88  9D45               	bcf	69,6,b	;volatile
  1707  000C8A                     l369:
  1708                           
  1709                           ; BSR set to: 15
  1710                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1711  000C8A  0100               	movlb	0	; () banked
  1712  000C8C  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1713  000C8E  D079               	goto	l370
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;inc\CANlib.h: 306: {
  1717                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1718  000C90  0100               	movlb	0	; () banked
  1719  000C92  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1720  000C94  0100               	movlb	0	; () banked
  1721  000C96  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1722  000C98  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1723  000C9A  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1724  000C9C  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1728  000C9E  C07F  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1732  000CA2  0E00               	movlw	0
  1733  000CA4  0100               	movlb	0	; () banked
  1734  000CA6  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1735  000CA8  0100               	movlb	0	; () banked
  1736  000CAA  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1737  000CAC  0EFF               	movlw	255
  1738  000CAE  0100               	movlb	0	; () banked
  1739  000CB0  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1740  000CB2  0100               	movlb	0	; () banked
  1741  000CB4  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1742  000CB6  0E00               	movlw	0
  1743  000CB8  0100               	movlb	0	; () banked
  1744  000CBA  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1745  000CBC  0100               	movlb	0	; () banked
  1746  000CBE  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1747  000CC0  0E00               	movlw	0
  1748  000CC2  0100               	movlb	0	; () banked
  1749  000CC4  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1750  000CC6  0100               	movlb	0	; () banked
  1751  000CC8  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1755  000CCA  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1756  000CCE  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1757  000CD2  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1758  000CD6  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1759  000CDA  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1760  000CDE  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1761  000CE2  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1762  000CE6  0100               	movlb	0	; () banked
  1763  000CE8  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1764  000CEA  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1765  000CEE  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1766  000CF2  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1767  000CF6  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1771  000CFA  C07F  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1775  000CFE  0E00               	movlw	0
  1776  000D00  010F               	movlb	15	; () banked
  1777  000D02  6F42               	movwf	66,b	;volatile
  1778                           
  1779                           ; BSR set to: 15
  1780                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1781  000D04  010F               	movlb	15	; () banked
  1782  000D06  8742               	bsf	66,3,b	;volatile
  1783                           
  1784                           ; BSR set to: 15
  1785                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1786  000D08  0100               	movlb	0	; () banked
  1787  000D0A  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1788  000D0C  D002               	goto	l371
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1792  000D0E  010F               	movlb	15	; () banked
  1793  000D10  8142               	bsf	66,0,b	;volatile
  1794  000D12                     l371:
  1795                           
  1796                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1797  000D12  0100               	movlb	0	; () banked
  1798  000D14  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1799  000D16  D002               	goto	l372
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1803  000D18  010F               	movlb	15	; () banked
  1804  000D1A  8342               	bsf	66,1,b	;volatile
  1805  000D1C                     l372:
  1806                           
  1807                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1808  000D1C  0100               	movlb	0	; () banked
  1809  000D1E  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1810  000D20  D002               	goto	l373
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1814  000D22  010F               	movlb	15	; () banked
  1815  000D24  8B42               	bsf	66,5,b	;volatile
  1816  000D26                     l373:
  1817                           
  1818                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1819  000D26  0100               	movlb	0	; () banked
  1820  000D28  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1821  000D2A  D002               	goto	l374
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1825  000D2C  010F               	movlb	15	; () banked
  1826  000D2E  8D42               	bsf	66,6,b	;volatile
  1827  000D30                     l374:
  1828                           
  1829                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1830  000D30  0100               	movlb	0	; () banked
  1831  000D32  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1832  000D34  D002               	goto	l3615
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1836  000D36  010F               	movlb	15	; () banked
  1837  000D38  8F42               	bsf	66,7,b	;volatile
  1838  000D3A                     l3615:
  1839                           
  1840                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1841  000D3A  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1842  000D3E  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1843  000D42  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1844  000D46  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1845  000D4A  0E16               	movlw	22
  1846  000D4C  D006               	goto	u4210
  1847  000D4E                     u4215:
  1848  000D4E  0100               	movlb	0	; () banked
  1849  000D50  90D8               	bcf	status,0,c
  1850  000D52  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1851  000D54  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1852  000D56  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1853  000D58  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1854  000D5A                     u4210:
  1855  000D5A  2EE8               	decfsz	wreg,f,c
  1856  000D5C  D7F8               	goto	u4215
  1857  000D5E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1858  000D62  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1859  000D66  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1860  000D6A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1864  000D6E  0100               	movlb	0	; () banked
  1865  000D70  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1866  000D72  0100               	movlb	0	; () banked
  1867  000D74  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1868  000D76  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1869  000D78  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1870  000D7A  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1874  000D7C  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1875                           
  1876                           ;inc\CANlib.h: 332: }
  1877  000D80  D059               	goto	l3635
  1878  000D82                     l370:
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;inc\CANlib.h: 334: else
  1882                           ;inc\CANlib.h: 336: {
  1883                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1884  000D82  010F               	movlb	15	; () banked
  1885  000D84  9742               	bcf	66,3,b	;volatile
  1886                           
  1887                           ; BSR set to: 15
  1888                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1889  000D86  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1890  000D8A  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1891  000D8E  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1892  000D92  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1893  000D96  0E04               	movlw	4
  1894  000D98  D006               	goto	u4220
  1895  000D9A                     u4225:
  1896  000D9A  0100               	movlb	0	; () banked
  1897  000D9C  90D8               	bcf	status,0,c
  1898  000D9E  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1899  000DA0  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1900  000DA2  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1901  000DA4  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1902  000DA6                     u4220:
  1903  000DA6  2EE8               	decfsz	wreg,f,c
  1904  000DA8  D7F8               	goto	u4225
  1905  000DAA  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1906  000DAE  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1907  000DB2  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1908  000DB6  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1912  000DBA  0100               	movlb	0	; () banked
  1913  000DBC  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1914  000DBE  0100               	movlb	0	; () banked
  1915  000DC0  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1916  000DC2  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1917  000DC4  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1918  000DC6  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1922  000DC8  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1926  000DCC  0E07               	movlw	7
  1927  000DCE  0100               	movlb	0	; () banked
  1928  000DD0  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1929  000DD2  0100               	movlb	0	; () banked
  1930  000DD4  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1931  000DD6  0E00               	movlw	0
  1932  000DD8  0100               	movlb	0	; () banked
  1933  000DDA  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1934  000DDC  0100               	movlb	0	; () banked
  1935  000DDE  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1936  000DE0  0E00               	movlw	0
  1937  000DE2  0100               	movlb	0	; () banked
  1938  000DE4  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1939  000DE6  0100               	movlb	0	; () banked
  1940  000DE8  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1941  000DEA  0E00               	movlw	0
  1942  000DEC  0100               	movlb	0	; () banked
  1943  000DEE  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1944  000DF0  0100               	movlb	0	; () banked
  1945  000DF2  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1949  000DF4  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1950  000DF8  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1951  000DFC  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1952  000E00  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1953  000E04  0E05               	movlw	5
  1954  000E06                     u4235:
  1955  000E06  90D8               	bcf	status,0,c
  1956  000E08  0100               	movlb	0	; () banked
  1957  000E0A  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1958  000E0C  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1959  000E0E  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1960  000E10  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1961  000E12  2EE8               	decfsz	wreg,f,c
  1962  000E14  D7F8               	goto	u4235
  1963  000E16  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1964  000E1A  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1965  000E1E  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1966  000E22  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1970  000E26  010F               	movlb	15	; () banked
  1971  000E28  5142               	movf	66,w,b	;volatile
  1972  000E2A  0B1F               	andlw	31
  1973  000E2C  010F               	movlb	15	; () banked
  1974  000E2E  6F42               	movwf	66,b	;volatile
  1975                           
  1976                           ; BSR set to: 15
  1977                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1978  000E30  C07F  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1979  000E34                     l3635:
  1980                           
  1981                           ;inc\CANlib.h: 347: }
  1982                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1983  000E34  0100               	movlb	0	; () banked
  1984  000E36  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1985  000E38  D003               	goto	l377
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1989  000E3A  010F               	movlb	15	; () banked
  1990  000E3C  8140               	bsf	64,0,b	;volatile
  1991  000E3E  D002               	goto	l378
  1992  000E40                     l377:
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;inc\CANlib.h: 351: else
  1996                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1997  000E40  010F               	movlb	15	; () banked
  1998  000E42  9140               	bcf	64,0,b	;volatile
  1999  000E44                     l378:
  2000                           
  2001                           ; BSR set to: 15
  2002                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  2003  000E44  0100               	movlb	0	; () banked
  2004  000E46  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  2005  000E48  D003               	goto	l379
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  2009  000E4A  010F               	movlb	15	; () banked
  2010  000E4C  8340               	bsf	64,1,b	;volatile
  2011  000E4E  D002               	goto	l3641
  2012  000E50                     l379:
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;inc\CANlib.h: 355: else
  2016                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  2017  000E50  010F               	movlb	15	; () banked
  2018  000E52  9340               	bcf	64,1,b	;volatile
  2019  000E54                     l3641:
  2020                           
  2021                           ; BSR set to: 15
  2022                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  2023  000E54  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  2024  000E58  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2025  000E5C  50DF               	movf	indf2,w,c
  2026  000E5E  010F               	movlb	15	; () banked
  2027  000E60  6F46               	movwf	70,b	;volatile
  2028                           
  2029                           ; BSR set to: 15
  2030                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  2031  000E62  0100               	movlb	0	; () banked
  2032  000E64  EE20 F001          	lfsr	2,1
  2033  000E68  5177               	movf	CANsendMessage@data& (0+255),w,b
  2034  000E6A  26D9               	addwf	fsr2l,f,c
  2035  000E6C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2036  000E6E  22DA               	addwfc	fsr2h,f,c
  2037  000E70  50DF               	movf	indf2,w,c
  2038  000E72  010F               	movlb	15	; () banked
  2039  000E74  6F47               	movwf	71,b	;volatile
  2040                           
  2041                           ; BSR set to: 15
  2042                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  2043  000E76  0100               	movlb	0	; () banked
  2044  000E78  EE20 F002          	lfsr	2,2
  2045  000E7C  5177               	movf	CANsendMessage@data& (0+255),w,b
  2046  000E7E  26D9               	addwf	fsr2l,f,c
  2047  000E80  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2048  000E82  22DA               	addwfc	fsr2h,f,c
  2049  000E84  50DF               	movf	indf2,w,c
  2050  000E86  010F               	movlb	15	; () banked
  2051  000E88  6F48               	movwf	72,b	;volatile
  2052                           
  2053                           ; BSR set to: 15
  2054                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  2055  000E8A  0100               	movlb	0	; () banked
  2056  000E8C  EE20 F003          	lfsr	2,3
  2057  000E90  5177               	movf	CANsendMessage@data& (0+255),w,b
  2058  000E92  26D9               	addwf	fsr2l,f,c
  2059  000E94  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2060  000E96  22DA               	addwfc	fsr2h,f,c
  2061  000E98  50DF               	movf	indf2,w,c
  2062  000E9A  010F               	movlb	15	; () banked
  2063  000E9C  6F49               	movwf	73,b	;volatile
  2064                           
  2065                           ; BSR set to: 15
  2066                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  2067  000E9E  0100               	movlb	0	; () banked
  2068  000EA0  EE20 F004          	lfsr	2,4
  2069  000EA4  5177               	movf	CANsendMessage@data& (0+255),w,b
  2070  000EA6  26D9               	addwf	fsr2l,f,c
  2071  000EA8  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2072  000EAA  22DA               	addwfc	fsr2h,f,c
  2073  000EAC  50DF               	movf	indf2,w,c
  2074  000EAE  010F               	movlb	15	; () banked
  2075  000EB0  6F4A               	movwf	74,b	;volatile
  2076                           
  2077                           ; BSR set to: 15
  2078                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  2079  000EB2  0100               	movlb	0	; () banked
  2080  000EB4  EE20 F005          	lfsr	2,5
  2081  000EB8  5177               	movf	CANsendMessage@data& (0+255),w,b
  2082  000EBA  26D9               	addwf	fsr2l,f,c
  2083  000EBC  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2084  000EBE  22DA               	addwfc	fsr2h,f,c
  2085  000EC0  50DF               	movf	indf2,w,c
  2086  000EC2  010F               	movlb	15	; () banked
  2087  000EC4  6F4B               	movwf	75,b	;volatile
  2088                           
  2089                           ; BSR set to: 15
  2090                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  2091  000EC6  0100               	movlb	0	; () banked
  2092  000EC8  EE20 F006          	lfsr	2,6
  2093  000ECC  5177               	movf	CANsendMessage@data& (0+255),w,b
  2094  000ECE  26D9               	addwf	fsr2l,f,c
  2095  000ED0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2096  000ED2  22DA               	addwfc	fsr2h,f,c
  2097  000ED4  50DF               	movf	indf2,w,c
  2098  000ED6  010F               	movlb	15	; () banked
  2099  000ED8  6F4C               	movwf	76,b	;volatile
  2100                           
  2101                           ; BSR set to: 15
  2102                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  2103  000EDA  0100               	movlb	0	; () banked
  2104  000EDC  EE20 F007          	lfsr	2,7
  2105  000EE0  5177               	movf	CANsendMessage@data& (0+255),w,b
  2106  000EE2  26D9               	addwf	fsr2l,f,c
  2107  000EE4  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2108  000EE6  22DA               	addwfc	fsr2h,f,c
  2109  000EE8  50DF               	movf	indf2,w,c
  2110  000EEA  010F               	movlb	15	; () banked
  2111  000EEC  6F4D               	movwf	77,b	;volatile
  2112                           
  2113                           ; BSR set to: 15
  2114                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2115  000EEE  010F               	movlb	15	; () banked
  2116  000EF0  8740               	bsf	64,3,b	;volatile
  2117                           
  2118                           ; BSR set to: 15
  2119                           ;inc\CANlib.h: 368: return;
  2120  000EF2  0012               	return	
  2121  000EF4                     l367:
  2122                           
  2123                           ; BSR set to: 15
  2124                           ;inc\CANlib.h: 369: }
  2125                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2126  000EF4  010F               	movlb	15	; () banked
  2127  000EF6  B730               	btfsc	48,3,b	;volatile
  2128  000EF8  D13F               	goto	l382
  2129                           
  2130                           ; BSR set to: 15
  2131                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  2132  000EFA  C079  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2133                           
  2134                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  2135  000EFE  0100               	movlb	0	; () banked
  2136  000F00  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  2137  000F02  D003               	goto	l383
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2141  000F04  010F               	movlb	15	; () banked
  2142  000F06  8D35               	bsf	53,6,b	;volatile
  2143  000F08  D002               	goto	l384
  2144  000F0A                     l383:
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;inc\CANlib.h: 378: else
  2148                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2149  000F0A  010F               	movlb	15	; () banked
  2150  000F0C  9D35               	bcf	53,6,b	;volatile
  2151  000F0E                     l384:
  2152                           
  2153                           ; BSR set to: 15
  2154                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2155  000F0E  0100               	movlb	0	; () banked
  2156  000F10  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  2157  000F12  D079               	goto	l385
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;inc\CANlib.h: 382: {
  2161                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  2162  000F14  0100               	movlb	0	; () banked
  2163  000F16  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  2164  000F18  0100               	movlb	0	; () banked
  2165  000F1A  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2166  000F1C  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2167  000F1E  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2168  000F20  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2172  000F22  C07F  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2176  000F26  0E00               	movlw	0
  2177  000F28  0100               	movlb	0	; () banked
  2178  000F2A  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2179  000F2C  0100               	movlb	0	; () banked
  2180  000F2E  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2181  000F30  0EFF               	movlw	255
  2182  000F32  0100               	movlb	0	; () banked
  2183  000F34  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2184  000F36  0100               	movlb	0	; () banked
  2185  000F38  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2186  000F3A  0E00               	movlw	0
  2187  000F3C  0100               	movlb	0	; () banked
  2188  000F3E  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2189  000F40  0100               	movlb	0	; () banked
  2190  000F42  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2191  000F44  0E00               	movlw	0
  2192  000F46  0100               	movlb	0	; () banked
  2193  000F48  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2194  000F4A  0100               	movlb	0	; () banked
  2195  000F4C  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  2199  000F4E  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2200  000F52  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2201  000F56  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2202  000F5A  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2203  000F5E  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  2204  000F62  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2205  000F66  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2206  000F6A  0100               	movlb	0	; () banked
  2207  000F6C  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  2208  000F6E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2209  000F72  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2210  000F76  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2211  000F7A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2215  000F7E  C07F  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2219  000F82  0E00               	movlw	0
  2220  000F84  010F               	movlb	15	; () banked
  2221  000F86  6F32               	movwf	50,b	;volatile
  2222                           
  2223                           ; BSR set to: 15
  2224                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2225  000F88  010F               	movlb	15	; () banked
  2226  000F8A  8732               	bsf	50,3,b	;volatile
  2227                           
  2228                           ; BSR set to: 15
  2229                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2230  000F8C  0100               	movlb	0	; () banked
  2231  000F8E  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2232  000F90  D002               	goto	l386
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2236  000F92  010F               	movlb	15	; () banked
  2237  000F94  8132               	bsf	50,0,b	;volatile
  2238  000F96                     l386:
  2239                           
  2240                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2241  000F96  0100               	movlb	0	; () banked
  2242  000F98  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2243  000F9A  D002               	goto	l387
  2244                           
  2245                           ; BSR set to: 0
  2246                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2247  000F9C  010F               	movlb	15	; () banked
  2248  000F9E  8332               	bsf	50,1,b	;volatile
  2249  000FA0                     l387:
  2250                           
  2251                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2252  000FA0  0100               	movlb	0	; () banked
  2253  000FA2  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2254  000FA4  D002               	goto	l388
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2258  000FA6  010F               	movlb	15	; () banked
  2259  000FA8  8B32               	bsf	50,5,b	;volatile
  2260  000FAA                     l388:
  2261                           
  2262                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2263  000FAA  0100               	movlb	0	; () banked
  2264  000FAC  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2265  000FAE  D002               	goto	l389
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2269  000FB0  010F               	movlb	15	; () banked
  2270  000FB2  8D32               	bsf	50,6,b	;volatile
  2271  000FB4                     l389:
  2272                           
  2273                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2274  000FB4  0100               	movlb	0	; () banked
  2275  000FB6  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2276  000FB8  D002               	goto	l3691
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2280  000FBA  010F               	movlb	15	; () banked
  2281  000FBC  8F32               	bsf	50,7,b	;volatile
  2282  000FBE                     l3691:
  2283                           
  2284                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2285  000FBE  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2286  000FC2  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2287  000FC6  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2288  000FCA  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2289  000FCE  0E16               	movlw	22
  2290  000FD0  D006               	goto	u4340
  2291  000FD2                     u4345:
  2292  000FD2  0100               	movlb	0	; () banked
  2293  000FD4  90D8               	bcf	status,0,c
  2294  000FD6  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2295  000FD8  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2296  000FDA  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2297  000FDC  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2298  000FDE                     u4340:
  2299  000FDE  2EE8               	decfsz	wreg,f,c
  2300  000FE0  D7F8               	goto	u4345
  2301  000FE2  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2302  000FE6  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2303  000FEA  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2304  000FEE  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2308  000FF2  0100               	movlb	0	; () banked
  2309  000FF4  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2310  000FF6  0100               	movlb	0	; () banked
  2311  000FF8  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2312  000FFA  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2313  000FFC  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2314  000FFE  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2318  001000  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2319                           
  2320                           ;inc\CANlib.h: 407: }
  2321  001004  D059               	goto	l3711
  2322  001006                     l385:
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;inc\CANlib.h: 409: else
  2326                           ;inc\CANlib.h: 411: {
  2327                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2328  001006  010F               	movlb	15	; () banked
  2329  001008  9732               	bcf	50,3,b	;volatile
  2330                           
  2331                           ; BSR set to: 15
  2332                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2333  00100A  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2334  00100E  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2335  001012  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2336  001016  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2337  00101A  0E04               	movlw	4
  2338  00101C  D006               	goto	u4350
  2339  00101E                     u4355:
  2340  00101E  0100               	movlb	0	; () banked
  2341  001020  90D8               	bcf	status,0,c
  2342  001022  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2343  001024  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2344  001026  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2345  001028  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2346  00102A                     u4350:
  2347  00102A  2EE8               	decfsz	wreg,f,c
  2348  00102C  D7F8               	goto	u4355
  2349  00102E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2350  001032  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2351  001036  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2352  00103A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2356  00103E  0100               	movlb	0	; () banked
  2357  001040  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2358  001042  0100               	movlb	0	; () banked
  2359  001044  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2360  001046  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2361  001048  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2362  00104A  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2366  00104C  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2370  001050  0E07               	movlw	7
  2371  001052  0100               	movlb	0	; () banked
  2372  001054  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2373  001056  0100               	movlb	0	; () banked
  2374  001058  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2375  00105A  0E00               	movlw	0
  2376  00105C  0100               	movlb	0	; () banked
  2377  00105E  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2378  001060  0100               	movlb	0	; () banked
  2379  001062  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2380  001064  0E00               	movlw	0
  2381  001066  0100               	movlb	0	; () banked
  2382  001068  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2383  00106A  0100               	movlb	0	; () banked
  2384  00106C  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2385  00106E  0E00               	movlw	0
  2386  001070  0100               	movlb	0	; () banked
  2387  001072  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2388  001074  0100               	movlb	0	; () banked
  2389  001076  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2393  001078  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2394  00107C  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2395  001080  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2396  001084  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2397  001088  0E05               	movlw	5
  2398  00108A                     u4365:
  2399  00108A  90D8               	bcf	status,0,c
  2400  00108C  0100               	movlb	0	; () banked
  2401  00108E  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  2402  001090  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2403  001092  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2404  001094  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2405  001096  2EE8               	decfsz	wreg,f,c
  2406  001098  D7F8               	goto	u4365
  2407  00109A  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2408  00109E  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2409  0010A2  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2410  0010A6  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2414  0010AA  010F               	movlb	15	; () banked
  2415  0010AC  5132               	movf	50,w,b	;volatile
  2416  0010AE  0B1F               	andlw	31
  2417  0010B0  010F               	movlb	15	; () banked
  2418  0010B2  6F32               	movwf	50,b	;volatile
  2419                           
  2420                           ; BSR set to: 15
  2421                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2422  0010B4  C07F  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2423  0010B8                     l3711:
  2424                           
  2425                           ;inc\CANlib.h: 422: }
  2426                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2427  0010B8  0100               	movlb	0	; () banked
  2428  0010BA  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  2429  0010BC  D003               	goto	l392
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2433  0010BE  010F               	movlb	15	; () banked
  2434  0010C0  8130               	bsf	48,0,b	;volatile
  2435  0010C2  D002               	goto	l393
  2436  0010C4                     l392:
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;inc\CANlib.h: 426: else
  2440                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2441  0010C4  010F               	movlb	15	; () banked
  2442  0010C6  9130               	bcf	48,0,b	;volatile
  2443  0010C8                     l393:
  2444                           
  2445                           ; BSR set to: 15
  2446                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2447  0010C8  0100               	movlb	0	; () banked
  2448  0010CA  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  2449  0010CC  D003               	goto	l394
  2450                           
  2451                           ; BSR set to: 0
  2452                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2453  0010CE  010F               	movlb	15	; () banked
  2454  0010D0  8330               	bsf	48,1,b	;volatile
  2455  0010D2  D002               	goto	l3717
  2456  0010D4                     l394:
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;inc\CANlib.h: 430: else
  2460                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2461  0010D4  010F               	movlb	15	; () banked
  2462  0010D6  9330               	bcf	48,1,b	;volatile
  2463  0010D8                     l3717:
  2464                           
  2465                           ; BSR set to: 15
  2466                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2467  0010D8  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  2468  0010DC  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2469  0010E0  50DF               	movf	indf2,w,c
  2470  0010E2  010F               	movlb	15	; () banked
  2471  0010E4  6F36               	movwf	54,b	;volatile
  2472                           
  2473                           ; BSR set to: 15
  2474                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2475  0010E6  0100               	movlb	0	; () banked
  2476  0010E8  EE20 F001          	lfsr	2,1
  2477  0010EC  5177               	movf	CANsendMessage@data& (0+255),w,b
  2478  0010EE  26D9               	addwf	fsr2l,f,c
  2479  0010F0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2480  0010F2  22DA               	addwfc	fsr2h,f,c
  2481  0010F4  50DF               	movf	indf2,w,c
  2482  0010F6  010F               	movlb	15	; () banked
  2483  0010F8  6F37               	movwf	55,b	;volatile
  2484                           
  2485                           ; BSR set to: 15
  2486                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2487  0010FA  0100               	movlb	0	; () banked
  2488  0010FC  EE20 F002          	lfsr	2,2
  2489  001100  5177               	movf	CANsendMessage@data& (0+255),w,b
  2490  001102  26D9               	addwf	fsr2l,f,c
  2491  001104  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2492  001106  22DA               	addwfc	fsr2h,f,c
  2493  001108  50DF               	movf	indf2,w,c
  2494  00110A  010F               	movlb	15	; () banked
  2495  00110C  6F38               	movwf	56,b	;volatile
  2496                           
  2497                           ; BSR set to: 15
  2498                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2499  00110E  0100               	movlb	0	; () banked
  2500  001110  EE20 F003          	lfsr	2,3
  2501  001114  5177               	movf	CANsendMessage@data& (0+255),w,b
  2502  001116  26D9               	addwf	fsr2l,f,c
  2503  001118  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2504  00111A  22DA               	addwfc	fsr2h,f,c
  2505  00111C  50DF               	movf	indf2,w,c
  2506  00111E  010F               	movlb	15	; () banked
  2507  001120  6F39               	movwf	57,b	;volatile
  2508                           
  2509                           ; BSR set to: 15
  2510                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2511  001122  0100               	movlb	0	; () banked
  2512  001124  EE20 F004          	lfsr	2,4
  2513  001128  5177               	movf	CANsendMessage@data& (0+255),w,b
  2514  00112A  26D9               	addwf	fsr2l,f,c
  2515  00112C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2516  00112E  22DA               	addwfc	fsr2h,f,c
  2517  001130  50DF               	movf	indf2,w,c
  2518  001132  010F               	movlb	15	; () banked
  2519  001134  6F3A               	movwf	58,b	;volatile
  2520                           
  2521                           ; BSR set to: 15
  2522                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2523  001136  0100               	movlb	0	; () banked
  2524  001138  EE20 F005          	lfsr	2,5
  2525  00113C  5177               	movf	CANsendMessage@data& (0+255),w,b
  2526  00113E  26D9               	addwf	fsr2l,f,c
  2527  001140  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2528  001142  22DA               	addwfc	fsr2h,f,c
  2529  001144  50DF               	movf	indf2,w,c
  2530  001146  010F               	movlb	15	; () banked
  2531  001148  6F3B               	movwf	59,b	;volatile
  2532                           
  2533                           ; BSR set to: 15
  2534                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2535  00114A  0100               	movlb	0	; () banked
  2536  00114C  EE20 F006          	lfsr	2,6
  2537  001150  5177               	movf	CANsendMessage@data& (0+255),w,b
  2538  001152  26D9               	addwf	fsr2l,f,c
  2539  001154  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2540  001156  22DA               	addwfc	fsr2h,f,c
  2541  001158  50DF               	movf	indf2,w,c
  2542  00115A  010F               	movlb	15	; () banked
  2543  00115C  6F3C               	movwf	60,b	;volatile
  2544                           
  2545                           ; BSR set to: 15
  2546                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2547  00115E  0100               	movlb	0	; () banked
  2548  001160  EE20 F007          	lfsr	2,7
  2549  001164  5177               	movf	CANsendMessage@data& (0+255),w,b
  2550  001166  26D9               	addwf	fsr2l,f,c
  2551  001168  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2552  00116A  22DA               	addwfc	fsr2h,f,c
  2553  00116C  50DF               	movf	indf2,w,c
  2554  00116E  010F               	movlb	15	; () banked
  2555  001170  6F3D               	movwf	61,b	;volatile
  2556                           
  2557                           ; BSR set to: 15
  2558                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2559  001172  010F               	movlb	15	; () banked
  2560  001174  8730               	bsf	48,3,b	;volatile
  2561                           
  2562                           ; BSR set to: 15
  2563                           ;inc\CANlib.h: 444: return;
  2564  001176  0012               	return	
  2565  001178                     l382:
  2566                           
  2567                           ; BSR set to: 15
  2568                           ;inc\CANlib.h: 445: }
  2569                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2570  001178  010F               	movlb	15	; () banked
  2571  00117A  B720               	btfsc	32,3,b	;volatile
  2572  00117C  0012               	return	
  2573                           
  2574                           ; BSR set to: 15
  2575                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2576  00117E  C079  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2577                           
  2578                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2579  001182  0100               	movlb	0	; () banked
  2580  001184  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  2581  001186  D003               	goto	l397
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2585  001188  010F               	movlb	15	; () banked
  2586  00118A  8D25               	bsf	37,6,b	;volatile
  2587  00118C  D002               	goto	l398
  2588  00118E                     l397:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;inc\CANlib.h: 454: else
  2592                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2593  00118E  010F               	movlb	15	; () banked
  2594  001190  9D25               	bcf	37,6,b	;volatile
  2595  001192                     l398:
  2596                           
  2597                           ; BSR set to: 15
  2598                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2599  001192  0100               	movlb	0	; () banked
  2600  001194  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  2601  001196  D079               	goto	l399
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;inc\CANlib.h: 458: {
  2605                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2606  001198  0100               	movlb	0	; () banked
  2607  00119A  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  2608  00119C  0100               	movlb	0	; () banked
  2609  00119E  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2610  0011A0  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2611  0011A2  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2612  0011A4  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2616  0011A6  C07F  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2620  0011AA  0E00               	movlw	0
  2621  0011AC  0100               	movlb	0	; () banked
  2622  0011AE  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2623  0011B0  0100               	movlb	0	; () banked
  2624  0011B2  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2625  0011B4  0EFF               	movlw	255
  2626  0011B6  0100               	movlb	0	; () banked
  2627  0011B8  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2628  0011BA  0100               	movlb	0	; () banked
  2629  0011BC  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2630  0011BE  0E00               	movlw	0
  2631  0011C0  0100               	movlb	0	; () banked
  2632  0011C2  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2633  0011C4  0100               	movlb	0	; () banked
  2634  0011C6  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2635  0011C8  0E00               	movlw	0
  2636  0011CA  0100               	movlb	0	; () banked
  2637  0011CC  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2638  0011CE  0100               	movlb	0	; () banked
  2639  0011D0  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2643  0011D2  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2644  0011D6  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2645  0011DA  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2646  0011DE  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2647  0011E2  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  2648  0011E6  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2649  0011EA  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2650  0011EE  0100               	movlb	0	; () banked
  2651  0011F0  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  2652  0011F2  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2653  0011F6  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2654  0011FA  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2655  0011FE  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2659  001202  C07F  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2663  001206  0E00               	movlw	0
  2664  001208  010F               	movlb	15	; () banked
  2665  00120A  6F22               	movwf	34,b	;volatile
  2666                           
  2667                           ; BSR set to: 15
  2668                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2669  00120C  010F               	movlb	15	; () banked
  2670  00120E  8722               	bsf	34,3,b	;volatile
  2671                           
  2672                           ; BSR set to: 15
  2673                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2674  001210  0100               	movlb	0	; () banked
  2675  001212  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2676  001214  D002               	goto	l400
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2680  001216  010F               	movlb	15	; () banked
  2681  001218  8122               	bsf	34,0,b	;volatile
  2682  00121A                     l400:
  2683                           
  2684                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2685  00121A  0100               	movlb	0	; () banked
  2686  00121C  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2687  00121E  D002               	goto	l401
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2691  001220  010F               	movlb	15	; () banked
  2692  001222  8322               	bsf	34,1,b	;volatile
  2693  001224                     l401:
  2694                           
  2695                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2696  001224  0100               	movlb	0	; () banked
  2697  001226  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2698  001228  D002               	goto	l402
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2702  00122A  010F               	movlb	15	; () banked
  2703  00122C  8B22               	bsf	34,5,b	;volatile
  2704  00122E                     l402:
  2705                           
  2706                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2707  00122E  0100               	movlb	0	; () banked
  2708  001230  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2709  001232  D002               	goto	l403
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2713  001234  010F               	movlb	15	; () banked
  2714  001236  8D22               	bsf	34,6,b	;volatile
  2715  001238                     l403:
  2716                           
  2717                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2718  001238  0100               	movlb	0	; () banked
  2719  00123A  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2720  00123C  D002               	goto	l3767
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2724  00123E  010F               	movlb	15	; () banked
  2725  001240  8F22               	bsf	34,7,b	;volatile
  2726  001242                     l3767:
  2727                           
  2728                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2729  001242  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2730  001246  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2731  00124A  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2732  00124E  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2733  001252  0E16               	movlw	22
  2734  001254  D006               	goto	u4470
  2735  001256                     u4475:
  2736  001256  0100               	movlb	0	; () banked
  2737  001258  90D8               	bcf	status,0,c
  2738  00125A  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2739  00125C  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2740  00125E  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2741  001260  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2742  001262                     u4470:
  2743  001262  2EE8               	decfsz	wreg,f,c
  2744  001264  D7F8               	goto	u4475
  2745  001266  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2746  00126A  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2747  00126E  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2748  001272  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2752  001276  0100               	movlb	0	; () banked
  2753  001278  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2754  00127A  0100               	movlb	0	; () banked
  2755  00127C  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2756  00127E  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2757  001280  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2758  001282  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2762  001284  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2763                           
  2764                           ;inc\CANlib.h: 483: }
  2765  001288  D059               	goto	l3787
  2766  00128A                     l399:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;inc\CANlib.h: 485: else
  2770                           ;inc\CANlib.h: 487: {
  2771                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2772  00128A  010F               	movlb	15	; () banked
  2773  00128C  9722               	bcf	34,3,b	;volatile
  2774                           
  2775                           ; BSR set to: 15
  2776                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2777  00128E  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2778  001292  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2779  001296  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2780  00129A  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2781  00129E  0E04               	movlw	4
  2782  0012A0  D006               	goto	u4480
  2783  0012A2                     u4485:
  2784  0012A2  0100               	movlb	0	; () banked
  2785  0012A4  90D8               	bcf	status,0,c
  2786  0012A6  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2787  0012A8  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2788  0012AA  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2789  0012AC  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2790  0012AE                     u4480:
  2791  0012AE  2EE8               	decfsz	wreg,f,c
  2792  0012B0  D7F8               	goto	u4485
  2793  0012B2  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2794  0012B6  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2795  0012BA  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2796  0012BE  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2800  0012C2  0100               	movlb	0	; () banked
  2801  0012C4  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2802  0012C6  0100               	movlb	0	; () banked
  2803  0012C8  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2804  0012CA  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2805  0012CC  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2806  0012CE  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2810  0012D0  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2814  0012D4  0E07               	movlw	7
  2815  0012D6  0100               	movlb	0	; () banked
  2816  0012D8  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2817  0012DA  0100               	movlb	0	; () banked
  2818  0012DC  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2819  0012DE  0E00               	movlw	0
  2820  0012E0  0100               	movlb	0	; () banked
  2821  0012E2  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2822  0012E4  0100               	movlb	0	; () banked
  2823  0012E6  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2824  0012E8  0E00               	movlw	0
  2825  0012EA  0100               	movlb	0	; () banked
  2826  0012EC  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2827  0012EE  0100               	movlb	0	; () banked
  2828  0012F0  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2829  0012F2  0E00               	movlw	0
  2830  0012F4  0100               	movlb	0	; () banked
  2831  0012F6  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2832  0012F8  0100               	movlb	0	; () banked
  2833  0012FA  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2837  0012FC  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2838  001300  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2839  001304  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2840  001308  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2841  00130C  0E05               	movlw	5
  2842  00130E                     u4495:
  2843  00130E  90D8               	bcf	status,0,c
  2844  001310  0100               	movlb	0	; () banked
  2845  001312  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  2846  001314  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2847  001316  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2848  001318  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2849  00131A  2EE8               	decfsz	wreg,f,c
  2850  00131C  D7F8               	goto	u4495
  2851  00131E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2852  001322  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2853  001326  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2854  00132A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2858  00132E  010F               	movlb	15	; () banked
  2859  001330  5122               	movf	34,w,b	;volatile
  2860  001332  0B1F               	andlw	31
  2861  001334  010F               	movlb	15	; () banked
  2862  001336  6F22               	movwf	34,b	;volatile
  2863                           
  2864                           ; BSR set to: 15
  2865                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2866  001338  C07F  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2867  00133C                     l3787:
  2868                           
  2869                           ;inc\CANlib.h: 498: }
  2870                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2871  00133C  0100               	movlb	0	; () banked
  2872  00133E  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  2873  001340  D003               	goto	l406
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2877  001342  010F               	movlb	15	; () banked
  2878  001344  8120               	bsf	32,0,b	;volatile
  2879  001346  D002               	goto	l407
  2880  001348                     l406:
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;inc\CANlib.h: 502: else
  2884                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2885  001348  010F               	movlb	15	; () banked
  2886  00134A  9120               	bcf	32,0,b	;volatile
  2887  00134C                     l407:
  2888                           
  2889                           ; BSR set to: 15
  2890                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2891  00134C  0100               	movlb	0	; () banked
  2892  00134E  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  2893  001350  D003               	goto	l408
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2897  001352  010F               	movlb	15	; () banked
  2898  001354  8320               	bsf	32,1,b	;volatile
  2899  001356  D002               	goto	l3793
  2900  001358                     l408:
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;inc\CANlib.h: 506: else
  2904                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2905  001358  010F               	movlb	15	; () banked
  2906  00135A  9320               	bcf	32,1,b	;volatile
  2907  00135C                     l3793:
  2908                           
  2909                           ; BSR set to: 15
  2910                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2911  00135C  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  2912  001360  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2913  001364  50DF               	movf	indf2,w,c
  2914  001366  010F               	movlb	15	; () banked
  2915  001368  6F26               	movwf	38,b	;volatile
  2916                           
  2917                           ; BSR set to: 15
  2918                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2919  00136A  0100               	movlb	0	; () banked
  2920  00136C  EE20 F001          	lfsr	2,1
  2921  001370  5177               	movf	CANsendMessage@data& (0+255),w,b
  2922  001372  26D9               	addwf	fsr2l,f,c
  2923  001374  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2924  001376  22DA               	addwfc	fsr2h,f,c
  2925  001378  50DF               	movf	indf2,w,c
  2926  00137A  010F               	movlb	15	; () banked
  2927  00137C  6F27               	movwf	39,b	;volatile
  2928                           
  2929                           ; BSR set to: 15
  2930                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2931  00137E  0100               	movlb	0	; () banked
  2932  001380  EE20 F002          	lfsr	2,2
  2933  001384  5177               	movf	CANsendMessage@data& (0+255),w,b
  2934  001386  26D9               	addwf	fsr2l,f,c
  2935  001388  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2936  00138A  22DA               	addwfc	fsr2h,f,c
  2937  00138C  50DF               	movf	indf2,w,c
  2938  00138E  010F               	movlb	15	; () banked
  2939  001390  6F28               	movwf	40,b	;volatile
  2940                           
  2941                           ; BSR set to: 15
  2942                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2943  001392  0100               	movlb	0	; () banked
  2944  001394  EE20 F003          	lfsr	2,3
  2945  001398  5177               	movf	CANsendMessage@data& (0+255),w,b
  2946  00139A  26D9               	addwf	fsr2l,f,c
  2947  00139C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2948  00139E  22DA               	addwfc	fsr2h,f,c
  2949  0013A0  50DF               	movf	indf2,w,c
  2950  0013A2  010F               	movlb	15	; () banked
  2951  0013A4  6F29               	movwf	41,b	;volatile
  2952                           
  2953                           ; BSR set to: 15
  2954                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2955  0013A6  0100               	movlb	0	; () banked
  2956  0013A8  EE20 F004          	lfsr	2,4
  2957  0013AC  5177               	movf	CANsendMessage@data& (0+255),w,b
  2958  0013AE  26D9               	addwf	fsr2l,f,c
  2959  0013B0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2960  0013B2  22DA               	addwfc	fsr2h,f,c
  2961  0013B4  50DF               	movf	indf2,w,c
  2962  0013B6  010F               	movlb	15	; () banked
  2963  0013B8  6F2A               	movwf	42,b	;volatile
  2964                           
  2965                           ; BSR set to: 15
  2966                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2967  0013BA  0100               	movlb	0	; () banked
  2968  0013BC  EE20 F005          	lfsr	2,5
  2969  0013C0  5177               	movf	CANsendMessage@data& (0+255),w,b
  2970  0013C2  26D9               	addwf	fsr2l,f,c
  2971  0013C4  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2972  0013C6  22DA               	addwfc	fsr2h,f,c
  2973  0013C8  50DF               	movf	indf2,w,c
  2974  0013CA  010F               	movlb	15	; () banked
  2975  0013CC  6F2B               	movwf	43,b	;volatile
  2976                           
  2977                           ; BSR set to: 15
  2978                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2979  0013CE  0100               	movlb	0	; () banked
  2980  0013D0  EE20 F006          	lfsr	2,6
  2981  0013D4  5177               	movf	CANsendMessage@data& (0+255),w,b
  2982  0013D6  26D9               	addwf	fsr2l,f,c
  2983  0013D8  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2984  0013DA  22DA               	addwfc	fsr2h,f,c
  2985  0013DC  50DF               	movf	indf2,w,c
  2986  0013DE  010F               	movlb	15	; () banked
  2987  0013E0  6F2C               	movwf	44,b	;volatile
  2988                           
  2989                           ; BSR set to: 15
  2990                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2991  0013E2  0100               	movlb	0	; () banked
  2992  0013E4  EE20 F007          	lfsr	2,7
  2993  0013E8  5177               	movf	CANsendMessage@data& (0+255),w,b
  2994  0013EA  26D9               	addwf	fsr2l,f,c
  2995  0013EC  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2996  0013EE  22DA               	addwfc	fsr2h,f,c
  2997  0013F0  50DF               	movf	indf2,w,c
  2998  0013F2  010F               	movlb	15	; () banked
  2999  0013F4  6F2D               	movwf	45,b	;volatile
  3000                           
  3001                           ; BSR set to: 15
  3002                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  3003  0013F6  010F               	movlb	15	; () banked
  3004  0013F8  8720               	bsf	32,3,b	;volatile
  3005                           
  3006                           ; BSR set to: 15
  3007                           ;inc\CANlib.h: 520: return;
  3008  0013FA  0012               	return	
  3009  0013FC                     __end_of_CANsendMessage:
  3010                           	opt stack 0
  3011                           tblptru	equ	0xFF8
  3012                           tblptrh	equ	0xFF7
  3013                           tblptrl	equ	0xFF6
  3014                           tablat	equ	0xFF5
  3015                           postinc0	equ	0xFEE
  3016                           wreg	equ	0xFE8
  3017                           indf2	equ	0xFDF
  3018                           fsr2h	equ	0xFDA
  3019                           fsr2l	equ	0xFD9
  3020                           status	equ	0xFD8
  3021                           
  3022 ;; *************** function _CANisTxReady *****************
  3023 ;; Defined at:
  3024 ;;		line 1154 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      unsigned char 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3038 ;;      Params:         0       0       0       0
  3039 ;;      Locals:         0       1       0       0
  3040 ;;      Temps:          0       0       0       0
  3041 ;;      Totals:         0       1       0       0
  3042 ;;Total ram usage:        1 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:    4
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_send_data
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text3
  3053  0038AA                     __ptext3:
  3054                           	opt stack 0
  3055  0038AA                     _CANisTxReady:
  3056                           	opt stack 25
  3057                           
  3058                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  3059                           
  3060                           ; BSR set to: 15
  3061                           ;incstack = 0
  3062  0038AA  0E01               	movlw	1
  3063  0038AC  0100               	movlb	0	; () banked
  3064  0038AE  6F73               	movwf	_CANisTxReady$2913& (0+255),b
  3065                           
  3066                           ; BSR set to: 0
  3067  0038B0  010F               	movlb	15	; () banked
  3068  0038B2  A740               	btfss	64,3,b	;volatile
  3069  0038B4  D009               	goto	l560
  3070                           
  3071                           ; BSR set to: 15
  3072  0038B6  010F               	movlb	15	; () banked
  3073  0038B8  A730               	btfss	48,3,b	;volatile
  3074  0038BA  D006               	goto	l560
  3075                           
  3076                           ; BSR set to: 15
  3077  0038BC  010F               	movlb	15	; () banked
  3078  0038BE  A720               	btfss	32,3,b	;volatile
  3079  0038C0  D003               	goto	l560
  3080                           
  3081                           ; BSR set to: 15
  3082  0038C2  0E00               	movlw	0
  3083  0038C4  0100               	movlb	0	; () banked
  3084  0038C6  6F73               	movwf	_CANisTxReady$2913& (0+255),b
  3085  0038C8                     l560:
  3086  0038C8  0100               	movlb	0	; () banked
  3087  0038CA  5173               	movf	_CANisTxReady$2913& (0+255),w,b
  3088  0038CC  0012               	return	
  3089  0038CE                     __end_of_CANisTxReady:
  3090                           	opt stack 0
  3091                           tblptru	equ	0xFF8
  3092                           tblptrh	equ	0xFF7
  3093                           tblptrl	equ	0xFF6
  3094                           tablat	equ	0xFF5
  3095                           postinc0	equ	0xFEE
  3096                           wreg	equ	0xFE8
  3097                           indf2	equ	0xFDF
  3098                           fsr2h	equ	0xFDA
  3099                           fsr2l	equ	0xFD9
  3100                           status	equ	0xFD8
  3101                           
  3102 ;; *************** function _configurazione_iniziale *****************
  3103 ;; Defined at:
  3104 ;;		line 190 in file "newmain.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;		None
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;		None
  3109 ;; Return value:  Size  Location     Type
  3110 ;;		None               void
  3111 ;; Registers used:
  3112 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3118 ;;      Params:         0       0       0       0
  3119 ;;      Locals:         0       0       0       0
  3120 ;;      Temps:          0       0       0       0
  3121 ;;      Totals:         0       0       0       0
  3122 ;;Total ram usage:        0 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    6
  3125 ;; This function calls:
  3126 ;;		_CANInitialize
  3127 ;;		_OpenADC
  3128 ;;		_delay_ms
  3129 ;; This function is called by:
  3130 ;;		_main
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text4
  3135  003362                     __ptext4:
  3136                           	opt stack 0
  3137  003362                     _configurazione_iniziale:
  3138                           	opt stack 24
  3139                           
  3140                           ;newmain.c: 191: LATA = 0x00;
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;incstack = 0
  3144  003362  0E00               	movlw	0
  3145  003364  6E89               	movwf	3977,c	;volatile
  3146                           
  3147                           ;newmain.c: 192: TRISA = 0b11111100;
  3148  003366  0EFC               	movlw	252
  3149  003368  6E92               	movwf	3986,c	;volatile
  3150                           
  3151                           ;newmain.c: 194: LATB = 0x00;
  3152  00336A  0E00               	movlw	0
  3153  00336C  6E8A               	movwf	3978,c	;volatile
  3154                           
  3155                           ;newmain.c: 195: TRISB = 0b11111011;
  3156  00336E  0EFB               	movlw	251
  3157  003370  6E93               	movwf	3987,c	;volatile
  3158                           
  3159                           ;newmain.c: 197: LATC = 0x00;
  3160  003372  0E00               	movlw	0
  3161  003374  6E8B               	movwf	3979,c	;volatile
  3162                           
  3163                           ;newmain.c: 198: TRISC = 0x00;
  3164  003376  0E00               	movlw	0
  3165  003378  6E94               	movwf	3988,c	;volatile
  3166                           
  3167                           ;newmain.c: 200: LATD = 0x00;
  3168  00337A  0E00               	movlw	0
  3169  00337C  6E8C               	movwf	3980,c	;volatile
  3170                           
  3171                           ;newmain.c: 201: TRISD = 0x00;
  3172  00337E  0E00               	movlw	0
  3173  003380  6E95               	movwf	3989,c	;volatile
  3174                           
  3175                           ;newmain.c: 203: LATE = 0x00;
  3176  003382  0E00               	movlw	0
  3177  003384  6E8D               	movwf	3981,c	;volatile
  3178                           
  3179                           ;newmain.c: 204: TRISE = 0xFF;
  3180  003386  6896               	setf	3990,c	;volatile
  3181                           
  3182                           ;newmain.c: 206: PORTC = 0xff;
  3183  003388  6882               	setf	3970,c	;volatile
  3184                           
  3185                           ;newmain.c: 207: delay_ms(100);
  3186  00338A  0E00               	movlw	0
  3187  00338C  0100               	movlb	0	; () banked
  3188  00338E  6F7A               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3189  003390  0E64               	movlw	100
  3190  003392  6F79               	movwf	delay_ms@value_ms& (0+255),b
  3191  003394  EC01  F01C         	call	_delay_ms	;wreg free
  3192                           
  3193                           ;newmain.c: 208: PORTC = 0x00;
  3194  003398  0E00               	movlw	0
  3195  00339A  6E82               	movwf	3970,c	;volatile
  3196                           
  3197                           ;newmain.c: 209: delay_ms(100);
  3198  00339C  0E00               	movlw	0
  3199  00339E  0100               	movlb	0	; () banked
  3200  0033A0  6F7A               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3201  0033A2  0E64               	movlw	100
  3202  0033A4  6F79               	movwf	delay_ms@value_ms& (0+255),b
  3203  0033A6  EC01  F01C         	call	_delay_ms	;wreg free
  3204                           
  3205                           ;newmain.c: 210: PORTC = 0xff;
  3206  0033AA  6882               	setf	3970,c	;volatile
  3207                           
  3208                           ;newmain.c: 211: delay_ms(100);
  3209  0033AC  0E00               	movlw	0
  3210  0033AE  0100               	movlb	0	; () banked
  3211  0033B0  6F7A               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3212  0033B2  0E64               	movlw	100
  3213  0033B4  6F79               	movwf	delay_ms@value_ms& (0+255),b
  3214  0033B6  EC01  F01C         	call	_delay_ms	;wreg free
  3215                           
  3216                           ;newmain.c: 212: PORTC = 0x00;
  3217  0033BA  0E00               	movlw	0
  3218  0033BC  6E82               	movwf	3970,c	;volatile
  3219                           
  3220                           ;newmain.c: 213: delay_ms(100);
  3221  0033BE  0E00               	movlw	0
  3222  0033C0  0100               	movlb	0	; () banked
  3223  0033C2  6F7A               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3224  0033C4  0E64               	movlw	100
  3225  0033C6  6F79               	movwf	delay_ms@value_ms& (0+255),b
  3226  0033C8  EC01  F01C         	call	_delay_ms	;wreg free
  3227                           
  3228                           ;newmain.c: 214: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SA
      +                          MPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3229  0033CC  0E06               	movlw	6
  3230  0033CE  0100               	movlb	0	; () banked
  3231  0033D0  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3232  0033D2  0E05               	movlw	5
  3233  0033D4  0100               	movlb	0	; () banked
  3234  0033D6  6F82               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3235  0033D8  0E01               	movlw	1
  3236  0033DA  0100               	movlb	0	; () banked
  3237  0033DC  6F83               	movwf	CANInitialize@SJW& (0+255),b
  3238  0033DE  0E03               	movlw	3
  3239  0033E0  0100               	movlb	0	; () banked
  3240  0033E2  6F84               	movwf	CANInitialize@BRP& (0+255),b
  3241  0033E4  0E9D               	movlw	157
  3242  0033E6  0100               	movlb	0	; () banked
  3243  0033E8  6F85               	movwf	CANInitialize@flags& (0+255),b
  3244  0033EA  0E04               	movlw	4
  3245  0033EC  EC48  F018         	call	_CANInitialize
  3246                           
  3247                           ;newmain.c: 215: RCONbits.IPEN = 1;
  3248  0033F0  8ED0               	bsf	4048,7,c	;volatile
  3249                           
  3250                           ;newmain.c: 216: PIR3bits.RXB1IF = 0;
  3251  0033F2  92A4               	bcf	4004,1,c	;volatile
  3252                           
  3253                           ;newmain.c: 217: PIR3bits.RXB0IF = 0;
  3254  0033F4  90A4               	bcf	4004,0,c	;volatile
  3255                           
  3256                           ;newmain.c: 218: PIE3bits.RXB1IE = 1;
  3257  0033F6  82A3               	bsf	4003,1,c	;volatile
  3258                           
  3259                           ;newmain.c: 219: PIE3bits.RXB0IE = 1;
  3260  0033F8  80A3               	bsf	4003,0,c	;volatile
  3261                           
  3262                           ;newmain.c: 220: IPR3bits.RXB1IP = 0;
  3263  0033FA  92A5               	bcf	4005,1,c	;volatile
  3264                           
  3265                           ;newmain.c: 221: IPR3bits.RXB0IP = 0;
  3266  0033FC  90A5               	bcf	4005,0,c	;volatile
  3267                           
  3268                           ;newmain.c: 222: INTCONbits.GIEH = 1;
  3269  0033FE  8EF2               	bsf	intcon,7,c	;volatile
  3270                           
  3271                           ;newmain.c: 223: INTCONbits.GIEL = 1;
  3272  003400  8CF2               	bsf	intcon,6,c	;volatile
  3273                           
  3274                           ;newmain.c: 224: INTCON2bits.INTEDG0 = 1;
  3275  003402  8CF1               	bsf	intcon2,6,c	;volatile
  3276                           
  3277                           ;newmain.c: 225: INTCON2bits.TMR0IP = 1;
  3278  003404  84F1               	bsf	intcon2,2,c	;volatile
  3279                           
  3280                           ;newmain.c: 226: INTCONbits.TMR0IF = 0;
  3281  003406  94F2               	bcf	intcon,2,c	;volatile
  3282                           
  3283                           ;newmain.c: 227: INTCONbits.TMR0IE = 1;
  3284  003408  8AF2               	bsf	intcon,5,c	;volatile
  3285                           
  3286                           ;newmain.c: 228: PORTC = 0xff;
  3287  00340A  6882               	setf	3970,c	;volatile
  3288                           
  3289                           ;newmain.c: 229: delay_ms(100);
  3290  00340C  0E00               	movlw	0
  3291  00340E  0100               	movlb	0	; () banked
  3292  003410  6F7A               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3293  003412  0E64               	movlw	100
  3294  003414  6F79               	movwf	delay_ms@value_ms& (0+255),b
  3295  003416  EC01  F01C         	call	_delay_ms	;wreg free
  3296                           
  3297                           ;newmain.c: 230: PORTC = 0x00;
  3298  00341A  0E00               	movlw	0
  3299  00341C  6E82               	movwf	3970,c	;volatile
  3300                           
  3301                           ;newmain.c: 231: T0CON = 0x80;
  3302  00341E  0E80               	movlw	128
  3303  003420  6ED5               	movwf	4053,c	;volatile
  3304                           
  3305                           ;newmain.c: 233: T3CON = 0x01;
  3306  003422  0E01               	movlw	1
  3307  003424  6EB1               	movwf	4017,c	;volatile
  3308                           
  3309                           ;newmain.c: 234: PIR2bits.TMR3IF = 0;
  3310  003426  92A1               	bcf	4001,1,c	;volatile
  3311                           
  3312                           ;newmain.c: 235: IPR2bits.TMR3IP = 0;
  3313  003428  92A2               	bcf	4002,1,c	;volatile
  3314                           
  3315                           ;newmain.c: 236: TMR3H = 0x63;
  3316  00342A  0E63               	movlw	99
  3317  00342C  6EB3               	movwf	4019,c	;volatile
  3318                           
  3319                           ;newmain.c: 237: TMR3L = 0xC0;
  3320  00342E  0EC0               	movlw	192
  3321  003430  6EB2               	movwf	4018,c	;volatile
  3322                           
  3323                           ;newmain.c: 238: PIE2bits.TMR3IE = 1;
  3324  003432  82A0               	bsf	4000,1,c	;volatile
  3325                           
  3326                           ;newmain.c: 242: OpenADC(0b11011111 & 0b11111111 & 0b11111101, 0b10001111 & 0b11111100 &
      +                           0b01111111, 0b11111101);
  3327  003434  0E0C               	movlw	12
  3328  003436  0100               	movlb	0	; () banked
  3329  003438  6F73               	movwf	OpenADC@config2& (0+255),b
  3330  00343A  0EFD               	movlw	253
  3331  00343C  0100               	movlb	0	; () banked
  3332  00343E  6F74               	movwf	OpenADC@portconfig& (0+255),b
  3333  003440  0EDD               	movlw	221
  3334  003442  ECDB  F01A         	call	_OpenADC
  3335  003446  0012               	return		;funcret
  3336  003448                     __end_of_configurazione_iniziale:
  3337                           	opt stack 0
  3338                           tblptru	equ	0xFF8
  3339                           tblptrh	equ	0xFF7
  3340                           tblptrl	equ	0xFF6
  3341                           tablat	equ	0xFF5
  3342                           intcon	equ	0xFF2
  3343                           intcon2	equ	0xFF1
  3344                           postinc0	equ	0xFEE
  3345                           wreg	equ	0xFE8
  3346                           indf2	equ	0xFDF
  3347                           fsr2h	equ	0xFDA
  3348                           fsr2l	equ	0xFD9
  3349                           status	equ	0xFD8
  3350                           
  3351 ;; *************** function _delay_ms *****************
  3352 ;; Defined at:
  3353 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  value_ms        2   25[BANK0 ] unsigned int 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;		None               void
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3367 ;;      Params:         0       2       0       0
  3368 ;;      Locals:         0       0       0       0
  3369 ;;      Temps:          0       0       0       0
  3370 ;;      Totals:         0       2       0       0
  3371 ;;Total ram usage:        2 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    5
  3374 ;; This function calls:
  3375 ;;		___wmul
  3376 ;; This function is called by:
  3377 ;;		_main
  3378 ;;		_configurazione_iniziale
  3379 ;;		_delay_s
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text5
  3384  003802                     __ptext5:
  3385                           	opt stack 0
  3386  003802                     _delay_ms:
  3387                           	opt stack 25
  3388                           
  3389                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3390                           
  3391                           ;incstack = 0
  3392  003802  C0E8  F073         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3393  003806  0100               	movlb	0	; () banked
  3394  003808  6B74               	clrf	(___wmul@multiplier+1)& (0+255),b
  3395  00380A  C079  F075         	movff	delay_ms@value_ms,___wmul@multiplicand
  3396  00380E  C07A  F076         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3397  003812  EC3A  F01C         	call	___wmul	;wreg free
  3398  003816  C073  F0EA         	movff	?___wmul,_clock_counter_reference	;volatile
  3399  00381A  C074  F0EB         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3400                           
  3401                           ;src\delay.c: 75: while (clock_counter_reference) {
  3402  00381E  D007               	goto	l573
  3403  003820                     l3827:
  3404                           
  3405                           ;src\delay.c: 85: _delay(240);
  3406  003820  0E50               	movlw	80
  3407  003822                     u6847:
  3408  003822  2EE8               	decfsz	wreg,f,c
  3409  003824  D7FE               	goto	u6847
  3410                           
  3411                           ;src\delay.c: 88: clock_counter_reference--;
  3412  003826  0100               	movlb	0	; () banked
  3413  003828  07EA               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3414  00382A  A0D8               	btfss	status,0,c
  3415  00382C  07EB               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3416  00382E                     l573:
  3417  00382E  0100               	movlb	0	; () banked
  3418  003830  51EA               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3419  003832  0100               	movlb	0	; () banked
  3420  003834  11EB               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3421  003836  B4D8               	btfsc	status,2,c
  3422  003838  0012               	return	
  3423  00383A  D7F2               	goto	l3827
  3424  00383C                     __end_of_delay_ms:
  3425                           	opt stack 0
  3426                           tblptru	equ	0xFF8
  3427                           tblptrh	equ	0xFF7
  3428                           tblptrl	equ	0xFF6
  3429                           tablat	equ	0xFF5
  3430                           intcon	equ	0xFF2
  3431                           intcon2	equ	0xFF1
  3432                           postinc0	equ	0xFEE
  3433                           wreg	equ	0xFE8
  3434                           indf2	equ	0xFDF
  3435                           fsr2h	equ	0xFDA
  3436                           fsr2l	equ	0xFD9
  3437                           status	equ	0xFD8
  3438                           
  3439 ;; *************** function ___wmul *****************
  3440 ;; Defined at:
  3441 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;  multiplier      2   19[BANK0 ] unsigned int 
  3444 ;;  multiplicand    2   21[BANK0 ] unsigned int 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;  product         2   23[BANK0 ] unsigned int 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  2   19[BANK0 ] unsigned int 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, prodl, prodh
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3456 ;;      Params:         0       4       0       0
  3457 ;;      Locals:         0       2       0       0
  3458 ;;      Temps:          0       0       0       0
  3459 ;;      Totals:         0       6       0       0
  3460 ;;Total ram usage:        6 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    4
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_delay_ms
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text6
  3471  003874                     __ptext6:
  3472                           	opt stack 0
  3473  003874                     ___wmul:
  3474                           	opt stack 25
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;incstack = 0
  3478  003874  0100               	movlb	0	; () banked
  3479  003876  5173               	movf	___wmul@multiplier& (0+255),w,b
  3480  003878  0100               	movlb	0	; () banked
  3481  00387A  0375               	mulwf	___wmul@multiplicand& (0+255),b
  3482  00387C  CFF3 F077          	movff	prodl,___wmul@product
  3483  003880  CFF4 F078          	movff	prodh,___wmul@product+1
  3484  003884  0100               	movlb	0	; () banked
  3485  003886  5173               	movf	___wmul@multiplier& (0+255),w,b
  3486  003888  0100               	movlb	0	; () banked
  3487  00388A  0376               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3488  00388C  50F3               	movf	prodl,w,c
  3489  00388E  0100               	movlb	0	; () banked
  3490  003890  2778               	addwf	(___wmul@product+1)& (0+255),f,b
  3491  003892  0100               	movlb	0	; () banked
  3492  003894  5174               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3493  003896  0100               	movlb	0	; () banked
  3494  003898  0375               	mulwf	___wmul@multiplicand& (0+255),b
  3495  00389A  50F3               	movf	prodl,w,c
  3496  00389C  0100               	movlb	0	; () banked
  3497  00389E  2778               	addwf	(___wmul@product+1)& (0+255),f,b
  3498                           
  3499                           ; BSR set to: 0
  3500  0038A0  C077  F073         	movff	___wmul@product,?___wmul
  3501  0038A4  C078  F074         	movff	___wmul@product+1,?___wmul+1
  3502  0038A8  0012               	return	
  3503  0038AA                     __end_of___wmul:
  3504                           	opt stack 0
  3505                           tblptru	equ	0xFF8
  3506                           tblptrh	equ	0xFF7
  3507                           tblptrl	equ	0xFF6
  3508                           tablat	equ	0xFF5
  3509                           prodh	equ	0xFF4
  3510                           prodl	equ	0xFF3
  3511                           intcon	equ	0xFF2
  3512                           intcon2	equ	0xFF1
  3513                           postinc0	equ	0xFEE
  3514                           wreg	equ	0xFE8
  3515                           indf2	equ	0xFDF
  3516                           fsr2h	equ	0xFDA
  3517                           fsr2l	equ	0xFD9
  3518                           status	equ	0xFD8
  3519                           
  3520 ;; *************** function _OpenADC *****************
  3521 ;; Defined at:
  3522 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcopen.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  config          1    wreg     unsigned char 
  3525 ;;  config2         1   19[BANK0 ] unsigned char 
  3526 ;;  portconfig      1   20[BANK0 ] unsigned char 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  config          1   23[BANK0 ] unsigned char 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;		None               void
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3538 ;;      Params:         0       2       0       0
  3539 ;;      Locals:         0       1       0       0
  3540 ;;      Temps:          0       2       0       0
  3541 ;;      Totals:         0       5       0       0
  3542 ;;Total ram usage:        5 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    4
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_configurazione_iniziale
  3549 ;; This function uses a non-reentrant model
  3550 ;;
  3551                           
  3552                           	psect	text7
  3553  0035B6                     __ptext7:
  3554                           	opt stack 0
  3555  0035B6                     _OpenADC:
  3556                           	opt stack 25
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;incstack = 0
  3560                           ;OpenADC@config stored from wreg
  3561  0035B6  0100               	movlb	0	; () banked
  3562  0035B8  6F77               	movwf	OpenADC@config& (0+255),b
  3563  0035BA  0E00               	movlw	0
  3564  0035BC  6EC2               	movwf	4034,c	;volatile
  3565  0035BE  0E00               	movlw	0
  3566  0035C0  6EC0               	movwf	4032,c	;volatile
  3567  0035C2  0100               	movlb	0	; () banked
  3568  0035C4  90D8               	bcf	status,0,c
  3569  0035C6  3173               	rrcf	OpenADC@config2& (0+255),w,b
  3570  0035C8  0B3C               	andlw	60
  3571  0035CA  6EC2               	movwf	4034,c	;volatile
  3572                           
  3573                           ; BSR set to: 0
  3574  0035CC  C073  F075         	movff	OpenADC@config2,??_OpenADC
  3575  0035D0  0100               	movlb	0	; () banked
  3576  0035D2  3B75               	swapf	??_OpenADC& (0+255),f,b
  3577  0035D4  0EF0               	movlw	240
  3578  0035D6  1775               	andwf	??_OpenADC& (0+255),f,b
  3579  0035D8  0E30               	movlw	48
  3580  0035DA  0100               	movlb	0	; () banked
  3581  0035DC  1775               	andwf	??_OpenADC& (0+255),f,b
  3582  0035DE  0100               	movlb	0	; () banked
  3583  0035E0  5174               	movf	OpenADC@portconfig& (0+255),w,b
  3584  0035E2  0B0F               	andlw	15
  3585  0035E4  0100               	movlb	0	; () banked
  3586  0035E6  1175               	iorwf	??_OpenADC& (0+255),w,b
  3587  0035E8  6EC1               	movwf	4033,c	;volatile
  3588                           
  3589                           ; BSR set to: 0
  3590  0035EA  C077  F075         	movff	OpenADC@config,??_OpenADC
  3591  0035EE  0100               	movlb	0	; () banked
  3592  0035F0  90D8               	bcf	status,0,c
  3593  0035F2  3775               	rlcf	??_OpenADC& (0+255),f,b
  3594  0035F4  0100               	movlb	0	; () banked
  3595  0035F6  90D8               	bcf	status,0,c
  3596  0035F8  3775               	rlcf	??_OpenADC& (0+255),f,b
  3597  0035FA  0E38               	movlw	56
  3598  0035FC  0100               	movlb	0	; () banked
  3599  0035FE  1775               	andwf	??_OpenADC& (0+255),f,b
  3600  003600  C077  F076         	movff	OpenADC@config,??_OpenADC+1
  3601  003604  0100               	movlb	0	; () banked
  3602  003606  3B76               	swapf	(??_OpenADC+1)& (0+255),f,b
  3603  003608  0E0F               	movlw	15
  3604  00360A  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  3605  00360C  0E07               	movlw	7
  3606  00360E  0100               	movlb	0	; () banked
  3607  003610  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  3608  003612  0100               	movlb	0	; () banked
  3609  003614  5177               	movf	OpenADC@config& (0+255),w,b
  3610  003616  0B80               	andlw	128
  3611  003618  0100               	movlb	0	; () banked
  3612  00361A  1176               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3613  00361C  0100               	movlb	0	; () banked
  3614  00361E  1175               	iorwf	??_OpenADC& (0+255),w,b
  3615  003620  6EC0               	movwf	4032,c	;volatile
  3616                           
  3617                           ; BSR set to: 0
  3618  003622  0100               	movlb	0	; () banked
  3619  003624  AF73               	btfss	OpenADC@config2& (0+255),7,b
  3620  003626  D003               	goto	l712
  3621                           
  3622                           ; BSR set to: 0
  3623  003628  9C9E               	bcf	3998,6,c	;volatile
  3624  00362A  8C9D               	bsf	3997,6,c	;volatile
  3625  00362C  8CF2               	bsf	intcon,6,c	;volatile
  3626  00362E                     l712:
  3627                           
  3628                           ; BSR set to: 0
  3629  00362E  80C2               	bsf	4034,0,c	;volatile
  3630                           
  3631                           ; BSR set to: 0
  3632  003630  0012               	return		;funcret
  3633  003632                     __end_of_OpenADC:
  3634                           	opt stack 0
  3635                           tblptru	equ	0xFF8
  3636                           tblptrh	equ	0xFF7
  3637                           tblptrl	equ	0xFF6
  3638                           tablat	equ	0xFF5
  3639                           prodh	equ	0xFF4
  3640                           prodl	equ	0xFF3
  3641                           intcon	equ	0xFF2
  3642                           intcon2	equ	0xFF1
  3643                           postinc0	equ	0xFEE
  3644                           wreg	equ	0xFE8
  3645                           indf2	equ	0xFDF
  3646                           fsr2h	equ	0xFDA
  3647                           fsr2l	equ	0xFD9
  3648                           status	equ	0xFD8
  3649                           
  3650 ;; *************** function _CANInitialize *****************
  3651 ;; Defined at:
  3652 ;;		line 218 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  propSeg         1    wreg     unsigned char 
  3655 ;;  phaseSeg1       1   33[BANK0 ] unsigned char 
  3656 ;;  phaseSeg2       1   34[BANK0 ] unsigned char 
  3657 ;;  SJW             1   35[BANK0 ] unsigned char 
  3658 ;;  BRP             1   36[BANK0 ] unsigned char 
  3659 ;;  flags           1   37[BANK0 ] enum E16844
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  propSeg         1   42[BANK0 ] unsigned char 
  3662 ;;  FilterConfig    1   44[BANK0 ] unsigned char 
  3663 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  3664 ;; Return value:  Size  Location     Type
  3665 ;;		None               void
  3666 ;; Registers used:
  3667 ;;		wreg, status,2, status,0, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3673 ;;      Params:         0       5       0       0
  3674 ;;      Locals:         0       3       0       0
  3675 ;;      Temps:          0       4       0       0
  3676 ;;      Totals:         0      12       0       0
  3677 ;;Total ram usage:       12 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    5
  3680 ;; This function calls:
  3681 ;;		_CANOperationMode
  3682 ;;		_CANSetFilter
  3683 ;;		_CANSetMask
  3684 ;; This function is called by:
  3685 ;;		_configurazione_iniziale
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text8
  3690  003090                     __ptext8:
  3691                           	opt stack 0
  3692  003090                     _CANInitialize:
  3693                           	opt stack 24
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;incstack = 0
  3697                           ;CANInitialize@propSeg stored from wreg
  3698  003090  0100               	movlb	0	; () banked
  3699  003092  6F8A               	movwf	CANInitialize@propSeg& (0+255),b
  3700                           
  3701                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3702                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3703                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3704  003094  0E80               	movlw	128
  3705  003096  EC67  F01C         	call	_CANOperationMode
  3706                           
  3707                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3708  00309A  0E00               	movlw	0
  3709  00309C  6E70               	movwf	3952,c	;volatile
  3710                           
  3711                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3712  00309E  0E00               	movlw	0
  3713  0030A0  6E71               	movwf	3953,c	;volatile
  3714                           
  3715                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3716  0030A2  0E00               	movlw	0
  3717  0030A4  6E72               	movwf	3954,c	;volatile
  3718                           
  3719                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3720  0030A6  0100               	movlb	0	; () banked
  3721  0030A8  4183               	rrncf	CANInitialize@SJW& (0+255),w,b
  3722  0030AA  42E8               	rrncf	wreg,f,c
  3723  0030AC  0BC0               	andlw	192
  3724  0030AE  0100               	movlb	0	; () banked
  3725  0030B0  6F83               	movwf	CANInitialize@SJW& (0+255),b
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3729  0030B2  0100               	movlb	0	; () banked
  3730  0030B4  5183               	movf	CANInitialize@SJW& (0+255),w,b
  3731  0030B6  1270               	iorwf	3952,f,c	;volatile
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3735  0030B8  0100               	movlb	0	; () banked
  3736  0030BA  5184               	movf	CANInitialize@BRP& (0+255),w,b
  3737  0030BC  1270               	iorwf	3952,f,c	;volatile
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3741  0030BE  0100               	movlb	0	; () banked
  3742  0030C0  518A               	movf	CANInitialize@propSeg& (0+255),w,b
  3743  0030C2  1271               	iorwf	3953,f,c	;volatile
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3747  0030C4  0100               	movlb	0	; () banked
  3748  0030C6  3981               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3749  0030C8  42E8               	rrncf	wreg,f,c
  3750  0030CA  0BF8               	andlw	248
  3751  0030CC  0100               	movlb	0	; () banked
  3752  0030CE  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3756  0030D0  0100               	movlb	0	; () banked
  3757  0030D2  5181               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3758  0030D4  1271               	iorwf	3953,f,c	;volatile
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3762  0030D6  0100               	movlb	0	; () banked
  3763  0030D8  A585               	btfss	CANInitialize@flags& (0+255),2,b
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3767  0030DA  8C71               	bsf	3953,6,c	;volatile
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3771  0030DC  0100               	movlb	0	; () banked
  3772  0030DE  B185               	btfsc	CANInitialize@flags& (0+255),0,b
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3776  0030E0  8E71               	bsf	3953,7,c	;volatile
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3780                           
  3781                           ; BSR set to: 0
  3782  0030E2  0100               	movlb	0	; () banked
  3783  0030E4  5182               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3784  0030E6  1272               	iorwf	3954,f,c	;volatile
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3788  0030E8  0100               	movlb	0	; () banked
  3789  0030EA  B385               	btfsc	CANInitialize@flags& (0+255),1,b
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3793  0030EC  8C72               	bsf	3954,6,c	;volatile
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3797                           
  3798                           ; BSR set to: 0
  3799  0030EE  0100               	movlb	0	; () banked
  3800  0030F0  5185               	movf	CANInitialize@flags& (0+255),w,b
  3801  0030F2  0B60               	andlw	96
  3802  0030F4  6E60               	movwf	3936,c	;volatile
  3803                           
  3804                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3805  0030F6  0100               	movlb	0	; () banked
  3806  0030F8  5185               	movf	CANInitialize@flags& (0+255),w,b
  3807  0030FA  0B10               	andlw	16
  3808  0030FC  0AFF               	xorlw	255
  3809  0030FE  B4D8               	btfsc	status,2,c
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3813  003100  8460               	bsf	3936,2,c	;volatile
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3817  003102  CF60 FF50          	movff	3936,3920	;volatile
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3821  003106  0E00               	movlw	0
  3822  003108  0100               	movlb	0	; () banked
  3823  00310A  6F73               	movwf	CANSetMask@mask& (0+255),b
  3824  00310C  0E00               	movlw	0
  3825  00310E  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  3826  003110  0E00               	movlw	0
  3827  003112  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3828  003114  0E00               	movlw	0
  3829  003116  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3830  003118  0EF7               	movlw	247
  3831  00311A  0100               	movlb	0	; () banked
  3832  00311C  6F77               	movwf	CANSetMask@type& (0+255),b
  3833  00311E  0E01               	movlw	1
  3834  003120  EC92  F015         	call	_CANSetMask
  3835                           
  3836                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3837  003124  0E00               	movlw	0
  3838  003126  0100               	movlb	0	; () banked
  3839  003128  6F73               	movwf	CANSetMask@mask& (0+255),b
  3840  00312A  0E00               	movlw	0
  3841  00312C  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  3842  00312E  0E00               	movlw	0
  3843  003130  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3844  003132  0E00               	movlw	0
  3845  003134  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3846  003136  0EF7               	movlw	247
  3847  003138  0100               	movlb	0	; () banked
  3848  00313A  6F77               	movwf	CANSetMask@type& (0+255),b
  3849  00313C  0E02               	movlw	2
  3850  00313E  EC92  F015         	call	_CANSetMask
  3851                           
  3852                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3853  003142  D00F               	goto	l3575
  3854  003144                     l3569:
  3855                           
  3856                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3857  003144  0EF7               	movlw	247
  3858  003146  0100               	movlb	0	; () banked
  3859  003148  6F8B               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3860  00314A  D007               	goto	l3571
  3861  00314C                     l362:
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3865  00314C  0100               	movlb	0	; () banked
  3866  00314E  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3867                           
  3868                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3869  003150  0100               	movlb	0	; () banked
  3870  003152  698C               	setf	CANInitialize@FilterConfig2& (0+255),b
  3871                           
  3872                           ;inc\CANlib.h: 273: break;
  3873  003154  D028               	goto	l3577
  3874  003156                     l363:
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3878  003156  0100               	movlb	0	; () banked
  3879  003158  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3880  00315A                     l3571:
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3884  00315A  0EF7               	movlw	247
  3885  00315C  0100               	movlb	0	; () banked
  3886  00315E  6F8C               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;inc\CANlib.h: 278: }
  3890                           
  3891                           ;inc\CANlib.h: 277: break;
  3892  003160  D022               	goto	l3577
  3893  003162                     l3575:
  3894  003162  0E9F               	movlw	159
  3895  003164  0100               	movlb	0	; () banked
  3896  003166  6F86               	movwf	??_CANInitialize& (0+255),b
  3897  003168  0EFF               	movlw	255
  3898  00316A  0100               	movlb	0	; () banked
  3899  00316C  6F87               	movwf	(??_CANInitialize+1)& (0+255),b
  3900  00316E  0100               	movlb	0	; () banked
  3901  003170  5185               	movf	CANInitialize@flags& (0+255),w,b
  3902  003172  0B60               	andlw	96
  3903  003174  0100               	movlb	0	; () banked
  3904  003176  6F88               	movwf	(??_CANInitialize+2)& (0+255),b
  3905  003178  6B89               	clrf	(??_CANInitialize+3)& (0+255),b
  3906  00317A  0100               	movlb	0	; () banked
  3907  00317C  5186               	movf	??_CANInitialize& (0+255),w,b
  3908  00317E  0100               	movlb	0	; () banked
  3909  003180  1388               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3910  003182  0100               	movlb	0	; () banked
  3911  003184  5187               	movf	(??_CANInitialize+1)& (0+255),w,b
  3912  003186  0100               	movlb	0	; () banked
  3913  003188  1389               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3914                           
  3915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3916                           ; Switch size 1, requested type "space"
  3917                           ; Number of cases is 1, Range of values is 0 to 0
  3918                           ; switch strategies available:
  3919                           ; Name         Instructions Cycles
  3920                           ; simple_byte            4     3 (average)
  3921                           ;	Chosen strategy is simple_byte
  3922  00318A  0100               	movlb	0	; () banked
  3923  00318C  5189               	movf	(??_CANInitialize+3)& (0+255),w,b
  3924  00318E  0A00               	xorlw	0	; case 0
  3925  003190  A4D8               	btfss	status,2,c
  3926  003192  D7E1               	goto	l363
  3927                           
  3928                           ; BSR set to: 0
  3929                           ; Switch size 1, requested type "space"
  3930                           ; Number of cases is 2, Range of values is 191 to 223
  3931                           ; switch strategies available:
  3932                           ; Name         Instructions Cycles
  3933                           ; simple_byte            7     4 (average)
  3934                           ;	Chosen strategy is simple_byte
  3935  003194  0100               	movlb	0	; () banked
  3936  003196  5188               	movf	(??_CANInitialize+2)& (0+255),w,b
  3937  003198  0ABF               	xorlw	191	; case 191
  3938  00319A  B4D8               	btfsc	status,2,c
  3939  00319C  D7D7               	goto	l362
  3940  00319E  0A60               	xorlw	96	; case 223
  3941  0031A0  B4D8               	btfsc	status,2,c
  3942  0031A2  D7D0               	goto	l3569
  3943  0031A4  D7D8               	goto	l363
  3944  0031A6                     l3577:
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3948  0031A6  0E00               	movlw	0
  3949  0031A8  0100               	movlb	0	; () banked
  3950  0031AA  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3951  0031AC  0E00               	movlw	0
  3952  0031AE  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3953  0031B0  0E00               	movlw	0
  3954  0031B2  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3955  0031B4  0E00               	movlw	0
  3956  0031B6  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3957  0031B8  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3958  0031BC  0E00               	movlw	0
  3959  0031BE  ECB5  F000         	call	_CANSetFilter
  3960                           
  3961                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3962  0031C2  0E00               	movlw	0
  3963  0031C4  0100               	movlb	0	; () banked
  3964  0031C6  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3965  0031C8  0E00               	movlw	0
  3966  0031CA  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3967  0031CC  0E00               	movlw	0
  3968  0031CE  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3969  0031D0  0E00               	movlw	0
  3970  0031D2  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3971  0031D4  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3972  0031D8  0E01               	movlw	1
  3973  0031DA  ECB5  F000         	call	_CANSetFilter
  3974                           
  3975                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3976  0031DE  0E00               	movlw	0
  3977  0031E0  0100               	movlb	0	; () banked
  3978  0031E2  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3979  0031E4  0E00               	movlw	0
  3980  0031E6  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3981  0031E8  0E00               	movlw	0
  3982  0031EA  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3983  0031EC  0E00               	movlw	0
  3984  0031EE  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3985  0031F0  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3986  0031F4  0E02               	movlw	2
  3987  0031F6  ECB5  F000         	call	_CANSetFilter
  3988                           
  3989                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3990  0031FA  0E00               	movlw	0
  3991  0031FC  0100               	movlb	0	; () banked
  3992  0031FE  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3993  003200  0E00               	movlw	0
  3994  003202  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3995  003204  0E00               	movlw	0
  3996  003206  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3997  003208  0E00               	movlw	0
  3998  00320A  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3999  00320C  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4000  003210  0E03               	movlw	3
  4001  003212  ECB5  F000         	call	_CANSetFilter
  4002                           
  4003                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  4004  003216  0E00               	movlw	0
  4005  003218  0100               	movlb	0	; () banked
  4006  00321A  6F73               	movwf	CANSetFilter@filter& (0+255),b
  4007  00321C  0E00               	movlw	0
  4008  00321E  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4009  003220  0E00               	movlw	0
  4010  003222  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4011  003224  0E00               	movlw	0
  4012  003226  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4013  003228  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4014  00322C  0E04               	movlw	4
  4015  00322E  ECB5  F000         	call	_CANSetFilter
  4016                           
  4017                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  4018  003232  0E00               	movlw	0
  4019  003234  0100               	movlb	0	; () banked
  4020  003236  6F73               	movwf	CANSetFilter@filter& (0+255),b
  4021  003238  0E00               	movlw	0
  4022  00323A  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  4023  00323C  0E00               	movlw	0
  4024  00323E  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  4025  003240  0E00               	movlw	0
  4026  003242  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  4027  003244  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4028  003248  0E05               	movlw	5
  4029  00324A  ECB5  F000         	call	_CANSetFilter
  4030                           
  4031                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  4032  00324E  0E00               	movlw	0
  4033  003250  EC67  F01C         	call	_CANOperationMode
  4034  003254  0012               	return		;funcret
  4035  003256                     __end_of_CANInitialize:
  4036                           	opt stack 0
  4037                           tblptru	equ	0xFF8
  4038                           tblptrh	equ	0xFF7
  4039                           tblptrl	equ	0xFF6
  4040                           tablat	equ	0xFF5
  4041                           prodh	equ	0xFF4
  4042                           prodl	equ	0xFF3
  4043                           intcon	equ	0xFF2
  4044                           intcon2	equ	0xFF1
  4045                           postinc0	equ	0xFEE
  4046                           wreg	equ	0xFE8
  4047                           indf2	equ	0xFDF
  4048                           fsr2h	equ	0xFDA
  4049                           fsr2l	equ	0xFD9
  4050                           status	equ	0xFD8
  4051                           
  4052 ;; *************** function _CANSetMask *****************
  4053 ;; Defined at:
  4054 ;;		line 640 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  numBuffer       1    wreg     enum E16878
  4057 ;;  mask            4   19[BANK0 ] unsigned long 
  4058 ;;  type            1   23[BANK0 ] enum E16844
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  numBuffer       1   28[BANK0 ] enum E16878
  4061 ;;  tamp            4   29[BANK0 ] unsigned long 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;		None               void
  4064 ;; Registers used:
  4065 ;;		wreg, status,2, status,0
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4071 ;;      Params:         0       5       0       0
  4072 ;;      Locals:         0       5       0       0
  4073 ;;      Temps:          0       4       0       0
  4074 ;;      Totals:         0      14       0       0
  4075 ;;Total ram usage:       14 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; Hardware stack levels required when called:    4
  4078 ;; This function calls:
  4079 ;;		Nothing
  4080 ;; This function is called by:
  4081 ;;		_CANInitialize
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           	psect	text9
  4086  002B24                     __ptext9:
  4087                           	opt stack 0
  4088  002B24                     _CANSetMask:
  4089                           	opt stack 24
  4090                           
  4091                           ;incstack = 0
  4092                           ;CANSetMask@numBuffer stored from wreg
  4093  002B24  0100               	movlb	0	; () banked
  4094  002B26  6F7C               	movwf	CANSetMask@numBuffer& (0+255),b
  4095                           
  4096                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  4097  002B28  0100               	movlb	0	; () banked
  4098  002B2A  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  4099  002B2C  A4D8               	btfss	status,2,c
  4100  002B2E  D056               	goto	l3133
  4101                           
  4102                           ; BSR set to: 0
  4103  002B30  0100               	movlb	0	; () banked
  4104  002B32  2977               	incf	CANSetMask@type& (0+255),w,b
  4105  002B34  A4D8               	btfss	status,2,c
  4106  002B36  D052               	goto	l3133
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;inc\CANlib.h: 644: {
  4110                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  4111  002B38  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  4112  002B3C  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4113  002B40  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4114  002B44  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4115  002B48  0E04               	movlw	4
  4116  002B4A  D006               	goto	u3150
  4117  002B4C                     u3155:
  4118  002B4C  0100               	movlb	0	; () banked
  4119  002B4E  90D8               	bcf	status,0,c
  4120  002B50  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4121  002B52  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4122  002B54  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4123  002B56  3378               	rrcf	??_CANSetMask& (0+255),f,b
  4124  002B58                     u3150:
  4125  002B58  2EE8               	decfsz	wreg,f,c
  4126  002B5A  D7F8               	goto	u3155
  4127  002B5C  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4128  002B60  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4129  002B64  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4130  002B68  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  4134  002B6C  0100               	movlb	0	; () banked
  4135  002B6E  517D               	movf	CANSetMask@tamp& (0+255),w,b
  4136  002B70  0100               	movlb	0	; () banked
  4137  002B72  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4138  002B74  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4139  002B76  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4140  002B78  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  4144  002B7A  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  4148  002B7E  0E07               	movlw	7
  4149  002B80  0100               	movlb	0	; () banked
  4150  002B82  1573               	andwf	CANSetMask@mask& (0+255),w,b
  4151  002B84  0100               	movlb	0	; () banked
  4152  002B86  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4153  002B88  0E00               	movlw	0
  4154  002B8A  0100               	movlb	0	; () banked
  4155  002B8C  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4156  002B8E  0100               	movlb	0	; () banked
  4157  002B90  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4158  002B92  0E00               	movlw	0
  4159  002B94  0100               	movlb	0	; () banked
  4160  002B96  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4161  002B98  0100               	movlb	0	; () banked
  4162  002B9A  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4163  002B9C  0E00               	movlw	0
  4164  002B9E  0100               	movlb	0	; () banked
  4165  002BA0  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4166  002BA2  0100               	movlb	0	; () banked
  4167  002BA4  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  4171  002BA6  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  4172  002BAA  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4173  002BAE  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4174  002BB2  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4175  002BB6  0E05               	movlw	5
  4176  002BB8                     u3165:
  4177  002BB8  90D8               	bcf	status,0,c
  4178  002BBA  0100               	movlb	0	; () banked
  4179  002BBC  3778               	rlcf	??_CANSetMask& (0+255),f,b
  4180  002BBE  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4181  002BC0  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4182  002BC2  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4183  002BC4  2EE8               	decfsz	wreg,f,c
  4184  002BC6  D7F8               	goto	u3165
  4185  002BC8  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4186  002BCC  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4187  002BD0  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4188  002BD4  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4192  002BD8  C07D  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4193  002BDC                     l3133:
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;inc\CANlib.h: 652: }
  4197                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4198  002BDC  0E02               	movlw	2
  4199  002BDE  0100               	movlb	0	; () banked
  4200  002BE0  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4201  002BE2  A4D8               	btfss	status,2,c
  4202  002BE4  D056               	goto	l3149
  4203                           
  4204                           ; BSR set to: 0
  4205  002BE6  0100               	movlb	0	; () banked
  4206  002BE8  2977               	incf	CANSetMask@type& (0+255),w,b
  4207  002BEA  A4D8               	btfss	status,2,c
  4208  002BEC  D052               	goto	l3149
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;inc\CANlib.h: 655: {
  4212                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  4213  002BEE  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  4214  002BF2  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4215  002BF6  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4216  002BFA  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4217  002BFE  0E04               	movlw	4
  4218  002C00  D006               	goto	u3190
  4219  002C02                     u3195:
  4220  002C02  0100               	movlb	0	; () banked
  4221  002C04  90D8               	bcf	status,0,c
  4222  002C06  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4223  002C08  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4224  002C0A  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4225  002C0C  3378               	rrcf	??_CANSetMask& (0+255),f,b
  4226  002C0E                     u3190:
  4227  002C0E  2EE8               	decfsz	wreg,f,c
  4228  002C10  D7F8               	goto	u3195
  4229  002C12  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4230  002C16  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4231  002C1A  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4232  002C1E  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4236  002C22  0100               	movlb	0	; () banked
  4237  002C24  517D               	movf	CANSetMask@tamp& (0+255),w,b
  4238  002C26  0100               	movlb	0	; () banked
  4239  002C28  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4240  002C2A  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4241  002C2C  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4242  002C2E  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4246  002C30  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4250  002C34  0E07               	movlw	7
  4251  002C36  0100               	movlb	0	; () banked
  4252  002C38  1573               	andwf	CANSetMask@mask& (0+255),w,b
  4253  002C3A  0100               	movlb	0	; () banked
  4254  002C3C  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4255  002C3E  0E00               	movlw	0
  4256  002C40  0100               	movlb	0	; () banked
  4257  002C42  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4258  002C44  0100               	movlb	0	; () banked
  4259  002C46  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4260  002C48  0E00               	movlw	0
  4261  002C4A  0100               	movlb	0	; () banked
  4262  002C4C  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4263  002C4E  0100               	movlb	0	; () banked
  4264  002C50  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4265  002C52  0E00               	movlw	0
  4266  002C54  0100               	movlb	0	; () banked
  4267  002C56  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4268  002C58  0100               	movlb	0	; () banked
  4269  002C5A  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4273  002C5C  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  4274  002C60  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4275  002C64  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4276  002C68  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4277  002C6C  0E05               	movlw	5
  4278  002C6E                     u3205:
  4279  002C6E  90D8               	bcf	status,0,c
  4280  002C70  0100               	movlb	0	; () banked
  4281  002C72  3778               	rlcf	??_CANSetMask& (0+255),f,b
  4282  002C74  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4283  002C76  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4284  002C78  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4285  002C7A  2EE8               	decfsz	wreg,f,c
  4286  002C7C  D7F8               	goto	u3205
  4287  002C7E  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4288  002C82  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4289  002C86  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4290  002C8A  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4294  002C8E  C07D  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4295  002C92                     l3149:
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;inc\CANlib.h: 663: }
  4299                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4300  002C92  0100               	movlb	0	; () banked
  4301  002C94  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  4302  002C96  A4D8               	btfss	status,2,c
  4303  002C98  D087               	goto	l3181
  4304                           
  4305                           ; BSR set to: 0
  4306  002C9A  0EF7               	movlw	247
  4307  002C9C  0100               	movlb	0	; () banked
  4308  002C9E  1977               	xorwf	CANSetMask@type& (0+255),w,b
  4309  002CA0  A4D8               	btfss	status,2,c
  4310  002CA2  D082               	goto	l3181
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;inc\CANlib.h: 666: {
  4314                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4315  002CA4  0100               	movlb	0	; () banked
  4316  002CA6  5173               	movf	CANSetMask@mask& (0+255),w,b
  4317  002CA8  0100               	movlb	0	; () banked
  4318  002CAA  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4319  002CAC  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4320  002CAE  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4321  002CB0  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4325  002CB2  C07D  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4329  002CB6  0E00               	movlw	0
  4330  002CB8  0100               	movlb	0	; () banked
  4331  002CBA  1573               	andwf	CANSetMask@mask& (0+255),w,b
  4332  002CBC  0100               	movlb	0	; () banked
  4333  002CBE  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4334  002CC0  0EFF               	movlw	255
  4335  002CC2  0100               	movlb	0	; () banked
  4336  002CC4  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4337  002CC6  0100               	movlb	0	; () banked
  4338  002CC8  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4339  002CCA  0E00               	movlw	0
  4340  002CCC  0100               	movlb	0	; () banked
  4341  002CCE  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4342  002CD0  0100               	movlb	0	; () banked
  4343  002CD2  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4344  002CD4  0E00               	movlw	0
  4345  002CD6  0100               	movlb	0	; () banked
  4346  002CD8  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4347  002CDA  0100               	movlb	0	; () banked
  4348  002CDC  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4352  002CDE  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  4353  002CE2  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4354  002CE6  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4355  002CEA  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4356  002CEE  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  4357  002CF2  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  4358  002CF6  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  4359  002CFA  0100               	movlb	0	; () banked
  4360  002CFC  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  4361  002CFE  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4362  002D02  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4363  002D06  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4364  002D0A  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4368  002D0E  C07D  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4372  002D12  0100               	movlb	0	; () banked
  4373  002D14  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4374  002D16  D003               	goto	l436
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4378  002D18  010F               	movlb	15	; () banked
  4379  002D1A  8119               	bsf	25,0,b	;volatile
  4380  002D1C  D002               	goto	l437
  4381  002D1E                     l436:
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;inc\CANlib.h: 676: else
  4385                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4386  002D1E  010F               	movlb	15	; () banked
  4387  002D20  9119               	bcf	25,0,b	;volatile
  4388  002D22                     l437:
  4389                           
  4390                           ; BSR set to: 15
  4391                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4392  002D22  0100               	movlb	0	; () banked
  4393  002D24  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4394  002D26  D003               	goto	l438
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4398  002D28  010F               	movlb	15	; () banked
  4399  002D2A  8319               	bsf	25,1,b	;volatile
  4400  002D2C  D002               	goto	l439
  4401  002D2E                     l438:
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;inc\CANlib.h: 681: else
  4405                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4406  002D2E  010F               	movlb	15	; () banked
  4407  002D30  9319               	bcf	25,1,b	;volatile
  4408  002D32                     l439:
  4409                           
  4410                           ; BSR set to: 15
  4411                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4412  002D32  0100               	movlb	0	; () banked
  4413  002D34  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4414  002D36  D003               	goto	l440
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4418  002D38  010F               	movlb	15	; () banked
  4419  002D3A  8B19               	bsf	25,5,b	;volatile
  4420  002D3C  D002               	goto	l441
  4421  002D3E                     l440:
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;inc\CANlib.h: 686: else
  4425                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4426  002D3E  010F               	movlb	15	; () banked
  4427  002D40  9B19               	bcf	25,5,b	;volatile
  4428  002D42                     l441:
  4429                           
  4430                           ; BSR set to: 15
  4431                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4432  002D42  0100               	movlb	0	; () banked
  4433  002D44  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4434  002D46  D003               	goto	l442
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4438  002D48  010F               	movlb	15	; () banked
  4439  002D4A  8D19               	bsf	25,6,b	;volatile
  4440  002D4C  D002               	goto	l443
  4441  002D4E                     l442:
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;inc\CANlib.h: 691: else
  4445                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4446  002D4E  010F               	movlb	15	; () banked
  4447  002D50  9D19               	bcf	25,6,b	;volatile
  4448  002D52                     l443:
  4449                           
  4450                           ; BSR set to: 15
  4451                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4452  002D52  0100               	movlb	0	; () banked
  4453  002D54  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4454  002D56  D003               	goto	l444
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4458  002D58  010F               	movlb	15	; () banked
  4459  002D5A  8F19               	bsf	25,7,b	;volatile
  4460  002D5C  D002               	goto	l3175
  4461  002D5E                     l444:
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;inc\CANlib.h: 696: else
  4465                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4466  002D5E  010F               	movlb	15	; () banked
  4467  002D60  9F19               	bcf	25,7,b	;volatile
  4468  002D62                     l3175:
  4469                           
  4470                           ; BSR set to: 15
  4471                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4472  002D62  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  4473  002D66  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4474  002D6A  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4475  002D6E  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4476  002D72  0E16               	movlw	22
  4477  002D74  D006               	goto	u3280
  4478  002D76                     u3285:
  4479  002D76  0100               	movlb	0	; () banked
  4480  002D78  90D8               	bcf	status,0,c
  4481  002D7A  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4482  002D7C  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4483  002D7E  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4484  002D80  3378               	rrcf	??_CANSetMask& (0+255),f,b
  4485  002D82                     u3280:
  4486  002D82  2EE8               	decfsz	wreg,f,c
  4487  002D84  D7F8               	goto	u3285
  4488  002D86  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4489  002D8A  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4490  002D8E  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4491  002D92  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4495  002D96  0100               	movlb	0	; () banked
  4496  002D98  517D               	movf	CANSetMask@tamp& (0+255),w,b
  4497  002D9A  0100               	movlb	0	; () banked
  4498  002D9C  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4499  002D9E  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4500  002DA0  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4501  002DA2  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4505  002DA4  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4506  002DA8                     l3181:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;inc\CANlib.h: 702: }
  4510                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4511  002DA8  0E02               	movlw	2
  4512  002DAA  0100               	movlb	0	; () banked
  4513  002DAC  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4514  002DAE  A4D8               	btfss	status,2,c
  4515  002DB0  0012               	return	
  4516                           
  4517                           ; BSR set to: 0
  4518  002DB2  0EF7               	movlw	247
  4519  002DB4  0100               	movlb	0	; () banked
  4520  002DB6  1977               	xorwf	CANSetMask@type& (0+255),w,b
  4521  002DB8  A4D8               	btfss	status,2,c
  4522  002DBA  0012               	return	
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;inc\CANlib.h: 705: {
  4526                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4527  002DBC  0100               	movlb	0	; () banked
  4528  002DBE  5173               	movf	CANSetMask@mask& (0+255),w,b
  4529  002DC0  0100               	movlb	0	; () banked
  4530  002DC2  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4531  002DC4  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4532  002DC6  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4533  002DC8  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4537  002DCA  C07D  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4541  002DCE  0E00               	movlw	0
  4542  002DD0  0100               	movlb	0	; () banked
  4543  002DD2  1573               	andwf	CANSetMask@mask& (0+255),w,b
  4544  002DD4  0100               	movlb	0	; () banked
  4545  002DD6  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4546  002DD8  0EFF               	movlw	255
  4547  002DDA  0100               	movlb	0	; () banked
  4548  002DDC  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4549  002DDE  0100               	movlb	0	; () banked
  4550  002DE0  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4551  002DE2  0E00               	movlw	0
  4552  002DE4  0100               	movlb	0	; () banked
  4553  002DE6  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4554  002DE8  0100               	movlb	0	; () banked
  4555  002DEA  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4556  002DEC  0E00               	movlw	0
  4557  002DEE  0100               	movlb	0	; () banked
  4558  002DF0  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4559  002DF2  0100               	movlb	0	; () banked
  4560  002DF4  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4564  002DF6  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  4565  002DFA  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4566  002DFE  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4567  002E02  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4568  002E06  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  4569  002E0A  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  4570  002E0E  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  4571  002E12  0100               	movlb	0	; () banked
  4572  002E14  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  4573  002E16  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4574  002E1A  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4575  002E1E  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4576  002E22  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4580  002E26  C07D  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4584  002E2A  0100               	movlb	0	; () banked
  4585  002E2C  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4586  002E2E  D003               	goto	l447
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4590  002E30  010F               	movlb	15	; () banked
  4591  002E32  811D               	bsf	29,0,b	;volatile
  4592  002E34  D002               	goto	l448
  4593  002E36                     l447:
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;inc\CANlib.h: 715: else
  4597                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4598  002E36  010F               	movlb	15	; () banked
  4599  002E38  911D               	bcf	29,0,b	;volatile
  4600  002E3A                     l448:
  4601                           
  4602                           ; BSR set to: 15
  4603                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4604  002E3A  0100               	movlb	0	; () banked
  4605  002E3C  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4606  002E3E  D003               	goto	l449
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4610  002E40  010F               	movlb	15	; () banked
  4611  002E42  831D               	bsf	29,1,b	;volatile
  4612  002E44  D002               	goto	l450
  4613  002E46                     l449:
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;inc\CANlib.h: 720: else
  4617                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4618  002E46  010F               	movlb	15	; () banked
  4619  002E48  931D               	bcf	29,1,b	;volatile
  4620  002E4A                     l450:
  4621                           
  4622                           ; BSR set to: 15
  4623                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4624  002E4A  0100               	movlb	0	; () banked
  4625  002E4C  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4626  002E4E  D003               	goto	l451
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4630  002E50  010F               	movlb	15	; () banked
  4631  002E52  8B1D               	bsf	29,5,b	;volatile
  4632  002E54  D002               	goto	l452
  4633  002E56                     l451:
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;inc\CANlib.h: 725: else
  4637                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4638  002E56  010F               	movlb	15	; () banked
  4639  002E58  9B1D               	bcf	29,5,b	;volatile
  4640  002E5A                     l452:
  4641                           
  4642                           ; BSR set to: 15
  4643                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4644  002E5A  0100               	movlb	0	; () banked
  4645  002E5C  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4646  002E5E  D003               	goto	l453
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4650  002E60  010F               	movlb	15	; () banked
  4651  002E62  8D1D               	bsf	29,6,b	;volatile
  4652  002E64  D002               	goto	l454
  4653  002E66                     l453:
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;inc\CANlib.h: 730: else
  4657                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4658  002E66  010F               	movlb	15	; () banked
  4659  002E68  9D1D               	bcf	29,6,b	;volatile
  4660  002E6A                     l454:
  4661                           
  4662                           ; BSR set to: 15
  4663                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4664  002E6A  0100               	movlb	0	; () banked
  4665  002E6C  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4666  002E6E  D003               	goto	l455
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4670  002E70  010F               	movlb	15	; () banked
  4671  002E72  8F1D               	bsf	29,7,b	;volatile
  4672  002E74  D002               	goto	l3207
  4673  002E76                     l455:
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;inc\CANlib.h: 735: else
  4677                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4678  002E76  010F               	movlb	15	; () banked
  4679  002E78  9F1D               	bcf	29,7,b	;volatile
  4680  002E7A                     l3207:
  4681                           
  4682                           ; BSR set to: 15
  4683                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4684  002E7A  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  4685  002E7E  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4686  002E82  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4687  002E86  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4688  002E8A  0E16               	movlw	22
  4689  002E8C  D006               	goto	u3360
  4690  002E8E                     u3365:
  4691  002E8E  0100               	movlb	0	; () banked
  4692  002E90  90D8               	bcf	status,0,c
  4693  002E92  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4694  002E94  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4695  002E96  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4696  002E98  3378               	rrcf	??_CANSetMask& (0+255),f,b
  4697  002E9A                     u3360:
  4698  002E9A  2EE8               	decfsz	wreg,f,c
  4699  002E9C  D7F8               	goto	u3365
  4700  002E9E  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4701  002EA2  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4702  002EA6  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4703  002EAA  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4707  002EAE  0100               	movlb	0	; () banked
  4708  002EB0  517D               	movf	CANSetMask@tamp& (0+255),w,b
  4709  002EB2  0100               	movlb	0	; () banked
  4710  002EB4  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4711  002EB6  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4712  002EB8  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4713  002EBA  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4717  002EBC  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4718  002EC0  0012               	return	
  4719  002EC2                     __end_of_CANSetMask:
  4720                           	opt stack 0
  4721                           tblptru	equ	0xFF8
  4722                           tblptrh	equ	0xFF7
  4723                           tblptrl	equ	0xFF6
  4724                           tablat	equ	0xFF5
  4725                           prodh	equ	0xFF4
  4726                           prodl	equ	0xFF3
  4727                           intcon	equ	0xFF2
  4728                           intcon2	equ	0xFF1
  4729                           postinc0	equ	0xFEE
  4730                           wreg	equ	0xFE8
  4731                           indf2	equ	0xFDF
  4732                           fsr2h	equ	0xFDA
  4733                           fsr2l	equ	0xFD9
  4734                           status	equ	0xFD8
  4735                           
  4736 ;; *************** function _CANSetFilter *****************
  4737 ;; Defined at:
  4738 ;;		line 748 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  numBuffer       1    wreg     enum E16881
  4741 ;;  filter          4   19[BANK0 ] unsigned long 
  4742 ;;  type            1   23[BANK0 ] enum E16844
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;  numBuffer       1   28[BANK0 ] enum E16881
  4745 ;;  tamp            4   29[BANK0 ] unsigned long 
  4746 ;; Return value:  Size  Location     Type
  4747 ;;		None               void
  4748 ;; Registers used:
  4749 ;;		wreg, status,2, status,0
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4755 ;;      Params:         0       5       0       0
  4756 ;;      Locals:         0       5       0       0
  4757 ;;      Temps:          0       4       0       0
  4758 ;;      Totals:         0      14       0       0
  4759 ;;Total ram usage:       14 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    4
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_CANInitialize
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text10
  4770  00016A                     __ptext10:
  4771                           	opt stack 0
  4772  00016A                     _CANSetFilter:
  4773                           	opt stack 24
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;incstack = 0
  4777                           ;CANSetFilter@numBuffer stored from wreg
  4778  00016A  0100               	movlb	0	; () banked
  4779  00016C  6F7C               	movwf	CANSetFilter@numBuffer& (0+255),b
  4780                           
  4781                           ;inc\CANlib.h: 750: unsigned long tamp;
  4782                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4783  00016E  0100               	movlb	0	; () banked
  4784  000170  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4785  000172  0100               	movlb	0	; () banked
  4786  000174  A4D8               	btfss	status,2,c
  4787  000176  D058               	goto	l3231
  4788                           
  4789                           ; BSR set to: 0
  4790  000178  0100               	movlb	0	; () banked
  4791  00017A  2977               	incf	CANSetFilter@type& (0+255),w,b
  4792  00017C  A4D8               	btfss	status,2,c
  4793  00017E  D054               	goto	l3231
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;inc\CANlib.h: 753: {
  4797                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4798  000180  010F               	movlb	15	; () banked
  4799  000182  9701               	bcf	1,3,b	;volatile
  4800                           
  4801                           ; BSR set to: 15
  4802                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4803  000184  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4804  000188  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4805  00018C  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4806  000190  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4807  000194  0E04               	movlw	4
  4808  000196  D006               	goto	u3390
  4809  000198                     u3395:
  4810  000198  0100               	movlb	0	; () banked
  4811  00019A  90D8               	bcf	status,0,c
  4812  00019C  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4813  00019E  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4814  0001A0  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4815  0001A2  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4816  0001A4                     u3390:
  4817  0001A4  2EE8               	decfsz	wreg,f,c
  4818  0001A6  D7F8               	goto	u3395
  4819  0001A8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4820  0001AC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4821  0001B0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4822  0001B4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4826  0001B8  0100               	movlb	0	; () banked
  4827  0001BA  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4828  0001BC  0100               	movlb	0	; () banked
  4829  0001BE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4830  0001C0  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4831  0001C2  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4832  0001C4  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4836  0001C6  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4840  0001CA  0E07               	movlw	7
  4841  0001CC  0100               	movlb	0	; () banked
  4842  0001CE  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4843  0001D0  0100               	movlb	0	; () banked
  4844  0001D2  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4845  0001D4  0E00               	movlw	0
  4846  0001D6  0100               	movlb	0	; () banked
  4847  0001D8  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4848  0001DA  0100               	movlb	0	; () banked
  4849  0001DC  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4850  0001DE  0E00               	movlw	0
  4851  0001E0  0100               	movlb	0	; () banked
  4852  0001E2  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4853  0001E4  0100               	movlb	0	; () banked
  4854  0001E6  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4855  0001E8  0E00               	movlw	0
  4856  0001EA  0100               	movlb	0	; () banked
  4857  0001EC  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4858  0001EE  0100               	movlb	0	; () banked
  4859  0001F0  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4860                           
  4861                           ; BSR set to: 0
  4862                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4863  0001F2  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4864  0001F6  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4865  0001FA  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4866  0001FE  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4867  000202  0E05               	movlw	5
  4868  000204                     u3405:
  4869  000204  90D8               	bcf	status,0,c
  4870  000206  0100               	movlb	0	; () banked
  4871  000208  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4872  00020A  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4873  00020C  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4874  00020E  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4875  000210  2EE8               	decfsz	wreg,f,c
  4876  000212  D7F8               	goto	u3405
  4877  000214  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4878  000218  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4879  00021C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4880  000220  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4884  000224  C07D  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4885  000228                     l3231:
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;inc\CANlib.h: 763: }
  4889                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4890  000228  0100               	movlb	0	; () banked
  4891  00022A  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4892  00022C  A4D8               	btfss	status,2,c
  4893  00022E  D058               	goto	l3249
  4894                           
  4895                           ; BSR set to: 0
  4896  000230  0100               	movlb	0	; () banked
  4897  000232  2977               	incf	CANSetFilter@type& (0+255),w,b
  4898  000234  A4D8               	btfss	status,2,c
  4899  000236  D054               	goto	l3249
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;inc\CANlib.h: 766: {
  4903                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4904  000238  010F               	movlb	15	; () banked
  4905  00023A  9705               	bcf	5,3,b	;volatile
  4906                           
  4907                           ; BSR set to: 15
  4908                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4909  00023C  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4910  000240  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4911  000244  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4912  000248  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4913  00024C  0E04               	movlw	4
  4914  00024E  D006               	goto	u3430
  4915  000250                     u3435:
  4916  000250  0100               	movlb	0	; () banked
  4917  000252  90D8               	bcf	status,0,c
  4918  000254  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4919  000256  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4920  000258  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4921  00025A  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4922  00025C                     u3430:
  4923  00025C  2EE8               	decfsz	wreg,f,c
  4924  00025E  D7F8               	goto	u3435
  4925  000260  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4926  000264  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4927  000268  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4928  00026C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4932  000270  0100               	movlb	0	; () banked
  4933  000272  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4934  000274  0100               	movlb	0	; () banked
  4935  000276  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4936  000278  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4937  00027A  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4938  00027C  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4942  00027E  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4946  000282  0E07               	movlw	7
  4947  000284  0100               	movlb	0	; () banked
  4948  000286  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4949  000288  0100               	movlb	0	; () banked
  4950  00028A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4951  00028C  0E00               	movlw	0
  4952  00028E  0100               	movlb	0	; () banked
  4953  000290  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4954  000292  0100               	movlb	0	; () banked
  4955  000294  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4956  000296  0E00               	movlw	0
  4957  000298  0100               	movlb	0	; () banked
  4958  00029A  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4959  00029C  0100               	movlb	0	; () banked
  4960  00029E  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4961  0002A0  0E00               	movlw	0
  4962  0002A2  0100               	movlb	0	; () banked
  4963  0002A4  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4964  0002A6  0100               	movlb	0	; () banked
  4965  0002A8  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4966                           
  4967                           ; BSR set to: 0
  4968                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4969  0002AA  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4970  0002AE  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4971  0002B2  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4972  0002B6  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4973  0002BA  0E05               	movlw	5
  4974  0002BC                     u3445:
  4975  0002BC  90D8               	bcf	status,0,c
  4976  0002BE  0100               	movlb	0	; () banked
  4977  0002C0  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4978  0002C2  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4979  0002C4  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4980  0002C6  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4981  0002C8  2EE8               	decfsz	wreg,f,c
  4982  0002CA  D7F8               	goto	u3445
  4983  0002CC  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4984  0002D0  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4985  0002D4  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4986  0002D8  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4990  0002DC  C07D  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4991  0002E0                     l3249:
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;inc\CANlib.h: 776: }
  4995                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4996  0002E0  0E02               	movlw	2
  4997  0002E2  0100               	movlb	0	; () banked
  4998  0002E4  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4999  0002E6  A4D8               	btfss	status,2,c
  5000  0002E8  D058               	goto	l3267
  5001                           
  5002                           ; BSR set to: 0
  5003  0002EA  0100               	movlb	0	; () banked
  5004  0002EC  2977               	incf	CANSetFilter@type& (0+255),w,b
  5005  0002EE  A4D8               	btfss	status,2,c
  5006  0002F0  D054               	goto	l3267
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;inc\CANlib.h: 779: {
  5010                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  5011  0002F2  010F               	movlb	15	; () banked
  5012  0002F4  9709               	bcf	9,3,b	;volatile
  5013                           
  5014                           ; BSR set to: 15
  5015                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  5016  0002F6  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5017  0002FA  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5018  0002FE  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5019  000302  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5020  000306  0E04               	movlw	4
  5021  000308  D006               	goto	u3470
  5022  00030A                     u3475:
  5023  00030A  0100               	movlb	0	; () banked
  5024  00030C  90D8               	bcf	status,0,c
  5025  00030E  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5026  000310  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5027  000312  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5028  000314  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5029  000316                     u3470:
  5030  000316  2EE8               	decfsz	wreg,f,c
  5031  000318  D7F8               	goto	u3475
  5032  00031A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5033  00031E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5034  000322  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5035  000326  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  5039  00032A  0100               	movlb	0	; () banked
  5040  00032C  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5041  00032E  0100               	movlb	0	; () banked
  5042  000330  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5043  000332  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5044  000334  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5045  000336  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  5049  000338  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  5053  00033C  0E07               	movlw	7
  5054  00033E  0100               	movlb	0	; () banked
  5055  000340  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5056  000342  0100               	movlb	0	; () banked
  5057  000344  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5058  000346  0E00               	movlw	0
  5059  000348  0100               	movlb	0	; () banked
  5060  00034A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5061  00034C  0100               	movlb	0	; () banked
  5062  00034E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5063  000350  0E00               	movlw	0
  5064  000352  0100               	movlb	0	; () banked
  5065  000354  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5066  000356  0100               	movlb	0	; () banked
  5067  000358  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5068  00035A  0E00               	movlw	0
  5069  00035C  0100               	movlb	0	; () banked
  5070  00035E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5071  000360  0100               	movlb	0	; () banked
  5072  000362  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  5076  000364  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5077  000368  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5078  00036C  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5079  000370  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5080  000374  0E05               	movlw	5
  5081  000376                     u3485:
  5082  000376  90D8               	bcf	status,0,c
  5083  000378  0100               	movlb	0	; () banked
  5084  00037A  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  5085  00037C  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5086  00037E  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5087  000380  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5088  000382  2EE8               	decfsz	wreg,f,c
  5089  000384  D7F8               	goto	u3485
  5090  000386  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5091  00038A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5092  00038E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5093  000392  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  5097  000396  C07D  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  5098  00039A                     l3267:
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;inc\CANlib.h: 789: }
  5102                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  5103  00039A  0E03               	movlw	3
  5104  00039C  0100               	movlb	0	; () banked
  5105  00039E  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5106  0003A0  A4D8               	btfss	status,2,c
  5107  0003A2  D058               	goto	l3285
  5108                           
  5109                           ; BSR set to: 0
  5110  0003A4  0100               	movlb	0	; () banked
  5111  0003A6  2977               	incf	CANSetFilter@type& (0+255),w,b
  5112  0003A8  A4D8               	btfss	status,2,c
  5113  0003AA  D054               	goto	l3285
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;inc\CANlib.h: 792: {
  5117                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  5118  0003AC  010F               	movlb	15	; () banked
  5119  0003AE  970D               	bcf	13,3,b	;volatile
  5120                           
  5121                           ; BSR set to: 15
  5122                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  5123  0003B0  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5124  0003B4  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5125  0003B8  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5126  0003BC  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5127  0003C0  0E04               	movlw	4
  5128  0003C2  D006               	goto	u3510
  5129  0003C4                     u3515:
  5130  0003C4  0100               	movlb	0	; () banked
  5131  0003C6  90D8               	bcf	status,0,c
  5132  0003C8  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5133  0003CA  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5134  0003CC  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5135  0003CE  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5136  0003D0                     u3510:
  5137  0003D0  2EE8               	decfsz	wreg,f,c
  5138  0003D2  D7F8               	goto	u3515
  5139  0003D4  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5140  0003D8  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5141  0003DC  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5142  0003E0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  5146  0003E4  0100               	movlb	0	; () banked
  5147  0003E6  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5148  0003E8  0100               	movlb	0	; () banked
  5149  0003EA  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5150  0003EC  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5151  0003EE  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5152  0003F0  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  5156  0003F2  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  5160  0003F6  0E07               	movlw	7
  5161  0003F8  0100               	movlb	0	; () banked
  5162  0003FA  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5163  0003FC  0100               	movlb	0	; () banked
  5164  0003FE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5165  000400  0E00               	movlw	0
  5166  000402  0100               	movlb	0	; () banked
  5167  000404  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5168  000406  0100               	movlb	0	; () banked
  5169  000408  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5170  00040A  0E00               	movlw	0
  5171  00040C  0100               	movlb	0	; () banked
  5172  00040E  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5173  000410  0100               	movlb	0	; () banked
  5174  000412  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5175  000414  0E00               	movlw	0
  5176  000416  0100               	movlb	0	; () banked
  5177  000418  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5178  00041A  0100               	movlb	0	; () banked
  5179  00041C  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  5183  00041E  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5184  000422  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5185  000426  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5186  00042A  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5187  00042E  0E05               	movlw	5
  5188  000430                     u3525:
  5189  000430  90D8               	bcf	status,0,c
  5190  000432  0100               	movlb	0	; () banked
  5191  000434  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  5192  000436  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5193  000438  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5194  00043A  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5195  00043C  2EE8               	decfsz	wreg,f,c
  5196  00043E  D7F8               	goto	u3525
  5197  000440  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5198  000444  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5199  000448  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5200  00044C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5204  000450  C07D  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5205  000454                     l3285:
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;inc\CANlib.h: 802: }
  5209                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5210  000454  0E04               	movlw	4
  5211  000456  0100               	movlb	0	; () banked
  5212  000458  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5213  00045A  A4D8               	btfss	status,2,c
  5214  00045C  D058               	goto	l3303
  5215                           
  5216                           ; BSR set to: 0
  5217  00045E  0100               	movlb	0	; () banked
  5218  000460  2977               	incf	CANSetFilter@type& (0+255),w,b
  5219  000462  A4D8               	btfss	status,2,c
  5220  000464  D054               	goto	l3303
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;inc\CANlib.h: 805: {
  5224                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5225  000466  010F               	movlb	15	; () banked
  5226  000468  9711               	bcf	17,3,b	;volatile
  5227                           
  5228                           ; BSR set to: 15
  5229                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5230  00046A  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5231  00046E  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5232  000472  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5233  000476  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5234  00047A  0E04               	movlw	4
  5235  00047C  D006               	goto	u3550
  5236  00047E                     u3555:
  5237  00047E  0100               	movlb	0	; () banked
  5238  000480  90D8               	bcf	status,0,c
  5239  000482  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5240  000484  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5241  000486  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5242  000488  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5243  00048A                     u3550:
  5244  00048A  2EE8               	decfsz	wreg,f,c
  5245  00048C  D7F8               	goto	u3555
  5246  00048E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5247  000492  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5248  000496  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5249  00049A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5253  00049E  0100               	movlb	0	; () banked
  5254  0004A0  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5255  0004A2  0100               	movlb	0	; () banked
  5256  0004A4  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5257  0004A6  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5258  0004A8  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5259  0004AA  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5260                           
  5261                           ; BSR set to: 0
  5262                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5263  0004AC  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5267  0004B0  0E07               	movlw	7
  5268  0004B2  0100               	movlb	0	; () banked
  5269  0004B4  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5270  0004B6  0100               	movlb	0	; () banked
  5271  0004B8  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5272  0004BA  0E00               	movlw	0
  5273  0004BC  0100               	movlb	0	; () banked
  5274  0004BE  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5275  0004C0  0100               	movlb	0	; () banked
  5276  0004C2  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5277  0004C4  0E00               	movlw	0
  5278  0004C6  0100               	movlb	0	; () banked
  5279  0004C8  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5280  0004CA  0100               	movlb	0	; () banked
  5281  0004CC  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5282  0004CE  0E00               	movlw	0
  5283  0004D0  0100               	movlb	0	; () banked
  5284  0004D2  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5285  0004D4  0100               	movlb	0	; () banked
  5286  0004D6  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5290  0004D8  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5291  0004DC  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5292  0004E0  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5293  0004E4  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5294  0004E8  0E05               	movlw	5
  5295  0004EA                     u3565:
  5296  0004EA  90D8               	bcf	status,0,c
  5297  0004EC  0100               	movlb	0	; () banked
  5298  0004EE  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  5299  0004F0  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5300  0004F2  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5301  0004F4  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5302  0004F6  2EE8               	decfsz	wreg,f,c
  5303  0004F8  D7F8               	goto	u3565
  5304  0004FA  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5305  0004FE  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5306  000502  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5307  000506  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5311  00050A  C07D  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5312  00050E                     l3303:
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;inc\CANlib.h: 815: }
  5316                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5317  00050E  0E05               	movlw	5
  5318  000510  0100               	movlb	0	; () banked
  5319  000512  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5320  000514  A4D8               	btfss	status,2,c
  5321  000516  D058               	goto	l3321
  5322                           
  5323                           ; BSR set to: 0
  5324  000518  0100               	movlb	0	; () banked
  5325  00051A  2977               	incf	CANSetFilter@type& (0+255),w,b
  5326  00051C  A4D8               	btfss	status,2,c
  5327  00051E  D054               	goto	l3321
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;inc\CANlib.h: 818: {
  5331                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5332  000520  010F               	movlb	15	; () banked
  5333  000522  9715               	bcf	21,3,b	;volatile
  5334                           
  5335                           ; BSR set to: 15
  5336                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5337  000524  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5338  000528  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5339  00052C  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5340  000530  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5341  000534  0E04               	movlw	4
  5342  000536  D006               	goto	u3590
  5343  000538                     u3595:
  5344  000538  0100               	movlb	0	; () banked
  5345  00053A  90D8               	bcf	status,0,c
  5346  00053C  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5347  00053E  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5348  000540  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5349  000542  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5350  000544                     u3590:
  5351  000544  2EE8               	decfsz	wreg,f,c
  5352  000546  D7F8               	goto	u3595
  5353  000548  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5354  00054C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5355  000550  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5356  000554  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5360  000558  0100               	movlb	0	; () banked
  5361  00055A  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5362  00055C  0100               	movlb	0	; () banked
  5363  00055E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5364  000560  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5365  000562  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5366  000564  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5370  000566  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5374  00056A  0E07               	movlw	7
  5375  00056C  0100               	movlb	0	; () banked
  5376  00056E  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5377  000570  0100               	movlb	0	; () banked
  5378  000572  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5379  000574  0E00               	movlw	0
  5380  000576  0100               	movlb	0	; () banked
  5381  000578  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5382  00057A  0100               	movlb	0	; () banked
  5383  00057C  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5384  00057E  0E00               	movlw	0
  5385  000580  0100               	movlb	0	; () banked
  5386  000582  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5387  000584  0100               	movlb	0	; () banked
  5388  000586  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5389  000588  0E00               	movlw	0
  5390  00058A  0100               	movlb	0	; () banked
  5391  00058C  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5392  00058E  0100               	movlb	0	; () banked
  5393  000590  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5394                           
  5395                           ; BSR set to: 0
  5396                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5397  000592  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5398  000596  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5399  00059A  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5400  00059E  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5401  0005A2  0E05               	movlw	5
  5402  0005A4                     u3605:
  5403  0005A4  90D8               	bcf	status,0,c
  5404  0005A6  0100               	movlb	0	; () banked
  5405  0005A8  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  5406  0005AA  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5407  0005AC  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5408  0005AE  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5409  0005B0  2EE8               	decfsz	wreg,f,c
  5410  0005B2  D7F8               	goto	u3605
  5411  0005B4  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5412  0005B8  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5413  0005BC  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5414  0005C0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5418  0005C4  C07D  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5419  0005C8                     l3321:
  5420                           
  5421                           ; BSR set to: 0
  5422                           ;inc\CANlib.h: 828: }
  5423                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5424  0005C8  0100               	movlb	0	; () banked
  5425  0005CA  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5426  0005CC  0100               	movlb	0	; () banked
  5427  0005CE  A4D8               	btfss	status,2,c
  5428  0005D0  D089               	goto	l3355
  5429                           
  5430                           ; BSR set to: 0
  5431  0005D2  0EF7               	movlw	247
  5432  0005D4  0100               	movlb	0	; () banked
  5433  0005D6  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5434  0005D8  A4D8               	btfss	status,2,c
  5435  0005DA  D084               	goto	l3355
  5436                           
  5437                           ; BSR set to: 0
  5438                           ;inc\CANlib.h: 832: {
  5439                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5440  0005DC  010F               	movlb	15	; () banked
  5441  0005DE  8701               	bsf	1,3,b	;volatile
  5442                           
  5443                           ; BSR set to: 15
  5444                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5445  0005E0  0100               	movlb	0	; () banked
  5446  0005E2  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5447  0005E4  0100               	movlb	0	; () banked
  5448  0005E6  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5449  0005E8  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5450  0005EA  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5451  0005EC  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5455  0005EE  C07D  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5459  0005F2  0E00               	movlw	0
  5460  0005F4  0100               	movlb	0	; () banked
  5461  0005F6  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5462  0005F8  0100               	movlb	0	; () banked
  5463  0005FA  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5464  0005FC  0EFF               	movlw	255
  5465  0005FE  0100               	movlb	0	; () banked
  5466  000600  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5467  000602  0100               	movlb	0	; () banked
  5468  000604  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5469  000606  0E00               	movlw	0
  5470  000608  0100               	movlb	0	; () banked
  5471  00060A  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5472  00060C  0100               	movlb	0	; () banked
  5473  00060E  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5474  000610  0E00               	movlw	0
  5475  000612  0100               	movlb	0	; () banked
  5476  000614  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5477  000616  0100               	movlb	0	; () banked
  5478  000618  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5482  00061A  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5483  00061E  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5484  000622  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5485  000626  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5486  00062A  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5487  00062E  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5488  000632  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5489  000636  0100               	movlb	0	; () banked
  5490  000638  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5491  00063A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5492  00063E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5493  000642  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5494  000646  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5498  00064A  C07D  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5502  00064E  0100               	movlb	0	; () banked
  5503  000650  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5504  000652  D003               	goto	l467
  5505                           
  5506                           ; BSR set to: 0
  5507                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5508  000654  010F               	movlb	15	; () banked
  5509  000656  8101               	bsf	1,0,b	;volatile
  5510  000658  D002               	goto	l468
  5511  00065A                     l467:
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;inc\CANlib.h: 844: else
  5515                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5516  00065A  010F               	movlb	15	; () banked
  5517  00065C  9101               	bcf	1,0,b	;volatile
  5518  00065E                     l468:
  5519                           
  5520                           ; BSR set to: 15
  5521                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5522  00065E  0100               	movlb	0	; () banked
  5523  000660  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5524  000662  D003               	goto	l469
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5528  000664  010F               	movlb	15	; () banked
  5529  000666  8301               	bsf	1,1,b	;volatile
  5530  000668  D002               	goto	l470
  5531  00066A                     l469:
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;inc\CANlib.h: 849: else
  5535                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5536  00066A  010F               	movlb	15	; () banked
  5537  00066C  9301               	bcf	1,1,b	;volatile
  5538  00066E                     l470:
  5539                           
  5540                           ; BSR set to: 15
  5541                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5542  00066E  0100               	movlb	0	; () banked
  5543  000670  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5544  000672  D003               	goto	l471
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5548  000674  010F               	movlb	15	; () banked
  5549  000676  8B01               	bsf	1,5,b	;volatile
  5550  000678  D002               	goto	l472
  5551  00067A                     l471:
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;inc\CANlib.h: 854: else
  5555                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5556  00067A  010F               	movlb	15	; () banked
  5557  00067C  9B01               	bcf	1,5,b	;volatile
  5558  00067E                     l472:
  5559                           
  5560                           ; BSR set to: 15
  5561                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5562  00067E  0100               	movlb	0	; () banked
  5563  000680  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5564  000682  D003               	goto	l473
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5568  000684  010F               	movlb	15	; () banked
  5569  000686  8D01               	bsf	1,6,b	;volatile
  5570  000688  D002               	goto	l474
  5571  00068A                     l473:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;inc\CANlib.h: 859: else
  5575                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5576  00068A  010F               	movlb	15	; () banked
  5577  00068C  9D01               	bcf	1,6,b	;volatile
  5578  00068E                     l474:
  5579                           
  5580                           ; BSR set to: 15
  5581                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5582  00068E  0100               	movlb	0	; () banked
  5583  000690  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5584  000692  D003               	goto	l475
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5588  000694  010F               	movlb	15	; () banked
  5589  000696  8F01               	bsf	1,7,b	;volatile
  5590  000698  D002               	goto	l3349
  5591  00069A                     l475:
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;inc\CANlib.h: 864: else
  5595                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5596  00069A  010F               	movlb	15	; () banked
  5597  00069C  9F01               	bcf	1,7,b	;volatile
  5598  00069E                     l3349:
  5599                           
  5600                           ; BSR set to: 15
  5601                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5602  00069E  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5603  0006A2  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5604  0006A6  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5605  0006AA  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5606  0006AE  0E16               	movlw	22
  5607  0006B0  D006               	goto	u3680
  5608  0006B2                     u3685:
  5609  0006B2  0100               	movlb	0	; () banked
  5610  0006B4  90D8               	bcf	status,0,c
  5611  0006B6  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5612  0006B8  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5613  0006BA  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5614  0006BC  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5615  0006BE                     u3680:
  5616  0006BE  2EE8               	decfsz	wreg,f,c
  5617  0006C0  D7F8               	goto	u3685
  5618  0006C2  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5619  0006C6  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5620  0006CA  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5621  0006CE  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5625  0006D2  0100               	movlb	0	; () banked
  5626  0006D4  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5627  0006D6  0100               	movlb	0	; () banked
  5628  0006D8  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5629  0006DA  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5630  0006DC  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5631  0006DE  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5635  0006E0  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5636  0006E4                     l3355:
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;inc\CANlib.h: 870: }
  5640                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5641  0006E4  0100               	movlb	0	; () banked
  5642  0006E6  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5643  0006E8  A4D8               	btfss	status,2,c
  5644  0006EA  D089               	goto	l3389
  5645                           
  5646                           ; BSR set to: 0
  5647  0006EC  0EF7               	movlw	247
  5648  0006EE  0100               	movlb	0	; () banked
  5649  0006F0  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5650  0006F2  A4D8               	btfss	status,2,c
  5651  0006F4  D084               	goto	l3389
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;inc\CANlib.h: 873: {
  5655                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5656  0006F6  010F               	movlb	15	; () banked
  5657  0006F8  8705               	bsf	5,3,b	;volatile
  5658                           
  5659                           ; BSR set to: 15
  5660                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5661  0006FA  0100               	movlb	0	; () banked
  5662  0006FC  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5663  0006FE  0100               	movlb	0	; () banked
  5664  000700  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5665  000702  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5666  000704  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5667  000706  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5671  000708  C07D  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5675  00070C  0E00               	movlw	0
  5676  00070E  0100               	movlb	0	; () banked
  5677  000710  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5678  000712  0100               	movlb	0	; () banked
  5679  000714  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5680  000716  0EFF               	movlw	255
  5681  000718  0100               	movlb	0	; () banked
  5682  00071A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5683  00071C  0100               	movlb	0	; () banked
  5684  00071E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5685  000720  0E00               	movlw	0
  5686  000722  0100               	movlb	0	; () banked
  5687  000724  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5688  000726  0100               	movlb	0	; () banked
  5689  000728  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5690  00072A  0E00               	movlw	0
  5691  00072C  0100               	movlb	0	; () banked
  5692  00072E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5693  000730  0100               	movlb	0	; () banked
  5694  000732  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5698  000734  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5699  000738  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5700  00073C  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5701  000740  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5702  000744  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5703  000748  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5704  00074C  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5705  000750  0100               	movlb	0	; () banked
  5706  000752  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5707  000754  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5708  000758  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5709  00075C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5710  000760  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5714  000764  C07D  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5715                           
  5716                           ; BSR set to: 0
  5717                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5718  000768  0100               	movlb	0	; () banked
  5719  00076A  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5720  00076C  D003               	goto	l478
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5724  00076E  010F               	movlb	15	; () banked
  5725  000770  8105               	bsf	5,0,b	;volatile
  5726  000772  D002               	goto	l479
  5727  000774                     l478:
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;inc\CANlib.h: 885: else
  5731                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5732  000774  010F               	movlb	15	; () banked
  5733  000776  9105               	bcf	5,0,b	;volatile
  5734  000778                     l479:
  5735                           
  5736                           ; BSR set to: 15
  5737                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5738  000778  0100               	movlb	0	; () banked
  5739  00077A  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5740  00077C  D003               	goto	l480
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5744  00077E  010F               	movlb	15	; () banked
  5745  000780  8305               	bsf	5,1,b	;volatile
  5746  000782  D002               	goto	l481
  5747  000784                     l480:
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;inc\CANlib.h: 890: else
  5751                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5752  000784  010F               	movlb	15	; () banked
  5753  000786  9305               	bcf	5,1,b	;volatile
  5754  000788                     l481:
  5755                           
  5756                           ; BSR set to: 15
  5757                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5758  000788  0100               	movlb	0	; () banked
  5759  00078A  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5760  00078C  D003               	goto	l482
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5764  00078E  010F               	movlb	15	; () banked
  5765  000790  8B05               	bsf	5,5,b	;volatile
  5766  000792  D002               	goto	l483
  5767  000794                     l482:
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;inc\CANlib.h: 895: else
  5771                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5772  000794  010F               	movlb	15	; () banked
  5773  000796  9B05               	bcf	5,5,b	;volatile
  5774  000798                     l483:
  5775                           
  5776                           ; BSR set to: 15
  5777                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5778  000798  0100               	movlb	0	; () banked
  5779  00079A  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5780  00079C  D003               	goto	l484
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5784  00079E  010F               	movlb	15	; () banked
  5785  0007A0  8D05               	bsf	5,6,b	;volatile
  5786  0007A2  D002               	goto	l485
  5787  0007A4                     l484:
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;inc\CANlib.h: 900: else
  5791                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5792  0007A4  010F               	movlb	15	; () banked
  5793  0007A6  9D05               	bcf	5,6,b	;volatile
  5794  0007A8                     l485:
  5795                           
  5796                           ; BSR set to: 15
  5797                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5798  0007A8  0100               	movlb	0	; () banked
  5799  0007AA  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5800  0007AC  D003               	goto	l486
  5801                           
  5802                           ; BSR set to: 0
  5803                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5804  0007AE  010F               	movlb	15	; () banked
  5805  0007B0  8F05               	bsf	5,7,b	;volatile
  5806  0007B2  D002               	goto	l3383
  5807  0007B4                     l486:
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;inc\CANlib.h: 905: else
  5811                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5812  0007B4  010F               	movlb	15	; () banked
  5813  0007B6  9F05               	bcf	5,7,b	;volatile
  5814  0007B8                     l3383:
  5815                           
  5816                           ; BSR set to: 15
  5817                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5818  0007B8  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5819  0007BC  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5820  0007C0  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5821  0007C4  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5822  0007C8  0E16               	movlw	22
  5823  0007CA  D006               	goto	u3760
  5824  0007CC                     u3765:
  5825  0007CC  0100               	movlb	0	; () banked
  5826  0007CE  90D8               	bcf	status,0,c
  5827  0007D0  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5828  0007D2  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5829  0007D4  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5830  0007D6  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5831  0007D8                     u3760:
  5832  0007D8  2EE8               	decfsz	wreg,f,c
  5833  0007DA  D7F8               	goto	u3765
  5834  0007DC  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5835  0007E0  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5836  0007E4  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5837  0007E8  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5841  0007EC  0100               	movlb	0	; () banked
  5842  0007EE  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5843  0007F0  0100               	movlb	0	; () banked
  5844  0007F2  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5845  0007F4  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5846  0007F6  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5847  0007F8  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5851  0007FA  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5852  0007FE                     l3389:
  5853                           
  5854                           ; BSR set to: 0
  5855                           ;inc\CANlib.h: 911: }
  5856                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5857  0007FE  0E02               	movlw	2
  5858  000800  0100               	movlb	0	; () banked
  5859  000802  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5860  000804  A4D8               	btfss	status,2,c
  5861  000806  D089               	goto	l3423
  5862                           
  5863                           ; BSR set to: 0
  5864  000808  0EF7               	movlw	247
  5865  00080A  0100               	movlb	0	; () banked
  5866  00080C  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5867  00080E  A4D8               	btfss	status,2,c
  5868  000810  D084               	goto	l3423
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;inc\CANlib.h: 915: {
  5872                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5873  000812  010F               	movlb	15	; () banked
  5874  000814  8709               	bsf	9,3,b	;volatile
  5875                           
  5876                           ; BSR set to: 15
  5877                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5878  000816  0100               	movlb	0	; () banked
  5879  000818  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5880  00081A  0100               	movlb	0	; () banked
  5881  00081C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5882  00081E  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5883  000820  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5884  000822  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5888  000824  C07D  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5892  000828  0E00               	movlw	0
  5893  00082A  0100               	movlb	0	; () banked
  5894  00082C  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5895  00082E  0100               	movlb	0	; () banked
  5896  000830  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5897  000832  0EFF               	movlw	255
  5898  000834  0100               	movlb	0	; () banked
  5899  000836  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5900  000838  0100               	movlb	0	; () banked
  5901  00083A  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5902  00083C  0E00               	movlw	0
  5903  00083E  0100               	movlb	0	; () banked
  5904  000840  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5905  000842  0100               	movlb	0	; () banked
  5906  000844  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5907  000846  0E00               	movlw	0
  5908  000848  0100               	movlb	0	; () banked
  5909  00084A  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5910  00084C  0100               	movlb	0	; () banked
  5911  00084E  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5912                           
  5913                           ; BSR set to: 0
  5914                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5915  000850  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5916  000854  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5917  000858  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5918  00085C  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5919  000860  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5920  000864  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5921  000868  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5922  00086C  0100               	movlb	0	; () banked
  5923  00086E  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5924  000870  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5925  000874  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5926  000878  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5927  00087C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5931  000880  C07D  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5935  000884  0100               	movlb	0	; () banked
  5936  000886  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5937  000888  D003               	goto	l489
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5941  00088A  010F               	movlb	15	; () banked
  5942  00088C  8109               	bsf	9,0,b	;volatile
  5943  00088E  D002               	goto	l490
  5944  000890                     l489:
  5945                           
  5946                           ; BSR set to: 0
  5947                           ;inc\CANlib.h: 927: else
  5948                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5949  000890  010F               	movlb	15	; () banked
  5950  000892  9109               	bcf	9,0,b	;volatile
  5951  000894                     l490:
  5952                           
  5953                           ; BSR set to: 15
  5954                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5955  000894  0100               	movlb	0	; () banked
  5956  000896  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5957  000898  D003               	goto	l491
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5961  00089A  010F               	movlb	15	; () banked
  5962  00089C  8309               	bsf	9,1,b	;volatile
  5963  00089E  D002               	goto	l492
  5964  0008A0                     l491:
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;inc\CANlib.h: 932: else
  5968                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5969  0008A0  010F               	movlb	15	; () banked
  5970  0008A2  9309               	bcf	9,1,b	;volatile
  5971  0008A4                     l492:
  5972                           
  5973                           ; BSR set to: 15
  5974                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5975  0008A4  0100               	movlb	0	; () banked
  5976  0008A6  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5977  0008A8  D003               	goto	l493
  5978                           
  5979                           ; BSR set to: 0
  5980                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5981  0008AA  010F               	movlb	15	; () banked
  5982  0008AC  8B09               	bsf	9,5,b	;volatile
  5983  0008AE  D002               	goto	l494
  5984  0008B0                     l493:
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;inc\CANlib.h: 937: else
  5988                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5989  0008B0  010F               	movlb	15	; () banked
  5990  0008B2  9B09               	bcf	9,5,b	;volatile
  5991  0008B4                     l494:
  5992                           
  5993                           ; BSR set to: 15
  5994                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5995  0008B4  0100               	movlb	0	; () banked
  5996  0008B6  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5997  0008B8  D003               	goto	l495
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  6001  0008BA  010F               	movlb	15	; () banked
  6002  0008BC  8D09               	bsf	9,6,b	;volatile
  6003  0008BE  D002               	goto	l496
  6004  0008C0                     l495:
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;inc\CANlib.h: 942: else
  6008                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  6009  0008C0  010F               	movlb	15	; () banked
  6010  0008C2  9D09               	bcf	9,6,b	;volatile
  6011  0008C4                     l496:
  6012                           
  6013                           ; BSR set to: 15
  6014                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  6015  0008C4  0100               	movlb	0	; () banked
  6016  0008C6  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6017  0008C8  D003               	goto	l497
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  6021  0008CA  010F               	movlb	15	; () banked
  6022  0008CC  8F09               	bsf	9,7,b	;volatile
  6023  0008CE  D002               	goto	l3417
  6024  0008D0                     l497:
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;inc\CANlib.h: 947: else
  6028                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  6029  0008D0  010F               	movlb	15	; () banked
  6030  0008D2  9F09               	bcf	9,7,b	;volatile
  6031  0008D4                     l3417:
  6032                           
  6033                           ; BSR set to: 15
  6034                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  6035  0008D4  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  6036  0008D8  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6037  0008DC  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6038  0008E0  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6039  0008E4  0E16               	movlw	22
  6040  0008E6  D006               	goto	u3840
  6041  0008E8                     u3845:
  6042  0008E8  0100               	movlb	0	; () banked
  6043  0008EA  90D8               	bcf	status,0,c
  6044  0008EC  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6045  0008EE  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6046  0008F0  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6047  0008F2  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  6048  0008F4                     u3840:
  6049  0008F4  2EE8               	decfsz	wreg,f,c
  6050  0008F6  D7F8               	goto	u3845
  6051  0008F8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6052  0008FC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6053  000900  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6054  000904  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  6058  000908  0100               	movlb	0	; () banked
  6059  00090A  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  6060  00090C  0100               	movlb	0	; () banked
  6061  00090E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6062  000910  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6063  000912  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6064  000914  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6065                           
  6066                           ; BSR set to: 0
  6067                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  6068  000916  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  6069  00091A                     l3423:
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;inc\CANlib.h: 953: }
  6073                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  6074  00091A  0E03               	movlw	3
  6075  00091C  0100               	movlb	0	; () banked
  6076  00091E  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6077  000920  A4D8               	btfss	status,2,c
  6078  000922  D089               	goto	l3457
  6079                           
  6080                           ; BSR set to: 0
  6081  000924  0EF7               	movlw	247
  6082  000926  0100               	movlb	0	; () banked
  6083  000928  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  6084  00092A  A4D8               	btfss	status,2,c
  6085  00092C  D084               	goto	l3457
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;inc\CANlib.h: 956: {
  6089                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  6090  00092E  010F               	movlb	15	; () banked
  6091  000930  870D               	bsf	13,3,b	;volatile
  6092                           
  6093                           ; BSR set to: 15
  6094                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  6095  000932  0100               	movlb	0	; () banked
  6096  000934  5173               	movf	CANSetFilter@filter& (0+255),w,b
  6097  000936  0100               	movlb	0	; () banked
  6098  000938  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6099  00093A  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6100  00093C  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6101  00093E  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  6105  000940  C07D  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  6109  000944  0E00               	movlw	0
  6110  000946  0100               	movlb	0	; () banked
  6111  000948  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  6112  00094A  0100               	movlb	0	; () banked
  6113  00094C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6114  00094E  0EFF               	movlw	255
  6115  000950  0100               	movlb	0	; () banked
  6116  000952  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6117  000954  0100               	movlb	0	; () banked
  6118  000956  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6119  000958  0E00               	movlw	0
  6120  00095A  0100               	movlb	0	; () banked
  6121  00095C  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6122  00095E  0100               	movlb	0	; () banked
  6123  000960  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6124  000962  0E00               	movlw	0
  6125  000964  0100               	movlb	0	; () banked
  6126  000966  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6127  000968  0100               	movlb	0	; () banked
  6128  00096A  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  6132  00096C  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  6133  000970  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6134  000974  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6135  000978  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6136  00097C  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  6137  000980  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6138  000984  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6139  000988  0100               	movlb	0	; () banked
  6140  00098A  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  6141  00098C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6142  000990  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6143  000994  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6144  000998  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  6148  00099C  C07D  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6149                           
  6150                           ; BSR set to: 0
  6151                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  6152  0009A0  0100               	movlb	0	; () banked
  6153  0009A2  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6154  0009A4  D003               	goto	l500
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6158  0009A6  010F               	movlb	15	; () banked
  6159  0009A8  810D               	bsf	13,0,b	;volatile
  6160  0009AA  D002               	goto	l501
  6161  0009AC                     l500:
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;inc\CANlib.h: 968: else
  6165                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6166  0009AC  010F               	movlb	15	; () banked
  6167  0009AE  910D               	bcf	13,0,b	;volatile
  6168  0009B0                     l501:
  6169                           
  6170                           ; BSR set to: 15
  6171                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  6172  0009B0  0100               	movlb	0	; () banked
  6173  0009B2  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6174  0009B4  D003               	goto	l502
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6178  0009B6  010F               	movlb	15	; () banked
  6179  0009B8  830D               	bsf	13,1,b	;volatile
  6180  0009BA  D002               	goto	l503
  6181  0009BC                     l502:
  6182                           
  6183                           ; BSR set to: 0
  6184                           ;inc\CANlib.h: 973: else
  6185                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6186  0009BC  010F               	movlb	15	; () banked
  6187  0009BE  930D               	bcf	13,1,b	;volatile
  6188  0009C0                     l503:
  6189                           
  6190                           ; BSR set to: 15
  6191                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6192  0009C0  0100               	movlb	0	; () banked
  6193  0009C2  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6194  0009C4  D003               	goto	l504
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6198  0009C6  010F               	movlb	15	; () banked
  6199  0009C8  8B0D               	bsf	13,5,b	;volatile
  6200  0009CA  D002               	goto	l505
  6201  0009CC                     l504:
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;inc\CANlib.h: 978: else
  6205                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6206  0009CC  010F               	movlb	15	; () banked
  6207  0009CE  9B0D               	bcf	13,5,b	;volatile
  6208  0009D0                     l505:
  6209                           
  6210                           ; BSR set to: 15
  6211                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6212  0009D0  0100               	movlb	0	; () banked
  6213  0009D2  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6214  0009D4  D003               	goto	l506
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6218  0009D6  010F               	movlb	15	; () banked
  6219  0009D8  8D0D               	bsf	13,6,b	;volatile
  6220  0009DA  D002               	goto	l507
  6221  0009DC                     l506:
  6222                           
  6223                           ; BSR set to: 0
  6224                           ;inc\CANlib.h: 983: else
  6225                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6226  0009DC  010F               	movlb	15	; () banked
  6227  0009DE  9D0D               	bcf	13,6,b	;volatile
  6228  0009E0                     l507:
  6229                           
  6230                           ; BSR set to: 15
  6231                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6232  0009E0  0100               	movlb	0	; () banked
  6233  0009E2  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6234  0009E4  D003               	goto	l508
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6238  0009E6  010F               	movlb	15	; () banked
  6239  0009E8  8F0D               	bsf	13,7,b	;volatile
  6240  0009EA  D002               	goto	l3451
  6241  0009EC                     l508:
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;inc\CANlib.h: 988: else
  6245                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6246  0009EC  010F               	movlb	15	; () banked
  6247  0009EE  9F0D               	bcf	13,7,b	;volatile
  6248  0009F0                     l3451:
  6249                           
  6250                           ; BSR set to: 15
  6251                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6252  0009F0  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  6253  0009F4  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6254  0009F8  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6255  0009FC  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6256  000A00  0E16               	movlw	22
  6257  000A02  D006               	goto	u3920
  6258  000A04                     u3925:
  6259  000A04  0100               	movlb	0	; () banked
  6260  000A06  90D8               	bcf	status,0,c
  6261  000A08  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6262  000A0A  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6263  000A0C  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6264  000A0E  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  6265  000A10                     u3920:
  6266  000A10  2EE8               	decfsz	wreg,f,c
  6267  000A12  D7F8               	goto	u3925
  6268  000A14  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6269  000A18  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6270  000A1C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6271  000A20  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6275  000A24  0100               	movlb	0	; () banked
  6276  000A26  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  6277  000A28  0100               	movlb	0	; () banked
  6278  000A2A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6279  000A2C  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6280  000A2E  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6281  000A30  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6282                           
  6283                           ; BSR set to: 0
  6284                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6285  000A32  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6286  000A36                     l3457:
  6287                           
  6288                           ; BSR set to: 0
  6289                           ;inc\CANlib.h: 994: }
  6290                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6291  000A36  0E04               	movlw	4
  6292  000A38  0100               	movlb	0	; () banked
  6293  000A3A  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6294  000A3C  A4D8               	btfss	status,2,c
  6295  000A3E  D089               	goto	l3491
  6296                           
  6297                           ; BSR set to: 0
  6298  000A40  0EF7               	movlw	247
  6299  000A42  0100               	movlb	0	; () banked
  6300  000A44  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  6301  000A46  A4D8               	btfss	status,2,c
  6302  000A48  D084               	goto	l3491
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;inc\CANlib.h: 997: {
  6306                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6307  000A4A  010F               	movlb	15	; () banked
  6308  000A4C  8711               	bsf	17,3,b	;volatile
  6309                           
  6310                           ; BSR set to: 15
  6311                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6312  000A4E  0100               	movlb	0	; () banked
  6313  000A50  5173               	movf	CANSetFilter@filter& (0+255),w,b
  6314  000A52  0100               	movlb	0	; () banked
  6315  000A54  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6316  000A56  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6317  000A58  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6318  000A5A  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6322  000A5C  C07D  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6326  000A60  0E00               	movlw	0
  6327  000A62  0100               	movlb	0	; () banked
  6328  000A64  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  6329  000A66  0100               	movlb	0	; () banked
  6330  000A68  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6331  000A6A  0EFF               	movlw	255
  6332  000A6C  0100               	movlb	0	; () banked
  6333  000A6E  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6334  000A70  0100               	movlb	0	; () banked
  6335  000A72  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6336  000A74  0E00               	movlw	0
  6337  000A76  0100               	movlb	0	; () banked
  6338  000A78  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6339  000A7A  0100               	movlb	0	; () banked
  6340  000A7C  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6341  000A7E  0E00               	movlw	0
  6342  000A80  0100               	movlb	0	; () banked
  6343  000A82  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6344  000A84  0100               	movlb	0	; () banked
  6345  000A86  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6349  000A88  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  6350  000A8C  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6351  000A90  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6352  000A94  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6353  000A98  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  6354  000A9C  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6355  000AA0  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6356  000AA4  0100               	movlb	0	; () banked
  6357  000AA6  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  6358  000AA8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6359  000AAC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6360  000AB0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6361  000AB4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6365  000AB8  C07D  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6366                           
  6367                           ; BSR set to: 0
  6368                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6369  000ABC  0100               	movlb	0	; () banked
  6370  000ABE  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6371  000AC0  D003               	goto	l511
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6375  000AC2  010F               	movlb	15	; () banked
  6376  000AC4  8111               	bsf	17,0,b	;volatile
  6377  000AC6  D002               	goto	l512
  6378  000AC8                     l511:
  6379                           
  6380                           ; BSR set to: 0
  6381                           ;inc\CANlib.h: 1009: else
  6382                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6383  000AC8  010F               	movlb	15	; () banked
  6384  000ACA  9111               	bcf	17,0,b	;volatile
  6385  000ACC                     l512:
  6386                           
  6387                           ; BSR set to: 15
  6388                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6389  000ACC  0100               	movlb	0	; () banked
  6390  000ACE  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6391  000AD0  D003               	goto	l513
  6392                           
  6393                           ; BSR set to: 0
  6394                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6395  000AD2  010F               	movlb	15	; () banked
  6396  000AD4  8311               	bsf	17,1,b	;volatile
  6397  000AD6  D002               	goto	l514
  6398  000AD8                     l513:
  6399                           
  6400                           ; BSR set to: 0
  6401                           ;inc\CANlib.h: 1014: else
  6402                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6403  000AD8  010F               	movlb	15	; () banked
  6404  000ADA  9311               	bcf	17,1,b	;volatile
  6405  000ADC                     l514:
  6406                           
  6407                           ; BSR set to: 15
  6408                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6409  000ADC  0100               	movlb	0	; () banked
  6410  000ADE  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6411  000AE0  D003               	goto	l515
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6415  000AE2  010F               	movlb	15	; () banked
  6416  000AE4  8B11               	bsf	17,5,b	;volatile
  6417  000AE6  D002               	goto	l516
  6418  000AE8                     l515:
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;inc\CANlib.h: 1019: else
  6422                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6423  000AE8  010F               	movlb	15	; () banked
  6424  000AEA  9B11               	bcf	17,5,b	;volatile
  6425  000AEC                     l516:
  6426                           
  6427                           ; BSR set to: 15
  6428                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6429  000AEC  0100               	movlb	0	; () banked
  6430  000AEE  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6431  000AF0  D003               	goto	l517
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6435  000AF2  010F               	movlb	15	; () banked
  6436  000AF4  8D11               	bsf	17,6,b	;volatile
  6437  000AF6  D002               	goto	l518
  6438  000AF8                     l517:
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;inc\CANlib.h: 1024: else
  6442                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6443  000AF8  010F               	movlb	15	; () banked
  6444  000AFA  9D11               	bcf	17,6,b	;volatile
  6445  000AFC                     l518:
  6446                           
  6447                           ; BSR set to: 15
  6448                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6449  000AFC  0100               	movlb	0	; () banked
  6450  000AFE  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6451  000B00  D003               	goto	l519
  6452                           
  6453                           ; BSR set to: 0
  6454                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6455  000B02  010F               	movlb	15	; () banked
  6456  000B04  8F11               	bsf	17,7,b	;volatile
  6457  000B06  D002               	goto	l3485
  6458  000B08                     l519:
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;inc\CANlib.h: 1029: else
  6462                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6463  000B08  010F               	movlb	15	; () banked
  6464  000B0A  9F11               	bcf	17,7,b	;volatile
  6465  000B0C                     l3485:
  6466                           
  6467                           ; BSR set to: 15
  6468                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6469  000B0C  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  6470  000B10  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6471  000B14  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6472  000B18  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6473  000B1C  0E16               	movlw	22
  6474  000B1E  D006               	goto	u4000
  6475  000B20                     u4005:
  6476  000B20  0100               	movlb	0	; () banked
  6477  000B22  90D8               	bcf	status,0,c
  6478  000B24  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6479  000B26  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6480  000B28  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6481  000B2A  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  6482  000B2C                     u4000:
  6483  000B2C  2EE8               	decfsz	wreg,f,c
  6484  000B2E  D7F8               	goto	u4005
  6485  000B30  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6486  000B34  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6487  000B38  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6488  000B3C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6489                           
  6490                           ; BSR set to: 0
  6491                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6492  000B40  0100               	movlb	0	; () banked
  6493  000B42  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  6494  000B44  0100               	movlb	0	; () banked
  6495  000B46  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6496  000B48  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6497  000B4A  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6498  000B4C  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6499                           
  6500                           ; BSR set to: 0
  6501                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6502  000B4E  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6503  000B52                     l3491:
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;inc\CANlib.h: 1035: }
  6507                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6508  000B52  0E05               	movlw	5
  6509  000B54  0100               	movlb	0	; () banked
  6510  000B56  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6511  000B58  A4D8               	btfss	status,2,c
  6512  000B5A  0012               	return	
  6513                           
  6514                           ; BSR set to: 0
  6515  000B5C  0EF7               	movlw	247
  6516  000B5E  0100               	movlb	0	; () banked
  6517  000B60  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  6518  000B62  A4D8               	btfss	status,2,c
  6519  000B64  0012               	return	
  6520                           
  6521                           ; BSR set to: 0
  6522                           ;inc\CANlib.h: 1038: {
  6523                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6524  000B66  010F               	movlb	15	; () banked
  6525  000B68  8715               	bsf	21,3,b	;volatile
  6526                           
  6527                           ; BSR set to: 15
  6528                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6529  000B6A  0100               	movlb	0	; () banked
  6530  000B6C  5173               	movf	CANSetFilter@filter& (0+255),w,b
  6531  000B6E  0100               	movlb	0	; () banked
  6532  000B70  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6533  000B72  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6534  000B74  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6535  000B76  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6539  000B78  C07D  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6543  000B7C  0E00               	movlw	0
  6544  000B7E  0100               	movlb	0	; () banked
  6545  000B80  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  6546  000B82  0100               	movlb	0	; () banked
  6547  000B84  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6548  000B86  0EFF               	movlw	255
  6549  000B88  0100               	movlb	0	; () banked
  6550  000B8A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6551  000B8C  0100               	movlb	0	; () banked
  6552  000B8E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6553  000B90  0E00               	movlw	0
  6554  000B92  0100               	movlb	0	; () banked
  6555  000B94  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6556  000B96  0100               	movlb	0	; () banked
  6557  000B98  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6558  000B9A  0E00               	movlw	0
  6559  000B9C  0100               	movlb	0	; () banked
  6560  000B9E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6561  000BA0  0100               	movlb	0	; () banked
  6562  000BA2  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6566  000BA4  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  6567  000BA8  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6568  000BAC  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6569  000BB0  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6570  000BB4  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  6571  000BB8  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6572  000BBC  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6573  000BC0  0100               	movlb	0	; () banked
  6574  000BC2  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  6575  000BC4  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6576  000BC8  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6577  000BCC  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6578  000BD0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6582  000BD4  C07D  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6586  000BD8  0100               	movlb	0	; () banked
  6587  000BDA  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6588  000BDC  D003               	goto	l522
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6592  000BDE  010F               	movlb	15	; () banked
  6593  000BE0  8115               	bsf	21,0,b	;volatile
  6594  000BE2  D002               	goto	l523
  6595  000BE4                     l522:
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;inc\CANlib.h: 1050: else
  6599                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6600  000BE4  010F               	movlb	15	; () banked
  6601  000BE6  9115               	bcf	21,0,b	;volatile
  6602  000BE8                     l523:
  6603                           
  6604                           ; BSR set to: 15
  6605                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6606  000BE8  0100               	movlb	0	; () banked
  6607  000BEA  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6608  000BEC  D003               	goto	l524
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6612  000BEE  010F               	movlb	15	; () banked
  6613  000BF0  8315               	bsf	21,1,b	;volatile
  6614  000BF2  D002               	goto	l525
  6615  000BF4                     l524:
  6616                           
  6617                           ; BSR set to: 0
  6618                           ;inc\CANlib.h: 1055: else
  6619                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6620  000BF4  010F               	movlb	15	; () banked
  6621  000BF6  9315               	bcf	21,1,b	;volatile
  6622  000BF8                     l525:
  6623                           
  6624                           ; BSR set to: 15
  6625                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6626  000BF8  0100               	movlb	0	; () banked
  6627  000BFA  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6628  000BFC  D003               	goto	l526
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6632  000BFE  010F               	movlb	15	; () banked
  6633  000C00  8B15               	bsf	21,5,b	;volatile
  6634  000C02  D002               	goto	l527
  6635  000C04                     l526:
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;inc\CANlib.h: 1060: else
  6639                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6640  000C04  010F               	movlb	15	; () banked
  6641  000C06  9B15               	bcf	21,5,b	;volatile
  6642  000C08                     l527:
  6643                           
  6644                           ; BSR set to: 15
  6645                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6646  000C08  0100               	movlb	0	; () banked
  6647  000C0A  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6648  000C0C  D003               	goto	l528
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6652  000C0E  010F               	movlb	15	; () banked
  6653  000C10  8D15               	bsf	21,6,b	;volatile
  6654  000C12  D002               	goto	l529
  6655  000C14                     l528:
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;inc\CANlib.h: 1065: else
  6659                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6660  000C14  010F               	movlb	15	; () banked
  6661  000C16  9D15               	bcf	21,6,b	;volatile
  6662  000C18                     l529:
  6663                           
  6664                           ; BSR set to: 15
  6665                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6666  000C18  0100               	movlb	0	; () banked
  6667  000C1A  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6668  000C1C  D003               	goto	l530
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6672  000C1E  010F               	movlb	15	; () banked
  6673  000C20  8F15               	bsf	21,7,b	;volatile
  6674  000C22  D002               	goto	l3519
  6675  000C24                     l530:
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;inc\CANlib.h: 1070: else
  6679                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6680  000C24  010F               	movlb	15	; () banked
  6681  000C26  9F15               	bcf	21,7,b	;volatile
  6682  000C28                     l3519:
  6683                           
  6684                           ; BSR set to: 15
  6685                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6686  000C28  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  6687  000C2C  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6688  000C30  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6689  000C34  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6690  000C38  0E16               	movlw	22
  6691  000C3A  D006               	goto	u4080
  6692  000C3C                     u4085:
  6693  000C3C  0100               	movlb	0	; () banked
  6694  000C3E  90D8               	bcf	status,0,c
  6695  000C40  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6696  000C42  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6697  000C44  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6698  000C46  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  6699  000C48                     u4080:
  6700  000C48  2EE8               	decfsz	wreg,f,c
  6701  000C4A  D7F8               	goto	u4085
  6702  000C4C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6703  000C50  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6704  000C54  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6705  000C58  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6709  000C5C  0100               	movlb	0	; () banked
  6710  000C5E  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  6711  000C60  0100               	movlb	0	; () banked
  6712  000C62  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6713  000C64  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6714  000C66  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6715  000C68  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6719  000C6A  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6720  000C6E  0012               	return	
  6721  000C70                     __end_of_CANSetFilter:
  6722                           	opt stack 0
  6723                           tblptru	equ	0xFF8
  6724                           tblptrh	equ	0xFF7
  6725                           tblptrl	equ	0xFF6
  6726                           tablat	equ	0xFF5
  6727                           prodh	equ	0xFF4
  6728                           prodl	equ	0xFF3
  6729                           intcon	equ	0xFF2
  6730                           intcon2	equ	0xFF1
  6731                           postinc0	equ	0xFEE
  6732                           wreg	equ	0xFE8
  6733                           indf2	equ	0xFDF
  6734                           fsr2h	equ	0xFDA
  6735                           fsr2l	equ	0xFD9
  6736                           status	equ	0xFD8
  6737                           
  6738 ;; *************** function _CANOperationMode *****************
  6739 ;; Defined at:
  6740 ;;		line 206 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  mode            1    wreg     enum E16838
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;  mode            1   19[BANK0 ] enum E16838
  6745 ;; Return value:  Size  Location     Type
  6746 ;;		None               void
  6747 ;; Registers used:
  6748 ;;		wreg, status,2, status,0
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6754 ;;      Params:         0       0       0       0
  6755 ;;      Locals:         0       1       0       0
  6756 ;;      Temps:          0       0       0       0
  6757 ;;      Totals:         0       1       0       0
  6758 ;;Total ram usage:        1 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    4
  6761 ;; This function calls:
  6762 ;;		Nothing
  6763 ;; This function is called by:
  6764 ;;		_CANInitialize
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           	psect	text11
  6769  0038CE                     __ptext11:
  6770                           	opt stack 0
  6771  0038CE                     _CANOperationMode:
  6772                           	opt stack 24
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;incstack = 0
  6776                           ;CANOperationMode@mode stored from wreg
  6777  0038CE  0100               	movlb	0	; () banked
  6778  0038D0  6F73               	movwf	CANOperationMode@mode& (0+255),b
  6779                           
  6780                           ;inc\CANlib.h: 208: CANCON = mode;
  6781  0038D2  C073  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6782  0038D6                     l3115:
  6783  0038D6  506E               	movf	3950,w,c	;volatile
  6784  0038D8  0BE0               	andlw	224
  6785  0038DA  0100               	movlb	0	; () banked
  6786  0038DC  1973               	xorwf	CANOperationMode@mode& (0+255),w,b
  6787  0038DE  B4D8               	btfsc	status,2,c
  6788  0038E0  0012               	return	
  6789  0038E2  D7F9               	goto	l3115
  6790  0038E4                     __end_of_CANOperationMode:
  6791                           	opt stack 0
  6792                           tblptru	equ	0xFF8
  6793                           tblptrh	equ	0xFF7
  6794                           tblptrl	equ	0xFF6
  6795                           tablat	equ	0xFF5
  6796                           prodh	equ	0xFF4
  6797                           prodl	equ	0xFF3
  6798                           intcon	equ	0xFF2
  6799                           intcon2	equ	0xFF1
  6800                           postinc0	equ	0xFEE
  6801                           wreg	equ	0xFE8
  6802                           indf2	equ	0xFDF
  6803                           fsr2h	equ	0xFDA
  6804                           fsr2l	equ	0xFD9
  6805                           status	equ	0xFD8
  6806                           
  6807 ;; *************** function _calibrazione *****************
  6808 ;; Defined at:
  6809 ;;		line 183 in file "newmain.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;		None
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;		None
  6814 ;; Return value:  Size  Location     Type
  6815 ;;		None               void
  6816 ;; Registers used:
  6817 ;;		wreg, status,2, status,0, cstack
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6823 ;;      Params:         0       0       0       0
  6824 ;;      Locals:         0       0       0       0
  6825 ;;      Temps:          0       0       0       0
  6826 ;;      Totals:         0       0       0       0
  6827 ;;Total ram usage:        0 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; Hardware stack levels required when called:    5
  6830 ;; This function calls:
  6831 ;;		_BusyADC
  6832 ;;		_ConvertADC
  6833 ;;		_ReadADC
  6834 ;;		___lwdiv
  6835 ;; This function is called by:
  6836 ;;		_main
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text12
  6841  00377E                     __ptext12:
  6842                           	opt stack 0
  6843  00377E                     _calibrazione:
  6844                           	opt stack 25
  6845                           
  6846                           ;newmain.c: 184: ConvertADC();
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;incstack = 0
  6850  00377E  ECA1  F01C         	call	_ConvertADC	;wreg free
  6851  003782                     l4099:
  6852  003782  EC8F  F01C         	call	_BusyADC	;wreg free
  6853  003786  0900               	iorlw	0
  6854  003788  A4D8               	btfss	status,2,c
  6855  00378A  D7FB               	goto	l4099
  6856                           
  6857                           ;newmain.c: 186: ADCResult = ReadADC();
  6858  00378C  EC7D  F01C         	call	_ReadADC	;wreg free
  6859  003790  C073  F0DD         	movff	?_ReadADC,_ADCResult
  6860  003794  C074  F0DE         	movff	?_ReadADC+1,_ADCResult+1
  6861                           
  6862                           ;newmain.c: 187: calibration = (ADCResult - 511) / 45;
  6863  003798  0E01               	movlw	1
  6864  00379A  0100               	movlb	0	; () banked
  6865  00379C  25DD               	addwf	_ADCResult& (0+255),w,b
  6866  00379E  0100               	movlb	0	; () banked
  6867  0037A0  6F73               	movwf	___lwdiv@dividend& (0+255),b
  6868  0037A2  0EFE               	movlw	254
  6869  0037A4  0100               	movlb	0	; () banked
  6870  0037A6  21DE               	addwfc	(_ADCResult+1)& (0+255),w,b
  6871  0037A8  0100               	movlb	0	; () banked
  6872  0037AA  6F74               	movwf	(___lwdiv@dividend+1)& (0+255),b
  6873  0037AC  0E00               	movlw	0
  6874  0037AE  0100               	movlb	0	; () banked
  6875  0037B0  6F76               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6876  0037B2  0E2D               	movlw	45
  6877  0037B4  6F75               	movwf	___lwdiv@divisor& (0+255),b
  6878  0037B6  EC19  F01B         	call	___lwdiv	;wreg free
  6879  0037BA  C073  F009         	movff	?___lwdiv,_calibration
  6880  0037BE  C074  F00A         	movff	?___lwdiv+1,_calibration+1
  6881  0037C2  0012               	return		;funcret
  6882  0037C4                     __end_of_calibrazione:
  6883                           	opt stack 0
  6884                           tblptru	equ	0xFF8
  6885                           tblptrh	equ	0xFF7
  6886                           tblptrl	equ	0xFF6
  6887                           tablat	equ	0xFF5
  6888                           prodh	equ	0xFF4
  6889                           prodl	equ	0xFF3
  6890                           intcon	equ	0xFF2
  6891                           intcon2	equ	0xFF1
  6892                           postinc0	equ	0xFEE
  6893                           wreg	equ	0xFE8
  6894                           indf2	equ	0xFDF
  6895                           fsr2h	equ	0xFDA
  6896                           fsr2l	equ	0xFD9
  6897                           status	equ	0xFD8
  6898                           
  6899 ;; *************** function ___lwdiv *****************
  6900 ;; Defined at:
  6901 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  dividend        2   19[BANK0 ] unsigned int 
  6904 ;;  divisor         2   21[BANK0 ] unsigned int 
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;  quotient        2   23[BANK0 ] unsigned int 
  6907 ;;  counter         1   25[BANK0 ] unsigned char 
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  2   19[BANK0 ] unsigned int 
  6910 ;; Registers used:
  6911 ;;		wreg, status,2, status,0
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6917 ;;      Params:         0       4       0       0
  6918 ;;      Locals:         0       3       0       0
  6919 ;;      Temps:          0       0       0       0
  6920 ;;      Totals:         0       7       0       0
  6921 ;;Total ram usage:        7 bytes
  6922 ;; Hardware stack levels used:    1
  6923 ;; Hardware stack levels required when called:    4
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_calibrazione
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text13
  6932  003632                     __ptext13:
  6933                           	opt stack 0
  6934  003632                     ___lwdiv:
  6935                           	opt stack 25
  6936                           
  6937                           ;incstack = 0
  6938  003632  0E00               	movlw	0
  6939  003634  0100               	movlb	0	; () banked
  6940  003636  6F78               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6941  003638  0E00               	movlw	0
  6942  00363A  6F77               	movwf	___lwdiv@quotient& (0+255),b
  6943                           
  6944                           ; BSR set to: 0
  6945  00363C  0100               	movlb	0	; () banked
  6946  00363E  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6947  003640  0100               	movlb	0	; () banked
  6948  003642  1176               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6949  003644  B4D8               	btfsc	status,2,c
  6950  003646  D02C               	goto	l1130
  6951                           
  6952                           ; BSR set to: 0
  6953  003648  0E01               	movlw	1
  6954  00364A  0100               	movlb	0	; () banked
  6955  00364C  6F79               	movwf	___lwdiv@counter& (0+255),b
  6956  00364E  D006               	goto	l3861
  6957  003650                     l3859:
  6958                           
  6959                           ; BSR set to: 0
  6960  003650  0100               	movlb	0	; () banked
  6961  003652  90D8               	bcf	status,0,c
  6962  003654  3775               	rlcf	___lwdiv@divisor& (0+255),f,b
  6963  003656  3776               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6964  003658  0100               	movlb	0	; () banked
  6965  00365A  2B79               	incf	___lwdiv@counter& (0+255),f,b
  6966  00365C                     l3861:
  6967                           
  6968                           ; BSR set to: 0
  6969  00365C  0100               	movlb	0	; () banked
  6970  00365E  AF76               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6971  003660  D7F7               	goto	l3859
  6972  003662                     l3863:
  6973                           
  6974                           ; BSR set to: 0
  6975  003662  0100               	movlb	0	; () banked
  6976  003664  90D8               	bcf	status,0,c
  6977  003666  3777               	rlcf	___lwdiv@quotient& (0+255),f,b
  6978  003668  3778               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6979                           
  6980                           ; BSR set to: 0
  6981  00366A  0100               	movlb	0	; () banked
  6982  00366C  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6983  00366E  0100               	movlb	0	; () banked
  6984  003670  5D73               	subwf	___lwdiv@dividend& (0+255),w,b
  6985  003672  0100               	movlb	0	; () banked
  6986  003674  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6987  003676  0100               	movlb	0	; () banked
  6988  003678  5974               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6989  00367A  A0D8               	btfss	status,0,c
  6990  00367C  D00A               	goto	l3871
  6991                           
  6992                           ; BSR set to: 0
  6993  00367E  0100               	movlb	0	; () banked
  6994  003680  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6995  003682  0100               	movlb	0	; () banked
  6996  003684  5F73               	subwf	___lwdiv@dividend& (0+255),f,b
  6997  003686  0100               	movlb	0	; () banked
  6998  003688  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6999  00368A  0100               	movlb	0	; () banked
  7000  00368C  5B74               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7001                           
  7002                           ; BSR set to: 0
  7003  00368E  0100               	movlb	0	; () banked
  7004  003690  8177               	bsf	___lwdiv@quotient& (0+255),0,b
  7005  003692                     l3871:
  7006                           
  7007                           ; BSR set to: 0
  7008  003692  0100               	movlb	0	; () banked
  7009  003694  90D8               	bcf	status,0,c
  7010  003696  3376               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7011  003698  3375               	rrcf	___lwdiv@divisor& (0+255),f,b
  7012                           
  7013                           ; BSR set to: 0
  7014  00369A  0100               	movlb	0	; () banked
  7015  00369C  2F79               	decfsz	___lwdiv@counter& (0+255),f,b
  7016  00369E  D7E1               	goto	l3863
  7017  0036A0                     l1130:
  7018                           
  7019                           ; BSR set to: 0
  7020  0036A0  C077  F073         	movff	___lwdiv@quotient,?___lwdiv
  7021  0036A4  C078  F074         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7022                           
  7023                           ; BSR set to: 0
  7024  0036A8  0012               	return		;funcret
  7025  0036AA                     __end_of___lwdiv:
  7026                           	opt stack 0
  7027                           tblptru	equ	0xFF8
  7028                           tblptrh	equ	0xFF7
  7029                           tblptrl	equ	0xFF6
  7030                           tablat	equ	0xFF5
  7031                           prodh	equ	0xFF4
  7032                           prodl	equ	0xFF3
  7033                           intcon	equ	0xFF2
  7034                           intcon2	equ	0xFF1
  7035                           postinc0	equ	0xFEE
  7036                           wreg	equ	0xFE8
  7037                           indf2	equ	0xFDF
  7038                           fsr2h	equ	0xFDA
  7039                           fsr2l	equ	0xFD9
  7040                           status	equ	0xFD8
  7041                           
  7042 ;; *************** function _ReadADC *****************
  7043 ;; Defined at:
  7044 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcread.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;		None
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;		None
  7049 ;; Return value:  Size  Location     Type
  7050 ;;                  2   19[BANK0 ] int 
  7051 ;; Registers used:
  7052 ;;		wreg, status,2
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7058 ;;      Params:         0       2       0       0
  7059 ;;      Locals:         0       0       0       0
  7060 ;;      Temps:          0       2       0       0
  7061 ;;      Totals:         0       4       0       0
  7062 ;;Total ram usage:        4 bytes
  7063 ;; Hardware stack levels used:    1
  7064 ;; Hardware stack levels required when called:    4
  7065 ;; This function calls:
  7066 ;;		Nothing
  7067 ;; This function is called by:
  7068 ;;		_calibrazione
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072                           	psect	text14
  7073  0038FA                     __ptext14:
  7074                           	opt stack 0
  7075  0038FA                     _ReadADC:
  7076                           	opt stack 25
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;incstack = 0
  7080  0038FA  50C4               	movf	4036,w,c	;volatile
  7081  0038FC  0100               	movlb	0	; () banked
  7082  0038FE  6F75               	movwf	??_ReadADC& (0+255),b
  7083  003900  50C3               	movf	4035,w,c	;volatile
  7084  003902  0100               	movlb	0	; () banked
  7085  003904  6F73               	movwf	?_ReadADC& (0+255),b
  7086  003906  C075  F074         	movff	??_ReadADC,?_ReadADC+1
  7087  00390A  0012               	return	
  7088  00390C                     __end_of_ReadADC:
  7089                           	opt stack 0
  7090                           tblptru	equ	0xFF8
  7091                           tblptrh	equ	0xFF7
  7092                           tblptrl	equ	0xFF6
  7093                           tablat	equ	0xFF5
  7094                           prodh	equ	0xFF4
  7095                           prodl	equ	0xFF3
  7096                           intcon	equ	0xFF2
  7097                           intcon2	equ	0xFF1
  7098                           postinc0	equ	0xFEE
  7099                           wreg	equ	0xFE8
  7100                           indf2	equ	0xFDF
  7101                           fsr2h	equ	0xFDA
  7102                           fsr2l	equ	0xFD9
  7103                           status	equ	0xFD8
  7104                           
  7105 ;; *************** function _ConvertADC *****************
  7106 ;; Defined at:
  7107 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcconv.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;		None
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;		None
  7112 ;; Return value:  Size  Location     Type
  7113 ;;		None               void
  7114 ;; Registers used:
  7115 ;;		None
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7121 ;;      Params:         0       0       0       0
  7122 ;;      Locals:         0       0       0       0
  7123 ;;      Temps:          0       0       0       0
  7124 ;;      Totals:         0       0       0       0
  7125 ;;Total ram usage:        0 bytes
  7126 ;; Hardware stack levels used:    1
  7127 ;; Hardware stack levels required when called:    4
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_calibrazione
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text15
  7136  003942                     __ptext15:
  7137                           	opt stack 0
  7138  003942                     _ConvertADC:
  7139                           	opt stack 25
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;incstack = 0
  7143  003942  82C2               	bsf	4034,1,c	;volatile
  7144  003944  0012               	return		;funcret
  7145  003946                     __end_of_ConvertADC:
  7146                           	opt stack 0
  7147                           tblptru	equ	0xFF8
  7148                           tblptrh	equ	0xFF7
  7149                           tblptrl	equ	0xFF6
  7150                           tablat	equ	0xFF5
  7151                           prodh	equ	0xFF4
  7152                           prodl	equ	0xFF3
  7153                           intcon	equ	0xFF2
  7154                           intcon2	equ	0xFF1
  7155                           postinc0	equ	0xFEE
  7156                           wreg	equ	0xFE8
  7157                           indf2	equ	0xFDF
  7158                           fsr2h	equ	0xFDA
  7159                           fsr2l	equ	0xFD9
  7160                           status	equ	0xFD8
  7161                           
  7162 ;; *************** function _BusyADC *****************
  7163 ;; Defined at:
  7164 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcbusy.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;		None
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;		None
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  1    wreg      unsigned char 
  7171 ;; Registers used:
  7172 ;;		wreg
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7178 ;;      Params:         0       0       0       0
  7179 ;;      Locals:         0       0       0       0
  7180 ;;      Temps:          0       0       0       0
  7181 ;;      Totals:         0       0       0       0
  7182 ;;Total ram usage:        0 bytes
  7183 ;; Hardware stack levels used:    1
  7184 ;; Hardware stack levels required when called:    4
  7185 ;; This function calls:
  7186 ;;		Nothing
  7187 ;; This function is called by:
  7188 ;;		_calibrazione
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192                           	psect	text16
  7193  00391E                     __ptext16:
  7194                           	opt stack 0
  7195  00391E                     _BusyADC:
  7196                           	opt stack 25
  7197                           
  7198                           ;incstack = 0
  7199  00391E  A2C2               	btfss	4034,1,c	;volatile
  7200  003920  D002               	goto	u4560
  7201  003922  0E01               	movlw	1
  7202  003924  0012               	return	
  7203  003926                     u4560:
  7204  003926  0E00               	movlw	0
  7205  003928  0012               	return	
  7206  00392A                     __end_of_BusyADC:
  7207                           	opt stack 0
  7208                           tblptru	equ	0xFF8
  7209                           tblptrh	equ	0xFF7
  7210                           tblptrl	equ	0xFF6
  7211                           tablat	equ	0xFF5
  7212                           prodh	equ	0xFF4
  7213                           prodl	equ	0xFF3
  7214                           intcon	equ	0xFF2
  7215                           intcon2	equ	0xFF1
  7216                           postinc0	equ	0xFEE
  7217                           wreg	equ	0xFE8
  7218                           indf2	equ	0xFDF
  7219                           fsr2h	equ	0xFDA
  7220                           fsr2l	equ	0xFD9
  7221                           status	equ	0xFD8
  7222                           
  7223 ;; *************** function ___xxtofl *****************
  7224 ;; Defined at:
  7225 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;  sign            1    wreg     unsigned char 
  7228 ;;  val             4   44[BANK0 ] long 
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;  sign            1   52[BANK0 ] unsigned char 
  7231 ;;  arg             4   54[BANK0 ] unsigned long 
  7232 ;;  exp             1   53[BANK0 ] unsigned char 
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  4   44[BANK0 ] unsigned char 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2, status,0
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7242 ;;      Params:         0       4       0       0
  7243 ;;      Locals:         0       6       0       0
  7244 ;;      Temps:          0       4       0       0
  7245 ;;      Totals:         0      14       0       0
  7246 ;;Total ram usage:       14 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; Hardware stack levels required when called:    4
  7249 ;; This function calls:
  7250 ;;		Nothing
  7251 ;; This function is called by:
  7252 ;;		_main
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text17
  7257  002EC2                     __ptext17:
  7258                           	opt stack 0
  7259  002EC2                     ___xxtofl:
  7260                           	opt stack 26
  7261                           
  7262                           ;incstack = 0
  7263                           ;___xxtofl@sign stored from wreg
  7264  002EC2  0100               	movlb	0	; () banked
  7265  002EC4  6F94               	movwf	___xxtofl@sign& (0+255),b
  7266  002EC6  0100               	movlb	0	; () banked
  7267  002EC8  5194               	movf	___xxtofl@sign& (0+255),w,b
  7268  002ECA  0100               	movlb	0	; () banked
  7269  002ECC  B4D8               	btfsc	status,2,c
  7270  002ECE  D01E               	goto	l1275
  7271                           
  7272                           ; BSR set to: 0
  7273  002ED0  0100               	movlb	0	; () banked
  7274  002ED2  AF8F               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7275  002ED4  D01B               	goto	l1275
  7276                           
  7277                           ; BSR set to: 0
  7278  002ED6  C08C  F090         	movff	___xxtofl@val,??___xxtofl
  7279  002EDA  C08D  F091         	movff	___xxtofl@val+1,??___xxtofl+1
  7280  002EDE  C08E  F092         	movff	___xxtofl@val+2,??___xxtofl+2
  7281  002EE2  C08F  F093         	movff	___xxtofl@val+3,??___xxtofl+3
  7282  002EE6  0100               	movlb	0	; () banked
  7283  002EE8  1F90               	comf	??___xxtofl& (0+255),f,b
  7284  002EEA  1F91               	comf	(??___xxtofl+1)& (0+255),f,b
  7285  002EEC  1F92               	comf	(??___xxtofl+2)& (0+255),f,b
  7286  002EEE  1F93               	comf	(??___xxtofl+3)& (0+255),f,b
  7287  002EF0  2B90               	incf	??___xxtofl& (0+255),f,b
  7288  002EF2  0E00               	movlw	0
  7289  002EF4  2391               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7290  002EF6  2392               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7291  002EF8  2393               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7292  002EFA  C090  F096         	movff	??___xxtofl,___xxtofl@arg
  7293  002EFE  C091  F097         	movff	??___xxtofl+1,___xxtofl@arg+1
  7294  002F02  C092  F098         	movff	??___xxtofl+2,___xxtofl@arg+2
  7295  002F06  C093  F099         	movff	??___xxtofl+3,___xxtofl@arg+3
  7296  002F0A  D008               	goto	l4671
  7297  002F0C                     l1275:
  7298                           
  7299                           ; BSR set to: 0
  7300  002F0C  C08C  F096         	movff	___xxtofl@val,___xxtofl@arg
  7301  002F10  C08D  F097         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7302  002F14  C08E  F098         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7303  002F18  C08F  F099         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7304  002F1C                     l4671:
  7305                           
  7306                           ; BSR set to: 0
  7307  002F1C  0100               	movlb	0	; () banked
  7308  002F1E  518C               	movf	___xxtofl@val& (0+255),w,b
  7309  002F20  0100               	movlb	0	; () banked
  7310  002F22  118D               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7311  002F24  0100               	movlb	0	; () banked
  7312  002F26  118E               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7313  002F28  0100               	movlb	0	; () banked
  7314  002F2A  118F               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7315  002F2C  A4D8               	btfss	status,2,c
  7316  002F2E  D00A               	goto	l4677
  7317                           
  7318                           ; BSR set to: 0
  7319  002F30  0E00               	movlw	0
  7320  002F32  0100               	movlb	0	; () banked
  7321  002F34  6F8C               	movwf	?___xxtofl& (0+255),b
  7322  002F36  0E00               	movlw	0
  7323  002F38  6F8D               	movwf	(?___xxtofl+1)& (0+255),b
  7324  002F3A  0E00               	movlw	0
  7325  002F3C  6F8E               	movwf	(?___xxtofl+2)& (0+255),b
  7326  002F3E  0E00               	movlw	0
  7327  002F40  6F8F               	movwf	(?___xxtofl+3)& (0+255),b
  7328                           
  7329                           ; BSR set to: 0
  7330  002F42  0012               	return	
  7331  002F44                     l4677:
  7332                           
  7333                           ; BSR set to: 0
  7334  002F44  0E96               	movlw	150
  7335  002F46  0100               	movlb	0	; () banked
  7336  002F48  6F95               	movwf	___xxtofl@exp& (0+255),b
  7337  002F4A  D008               	goto	l4681
  7338  002F4C                     l4679:
  7339                           
  7340                           ; BSR set to: 0
  7341  002F4C  0100               	movlb	0	; () banked
  7342  002F4E  2B95               	incf	___xxtofl@exp& (0+255),f,b
  7343  002F50  0100               	movlb	0	; () banked
  7344  002F52  90D8               	bcf	status,0,c
  7345  002F54  3399               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7346  002F56  3398               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7347  002F58  3397               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7348  002F5A  3396               	rrcf	___xxtofl@arg& (0+255),f,b
  7349  002F5C                     l4681:
  7350                           
  7351                           ; BSR set to: 0
  7352  002F5C  0E00               	movlw	0
  7353  002F5E  0100               	movlb	0	; () banked
  7354  002F60  1596               	andwf	___xxtofl@arg& (0+255),w,b
  7355  002F62  0100               	movlb	0	; () banked
  7356  002F64  6F90               	movwf	??___xxtofl& (0+255),b
  7357  002F66  0E00               	movlw	0
  7358  002F68  0100               	movlb	0	; () banked
  7359  002F6A  1597               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7360  002F6C  0100               	movlb	0	; () banked
  7361  002F6E  6F91               	movwf	(??___xxtofl+1)& (0+255),b
  7362  002F70  0E00               	movlw	0
  7363  002F72  0100               	movlb	0	; () banked
  7364  002F74  1598               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7365  002F76  0100               	movlb	0	; () banked
  7366  002F78  6F92               	movwf	(??___xxtofl+2)& (0+255),b
  7367  002F7A  0EFE               	movlw	254
  7368  002F7C  0100               	movlb	0	; () banked
  7369  002F7E  1599               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7370  002F80  0100               	movlb	0	; () banked
  7371  002F82  6F93               	movwf	(??___xxtofl+3)& (0+255),b
  7372  002F84  0100               	movlb	0	; () banked
  7373  002F86  5190               	movf	??___xxtofl& (0+255),w,b
  7374  002F88  0100               	movlb	0	; () banked
  7375  002F8A  1191               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7376  002F8C  0100               	movlb	0	; () banked
  7377  002F8E  1192               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7378  002F90  0100               	movlb	0	; () banked
  7379  002F92  1193               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7380  002F94  B4D8               	btfsc	status,2,c
  7381  002F96  D010               	goto	l1282
  7382  002F98  D7D9               	goto	l4679
  7383  002F9A                     l4683:
  7384                           
  7385                           ; BSR set to: 0
  7386  002F9A  0100               	movlb	0	; () banked
  7387  002F9C  2B95               	incf	___xxtofl@exp& (0+255),f,b
  7388                           
  7389                           ; BSR set to: 0
  7390  002F9E  0E01               	movlw	1
  7391  002FA0  0100               	movlb	0	; () banked
  7392  002FA2  2796               	addwf	___xxtofl@arg& (0+255),f,b
  7393  002FA4  0E00               	movlw	0
  7394  002FA6  2397               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7395  002FA8  2398               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7396  002FAA  2399               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7397                           
  7398                           ; BSR set to: 0
  7399  002FAC  0100               	movlb	0	; () banked
  7400  002FAE  90D8               	bcf	status,0,c
  7401  002FB0  3399               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7402  002FB2  3398               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7403  002FB4  3397               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7404  002FB6  3396               	rrcf	___xxtofl@arg& (0+255),f,b
  7405  002FB8                     l1282:
  7406                           
  7407                           ; BSR set to: 0
  7408  002FB8  0E00               	movlw	0
  7409  002FBA  0100               	movlb	0	; () banked
  7410  002FBC  1596               	andwf	___xxtofl@arg& (0+255),w,b
  7411  002FBE  0100               	movlb	0	; () banked
  7412  002FC0  6F90               	movwf	??___xxtofl& (0+255),b
  7413  002FC2  0E00               	movlw	0
  7414  002FC4  0100               	movlb	0	; () banked
  7415  002FC6  1597               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7416  002FC8  0100               	movlb	0	; () banked
  7417  002FCA  6F91               	movwf	(??___xxtofl+1)& (0+255),b
  7418  002FCC  0E00               	movlw	0
  7419  002FCE  0100               	movlb	0	; () banked
  7420  002FD0  1598               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7421  002FD2  0100               	movlb	0	; () banked
  7422  002FD4  6F92               	movwf	(??___xxtofl+2)& (0+255),b
  7423  002FD6  0EFF               	movlw	255
  7424  002FD8  0100               	movlb	0	; () banked
  7425  002FDA  1599               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7426  002FDC  0100               	movlb	0	; () banked
  7427  002FDE  6F93               	movwf	(??___xxtofl+3)& (0+255),b
  7428  002FE0  0100               	movlb	0	; () banked
  7429  002FE2  5190               	movf	??___xxtofl& (0+255),w,b
  7430  002FE4  0100               	movlb	0	; () banked
  7431  002FE6  1191               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7432  002FE8  0100               	movlb	0	; () banked
  7433  002FEA  1192               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7434  002FEC  0100               	movlb	0	; () banked
  7435  002FEE  1193               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7436  002FF0  B4D8               	btfsc	status,2,c
  7437  002FF2  D009               	goto	l4691
  7438  002FF4  D7D2               	goto	l4683
  7439  002FF6                     l4689:
  7440                           
  7441                           ; BSR set to: 0
  7442  002FF6  0100               	movlb	0	; () banked
  7443  002FF8  0795               	decf	___xxtofl@exp& (0+255),f,b
  7444  002FFA  0100               	movlb	0	; () banked
  7445  002FFC  90D8               	bcf	status,0,c
  7446  002FFE  3796               	rlcf	___xxtofl@arg& (0+255),f,b
  7447  003000  3797               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7448  003002  3798               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7449  003004  3799               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7450  003006                     l4691:
  7451                           
  7452                           ; BSR set to: 0
  7453  003006  0100               	movlb	0	; () banked
  7454  003008  BF98               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7455  00300A  D004               	goto	l1289
  7456                           
  7457                           ; BSR set to: 0
  7458  00300C  0E02               	movlw	2
  7459  00300E  0100               	movlb	0	; () banked
  7460  003010  6195               	cpfslt	___xxtofl@exp& (0+255),b
  7461  003012  D7F1               	goto	l4689
  7462  003014                     l1289:
  7463                           
  7464                           ; BSR set to: 0
  7465  003014  0100               	movlb	0	; () banked
  7466  003016  B195               	btfsc	___xxtofl@exp& (0+255),0,b
  7467  003018  D009               	goto	l1290
  7468                           
  7469                           ; BSR set to: 0
  7470  00301A  0EFF               	movlw	255
  7471  00301C  0100               	movlb	0	; () banked
  7472  00301E  1796               	andwf	___xxtofl@arg& (0+255),f,b
  7473  003020  0EFF               	movlw	255
  7474  003022  1797               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  7475  003024  0E7F               	movlw	127
  7476  003026  1798               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  7477  003028  0EFF               	movlw	255
  7478  00302A  1799               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  7479  00302C                     l1290:
  7480                           
  7481                           ; BSR set to: 0
  7482  00302C  0100               	movlb	0	; () banked
  7483  00302E  90D8               	bcf	status,0,c
  7484  003030  3395               	rrcf	___xxtofl@exp& (0+255),f,b
  7485  003032  C095  F090         	movff	___xxtofl@exp,??___xxtofl
  7486  003036  0100               	movlb	0	; () banked
  7487  003038  6B91               	clrf	(??___xxtofl+1)& (0+255),b
  7488  00303A  6B92               	clrf	(??___xxtofl+2)& (0+255),b
  7489  00303C  6B93               	clrf	(??___xxtofl+3)& (0+255),b
  7490  00303E  C090  F093         	movff	??___xxtofl,??___xxtofl+3
  7491  003042  0100               	movlb	0	; () banked
  7492  003044  6B92               	clrf	(??___xxtofl+2)& (0+255),b
  7493  003046  6B91               	clrf	(??___xxtofl+1)& (0+255),b
  7494  003048  6B90               	clrf	??___xxtofl& (0+255),b
  7495  00304A  0100               	movlb	0	; () banked
  7496  00304C  5190               	movf	??___xxtofl& (0+255),w,b
  7497  00304E  0100               	movlb	0	; () banked
  7498  003050  1396               	iorwf	___xxtofl@arg& (0+255),f,b
  7499  003052  0100               	movlb	0	; () banked
  7500  003054  5191               	movf	(??___xxtofl+1)& (0+255),w,b
  7501  003056  0100               	movlb	0	; () banked
  7502  003058  1397               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  7503  00305A  0100               	movlb	0	; () banked
  7504  00305C  5192               	movf	(??___xxtofl+2)& (0+255),w,b
  7505  00305E  0100               	movlb	0	; () banked
  7506  003060  1398               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  7507  003062  0100               	movlb	0	; () banked
  7508  003064  5193               	movf	(??___xxtofl+3)& (0+255),w,b
  7509  003066  0100               	movlb	0	; () banked
  7510  003068  1399               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  7511                           
  7512                           ; BSR set to: 0
  7513  00306A  0100               	movlb	0	; () banked
  7514  00306C  5194               	movf	___xxtofl@sign& (0+255),w,b
  7515  00306E  0100               	movlb	0	; () banked
  7516  003070  B4D8               	btfsc	status,2,c
  7517  003072  D005               	goto	l4703
  7518                           
  7519                           ; BSR set to: 0
  7520  003074  0100               	movlb	0	; () banked
  7521  003076  AF8F               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7522  003078  D002               	goto	l4703
  7523                           
  7524                           ; BSR set to: 0
  7525  00307A  0100               	movlb	0	; () banked
  7526  00307C  8F99               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  7527  00307E                     l4703:
  7528                           
  7529                           ; BSR set to: 0
  7530  00307E  C096  F08C         	movff	___xxtofl@arg,?___xxtofl
  7531  003082  C097  F08D         	movff	___xxtofl@arg+1,?___xxtofl+1
  7532  003086  C098  F08E         	movff	___xxtofl@arg+2,?___xxtofl+2
  7533  00308A  C099  F08F         	movff	___xxtofl@arg+3,?___xxtofl+3
  7534  00308E  0012               	return	
  7535  003090                     __end_of___xxtofl:
  7536                           	opt stack 0
  7537                           tblptru	equ	0xFF8
  7538                           tblptrh	equ	0xFF7
  7539                           tblptrl	equ	0xFF6
  7540                           tablat	equ	0xFF5
  7541                           prodh	equ	0xFF4
  7542                           prodl	equ	0xFF3
  7543                           intcon	equ	0xFF2
  7544                           intcon2	equ	0xFF1
  7545                           postinc0	equ	0xFEE
  7546                           wreg	equ	0xFE8
  7547                           indf2	equ	0xFDF
  7548                           fsr2h	equ	0xFDA
  7549                           fsr2l	equ	0xFD9
  7550                           status	equ	0xFD8
  7551                           
  7552 ;; *************** function ___lmul *****************
  7553 ;; Defined at:
  7554 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  multiplier      4   19[BANK0 ] unsigned long 
  7557 ;;  multiplicand    4   23[BANK0 ] unsigned long 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;  product         4   27[BANK0 ] unsigned long 
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  4   19[BANK0 ] unsigned long 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2, status,0
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7569 ;;      Params:         0       8       0       0
  7570 ;;      Locals:         0       4       0       0
  7571 ;;      Temps:          0       0       0       0
  7572 ;;      Totals:         0      12       0       0
  7573 ;;Total ram usage:       12 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    4
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_main
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text18
  7584  0036AA                     __ptext18:
  7585                           	opt stack 0
  7586  0036AA                     ___lmul:
  7587                           	opt stack 26
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;incstack = 0
  7591  0036AA  0E00               	movlw	0
  7592  0036AC  0100               	movlb	0	; () banked
  7593  0036AE  6F7B               	movwf	___lmul@product& (0+255),b
  7594  0036B0  0E00               	movlw	0
  7595  0036B2  6F7C               	movwf	(___lmul@product+1)& (0+255),b
  7596  0036B4  0E00               	movlw	0
  7597  0036B6  6F7D               	movwf	(___lmul@product+2)& (0+255),b
  7598  0036B8  0E00               	movlw	0
  7599  0036BA  6F7E               	movwf	(___lmul@product+3)& (0+255),b
  7600  0036BC                     l4115:
  7601                           
  7602                           ; BSR set to: 0
  7603  0036BC  0100               	movlb	0	; () banked
  7604  0036BE  A173               	btfss	___lmul@multiplier& (0+255),0,b
  7605  0036C0  D010               	goto	l4119
  7606                           
  7607                           ; BSR set to: 0
  7608  0036C2  0100               	movlb	0	; () banked
  7609  0036C4  5177               	movf	___lmul@multiplicand& (0+255),w,b
  7610  0036C6  0100               	movlb	0	; () banked
  7611  0036C8  277B               	addwf	___lmul@product& (0+255),f,b
  7612  0036CA  0100               	movlb	0	; () banked
  7613  0036CC  5178               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  7614  0036CE  0100               	movlb	0	; () banked
  7615  0036D0  237C               	addwfc	(___lmul@product+1)& (0+255),f,b
  7616  0036D2  0100               	movlb	0	; () banked
  7617  0036D4  5179               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  7618  0036D6  0100               	movlb	0	; () banked
  7619  0036D8  237D               	addwfc	(___lmul@product+2)& (0+255),f,b
  7620  0036DA  0100               	movlb	0	; () banked
  7621  0036DC  517A               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  7622  0036DE  0100               	movlb	0	; () banked
  7623  0036E0  237E               	addwfc	(___lmul@product+3)& (0+255),f,b
  7624  0036E2                     l4119:
  7625                           
  7626                           ; BSR set to: 0
  7627  0036E2  0100               	movlb	0	; () banked
  7628  0036E4  90D8               	bcf	status,0,c
  7629  0036E6  3777               	rlcf	___lmul@multiplicand& (0+255),f,b
  7630  0036E8  3778               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  7631  0036EA  3779               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  7632  0036EC  377A               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  7633                           
  7634                           ; BSR set to: 0
  7635  0036EE  0100               	movlb	0	; () banked
  7636  0036F0  90D8               	bcf	status,0,c
  7637  0036F2  3376               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  7638  0036F4  3375               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  7639  0036F6  3374               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  7640  0036F8  3373               	rrcf	___lmul@multiplier& (0+255),f,b
  7641  0036FA  0100               	movlb	0	; () banked
  7642  0036FC  5173               	movf	___lmul@multiplier& (0+255),w,b
  7643  0036FE  0100               	movlb	0	; () banked
  7644  003700  1174               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  7645  003702  0100               	movlb	0	; () banked
  7646  003704  1175               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  7647  003706  0100               	movlb	0	; () banked
  7648  003708  1176               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  7649  00370A  A4D8               	btfss	status,2,c
  7650  00370C  D7D7               	goto	l4115
  7651                           
  7652                           ; BSR set to: 0
  7653  00370E  C07B  F073         	movff	___lmul@product,?___lmul
  7654  003712  C07C  F074         	movff	___lmul@product+1,?___lmul+1
  7655  003716  C07D  F075         	movff	___lmul@product+2,?___lmul+2
  7656  00371A  C07E  F076         	movff	___lmul@product+3,?___lmul+3
  7657                           
  7658                           ; BSR set to: 0
  7659  00371E  0012               	return		;funcret
  7660  003720                     __end_of___lmul:
  7661                           	opt stack 0
  7662                           tblptru	equ	0xFF8
  7663                           tblptrh	equ	0xFF7
  7664                           tblptrl	equ	0xFF6
  7665                           tablat	equ	0xFF5
  7666                           prodh	equ	0xFF4
  7667                           prodl	equ	0xFF3
  7668                           intcon	equ	0xFF2
  7669                           intcon2	equ	0xFF1
  7670                           postinc0	equ	0xFEE
  7671                           wreg	equ	0xFE8
  7672                           indf2	equ	0xFDF
  7673                           fsr2h	equ	0xFDA
  7674                           fsr2l	equ	0xFD9
  7675                           status	equ	0xFD8
  7676                           
  7677 ;; *************** function ___lldiv *****************
  7678 ;; Defined at:
  7679 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;  dividend        4   31[BANK0 ] unsigned long 
  7682 ;;  divisor         4   35[BANK0 ] unsigned long 
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;  quotient        4   39[BANK0 ] unsigned long 
  7685 ;;  counter         1   43[BANK0 ] unsigned char 
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  4   31[BANK0 ] unsigned long 
  7688 ;; Registers used:
  7689 ;;		wreg, status,2, status,0
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7695 ;;      Params:         0       8       0       0
  7696 ;;      Locals:         0       5       0       0
  7697 ;;      Temps:          0       0       0       0
  7698 ;;      Totals:         0      13       0       0
  7699 ;;Total ram usage:       13 bytes
  7700 ;; Hardware stack levels used:    1
  7701 ;; Hardware stack levels required when called:    4
  7702 ;; This function calls:
  7703 ;;		Nothing
  7704 ;; This function is called by:
  7705 ;;		_main
  7706 ;; This function uses a non-reentrant model
  7707 ;;
  7708                           
  7709                           	psect	text19
  7710  003448                     __ptext19:
  7711                           	opt stack 0
  7712  003448                     ___lldiv:
  7713                           	opt stack 26
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;incstack = 0
  7717  003448  0E00               	movlw	0
  7718  00344A  0100               	movlb	0	; () banked
  7719  00344C  6F87               	movwf	___lldiv@quotient& (0+255),b
  7720  00344E  0E00               	movlw	0
  7721  003450  6F88               	movwf	(___lldiv@quotient+1)& (0+255),b
  7722  003452  0E00               	movlw	0
  7723  003454  6F89               	movwf	(___lldiv@quotient+2)& (0+255),b
  7724  003456  0E00               	movlw	0
  7725  003458  6F8A               	movwf	(___lldiv@quotient+3)& (0+255),b
  7726                           
  7727                           ; BSR set to: 0
  7728  00345A  0100               	movlb	0	; () banked
  7729  00345C  5183               	movf	___lldiv@divisor& (0+255),w,b
  7730  00345E  0100               	movlb	0	; () banked
  7731  003460  1184               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7732  003462  0100               	movlb	0	; () banked
  7733  003464  1185               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7734  003466  0100               	movlb	0	; () banked
  7735  003468  1186               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7736  00346A  B4D8               	btfsc	status,2,c
  7737  00346C  D042               	goto	l1077
  7738                           
  7739                           ; BSR set to: 0
  7740  00346E  0E01               	movlw	1
  7741  003470  0100               	movlb	0	; () banked
  7742  003472  6F8B               	movwf	___lldiv@counter& (0+255),b
  7743  003474  D008               	goto	l4651
  7744  003476                     l4649:
  7745                           
  7746                           ; BSR set to: 0
  7747  003476  0100               	movlb	0	; () banked
  7748  003478  90D8               	bcf	status,0,c
  7749  00347A  3783               	rlcf	___lldiv@divisor& (0+255),f,b
  7750  00347C  3784               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7751  00347E  3785               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7752  003480  3786               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7753  003482  0100               	movlb	0	; () banked
  7754  003484  2B8B               	incf	___lldiv@counter& (0+255),f,b
  7755  003486                     l4651:
  7756                           
  7757                           ; BSR set to: 0
  7758  003486  0100               	movlb	0	; () banked
  7759  003488  AF86               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7760  00348A  D7F5               	goto	l4649
  7761  00348C                     l4653:
  7762                           
  7763                           ; BSR set to: 0
  7764  00348C  0100               	movlb	0	; () banked
  7765  00348E  90D8               	bcf	status,0,c
  7766  003490  3787               	rlcf	___lldiv@quotient& (0+255),f,b
  7767  003492  3788               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7768  003494  3789               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7769  003496  378A               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7770                           
  7771                           ; BSR set to: 0
  7772  003498  0100               	movlb	0	; () banked
  7773  00349A  5183               	movf	___lldiv@divisor& (0+255),w,b
  7774  00349C  0100               	movlb	0	; () banked
  7775  00349E  5D7F               	subwf	___lldiv@dividend& (0+255),w,b
  7776  0034A0  0100               	movlb	0	; () banked
  7777  0034A2  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7778  0034A4  0100               	movlb	0	; () banked
  7779  0034A6  5980               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7780  0034A8  0100               	movlb	0	; () banked
  7781  0034AA  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7782  0034AC  0100               	movlb	0	; () banked
  7783  0034AE  5981               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7784  0034B0  0100               	movlb	0	; () banked
  7785  0034B2  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7786  0034B4  0100               	movlb	0	; () banked
  7787  0034B6  5982               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7788  0034B8  A0D8               	btfss	status,0,c
  7789  0034BA  D012               	goto	l4661
  7790                           
  7791                           ; BSR set to: 0
  7792  0034BC  0100               	movlb	0	; () banked
  7793  0034BE  5183               	movf	___lldiv@divisor& (0+255),w,b
  7794  0034C0  0100               	movlb	0	; () banked
  7795  0034C2  5F7F               	subwf	___lldiv@dividend& (0+255),f,b
  7796  0034C4  0100               	movlb	0	; () banked
  7797  0034C6  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7798  0034C8  0100               	movlb	0	; () banked
  7799  0034CA  5B80               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7800  0034CC  0100               	movlb	0	; () banked
  7801  0034CE  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7802  0034D0  0100               	movlb	0	; () banked
  7803  0034D2  5B81               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7804  0034D4  0100               	movlb	0	; () banked
  7805  0034D6  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7806  0034D8  0100               	movlb	0	; () banked
  7807  0034DA  5B82               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7808                           
  7809                           ; BSR set to: 0
  7810  0034DC  0100               	movlb	0	; () banked
  7811  0034DE  8187               	bsf	___lldiv@quotient& (0+255),0,b
  7812  0034E0                     l4661:
  7813                           
  7814                           ; BSR set to: 0
  7815  0034E0  0100               	movlb	0	; () banked
  7816  0034E2  90D8               	bcf	status,0,c
  7817  0034E4  3386               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7818  0034E6  3385               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7819  0034E8  3384               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7820  0034EA  3383               	rrcf	___lldiv@divisor& (0+255),f,b
  7821                           
  7822                           ; BSR set to: 0
  7823  0034EC  0100               	movlb	0	; () banked
  7824  0034EE  2F8B               	decfsz	___lldiv@counter& (0+255),f,b
  7825  0034F0  D7CD               	goto	l4653
  7826  0034F2                     l1077:
  7827                           
  7828                           ; BSR set to: 0
  7829  0034F2  C087  F07F         	movff	___lldiv@quotient,?___lldiv
  7830  0034F6  C088  F080         	movff	___lldiv@quotient+1,?___lldiv+1
  7831  0034FA  C089  F081         	movff	___lldiv@quotient+2,?___lldiv+2
  7832  0034FE  C08A  F082         	movff	___lldiv@quotient+3,?___lldiv+3
  7833                           
  7834                           ; BSR set to: 0
  7835  003502  0012               	return		;funcret
  7836  003504                     __end_of___lldiv:
  7837                           	opt stack 0
  7838                           tblptru	equ	0xFF8
  7839                           tblptrh	equ	0xFF7
  7840                           tblptrl	equ	0xFF6
  7841                           tablat	equ	0xFF5
  7842                           prodh	equ	0xFF4
  7843                           prodl	equ	0xFF3
  7844                           intcon	equ	0xFF2
  7845                           intcon2	equ	0xFF1
  7846                           postinc0	equ	0xFEE
  7847                           wreg	equ	0xFE8
  7848                           indf2	equ	0xFDF
  7849                           fsr2h	equ	0xFDA
  7850                           fsr2l	equ	0xFD9
  7851                           status	equ	0xFD8
  7852                           
  7853 ;; *************** function ___fltol *****************
  7854 ;; Defined at:
  7855 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  f1              4   16[BANK1 ] unsigned long 
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;  exp1            1   92[BANK0 ] unsigned char 
  7860 ;;  sign1           1   91[BANK0 ] unsigned char 
  7861 ;; Return value:  Size  Location     Type
  7862 ;;                  4   16[BANK1 ] long 
  7863 ;; Registers used:
  7864 ;;		wreg, status,2, status,0
  7865 ;; Tracked objects:
  7866 ;;		On entry : 0/0
  7867 ;;		On exit  : 0/0
  7868 ;;		Unchanged: 0/0
  7869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7870 ;;      Params:         0       0       4       0
  7871 ;;      Locals:         0       2       0       0
  7872 ;;      Temps:          0       0       4       0
  7873 ;;      Totals:         0       2       8       0
  7874 ;;Total ram usage:       10 bytes
  7875 ;; Hardware stack levels used:    1
  7876 ;; Hardware stack levels required when called:    4
  7877 ;; This function calls:
  7878 ;;		Nothing
  7879 ;; This function is called by:
  7880 ;;		_main
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text20
  7885  003256                     __ptext20:
  7886                           	opt stack 0
  7887  003256                     ___fltol:
  7888                           	opt stack 26
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;incstack = 0
  7892  003256  0101               	movlb	1	; () banked
  7893  003258  3512               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7894  00325A  3513               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7895  00325C  0100               	movlb	0	; () banked
  7896  00325E  6FBC               	movwf	___fltol@exp1& (0+255),b
  7897  003260  0100               	movlb	0	; () banked
  7898  003262  51BC               	movf	___fltol@exp1& (0+255),w,b
  7899  003264  A4D8               	btfss	status,2,c
  7900  003266  D00A               	goto	l5073
  7901                           
  7902                           ; BSR set to: 0
  7903  003268  0E00               	movlw	0
  7904  00326A  0101               	movlb	1	; () banked
  7905  00326C  6F10               	movwf	?___fltol& (0+255),b
  7906  00326E  0E00               	movlw	0
  7907  003270  6F11               	movwf	(?___fltol+1)& (0+255),b
  7908  003272  0E00               	movlw	0
  7909  003274  6F12               	movwf	(?___fltol+2)& (0+255),b
  7910  003276  0E00               	movlw	0
  7911  003278  6F13               	movwf	(?___fltol+3)& (0+255),b
  7912                           
  7913                           ; BSR set to: 1
  7914  00327A  0012               	return	
  7915  00327C                     l5073:
  7916  00327C  C110  F114         	movff	___fltol@f1,??___fltol
  7917  003280  C111  F115         	movff	___fltol@f1+1,??___fltol+1
  7918  003284  C112  F116         	movff	___fltol@f1+2,??___fltol+2
  7919  003288  C113  F117         	movff	___fltol@f1+3,??___fltol+3
  7920  00328C  0E20               	movlw	32
  7921  00328E  D006               	goto	u6630
  7922  003290                     u6635:
  7923  003290  0101               	movlb	1	; () banked
  7924  003292  90D8               	bcf	status,0,c
  7925  003294  3317               	rrcf	(??___fltol+3)& (0+255),f,b
  7926  003296  3316               	rrcf	(??___fltol+2)& (0+255),f,b
  7927  003298  3315               	rrcf	(??___fltol+1)& (0+255),f,b
  7928  00329A  3314               	rrcf	??___fltol& (0+255),f,b
  7929  00329C                     u6630:
  7930  00329C  2EE8               	decfsz	wreg,f,c
  7931  00329E  D7F8               	goto	u6635
  7932  0032A0  0101               	movlb	1	; () banked
  7933  0032A2  5114               	movf	??___fltol& (0+255),w,b
  7934  0032A4  0100               	movlb	0	; () banked
  7935  0032A6  6FBB               	movwf	___fltol@sign1& (0+255),b
  7936                           
  7937                           ; BSR set to: 0
  7938  0032A8  0101               	movlb	1	; () banked
  7939  0032AA  8F12               	bsf	(___fltol@f1+2)& (0+255),7,b
  7940                           
  7941                           ; BSR set to: 1
  7942  0032AC  0EFF               	movlw	255
  7943  0032AE  0101               	movlb	1	; () banked
  7944  0032B0  1710               	andwf	___fltol@f1& (0+255),f,b
  7945  0032B2  0EFF               	movlw	255
  7946  0032B4  1711               	andwf	(___fltol@f1+1)& (0+255),f,b
  7947  0032B6  0EFF               	movlw	255
  7948  0032B8  1712               	andwf	(___fltol@f1+2)& (0+255),f,b
  7949  0032BA  0E00               	movlw	0
  7950  0032BC  1713               	andwf	(___fltol@f1+3)& (0+255),f,b
  7951                           
  7952                           ; BSR set to: 1
  7953  0032BE  0E96               	movlw	150
  7954  0032C0  0100               	movlb	0	; () banked
  7955  0032C2  5FBC               	subwf	___fltol@exp1& (0+255),f,b
  7956                           
  7957                           ; BSR set to: 0
  7958  0032C4  0100               	movlb	0	; () banked
  7959  0032C6  AFBC               	btfss	___fltol@exp1& (0+255),7,b
  7960  0032C8  D01A               	goto	l5093
  7961                           
  7962                           ; BSR set to: 0
  7963  0032CA  0100               	movlb	0	; () banked
  7964  0032CC  51BC               	movf	___fltol@exp1& (0+255),w,b
  7965  0032CE  0A80               	xorlw	128
  7966  0032D0  0F97               	addlw	151
  7967  0032D2  B0D8               	btfsc	status,0,c
  7968  0032D4  D00A               	goto	l5089
  7969                           
  7970                           ; BSR set to: 0
  7971  0032D6  0E00               	movlw	0
  7972  0032D8  0101               	movlb	1	; () banked
  7973  0032DA  6F10               	movwf	?___fltol& (0+255),b
  7974  0032DC  0E00               	movlw	0
  7975  0032DE  6F11               	movwf	(?___fltol+1)& (0+255),b
  7976  0032E0  0E00               	movlw	0
  7977  0032E2  6F12               	movwf	(?___fltol+2)& (0+255),b
  7978  0032E4  0E00               	movlw	0
  7979  0032E6  6F13               	movwf	(?___fltol+3)& (0+255),b
  7980                           
  7981                           ; BSR set to: 1
  7982  0032E8  0012               	return	
  7983  0032EA                     l5089:
  7984  0032EA  0101               	movlb	1	; () banked
  7985  0032EC  90D8               	bcf	status,0,c
  7986  0032EE  3313               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7987  0032F0  3312               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7988  0032F2  3311               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7989  0032F4  3310               	rrcf	___fltol@f1& (0+255),f,b
  7990                           
  7991                           ; BSR set to: 1
  7992  0032F6  0100               	movlb	0	; () banked
  7993  0032F8  3FBC               	incfsz	___fltol@exp1& (0+255),f,b
  7994  0032FA  D7F7               	goto	l5089
  7995                           
  7996                           ; BSR set to: 0
  7997  0032FC  D01B               	goto	l5103
  7998  0032FE                     l5093:
  7999                           
  8000                           ; BSR set to: 0
  8001  0032FE  0E1F               	movlw	31
  8002  003300  0100               	movlb	0	; () banked
  8003  003302  65BC               	cpfsgt	___fltol@exp1& (0+255),b
  8004  003304  D012               	goto	l5101
  8005                           
  8006                           ; BSR set to: 0
  8007  003306  0E00               	movlw	0
  8008  003308  0101               	movlb	1	; () banked
  8009  00330A  6F10               	movwf	?___fltol& (0+255),b
  8010  00330C  0E00               	movlw	0
  8011  00330E  6F11               	movwf	(?___fltol+1)& (0+255),b
  8012  003310  0E00               	movlw	0
  8013  003312  6F12               	movwf	(?___fltol+2)& (0+255),b
  8014  003314  0E00               	movlw	0
  8015  003316  6F13               	movwf	(?___fltol+3)& (0+255),b
  8016                           
  8017                           ; BSR set to: 1
  8018  003318  0012               	return	
  8019  00331A                     l5099:
  8020  00331A  0101               	movlb	1	; () banked
  8021  00331C  90D8               	bcf	status,0,c
  8022  00331E  3710               	rlcf	___fltol@f1& (0+255),f,b
  8023  003320  3711               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8024  003322  3712               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8025  003324  3713               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8026  003326  0100               	movlb	0	; () banked
  8027  003328  07BC               	decf	___fltol@exp1& (0+255),f,b
  8028  00332A                     l5101:
  8029  00332A  0100               	movlb	0	; () banked
  8030  00332C  51BC               	movf	___fltol@exp1& (0+255),w,b
  8031  00332E  0100               	movlb	0	; () banked
  8032  003330  A4D8               	btfss	status,2,c
  8033  003332  D7F3               	goto	l5099
  8034  003334                     l5103:
  8035                           
  8036                           ; BSR set to: 0
  8037  003334  0100               	movlb	0	; () banked
  8038  003336  51BB               	movf	___fltol@sign1& (0+255),w,b
  8039  003338  0100               	movlb	0	; () banked
  8040  00333A  B4D8               	btfsc	status,2,c
  8041  00333C  D009               	goto	l5107
  8042                           
  8043                           ; BSR set to: 0
  8044  00333E  0101               	movlb	1	; () banked
  8045  003340  1F13               	comf	(___fltol@f1+3)& (0+255),f,b
  8046  003342  1F12               	comf	(___fltol@f1+2)& (0+255),f,b
  8047  003344  1F11               	comf	(___fltol@f1+1)& (0+255),f,b
  8048  003346  6D10               	negf	___fltol@f1& (0+255),b
  8049  003348  0E00               	movlw	0
  8050  00334A  2311               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8051  00334C  2312               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8052  00334E  2313               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8053  003350                     l5107:
  8054  003350  C110  F110         	movff	___fltol@f1,?___fltol
  8055  003354  C111  F111         	movff	___fltol@f1+1,?___fltol+1
  8056  003358  C112  F112         	movff	___fltol@f1+2,?___fltol+2
  8057  00335C  C113  F113         	movff	___fltol@f1+3,?___fltol+3
  8058  003360  0012               	return	
  8059  003362                     __end_of___fltol:
  8060                           	opt stack 0
  8061                           tblptru	equ	0xFF8
  8062                           tblptrh	equ	0xFF7
  8063                           tblptrl	equ	0xFF6
  8064                           tablat	equ	0xFF5
  8065                           prodh	equ	0xFF4
  8066                           prodl	equ	0xFF3
  8067                           intcon	equ	0xFF2
  8068                           intcon2	equ	0xFF1
  8069                           postinc0	equ	0xFEE
  8070                           wreg	equ	0xFE8
  8071                           indf2	equ	0xFDF
  8072                           fsr2h	equ	0xFDA
  8073                           fsr2l	equ	0xFD9
  8074                           status	equ	0xFD8
  8075                           
  8076 ;; *************** function ___flneg *****************
  8077 ;; Defined at:
  8078 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;  f1              4   83[BANK0 ] long 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;		None
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  4   83[BANK0 ] long 
  8085 ;; Registers used:
  8086 ;;		wreg, status,2, status,0
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8092 ;;      Params:         0       4       0       0
  8093 ;;      Locals:         0       0       0       0
  8094 ;;      Temps:          0       0       0       0
  8095 ;;      Totals:         0       4       0       0
  8096 ;;Total ram usage:        4 bytes
  8097 ;; Hardware stack levels used:    1
  8098 ;; Hardware stack levels required when called:    4
  8099 ;; This function calls:
  8100 ;;		Nothing
  8101 ;; This function is called by:
  8102 ;;		_main
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text21
  8107  00383C                     __ptext21:
  8108                           	opt stack 0
  8109  00383C                     ___flneg:
  8110                           	opt stack 26
  8111                           
  8112                           ;incstack = 0
  8113  00383C  0100               	movlb	0	; () banked
  8114  00383E  51B3               	movf	___flneg@f1& (0+255),w,b
  8115  003840  0100               	movlb	0	; () banked
  8116  003842  11B4               	iorwf	(___flneg@f1+1)& (0+255),w,b
  8117  003844  0100               	movlb	0	; () banked
  8118  003846  11B5               	iorwf	(___flneg@f1+2)& (0+255),w,b
  8119  003848  0100               	movlb	0	; () banked
  8120  00384A  11B6               	iorwf	(___flneg@f1+3)& (0+255),w,b
  8121  00384C  B4D8               	btfsc	status,2,c
  8122  00384E  D009               	goto	l4595
  8123                           
  8124                           ; BSR set to: 0
  8125  003850  0E00               	movlw	0
  8126  003852  0100               	movlb	0	; () banked
  8127  003854  1BB3               	xorwf	___flneg@f1& (0+255),f,b
  8128  003856  0E00               	movlw	0
  8129  003858  1BB4               	xorwf	(___flneg@f1+1)& (0+255),f,b
  8130  00385A  0E00               	movlw	0
  8131  00385C  1BB5               	xorwf	(___flneg@f1+2)& (0+255),f,b
  8132  00385E  0E80               	movlw	128
  8133  003860  1BB6               	xorwf	(___flneg@f1+3)& (0+255),f,b
  8134  003862                     l4595:
  8135                           
  8136                           ; BSR set to: 0
  8137  003862  C0B3  F0B3         	movff	___flneg@f1,?___flneg
  8138  003866  C0B4  F0B4         	movff	___flneg@f1+1,?___flneg+1
  8139  00386A  C0B5  F0B5         	movff	___flneg@f1+2,?___flneg+2
  8140  00386E  C0B6  F0B6         	movff	___flneg@f1+3,?___flneg+3
  8141  003872  0012               	return	
  8142  003874                     __end_of___flneg:
  8143                           	opt stack 0
  8144                           tblptru	equ	0xFF8
  8145                           tblptrh	equ	0xFF7
  8146                           tblptrl	equ	0xFF6
  8147                           tablat	equ	0xFF5
  8148                           prodh	equ	0xFF4
  8149                           prodl	equ	0xFF3
  8150                           intcon	equ	0xFF2
  8151                           intcon2	equ	0xFF1
  8152                           postinc0	equ	0xFEE
  8153                           wreg	equ	0xFE8
  8154                           indf2	equ	0xFDF
  8155                           fsr2h	equ	0xFDA
  8156                           fsr2l	equ	0xFD9
  8157                           status	equ	0xFD8
  8158                           
  8159 ;; *************** function ___flmul *****************
  8160 ;; Defined at:
  8161 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;  b               4   58[BANK0 ] long 
  8164 ;;  a               4   62[BANK0 ] long 
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;  prod            4   77[BANK0 ] struct .
  8167 ;;  grs             4   71[BANK0 ] unsigned long 
  8168 ;;  temp            2   81[BANK0 ] struct .
  8169 ;;  bexp            1   76[BANK0 ] unsigned char 
  8170 ;;  aexp            1   75[BANK0 ] unsigned char 
  8171 ;;  sign            1   70[BANK0 ] unsigned char 
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  4   58[BANK0 ] unsigned char 
  8174 ;; Registers used:
  8175 ;;		wreg, status,2, status,0, prodl, prodh
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 0/0
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8181 ;;      Params:         0       8       0       0
  8182 ;;      Locals:         0      13       0       0
  8183 ;;      Temps:          0       4       0       0
  8184 ;;      Totals:         0      25       0       0
  8185 ;;Total ram usage:       25 bytes
  8186 ;; Hardware stack levels used:    1
  8187 ;; Hardware stack levels required when called:    4
  8188 ;; This function calls:
  8189 ;;		Nothing
  8190 ;; This function is called by:
  8191 ;;		_main
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           	psect	text22
  8196  0022BE                     __ptext22:
  8197                           	opt stack 0
  8198  0022BE                     ___flmul:
  8199                           	opt stack 26
  8200                           
  8201                           ; BSR set to: 0
  8202                           ;incstack = 0
  8203  0022BE  0100               	movlb	0	; () banked
  8204  0022C0  519D               	movf	(___flmul@b+3)& (0+255),w,b
  8205  0022C2  0B80               	andlw	128
  8206  0022C4  0100               	movlb	0	; () banked
  8207  0022C6  6FA6               	movwf	___flmul@sign& (0+255),b
  8208  0022C8  0100               	movlb	0	; () banked
  8209  0022CA  519D               	movf	(___flmul@b+3)& (0+255),w,b
  8210  0022CC  259D               	addwf	(___flmul@b+3)& (0+255),w,b
  8211  0022CE  0100               	movlb	0	; () banked
  8212  0022D0  6FAC               	movwf	___flmul@bexp& (0+255),b
  8213                           
  8214                           ; BSR set to: 0
  8215  0022D2  0100               	movlb	0	; () banked
  8216  0022D4  AF9C               	btfss	(___flmul@b+2)& (0+255),7,b
  8217  0022D6  D002               	goto	l4467
  8218                           
  8219                           ; BSR set to: 0
  8220  0022D8  0100               	movlb	0	; () banked
  8221  0022DA  81AC               	bsf	___flmul@bexp& (0+255),0,b
  8222  0022DC                     l4467:
  8223                           
  8224                           ; BSR set to: 0
  8225  0022DC  0100               	movlb	0	; () banked
  8226  0022DE  51AC               	movf	___flmul@bexp& (0+255),w,b
  8227  0022E0  0100               	movlb	0	; () banked
  8228  0022E2  B4D8               	btfsc	status,2,c
  8229  0022E4  D010               	goto	l4475
  8230                           
  8231                           ; BSR set to: 0
  8232  0022E6  0100               	movlb	0	; () banked
  8233  0022E8  29AC               	incf	___flmul@bexp& (0+255),w,b
  8234  0022EA  A4D8               	btfss	status,2,c
  8235  0022EC  D009               	goto	l4473
  8236                           
  8237                           ; BSR set to: 0
  8238  0022EE  0E00               	movlw	0
  8239  0022F0  0100               	movlb	0	; () banked
  8240  0022F2  6F9A               	movwf	___flmul@b& (0+255),b
  8241  0022F4  0E00               	movlw	0
  8242  0022F6  6F9B               	movwf	(___flmul@b+1)& (0+255),b
  8243  0022F8  0E00               	movlw	0
  8244  0022FA  6F9C               	movwf	(___flmul@b+2)& (0+255),b
  8245  0022FC  0E00               	movlw	0
  8246  0022FE  6F9D               	movwf	(___flmul@b+3)& (0+255),b
  8247  002300                     l4473:
  8248                           
  8249                           ; BSR set to: 0
  8250  002300  0100               	movlb	0	; () banked
  8251  002302  8F9C               	bsf	(___flmul@b+2)& (0+255),7,b
  8252  002304  D009               	goto	l4477
  8253  002306                     l4475:
  8254                           
  8255                           ; BSR set to: 0
  8256  002306  0E00               	movlw	0
  8257  002308  0100               	movlb	0	; () banked
  8258  00230A  6F9A               	movwf	___flmul@b& (0+255),b
  8259  00230C  0E00               	movlw	0
  8260  00230E  6F9B               	movwf	(___flmul@b+1)& (0+255),b
  8261  002310  0E00               	movlw	0
  8262  002312  6F9C               	movwf	(___flmul@b+2)& (0+255),b
  8263  002314  0E00               	movlw	0
  8264  002316  6F9D               	movwf	(___flmul@b+3)& (0+255),b
  8265  002318                     l4477:
  8266                           
  8267                           ; BSR set to: 0
  8268  002318  0100               	movlb	0	; () banked
  8269  00231A  51A1               	movf	(___flmul@a+3)& (0+255),w,b
  8270  00231C  0B80               	andlw	128
  8271  00231E  0100               	movlb	0	; () banked
  8272  002320  1BA6               	xorwf	___flmul@sign& (0+255),f,b
  8273                           
  8274                           ; BSR set to: 0
  8275  002322  0100               	movlb	0	; () banked
  8276  002324  51A1               	movf	(___flmul@a+3)& (0+255),w,b
  8277  002326  25A1               	addwf	(___flmul@a+3)& (0+255),w,b
  8278  002328  0100               	movlb	0	; () banked
  8279  00232A  6FAB               	movwf	___flmul@aexp& (0+255),b
  8280                           
  8281                           ; BSR set to: 0
  8282  00232C  0100               	movlb	0	; () banked
  8283  00232E  AFA0               	btfss	(___flmul@a+2)& (0+255),7,b
  8284  002330  D002               	goto	l4485
  8285                           
  8286                           ; BSR set to: 0
  8287  002332  0100               	movlb	0	; () banked
  8288  002334  81AB               	bsf	___flmul@aexp& (0+255),0,b
  8289  002336                     l4485:
  8290                           
  8291                           ; BSR set to: 0
  8292  002336  0100               	movlb	0	; () banked
  8293  002338  51AB               	movf	___flmul@aexp& (0+255),w,b
  8294  00233A  0100               	movlb	0	; () banked
  8295  00233C  B4D8               	btfsc	status,2,c
  8296  00233E  D010               	goto	l4493
  8297                           
  8298                           ; BSR set to: 0
  8299  002340  0100               	movlb	0	; () banked
  8300  002342  29AB               	incf	___flmul@aexp& (0+255),w,b
  8301  002344  A4D8               	btfss	status,2,c
  8302  002346  D009               	goto	l4491
  8303                           
  8304                           ; BSR set to: 0
  8305  002348  0E00               	movlw	0
  8306  00234A  0100               	movlb	0	; () banked
  8307  00234C  6F9E               	movwf	___flmul@a& (0+255),b
  8308  00234E  0E00               	movlw	0
  8309  002350  6F9F               	movwf	(___flmul@a+1)& (0+255),b
  8310  002352  0E00               	movlw	0
  8311  002354  6FA0               	movwf	(___flmul@a+2)& (0+255),b
  8312  002356  0E00               	movlw	0
  8313  002358  6FA1               	movwf	(___flmul@a+3)& (0+255),b
  8314  00235A                     l4491:
  8315                           
  8316                           ; BSR set to: 0
  8317  00235A  0100               	movlb	0	; () banked
  8318  00235C  8FA0               	bsf	(___flmul@a+2)& (0+255),7,b
  8319  00235E  D009               	goto	l1253
  8320  002360                     l4493:
  8321                           
  8322                           ; BSR set to: 0
  8323  002360  0E00               	movlw	0
  8324  002362  0100               	movlb	0	; () banked
  8325  002364  6F9E               	movwf	___flmul@a& (0+255),b
  8326  002366  0E00               	movlw	0
  8327  002368  6F9F               	movwf	(___flmul@a+1)& (0+255),b
  8328  00236A  0E00               	movlw	0
  8329  00236C  6FA0               	movwf	(___flmul@a+2)& (0+255),b
  8330  00236E  0E00               	movlw	0
  8331  002370  6FA1               	movwf	(___flmul@a+3)& (0+255),b
  8332  002372                     l1253:
  8333                           
  8334                           ; BSR set to: 0
  8335  002372  0100               	movlb	0	; () banked
  8336  002374  51AB               	movf	___flmul@aexp& (0+255),w,b
  8337  002376  0100               	movlb	0	; () banked
  8338  002378  B4D8               	btfsc	status,2,c
  8339  00237A  D005               	goto	l4497
  8340                           
  8341                           ; BSR set to: 0
  8342  00237C  0100               	movlb	0	; () banked
  8343  00237E  51AC               	movf	___flmul@bexp& (0+255),w,b
  8344  002380  0100               	movlb	0	; () banked
  8345  002382  A4D8               	btfss	status,2,c
  8346  002384  D00A               	goto	l4501
  8347  002386                     l4497:
  8348                           
  8349                           ; BSR set to: 0
  8350  002386  0E00               	movlw	0
  8351  002388  0100               	movlb	0	; () banked
  8352  00238A  6F9A               	movwf	?___flmul& (0+255),b
  8353  00238C  0E00               	movlw	0
  8354  00238E  6F9B               	movwf	(?___flmul+1)& (0+255),b
  8355  002390  0E00               	movlw	0
  8356  002392  6F9C               	movwf	(?___flmul+2)& (0+255),b
  8357  002394  0E00               	movlw	0
  8358  002396  6F9D               	movwf	(?___flmul+3)& (0+255),b
  8359                           
  8360                           ; BSR set to: 0
  8361  002398  0012               	return	
  8362  00239A                     l4501:
  8363                           
  8364                           ; BSR set to: 0
  8365  00239A  0100               	movlb	0	; () banked
  8366  00239C  51A0               	movf	(___flmul@a+2)& (0+255),w,b
  8367  00239E  0100               	movlb	0	; () banked
  8368  0023A0  039A               	mulwf	___flmul@b& (0+255),b
  8369  0023A2  CFF3 F0B1          	movff	prodl,___flmul@temp
  8370  0023A6  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8371                           
  8372                           ; BSR set to: 0
  8373  0023AA  0100               	movlb	0	; () banked
  8374  0023AC  51B1               	movf	___flmul@temp& (0+255),w,b
  8375  0023AE  0100               	movlb	0	; () banked
  8376  0023B0  6FA7               	movwf	___flmul@grs& (0+255),b
  8377  0023B2  6BA8               	clrf	(___flmul@grs+1)& (0+255),b
  8378  0023B4  6BA9               	clrf	(___flmul@grs+2)& (0+255),b
  8379  0023B6  6BAA               	clrf	(___flmul@grs+3)& (0+255),b
  8380                           
  8381                           ; BSR set to: 0
  8382  0023B8  0100               	movlb	0	; () banked
  8383  0023BA  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8384  0023BC  0100               	movlb	0	; () banked
  8385  0023BE  6FAD               	movwf	___flmul@prod& (0+255),b
  8386  0023C0  6BAE               	clrf	(___flmul@prod+1)& (0+255),b
  8387  0023C2  6BAF               	clrf	(___flmul@prod+2)& (0+255),b
  8388  0023C4  6BB0               	clrf	(___flmul@prod+3)& (0+255),b
  8389  0023C6  0100               	movlb	0	; () banked
  8390  0023C8  519F               	movf	(___flmul@a+1)& (0+255),w,b
  8391  0023CA  0100               	movlb	0	; () banked
  8392  0023CC  039B               	mulwf	(___flmul@b+1)& (0+255),b
  8393  0023CE  CFF3 F0B1          	movff	prodl,___flmul@temp
  8394  0023D2  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8395                           
  8396                           ; BSR set to: 0
  8397  0023D6  0100               	movlb	0	; () banked
  8398  0023D8  51B1               	movf	___flmul@temp& (0+255),w,b
  8399  0023DA  0100               	movlb	0	; () banked
  8400  0023DC  27A7               	addwf	___flmul@grs& (0+255),f,b
  8401  0023DE  0E00               	movlw	0
  8402  0023E0  23A8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8403  0023E2  23A9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8404  0023E4  23AA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8405                           
  8406                           ; BSR set to: 0
  8407  0023E6  0100               	movlb	0	; () banked
  8408  0023E8  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8409  0023EA  0100               	movlb	0	; () banked
  8410  0023EC  27AD               	addwf	___flmul@prod& (0+255),f,b
  8411  0023EE  0E00               	movlw	0
  8412  0023F0  23AE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8413  0023F2  23AF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8414  0023F4  23B0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8415  0023F6  0100               	movlb	0	; () banked
  8416  0023F8  519E               	movf	___flmul@a& (0+255),w,b
  8417  0023FA  0100               	movlb	0	; () banked
  8418  0023FC  039C               	mulwf	(___flmul@b+2)& (0+255),b
  8419  0023FE  CFF3 F0B1          	movff	prodl,___flmul@temp
  8420  002402  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8421                           
  8422                           ; BSR set to: 0
  8423  002406  0100               	movlb	0	; () banked
  8424  002408  51B1               	movf	___flmul@temp& (0+255),w,b
  8425  00240A  0100               	movlb	0	; () banked
  8426  00240C  27A7               	addwf	___flmul@grs& (0+255),f,b
  8427  00240E  0E00               	movlw	0
  8428  002410  23A8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8429  002412  23A9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8430  002414  23AA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8431                           
  8432                           ; BSR set to: 0
  8433  002416  0100               	movlb	0	; () banked
  8434  002418  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8435  00241A  0100               	movlb	0	; () banked
  8436  00241C  27AD               	addwf	___flmul@prod& (0+255),f,b
  8437  00241E  0E00               	movlw	0
  8438  002420  23AE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8439  002422  23AF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8440  002424  23B0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8441                           
  8442                           ; BSR set to: 0
  8443  002426  C0A9  F0AA         	movff	___flmul@grs+2,___flmul@grs+3
  8444  00242A  C0A8  F0A9         	movff	___flmul@grs+1,___flmul@grs+2
  8445  00242E  C0A7  F0A8         	movff	___flmul@grs,___flmul@grs+1
  8446  002432  0100               	movlb	0	; () banked
  8447  002434  6BA7               	clrf	___flmul@grs& (0+255),b
  8448                           
  8449                           ; BSR set to: 0
  8450  002436  0100               	movlb	0	; () banked
  8451  002438  519E               	movf	___flmul@a& (0+255),w,b
  8452  00243A  0100               	movlb	0	; () banked
  8453  00243C  039B               	mulwf	(___flmul@b+1)& (0+255),b
  8454  00243E  CFF3 F0B1          	movff	prodl,___flmul@temp
  8455  002442  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8456                           
  8457                           ; BSR set to: 0
  8458  002446  0100               	movlb	0	; () banked
  8459  002448  51B1               	movf	___flmul@temp& (0+255),w,b
  8460  00244A  0100               	movlb	0	; () banked
  8461  00244C  27A7               	addwf	___flmul@grs& (0+255),f,b
  8462  00244E  0100               	movlb	0	; () banked
  8463  002450  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8464  002452  0100               	movlb	0	; () banked
  8465  002454  23A8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8466  002456  0E00               	movlw	0
  8467  002458  0100               	movlb	0	; () banked
  8468  00245A  23A9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8469  00245C  0E00               	movlw	0
  8470  00245E  0100               	movlb	0	; () banked
  8471  002460  23AA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8472                           
  8473                           ; BSR set to: 0
  8474  002462  0100               	movlb	0	; () banked
  8475  002464  519F               	movf	(___flmul@a+1)& (0+255),w,b
  8476  002466  0100               	movlb	0	; () banked
  8477  002468  039A               	mulwf	___flmul@b& (0+255),b
  8478  00246A  CFF3 F0B1          	movff	prodl,___flmul@temp
  8479  00246E  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8480                           
  8481                           ; BSR set to: 0
  8482  002472  0100               	movlb	0	; () banked
  8483  002474  51B1               	movf	___flmul@temp& (0+255),w,b
  8484  002476  0100               	movlb	0	; () banked
  8485  002478  27A7               	addwf	___flmul@grs& (0+255),f,b
  8486  00247A  0100               	movlb	0	; () banked
  8487  00247C  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8488  00247E  0100               	movlb	0	; () banked
  8489  002480  23A8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8490  002482  0E00               	movlw	0
  8491  002484  0100               	movlb	0	; () banked
  8492  002486  23A9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8493  002488  0E00               	movlw	0
  8494  00248A  0100               	movlb	0	; () banked
  8495  00248C  23AA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8496                           
  8497                           ; BSR set to: 0
  8498  00248E  C0A9  F0AA         	movff	___flmul@grs+2,___flmul@grs+3
  8499  002492  C0A8  F0A9         	movff	___flmul@grs+1,___flmul@grs+2
  8500  002496  C0A7  F0A8         	movff	___flmul@grs,___flmul@grs+1
  8501  00249A  0100               	movlb	0	; () banked
  8502  00249C  6BA7               	clrf	___flmul@grs& (0+255),b
  8503  00249E  0100               	movlb	0	; () banked
  8504  0024A0  519E               	movf	___flmul@a& (0+255),w,b
  8505  0024A2  0100               	movlb	0	; () banked
  8506  0024A4  039A               	mulwf	___flmul@b& (0+255),b
  8507  0024A6  CFF3 F0B1          	movff	prodl,___flmul@temp
  8508  0024AA  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8509                           
  8510                           ; BSR set to: 0
  8511  0024AE  0100               	movlb	0	; () banked
  8512  0024B0  51B1               	movf	___flmul@temp& (0+255),w,b
  8513  0024B2  0100               	movlb	0	; () banked
  8514  0024B4  27A7               	addwf	___flmul@grs& (0+255),f,b
  8515  0024B6  0100               	movlb	0	; () banked
  8516  0024B8  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8517  0024BA  0100               	movlb	0	; () banked
  8518  0024BC  23A8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8519  0024BE  0E00               	movlw	0
  8520  0024C0  0100               	movlb	0	; () banked
  8521  0024C2  23A9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8522  0024C4  0E00               	movlw	0
  8523  0024C6  0100               	movlb	0	; () banked
  8524  0024C8  23AA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8525                           
  8526                           ; BSR set to: 0
  8527  0024CA  0100               	movlb	0	; () banked
  8528  0024CC  51A0               	movf	(___flmul@a+2)& (0+255),w,b
  8529  0024CE  0100               	movlb	0	; () banked
  8530  0024D0  039B               	mulwf	(___flmul@b+1)& (0+255),b
  8531  0024D2  CFF3 F0B1          	movff	prodl,___flmul@temp
  8532  0024D6  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8533  0024DA  0100               	movlb	0	; () banked
  8534  0024DC  51B1               	movf	___flmul@temp& (0+255),w,b
  8535  0024DE  0100               	movlb	0	; () banked
  8536  0024E0  27AD               	addwf	___flmul@prod& (0+255),f,b
  8537  0024E2  0100               	movlb	0	; () banked
  8538  0024E4  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8539  0024E6  0100               	movlb	0	; () banked
  8540  0024E8  23AE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8541  0024EA  0E00               	movlw	0
  8542  0024EC  0100               	movlb	0	; () banked
  8543  0024EE  23AF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8544  0024F0  0E00               	movlw	0
  8545  0024F2  0100               	movlb	0	; () banked
  8546  0024F4  23B0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8547                           
  8548                           ; BSR set to: 0
  8549  0024F6  0100               	movlb	0	; () banked
  8550  0024F8  519F               	movf	(___flmul@a+1)& (0+255),w,b
  8551  0024FA  0100               	movlb	0	; () banked
  8552  0024FC  039C               	mulwf	(___flmul@b+2)& (0+255),b
  8553  0024FE  CFF3 F0B1          	movff	prodl,___flmul@temp
  8554  002502  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8555                           
  8556                           ; BSR set to: 0
  8557  002506  0100               	movlb	0	; () banked
  8558  002508  51B1               	movf	___flmul@temp& (0+255),w,b
  8559  00250A  0100               	movlb	0	; () banked
  8560  00250C  27AD               	addwf	___flmul@prod& (0+255),f,b
  8561  00250E  0100               	movlb	0	; () banked
  8562  002510  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8563  002512  0100               	movlb	0	; () banked
  8564  002514  23AE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8565  002516  0E00               	movlw	0
  8566  002518  0100               	movlb	0	; () banked
  8567  00251A  23AF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8568  00251C  0E00               	movlw	0
  8569  00251E  0100               	movlb	0	; () banked
  8570  002520  23B0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8571  002522  0100               	movlb	0	; () banked
  8572  002524  51A0               	movf	(___flmul@a+2)& (0+255),w,b
  8573  002526  0100               	movlb	0	; () banked
  8574  002528  039C               	mulwf	(___flmul@b+2)& (0+255),b
  8575  00252A  CFF3 F0B1          	movff	prodl,___flmul@temp
  8576  00252E  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8577                           
  8578                           ; BSR set to: 0
  8579  002532  0100               	movlb	0	; () banked
  8580  002534  51B1               	movf	___flmul@temp& (0+255),w,b
  8581  002536  0100               	movlb	0	; () banked
  8582  002538  6FA2               	movwf	??___flmul& (0+255),b
  8583  00253A  0100               	movlb	0	; () banked
  8584  00253C  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8585  00253E  0100               	movlb	0	; () banked
  8586  002540  6FA3               	movwf	(??___flmul+1)& (0+255),b
  8587  002542  0100               	movlb	0	; () banked
  8588  002544  6BA4               	clrf	(??___flmul+2)& (0+255),b
  8589  002546  0100               	movlb	0	; () banked
  8590  002548  6BA5               	clrf	(??___flmul+3)& (0+255),b
  8591  00254A  C0A4  F0A5         	movff	??___flmul+2,??___flmul+3
  8592  00254E  C0A3  F0A4         	movff	??___flmul+1,??___flmul+2
  8593  002552  C0A2  F0A3         	movff	??___flmul,??___flmul+1
  8594  002556  0100               	movlb	0	; () banked
  8595  002558  6BA2               	clrf	??___flmul& (0+255),b
  8596  00255A  0100               	movlb	0	; () banked
  8597  00255C  51A2               	movf	??___flmul& (0+255),w,b
  8598  00255E  0100               	movlb	0	; () banked
  8599  002560  27AD               	addwf	___flmul@prod& (0+255),f,b
  8600  002562  0100               	movlb	0	; () banked
  8601  002564  51A3               	movf	(??___flmul+1)& (0+255),w,b
  8602  002566  0100               	movlb	0	; () banked
  8603  002568  23AE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8604  00256A  0100               	movlb	0	; () banked
  8605  00256C  51A4               	movf	(??___flmul+2)& (0+255),w,b
  8606  00256E  0100               	movlb	0	; () banked
  8607  002570  23AF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8608  002572  0100               	movlb	0	; () banked
  8609  002574  51A5               	movf	(??___flmul+3)& (0+255),w,b
  8610  002576  0100               	movlb	0	; () banked
  8611  002578  23B0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8612                           
  8613                           ; BSR set to: 0
  8614  00257A  C0A7  F0A2         	movff	___flmul@grs,??___flmul
  8615  00257E  C0A8  F0A3         	movff	___flmul@grs+1,??___flmul+1
  8616  002582  C0A9  F0A4         	movff	___flmul@grs+2,??___flmul+2
  8617  002586  C0AA  F0A5         	movff	___flmul@grs+3,??___flmul+3
  8618  00258A  0E19               	movlw	25
  8619  00258C  D006               	goto	u5640
  8620  00258E                     u5645:
  8621  00258E  0100               	movlb	0	; () banked
  8622  002590  90D8               	bcf	status,0,c
  8623  002592  33A5               	rrcf	(??___flmul+3)& (0+255),f,b
  8624  002594  33A4               	rrcf	(??___flmul+2)& (0+255),f,b
  8625  002596  33A3               	rrcf	(??___flmul+1)& (0+255),f,b
  8626  002598  33A2               	rrcf	??___flmul& (0+255),f,b
  8627  00259A                     u5640:
  8628  00259A  2EE8               	decfsz	wreg,f,c
  8629  00259C  D7F8               	goto	u5645
  8630  00259E  0100               	movlb	0	; () banked
  8631  0025A0  51A2               	movf	??___flmul& (0+255),w,b
  8632  0025A2  0100               	movlb	0	; () banked
  8633  0025A4  27AD               	addwf	___flmul@prod& (0+255),f,b
  8634  0025A6  0100               	movlb	0	; () banked
  8635  0025A8  51A3               	movf	(??___flmul+1)& (0+255),w,b
  8636  0025AA  0100               	movlb	0	; () banked
  8637  0025AC  23AE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8638  0025AE  0100               	movlb	0	; () banked
  8639  0025B0  51A4               	movf	(??___flmul+2)& (0+255),w,b
  8640  0025B2  0100               	movlb	0	; () banked
  8641  0025B4  23AF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8642  0025B6  0100               	movlb	0	; () banked
  8643  0025B8  51A5               	movf	(??___flmul+3)& (0+255),w,b
  8644  0025BA  0100               	movlb	0	; () banked
  8645  0025BC  23B0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8646                           
  8647                           ; BSR set to: 0
  8648  0025BE  C0A9  F0AA         	movff	___flmul@grs+2,___flmul@grs+3
  8649  0025C2  C0A8  F0A9         	movff	___flmul@grs+1,___flmul@grs+2
  8650  0025C6  C0A7  F0A8         	movff	___flmul@grs,___flmul@grs+1
  8651  0025CA  0100               	movlb	0	; () banked
  8652  0025CC  6BA7               	clrf	___flmul@grs& (0+255),b
  8653                           
  8654                           ; BSR set to: 0
  8655  0025CE  0100               	movlb	0	; () banked
  8656  0025D0  51AB               	movf	___flmul@aexp& (0+255),w,b
  8657  0025D2  C0AC  F0A2         	movff	___flmul@bexp,??___flmul
  8658  0025D6  0100               	movlb	0	; () banked
  8659  0025D8  6BA3               	clrf	(??___flmul+1)& (0+255),b
  8660  0025DA  0100               	movlb	0	; () banked
  8661  0025DC  27A2               	addwf	??___flmul& (0+255),f,b
  8662  0025DE  0E00               	movlw	0
  8663  0025E0  23A3               	addwfc	(??___flmul+1)& (0+255),f,b
  8664  0025E2  0E82               	movlw	130
  8665  0025E4  0100               	movlb	0	; () banked
  8666  0025E6  25A2               	addwf	??___flmul& (0+255),w,b
  8667  0025E8  0100               	movlb	0	; () banked
  8668  0025EA  6FB1               	movwf	___flmul@temp& (0+255),b
  8669  0025EC  0EFF               	movlw	255
  8670  0025EE  0100               	movlb	0	; () banked
  8671  0025F0  21A3               	addwfc	(??___flmul+1)& (0+255),w,b
  8672  0025F2  0100               	movlb	0	; () banked
  8673  0025F4  6FB2               	movwf	(___flmul@temp+1)& (0+255),b
  8674  0025F6  D015               	goto	l4549
  8675  0025F8                     l4543:
  8676                           
  8677                           ; BSR set to: 0
  8678  0025F8  0100               	movlb	0	; () banked
  8679  0025FA  90D8               	bcf	status,0,c
  8680  0025FC  37AD               	rlcf	___flmul@prod& (0+255),f,b
  8681  0025FE  37AE               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8682  002600  37AF               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8683  002602  37B0               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8684                           
  8685                           ; BSR set to: 0
  8686  002604  0100               	movlb	0	; () banked
  8687  002606  AFAA               	btfss	(___flmul@grs+3)& (0+255),7,b
  8688  002608  D002               	goto	l1260
  8689                           
  8690                           ; BSR set to: 0
  8691  00260A  0100               	movlb	0	; () banked
  8692  00260C  81AD               	bsf	___flmul@prod& (0+255),0,b
  8693  00260E                     l1260:
  8694                           
  8695                           ; BSR set to: 0
  8696  00260E  0100               	movlb	0	; () banked
  8697  002610  90D8               	bcf	status,0,c
  8698  002612  37A7               	rlcf	___flmul@grs& (0+255),f,b
  8699  002614  37A8               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8700  002616  37A9               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8701  002618  37AA               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8702  00261A  0100               	movlb	0	; () banked
  8703  00261C  07B1               	decf	___flmul@temp& (0+255),f,b
  8704  00261E  A0D8               	btfss	status,0,c
  8705  002620  07B2               	decf	(___flmul@temp+1)& (0+255),f,b
  8706  002622                     l4549:
  8707                           
  8708                           ; BSR set to: 0
  8709  002622  0100               	movlb	0	; () banked
  8710  002624  AFAF               	btfss	(___flmul@prod+2)& (0+255),7,b
  8711  002626  D7E8               	goto	l4543
  8712                           
  8713                           ; BSR set to: 0
  8714                           
  8715                           ; BSR set to: 0
  8716  002628  0E00               	movlw	0
  8717  00262A  0100               	movlb	0	; () banked
  8718  00262C  6FAB               	movwf	___flmul@aexp& (0+255),b
  8719                           
  8720                           ; BSR set to: 0
  8721  00262E  0100               	movlb	0	; () banked
  8722  002630  AFAA               	btfss	(___flmul@grs+3)& (0+255),7,b
  8723  002632  D024               	goto	l1262
  8724                           
  8725                           ; BSR set to: 0
  8726  002634  0EFF               	movlw	255
  8727  002636  0100               	movlb	0	; () banked
  8728  002638  15A7               	andwf	___flmul@grs& (0+255),w,b
  8729  00263A  0100               	movlb	0	; () banked
  8730  00263C  6FA2               	movwf	??___flmul& (0+255),b
  8731  00263E  0EFF               	movlw	255
  8732  002640  0100               	movlb	0	; () banked
  8733  002642  15A8               	andwf	(___flmul@grs+1)& (0+255),w,b
  8734  002644  0100               	movlb	0	; () banked
  8735  002646  6FA3               	movwf	(??___flmul+1)& (0+255),b
  8736  002648  0EFF               	movlw	255
  8737  00264A  0100               	movlb	0	; () banked
  8738  00264C  15A9               	andwf	(___flmul@grs+2)& (0+255),w,b
  8739  00264E  0100               	movlb	0	; () banked
  8740  002650  6FA4               	movwf	(??___flmul+2)& (0+255),b
  8741  002652  0E7F               	movlw	127
  8742  002654  0100               	movlb	0	; () banked
  8743  002656  15AA               	andwf	(___flmul@grs+3)& (0+255),w,b
  8744  002658  0100               	movlb	0	; () banked
  8745  00265A  6FA5               	movwf	(??___flmul+3)& (0+255),b
  8746  00265C  0100               	movlb	0	; () banked
  8747  00265E  51A2               	movf	??___flmul& (0+255),w,b
  8748  002660  0100               	movlb	0	; () banked
  8749  002662  11A3               	iorwf	(??___flmul+1)& (0+255),w,b
  8750  002664  0100               	movlb	0	; () banked
  8751  002666  11A4               	iorwf	(??___flmul+2)& (0+255),w,b
  8752  002668  0100               	movlb	0	; () banked
  8753  00266A  11A5               	iorwf	(??___flmul+3)& (0+255),w,b
  8754  00266C  A4D8               	btfss	status,2,c
  8755  00266E  D003               	goto	l4559
  8756                           
  8757                           ; BSR set to: 0
  8758                           
  8759                           ; BSR set to: 0
  8760  002670  0100               	movlb	0	; () banked
  8761  002672  A1AD               	btfss	___flmul@prod& (0+255),0,b
  8762  002674  D003               	goto	l1262
  8763  002676                     l4559:
  8764                           
  8765                           ; BSR set to: 0
  8766  002676  0E01               	movlw	1
  8767  002678  0100               	movlb	0	; () banked
  8768  00267A  6FAB               	movwf	___flmul@aexp& (0+255),b
  8769  00267C                     l1262:
  8770                           
  8771                           ; BSR set to: 0
  8772  00267C  0100               	movlb	0	; () banked
  8773  00267E  51AB               	movf	___flmul@aexp& (0+255),w,b
  8774  002680  0100               	movlb	0	; () banked
  8775  002682  B4D8               	btfsc	status,2,c
  8776  002684  D023               	goto	l4569
  8777                           
  8778                           ; BSR set to: 0
  8779  002686  0E01               	movlw	1
  8780  002688  0100               	movlb	0	; () banked
  8781  00268A  27AD               	addwf	___flmul@prod& (0+255),f,b
  8782  00268C  0E00               	movlw	0
  8783  00268E  23AE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8784  002690  23AF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8785  002692  23B0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8786                           
  8787                           ; BSR set to: 0
  8788  002694  0100               	movlb	0	; () banked
  8789  002696  A1B0               	btfss	(___flmul@prod+3)& (0+255),0,b
  8790  002698  D019               	goto	l4569
  8791                           
  8792                           ; BSR set to: 0
  8793  00269A  C0AD  F0A2         	movff	___flmul@prod,??___flmul
  8794  00269E  C0AE  F0A3         	movff	___flmul@prod+1,??___flmul+1
  8795  0026A2  C0AF  F0A4         	movff	___flmul@prod+2,??___flmul+2
  8796  0026A6  C0B0  F0A5         	movff	___flmul@prod+3,??___flmul+3
  8797  0026AA  0100               	movlb	0	; () banked
  8798  0026AC  35A5               	rlcf	(??___flmul+3)& (0+255),w,b
  8799  0026AE  33A5               	rrcf	(??___flmul+3)& (0+255),f,b
  8800  0026B0  33A4               	rrcf	(??___flmul+2)& (0+255),f,b
  8801  0026B2  33A3               	rrcf	(??___flmul+1)& (0+255),f,b
  8802  0026B4  33A2               	rrcf	??___flmul& (0+255),f,b
  8803  0026B6  C0A2  F0AD         	movff	??___flmul,___flmul@prod
  8804  0026BA  C0A3  F0AE         	movff	??___flmul+1,___flmul@prod+1
  8805  0026BE  C0A4  F0AF         	movff	??___flmul+2,___flmul@prod+2
  8806  0026C2  C0A5  F0B0         	movff	??___flmul+3,___flmul@prod+3
  8807                           
  8808                           ; BSR set to: 0
  8809  0026C6  0100               	movlb	0	; () banked
  8810  0026C8  4BB1               	infsnz	___flmul@temp& (0+255),f,b
  8811  0026CA  2BB2               	incf	(___flmul@temp+1)& (0+255),f,b
  8812  0026CC                     l4569:
  8813                           
  8814                           ; BSR set to: 0
  8815  0026CC  0100               	movlb	0	; () banked
  8816  0026CE  BFB2               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8817  0026D0  D010               	goto	l4573
  8818  0026D2  0100               	movlb	0	; () banked
  8819  0026D4  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8820  0026D6  E104               	bnz	u5720
  8821  0026D8  0100               	movlb	0	; () banked
  8822  0026DA  29B1               	incf	___flmul@temp& (0+255),w,b
  8823  0026DC  A0D8               	btfss	status,0,c
  8824  0026DE  D009               	goto	l4573
  8825  0026E0                     u5720:
  8826                           
  8827                           ; BSR set to: 0
  8828  0026E0  0E00               	movlw	0
  8829  0026E2  0100               	movlb	0	; () banked
  8830  0026E4  6FAD               	movwf	___flmul@prod& (0+255),b
  8831  0026E6  0E00               	movlw	0
  8832  0026E8  6FAE               	movwf	(___flmul@prod+1)& (0+255),b
  8833  0026EA  0E80               	movlw	128
  8834  0026EC  6FAF               	movwf	(___flmul@prod+2)& (0+255),b
  8835  0026EE  0E7F               	movlw	127
  8836  0026F0  D02B               	goto	L5
  8837  0026F2                     l4573:
  8838                           
  8839                           ; BSR set to: 0
  8840  0026F2  0100               	movlb	0	; () banked
  8841  0026F4  BFB2               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8842  0026F6  D007               	goto	l4575
  8843  0026F8  0100               	movlb	0	; () banked
  8844  0026FA  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8845  0026FC  E111               	bnz	l1270
  8846  0026FE  0100               	movlb	0	; () banked
  8847  002700  05B1               	decf	___flmul@temp& (0+255),w,b
  8848  002702  B0D8               	btfsc	status,0,c
  8849  002704  D00D               	goto	l1270
  8850  002706                     l4575:
  8851                           
  8852                           ; BSR set to: 0
  8853  002706  0E00               	movlw	0
  8854  002708  0100               	movlb	0	; () banked
  8855  00270A  6FAD               	movwf	___flmul@prod& (0+255),b
  8856  00270C  0E00               	movlw	0
  8857  00270E  6FAE               	movwf	(___flmul@prod+1)& (0+255),b
  8858  002710  0E00               	movlw	0
  8859  002712  6FAF               	movwf	(___flmul@prod+2)& (0+255),b
  8860  002714  0E00               	movlw	0
  8861  002716  6FB0               	movwf	(___flmul@prod+3)& (0+255),b
  8862  002718  0E00               	movlw	0
  8863  00271A  0100               	movlb	0	; () banked
  8864  00271C  6FA6               	movwf	___flmul@sign& (0+255),b
  8865  00271E  D015               	goto	l4585
  8866  002720                     l1270:
  8867                           
  8868                           ; BSR set to: 0
  8869  002720  C0B1  F0AC         	movff	___flmul@temp,___flmul@bexp
  8870                           
  8871                           ; BSR set to: 0
  8872  002724  0EFF               	movlw	255
  8873  002726  0100               	movlb	0	; () banked
  8874  002728  17AD               	andwf	___flmul@prod& (0+255),f,b
  8875  00272A  0EFF               	movlw	255
  8876  00272C  17AE               	andwf	(___flmul@prod+1)& (0+255),f,b
  8877  00272E  0E7F               	movlw	127
  8878  002730  17AF               	andwf	(___flmul@prod+2)& (0+255),f,b
  8879  002732  0E00               	movlw	0
  8880  002734  17B0               	andwf	(___flmul@prod+3)& (0+255),f,b
  8881                           
  8882                           ; BSR set to: 0
  8883  002736  0100               	movlb	0	; () banked
  8884  002738  A1AC               	btfss	___flmul@bexp& (0+255),0,b
  8885  00273A  D002               	goto	l4583
  8886                           
  8887                           ; BSR set to: 0
  8888  00273C  0100               	movlb	0	; () banked
  8889  00273E  8FAF               	bsf	(___flmul@prod+2)& (0+255),7,b
  8890  002740                     l4583:
  8891                           
  8892                           ; BSR set to: 0
  8893  002740  0100               	movlb	0	; () banked
  8894  002742  90D8               	bcf	status,0,c
  8895  002744  31AC               	rrcf	___flmul@bexp& (0+255),w,b
  8896  002746  0100               	movlb	0	; () banked
  8897  002748                     L5:
  8898  002748  6FB0               	movwf	(___flmul@prod+3)& (0+255),b
  8899  00274A                     l4585:
  8900                           
  8901                           ; BSR set to: 0
  8902  00274A  0100               	movlb	0	; () banked
  8903  00274C  51A6               	movf	___flmul@sign& (0+255),w,b
  8904  00274E  0100               	movlb	0	; () banked
  8905  002750  13B0               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8906                           
  8907                           ; BSR set to: 0
  8908  002752  C0AD  F09A         	movff	___flmul@prod,?___flmul
  8909  002756  C0AE  F09B         	movff	___flmul@prod+1,?___flmul+1
  8910  00275A  C0AF  F09C         	movff	___flmul@prod+2,?___flmul+2
  8911  00275E  C0B0  F09D         	movff	___flmul@prod+3,?___flmul+3
  8912  002762  0012               	return	
  8913  002764                     __end_of___flmul:
  8914                           	opt stack 0
  8915                           tblptru	equ	0xFF8
  8916                           tblptrh	equ	0xFF7
  8917                           tblptrl	equ	0xFF6
  8918                           tablat	equ	0xFF5
  8919                           prodh	equ	0xFF4
  8920                           prodl	equ	0xFF3
  8921                           intcon	equ	0xFF2
  8922                           intcon2	equ	0xFF1
  8923                           postinc0	equ	0xFEE
  8924                           wreg	equ	0xFE8
  8925                           indf2	equ	0xFDF
  8926                           fsr2h	equ	0xFDA
  8927                           fsr2l	equ	0xFD9
  8928                           status	equ	0xFD8
  8929                           
  8930 ;; *************** function ___fldiv *****************
  8931 ;; Defined at:
  8932 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  b               4   58[BANK0 ] unsigned char 
  8935 ;;  a               4   62[BANK0 ] unsigned char 
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;  grs             4   77[BANK0 ] unsigned long 
  8938 ;;  rem             4   71[BANK0 ] unsigned long 
  8939 ;;  new_exp         2   75[BANK0 ] int 
  8940 ;;  aexp            1   82[BANK0 ] unsigned char 
  8941 ;;  bexp            1   81[BANK0 ] unsigned char 
  8942 ;;  sign            1   70[BANK0 ] unsigned char 
  8943 ;; Return value:  Size  Location     Type
  8944 ;;                  4   58[BANK0 ] unsigned char 
  8945 ;; Registers used:
  8946 ;;		wreg, status,2, status,0
  8947 ;; Tracked objects:
  8948 ;;		On entry : 0/0
  8949 ;;		On exit  : 0/0
  8950 ;;		Unchanged: 0/0
  8951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8952 ;;      Params:         0       8       0       0
  8953 ;;      Locals:         0      13       0       0
  8954 ;;      Temps:          0       4       0       0
  8955 ;;      Totals:         0      25       0       0
  8956 ;;Total ram usage:       25 bytes
  8957 ;; Hardware stack levels used:    1
  8958 ;; Hardware stack levels required when called:    4
  8959 ;; This function calls:
  8960 ;;		Nothing
  8961 ;; This function is called by:
  8962 ;;		_main
  8963 ;; This function uses a non-reentrant model
  8964 ;;
  8965                           
  8966                           	psect	text23
  8967  002764                     __ptext23:
  8968                           	opt stack 0
  8969  002764                     ___fldiv:
  8970                           	opt stack 26
  8971                           
  8972                           ; BSR set to: 0
  8973                           ;incstack = 0
  8974  002764  0100               	movlb	0	; () banked
  8975  002766  519D               	movf	(___fldiv@b+3)& (0+255),w,b
  8976  002768  0B80               	andlw	128
  8977  00276A  0100               	movlb	0	; () banked
  8978  00276C  6FA6               	movwf	___fldiv@sign& (0+255),b
  8979  00276E  0100               	movlb	0	; () banked
  8980  002770  519D               	movf	(___fldiv@b+3)& (0+255),w,b
  8981  002772  259D               	addwf	(___fldiv@b+3)& (0+255),w,b
  8982  002774  0100               	movlb	0	; () banked
  8983  002776  6FB1               	movwf	___fldiv@bexp& (0+255),b
  8984                           
  8985                           ; BSR set to: 0
  8986  002778  0100               	movlb	0	; () banked
  8987  00277A  AF9C               	btfss	(___fldiv@b+2)& (0+255),7,b
  8988  00277C  D002               	goto	l4331
  8989                           
  8990                           ; BSR set to: 0
  8991  00277E  0100               	movlb	0	; () banked
  8992  002780  81B1               	bsf	___fldiv@bexp& (0+255),0,b
  8993  002782                     l4331:
  8994                           
  8995                           ; BSR set to: 0
  8996  002782  0100               	movlb	0	; () banked
  8997  002784  51B1               	movf	___fldiv@bexp& (0+255),w,b
  8998  002786  0100               	movlb	0	; () banked
  8999  002788  B4D8               	btfsc	status,2,c
  9000  00278A  D012               	goto	l4341
  9001                           
  9002                           ; BSR set to: 0
  9003  00278C  0100               	movlb	0	; () banked
  9004  00278E  29B1               	incf	___fldiv@bexp& (0+255),w,b
  9005  002790  A4D8               	btfss	status,2,c
  9006  002792  D009               	goto	l4337
  9007                           
  9008                           ; BSR set to: 0
  9009  002794  0E00               	movlw	0
  9010  002796  0100               	movlb	0	; () banked
  9011  002798  6F9A               	movwf	___fldiv@b& (0+255),b
  9012  00279A  0E00               	movlw	0
  9013  00279C  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
  9014  00279E  0E00               	movlw	0
  9015  0027A0  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
  9016  0027A2  0E00               	movlw	0
  9017  0027A4  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9018  0027A6                     l4337:
  9019                           
  9020                           ; BSR set to: 0
  9021  0027A6  0100               	movlb	0	; () banked
  9022  0027A8  8F9C               	bsf	(___fldiv@b+2)& (0+255),7,b
  9023                           
  9024                           ; BSR set to: 0
  9025  0027AA  0E00               	movlw	0
  9026  0027AC  0100               	movlb	0	; () banked
  9027  0027AE  D008               	goto	L6
  9028  0027B0                     l4341:
  9029                           
  9030                           ; BSR set to: 0
  9031  0027B0  0E00               	movlw	0
  9032  0027B2  0100               	movlb	0	; () banked
  9033  0027B4  6F9A               	movwf	___fldiv@b& (0+255),b
  9034  0027B6  0E00               	movlw	0
  9035  0027B8  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
  9036  0027BA  0E00               	movlw	0
  9037  0027BC  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
  9038  0027BE  0E00               	movlw	0
  9039  0027C0                     L6:
  9040  0027C0  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9041                           
  9042                           ; BSR set to: 0
  9043                           
  9044                           ; BSR set to: 0
  9045  0027C2  0100               	movlb	0	; () banked
  9046  0027C4  51A1               	movf	(___fldiv@a+3)& (0+255),w,b
  9047  0027C6  0B80               	andlw	128
  9048  0027C8  0100               	movlb	0	; () banked
  9049  0027CA  1BA6               	xorwf	___fldiv@sign& (0+255),f,b
  9050                           
  9051                           ; BSR set to: 0
  9052  0027CC  0100               	movlb	0	; () banked
  9053  0027CE  51A1               	movf	(___fldiv@a+3)& (0+255),w,b
  9054  0027D0  25A1               	addwf	(___fldiv@a+3)& (0+255),w,b
  9055  0027D2  0100               	movlb	0	; () banked
  9056  0027D4  6FB2               	movwf	___fldiv@aexp& (0+255),b
  9057                           
  9058                           ; BSR set to: 0
  9059  0027D6  0100               	movlb	0	; () banked
  9060  0027D8  AFA0               	btfss	(___fldiv@a+2)& (0+255),7,b
  9061  0027DA  D002               	goto	l4351
  9062                           
  9063                           ; BSR set to: 0
  9064  0027DC  0100               	movlb	0	; () banked
  9065  0027DE  81B2               	bsf	___fldiv@aexp& (0+255),0,b
  9066  0027E0                     l4351:
  9067                           
  9068                           ; BSR set to: 0
  9069  0027E0  0100               	movlb	0	; () banked
  9070  0027E2  51B2               	movf	___fldiv@aexp& (0+255),w,b
  9071  0027E4  0100               	movlb	0	; () banked
  9072  0027E6  B4D8               	btfsc	status,2,c
  9073  0027E8  D012               	goto	l4361
  9074                           
  9075                           ; BSR set to: 0
  9076  0027EA  0100               	movlb	0	; () banked
  9077  0027EC  29B2               	incf	___fldiv@aexp& (0+255),w,b
  9078  0027EE  A4D8               	btfss	status,2,c
  9079  0027F0  D009               	goto	l4357
  9080                           
  9081                           ; BSR set to: 0
  9082  0027F2  0E00               	movlw	0
  9083  0027F4  0100               	movlb	0	; () banked
  9084  0027F6  6F9E               	movwf	___fldiv@a& (0+255),b
  9085  0027F8  0E00               	movlw	0
  9086  0027FA  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
  9087  0027FC  0E00               	movlw	0
  9088  0027FE  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
  9089  002800  0E00               	movlw	0
  9090  002802  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
  9091  002804                     l4357:
  9092                           
  9093                           ; BSR set to: 0
  9094  002804  0100               	movlb	0	; () banked
  9095  002806  8FA0               	bsf	(___fldiv@a+2)& (0+255),7,b
  9096                           
  9097                           ; BSR set to: 0
  9098  002808  0E00               	movlw	0
  9099  00280A  0100               	movlb	0	; () banked
  9100  00280C  D008               	goto	L7
  9101  00280E                     l4361:
  9102                           
  9103                           ; BSR set to: 0
  9104  00280E  0E00               	movlw	0
  9105  002810  0100               	movlb	0	; () banked
  9106  002812  6F9E               	movwf	___fldiv@a& (0+255),b
  9107  002814  0E00               	movlw	0
  9108  002816  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
  9109  002818  0E00               	movlw	0
  9110  00281A  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
  9111  00281C  0E00               	movlw	0
  9112  00281E                     L7:
  9113  00281E  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
  9114                           
  9115                           ; BSR set to: 0
  9116                           
  9117                           ; BSR set to: 0
  9118  002820  0100               	movlb	0	; () banked
  9119  002822  519E               	movf	___fldiv@a& (0+255),w,b
  9120  002824  0100               	movlb	0	; () banked
  9121  002826  119F               	iorwf	(___fldiv@a+1)& (0+255),w,b
  9122  002828  0100               	movlb	0	; () banked
  9123  00282A  11A0               	iorwf	(___fldiv@a+2)& (0+255),w,b
  9124  00282C  0100               	movlb	0	; () banked
  9125  00282E  11A1               	iorwf	(___fldiv@a+3)& (0+255),w,b
  9126  002830  A4D8               	btfss	status,2,c
  9127  002832  D017               	goto	l4373
  9128                           
  9129                           ; BSR set to: 0
  9130  002834  0E00               	movlw	0
  9131  002836  0100               	movlb	0	; () banked
  9132  002838  6F9A               	movwf	___fldiv@b& (0+255),b
  9133  00283A  0E00               	movlw	0
  9134  00283C  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
  9135  00283E  0E00               	movlw	0
  9136  002840  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
  9137  002842  0E00               	movlw	0
  9138  002844  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9139                           
  9140                           ; BSR set to: 0
  9141  002846  0100               	movlb	0	; () banked
  9142  002848  0E80               	movlw	128
  9143  00284A  139C               	iorwf	(___fldiv@b+2)& (0+255),f,b
  9144  00284C  0E7F               	movlw	127
  9145  00284E  139D               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9146                           
  9147                           ; BSR set to: 0
  9148  002850  C09A  F09A         	movff	___fldiv@b,?___fldiv
  9149  002854  C09B  F09B         	movff	___fldiv@b+1,?___fldiv+1
  9150  002858  C09C  F09C         	movff	___fldiv@b+2,?___fldiv+2
  9151  00285C  C09D  F09D         	movff	___fldiv@b+3,?___fldiv+3
  9152                           
  9153                           ; BSR set to: 0
  9154  002860  0012               	return	
  9155  002862                     l4373:
  9156                           
  9157                           ; BSR set to: 0
  9158  002862  0100               	movlb	0	; () banked
  9159  002864  51B1               	movf	___fldiv@bexp& (0+255),w,b
  9160  002866  0100               	movlb	0	; () banked
  9161  002868  A4D8               	btfss	status,2,c
  9162  00286A  D012               	goto	l4381
  9163                           
  9164                           ; BSR set to: 0
  9165  00286C  0E00               	movlw	0
  9166  00286E  0100               	movlb	0	; () banked
  9167  002870  6F9A               	movwf	___fldiv@b& (0+255),b
  9168  002872  0E00               	movlw	0
  9169  002874  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
  9170  002876  0E00               	movlw	0
  9171  002878  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
  9172  00287A  0E00               	movlw	0
  9173  00287C  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9174                           
  9175                           ; BSR set to: 0
  9176  00287E  C09A  F09A         	movff	___fldiv@b,?___fldiv
  9177  002882  C09B  F09B         	movff	___fldiv@b+1,?___fldiv+1
  9178  002886  C09C  F09C         	movff	___fldiv@b+2,?___fldiv+2
  9179  00288A  C09D  F09D         	movff	___fldiv@b+3,?___fldiv+3
  9180                           
  9181                           ; BSR set to: 0
  9182  00288E  0012               	return	
  9183  002890                     l4381:
  9184                           
  9185                           ; BSR set to: 0
  9186  002890  0100               	movlb	0	; () banked
  9187  002892  51B2               	movf	___fldiv@aexp& (0+255),w,b
  9188  002894  0100               	movlb	0	; () banked
  9189  002896  6FA2               	movwf	??___fldiv& (0+255),b
  9190  002898  6BA3               	clrf	(??___fldiv+1)& (0+255),b
  9191  00289A  0100               	movlb	0	; () banked
  9192  00289C  1FA2               	comf	??___fldiv& (0+255),f,b
  9193  00289E  1FA3               	comf	(??___fldiv+1)& (0+255),f,b
  9194  0028A0  4BA2               	infsnz	??___fldiv& (0+255),f,b
  9195  0028A2  2BA3               	incf	(??___fldiv+1)& (0+255),f,b
  9196  0028A4  0100               	movlb	0	; () banked
  9197  0028A6  51B1               	movf	___fldiv@bexp& (0+255),w,b
  9198  0028A8  0100               	movlb	0	; () banked
  9199  0028AA  6FA4               	movwf	(??___fldiv+2)& (0+255),b
  9200  0028AC  6BA5               	clrf	(??___fldiv+3)& (0+255),b
  9201  0028AE  0100               	movlb	0	; () banked
  9202  0028B0  51A2               	movf	??___fldiv& (0+255),w,b
  9203  0028B2  0100               	movlb	0	; () banked
  9204  0028B4  27A4               	addwf	(??___fldiv+2)& (0+255),f,b
  9205  0028B6  0100               	movlb	0	; () banked
  9206  0028B8  51A3               	movf	(??___fldiv+1)& (0+255),w,b
  9207  0028BA  0100               	movlb	0	; () banked
  9208  0028BC  23A5               	addwfc	(??___fldiv+3)& (0+255),f,b
  9209  0028BE  0E7F               	movlw	127
  9210  0028C0  0100               	movlb	0	; () banked
  9211  0028C2  25A4               	addwf	(??___fldiv+2)& (0+255),w,b
  9212  0028C4  0100               	movlb	0	; () banked
  9213  0028C6  6FAB               	movwf	___fldiv@new_exp& (0+255),b
  9214  0028C8  0E00               	movlw	0
  9215  0028CA  0100               	movlb	0	; () banked
  9216  0028CC  21A5               	addwfc	(??___fldiv+3)& (0+255),w,b
  9217  0028CE  0100               	movlb	0	; () banked
  9218  0028D0  6FAC               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9219                           
  9220                           ; BSR set to: 0
  9221  0028D2  C09A  F0A7         	movff	___fldiv@b,___fldiv@rem
  9222  0028D6  C09B  F0A8         	movff	___fldiv@b+1,___fldiv@rem+1
  9223  0028DA  C09C  F0A9         	movff	___fldiv@b+2,___fldiv@rem+2
  9224  0028DE  C09D  F0AA         	movff	___fldiv@b+3,___fldiv@rem+3
  9225                           
  9226                           ; BSR set to: 0
  9227  0028E2  0E00               	movlw	0
  9228  0028E4  0100               	movlb	0	; () banked
  9229  0028E6  6F9A               	movwf	___fldiv@b& (0+255),b
  9230  0028E8  0E00               	movlw	0
  9231  0028EA  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
  9232  0028EC  0E00               	movlw	0
  9233  0028EE  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
  9234  0028F0  0E00               	movlw	0
  9235  0028F2  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9236                           
  9237                           ; BSR set to: 0
  9238  0028F4  0E00               	movlw	0
  9239  0028F6  0100               	movlb	0	; () banked
  9240  0028F8  6FAD               	movwf	___fldiv@grs& (0+255),b
  9241  0028FA  0E00               	movlw	0
  9242  0028FC  6FAE               	movwf	(___fldiv@grs+1)& (0+255),b
  9243  0028FE  0E00               	movlw	0
  9244  002900  6FAF               	movwf	(___fldiv@grs+2)& (0+255),b
  9245  002902  0E00               	movlw	0
  9246  002904  6FB0               	movwf	(___fldiv@grs+3)& (0+255),b
  9247                           
  9248                           ; BSR set to: 0
  9249  002906  0E00               	movlw	0
  9250  002908  0100               	movlb	0	; () banked
  9251  00290A  6FB2               	movwf	___fldiv@aexp& (0+255),b
  9252  00290C  D042               	goto	l1223
  9253  00290E                     l4391:
  9254                           
  9255                           ; BSR set to: 0
  9256  00290E  0100               	movlb	0	; () banked
  9257  002910  51B2               	movf	___fldiv@aexp& (0+255),w,b
  9258  002912  0100               	movlb	0	; () banked
  9259  002914  B4D8               	btfsc	status,2,c
  9260  002916  D017               	goto	l4399
  9261                           
  9262                           ; BSR set to: 0
  9263  002918  0100               	movlb	0	; () banked
  9264  00291A  90D8               	bcf	status,0,c
  9265  00291C  37A7               	rlcf	___fldiv@rem& (0+255),f,b
  9266  00291E  37A8               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9267  002920  37A9               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9268  002922  37AA               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9269  002924  0100               	movlb	0	; () banked
  9270  002926  90D8               	bcf	status,0,c
  9271  002928  379A               	rlcf	___fldiv@b& (0+255),f,b
  9272  00292A  379B               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9273  00292C  379C               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9274  00292E  379D               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9275                           
  9276                           ; BSR set to: 0
  9277  002930  0100               	movlb	0	; () banked
  9278  002932  AFB0               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9279  002934  D002               	goto	l1226
  9280                           
  9281                           ; BSR set to: 0
  9282  002936  0100               	movlb	0	; () banked
  9283  002938  819A               	bsf	___fldiv@b& (0+255),0,b
  9284  00293A                     l1226:
  9285                           
  9286                           ; BSR set to: 0
  9287  00293A  0100               	movlb	0	; () banked
  9288  00293C  90D8               	bcf	status,0,c
  9289  00293E  37AD               	rlcf	___fldiv@grs& (0+255),f,b
  9290  002940  37AE               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9291  002942  37AF               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9292  002944  37B0               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9293  002946                     l4399:
  9294                           
  9295                           ; BSR set to: 0
  9296  002946  0100               	movlb	0	; () banked
  9297  002948  519E               	movf	___fldiv@a& (0+255),w,b
  9298  00294A  0100               	movlb	0	; () banked
  9299  00294C  5DA7               	subwf	___fldiv@rem& (0+255),w,b
  9300  00294E  0100               	movlb	0	; () banked
  9301  002950  519F               	movf	(___fldiv@a+1)& (0+255),w,b
  9302  002952  0100               	movlb	0	; () banked
  9303  002954  59A8               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9304  002956  0100               	movlb	0	; () banked
  9305  002958  51A0               	movf	(___fldiv@a+2)& (0+255),w,b
  9306  00295A  0100               	movlb	0	; () banked
  9307  00295C  59A9               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9308  00295E  0100               	movlb	0	; () banked
  9309  002960  51A1               	movf	(___fldiv@a+3)& (0+255),w,b
  9310  002962  0100               	movlb	0	; () banked
  9311  002964  59AA               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9312  002966  A0D8               	btfss	status,0,c
  9313  002968  D012               	goto	l4405
  9314                           
  9315                           ; BSR set to: 0
  9316  00296A  0100               	movlb	0	; () banked
  9317  00296C  8DB0               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9318                           
  9319                           ; BSR set to: 0
  9320  00296E  0100               	movlb	0	; () banked
  9321  002970  519E               	movf	___fldiv@a& (0+255),w,b
  9322  002972  0100               	movlb	0	; () banked
  9323  002974  5FA7               	subwf	___fldiv@rem& (0+255),f,b
  9324  002976  0100               	movlb	0	; () banked
  9325  002978  519F               	movf	(___fldiv@a+1)& (0+255),w,b
  9326  00297A  0100               	movlb	0	; () banked
  9327  00297C  5BA8               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9328  00297E  0100               	movlb	0	; () banked
  9329  002980  51A0               	movf	(___fldiv@a+2)& (0+255),w,b
  9330  002982  0100               	movlb	0	; () banked
  9331  002984  5BA9               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9332  002986  0100               	movlb	0	; () banked
  9333  002988  51A1               	movf	(___fldiv@a+3)& (0+255),w,b
  9334  00298A  0100               	movlb	0	; () banked
  9335  00298C  5BAA               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9336  00298E                     l4405:
  9337                           
  9338                           ; BSR set to: 0
  9339  00298E  0100               	movlb	0	; () banked
  9340  002990  2BB2               	incf	___fldiv@aexp& (0+255),f,b
  9341  002992                     l1223:
  9342                           
  9343                           ; BSR set to: 0
  9344  002992  0E19               	movlw	25
  9345  002994  0100               	movlb	0	; () banked
  9346  002996  65B2               	cpfsgt	___fldiv@aexp& (0+255),b
  9347  002998  D7BA               	goto	l4391
  9348                           
  9349                           ; BSR set to: 0
  9350                           
  9351                           ; BSR set to: 0
  9352  00299A  0100               	movlb	0	; () banked
  9353  00299C  51A7               	movf	___fldiv@rem& (0+255),w,b
  9354  00299E  0100               	movlb	0	; () banked
  9355  0029A0  11A8               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9356  0029A2  0100               	movlb	0	; () banked
  9357  0029A4  11A9               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9358  0029A6  0100               	movlb	0	; () banked
  9359  0029A8  11AA               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9360  0029AA  B4D8               	btfsc	status,2,c
  9361  0029AC  D018               	goto	l4417
  9362                           
  9363                           ; BSR set to: 0
  9364  0029AE  0100               	movlb	0	; () banked
  9365  0029B0  81AD               	bsf	___fldiv@grs& (0+255),0,b
  9366                           
  9367                           ; BSR set to: 0
  9368  0029B2  D015               	goto	l4417
  9369  0029B4                     l4411:
  9370                           
  9371                           ; BSR set to: 0
  9372  0029B4  0100               	movlb	0	; () banked
  9373  0029B6  90D8               	bcf	status,0,c
  9374  0029B8  379A               	rlcf	___fldiv@b& (0+255),f,b
  9375  0029BA  379B               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9376  0029BC  379C               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9377  0029BE  379D               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9378                           
  9379                           ; BSR set to: 0
  9380  0029C0  0100               	movlb	0	; () banked
  9381  0029C2  AFB0               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9382  0029C4  D002               	goto	l1232
  9383                           
  9384                           ; BSR set to: 0
  9385  0029C6  0100               	movlb	0	; () banked
  9386  0029C8  819A               	bsf	___fldiv@b& (0+255),0,b
  9387  0029CA                     l1232:
  9388                           
  9389                           ; BSR set to: 0
  9390  0029CA  0100               	movlb	0	; () banked
  9391  0029CC  90D8               	bcf	status,0,c
  9392  0029CE  37AD               	rlcf	___fldiv@grs& (0+255),f,b
  9393  0029D0  37AE               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9394  0029D2  37AF               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9395  0029D4  37B0               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9396  0029D6  0100               	movlb	0	; () banked
  9397  0029D8  07AB               	decf	___fldiv@new_exp& (0+255),f,b
  9398  0029DA  A0D8               	btfss	status,0,c
  9399  0029DC  07AC               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9400  0029DE                     l4417:
  9401                           
  9402                           ; BSR set to: 0
  9403  0029DE  0100               	movlb	0	; () banked
  9404  0029E0  AF9C               	btfss	(___fldiv@b+2)& (0+255),7,b
  9405  0029E2  D7E8               	goto	l4411
  9406                           
  9407                           ; BSR set to: 0
  9408                           
  9409                           ; BSR set to: 0
  9410  0029E4  0E00               	movlw	0
  9411  0029E6  0100               	movlb	0	; () banked
  9412  0029E8  6FB2               	movwf	___fldiv@aexp& (0+255),b
  9413                           
  9414                           ; BSR set to: 0
  9415  0029EA  0100               	movlb	0	; () banked
  9416  0029EC  AFB0               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9417  0029EE  D024               	goto	l1234
  9418                           
  9419                           ; BSR set to: 0
  9420  0029F0  0EFF               	movlw	255
  9421  0029F2  0100               	movlb	0	; () banked
  9422  0029F4  15AD               	andwf	___fldiv@grs& (0+255),w,b
  9423  0029F6  0100               	movlb	0	; () banked
  9424  0029F8  6FA2               	movwf	??___fldiv& (0+255),b
  9425  0029FA  0EFF               	movlw	255
  9426  0029FC  0100               	movlb	0	; () banked
  9427  0029FE  15AE               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9428  002A00  0100               	movlb	0	; () banked
  9429  002A02  6FA3               	movwf	(??___fldiv+1)& (0+255),b
  9430  002A04  0EFF               	movlw	255
  9431  002A06  0100               	movlb	0	; () banked
  9432  002A08  15AF               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9433  002A0A  0100               	movlb	0	; () banked
  9434  002A0C  6FA4               	movwf	(??___fldiv+2)& (0+255),b
  9435  002A0E  0E7F               	movlw	127
  9436  002A10  0100               	movlb	0	; () banked
  9437  002A12  15B0               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9438  002A14  0100               	movlb	0	; () banked
  9439  002A16  6FA5               	movwf	(??___fldiv+3)& (0+255),b
  9440  002A18  0100               	movlb	0	; () banked
  9441  002A1A  51A2               	movf	??___fldiv& (0+255),w,b
  9442  002A1C  0100               	movlb	0	; () banked
  9443  002A1E  11A3               	iorwf	(??___fldiv+1)& (0+255),w,b
  9444  002A20  0100               	movlb	0	; () banked
  9445  002A22  11A4               	iorwf	(??___fldiv+2)& (0+255),w,b
  9446  002A24  0100               	movlb	0	; () banked
  9447  002A26  11A5               	iorwf	(??___fldiv+3)& (0+255),w,b
  9448  002A28  A4D8               	btfss	status,2,c
  9449  002A2A  D003               	goto	l4427
  9450                           
  9451                           ; BSR set to: 0
  9452                           
  9453                           ; BSR set to: 0
  9454  002A2C  0100               	movlb	0	; () banked
  9455  002A2E  A19A               	btfss	___fldiv@b& (0+255),0,b
  9456  002A30  D003               	goto	l1234
  9457  002A32                     l4427:
  9458                           
  9459                           ; BSR set to: 0
  9460  002A32  0E01               	movlw	1
  9461  002A34  0100               	movlb	0	; () banked
  9462  002A36  6FB2               	movwf	___fldiv@aexp& (0+255),b
  9463  002A38                     l1234:
  9464                           
  9465                           ; BSR set to: 0
  9466  002A38  0100               	movlb	0	; () banked
  9467  002A3A  51B2               	movf	___fldiv@aexp& (0+255),w,b
  9468  002A3C  0100               	movlb	0	; () banked
  9469  002A3E  B4D8               	btfsc	status,2,c
  9470  002A40  D023               	goto	l4437
  9471                           
  9472                           ; BSR set to: 0
  9473  002A42  0E01               	movlw	1
  9474  002A44  0100               	movlb	0	; () banked
  9475  002A46  279A               	addwf	___fldiv@b& (0+255),f,b
  9476  002A48  0E00               	movlw	0
  9477  002A4A  239B               	addwfc	(___fldiv@b+1)& (0+255),f,b
  9478  002A4C  239C               	addwfc	(___fldiv@b+2)& (0+255),f,b
  9479  002A4E  239D               	addwfc	(___fldiv@b+3)& (0+255),f,b
  9480                           
  9481                           ; BSR set to: 0
  9482  002A50  0100               	movlb	0	; () banked
  9483  002A52  A19D               	btfss	(___fldiv@b+3)& (0+255),0,b
  9484  002A54  D019               	goto	l4437
  9485                           
  9486                           ; BSR set to: 0
  9487  002A56  C09A  F0A2         	movff	___fldiv@b,??___fldiv
  9488  002A5A  C09B  F0A3         	movff	___fldiv@b+1,??___fldiv+1
  9489  002A5E  C09C  F0A4         	movff	___fldiv@b+2,??___fldiv+2
  9490  002A62  C09D  F0A5         	movff	___fldiv@b+3,??___fldiv+3
  9491  002A66  0100               	movlb	0	; () banked
  9492  002A68  35A5               	rlcf	(??___fldiv+3)& (0+255),w,b
  9493  002A6A  33A5               	rrcf	(??___fldiv+3)& (0+255),f,b
  9494  002A6C  33A4               	rrcf	(??___fldiv+2)& (0+255),f,b
  9495  002A6E  33A3               	rrcf	(??___fldiv+1)& (0+255),f,b
  9496  002A70  33A2               	rrcf	??___fldiv& (0+255),f,b
  9497  002A72  C0A2  F09A         	movff	??___fldiv,___fldiv@b
  9498  002A76  C0A3  F09B         	movff	??___fldiv+1,___fldiv@b+1
  9499  002A7A  C0A4  F09C         	movff	??___fldiv+2,___fldiv@b+2
  9500  002A7E  C0A5  F09D         	movff	??___fldiv+3,___fldiv@b+3
  9501                           
  9502                           ; BSR set to: 0
  9503  002A82  0100               	movlb	0	; () banked
  9504  002A84  4BAB               	infsnz	___fldiv@new_exp& (0+255),f,b
  9505  002A86  2BAC               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9506  002A88                     l4437:
  9507                           
  9508                           ; BSR set to: 0
  9509  002A88  0100               	movlb	0	; () banked
  9510  002A8A  BFAC               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9511  002A8C  D014               	goto	l4441
  9512  002A8E  0100               	movlb	0	; () banked
  9513  002A90  51AC               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9514  002A92  E104               	bnz	u5530
  9515  002A94  0100               	movlb	0	; () banked
  9516  002A96  29AB               	incf	___fldiv@new_exp& (0+255),w,b
  9517  002A98  A0D8               	btfss	status,0,c
  9518  002A9A  D00D               	goto	l4441
  9519  002A9C                     u5530:
  9520                           
  9521                           ; BSR set to: 0
  9522  002A9C  0E00               	movlw	0
  9523  002A9E  0100               	movlb	0	; () banked
  9524  002AA0  6FAC               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9525  002AA2  69AB               	setf	___fldiv@new_exp& (0+255),b
  9526  002AA4  0E00               	movlw	0
  9527  002AA6  0100               	movlb	0	; () banked
  9528  002AA8  6F9A               	movwf	___fldiv@b& (0+255),b
  9529  002AAA  0E00               	movlw	0
  9530  002AAC  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
  9531  002AAE  0E00               	movlw	0
  9532  002AB0  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
  9533  002AB2  0E00               	movlw	0
  9534  002AB4  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9535  002AB6                     l4441:
  9536                           
  9537                           ; BSR set to: 0
  9538  002AB6  0100               	movlb	0	; () banked
  9539  002AB8  BFAC               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9540  002ABA  D007               	goto	l4443
  9541  002ABC  0100               	movlb	0	; () banked
  9542  002ABE  51AC               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9543  002AC0  E115               	bnz	l4445
  9544  002AC2  0100               	movlb	0	; () banked
  9545  002AC4  05AB               	decf	___fldiv@new_exp& (0+255),w,b
  9546  002AC6  B0D8               	btfsc	status,0,c
  9547  002AC8  D011               	goto	l4445
  9548  002ACA                     l4443:
  9549                           
  9550                           ; BSR set to: 0
  9551  002ACA  0E00               	movlw	0
  9552  002ACC  0100               	movlb	0	; () banked
  9553  002ACE  6FAC               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9554  002AD0  0E00               	movlw	0
  9555  002AD2  6FAB               	movwf	___fldiv@new_exp& (0+255),b
  9556  002AD4  0E00               	movlw	0
  9557  002AD6  0100               	movlb	0	; () banked
  9558  002AD8  6F9A               	movwf	___fldiv@b& (0+255),b
  9559  002ADA  0E00               	movlw	0
  9560  002ADC  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
  9561  002ADE  0E00               	movlw	0
  9562  002AE0  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
  9563  002AE2  0E00               	movlw	0
  9564  002AE4  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9565  002AE6  0E00               	movlw	0
  9566  002AE8  0100               	movlb	0	; () banked
  9567  002AEA  6FA6               	movwf	___fldiv@sign& (0+255),b
  9568  002AEC                     l4445:
  9569                           
  9570                           ; BSR set to: 0
  9571  002AEC  C0AB  F0B1         	movff	___fldiv@new_exp,___fldiv@bexp
  9572                           
  9573                           ; BSR set to: 0
  9574  002AF0  0100               	movlb	0	; () banked
  9575  002AF2  A1B1               	btfss	___fldiv@bexp& (0+255),0,b
  9576  002AF4  D003               	goto	l4451
  9577                           
  9578                           ; BSR set to: 0
  9579  002AF6  0100               	movlb	0	; () banked
  9580  002AF8  8F9C               	bsf	(___fldiv@b+2)& (0+255),7,b
  9581  002AFA  D002               	goto	l4453
  9582  002AFC                     l4451:
  9583                           
  9584                           ; BSR set to: 0
  9585  002AFC  0100               	movlb	0	; () banked
  9586  002AFE  9F9C               	bcf	(___fldiv@b+2)& (0+255),7,b
  9587  002B00                     l4453:
  9588                           
  9589                           ; BSR set to: 0
  9590  002B00  0100               	movlb	0	; () banked
  9591  002B02  90D8               	bcf	status,0,c
  9592  002B04  31B1               	rrcf	___fldiv@bexp& (0+255),w,b
  9593  002B06  0100               	movlb	0	; () banked
  9594  002B08  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9595                           
  9596                           ; BSR set to: 0
  9597  002B0A  0100               	movlb	0	; () banked
  9598  002B0C  51A6               	movf	___fldiv@sign& (0+255),w,b
  9599  002B0E  0100               	movlb	0	; () banked
  9600  002B10  139D               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9601                           
  9602                           ; BSR set to: 0
  9603  002B12  C09A  F09A         	movff	___fldiv@b,?___fldiv
  9604  002B16  C09B  F09B         	movff	___fldiv@b+1,?___fldiv+1
  9605  002B1A  C09C  F09C         	movff	___fldiv@b+2,?___fldiv+2
  9606  002B1E  C09D  F09D         	movff	___fldiv@b+3,?___fldiv+3
  9607  002B22  0012               	return	
  9608  002B24                     __end_of___fldiv:
  9609                           	opt stack 0
  9610                           tblptru	equ	0xFF8
  9611                           tblptrh	equ	0xFF7
  9612                           tblptrl	equ	0xFF6
  9613                           tablat	equ	0xFF5
  9614                           prodh	equ	0xFF4
  9615                           prodl	equ	0xFF3
  9616                           intcon	equ	0xFF2
  9617                           intcon2	equ	0xFF1
  9618                           postinc0	equ	0xFEE
  9619                           wreg	equ	0xFE8
  9620                           indf2	equ	0xFDF
  9621                           fsr2h	equ	0xFDA
  9622                           fsr2l	equ	0xFD9
  9623                           status	equ	0xFD8
  9624                           
  9625 ;; *************** function ___fladd *****************
  9626 ;; Defined at:
  9627 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;  b               4    0[BANK1 ] unsigned char 
  9630 ;;  a               4    4[BANK1 ] unsigned char 
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;  grs             1   90[BANK0 ] unsigned char 
  9633 ;;  bexp            1   89[BANK0 ] unsigned char 
  9634 ;;  aexp            1   88[BANK0 ] unsigned char 
  9635 ;;  signs           1   87[BANK0 ] unsigned char 
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  4    0[BANK1 ] unsigned char 
  9638 ;; Registers used:
  9639 ;;		wreg, status,2, status,0
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9645 ;;      Params:         0       0       8       0
  9646 ;;      Locals:         0       4       0       0
  9647 ;;      Temps:          0       0       8       0
  9648 ;;      Totals:         0       4      16       0
  9649 ;;Total ram usage:       20 bytes
  9650 ;; Hardware stack levels used:    1
  9651 ;; Hardware stack levels required when called:    4
  9652 ;; This function calls:
  9653 ;;		Nothing
  9654 ;; This function is called by:
  9655 ;;		_main
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           	psect	text24
  9660  001E16                     __ptext24:
  9661                           	opt stack 0
  9662  001E16                     ___fladd:
  9663                           	opt stack 26
  9664                           
  9665                           ; BSR set to: 0
  9666                           ;incstack = 0
  9667  001E16  0101               	movlb	1	; () banked
  9668  001E18  5103               	movf	(___fladd@b+3)& (0+255),w,b
  9669  001E1A  0B80               	andlw	128
  9670  001E1C  0100               	movlb	0	; () banked
  9671  001E1E  6FB7               	movwf	___fladd@signs& (0+255),b
  9672  001E20  0101               	movlb	1	; () banked
  9673  001E22  5103               	movf	(___fladd@b+3)& (0+255),w,b
  9674  001E24  2503               	addwf	(___fladd@b+3)& (0+255),w,b
  9675  001E26  0100               	movlb	0	; () banked
  9676  001E28  6FB9               	movwf	___fladd@bexp& (0+255),b
  9677                           
  9678                           ; BSR set to: 0
  9679  001E2A  0101               	movlb	1	; () banked
  9680  001E2C  AF02               	btfss	(___fladd@b+2)& (0+255),7,b
  9681  001E2E  D002               	goto	l4871
  9682                           
  9683                           ; BSR set to: 1
  9684  001E30  0100               	movlb	0	; () banked
  9685  001E32  81B9               	bsf	___fladd@bexp& (0+255),0,b
  9686  001E34                     l4871:
  9687  001E34  0100               	movlb	0	; () banked
  9688  001E36  51B9               	movf	___fladd@bexp& (0+255),w,b
  9689  001E38  0100               	movlb	0	; () banked
  9690  001E3A  B4D8               	btfsc	status,2,c
  9691  001E3C  D012               	goto	l4881
  9692                           
  9693                           ; BSR set to: 0
  9694  001E3E  0100               	movlb	0	; () banked
  9695  001E40  29B9               	incf	___fladd@bexp& (0+255),w,b
  9696  001E42  A4D8               	btfss	status,2,c
  9697  001E44  D009               	goto	l4877
  9698                           
  9699                           ; BSR set to: 0
  9700  001E46  0E00               	movlw	0
  9701  001E48  0101               	movlb	1	; () banked
  9702  001E4A  6F00               	movwf	___fladd@b& (0+255),b
  9703  001E4C  0E00               	movlw	0
  9704  001E4E  6F01               	movwf	(___fladd@b+1)& (0+255),b
  9705  001E50  0E00               	movlw	0
  9706  001E52  6F02               	movwf	(___fladd@b+2)& (0+255),b
  9707  001E54  0E00               	movlw	0
  9708  001E56  6F03               	movwf	(___fladd@b+3)& (0+255),b
  9709  001E58                     l4877:
  9710  001E58  0101               	movlb	1	; () banked
  9711  001E5A  8F02               	bsf	(___fladd@b+2)& (0+255),7,b
  9712                           
  9713                           ; BSR set to: 1
  9714  001E5C  0E00               	movlw	0
  9715  001E5E  0101               	movlb	1	; () banked
  9716  001E60  D008               	goto	L8
  9717  001E62                     l4881:
  9718  001E62  0E00               	movlw	0
  9719  001E64  0101               	movlb	1	; () banked
  9720  001E66  6F00               	movwf	___fladd@b& (0+255),b
  9721  001E68  0E00               	movlw	0
  9722  001E6A  6F01               	movwf	(___fladd@b+1)& (0+255),b
  9723  001E6C  0E00               	movlw	0
  9724  001E6E  6F02               	movwf	(___fladd@b+2)& (0+255),b
  9725  001E70  0E00               	movlw	0
  9726  001E72                     L8:
  9727  001E72  6F03               	movwf	(___fladd@b+3)& (0+255),b
  9728                           
  9729                           ; BSR set to: 1
  9730                           
  9731                           ; BSR set to: 1
  9732  001E74  0101               	movlb	1	; () banked
  9733  001E76  5107               	movf	(___fladd@a+3)& (0+255),w,b
  9734  001E78  0B80               	andlw	128
  9735  001E7A  0100               	movlb	0	; () banked
  9736  001E7C  6FB8               	movwf	___fladd@aexp& (0+255),b
  9737                           
  9738                           ; BSR set to: 0
  9739  001E7E  0100               	movlb	0	; () banked
  9740  001E80  51B7               	movf	___fladd@signs& (0+255),w,b
  9741  001E82  0100               	movlb	0	; () banked
  9742  001E84  19B8               	xorwf	___fladd@aexp& (0+255),w,b
  9743  001E86  B4D8               	btfsc	status,2,c
  9744  001E88  D002               	goto	l4889
  9745                           
  9746                           ; BSR set to: 0
  9747  001E8A  0100               	movlb	0	; () banked
  9748  001E8C  8DB7               	bsf	___fladd@signs& (0+255),6,b
  9749  001E8E                     l4889:
  9750                           
  9751                           ; BSR set to: 0
  9752  001E8E  0101               	movlb	1	; () banked
  9753  001E90  5107               	movf	(___fladd@a+3)& (0+255),w,b
  9754  001E92  2507               	addwf	(___fladd@a+3)& (0+255),w,b
  9755  001E94  0100               	movlb	0	; () banked
  9756  001E96  6FB8               	movwf	___fladd@aexp& (0+255),b
  9757                           
  9758                           ; BSR set to: 0
  9759  001E98  0101               	movlb	1	; () banked
  9760  001E9A  AF06               	btfss	(___fladd@a+2)& (0+255),7,b
  9761  001E9C  D002               	goto	l4895
  9762                           
  9763                           ; BSR set to: 1
  9764  001E9E  0100               	movlb	0	; () banked
  9765  001EA0  81B8               	bsf	___fladd@aexp& (0+255),0,b
  9766  001EA2                     l4895:
  9767  001EA2  0100               	movlb	0	; () banked
  9768  001EA4  51B8               	movf	___fladd@aexp& (0+255),w,b
  9769  001EA6  0100               	movlb	0	; () banked
  9770  001EA8  B4D8               	btfsc	status,2,c
  9771  001EAA  D012               	goto	l4905
  9772                           
  9773                           ; BSR set to: 0
  9774  001EAC  0100               	movlb	0	; () banked
  9775  001EAE  29B8               	incf	___fladd@aexp& (0+255),w,b
  9776  001EB0  A4D8               	btfss	status,2,c
  9777  001EB2  D009               	goto	l4901
  9778                           
  9779                           ; BSR set to: 0
  9780  001EB4  0E00               	movlw	0
  9781  001EB6  0101               	movlb	1	; () banked
  9782  001EB8  6F04               	movwf	___fladd@a& (0+255),b
  9783  001EBA  0E00               	movlw	0
  9784  001EBC  6F05               	movwf	(___fladd@a+1)& (0+255),b
  9785  001EBE  0E00               	movlw	0
  9786  001EC0  6F06               	movwf	(___fladd@a+2)& (0+255),b
  9787  001EC2  0E00               	movlw	0
  9788  001EC4  6F07               	movwf	(___fladd@a+3)& (0+255),b
  9789  001EC6                     l4901:
  9790  001EC6  0101               	movlb	1	; () banked
  9791  001EC8  8F06               	bsf	(___fladd@a+2)& (0+255),7,b
  9792                           
  9793                           ; BSR set to: 1
  9794  001ECA  0E00               	movlw	0
  9795  001ECC  0101               	movlb	1	; () banked
  9796  001ECE  D008               	goto	L9
  9797  001ED0                     l4905:
  9798  001ED0  0E00               	movlw	0
  9799  001ED2  0101               	movlb	1	; () banked
  9800  001ED4  6F04               	movwf	___fladd@a& (0+255),b
  9801  001ED6  0E00               	movlw	0
  9802  001ED8  6F05               	movwf	(___fladd@a+1)& (0+255),b
  9803  001EDA  0E00               	movlw	0
  9804  001EDC  6F06               	movwf	(___fladd@a+2)& (0+255),b
  9805  001EDE  0E00               	movlw	0
  9806  001EE0                     L9:
  9807  001EE0  6F07               	movwf	(___fladd@a+3)& (0+255),b
  9808                           
  9809                           ; BSR set to: 1
  9810                           
  9811                           ; BSR set to: 1
  9812  001EE2  0100               	movlb	0	; () banked
  9813  001EE4  51B9               	movf	___fladd@bexp& (0+255),w,b
  9814  001EE6  0100               	movlb	0	; () banked
  9815  001EE8  5DB8               	subwf	___fladd@aexp& (0+255),w,b
  9816  001EEA  B0D8               	btfsc	status,0,c
  9817  001EEC  D024               	goto	l4943
  9818                           
  9819                           ; BSR set to: 0
  9820  001EEE  0100               	movlb	0	; () banked
  9821  001EF0  ADB7               	btfss	___fladd@signs& (0+255),6,b
  9822  001EF2  D003               	goto	l4913
  9823                           
  9824                           ; BSR set to: 0
  9825  001EF4  0E80               	movlw	128
  9826  001EF6  0100               	movlb	0	; () banked
  9827  001EF8  1BB7               	xorwf	___fladd@signs& (0+255),f,b
  9828  001EFA                     l4913:
  9829                           
  9830                           ; BSR set to: 0
  9831  001EFA  C0B9  F0BA         	movff	___fladd@bexp,___fladd@grs
  9832                           
  9833                           ; BSR set to: 0
  9834  001EFE  C0B8  F0B9         	movff	___fladd@aexp,___fladd@bexp
  9835                           
  9836                           ; BSR set to: 0
  9837  001F02  C0BA  F0B8         	movff	___fladd@grs,___fladd@aexp
  9838                           
  9839                           ; BSR set to: 0
  9840  001F06  C100  F0BA         	movff	___fladd@b,___fladd@grs
  9841                           
  9842                           ; BSR set to: 0
  9843  001F0A  C104  F100         	movff	___fladd@a,___fladd@b
  9844                           
  9845                           ; BSR set to: 0
  9846  001F0E  C0BA  F104         	movff	___fladd@grs,___fladd@a
  9847                           
  9848                           ; BSR set to: 0
  9849  001F12  C101  F0BA         	movff	___fladd@b+1,___fladd@grs
  9850                           
  9851                           ; BSR set to: 0
  9852  001F16  C105  F101         	movff	___fladd@a+1,___fladd@b+1
  9853                           
  9854                           ; BSR set to: 0
  9855  001F1A  C0BA  F105         	movff	___fladd@grs,___fladd@a+1
  9856                           
  9857                           ; BSR set to: 0
  9858  001F1E  C102  F0BA         	movff	___fladd@b+2,___fladd@grs
  9859                           
  9860                           ; BSR set to: 0
  9861  001F22  C106  F102         	movff	___fladd@a+2,___fladd@b+2
  9862                           
  9863                           ; BSR set to: 0
  9864  001F26  C0BA  F106         	movff	___fladd@grs,___fladd@a+2
  9865                           
  9866                           ; BSR set to: 0
  9867  001F2A  C103  F0BA         	movff	___fladd@b+3,___fladd@grs
  9868                           
  9869                           ; BSR set to: 0
  9870  001F2E  C107  F103         	movff	___fladd@a+3,___fladd@b+3
  9871                           
  9872                           ; BSR set to: 0
  9873  001F32  C0BA  F107         	movff	___fladd@grs,___fladd@a+3
  9874  001F36                     l4943:
  9875                           
  9876                           ; BSR set to: 0
  9877  001F36  0E00               	movlw	0
  9878  001F38  0100               	movlb	0	; () banked
  9879  001F3A  6FBA               	movwf	___fladd@grs& (0+255),b
  9880                           
  9881                           ; BSR set to: 0
  9882  001F3C  0100               	movlb	0	; () banked
  9883  001F3E  51B9               	movf	___fladd@bexp& (0+255),w,b
  9884  001F40  0101               	movlb	1	; () banked
  9885  001F42  6F08               	movwf	??___fladd& (0+255),b
  9886  001F44  6B09               	clrf	(??___fladd+1)& (0+255),b
  9887  001F46  0101               	movlb	1	; () banked
  9888  001F48  1F08               	comf	??___fladd& (0+255),f,b
  9889  001F4A  1F09               	comf	(??___fladd+1)& (0+255),f,b
  9890  001F4C  4B08               	infsnz	??___fladd& (0+255),f,b
  9891  001F4E  2B09               	incf	(??___fladd+1)& (0+255),f,b
  9892  001F50  0100               	movlb	0	; () banked
  9893  001F52  51B8               	movf	___fladd@aexp& (0+255),w,b
  9894  001F54  0101               	movlb	1	; () banked
  9895  001F56  6F0A               	movwf	(??___fladd+2)& (0+255),b
  9896  001F58  6B0B               	clrf	(??___fladd+3)& (0+255),b
  9897  001F5A  0101               	movlb	1	; () banked
  9898  001F5C  5108               	movf	??___fladd& (0+255),w,b
  9899  001F5E  0101               	movlb	1	; () banked
  9900  001F60  270A               	addwf	(??___fladd+2)& (0+255),f,b
  9901  001F62  0101               	movlb	1	; () banked
  9902  001F64  5109               	movf	(??___fladd+1)& (0+255),w,b
  9903  001F66  0101               	movlb	1	; () banked
  9904  001F68  230B               	addwfc	(??___fladd+3)& (0+255),f,b
  9905  001F6A  0101               	movlb	1	; () banked
  9906  001F6C  BF0B               	btfsc	(??___fladd+3)& (0+255),7,b
  9907  001F6E  D03D               	goto	l1168
  9908  001F70  0101               	movlb	1	; () banked
  9909  001F72  510B               	movf	(??___fladd+3)& (0+255),w,b
  9910  001F74  E105               	bnz	u6320
  9911  001F76  0E1A               	movlw	26
  9912  001F78  0101               	movlb	1	; () banked
  9913  001F7A  5D0A               	subwf	(??___fladd+2)& (0+255),w,b
  9914  001F7C  A0D8               	btfss	status,0,c
  9915  001F7E  D035               	goto	l1168
  9916  001F80                     u6320:
  9917                           
  9918                           ; BSR set to: 1
  9919  001F80  0101               	movlb	1	; () banked
  9920  001F82  5100               	movf	___fladd@b& (0+255),w,b
  9921  001F84  0101               	movlb	1	; () banked
  9922  001F86  1101               	iorwf	(___fladd@b+1)& (0+255),w,b
  9923  001F88  0101               	movlb	1	; () banked
  9924  001F8A  1102               	iorwf	(___fladd@b+2)& (0+255),w,b
  9925  001F8C  0101               	movlb	1	; () banked
  9926  001F8E  1103               	iorwf	(___fladd@b+3)& (0+255),w,b
  9927  001F90  B4D8               	btfsc	status,2,c
  9928  001F92  D002               	goto	u6330
  9929  001F94  0E01               	movlw	1
  9930  001F96  D001               	goto	u6340
  9931  001F98                     u6330:
  9932  001F98  0E00               	movlw	0
  9933  001F9A                     u6340:
  9934  001F9A  0100               	movlb	0	; () banked
  9935  001F9C  6FBA               	movwf	___fladd@grs& (0+255),b
  9936                           
  9937                           ; BSR set to: 0
  9938  001F9E  0E00               	movlw	0
  9939  001FA0  0101               	movlb	1	; () banked
  9940  001FA2  6F00               	movwf	___fladd@b& (0+255),b
  9941  001FA4  0E00               	movlw	0
  9942  001FA6  6F01               	movwf	(___fladd@b+1)& (0+255),b
  9943  001FA8  0E00               	movlw	0
  9944  001FAA  6F02               	movwf	(___fladd@b+2)& (0+255),b
  9945  001FAC  0E00               	movlw	0
  9946  001FAE  6F03               	movwf	(___fladd@b+3)& (0+255),b
  9947                           
  9948                           ; BSR set to: 1
  9949  001FB0  C0B8  F0B9         	movff	___fladd@aexp,___fladd@bexp
  9950  001FB4  D020               	goto	l1167
  9951  001FB6                     l1169:
  9952                           
  9953                           ; BSR set to: 0
  9954  001FB6  0100               	movlb	0	; () banked
  9955  001FB8  A1BA               	btfss	___fladd@grs& (0+255),0,b
  9956  001FBA  D007               	goto	l4955
  9957                           
  9958                           ; BSR set to: 0
  9959  001FBC  0100               	movlb	0	; () banked
  9960  001FBE  90D8               	bcf	status,0,c
  9961  001FC0  31BA               	rrcf	___fladd@grs& (0+255),w,b
  9962  001FC2  0901               	iorlw	1
  9963  001FC4  0100               	movlb	0	; () banked
  9964  001FC6  6FBA               	movwf	___fladd@grs& (0+255),b
  9965  001FC8  D003               	goto	l4957
  9966  001FCA                     l4955:
  9967                           
  9968                           ; BSR set to: 0
  9969  001FCA  0100               	movlb	0	; () banked
  9970  001FCC  90D8               	bcf	status,0,c
  9971  001FCE  33BA               	rrcf	___fladd@grs& (0+255),f,b
  9972  001FD0                     l4957:
  9973                           
  9974                           ; BSR set to: 0
  9975  001FD0  0101               	movlb	1	; () banked
  9976  001FD2  A100               	btfss	___fladd@b& (0+255),0,b
  9977  001FD4  D002               	goto	l4961
  9978                           
  9979                           ; BSR set to: 1
  9980  001FD6  0100               	movlb	0	; () banked
  9981  001FD8  8FBA               	bsf	___fladd@grs& (0+255),7,b
  9982  001FDA                     l4961:
  9983  001FDA  0101               	movlb	1	; () banked
  9984  001FDC  3503               	rlcf	(___fladd@b+3)& (0+255),w,b
  9985  001FDE  3303               	rrcf	(___fladd@b+3)& (0+255),f,b
  9986  001FE0  3302               	rrcf	(___fladd@b+2)& (0+255),f,b
  9987  001FE2  3301               	rrcf	(___fladd@b+1)& (0+255),f,b
  9988  001FE4  3300               	rrcf	___fladd@b& (0+255),f,b
  9989                           
  9990                           ; BSR set to: 1
  9991  001FE6  0100               	movlb	0	; () banked
  9992  001FE8  2BB9               	incf	___fladd@bexp& (0+255),f,b
  9993  001FEA                     l1168:
  9994  001FEA  0100               	movlb	0	; () banked
  9995  001FEC  51B8               	movf	___fladd@aexp& (0+255),w,b
  9996  001FEE  0100               	movlb	0	; () banked
  9997  001FF0  5DB9               	subwf	___fladd@bexp& (0+255),w,b
  9998  001FF2  A0D8               	btfss	status,0,c
  9999  001FF4  D7E0               	goto	l1169
 10000  001FF6                     l1167:
 10001  001FF6  0100               	movlb	0	; () banked
 10002  001FF8  BDB7               	btfsc	___fladd@signs& (0+255),6,b
 10003  001FFA  D03F               	goto	l4989
 10004                           
 10005                           ; BSR set to: 0
 10006  001FFC  0100               	movlb	0	; () banked
 10007  001FFE  51B9               	movf	___fladd@bexp& (0+255),w,b
 10008  002000  0100               	movlb	0	; () banked
 10009  002002  A4D8               	btfss	status,2,c
 10010  002004  D00A               	goto	l4971
 10011                           
 10012                           ; BSR set to: 0
 10013  002006  0E00               	movlw	0
 10014  002008  0101               	movlb	1	; () banked
 10015  00200A  6F00               	movwf	?___fladd& (0+255),b
 10016  00200C  0E00               	movlw	0
 10017  00200E  6F01               	movwf	(?___fladd+1)& (0+255),b
 10018  002010  0E00               	movlw	0
 10019  002012  6F02               	movwf	(?___fladd+2)& (0+255),b
 10020  002014  0E00               	movlw	0
 10021  002016  6F03               	movwf	(?___fladd+3)& (0+255),b
 10022                           
 10023                           ; BSR set to: 1
 10024  002018  0012               	return	
 10025  00201A                     l4971:
 10026  00201A  0101               	movlb	1	; () banked
 10027  00201C  5104               	movf	___fladd@a& (0+255),w,b
 10028  00201E  0101               	movlb	1	; () banked
 10029  002020  2700               	addwf	___fladd@b& (0+255),f,b
 10030  002022  0101               	movlb	1	; () banked
 10031  002024  5105               	movf	(___fladd@a+1)& (0+255),w,b
 10032  002026  0101               	movlb	1	; () banked
 10033  002028  2301               	addwfc	(___fladd@b+1)& (0+255),f,b
 10034  00202A  0101               	movlb	1	; () banked
 10035  00202C  5106               	movf	(___fladd@a+2)& (0+255),w,b
 10036  00202E  0101               	movlb	1	; () banked
 10037  002030  2302               	addwfc	(___fladd@b+2)& (0+255),f,b
 10038  002032  0101               	movlb	1	; () banked
 10039  002034  5107               	movf	(___fladd@a+3)& (0+255),w,b
 10040  002036  0101               	movlb	1	; () banked
 10041  002038  2303               	addwfc	(___fladd@b+3)& (0+255),f,b
 10042                           
 10043                           ; BSR set to: 1
 10044  00203A  0101               	movlb	1	; () banked
 10045  00203C  A103               	btfss	(___fladd@b+3)& (0+255),0,b
 10046  00203E  D0CC               	goto	l5025
 10047                           
 10048                           ; BSR set to: 1
 10049  002040  0100               	movlb	0	; () banked
 10050  002042  A1BA               	btfss	___fladd@grs& (0+255),0,b
 10051  002044  D009               	goto	l4979
 10052                           
 10053                           ; BSR set to: 0
 10054  002046  0100               	movlb	0	; () banked
 10055  002048  90D8               	bcf	status,0,c
 10056  00204A  33BA               	rrcf	___fladd@grs& (0+255),f,b
 10057  00204C  0100               	movlb	0	; () banked
 10058  00204E  51BA               	movf	___fladd@grs& (0+255),w,b
 10059  002050  0901               	iorlw	1
 10060  002052  0100               	movlb	0	; () banked
 10061  002054  6FBA               	movwf	___fladd@grs& (0+255),b
 10062  002056  D003               	goto	l4981
 10063  002058                     l4979:
 10064                           
 10065                           ; BSR set to: 0
 10066  002058  0100               	movlb	0	; () banked
 10067  00205A  90D8               	bcf	status,0,c
 10068  00205C  33BA               	rrcf	___fladd@grs& (0+255),f,b
 10069  00205E                     l4981:
 10070                           
 10071                           ; BSR set to: 0
 10072  00205E  0101               	movlb	1	; () banked
 10073  002060  A100               	btfss	___fladd@b& (0+255),0,b
 10074  002062  D002               	goto	l4985
 10075                           
 10076                           ; BSR set to: 1
 10077  002064  0100               	movlb	0	; () banked
 10078  002066  8FBA               	bsf	___fladd@grs& (0+255),7,b
 10079  002068                     l4985:
 10080  002068  0101               	movlb	1	; () banked
 10081  00206A  3503               	rlcf	(___fladd@b+3)& (0+255),w,b
 10082  00206C  3303               	rrcf	(___fladd@b+3)& (0+255),f,b
 10083  00206E  3302               	rrcf	(___fladd@b+2)& (0+255),f,b
 10084  002070  3301               	rrcf	(___fladd@b+1)& (0+255),f,b
 10085  002072  3300               	rrcf	___fladd@b& (0+255),f,b
 10086                           
 10087                           ; BSR set to: 1
 10088  002074  0100               	movlb	0	; () banked
 10089  002076  2BB9               	incf	___fladd@bexp& (0+255),f,b
 10090                           
 10091                           ; BSR set to: 0
 10092  002078  D0AF               	goto	l5025
 10093  00207A                     l4989:
 10094                           
 10095                           ; BSR set to: 0
 10096  00207A  0101               	movlb	1	; () banked
 10097  00207C  5104               	movf	___fladd@a& (0+255),w,b
 10098  00207E  0101               	movlb	1	; () banked
 10099  002080  5D00               	subwf	___fladd@b& (0+255),w,b
 10100  002082  0101               	movlb	1	; () banked
 10101  002084  5105               	movf	(___fladd@a+1)& (0+255),w,b
 10102  002086  0101               	movlb	1	; () banked
 10103  002088  5901               	subwfb	(___fladd@b+1)& (0+255),w,b
 10104  00208A  0101               	movlb	1	; () banked
 10105  00208C  5106               	movf	(___fladd@a+2)& (0+255),w,b
 10106  00208E  0101               	movlb	1	; () banked
 10107  002090  5902               	subwfb	(___fladd@b+2)& (0+255),w,b
 10108  002092  0101               	movlb	1	; () banked
 10109  002094  5103               	movf	(___fladd@b+3)& (0+255),w,b
 10110  002096  0A80               	xorlw	128
 10111  002098  0101               	movlb	1	; () banked
 10112  00209A  6F08               	movwf	??___fladd& (0+255),b
 10113  00209C  0101               	movlb	1	; () banked
 10114  00209E  5107               	movf	(___fladd@a+3)& (0+255),w,b
 10115  0020A0  0A80               	xorlw	128
 10116  0020A2  0101               	movlb	1	; () banked
 10117  0020A4  5908               	subwfb	??___fladd& (0+255),w,b
 10118  0020A6  B0D8               	btfsc	status,0,c
 10119  0020A8  D050               	goto	l4999
 10120                           
 10121                           ; BSR set to: 1
 10122  0020AA  C100  F108         	movff	___fladd@b,??___fladd
 10123  0020AE  C101  F109         	movff	___fladd@b+1,??___fladd+1
 10124  0020B2  C102  F10A         	movff	___fladd@b+2,??___fladd+2
 10125  0020B6  C103  F10B         	movff	___fladd@b+3,??___fladd+3
 10126  0020BA  0101               	movlb	1	; () banked
 10127  0020BC  1F08               	comf	??___fladd& (0+255),f,b
 10128  0020BE  1F09               	comf	(??___fladd+1)& (0+255),f,b
 10129  0020C0  1F0A               	comf	(??___fladd+2)& (0+255),f,b
 10130  0020C2  1F0B               	comf	(??___fladd+3)& (0+255),f,b
 10131  0020C4  2B08               	incf	??___fladd& (0+255),f,b
 10132  0020C6  0E00               	movlw	0
 10133  0020C8  2309               	addwfc	(??___fladd+1)& (0+255),f,b
 10134  0020CA  230A               	addwfc	(??___fladd+2)& (0+255),f,b
 10135  0020CC  230B               	addwfc	(??___fladd+3)& (0+255),f,b
 10136  0020CE  0101               	movlb	1	; () banked
 10137  0020D0  5104               	movf	___fladd@a& (0+255),w,b
 10138  0020D2  0101               	movlb	1	; () banked
 10139  0020D4  2508               	addwf	??___fladd& (0+255),w,b
 10140  0020D6  0101               	movlb	1	; () banked
 10141  0020D8  6F0C               	movwf	(??___fladd+4)& (0+255),b
 10142  0020DA  0101               	movlb	1	; () banked
 10143  0020DC  5105               	movf	(___fladd@a+1)& (0+255),w,b
 10144  0020DE  0101               	movlb	1	; () banked
 10145  0020E0  2109               	addwfc	(??___fladd+1)& (0+255),w,b
 10146  0020E2  0101               	movlb	1	; () banked
 10147  0020E4  6F0D               	movwf	(??___fladd+5)& (0+255),b
 10148  0020E6  0101               	movlb	1	; () banked
 10149  0020E8  5106               	movf	(___fladd@a+2)& (0+255),w,b
 10150  0020EA  0101               	movlb	1	; () banked
 10151  0020EC  210A               	addwfc	(??___fladd+2)& (0+255),w,b
 10152  0020EE  0101               	movlb	1	; () banked
 10153  0020F0  6F0E               	movwf	(??___fladd+6)& (0+255),b
 10154  0020F2  0101               	movlb	1	; () banked
 10155  0020F4  5107               	movf	(___fladd@a+3)& (0+255),w,b
 10156  0020F6  0101               	movlb	1	; () banked
 10157  0020F8  210B               	addwfc	(??___fladd+3)& (0+255),w,b
 10158  0020FA  0101               	movlb	1	; () banked
 10159  0020FC  6F0F               	movwf	(??___fladd+7)& (0+255),b
 10160  0020FE  0EFF               	movlw	255
 10161  002100  0101               	movlb	1	; () banked
 10162  002102  250C               	addwf	(??___fladd+4)& (0+255),w,b
 10163  002104  0101               	movlb	1	; () banked
 10164  002106  6F00               	movwf	___fladd@b& (0+255),b
 10165  002108  0EFF               	movlw	255
 10166  00210A  0101               	movlb	1	; () banked
 10167  00210C  210D               	addwfc	(??___fladd+5)& (0+255),w,b
 10168  00210E  0101               	movlb	1	; () banked
 10169  002110  6F01               	movwf	(___fladd@b+1)& (0+255),b
 10170  002112  0EFF               	movlw	255
 10171  002114  0101               	movlb	1	; () banked
 10172  002116  210E               	addwfc	(??___fladd+6)& (0+255),w,b
 10173  002118  0101               	movlb	1	; () banked
 10174  00211A  6F02               	movwf	(___fladd@b+2)& (0+255),b
 10175  00211C  0EFF               	movlw	255
 10176  00211E  0101               	movlb	1	; () banked
 10177  002120  210F               	addwfc	(??___fladd+7)& (0+255),w,b
 10178  002122  0101               	movlb	1	; () banked
 10179  002124  6F03               	movwf	(___fladd@b+3)& (0+255),b
 10180  002126  0E80               	movlw	128
 10181  002128  0100               	movlb	0	; () banked
 10182  00212A  1BB7               	xorwf	___fladd@signs& (0+255),f,b
 10183                           
 10184                           ; BSR set to: 0
 10185  00212C  0100               	movlb	0	; () banked
 10186  00212E  6DBA               	negf	___fladd@grs& (0+255),b
 10187                           
 10188                           ; BSR set to: 0
 10189  002130  0100               	movlb	0	; () banked
 10190  002132  51BA               	movf	___fladd@grs& (0+255),w,b
 10191  002134  0100               	movlb	0	; () banked
 10192  002136  A4D8               	btfss	status,2,c
 10193  002138  D018               	goto	l1184
 10194                           
 10195                           ; BSR set to: 0
 10196  00213A  0E01               	movlw	1
 10197  00213C  0101               	movlb	1	; () banked
 10198  00213E  2700               	addwf	___fladd@b& (0+255),f,b
 10199  002140  0E00               	movlw	0
 10200  002142  2301               	addwfc	(___fladd@b+1)& (0+255),f,b
 10201  002144  2302               	addwfc	(___fladd@b+2)& (0+255),f,b
 10202  002146  2303               	addwfc	(___fladd@b+3)& (0+255),f,b
 10203                           
 10204                           ; BSR set to: 1
 10205  002148  D010               	goto	l1184
 10206  00214A                     l4999:
 10207                           
 10208                           ; BSR set to: 1
 10209  00214A  0101               	movlb	1	; () banked
 10210  00214C  5104               	movf	___fladd@a& (0+255),w,b
 10211  00214E  0101               	movlb	1	; () banked
 10212  002150  5F00               	subwf	___fladd@b& (0+255),f,b
 10213  002152  0101               	movlb	1	; () banked
 10214  002154  5105               	movf	(___fladd@a+1)& (0+255),w,b
 10215  002156  0101               	movlb	1	; () banked
 10216  002158  5B01               	subwfb	(___fladd@b+1)& (0+255),f,b
 10217  00215A  0101               	movlb	1	; () banked
 10218  00215C  5106               	movf	(___fladd@a+2)& (0+255),w,b
 10219  00215E  0101               	movlb	1	; () banked
 10220  002160  5B02               	subwfb	(___fladd@b+2)& (0+255),f,b
 10221  002162  0101               	movlb	1	; () banked
 10222  002164  5107               	movf	(___fladd@a+3)& (0+255),w,b
 10223  002166  0101               	movlb	1	; () banked
 10224  002168  5B03               	subwfb	(___fladd@b+3)& (0+255),f,b
 10225  00216A                     l1184:
 10226  00216A  0101               	movlb	1	; () banked
 10227  00216C  5100               	movf	___fladd@b& (0+255),w,b
 10228  00216E  0101               	movlb	1	; () banked
 10229  002170  1101               	iorwf	(___fladd@b+1)& (0+255),w,b
 10230  002172  0101               	movlb	1	; () banked
 10231  002174  1102               	iorwf	(___fladd@b+2)& (0+255),w,b
 10232  002176  0101               	movlb	1	; () banked
 10233  002178  1103               	iorwf	(___fladd@b+3)& (0+255),w,b
 10234  00217A  A4D8               	btfss	status,2,c
 10235  00217C  D02A               	goto	l5023
 10236                           
 10237                           ; BSR set to: 1
 10238  00217E  0100               	movlb	0	; () banked
 10239  002180  51BA               	movf	___fladd@grs& (0+255),w,b
 10240  002182  0100               	movlb	0	; () banked
 10241  002184  A4D8               	btfss	status,2,c
 10242  002186  D025               	goto	l5023
 10243                           
 10244                           ; BSR set to: 0
 10245  002188  0E00               	movlw	0
 10246  00218A  0101               	movlb	1	; () banked
 10247  00218C  6F00               	movwf	?___fladd& (0+255),b
 10248  00218E  0E00               	movlw	0
 10249  002190  6F01               	movwf	(?___fladd+1)& (0+255),b
 10250  002192  0E00               	movlw	0
 10251  002194  6F02               	movwf	(?___fladd+2)& (0+255),b
 10252  002196  0E00               	movlw	0
 10253  002198  6F03               	movwf	(?___fladd+3)& (0+255),b
 10254                           
 10255                           ; BSR set to: 1
 10256  00219A  0012               	return	
 10257  00219C                     l5007:
 10258                           
 10259                           ; BSR set to: 1
 10260  00219C  0101               	movlb	1	; () banked
 10261  00219E  90D8               	bcf	status,0,c
 10262  0021A0  3700               	rlcf	___fladd@b& (0+255),f,b
 10263  0021A2  3701               	rlcf	(___fladd@b+1)& (0+255),f,b
 10264  0021A4  3702               	rlcf	(___fladd@b+2)& (0+255),f,b
 10265  0021A6  3703               	rlcf	(___fladd@b+3)& (0+255),f,b
 10266                           
 10267                           ; BSR set to: 1
 10268  0021A8  0100               	movlb	0	; () banked
 10269  0021AA  AFBA               	btfss	___fladd@grs& (0+255),7,b
 10270  0021AC  D002               	goto	l5013
 10271                           
 10272                           ; BSR set to: 0
 10273  0021AE  0101               	movlb	1	; () banked
 10274  0021B0  8100               	bsf	___fladd@b& (0+255),0,b
 10275  0021B2                     l5013:
 10276  0021B2  0100               	movlb	0	; () banked
 10277  0021B4  A1BA               	btfss	___fladd@grs& (0+255),0,b
 10278  0021B6  D003               	goto	l5017
 10279                           
 10280                           ; BSR set to: 0
 10281  0021B8  80D8               	bsf	status,0,c
 10282  0021BA  0100               	movlb	0	; () banked
 10283  0021BC  D002               	goto	L10
 10284  0021BE                     l5017:
 10285                           
 10286                           ; BSR set to: 0
 10287  0021BE  0100               	movlb	0	; () banked
 10288  0021C0  90D8               	bcf	status,0,c
 10289  0021C2                     L10:
 10290  0021C2  37BA               	rlcf	___fladd@grs& (0+255),f,b
 10291                           
 10292                           ; BSR set to: 0
 10293                           
 10294                           ; BSR set to: 0
 10295  0021C4  0100               	movlb	0	; () banked
 10296  0021C6  51B9               	movf	___fladd@bexp& (0+255),w,b
 10297  0021C8  0100               	movlb	0	; () banked
 10298  0021CA  B4D8               	btfsc	status,2,c
 10299  0021CC  D002               	goto	l5023
 10300                           
 10301                           ; BSR set to: 0
 10302  0021CE  0100               	movlb	0	; () banked
 10303  0021D0  07B9               	decf	___fladd@bexp& (0+255),f,b
 10304  0021D2                     l5023:
 10305  0021D2  0101               	movlb	1	; () banked
 10306  0021D4  AF02               	btfss	(___fladd@b+2)& (0+255),7,b
 10307  0021D6  D7E2               	goto	l5007
 10308  0021D8                     l5025:
 10309  0021D8  0E00               	movlw	0
 10310  0021DA  0100               	movlb	0	; () banked
 10311  0021DC  6FB8               	movwf	___fladd@aexp& (0+255),b
 10312                           
 10313                           ; BSR set to: 0
 10314  0021DE  0100               	movlb	0	; () banked
 10315  0021E0  AFBA               	btfss	___fladd@grs& (0+255),7,b
 10316  0021E2  D00D               	goto	l1193
 10317                           
 10318                           ; BSR set to: 0
 10319  0021E4  C0BA  F108         	movff	___fladd@grs,??___fladd
 10320  0021E8  0E7F               	movlw	127
 10321  0021EA  0101               	movlb	1	; () banked
 10322  0021EC  1708               	andwf	??___fladd& (0+255),f,b
 10323  0021EE  A4D8               	btfss	status,2,c
 10324  0021F0  D003               	goto	l5033
 10325                           
 10326                           ; BSR set to: 1
 10327                           
 10328                           ; BSR set to: 1
 10329  0021F2  0101               	movlb	1	; () banked
 10330  0021F4  A100               	btfss	___fladd@b& (0+255),0,b
 10331  0021F6  D003               	goto	l1193
 10332  0021F8                     l5033:
 10333                           
 10334                           ; BSR set to: 1
 10335  0021F8  0E01               	movlw	1
 10336  0021FA  0100               	movlb	0	; () banked
 10337  0021FC  6FB8               	movwf	___fladd@aexp& (0+255),b
 10338  0021FE                     l1193:
 10339  0021FE  0100               	movlb	0	; () banked
 10340  002200  51B8               	movf	___fladd@aexp& (0+255),w,b
 10341  002202  0100               	movlb	0	; () banked
 10342  002204  B4D8               	btfsc	status,2,c
 10343  002206  D026               	goto	l5043
 10344                           
 10345                           ; BSR set to: 0
 10346  002208  0E01               	movlw	1
 10347  00220A  0101               	movlb	1	; () banked
 10348  00220C  2700               	addwf	___fladd@b& (0+255),f,b
 10349  00220E  0E00               	movlw	0
 10350  002210  2301               	addwfc	(___fladd@b+1)& (0+255),f,b
 10351  002212  2302               	addwfc	(___fladd@b+2)& (0+255),f,b
 10352  002214  2303               	addwfc	(___fladd@b+3)& (0+255),f,b
 10353                           
 10354                           ; BSR set to: 1
 10355  002216  0101               	movlb	1	; () banked
 10356  002218  A103               	btfss	(___fladd@b+3)& (0+255),0,b
 10357  00221A  D01C               	goto	l5043
 10358                           
 10359                           ; BSR set to: 1
 10360  00221C  C100  F108         	movff	___fladd@b,??___fladd
 10361  002220  C101  F109         	movff	___fladd@b+1,??___fladd+1
 10362  002224  C102  F10A         	movff	___fladd@b+2,??___fladd+2
 10363  002228  C103  F10B         	movff	___fladd@b+3,??___fladd+3
 10364  00222C  0101               	movlb	1	; () banked
 10365  00222E  350B               	rlcf	(??___fladd+3)& (0+255),w,b
 10366  002230  330B               	rrcf	(??___fladd+3)& (0+255),f,b
 10367  002232  330A               	rrcf	(??___fladd+2)& (0+255),f,b
 10368  002234  3309               	rrcf	(??___fladd+1)& (0+255),f,b
 10369  002236  3308               	rrcf	??___fladd& (0+255),f,b
 10370  002238  C108  F100         	movff	??___fladd,___fladd@b
 10371  00223C  C109  F101         	movff	??___fladd+1,___fladd@b+1
 10372  002240  C10A  F102         	movff	??___fladd+2,___fladd@b+2
 10373  002244  C10B  F103         	movff	??___fladd+3,___fladd@b+3
 10374  002248  0100               	movlb	0	; () banked
 10375  00224A  29B9               	incf	___fladd@bexp& (0+255),w,b
 10376  00224C  B4D8               	btfsc	status,2,c
 10377  00224E  D002               	goto	l5043
 10378                           
 10379                           ; BSR set to: 0
 10380  002250  0100               	movlb	0	; () banked
 10381  002252  2BB9               	incf	___fladd@bexp& (0+255),f,b
 10382  002254                     l5043:
 10383  002254  0100               	movlb	0	; () banked
 10384  002256  29B9               	incf	___fladd@bexp& (0+255),w,b
 10385  002258  B4D8               	btfsc	status,2,c
 10386  00225A  D005               	goto	l5047
 10387                           
 10388                           ; BSR set to: 0
 10389  00225C  0100               	movlb	0	; () banked
 10390  00225E  51B9               	movf	___fladd@bexp& (0+255),w,b
 10391  002260  0100               	movlb	0	; () banked
 10392  002262  A4D8               	btfss	status,2,c
 10393  002264  D011               	goto	l5051
 10394  002266                     l5047:
 10395                           
 10396                           ; BSR set to: 0
 10397  002266  0E00               	movlw	0
 10398  002268  0101               	movlb	1	; () banked
 10399  00226A  6F00               	movwf	___fladd@b& (0+255),b
 10400  00226C  0E00               	movlw	0
 10401  00226E  6F01               	movwf	(___fladd@b+1)& (0+255),b
 10402  002270  0E00               	movlw	0
 10403  002272  6F02               	movwf	(___fladd@b+2)& (0+255),b
 10404  002274  0E00               	movlw	0
 10405  002276  6F03               	movwf	(___fladd@b+3)& (0+255),b
 10406  002278  0100               	movlb	0	; () banked
 10407  00227A  51B9               	movf	___fladd@bexp& (0+255),w,b
 10408  00227C  0100               	movlb	0	; () banked
 10409  00227E  A4D8               	btfss	status,2,c
 10410  002280  D003               	goto	l5051
 10411                           
 10412                           ; BSR set to: 0
 10413  002282  0E00               	movlw	0
 10414  002284  0100               	movlb	0	; () banked
 10415  002286  6FB7               	movwf	___fladd@signs& (0+255),b
 10416  002288                     l5051:
 10417                           
 10418                           ; BSR set to: 0
 10419  002288  0100               	movlb	0	; () banked
 10420  00228A  A1B9               	btfss	___fladd@bexp& (0+255),0,b
 10421  00228C  D003               	goto	l5055
 10422                           
 10423                           ; BSR set to: 0
 10424  00228E  0101               	movlb	1	; () banked
 10425  002290  8F02               	bsf	(___fladd@b+2)& (0+255),7,b
 10426  002292  D002               	goto	l5057
 10427  002294                     l5055:
 10428  002294  0101               	movlb	1	; () banked
 10429  002296  9F02               	bcf	(___fladd@b+2)& (0+255),7,b
 10430  002298                     l5057:
 10431                           
 10432                           ; BSR set to: 1
 10433  002298  0100               	movlb	0	; () banked
 10434  00229A  90D8               	bcf	status,0,c
 10435  00229C  31B9               	rrcf	___fladd@bexp& (0+255),w,b
 10436  00229E  0101               	movlb	1	; () banked
 10437  0022A0  6F03               	movwf	(___fladd@b+3)& (0+255),b
 10438                           
 10439                           ; BSR set to: 1
 10440  0022A2  0100               	movlb	0	; () banked
 10441  0022A4  AFB7               	btfss	___fladd@signs& (0+255),7,b
 10442  0022A6  D002               	goto	l5063
 10443                           
 10444                           ; BSR set to: 0
 10445  0022A8  0101               	movlb	1	; () banked
 10446  0022AA  8F03               	bsf	(___fladd@b+3)& (0+255),7,b
 10447  0022AC                     l5063:
 10448  0022AC  C100  F100         	movff	___fladd@b,?___fladd
 10449  0022B0  C101  F101         	movff	___fladd@b+1,?___fladd+1
 10450  0022B4  C102  F102         	movff	___fladd@b+2,?___fladd+2
 10451  0022B8  C103  F103         	movff	___fladd@b+3,?___fladd+3
 10452  0022BC  0012               	return	
 10453  0022BE                     __end_of___fladd:
 10454                           	opt stack 0
 10455                           tblptru	equ	0xFF8
 10456                           tblptrh	equ	0xFF7
 10457                           tblptrl	equ	0xFF6
 10458                           tablat	equ	0xFF5
 10459                           prodh	equ	0xFF4
 10460                           prodl	equ	0xFF3
 10461                           intcon	equ	0xFF2
 10462                           intcon2	equ	0xFF1
 10463                           postinc0	equ	0xFEE
 10464                           wreg	equ	0xFE8
 10465                           indf2	equ	0xFDF
 10466                           fsr2h	equ	0xFDA
 10467                           fsr2l	equ	0xFD9
 10468                           status	equ	0xFD8
 10469                           
 10470 ;; *************** function _CANisTXwarningON *****************
 10471 ;; Defined at:
 10472 ;;		line 1119 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;		None
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;		None
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  1    wreg      unsigned char 
 10479 ;; Registers used:
 10480 ;;		wreg
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10486 ;;      Params:         0       0       0       0
 10487 ;;      Locals:         0       0       0       0
 10488 ;;      Temps:          0       0       0       0
 10489 ;;      Totals:         0       0       0       0
 10490 ;;Total ram usage:        0 bytes
 10491 ;; Hardware stack levels used:    1
 10492 ;; Hardware stack levels required when called:    4
 10493 ;; This function calls:
 10494 ;;		Nothing
 10495 ;; This function is called by:
 10496 ;;		_main
 10497 ;; This function uses a non-reentrant model
 10498 ;;
 10499                           
 10500                           	psect	text25
 10501  00392A                     __ptext25:
 10502                           	opt stack 0
 10503  00392A                     _CANisTXwarningON:
 10504                           	opt stack 26
 10505                           
 10506                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
 10507                           
 10508                           ;incstack = 0
 10509  00392A  A474               	btfss	3956,2,c	;volatile
 10510  00392C  D002               	goto	u4850
 10511  00392E  0E01               	movlw	1
 10512  003930  0012               	return	
 10513  003932                     u4850:
 10514  003932  0E00               	movlw	0
 10515  003934  0012               	return	
 10516  003936                     __end_of_CANisTXwarningON:
 10517                           	opt stack 0
 10518                           tblptru	equ	0xFF8
 10519                           tblptrh	equ	0xFF7
 10520                           tblptrl	equ	0xFF6
 10521                           tablat	equ	0xFF5
 10522                           prodh	equ	0xFF4
 10523                           prodl	equ	0xFF3
 10524                           intcon	equ	0xFF2
 10525                           intcon2	equ	0xFF1
 10526                           postinc0	equ	0xFEE
 10527                           wreg	equ	0xFE8
 10528                           indf2	equ	0xFDF
 10529                           fsr2h	equ	0xFDA
 10530                           fsr2l	equ	0xFD9
 10531                           status	equ	0xFD8
 10532                           
 10533 ;; *************** function _CANisRXwarningON *****************
 10534 ;; Defined at:
 10535 ;;		line 1127 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;		None
 10538 ;; Auto vars:     Size  Location     Type
 10539 ;;		None
 10540 ;; Return value:  Size  Location     Type
 10541 ;;                  1    wreg      unsigned char 
 10542 ;; Registers used:
 10543 ;;		wreg
 10544 ;; Tracked objects:
 10545 ;;		On entry : 0/0
 10546 ;;		On exit  : 0/0
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10549 ;;      Params:         0       0       0       0
 10550 ;;      Locals:         0       0       0       0
 10551 ;;      Temps:          0       0       0       0
 10552 ;;      Totals:         0       0       0       0
 10553 ;;Total ram usage:        0 bytes
 10554 ;; Hardware stack levels used:    1
 10555 ;; Hardware stack levels required when called:    4
 10556 ;; This function calls:
 10557 ;;		Nothing
 10558 ;; This function is called by:
 10559 ;;		_main
 10560 ;; This function uses a non-reentrant model
 10561 ;;
 10562                           
 10563                           	psect	text26
 10564  003936                     __ptext26:
 10565                           	opt stack 0
 10566  003936                     _CANisRXwarningON:
 10567                           	opt stack 26
 10568                           
 10569                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
 10570                           
 10571                           ;incstack = 0
 10572  003936  A274               	btfss	3956,1,c	;volatile
 10573  003938  D002               	goto	u4860
 10574  00393A  0E01               	movlw	1
 10575  00393C  0012               	return	
 10576  00393E                     u4860:
 10577  00393E  0E00               	movlw	0
 10578  003940  0012               	return	
 10579  003942                     __end_of_CANisRXwarningON:
 10580                           	opt stack 0
 10581                           tblptru	equ	0xFF8
 10582                           tblptrh	equ	0xFF7
 10583                           tblptrl	equ	0xFF6
 10584                           tablat	equ	0xFF5
 10585                           prodh	equ	0xFF4
 10586                           prodl	equ	0xFF3
 10587                           intcon	equ	0xFF2
 10588                           intcon2	equ	0xFF1
 10589                           postinc0	equ	0xFEE
 10590                           wreg	equ	0xFE8
 10591                           indf2	equ	0xFDF
 10592                           fsr2h	equ	0xFDA
 10593                           fsr2l	equ	0xFD9
 10594                           status	equ	0xFD8
 10595                           
 10596 ;; *************** function _ISR_bassa *****************
 10597 ;; Defined at:
 10598 ;;		line 71 in file "newmain.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;		None
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;		None
 10603 ;; Return value:  Size  Location     Type
 10604 ;;		None               void
 10605 ;; Registers used:
 10606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10607 ;; Tracked objects:
 10608 ;;		On entry : 0/0
 10609 ;;		On exit  : 0/0
 10610 ;;		Unchanged: 0/0
 10611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10612 ;;      Params:         0       0       0       0
 10613 ;;      Locals:         0       0       0       0
 10614 ;;      Temps:         19       0       0       0
 10615 ;;      Totals:        19       0       0       0
 10616 ;;Total ram usage:       19 bytes
 10617 ;; Hardware stack levels used:    1
 10618 ;; Hardware stack levels required when called:    3
 10619 ;; This function calls:
 10620 ;;		_CANisRxReady
 10621 ;;		_CANreceiveMessage
 10622 ;; This function is called by:
 10623 ;;		Interrupt level 1
 10624 ;; This function uses a non-reentrant model
 10625 ;;
 10626                           
 10627                           	psect	intcodelo
 10628  000018                     __pintcodelo:
 10629                           	opt stack 0
 10630  000018                     _ISR_bassa:
 10631                           	opt stack 24
 10632                           
 10633                           ;incstack = 0
 10634  000018  8046               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 10635  00001A  CFD8 F032          	movff	status,??_ISR_bassa+2
 10636  00001E  CFE8 F033          	movff	wreg,??_ISR_bassa+3
 10637  000022  CFE0 F034          	movff	bsr,??_ISR_bassa+4
 10638  000026  CFFA F035          	movff	pclath,??_ISR_bassa+5
 10639  00002A  CFFB F036          	movff	pclatu,??_ISR_bassa+6
 10640  00002E  CFE9 F037          	movff	fsr0l,??_ISR_bassa+7
 10641  000032  CFEA F038          	movff	fsr0h,??_ISR_bassa+8
 10642  000036  CFE1 F039          	movff	fsr1l,??_ISR_bassa+9
 10643  00003A  CFE2 F03A          	movff	fsr1h,??_ISR_bassa+10
 10644  00003E  CFD9 F03B          	movff	fsr2l,??_ISR_bassa+11
 10645  000042  CFDA F03C          	movff	fsr2h,??_ISR_bassa+12
 10646  000046  CFF3 F03D          	movff	prodl,??_ISR_bassa+13
 10647  00004A  CFF4 F03E          	movff	prodh,??_ISR_bassa+14
 10648  00004E  CFF6 F03F          	movff	tblptrl,??_ISR_bassa+15
 10649  000052  CFF7 F040          	movff	tblptrh,??_ISR_bassa+16
 10650  000056  CFF8 F041          	movff	tblptru,??_ISR_bassa+17
 10651  00005A  CFF5 F042          	movff	tablat,??_ISR_bassa+18
 10652                           
 10653                           ;newmain.c: 72: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 10654  00005E  A0A4               	btfss	4004,0,c	;volatile
 10655  000060  B2A4               	btfsc	4004,1,c	;volatile
 10656  000062  D001               	goto	i1l4739
 10657  000064  D04F               	goto	i1l4771
 10658  000066                     i1l4739:
 10659                           
 10660                           ;newmain.c: 73: if (CANisRxReady()) {
 10661  000066  EC72  F01C         	call	_CANisRxReady	;wreg free
 10662  00006A  0900               	iorlw	0
 10663  00006C  B4D8               	btfsc	status,2,c
 10664  00006E  D048               	goto	i1l4767
 10665                           
 10666                           ;newmain.c: 74: CANreceiveMessage(&msg);
 10667  000070  0E15               	movlw	low _msg
 10668  000072  6E24               	movwf	CANreceiveMessage@msg,c
 10669  000074  0E00               	movlw	high _msg
 10670  000076  6E25               	movwf	CANreceiveMessage@msg+1,c
 10671  000078  EC85  F00C         	call	_CANreceiveMessage	;wreg free
 10672                           
 10673                           ;newmain.c: 75: if (msg.RTR == 1) {
 10674  00007C  0423               	decf	_msg+14,w,c
 10675  00007E  A4D8               	btfss	status,2,c
 10676  000080  D00D               	goto	i1l4747
 10677                           
 10678                           ;newmain.c: 76: id = msg.identifier;
 10679  000082  C015  F0D1         	movff	_msg,_id
 10680  000086  C016  F0D2         	movff	_msg+1,_id+1
 10681  00008A  C017  F0D3         	movff	_msg+2,_id+2
 10682  00008E  C018  F0D4         	movff	_msg+3,_id+3
 10683                           
 10684                           ;newmain.c: 77: remote_frame = msg.RTR;
 10685  000092  A023               	btfss	_msg+14,0,c
 10686  000094  D002               	goto	i1u604_20
 10687  000096  8045               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
 10688  000098  D001               	goto	i1l4747
 10689  00009A                     i1u604_20:
 10690  00009A  9045               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
 10691  00009C                     i1l4747:
 10692                           
 10693                           ;newmain.c: 78: }
 10694                           ;newmain.c: 79: if (msg.identifier == 0b10000000000000000000000000000) {
 10695  00009C  0E10               	movlw	16
 10696  00009E  1818               	xorwf	_msg+3,w,c
 10697  0000A0  1015               	iorwf	_msg,w,c
 10698  0000A2  1016               	iorwf	_msg+1,w,c
 10699  0000A4  1017               	iorwf	_msg+2,w,c
 10700  0000A6  A4D8               	btfss	status,2,c
 10701  0000A8  D016               	goto	i1l4759
 10702                           
 10703                           ;newmain.c: 80: data_array[0] = theorySteering;
 10704  0000AA  C013  F0DF         	movff	_theorySteering,_data_array
 10705                           
 10706                           ;newmain.c: 81: if (theorySteering <= limiteDx) {
 10707  0000AE  5013               	movf	_theorySteering,w,c
 10708  0000B0  6E30               	movwf	??_ISR_bassa& (0+255),c
 10709  0000B2  6A31               	clrf	(??_ISR_bassa+1)& (0+255),c
 10710  0000B4  5030               	movf	??_ISR_bassa,w,c
 10711  0000B6  5C0B               	subwf	_limiteDx,w,c
 10712  0000B8  5031               	movf	??_ISR_bassa+1,w,c
 10713  0000BA  580C               	subwfb	_limiteDx+1,w,c
 10714  0000BC  B0D8               	btfsc	status,0,c
 10715                           
 10716                           ;newmain.c: 82: theorySteering = limiteDx;
 10717  0000BE  C00B  F013         	movff	_limiteDx,_theorySteering
 10718                           
 10719                           ;newmain.c: 83: }
 10720                           ;newmain.c: 84: if (theorySteering >= limiteSx) {
 10721  0000C2  5013               	movf	_theorySteering,w,c
 10722  0000C4  6E30               	movwf	??_ISR_bassa& (0+255),c
 10723  0000C6  6A31               	clrf	(??_ISR_bassa+1)& (0+255),c
 10724  0000C8  5043               	movf	_limiteSx,w,c
 10725  0000CA  5C30               	subwf	??_ISR_bassa,w,c
 10726  0000CC  5044               	movf	_limiteSx+1,w,c
 10727  0000CE  5831               	subwfb	??_ISR_bassa+1,w,c
 10728  0000D0  B0D8               	btfsc	status,0,c
 10729                           
 10730                           ;newmain.c: 85: theorySteering = limiteSx;
 10731  0000D2  C043  F013         	movff	_limiteSx,_theorySteering
 10732  0000D6                     i1l4759:
 10733                           
 10734                           ;newmain.c: 86: }
 10735                           ;newmain.c: 87: }
 10736                           ;newmain.c: 88: if (msg.identifier == 0b00000000000000000000000000011) {
 10737  0000D6  0E03               	movlw	3
 10738  0000D8  1815               	xorwf	_msg,w,c
 10739  0000DA  1016               	iorwf	_msg+1,w,c
 10740  0000DC  1017               	iorwf	_msg+2,w,c
 10741  0000DE  1018               	iorwf	_msg+3,w,c
 10742  0000E0  A4D8               	btfss	status,2,c
 10743  0000E2  D00E               	goto	i1l4767
 10744                           
 10745                           ;newmain.c: 90: theorySteering = msg.data[0];
 10746  0000E4  C019  F013         	movff	_msg+4,_theorySteering
 10747                           
 10748                           ;newmain.c: 91: currentSteering = theorySteering + calibration;
 10749  0000E8  5013               	movf	_theorySteering,w,c
 10750  0000EA  2409               	addwf	_calibration,w,c
 10751  0000EC  0100               	movlb	0	; () banked
 10752  0000EE  6FE7               	movwf	_currentSteering& (0+255),b
 10753                           
 10754                           ; BSR set to: 0
 10755                           ;newmain.c: 92: previousTimeCounter = timeCounter;
 10756  0000F0  C005  F0D5         	movff	_timeCounter,_previousTimeCounter
 10757  0000F4  C006  F0D6         	movff	_timeCounter+1,_previousTimeCounter+1
 10758  0000F8  C007  F0D7         	movff	_timeCounter+2,_previousTimeCounter+2
 10759  0000FC  C008  F0D8         	movff	_timeCounter+3,_previousTimeCounter+3
 10760  000100                     i1l4767:
 10761                           
 10762                           ;newmain.c: 93: }
 10763                           ;newmain.c: 94: }
 10764                           ;newmain.c: 95: PIR3bits.RXB0IF = 0;
 10765  000100  90A4               	bcf	4004,0,c	;volatile
 10766                           
 10767                           ;newmain.c: 96: PIR3bits.RXB1IF = 0;
 10768  000102  92A4               	bcf	4004,1,c	;volatile
 10769  000104                     i1l4771:
 10770                           
 10771                           ;newmain.c: 97: }
 10772                           ;newmain.c: 98: if (PIR2bits.TMR3IF) {
 10773  000104  A2A1               	btfss	4001,1,c	;volatile
 10774  000106  D00B               	goto	i1l647
 10775                           
 10776                           ;newmain.c: 99: timeCounter++;
 10777  000108  0E01               	movlw	1
 10778  00010A  2605               	addwf	_timeCounter,f,c
 10779  00010C  0E00               	movlw	0
 10780  00010E  2206               	addwfc	_timeCounter+1,f,c
 10781  000110  2207               	addwfc	_timeCounter+2,f,c
 10782  000112  2208               	addwfc	_timeCounter+3,f,c
 10783                           
 10784                           ;newmain.c: 100: TMR3H = 0x63;
 10785  000114  0E63               	movlw	99
 10786  000116  6EB3               	movwf	4019,c	;volatile
 10787                           
 10788                           ;newmain.c: 101: TMR3L = 0xC0;
 10789  000118  0EC0               	movlw	192
 10790  00011A  6EB2               	movwf	4018,c	;volatile
 10791                           
 10792                           ;newmain.c: 102: PIR2bits.TMR3IF = 0;
 10793  00011C  92A1               	bcf	4001,1,c	;volatile
 10794  00011E                     i1l647:
 10795  00011E  C042  FFF5         	movff	??_ISR_bassa+18,tablat
 10796  000122  C041  FFF8         	movff	??_ISR_bassa+17,tblptru
 10797  000126  C040  FFF7         	movff	??_ISR_bassa+16,tblptrh
 10798  00012A  C03F  FFF6         	movff	??_ISR_bassa+15,tblptrl
 10799  00012E  C03E  FFF4         	movff	??_ISR_bassa+14,prodh
 10800  000132  C03D  FFF3         	movff	??_ISR_bassa+13,prodl
 10801  000136  C03C  FFDA         	movff	??_ISR_bassa+12,fsr2h
 10802  00013A  C03B  FFD9         	movff	??_ISR_bassa+11,fsr2l
 10803  00013E  C03A  FFE2         	movff	??_ISR_bassa+10,fsr1h
 10804  000142  C039  FFE1         	movff	??_ISR_bassa+9,fsr1l
 10805  000146  C038  FFEA         	movff	??_ISR_bassa+8,fsr0h
 10806  00014A  C037  FFE9         	movff	??_ISR_bassa+7,fsr0l
 10807  00014E  C036  FFFB         	movff	??_ISR_bassa+6,pclatu
 10808  000152  C035  FFFA         	movff	??_ISR_bassa+5,pclath
 10809  000156  C034  FFE0         	movff	??_ISR_bassa+4,bsr
 10810  00015A  C033  FFE8         	movff	??_ISR_bassa+3,wreg
 10811  00015E  C032  FFD8         	movff	??_ISR_bassa+2,status
 10812  000162  9046               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 10813  000164  0010               	retfie	
 10814  000166                     __end_of_ISR_bassa:
 10815                           	opt stack 0
 10816                           pclatu	equ	0xFFB
 10817                           pclath	equ	0xFFA
 10818                           tblptru	equ	0xFF8
 10819                           tblptrh	equ	0xFF7
 10820                           tblptrl	equ	0xFF6
 10821                           tablat	equ	0xFF5
 10822                           prodh	equ	0xFF4
 10823                           prodl	equ	0xFF3
 10824                           intcon	equ	0xFF2
 10825                           intcon2	equ	0xFF1
 10826                           postinc0	equ	0xFEE
 10827                           fsr0h	equ	0xFEA
 10828                           fsr0l	equ	0xFE9
 10829                           wreg	equ	0xFE8
 10830                           fsr1h	equ	0xFE2
 10831                           fsr1l	equ	0xFE1
 10832                           bsr	equ	0xFE0
 10833                           indf2	equ	0xFDF
 10834                           fsr2h	equ	0xFDA
 10835                           fsr2l	equ	0xFD9
 10836                           status	equ	0xFD8
 10837                           
 10838 ;; *************** function _CANreceiveMessage *****************
 10839 ;; Defined at:
 10840 ;;		line 528 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 10841 ;; Parameters:    Size  Location     Type
 10842 ;;  msg             2    0[COMRAM] PTR struct .
 10843 ;;		 -> msg(15), 
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;  tamp            1   11[COMRAM] unsigned char 
 10846 ;;  error           1   10[COMRAM] unsigned char 
 10847 ;; Return value:  Size  Location     Type
 10848 ;;                  1    wreg      unsigned char 
 10849 ;; Registers used:
 10850 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10851 ;; Tracked objects:
 10852 ;;		On entry : 0/0
 10853 ;;		On exit  : 0/0
 10854 ;;		Unchanged: 0/0
 10855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10856 ;;      Params:         2       0       0       0
 10857 ;;      Locals:         2       0       0       0
 10858 ;;      Temps:          8       0       0       0
 10859 ;;      Totals:        12       0       0       0
 10860 ;;Total ram usage:       12 bytes
 10861 ;; Hardware stack levels used:    1
 10862 ;; Hardware stack levels required when called:    2
 10863 ;; This function calls:
 10864 ;;		Nothing
 10865 ;; This function is called by:
 10866 ;;		_ISR_bassa
 10867 ;; This function uses a non-reentrant model
 10868 ;;
 10869                           
 10870                           	psect	text28
 10871  00190A                     __ptext28:
 10872                           	opt stack 0
 10873  00190A                     _CANreceiveMessage:
 10874                           	opt stack 24
 10875                           
 10876                           ;inc\CANlib.h: 530: BYTE tamp;
 10877                           ;inc\CANlib.h: 531: BYTE error = 0;
 10878                           
 10879                           ;incstack = 0
 10880  00190A  0E00               	movlw	0
 10881  00190C  6E2E               	movwf	CANreceiveMessage@error,c
 10882                           
 10883                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 10884  00190E  BE74               	btfsc	3956,7,c	;volatile
 10885                           
 10886                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 10887  001910  802E               	bsf	CANreceiveMessage@error,0,c
 10888                           
 10889                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 10890  001912  BC74               	btfsc	3956,6,c	;volatile
 10891                           
 10892                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 10893  001914  822E               	bsf	CANreceiveMessage@error,1,c
 10894                           
 10895                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 10896  001916  010F               	movlb	15	; () banked
 10897  001918  AF50               	btfss	80,7,b	;volatile
 10898  00191A  D143               	goto	i1l414
 10899                           
 10900                           ; BSR set to: 15
 10901                           ;inc\CANlib.h: 541: {
 10902                           ;inc\CANlib.h: 542: msg->identifier = 0;
 10903  00191C  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 10904  001920  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 10905  001924  6ADE               	clrf	postinc2,c
 10906  001926  6ADE               	clrf	postinc2,c
 10907  001928  6ADE               	clrf	postinc2,c
 10908  00192A  6ADD               	clrf	postdec2,c
 10909                           
 10910                           ; BSR set to: 15
 10911                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 10912  00192C  EE20 F004          	lfsr	2,4
 10913  001930  5024               	movf	CANreceiveMessage@msg,w,c
 10914  001932  26D9               	addwf	fsr2l,f,c
 10915  001934  5025               	movf	CANreceiveMessage@msg+1,w,c
 10916  001936  22DA               	addwfc	fsr2h,f,c
 10917  001938  CF56 FFDF          	movff	3926,indf2	;volatile
 10918                           
 10919                           ; BSR set to: 15
 10920                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 10921  00193C  EE20 F005          	lfsr	2,5
 10922  001940  5024               	movf	CANreceiveMessage@msg,w,c
 10923  001942  26D9               	addwf	fsr2l,f,c
 10924  001944  5025               	movf	CANreceiveMessage@msg+1,w,c
 10925  001946  22DA               	addwfc	fsr2h,f,c
 10926  001948  CF57 FFDF          	movff	3927,indf2	;volatile
 10927                           
 10928                           ; BSR set to: 15
 10929                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 10930  00194C  EE20 F006          	lfsr	2,6
 10931  001950  5024               	movf	CANreceiveMessage@msg,w,c
 10932  001952  26D9               	addwf	fsr2l,f,c
 10933  001954  5025               	movf	CANreceiveMessage@msg+1,w,c
 10934  001956  22DA               	addwfc	fsr2h,f,c
 10935  001958  CF58 FFDF          	movff	3928,indf2	;volatile
 10936                           
 10937                           ; BSR set to: 15
 10938                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 10939  00195C  EE20 F007          	lfsr	2,7
 10940  001960  5024               	movf	CANreceiveMessage@msg,w,c
 10941  001962  26D9               	addwf	fsr2l,f,c
 10942  001964  5025               	movf	CANreceiveMessage@msg+1,w,c
 10943  001966  22DA               	addwfc	fsr2h,f,c
 10944  001968  CF59 FFDF          	movff	3929,indf2	;volatile
 10945                           
 10946                           ; BSR set to: 15
 10947                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 10948  00196C  EE20 F008          	lfsr	2,8
 10949  001970  5024               	movf	CANreceiveMessage@msg,w,c
 10950  001972  26D9               	addwf	fsr2l,f,c
 10951  001974  5025               	movf	CANreceiveMessage@msg+1,w,c
 10952  001976  22DA               	addwfc	fsr2h,f,c
 10953  001978  CF5A FFDF          	movff	3930,indf2	;volatile
 10954                           
 10955                           ; BSR set to: 15
 10956                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 10957  00197C  EE20 F009          	lfsr	2,9
 10958  001980  5024               	movf	CANreceiveMessage@msg,w,c
 10959  001982  26D9               	addwf	fsr2l,f,c
 10960  001984  5025               	movf	CANreceiveMessage@msg+1,w,c
 10961  001986  22DA               	addwfc	fsr2h,f,c
 10962  001988  CF5B FFDF          	movff	3931,indf2	;volatile
 10963                           
 10964                           ; BSR set to: 15
 10965                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 10966  00198C  EE20 F00A          	lfsr	2,10
 10967  001990  5024               	movf	CANreceiveMessage@msg,w,c
 10968  001992  26D9               	addwf	fsr2l,f,c
 10969  001994  5025               	movf	CANreceiveMessage@msg+1,w,c
 10970  001996  22DA               	addwfc	fsr2h,f,c
 10971  001998  CF5C FFDF          	movff	3932,indf2	;volatile
 10972                           
 10973                           ; BSR set to: 15
 10974                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 10975  00199C  EE20 F00B          	lfsr	2,11
 10976  0019A0  5024               	movf	CANreceiveMessage@msg,w,c
 10977  0019A2  26D9               	addwf	fsr2l,f,c
 10978  0019A4  5025               	movf	CANreceiveMessage@msg+1,w,c
 10979  0019A6  22DA               	addwfc	fsr2h,f,c
 10980  0019A8  CF5D FFDF          	movff	3933,indf2	;volatile
 10981                           
 10982                           ; BSR set to: 15
 10983                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 10984  0019AC  EE20 F00E          	lfsr	2,14
 10985  0019B0  5024               	movf	CANreceiveMessage@msg,w,c
 10986  0019B2  26D9               	addwf	fsr2l,f,c
 10987  0019B4  5025               	movf	CANreceiveMessage@msg+1,w,c
 10988  0019B6  22DA               	addwfc	fsr2h,f,c
 10989  0019B8  010F               	movlb	15	; () banked
 10990  0019BA  AD55               	btfss	85,6,b	;volatile
 10991  0019BC  D002               	goto	i1u464_20
 10992  0019BE  0E01               	movlw	1
 10993  0019C0  D001               	goto	i1u464_26
 10994  0019C2                     i1u464_20:
 10995  0019C2  0E00               	movlw	0
 10996  0019C4                     i1u464_26:
 10997  0019C4  6EDF               	movwf	indf2,c
 10998                           
 10999                           ; BSR set to: 15
 11000                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 11001  0019C6  EE20 F00D          	lfsr	2,13
 11002  0019CA  5024               	movf	CANreceiveMessage@msg,w,c
 11003  0019CC  26D9               	addwf	fsr2l,f,c
 11004  0019CE  5025               	movf	CANreceiveMessage@msg+1,w,c
 11005  0019D0  22DA               	addwfc	fsr2h,f,c
 11006  0019D2  010F               	movlb	15	; () banked
 11007  0019D4  5155               	movf	85,w,b	;volatile
 11008  0019D6  0B0F               	andlw	15
 11009  0019D8  6EDF               	movwf	indf2,c
 11010                           
 11011                           ; BSR set to: 15
 11012                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 11013  0019DA  EE20 F00C          	lfsr	2,12
 11014  0019DE  5024               	movf	CANreceiveMessage@msg,w,c
 11015  0019E0  26D9               	addwf	fsr2l,f,c
 11016  0019E2  5025               	movf	CANreceiveMessage@msg+1,w,c
 11017  0019E4  22DA               	addwfc	fsr2h,f,c
 11018  0019E6  010F               	movlb	15	; () banked
 11019  0019E8  A752               	btfss	82,3,b	;volatile
 11020  0019EA  D002               	goto	i1u465_20
 11021  0019EC  0E01               	movlw	1
 11022  0019EE  D001               	goto	i1u465_26
 11023  0019F0                     i1u465_20:
 11024  0019F0  0E00               	movlw	0
 11025  0019F2                     i1u465_26:
 11026  0019F2  6EDF               	movwf	indf2,c
 11027                           
 11028                           ; BSR set to: 15
 11029                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 11030  0019F4  010F               	movlb	15	; () banked
 11031  0019F6  B752               	btfsc	82,3,b	;volatile
 11032  0019F8  D044               	goto	i1l3919
 11033                           
 11034                           ; BSR set to: 15
 11035                           ;inc\CANlib.h: 559: {
 11036                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 11037  0019FA  CF51 F026          	movff	3921,??_CANreceiveMessage	;volatile
 11038  0019FE  6A27               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11039  001A00  6A28               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11040  001A02  6A29               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11041  001A04  0E03               	movlw	3
 11042  001A06                     i1u467_25:
 11043  001A06  90D8               	bcf	status,0,c
 11044  001A08  3626               	rlcf	??_CANreceiveMessage,f,c
 11045  001A0A  3627               	rlcf	??_CANreceiveMessage+1,f,c
 11046  001A0C  3628               	rlcf	??_CANreceiveMessage+2,f,c
 11047  001A0E  3629               	rlcf	??_CANreceiveMessage+3,f,c
 11048  001A10  2EE8               	decfsz	wreg,f,c
 11049  001A12  D7F9               	goto	i1u467_25
 11050  001A14  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11051  001A18  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11052  001A1C  C026  FFDE         	movff	??_CANreceiveMessage,postinc2
 11053  001A20  C027  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 11054  001A24  C028  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 11055  001A28  C029  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 11056                           
 11057                           ; BSR set to: 15
 11058                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 11059  001A2C  010F               	movlb	15	; () banked
 11060  001A2E  3952               	swapf	82,w,b	;volatile
 11061  001A30  42E8               	rrncf	wreg,f,c
 11062  001A32  0B07               	andlw	7
 11063  001A34  0B07               	andlw	7
 11064  001A36  6E2F               	movwf	CANreceiveMessage@tamp,c
 11065                           
 11066                           ; BSR set to: 15
 11067                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 11068  001A38  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11069  001A3C  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11070  001A40  CFDE F026          	movff	postinc2,??_CANreceiveMessage
 11071  001A44  CFDE F027          	movff	postinc2,??_CANreceiveMessage+1
 11072  001A48  CFDE F028          	movff	postinc2,??_CANreceiveMessage+2
 11073  001A4C  CFDE F029          	movff	postinc2,??_CANreceiveMessage+3
 11074  001A50  502F               	movf	CANreceiveMessage@tamp,w,c
 11075  001A52  2426               	addwf	??_CANreceiveMessage,w,c
 11076  001A54  6E2A               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 11077  001A56  0E00               	movlw	0
 11078  001A58  2027               	addwfc	??_CANreceiveMessage+1,w,c
 11079  001A5A  6E2B               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 11080  001A5C  0E00               	movlw	0
 11081  001A5E  2028               	addwfc	??_CANreceiveMessage+2,w,c
 11082  001A60  6E2C               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 11083  001A62  0E00               	movlw	0
 11084  001A64  2029               	addwfc	??_CANreceiveMessage+3,w,c
 11085  001A66  6E2D               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 11086  001A68  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11087  001A6C  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11088  001A70  C02A  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 11089  001A74  C02B  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 11090  001A78  C02C  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 11091  001A7C  C02D  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 11092                           
 11093                           ;inc\CANlib.h: 563: }
 11094  001A80  D08D               	goto	i1l3945
 11095  001A82                     i1l3919:
 11096                           
 11097                           ; BSR set to: 15
 11098                           ;inc\CANlib.h: 564: else
 11099                           ;inc\CANlib.h: 565: {
 11100                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 11101  001A82  CF54 F026          	movff	3924,??_CANreceiveMessage	;volatile
 11102  001A86  6A27               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11103  001A88  6A28               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11104  001A8A  6A29               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11105  001A8C  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11106  001A90  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11107  001A94  C026  FFDE         	movff	??_CANreceiveMessage,postinc2
 11108  001A98  C027  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 11109  001A9C  C028  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 11110  001AA0  C029  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 11111                           
 11112                           ; BSR set to: 15
 11113                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 11114  001AA4  CF53 F026          	movff	3923,??_CANreceiveMessage	;volatile
 11115  001AA8  6A27               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11116  001AAA  6A28               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11117  001AAC  6A29               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11118  001AAE  C028  F029         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 11119  001AB2  C027  F028         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 11120  001AB6  C026  F027         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 11121  001ABA  6A26               	clrf	??_CANreceiveMessage,c
 11122  001ABC  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11123  001AC0  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11124  001AC4  5026               	movf	??_CANreceiveMessage,w,c
 11125  001AC6  26DE               	addwf	postinc2,f,c
 11126  001AC8  5027               	movf	??_CANreceiveMessage+1,w,c
 11127  001ACA  22DE               	addwfc	postinc2,f,c
 11128  001ACC  5028               	movf	??_CANreceiveMessage+2,w,c
 11129  001ACE  22DE               	addwfc	postinc2,f,c
 11130  001AD0  5029               	movf	??_CANreceiveMessage+3,w,c
 11131  001AD2  22DE               	addwfc	postinc2,f,c
 11132                           
 11133                           ; BSR set to: 15
 11134                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 11135  001AD4  010F               	movlb	15	; () banked
 11136  001AD6  A152               	btfss	82,0,b	;volatile
 11137  001AD8  D00C               	goto	i1l3927
 11138                           
 11139                           ; BSR set to: 15
 11140                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 11141  001ADA  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11142  001ADE  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11143  001AE2  0E00               	movlw	0
 11144  001AE4  12DE               	iorwf	postinc2,f,c
 11145  001AE6  0E00               	movlw	0
 11146  001AE8  12DE               	iorwf	postinc2,f,c
 11147  001AEA  0E01               	movlw	1
 11148  001AEC  12DE               	iorwf	postinc2,f,c
 11149  001AEE  0E00               	movlw	0
 11150  001AF0  12DE               	iorwf	postinc2,f,c
 11151  001AF2                     i1l3927:
 11152                           
 11153                           ; BSR set to: 15
 11154                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 11155  001AF2  010F               	movlb	15	; () banked
 11156  001AF4  A352               	btfss	82,1,b	;volatile
 11157  001AF6  D00C               	goto	i1l3931
 11158                           
 11159                           ; BSR set to: 15
 11160                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 11161  001AF8  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11162  001AFC  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11163  001B00  0E00               	movlw	0
 11164  001B02  12DE               	iorwf	postinc2,f,c
 11165  001B04  0E00               	movlw	0
 11166  001B06  12DE               	iorwf	postinc2,f,c
 11167  001B08  0E02               	movlw	2
 11168  001B0A  12DE               	iorwf	postinc2,f,c
 11169  001B0C  0E00               	movlw	0
 11170  001B0E  12DE               	iorwf	postinc2,f,c
 11171  001B10                     i1l3931:
 11172                           
 11173                           ; BSR set to: 15
 11174                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 11175  001B10  010F               	movlb	15	; () banked
 11176  001B12  AB52               	btfss	82,5,b	;volatile
 11177  001B14  D00C               	goto	i1l3935
 11178                           
 11179                           ; BSR set to: 15
 11180                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 11181  001B16  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11182  001B1A  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11183  001B1E  0E00               	movlw	0
 11184  001B20  12DE               	iorwf	postinc2,f,c
 11185  001B22  0E00               	movlw	0
 11186  001B24  12DE               	iorwf	postinc2,f,c
 11187  001B26  0E04               	movlw	4
 11188  001B28  12DE               	iorwf	postinc2,f,c
 11189  001B2A  0E00               	movlw	0
 11190  001B2C  12DE               	iorwf	postinc2,f,c
 11191  001B2E                     i1l3935:
 11192                           
 11193                           ; BSR set to: 15
 11194                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 11195  001B2E  010F               	movlb	15	; () banked
 11196  001B30  AD52               	btfss	82,6,b	;volatile
 11197  001B32  D00C               	goto	i1l3939
 11198                           
 11199                           ; BSR set to: 15
 11200                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 11201  001B34  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11202  001B38  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11203  001B3C  0E00               	movlw	0
 11204  001B3E  12DE               	iorwf	postinc2,f,c
 11205  001B40  0E00               	movlw	0
 11206  001B42  12DE               	iorwf	postinc2,f,c
 11207  001B44  0E08               	movlw	8
 11208  001B46  12DE               	iorwf	postinc2,f,c
 11209  001B48  0E00               	movlw	0
 11210  001B4A  12DE               	iorwf	postinc2,f,c
 11211  001B4C                     i1l3939:
 11212                           
 11213                           ; BSR set to: 15
 11214                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 11215  001B4C  010F               	movlb	15	; () banked
 11216  001B4E  AF52               	btfss	82,7,b	;volatile
 11217  001B50  D00C               	goto	i1l3943
 11218                           
 11219                           ; BSR set to: 15
 11220                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 11221  001B52  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11222  001B56  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11223  001B5A  0E00               	movlw	0
 11224  001B5C  12DE               	iorwf	postinc2,f,c
 11225  001B5E  0E00               	movlw	0
 11226  001B60  12DE               	iorwf	postinc2,f,c
 11227  001B62  0E10               	movlw	16
 11228  001B64  12DE               	iorwf	postinc2,f,c
 11229  001B66  0E00               	movlw	0
 11230  001B68  12DE               	iorwf	postinc2,f,c
 11231  001B6A                     i1l3943:
 11232                           
 11233                           ; BSR set to: 15
 11234                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 11235  001B6A  CF51 F026          	movff	3921,??_CANreceiveMessage	;volatile
 11236  001B6E  6A27               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11237  001B70  6A28               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11238  001B72  6A29               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11239  001B74  0E15               	movlw	21
 11240  001B76                     i1u473_25:
 11241  001B76  90D8               	bcf	status,0,c
 11242  001B78  3626               	rlcf	??_CANreceiveMessage,f,c
 11243  001B7A  3627               	rlcf	??_CANreceiveMessage+1,f,c
 11244  001B7C  3628               	rlcf	??_CANreceiveMessage+2,f,c
 11245  001B7E  3629               	rlcf	??_CANreceiveMessage+3,f,c
 11246  001B80  2EE8               	decfsz	wreg,f,c
 11247  001B82  D7F9               	goto	i1u473_25
 11248  001B84  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11249  001B88  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11250  001B8C  5026               	movf	??_CANreceiveMessage,w,c
 11251  001B8E  12DE               	iorwf	postinc2,f,c
 11252  001B90  5027               	movf	??_CANreceiveMessage+1,w,c
 11253  001B92  12DE               	iorwf	postinc2,f,c
 11254  001B94  5028               	movf	??_CANreceiveMessage+2,w,c
 11255  001B96  12DE               	iorwf	postinc2,f,c
 11256  001B98  5029               	movf	??_CANreceiveMessage+3,w,c
 11257  001B9A  12DE               	iorwf	postinc2,f,c
 11258  001B9C                     i1l3945:
 11259                           
 11260                           ; BSR set to: 15
 11261                           ;inc\CANlib.h: 581: }
 11262                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 11263  001B9C  010F               	movlb	15	; () banked
 11264  001B9E  9F50               	bcf	80,7,b	;volatile
 11265                           
 11266                           ; BSR set to: 15
 11267                           ;inc\CANlib.h: 584: return (error);
 11268                           ;	Return value of _CANreceiveMessage is never used
 11269  001BA0  0012               	return	
 11270  001BA2                     i1l414:
 11271                           
 11272                           ; BSR set to: 15
 11273                           ;inc\CANlib.h: 585: }
 11274                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 11275  001BA2  AE60               	btfss	3936,7,c	;volatile
 11276  001BA4  0012               	return	
 11277                           
 11278                           ; BSR set to: 15
 11279                           ;inc\CANlib.h: 588: {
 11280                           ;inc\CANlib.h: 589: msg->identifier = 0;
 11281  001BA6  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11282  001BAA  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11283  001BAE  6ADE               	clrf	postinc2,c
 11284  001BB0  6ADE               	clrf	postinc2,c
 11285  001BB2  6ADE               	clrf	postinc2,c
 11286  001BB4  6ADD               	clrf	postdec2,c
 11287                           
 11288                           ; BSR set to: 15
 11289                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 11290  001BB6  EE20 F004          	lfsr	2,4
 11291  001BBA  5024               	movf	CANreceiveMessage@msg,w,c
 11292  001BBC  26D9               	addwf	fsr2l,f,c
 11293  001BBE  5025               	movf	CANreceiveMessage@msg+1,w,c
 11294  001BC0  22DA               	addwfc	fsr2h,f,c
 11295  001BC2  CF66 FFDF          	movff	3942,indf2	;volatile
 11296                           
 11297                           ; BSR set to: 15
 11298                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 11299  001BC6  EE20 F005          	lfsr	2,5
 11300  001BCA  5024               	movf	CANreceiveMessage@msg,w,c
 11301  001BCC  26D9               	addwf	fsr2l,f,c
 11302  001BCE  5025               	movf	CANreceiveMessage@msg+1,w,c
 11303  001BD0  22DA               	addwfc	fsr2h,f,c
 11304  001BD2  CF67 FFDF          	movff	3943,indf2	;volatile
 11305                           
 11306                           ; BSR set to: 15
 11307                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 11308  001BD6  EE20 F006          	lfsr	2,6
 11309  001BDA  5024               	movf	CANreceiveMessage@msg,w,c
 11310  001BDC  26D9               	addwf	fsr2l,f,c
 11311  001BDE  5025               	movf	CANreceiveMessage@msg+1,w,c
 11312  001BE0  22DA               	addwfc	fsr2h,f,c
 11313  001BE2  CF68 FFDF          	movff	3944,indf2	;volatile
 11314                           
 11315                           ; BSR set to: 15
 11316                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 11317  001BE6  EE20 F007          	lfsr	2,7
 11318  001BEA  5024               	movf	CANreceiveMessage@msg,w,c
 11319  001BEC  26D9               	addwf	fsr2l,f,c
 11320  001BEE  5025               	movf	CANreceiveMessage@msg+1,w,c
 11321  001BF0  22DA               	addwfc	fsr2h,f,c
 11322  001BF2  CF69 FFDF          	movff	3945,indf2	;volatile
 11323                           
 11324                           ; BSR set to: 15
 11325                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 11326  001BF6  EE20 F008          	lfsr	2,8
 11327  001BFA  5024               	movf	CANreceiveMessage@msg,w,c
 11328  001BFC  26D9               	addwf	fsr2l,f,c
 11329  001BFE  5025               	movf	CANreceiveMessage@msg+1,w,c
 11330  001C00  22DA               	addwfc	fsr2h,f,c
 11331  001C02  CF6A FFDF          	movff	3946,indf2	;volatile
 11332                           
 11333                           ; BSR set to: 15
 11334                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 11335  001C06  EE20 F009          	lfsr	2,9
 11336  001C0A  5024               	movf	CANreceiveMessage@msg,w,c
 11337  001C0C  26D9               	addwf	fsr2l,f,c
 11338  001C0E  5025               	movf	CANreceiveMessage@msg+1,w,c
 11339  001C10  22DA               	addwfc	fsr2h,f,c
 11340  001C12  CF6B FFDF          	movff	3947,indf2	;volatile
 11341                           
 11342                           ; BSR set to: 15
 11343                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 11344  001C16  EE20 F00A          	lfsr	2,10
 11345  001C1A  5024               	movf	CANreceiveMessage@msg,w,c
 11346  001C1C  26D9               	addwf	fsr2l,f,c
 11347  001C1E  5025               	movf	CANreceiveMessage@msg+1,w,c
 11348  001C20  22DA               	addwfc	fsr2h,f,c
 11349  001C22  CF6C FFDF          	movff	3948,indf2	;volatile
 11350                           
 11351                           ; BSR set to: 15
 11352                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 11353  001C26  EE20 F00B          	lfsr	2,11
 11354  001C2A  5024               	movf	CANreceiveMessage@msg,w,c
 11355  001C2C  26D9               	addwf	fsr2l,f,c
 11356  001C2E  5025               	movf	CANreceiveMessage@msg+1,w,c
 11357  001C30  22DA               	addwfc	fsr2h,f,c
 11358  001C32  CF6D FFDF          	movff	3949,indf2	;volatile
 11359                           
 11360                           ; BSR set to: 15
 11361                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 11362  001C36  EE20 F00E          	lfsr	2,14
 11363  001C3A  5024               	movf	CANreceiveMessage@msg,w,c
 11364  001C3C  26D9               	addwf	fsr2l,f,c
 11365  001C3E  5025               	movf	CANreceiveMessage@msg+1,w,c
 11366  001C40  22DA               	addwfc	fsr2h,f,c
 11367  001C42  AC65               	btfss	3941,6,c	;volatile
 11368  001C44  D002               	goto	i1u475_20
 11369  001C46  0E01               	movlw	1
 11370  001C48  D001               	goto	i1u475_26
 11371  001C4A                     i1u475_20:
 11372  001C4A  0E00               	movlw	0
 11373  001C4C                     i1u475_26:
 11374  001C4C  6EDF               	movwf	indf2,c
 11375                           
 11376                           ; BSR set to: 15
 11377                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 11378  001C4E  EE20 F00D          	lfsr	2,13
 11379  001C52  5024               	movf	CANreceiveMessage@msg,w,c
 11380  001C54  26D9               	addwf	fsr2l,f,c
 11381  001C56  5025               	movf	CANreceiveMessage@msg+1,w,c
 11382  001C58  22DA               	addwfc	fsr2h,f,c
 11383  001C5A  5065               	movf	3941,w,c	;volatile
 11384  001C5C  0B0F               	andlw	15
 11385  001C5E  6EDF               	movwf	indf2,c
 11386                           
 11387                           ; BSR set to: 15
 11388                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 11389  001C60  EE20 F00C          	lfsr	2,12
 11390  001C64  5024               	movf	CANreceiveMessage@msg,w,c
 11391  001C66  26D9               	addwf	fsr2l,f,c
 11392  001C68  5025               	movf	CANreceiveMessage@msg+1,w,c
 11393  001C6A  22DA               	addwfc	fsr2h,f,c
 11394  001C6C  A662               	btfss	3938,3,c	;volatile
 11395  001C6E  D002               	goto	i1u476_20
 11396  001C70  0E01               	movlw	1
 11397  001C72  D001               	goto	i1u476_26
 11398  001C74                     i1u476_20:
 11399  001C74  0E00               	movlw	0
 11400  001C76                     i1u476_26:
 11401  001C76  6EDF               	movwf	indf2,c
 11402                           
 11403                           ; BSR set to: 15
 11404                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 11405  001C78  B662               	btfsc	3938,3,c	;volatile
 11406  001C7A  D043               	goto	i1l3981
 11407                           
 11408                           ; BSR set to: 15
 11409                           ;inc\CANlib.h: 606: {
 11410                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 11411  001C7C  CF61 F026          	movff	3937,??_CANreceiveMessage	;volatile
 11412  001C80  6A27               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11413  001C82  6A28               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11414  001C84  6A29               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11415  001C86  0E03               	movlw	3
 11416  001C88                     i1u478_25:
 11417  001C88  90D8               	bcf	status,0,c
 11418  001C8A  3626               	rlcf	??_CANreceiveMessage,f,c
 11419  001C8C  3627               	rlcf	??_CANreceiveMessage+1,f,c
 11420  001C8E  3628               	rlcf	??_CANreceiveMessage+2,f,c
 11421  001C90  3629               	rlcf	??_CANreceiveMessage+3,f,c
 11422  001C92  2EE8               	decfsz	wreg,f,c
 11423  001C94  D7F9               	goto	i1u478_25
 11424  001C96  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11425  001C9A  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11426  001C9E  C026  FFDE         	movff	??_CANreceiveMessage,postinc2
 11427  001CA2  C027  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 11428  001CA6  C028  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 11429  001CAA  C029  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 11430                           
 11431                           ; BSR set to: 15
 11432                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 11433  001CAE  3862               	swapf	3938,w,c	;volatile
 11434  001CB0  42E8               	rrncf	wreg,f,c
 11435  001CB2  0B07               	andlw	7
 11436  001CB4  0B07               	andlw	7
 11437  001CB6  6E2F               	movwf	CANreceiveMessage@tamp,c
 11438                           
 11439                           ; BSR set to: 15
 11440                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 11441  001CB8  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11442  001CBC  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11443  001CC0  CFDE F026          	movff	postinc2,??_CANreceiveMessage
 11444  001CC4  CFDE F027          	movff	postinc2,??_CANreceiveMessage+1
 11445  001CC8  CFDE F028          	movff	postinc2,??_CANreceiveMessage+2
 11446  001CCC  CFDE F029          	movff	postinc2,??_CANreceiveMessage+3
 11447  001CD0  502F               	movf	CANreceiveMessage@tamp,w,c
 11448  001CD2  2426               	addwf	??_CANreceiveMessage,w,c
 11449  001CD4  6E2A               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 11450  001CD6  0E00               	movlw	0
 11451  001CD8  2027               	addwfc	??_CANreceiveMessage+1,w,c
 11452  001CDA  6E2B               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 11453  001CDC  0E00               	movlw	0
 11454  001CDE  2028               	addwfc	??_CANreceiveMessage+2,w,c
 11455  001CE0  6E2C               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 11456  001CE2  0E00               	movlw	0
 11457  001CE4  2029               	addwfc	??_CANreceiveMessage+3,w,c
 11458  001CE6  6E2D               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 11459  001CE8  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11460  001CEC  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11461  001CF0  C02A  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 11462  001CF4  C02B  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 11463  001CF8  C02C  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 11464  001CFC  C02D  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 11465                           
 11466                           ;inc\CANlib.h: 610: }
 11467  001D00  D088               	goto	i1l4007
 11468  001D02                     i1l3981:
 11469                           
 11470                           ; BSR set to: 15
 11471                           ;inc\CANlib.h: 611: else
 11472                           ;inc\CANlib.h: 612: {
 11473                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 11474  001D02  CF64 F026          	movff	3940,??_CANreceiveMessage	;volatile
 11475  001D06  6A27               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11476  001D08  6A28               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11477  001D0A  6A29               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11478  001D0C  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11479  001D10  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11480  001D14  C026  FFDE         	movff	??_CANreceiveMessage,postinc2
 11481  001D18  C027  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 11482  001D1C  C028  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 11483  001D20  C029  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 11484                           
 11485                           ; BSR set to: 15
 11486                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 11487  001D24  CF63 F026          	movff	3939,??_CANreceiveMessage	;volatile
 11488  001D28  6A27               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11489  001D2A  6A28               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11490  001D2C  6A29               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11491  001D2E  C028  F029         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 11492  001D32  C027  F028         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 11493  001D36  C026  F027         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 11494  001D3A  6A26               	clrf	??_CANreceiveMessage,c
 11495  001D3C  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11496  001D40  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11497  001D44  5026               	movf	??_CANreceiveMessage,w,c
 11498  001D46  26DE               	addwf	postinc2,f,c
 11499  001D48  5027               	movf	??_CANreceiveMessage+1,w,c
 11500  001D4A  22DE               	addwfc	postinc2,f,c
 11501  001D4C  5028               	movf	??_CANreceiveMessage+2,w,c
 11502  001D4E  22DE               	addwfc	postinc2,f,c
 11503  001D50  5029               	movf	??_CANreceiveMessage+3,w,c
 11504  001D52  22DE               	addwfc	postinc2,f,c
 11505                           
 11506                           ; BSR set to: 15
 11507                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 11508  001D54  A062               	btfss	3938,0,c	;volatile
 11509  001D56  D00C               	goto	i1l3989
 11510                           
 11511                           ; BSR set to: 15
 11512                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 11513  001D58  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11514  001D5C  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11515  001D60  0E00               	movlw	0
 11516  001D62  12DE               	iorwf	postinc2,f,c
 11517  001D64  0E00               	movlw	0
 11518  001D66  12DE               	iorwf	postinc2,f,c
 11519  001D68  0E01               	movlw	1
 11520  001D6A  12DE               	iorwf	postinc2,f,c
 11521  001D6C  0E00               	movlw	0
 11522  001D6E  12DE               	iorwf	postinc2,f,c
 11523  001D70                     i1l3989:
 11524                           
 11525                           ; BSR set to: 15
 11526                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 11527  001D70  A262               	btfss	3938,1,c	;volatile
 11528  001D72  D00C               	goto	i1l3993
 11529                           
 11530                           ; BSR set to: 15
 11531                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 11532  001D74  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11533  001D78  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11534  001D7C  0E00               	movlw	0
 11535  001D7E  12DE               	iorwf	postinc2,f,c
 11536  001D80  0E00               	movlw	0
 11537  001D82  12DE               	iorwf	postinc2,f,c
 11538  001D84  0E02               	movlw	2
 11539  001D86  12DE               	iorwf	postinc2,f,c
 11540  001D88  0E00               	movlw	0
 11541  001D8A  12DE               	iorwf	postinc2,f,c
 11542  001D8C                     i1l3993:
 11543                           
 11544                           ; BSR set to: 15
 11545                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 11546  001D8C  AA62               	btfss	3938,5,c	;volatile
 11547  001D8E  D00C               	goto	i1l3997
 11548                           
 11549                           ; BSR set to: 15
 11550                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 11551  001D90  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11552  001D94  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11553  001D98  0E00               	movlw	0
 11554  001D9A  12DE               	iorwf	postinc2,f,c
 11555  001D9C  0E00               	movlw	0
 11556  001D9E  12DE               	iorwf	postinc2,f,c
 11557  001DA0  0E04               	movlw	4
 11558  001DA2  12DE               	iorwf	postinc2,f,c
 11559  001DA4  0E00               	movlw	0
 11560  001DA6  12DE               	iorwf	postinc2,f,c
 11561  001DA8                     i1l3997:
 11562                           
 11563                           ; BSR set to: 15
 11564                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 11565  001DA8  AC62               	btfss	3938,6,c	;volatile
 11566  001DAA  D00C               	goto	i1l4001
 11567                           
 11568                           ; BSR set to: 15
 11569                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 11570  001DAC  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11571  001DB0  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11572  001DB4  0E00               	movlw	0
 11573  001DB6  12DE               	iorwf	postinc2,f,c
 11574  001DB8  0E00               	movlw	0
 11575  001DBA  12DE               	iorwf	postinc2,f,c
 11576  001DBC  0E08               	movlw	8
 11577  001DBE  12DE               	iorwf	postinc2,f,c
 11578  001DC0  0E00               	movlw	0
 11579  001DC2  12DE               	iorwf	postinc2,f,c
 11580  001DC4                     i1l4001:
 11581                           
 11582                           ; BSR set to: 15
 11583                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 11584  001DC4  AE62               	btfss	3938,7,c	;volatile
 11585  001DC6  D00C               	goto	i1l4005
 11586                           
 11587                           ; BSR set to: 15
 11588                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 11589  001DC8  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11590  001DCC  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11591  001DD0  0E00               	movlw	0
 11592  001DD2  12DE               	iorwf	postinc2,f,c
 11593  001DD4  0E00               	movlw	0
 11594  001DD6  12DE               	iorwf	postinc2,f,c
 11595  001DD8  0E10               	movlw	16
 11596  001DDA  12DE               	iorwf	postinc2,f,c
 11597  001DDC  0E00               	movlw	0
 11598  001DDE  12DE               	iorwf	postinc2,f,c
 11599  001DE0                     i1l4005:
 11600                           
 11601                           ; BSR set to: 15
 11602                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 11603  001DE0  CF61 F026          	movff	3937,??_CANreceiveMessage	;volatile
 11604  001DE4  6A27               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11605  001DE6  6A28               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11606  001DE8  6A29               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11607  001DEA  0E15               	movlw	21
 11608  001DEC                     i1u484_25:
 11609  001DEC  90D8               	bcf	status,0,c
 11610  001DEE  3626               	rlcf	??_CANreceiveMessage,f,c
 11611  001DF0  3627               	rlcf	??_CANreceiveMessage+1,f,c
 11612  001DF2  3628               	rlcf	??_CANreceiveMessage+2,f,c
 11613  001DF4  3629               	rlcf	??_CANreceiveMessage+3,f,c
 11614  001DF6  2EE8               	decfsz	wreg,f,c
 11615  001DF8  D7F9               	goto	i1u484_25
 11616  001DFA  C024  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11617  001DFE  C025  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11618  001E02  5026               	movf	??_CANreceiveMessage,w,c
 11619  001E04  12DE               	iorwf	postinc2,f,c
 11620  001E06  5027               	movf	??_CANreceiveMessage+1,w,c
 11621  001E08  12DE               	iorwf	postinc2,f,c
 11622  001E0A  5028               	movf	??_CANreceiveMessage+2,w,c
 11623  001E0C  12DE               	iorwf	postinc2,f,c
 11624  001E0E  5029               	movf	??_CANreceiveMessage+3,w,c
 11625  001E10  12DE               	iorwf	postinc2,f,c
 11626  001E12                     i1l4007:
 11627                           
 11628                           ; BSR set to: 15
 11629                           ;inc\CANlib.h: 629: }
 11630                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 11631  001E12  9E60               	bcf	3936,7,c	;volatile
 11632                           
 11633                           ; BSR set to: 15
 11634                           ;inc\CANlib.h: 632: return (error);
 11635                           ;	Return value of _CANreceiveMessage is never used
 11636  001E14  0012               	return	
 11637  001E16                     __end_of_CANreceiveMessage:
 11638                           	opt stack 0
 11639                           pclatu	equ	0xFFB
 11640                           pclath	equ	0xFFA
 11641                           tblptru	equ	0xFF8
 11642                           tblptrh	equ	0xFF7
 11643                           tblptrl	equ	0xFF6
 11644                           tablat	equ	0xFF5
 11645                           prodh	equ	0xFF4
 11646                           prodl	equ	0xFF3
 11647                           intcon	equ	0xFF2
 11648                           intcon2	equ	0xFF1
 11649                           postinc0	equ	0xFEE
 11650                           fsr0h	equ	0xFEA
 11651                           fsr0l	equ	0xFE9
 11652                           wreg	equ	0xFE8
 11653                           fsr1h	equ	0xFE2
 11654                           fsr1l	equ	0xFE1
 11655                           bsr	equ	0xFE0
 11656                           indf2	equ	0xFDF
 11657                           postinc2	equ	0xFDE
 11658                           postdec2	equ	0xFDD
 11659                           fsr2h	equ	0xFDA
 11660                           fsr2l	equ	0xFD9
 11661                           status	equ	0xFD8
 11662                           
 11663 ;; *************** function _CANisRxReady *****************
 11664 ;; Defined at:
 11665 ;;		line 1163 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 11666 ;; Parameters:    Size  Location     Type
 11667 ;;		None
 11668 ;; Auto vars:     Size  Location     Type
 11669 ;;		None
 11670 ;; Return value:  Size  Location     Type
 11671 ;;                  1    wreg      unsigned char 
 11672 ;; Registers used:
 11673 ;;		wreg, status,2
 11674 ;; Tracked objects:
 11675 ;;		On entry : 0/0
 11676 ;;		On exit  : 0/0
 11677 ;;		Unchanged: 0/0
 11678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11679 ;;      Params:         0       0       0       0
 11680 ;;      Locals:         1       0       0       0
 11681 ;;      Temps:          0       0       0       0
 11682 ;;      Totals:         1       0       0       0
 11683 ;;Total ram usage:        1 bytes
 11684 ;; Hardware stack levels used:    1
 11685 ;; Hardware stack levels required when called:    2
 11686 ;; This function calls:
 11687 ;;		Nothing
 11688 ;; This function is called by:
 11689 ;;		_ISR_bassa
 11690 ;; This function uses a non-reentrant model
 11691 ;;
 11692                           
 11693                           	psect	text29
 11694  0038E4                     __ptext29:
 11695                           	opt stack 0
 11696  0038E4                     _CANisRxReady:
 11697                           	opt stack 24
 11698                           
 11699                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 11700                           
 11701                           ; BSR set to: 15
 11702                           ;incstack = 0
 11703  0038E4  0E01               	movlw	1
 11704  0038E6  6E24               	movwf	_CANisRxReady$2915,c
 11705  0038E8  BE60               	btfsc	3936,7,c	;volatile
 11706  0038EA  D005               	goto	i1l565
 11707  0038EC  010F               	movlb	15	; () banked
 11708  0038EE  BF50               	btfsc	80,7,b	;volatile
 11709  0038F0  D002               	goto	i1l565
 11710                           
 11711                           ; BSR set to: 15
 11712  0038F2  0E00               	movlw	0
 11713  0038F4  6E24               	movwf	_CANisRxReady$2915,c
 11714  0038F6                     i1l565:
 11715  0038F6  5024               	movf	_CANisRxReady$2915,w,c
 11716  0038F8  0012               	return	
 11717  0038FA                     __end_of_CANisRxReady:
 11718                           	opt stack 0
 11719                           pclatu	equ	0xFFB
 11720                           pclath	equ	0xFFA
 11721                           tblptru	equ	0xFF8
 11722                           tblptrh	equ	0xFF7
 11723                           tblptrl	equ	0xFF6
 11724                           tablat	equ	0xFF5
 11725                           prodh	equ	0xFF4
 11726                           prodl	equ	0xFF3
 11727                           intcon	equ	0xFF2
 11728                           intcon2	equ	0xFF1
 11729                           postinc0	equ	0xFEE
 11730                           fsr0h	equ	0xFEA
 11731                           fsr0l	equ	0xFE9
 11732                           wreg	equ	0xFE8
 11733                           fsr1h	equ	0xFE2
 11734                           fsr1l	equ	0xFE1
 11735                           bsr	equ	0xFE0
 11736                           indf2	equ	0xFDF
 11737                           postinc2	equ	0xFDE
 11738                           postdec2	equ	0xFDD
 11739                           fsr2h	equ	0xFDA
 11740                           fsr2l	equ	0xFD9
 11741                           status	equ	0xFD8
 11742                           
 11743 ;; *************** function _ISR_alta *****************
 11744 ;; Defined at:
 11745 ;;		line 53 in file "newmain.c"
 11746 ;; Parameters:    Size  Location     Type
 11747 ;;		None
 11748 ;; Auto vars:     Size  Location     Type
 11749 ;;		None
 11750 ;; Return value:  Size  Location     Type
 11751 ;;		None               void
 11752 ;; Registers used:
 11753 ;;		wreg, status,2, status,0, cstack
 11754 ;; Tracked objects:
 11755 ;;		On entry : 0/0
 11756 ;;		On exit  : 0/0
 11757 ;;		Unchanged: 0/0
 11758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11759 ;;      Params:         0       0       0       0
 11760 ;;      Locals:         0       0       0       0
 11761 ;;      Temps:          0      15       0       0
 11762 ;;      Totals:         0      15       0       0
 11763 ;;Total ram usage:       15 bytes
 11764 ;; Hardware stack levels used:    1
 11765 ;; Hardware stack levels required when called:    1
 11766 ;; This function calls:
 11767 ;;		_WriteTimer0
 11768 ;; This function is called by:
 11769 ;;		Interrupt level 2
 11770 ;; This function uses a non-reentrant model
 11771 ;;
 11772                           
 11773                           	psect	intcode
 11774  000008                     __pintcode:
 11775                           	opt stack 0
 11776  000008                     _ISR_alta:
 11777                           	opt stack 24
 11778                           
 11779                           ;incstack = 0
 11780  000008  8246               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11781  00000A  CFFA F065          	movff	pclath,??_ISR_alta+1
 11782  00000E  CFFB F066          	movff	pclatu,??_ISR_alta+2
 11783  000012  ED82  F01A         	call	int_func,f	;refresh shadow registers
 11784                           pclatu	equ	0xFFB
 11785                           pclath	equ	0xFFA
 11786                           tblptru	equ	0xFF8
 11787                           tblptrh	equ	0xFF7
 11788                           tblptrl	equ	0xFF6
 11789                           tablat	equ	0xFF5
 11790                           prodh	equ	0xFF4
 11791                           prodl	equ	0xFF3
 11792                           intcon	equ	0xFF2
 11793                           intcon2	equ	0xFF1
 11794                           postinc0	equ	0xFEE
 11795                           fsr0h	equ	0xFEA
 11796                           fsr0l	equ	0xFE9
 11797                           wreg	equ	0xFE8
 11798                           fsr1h	equ	0xFE2
 11799                           fsr1l	equ	0xFE1
 11800                           bsr	equ	0xFE0
 11801                           indf2	equ	0xFDF
 11802                           postinc2	equ	0xFDE
 11803                           postdec2	equ	0xFDD
 11804                           fsr2h	equ	0xFDA
 11805                           fsr2l	equ	0xFD9
 11806                           status	equ	0xFD8
 11807                           
 11808                           	psect	intcode_body
 11809  003504                     __pintcode_body:
 11810                           	opt stack 24
 11811  003504                     int_func:
 11812                           	opt stack 24
 11813  003504  0006               	pop		; remove dummy address from shadow register refresh
 11814  003506  CFE9 F067          	movff	fsr0l,??_ISR_alta+3
 11815  00350A  CFEA F068          	movff	fsr0h,??_ISR_alta+4
 11816  00350E  CFE1 F069          	movff	fsr1l,??_ISR_alta+5
 11817  003512  CFE2 F06A          	movff	fsr1h,??_ISR_alta+6
 11818  003516  CFD9 F06B          	movff	fsr2l,??_ISR_alta+7
 11819  00351A  CFDA F06C          	movff	fsr2h,??_ISR_alta+8
 11820  00351E  CFF3 F06D          	movff	prodl,??_ISR_alta+9
 11821  003522  CFF4 F06E          	movff	prodh,??_ISR_alta+10
 11822  003526  CFF6 F06F          	movff	tblptrl,??_ISR_alta+11
 11823  00352A  CFF7 F070          	movff	tblptrh,??_ISR_alta+12
 11824  00352E  CFF8 F071          	movff	tblptru,??_ISR_alta+13
 11825  003532  CFF5 F072          	movff	tablat,??_ISR_alta+14
 11826                           
 11827                           ;newmain.c: 54: PORTCbits.RC0 = ~PORTCbits.RC0;
 11828  003536  A082               	btfss	3970,0,c	;volatile
 11829  003538  D002               	goto	i2u669_40
 11830  00353A  0E01               	movlw	1
 11831  00353C  D001               	goto	i2u669_46
 11832  00353E                     i2u669_40:
 11833  00353E  0E00               	movlw	0
 11834  003540                     i2u669_46:
 11835  003540  0AFF               	xorlw	255
 11836  003542  0100               	movlb	0	; () banked
 11837  003544  6F64               	movwf	??_ISR_alta& (0+255),b
 11838  003546  5082               	movf	3970,w,c	;volatile
 11839  003548  0100               	movlb	0	; () banked
 11840  00354A  1964               	xorwf	??_ISR_alta& (0+255),w,b
 11841  00354C  0BFE               	andlw	-2
 11842  00354E  1964               	xorwf	??_ISR_alta& (0+255),w,b
 11843  003550  6E82               	movwf	3970,c	;volatile
 11844                           
 11845                           ; BSR set to: 0
 11846                           ;newmain.c: 55: T0CONbits.TMR0ON = 0;
 11847  003552  9ED5               	bcf	4053,7,c	;volatile
 11848                           
 11849                           ; BSR set to: 0
 11850                           ;newmain.c: 56: if (PORTCbits.RC0 == 1) {
 11851  003554  A082               	btfss	3970,0,c	;volatile
 11852  003556  D007               	goto	i2l5121
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;newmain.c: 57: WriteTimer0(timer1);
 11856  003558  C00F  F060         	movff	_timer1,WriteTimer0@timer0
 11857  00355C  C010  F061         	movff	_timer1+1,WriteTimer0@timer0+1
 11858  003560  EC86  F01C         	call	_WriteTimer0	;wreg free
 11859                           
 11860                           ;newmain.c: 58: T0CONbits.TMR0ON = 1;
 11861  003564  8ED5               	bsf	4053,7,c	;volatile
 11862  003566                     i2l5121:
 11863                           
 11864                           ;newmain.c: 59: }
 11865                           ;newmain.c: 60: if (PORTCbits.RC0 == 0) {
 11866  003566  B082               	btfsc	3970,0,c	;volatile
 11867  003568  D007               	goto	i2l5127
 11868                           
 11869                           ;newmain.c: 61: WriteTimer0(periodo);
 11870  00356A  C00D  F060         	movff	_periodo,WriteTimer0@timer0
 11871  00356E  C00E  F061         	movff	_periodo+1,WriteTimer0@timer0+1
 11872  003572  EC86  F01C         	call	_WriteTimer0	;wreg free
 11873                           
 11874                           ;newmain.c: 62: T0CONbits.TMR0ON = 1;
 11875  003576  8ED5               	bsf	4053,7,c	;volatile
 11876  003578                     i2l5127:
 11877                           
 11878                           ;newmain.c: 63: }
 11879                           ;newmain.c: 65: INTCONbits.TMR0IF = 0;
 11880  003578  94F2               	bcf	intcon,2,c	;volatile
 11881  00357A  C072  FFF5         	movff	??_ISR_alta+14,tablat
 11882  00357E  C071  FFF8         	movff	??_ISR_alta+13,tblptru
 11883  003582  C070  FFF7         	movff	??_ISR_alta+12,tblptrh
 11884  003586  C06F  FFF6         	movff	??_ISR_alta+11,tblptrl
 11885  00358A  C06E  FFF4         	movff	??_ISR_alta+10,prodh
 11886  00358E  C06D  FFF3         	movff	??_ISR_alta+9,prodl
 11887  003592  C06C  FFDA         	movff	??_ISR_alta+8,fsr2h
 11888  003596  C06B  FFD9         	movff	??_ISR_alta+7,fsr2l
 11889  00359A  C06A  FFE2         	movff	??_ISR_alta+6,fsr1h
 11890  00359E  C069  FFE1         	movff	??_ISR_alta+5,fsr1l
 11891  0035A2  C068  FFEA         	movff	??_ISR_alta+4,fsr0h
 11892  0035A6  C067  FFE9         	movff	??_ISR_alta+3,fsr0l
 11893  0035AA  C066  FFFB         	movff	??_ISR_alta+2,pclatu
 11894  0035AE  C065  FFFA         	movff	??_ISR_alta+1,pclath
 11895  0035B2  9246               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11896  0035B4  0011               	retfie		f
 11897  0035B6                     __end_of_ISR_alta:
 11898                           	opt stack 0
 11899                           pclatu	equ	0xFFB
 11900                           pclath	equ	0xFFA
 11901                           tblptru	equ	0xFF8
 11902                           tblptrh	equ	0xFF7
 11903                           tblptrl	equ	0xFF6
 11904                           tablat	equ	0xFF5
 11905                           prodh	equ	0xFF4
 11906                           prodl	equ	0xFF3
 11907                           intcon	equ	0xFF2
 11908                           intcon2	equ	0xFF1
 11909                           postinc0	equ	0xFEE
 11910                           fsr0h	equ	0xFEA
 11911                           fsr0l	equ	0xFE9
 11912                           wreg	equ	0xFE8
 11913                           fsr1h	equ	0xFE2
 11914                           fsr1l	equ	0xFE1
 11915                           bsr	equ	0xFE0
 11916                           indf2	equ	0xFDF
 11917                           postinc2	equ	0xFDE
 11918                           postdec2	equ	0xFDD
 11919                           fsr2h	equ	0xFDA
 11920                           fsr2l	equ	0xFD9
 11921                           status	equ	0xFD8
 11922                           
 11923 ;; *************** function _WriteTimer0 *****************
 11924 ;; Defined at:
 11925 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
 11926 ;; Parameters:    Size  Location     Type
 11927 ;;  timer0          2    0[BANK0 ] unsigned int 
 11928 ;; Auto vars:     Size  Location     Type
 11929 ;;  timer           2    2[BANK0 ] struct Timers
 11930 ;; Return value:  Size  Location     Type
 11931 ;;		None               void
 11932 ;; Registers used:
 11933 ;;		None
 11934 ;; Tracked objects:
 11935 ;;		On entry : 0/0
 11936 ;;		On exit  : 0/0
 11937 ;;		Unchanged: 0/0
 11938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11939 ;;      Params:         0       2       0       0
 11940 ;;      Locals:         0       2       0       0
 11941 ;;      Temps:          0       0       0       0
 11942 ;;      Totals:         0       4       0       0
 11943 ;;Total ram usage:        4 bytes
 11944 ;; Hardware stack levels used:    1
 11945 ;; This function calls:
 11946 ;;		Nothing
 11947 ;; This function is called by:
 11948 ;;		_ISR_alta
 11949 ;; This function uses a non-reentrant model
 11950 ;;
 11951                           
 11952                           	psect	text31
 11953  00390C                     __ptext31:
 11954                           	opt stack 0
 11955  00390C                     _WriteTimer0:
 11956                           	opt stack 24
 11957                           
 11958                           ;incstack = 0
 11959  00390C  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
 11960  003910  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 11961  003914  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 11962  003918  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 11963  00391C  0012               	return		;funcret
 11964  00391E                     __end_of_WriteTimer0:
 11965                           	opt stack 0
 11966  0000                     pclatu	equ	0xFFB
 11967                           pclath	equ	0xFFA
 11968                           tblptru	equ	0xFF8
 11969                           tblptrh	equ	0xFF7
 11970                           tblptrl	equ	0xFF6
 11971                           tablat	equ	0xFF5
 11972                           prodh	equ	0xFF4
 11973                           prodl	equ	0xFF3
 11974                           intcon	equ	0xFF2
 11975                           intcon2	equ	0xFF1
 11976                           postinc0	equ	0xFEE
 11977                           fsr0h	equ	0xFEA
 11978                           fsr0l	equ	0xFE9
 11979                           wreg	equ	0xFE8
 11980                           fsr1h	equ	0xFE2
 11981                           fsr1l	equ	0xFE1
 11982                           bsr	equ	0xFE0
 11983                           indf2	equ	0xFDF
 11984                           postinc2	equ	0xFDE
 11985                           postdec2	equ	0xFDD
 11986                           fsr2h	equ	0xFDA
 11987                           fsr2l	equ	0xFD9
 11988                           status	equ	0xFD8
 11989                           pclatu	equ	0xFFB
 11990                           pclath	equ	0xFFA
 11991                           tblptru	equ	0xFF8
 11992                           tblptrh	equ	0xFF7
 11993                           tblptrl	equ	0xFF6
 11994                           tablat	equ	0xFF5
 11995                           prodh	equ	0xFF4
 11996                           prodl	equ	0xFF3
 11997                           intcon	equ	0xFF2
 11998                           intcon2	equ	0xFF1
 11999                           postinc0	equ	0xFEE
 12000                           fsr0h	equ	0xFEA
 12001                           fsr0l	equ	0xFE9
 12002                           wreg	equ	0xFE8
 12003                           fsr1h	equ	0xFE2
 12004                           fsr1l	equ	0xFE1
 12005                           bsr	equ	0xFE0
 12006                           indf2	equ	0xFDF
 12007                           postinc2	equ	0xFDE
 12008                           postdec2	equ	0xFDD
 12009                           fsr2h	equ	0xFDA
 12010                           fsr2l	equ	0xFD9
 12011                           status	equ	0xFD8
 12012                           
 12013                           	psect	param0
 12014  0000                     pclatu	equ	0xFFB
 12015                           pclath	equ	0xFFA
 12016                           tblptru	equ	0xFF8
 12017                           tblptrh	equ	0xFF7
 12018                           tblptrl	equ	0xFF6
 12019                           tablat	equ	0xFF5
 12020                           prodh	equ	0xFF4
 12021                           prodl	equ	0xFF3
 12022                           intcon	equ	0xFF2
 12023                           intcon2	equ	0xFF1
 12024                           postinc0	equ	0xFEE
 12025                           fsr0h	equ	0xFEA
 12026                           fsr0l	equ	0xFE9
 12027                           wreg	equ	0xFE8
 12028                           fsr1h	equ	0xFE2
 12029                           fsr1l	equ	0xFE1
 12030                           bsr	equ	0xFE0
 12031                           indf2	equ	0xFDF
 12032                           postinc2	equ	0xFDE
 12033                           postdec2	equ	0xFDD
 12034                           fsr2h	equ	0xFDA
 12035                           fsr2l	equ	0xFD9
 12036                           status	equ	0xFD8
 12037                           
 12038                           	psect	temp
 12039  000046                     btemp:
 12040                           	opt stack 0
 12041  000046                     	ds	1
 12042  0000                     int$flags	set	btemp
 12043                           pclatu	equ	0xFFB
 12044                           pclath	equ	0xFFA
 12045                           tblptru	equ	0xFF8
 12046                           tblptrh	equ	0xFF7
 12047                           tblptrl	equ	0xFF6
 12048                           tablat	equ	0xFF5
 12049                           prodh	equ	0xFF4
 12050                           prodl	equ	0xFF3
 12051                           intcon	equ	0xFF2
 12052                           intcon2	equ	0xFF1
 12053                           postinc0	equ	0xFEE
 12054                           fsr0h	equ	0xFEA
 12055                           fsr0l	equ	0xFE9
 12056                           wreg	equ	0xFE8
 12057                           fsr1h	equ	0xFE2
 12058                           fsr1l	equ	0xFE1
 12059                           bsr	equ	0xFE0
 12060                           indf2	equ	0xFDF
 12061                           postinc2	equ	0xFDE
 12062                           postdec2	equ	0xFDD
 12063                           fsr2h	equ	0xFDA
 12064                           fsr2l	equ	0xFD9
 12065                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         77
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      69
    BANK0           160     93     140
    BANK1           256     32      32
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _main->___fltol
    _send_data->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _calibrazione->___lwdiv
    ___xxtofl->___lldiv
    ___lldiv->___lmul
    ___fltol->___fladd
    ___flneg->___fldiv
    ___flneg->___flmul
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___flneg

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->_WriteTimer0

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___fltol
    ___fltol->___fladd

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   19041
                                             24 BANK1      8     8      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                            ___lldiv
                             ___lmul
                           ___xxtofl
                       _calibrazione
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    2419
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2395
                                             19 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    7037
                      _CANInitialize
                            _OpenADC
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     821
                                             25 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                             19 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             19 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             33 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibrazione                                         0     0      0     290
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     514
                                             44 BANK0     14    10      4
                            ___lldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     322
                                             19 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     290
                                             31 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     568
                                             91 BANK0      2     2      0
                                             16 BANK1      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___lldiv (ARG)
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     173
                                             83 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1696
                                             58 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1433
                                             58 BANK0     25    17      8
                            ___lldiv (ARG)
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3478
                                             87 BANK0      4     4      0
                                              0 BANK1     16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           19    19      0    1161
                                             12 COMRAM    19    19      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            15    15      0     253
                                              4 BANK0     15    15      0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     253
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   ___fladd
     ___fldiv (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___flneg (ARG)
       ___fldiv (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___xxtofl (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
   ___fldiv
     ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
     ___xxtofl (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
   ___flmul
     ___xxtofl (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
   ___flneg
     ___fldiv (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___xxtofl (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
   ___fltol
     ___fladd (ARG)
       ___fldiv (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___fldiv (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___flneg (ARG)
       ___fldiv (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
     ___xxtofl (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
   ___lldiv
     ___lmul (ARG)
   ___lmul
   ___xxtofl
     ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
   _calibrazione
     _BusyADC
     _ConvertADC
     _ReadADC
     ___lwdiv
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenADC
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_alta (ROOT)
   _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     20      20       6       12.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     5D      8C       4       87.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1F      45       1       73.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F1       9        0.0%
DATA                 0      0      F1      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Dec 06 14:57:48 2015

              ??_CANisTXwarningON 0073                      ___fldiv@aexp 00B2  
                    ___fldiv@bexp 00B1              __end_of_CANSetFilter 0C70  
                    ___fldiv@sign 00A6                                _id 00D1  
                              bsr 000FE0               ___wmul@multiplicand 0075  
                     __CFG_BORV$3 000000                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                       __CFG_OSC$HS 000000  
                             l400 121A                               l401 1224  
                             l402 122E                               l403 1238  
                             l500 09AC                               l501 09B0  
                             l502 09BC                               l406 1348  
                             l511 0AC8                               l503 09C0  
                             l407 134C                               l512 0ACC  
                             l504 09CC                               l440 2D3E  
                             l408 1358                               l513 0AD8  
                             l505 09D0                               l441 2D42  
                             l530 0C24                               l522 0BE4  
                             l514 0ADC                               l506 09DC  
                             l450 2E4A                               l442 2D4E  
                             l362 314C                               l370 0D82  
                             l523 0BE8                               l515 0AE8  
                             l507 09E0                               l451 2E56  
                             l443 2D52                               l363 3156  
                             l371 0D12                               l524 0BF4  
                             l516 0AEC                               l508 09EC  
                             l452 2E5A                               l444 2D5E  
                             l436 2D1E                               l372 0D1C  
                             l525 0BF8                               l517 0AF8  
                             l453 2E66                               l437 2D22  
                             l373 0D26                               l526 0C04  
                             l518 0AFC                               l470 066E  
                             l454 2E6A                               l438 2D2E  
                             l382 1178                               l374 0D30  
                             l527 0C08                               l519 0B08  
                             l471 067A                               l455 2E76  
                             l447 2E36                               l439 2D32  
                             l383 0F0A                               l367 0EF4  
                             l528 0C14                               l480 0784  
                             l472 067E                               l448 2E3A  
                             l712 362E                               l560 38C8  
                             l392 10C4                               l384 0F0E  
                             l368 0C86                               l529 0C18  
                             l481 0788                               l473 068A  
                             l449 2E46                               l393 10C8  
                             l385 1006                               l377 0E40  
                             l369 0C8A                               l490 0894  
                             l482 0794                               l474 068E  
                             l394 10D4                               l386 0F96  
                             l378 0E44                               l491 08A0  
                             l483 0798                               l475 069A  
                             l467 065A                               l387 0FA0  
                             l379 0E50                               l492 08A4  
                             l484 07A4                               l468 065E  
                             l388 0FAA                               l493 08B0  
                             l485 07A8                               l469 066A  
                             l573 382E                               l397 118E  
                             l389 0FB4                               l494 08B4  
                             l486 07B4                               l478 0774  
                             l398 1192                               l495 08C0  
                             l479 0778                               l399 128A  
                             l496 08C4                               l497 08D0  
                             l489 0890                               l668 1906  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
            __size_of_WriteTimer0 0012                               _msg 0015  
                             wreg 000FE8                      ___flmul@aexp 00AB  
                    ___flmul@bexp 00AC             _currentSteering_array 00C5  
                    ___flmul@sign 00A6                      ___flmul@temp 00B1  
                    ___flmul@prod 00AD                      __CFG_LVP$OFF 000000  
                    ___fltol@exp1 00BC                      __CFG_WDT$OFF 000000  
                            l1130 36A0                              l1223 2992  
                            l1232 29CA                              l1234 2A38  
                            l1226 293A                              l1260 260E  
                            l1253 2372                              l1077 34F2  
                            l1270 2720                              l1262 267C  
                            l1167 1FF6                              l1184 216A  
                            l1168 1FEA                              l1193 21FE  
                            l1169 1FB6                              l1290 302C  
                            l1282 2FB8                              l1275 2F0C  
                            l3115 38D6                              l3133 2BDC  
                            l3303 050E                              l3231 0228  
                            l3207 2E7A                              l4111 37FE  
                            l1289 3014                              l3321 05C8  
                            l4115 36BC                              l5013 21B2  
                            l5101 332A                              l3181 2DA8  
                            l3149 2C92                              l5007 219C  
                            l5023 21D2                              l5103 3334  
                            l4119 36E2                              l3423 091A  
                            l3175 2D62                              l5033 21F8  
                            l5017 21BE                              l5025 21D8  
                            l3417 08D4                              l3249 02E0  
                            l5051 2288                              l5043 2254  
                            l4411 29B4                              l4331 2782  
                            l5107 3350                              l3451 09F0  
                            l3355 06E4                              l3267 039A  
                            l4405 298E                              l4341 27B0  
                            l4501 239A                              l3349 069E  
                            l3285 0454                              l5063 22AC  
                            l5055 2294                              l5047 2266  
                            l4351 27E0                              l3519 0C28  
                            l3383 07B8                              l3711 10B8  
                            l3615 0D3A                              l5057 2298  
                            l4441 2AB6                              l4417 29DE  
                            l4361 280E                              l4337 27A6  
                            l5073 327C                              l3457 0A36  
                            l3641 0E54                              l5161 1624  
                            l5153 158C                              l4451 2AFC  
                            l4443 2ACA                              l4427 2A32  
                            l4099 3782                              l3491 0B52  
                            l3571 315A                              l3635 0E34  
                            l5139 1434                              l4453 2B00  
                            l4445 2AEC                              l4437 2A88  
                            l4381 2890                              l4373 2862  
                            l4357 2804                              l5093 32FE  
                            l3485 0B0C                              l3389 07FE  
                            l3717 10D8                              l5165 168A  
                            l5149 1526                              l5157 15D2  
                            l5173 16E8                              l4391 290E  
                            l4543 25F8                              l4703 307E  
                            l3575 3162                              l5183 18EC  
                            l5167 16C6                              l4473 2300  
                            l5089 32EA                              l3577 31A6  
                            l3569 3144                              l5169 16D4  
                            l4491 235A                              l4475 2306  
                            l4467 22DC                              l5099 331A  
                            l4651 3486                              l3827 3820  
                            l3691 0FBE                              l4901 1EC6  
                            l4573 26F2                              l4549 2622  
                            l4493 2360                              l4485 2336  
                            l4477 2318                              l4661 34E0  
                            l4653 348C                              l3861 365C  
                            l4399 2946                              l4583 2740  
                            l4575 2706                              l4559 2676  
                            l4671 2F1C                              l3871 3692  
                            l3863 3662                              l3767 1242  
                            l4913 1EFA                              l4905 1ED0  
                            l4585 274A                              l4569 26CC  
                            l4497 2386                              l4649 3476  
                            l4681 2F5C                              l3793 135C  
                            l4595 3862                              l4691 3006  
                            l4683 2F9A                              l3859 3650  
                            l3787 133C                              l4677 2F44  
                            l4943 1F36                              l4871 1E34  
                            l4679 2F4C                              l4961 1FDA  
                            l4881 1E62                              l4689 2FF6  
                            l4971 201A                              l4955 1FCA  
                            l4981 205E                              l4957 1FD0  
                            l4877 1E58                              l4895 1EA2  
                            l4985 2068                              l4889 1E8E  
                            l4979 2058                              l4989 207A  
                            l4999 214A                              _LATA 000F89  
                            _LATB 000F8A                              _LATC 000F8B  
                            u4000 0B2C                              _LATD 000F8C  
                            _LATE 000F8D                              u4005 0B20  
                            u3205 2C6E                              u3150 2B58  
                            u4210 0D5A                              u3155 2B4C  
                            u4220 0DA6                              u3405 0204  
                            u3165 2BB8                              u3510 03D0  
                            u3430 025C                              u3190 2C0E  
                            u4215 0D4E                              u4080 0C48  
                            u3360 2E9A                              u3280 2D82  
                            u4225 0D9A                              u3515 03C4  
                            u3435 0250                              u3195 2C02  
                            u4235 0E06                              u4340 0FDE  
                            u4085 0C3C                              u3605 05A4  
                            u3525 0430                              u3445 02BC  
                            u3365 2E8E                              u3285 2D76  
                            u3550 048A                              u3470 0316  
                            u3390 01A4                              u4350 102A  
                            u4345 0FD2                              u3555 047E  
                            u3475 030A                              u3395 0198  
                            u4355 101E                              u3565 04EA  
                            u3485 0376                              u4365 108A  
                            u3590 0544                              u4470 1262  
                            u6320 1F80                              u4560 3926  
                            u3920 0A10                              u3840 08F4  
                            u3760 07D8                              u3680 06BE  
                            u4480 12AE                              u6330 1F98  
                            u5530 2A9C                              u3595 0538  
                            u4475 1256                              u6340 1F9A  
                            u3925 0A04                              u3845 08E8  
                            u3765 07CC                              u3685 06B2  
                            u4485 12A2                              u4495 130E  
                            u5720 26E0                              u5640 259A  
                            u4850 3932                              u4860 393E  
                            u5645 258E                              u6630 329C  
                            u6720 149C                              u6730 14DE  
                            u6635 3290                              u6740 1522  
                            u6750 156A                              u6761 15CE  
                            u6770 1616                              u6780 1668  
                            u6847 3822               __size_of_CANSetMask 039E  
                            _main 13FC                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 0046                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0166                     __CFG_IESO$OFF 000000  
                 ___fldiv@new_exp 00AB                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                   __end_of_BusyADC 392A  
                 __end_of_ReadADC 390C                  _CANOperationMode 38CE  
                 __end_of_OpenADC 3632        __size_of_CANreceiveMessage 050C  
                   ___fltol@sign1 00BB                   __end_of___fladd 22BE  
                           ?_main 0024                   __end_of___fldiv 2B24  
                 __end_of___flneg 3874                   __end_of___flmul 2764  
                 __end_of___fltol 3362                   __end_of___lldiv 3504  
                           _T0CON 000FD5                             _T3CON 000FB1  
                 __end_of___lwdiv 36AA                             i1l414 1BA2  
                           i1l565 38F6                             i1l647 011E  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
                           _PORTC 000F82                             _TRISA 000F92  
               _CANisRxReady$2915 0024                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
             ___lmul@multiplicand 0077                __size_of_ISR_bassa 014E  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                CANInitialize@flags 0085  
                __end_of_ISR_alta 35B6                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _timer 00D9  
                      _ConvertADC 3942                    __pbitbssCOMRAM 0228  
            __end_of_CANisRxReady 38FA                             tablat 000FF5  
            __end_of_CANisTxReady 38CE                             status 000FD8  
                  __CFG_PBADEN$ON 000000                   __initialization 3720  
                    __end_of_main 190A                            ??_main 0118  
                   __activetblptr 000002                 _CANisTxReady$2913 0073  
                   _counter_array 00BD                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                          _ADRESL 000FC3             __size_of_calibrazione 0046  
                 __CFG_BBSIZ$1024 000000                            i1l4001 1DC4  
                          i1l4005 1DE0                            i1l4007 1E12  
                          i1l3931 1B10                            i1l3943 1B6A  
                          i1l3935 1B2E                            i1l3927 1AF2  
                          i1l3919 1A82                            i1l3945 1B9C  
                          i1l3939 1B4C                            i1l4747 009C  
                          i1l4771 0104                            i1l4739 0066  
                          i1l3981 1D02                            i1l4759 00D6  
                          i1l4767 0100                            i2l5121 3566  
                          i1l3993 1D8C                            i1l3997 1DA8  
                          i1l3989 1D70                            i2l5127 3578  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 0077                CANsendMessage@tamp 007F  
                       ??_BusyADC 0073                  __end_of___xxtofl 3090  
                       ??_ReadADC 0075                  __end_of_delay_ms 383C  
           __size_of_CANSetFilter 0B06                         ??_OpenADC 0075  
                  __CFG_XINST$OFF 000000                 __end_of_ISR_bassa 0166  
                          ___lmul 36AA                         ??___fladd 0108  
                          ___wmul 3874                         ??___fldiv 00A2  
                       ??___flneg 00B7                    __CFG_STVREN$ON 000000  
                       ??___flmul 00A2                         ??___fltol 0114  
                       ??___lldiv 0087                         ??___lwdiv 0077  
                    ??_CANSetMask 0078                            clear_0 3726  
                          clear_1 3734          ?_configurazione_iniziale 0024  
                          _timer1 000F                            _valore 0014  
                 __CFG_BOREN$BOHW 000000                      _calibrazione 377E  
                    __pdataCOMRAM 0043                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                 _currentSteering 00E7                      _CANSetFilter 016A  
                     ?_ConvertADC 0024                      ___xxtofl@arg 0096  
                    ___xxtofl@exp 0095                      ___xxtofl@val 008C  
                      __accesstop 0060           __end_of__initialization 3770  
              __end_of_CANSetMask 2EC2                        ___flneg@f1 00B3  
                   ___rparam_used 000000         __size_of_CANisRXwarningON 000C  
                      ___fltol@f1 0110                    __pcstackCOMRAM 0024  
                    __pidataBANK0 3946                         ?_ISR_alta 0024  
           CANSetFilter@numBuffer 007C         __size_of_CANisTXwarningON 000C  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 0024  
        __end_of_CANOperationMode 38E4                        __pbssBANK0 00BD  
                      _data_array 00DF           __size_of_CANsendMessage 078C  
                         ?___lmul 0073                           ?___wmul 0073  
                      ??_ISR_alta 0064                __size_of_send_data 003E  
                WriteTimer0@timer 0062                     ??_WriteTimer0 0062  
                  ___lmul@product 007B                      _CANisRxReady 38E4  
             __size_of_ConvertADC 0004                           _CANSTAT 000F6E  
                    _CANisTxReady 38AA                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
                       ?___xxtofl 008C            __size_of_CANInitialize 01C6  
                       ?_delay_ms 0079                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 007A                           _BusyADC 391E  
                         _ReadADC 38FA                         _ADCResult 00DD  
                         _OpenADC 35B6                           __Hparam 0000  
                         __Lparam 0000                  delay_ms@value_ms 0079  
                         ___fladd 1E16                           ___fldiv 2764  
                         ___flneg 383C                   __size_of___lmul 0076  
                         ___flmul 22BE                           ___fltol 3256  
                         ___lldiv 3448                   __size_of___wmul 0036  
                         ___lwdiv 3632              CANInitialize@propSeg 008A  
                         __pcinit 3720                           __ramtop 0300  
                         __ptext0 13FC                           __ptext1 37C4  
                         __ptext2 0C70                           __ptext3 38AA  
                         __ptext4 3362                           __ptext5 3802  
                         __ptext6 3874                           __ptext7 35B6  
                         __ptext8 3090                           __ptext9 2B24  
                       _T0CONbits 000FD5                           _counter 0001  
                      ??___xxtofl 0090                        _duty_cycle 00CD  
                         _periodo 000D               __end_of_WriteTimer0 391E  
                      ??_delay_ms 007B                           _valore1 0011  
          CANreceiveMessage@error 002E                    OpenADC@config2 0073  
                  __pintcode_body 3504              end_of_initialization 3770  
               __end_of_send_data 3802                     __Lmediumconst 0000  
                         int_func 3504                  _CANisRXwarningON 3936  
                   _CANInitialize 3090                   ___lldiv@divisor 0083  
                 ___lldiv@counter 008B                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
                       _ISR_bassa 0018                         _PORTAbits 000F80  
                  CANSetMask@mask 0073                         _PORTCbits 000F82  
                  CANSetMask@tamp 007D                    CANSetMask@type 0077  
                _CANisTXwarningON 392A                       ___fladd@grs 00BA  
                   ___xxtofl@sign 0094                       ___fldiv@grs 00AD  
                     ___fldiv@rem 00A7                      ??_ConvertADC 0073  
__size_of_configurazione_iniziale 00E6               _previousTimeCounter 00D5  
         _clock_counter_reference 00EA                       ___flmul@grs 00A7  
                  _CANsendMessage 0C70                  CANInitialize@BRP 0084  
                CANInitialize@SJW 0083                    ?_CANInitialize 0081  
                  __end_of___lmul 3720                        ?_ISR_bassa 0024  
                  __end_of___wmul 38AA                     __pidataCOMRAM 3949  
               __size_of_ISR_alta 35AE                       _WriteTimer0 390C  
              __end_of_ConvertADC 3946               start_initialization 3720  
             CANSetMask@numBuffer 007C            __end_of_CANsendMessage 13FC  
               ?_CANOperationMode 0024                ??_CANOperationMode 0073  
      CANInitialize@FilterConfig1 008B        CANInitialize@FilterConfig2 008C  
                        ??___lmul 007B                          ??___wmul 0077  
                     __pdataBANK0 00E7                       _calibration 0009  
                __CFG_LPT1OSC$OFF 000000                         ___fladd@a 0104  
                       ___fladd@b 0100            CANInitialize@phaseSeg1 0081  
          CANInitialize@phaseSeg2 0082                         ___fldiv@a 009E  
                       ___fldiv@b 009A                         ___flmul@a 009E  
                       ___flmul@b 009A                       __pbssCOMRAM 0001  
                   __pcstackBANK0 0060                     __pcstackBANK1 0100  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
               __size_of___xxtofl 01CE                 __size_of_delay_ms 003A  
                 ?_CANsendMessage 0073                   ??_CANInitialize 0086  
                        ?_BusyADC 0024                          ?_ReadADC 0073  
              CANSetFilter@filter 0073                         __pnvBANK0 00EA  
               OpenADC@portconfig 0074                          ?_OpenADC 0073  
                  _theorySteering 0013                  ___lwdiv@dividend 0073  
                       __pintcode 0008                          ?___fladd 0100  
                        ?___fldiv 009A                          ?___flneg 00B3  
                        ?___flmul 009A                          ?___fltol 0110  
                        ?___lldiv 007F                          ?___lwdiv 0073  
                     ??_ISR_bassa 0030                       __pintcodelo 0018  
               WriteTimer0@timer0 0060          __end_of_CANisRXwarningON 3942  
                     _COMSTATbits 000F74                  ___lwdiv@quotient 0077  
         _configurazione_iniziale 3362             CANreceiveMessage@tamp 002F  
                  ___wmul@product 0077                     OpenADC@config 0077  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 00E8  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                         _send_data 37C4  
                        _PIE3bits 000FA3          __end_of_CANisTXwarningON 3936  
                        i1u604_20 009A                          i1u464_20 19C2  
                        i1u464_26 19C4                          i1u465_20 19F0  
                        i1u473_25 1B76                          i1u465_26 19F2  
                        i1u475_20 1C4A                          i1u467_25 1A06  
                        i1u475_26 1C4C                          i1u476_20 1C74  
                        i1u484_25 1DEC                          i1u476_26 1C76  
                        i1u478_25 1C88                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                          _PIR3bits 000FA4  
                        i2u669_40 353E                          i2u669_46 3540  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                          _RXB0SIDL 000F62  
                        _RXF0EIDH 000F02                          _RXB1SIDH 000F51  
                        _RXF0EIDL 000F03                          _RXB1SIDL 000F52  
                        _RXF1EIDH 000F06                          _RXF1EIDL 000F07  
                        _RXF2EIDH 000F0A                      _pastSteering 00E9  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _ISR_alta 0008  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                 ___wmul@multiplier 0073  
                   ?_calibrazione 0024                     ?_CANSetFilter 0073  
               ___lmul@multiplier 0073                       _INTCON2bits 000FF1  
                      _CANCONbits 000F6F                          __Hparam0 0000  
                      ?_send_data 0024                  __size_of_BusyADC 000C  
                __size_of_ReadADC 0012                          __Lparam0 0000  
                    _RXB0SIDLbits 000F62                  __size_of_OpenADC 007C  
                    _RXB1SIDLbits 000F52                  __size_of___fladd 04A8  
                      _CANSetMask 2B24                  __size_of___fldiv 03C0  
                __size_of___flneg 0038                  __size_of___flmul 04A6  
                __size_of___fltol 010C                  __size_of___lldiv 00BC  
                __size_of___lwdiv 0078                      ?_WriteTimer0 0060  
                  ??_calibrazione 007A                          ___xxtofl 2EC2  
       ??_configurazione_iniziale 008D                      _RXF0SIDLbits 000F01  
                        _delay_ms 3802                   ___lwdiv@divisor 0075  
                    _RXF1SIDLbits 000F05                   ___lwdiv@counter 0079  
                  ??_CANSetFilter 0078                          __ptext10 016A  
                        __ptext11 38CE                          __ptext20 3256  
                        __ptext12 377E                          __ptext21 383C  
                        __ptext13 3632                          __ptext22 22BE  
                        __ptext14 38FA                          __ptext31 390C  
                        __ptext23 2764                          __ptext15 3942  
                        __ptext24 1E16                          __ptext16 391E  
                        __ptext25 392A                          __ptext17 2EC2  
                        __ptext26 3936                          __ptext18 36AA  
                        __ptext19 3448                          __ptext28 190A  
                        __ptext29 38E4                      _RXF2SIDLbits 000F09  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                    _RXF5SIDLbits 000F15          CANsendMessage@dataLength 0079  
                    _remote_frame 0228                     __size_of_main 050E  
                        _limiteDx 000B                          _limiteSx 0043  
            CANreceiveMessage@msg 0024                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 0046         __size_of_CANOperationMode 0016  
                   ?_CANisRxReady 0024                     ?_CANisTxReady 0024  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 190A  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 007B                ?_CANreceiveMessage 0024  
        CANsendMessage@identifier 0073                          intlevel1 0000  
                        intlevel2 0000                  CANSetFilter@tamp 007D  
                CANSetFilter@type 0077               ??_CANreceiveMessage 0026  
                ___lldiv@dividend 007F                       _TXB0DLCbits 000F45  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 0083                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 3448                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 0005  
            CANOperationMode@mode 0073                    ??_CANisRxReady 0024  
                     ?_CANSetMask 0073                    ??_CANisTxReady 0073  
       __end_of_CANreceiveMessage 1E16                  ___lldiv@quotient 0087  
               ?_CANisRXwarningON 0024                ??_CANisRXwarningON 0073  
                   ___fladd@signs 00B7                      ___fladd@aexp 00B8  
                    ___fladd@bexp 00B9              __end_of_calibrazione 37C4  
           __end_of_CANInitialize 3256                 ?_CANisTXwarningON 0024  
