

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Dec 06 22:31:48 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	param0,global,class=BANK0,space=1,delta=1
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	idataCOMRAM
    46  002568                     __pidataCOMRAM:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _limiteDx
    50  002568  0078               	dw	120
    51                           
    52                           ;initializer for _potenza
    53  00256A  0002               	dw	2
    54                           
    55                           ;initializer for _currentSteering
    56  00256C  B4                 	db	180
    57                           
    58                           ;initializer for _delay_quartz_frequency_value
    59  00256D  10                 	db	16
    60                           
    61                           ;initializer for _pastSteering
    62  00256E  01                 	db	1
    63  0000                     _RXB1CON	set	3920
    64  0000                     _RXB1CONbits	set	3920
    65  0000                     _RXB1D0	set	3926
    66  0000                     _RXB1D1	set	3927
    67  0000                     _RXB1D2	set	3928
    68  0000                     _RXB1D3	set	3929
    69  0000                     _RXB1D4	set	3930
    70  0000                     _RXB1D5	set	3931
    71  0000                     _RXB1D6	set	3932
    72  0000                     _RXB1D7	set	3933
    73  0000                     _RXB1DLC	set	3925
    74  0000                     _RXB1DLCbits	set	3925
    75  0000                     _RXB1EIDH	set	3923
    76  0000                     _RXB1EIDL	set	3924
    77  0000                     _RXB1SIDH	set	3921
    78  0000                     _RXB1SIDL	set	3922
    79  0000                     _RXB1SIDLbits	set	3922
    80  0000                     _RXF0EIDH	set	3842
    81  0000                     _RXF0EIDL	set	3843
    82  0000                     _RXF0SIDH	set	3840
    83  0000                     _RXF0SIDL	set	3841
    84  0000                     _RXF0SIDLbits	set	3841
    85  0000                     _RXF1EIDH	set	3846
    86  0000                     _RXF1EIDL	set	3847
    87  0000                     _RXF1SIDH	set	3844
    88  0000                     _RXF1SIDL	set	3845
    89  0000                     _RXF1SIDLbits	set	3845
    90  0000                     _RXF2EIDH	set	3850
    91  0000                     _RXF2EIDL	set	3851
    92  0000                     _RXF2SIDH	set	3848
    93  0000                     _RXF2SIDL	set	3849
    94  0000                     _RXF2SIDLbits	set	3849
    95  0000                     _RXF3EIDH	set	3854
    96  0000                     _RXF3EIDL	set	3855
    97  0000                     _RXF3SIDH	set	3852
    98  0000                     _RXF3SIDL	set	3853
    99  0000                     _RXF3SIDLbits	set	3853
   100  0000                     _RXF4EIDH	set	3858
   101  0000                     _RXF4EIDL	set	3859
   102  0000                     _RXF4SIDH	set	3856
   103  0000                     _RXF4SIDL	set	3857
   104  0000                     _RXF4SIDLbits	set	3857
   105  0000                     _RXF5EIDH	set	3862
   106  0000                     _RXF5EIDL	set	3863
   107  0000                     _RXF5SIDH	set	3860
   108  0000                     _RXF5SIDL	set	3861
   109  0000                     _RXF5SIDLbits	set	3861
   110  0000                     _RXM0EIDH	set	3866
   111  0000                     _RXM0EIDL	set	3867
   112  0000                     _RXM0SIDH	set	3864
   113  0000                     _RXM0SIDL	set	3865
   114  0000                     _RXM0SIDLbits	set	3865
   115  0000                     _RXM1EIDH	set	3870
   116  0000                     _RXM1EIDL	set	3871
   117  0000                     _RXM1SIDH	set	3868
   118  0000                     _RXM1SIDL	set	3869
   119  0000                     _RXM1SIDLbits	set	3869
   120  0000                     _TXB0CONbits	set	3904
   121  0000                     _TXB0D0	set	3910
   122  0000                     _TXB0D1	set	3911
   123  0000                     _TXB0D2	set	3912
   124  0000                     _TXB0D3	set	3913
   125  0000                     _TXB0D4	set	3914
   126  0000                     _TXB0D5	set	3915
   127  0000                     _TXB0D6	set	3916
   128  0000                     _TXB0D7	set	3917
   129  0000                     _TXB0DLC	set	3909
   130  0000                     _TXB0DLCbits	set	3909
   131  0000                     _TXB0EIDH	set	3907
   132  0000                     _TXB0EIDL	set	3908
   133  0000                     _TXB0SIDH	set	3905
   134  0000                     _TXB0SIDL	set	3906
   135  0000                     _TXB0SIDLbits	set	3906
   136  0000                     _TXB1CONbits	set	3888
   137  0000                     _TXB1D0	set	3894
   138  0000                     _TXB1D1	set	3895
   139  0000                     _TXB1D2	set	3896
   140  0000                     _TXB1D3	set	3897
   141  0000                     _TXB1D4	set	3898
   142  0000                     _TXB1D5	set	3899
   143  0000                     _TXB1D6	set	3900
   144  0000                     _TXB1D7	set	3901
   145  0000                     _TXB1DLC	set	3893
   146  0000                     _TXB1DLCbits	set	3893
   147  0000                     _TXB1EIDH	set	3891
   148  0000                     _TXB1EIDL	set	3892
   149  0000                     _TXB1SIDH	set	3889
   150  0000                     _TXB1SIDL	set	3890
   151  0000                     _TXB1SIDLbits	set	3890
   152  0000                     _TXB2CONbits	set	3872
   153  0000                     _TXB2D0	set	3878
   154  0000                     _TXB2D1	set	3879
   155  0000                     _TXB2D2	set	3880
   156  0000                     _TXB2D3	set	3881
   157  0000                     _TXB2D4	set	3882
   158  0000                     _TXB2D5	set	3883
   159  0000                     _TXB2D6	set	3884
   160  0000                     _TXB2D7	set	3885
   161  0000                     _TXB2DLC	set	3877
   162  0000                     _TXB2DLCbits	set	3877
   163  0000                     _TXB2EIDH	set	3875
   164  0000                     _TXB2EIDL	set	3876
   165  0000                     _TXB2SIDH	set	3873
   166  0000                     _TXB2SIDL	set	3874
   167  0000                     _TXB2SIDLbits	set	3874
   168  0000                     _ADCON0	set	4034
   169  0000                     _ADCON0bits	set	4034
   170  0000                     _ADCON1	set	4033
   171  0000                     _ADCON2	set	4032
   172  0000                     _ADRESH	set	4036
   173  0000                     _ADRESL	set	4035
   174  0000                     _BRGCON1	set	3952
   175  0000                     _BRGCON2	set	3953
   176  0000                     _BRGCON2bits	set	3953
   177  0000                     _BRGCON3	set	3954
   178  0000                     _BRGCON3bits	set	3954
   179  0000                     _CANCON	set	3951
   180  0000                     _CANCONbits	set	3951
   181  0000                     _CANSTAT	set	3950
   182  0000                     _COMSTATbits	set	3956
   183  0000                     _INTCON2bits	set	4081
   184  0000                     _INTCONbits	set	4082
   185  0000                     _IPR2bits	set	4002
   186  0000                     _IPR3bits	set	4005
   187  0000                     _LATA	set	3977
   188  0000                     _LATB	set	3978
   189  0000                     _LATC	set	3979
   190  0000                     _LATD	set	3980
   191  0000                     _LATE	set	3981
   192  0000                     _PIE1bits	set	3997
   193  0000                     _PIE2bits	set	4000
   194  0000                     _PIE3bits	set	4003
   195  0000                     _PIR1bits	set	3998
   196  0000                     _PIR2bits	set	4001
   197  0000                     _PIR3bits	set	4004
   198  0000                     _PORTAbits	set	3968
   199  0000                     _PORTCbits	set	3970
   200  0000                     _RCONbits	set	4048
   201  0000                     _RXB0CON	set	3936
   202  0000                     _RXB0CONbits	set	3936
   203  0000                     _RXB0D0	set	3942
   204  0000                     _RXB0D1	set	3943
   205  0000                     _RXB0D2	set	3944
   206  0000                     _RXB0D3	set	3945
   207  0000                     _RXB0D4	set	3946
   208  0000                     _RXB0D5	set	3947
   209  0000                     _RXB0D6	set	3948
   210  0000                     _RXB0D7	set	3949
   211  0000                     _RXB0DLC	set	3941
   212  0000                     _RXB0DLCbits	set	3941
   213  0000                     _RXB0EIDH	set	3939
   214  0000                     _RXB0EIDL	set	3940
   215  0000                     _RXB0SIDH	set	3937
   216  0000                     _RXB0SIDL	set	3938
   217  0000                     _RXB0SIDLbits	set	3938
   218  0000                     _RXERRCNT	set	3957
   219  0000                     _T0CON	set	4053
   220  0000                     _T0CONbits	set	4053
   221  0000                     _T3CON	set	4017
   222  0000                     _TMR0H	set	4055
   223  0000                     _TMR0L	set	4054
   224  0000                     _TMR3H	set	4019
   225  0000                     _TMR3L	set	4018
   226  0000                     _TRISA	set	3986
   227  0000                     _TRISB	set	3987
   228  0000                     _TRISC	set	3988
   229  0000                     _TRISD	set	3989
   230  0000                     _TRISE	set	3990
   231  0000                     _TXERRCNT	set	3958
   232                           
   233                           ; #config settings
   234  0000                     
   235                           	psect	cinit
   236  0023CC                     __pcinit:
   237                           	opt stack 0
   238  0023CC                     start_initialization:
   239                           	opt stack 0
   240  0023CC                     __initialization:
   241                           	opt stack 0
   242                           
   243                           ; Clear objects allocated to BANK0 (42 bytes)
   244  0023CC  EE00  F091         	lfsr	0,__pbssBANK0
   245  0023D0  0E2A               	movlw	42
   246  0023D2                     clear_0:
   247  0023D2  6AEE               	clrf	postinc0,c
   248  0023D4  06E8               	decf	wreg,f,c
   249  0023D6  E1FD               	bnz	clear_0
   250                           
   251                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   252  0023D8  6A4A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   253                           
   254                           ; Clear objects allocated to COMRAM (36 bytes)
   255  0023DA  EE00  F001         	lfsr	0,__pbssCOMRAM
   256  0023DE  0E24               	movlw	36
   257  0023E0                     clear_1:
   258  0023E0  6AEE               	clrf	postinc0,c
   259  0023E2  06E8               	decf	wreg,f,c
   260  0023E4  E1FD               	bnz	clear_1
   261                           
   262                           ; Initialize objects allocated to COMRAM (7 bytes)
   263                           ; load TBLPTR registers with __pidataCOMRAM
   264  0023E6  0E68               	movlw	low __pidataCOMRAM
   265  0023E8  6EF6               	movwf	tblptrl,c
   266  0023EA  0E25               	movlw	high __pidataCOMRAM
   267  0023EC  6EF7               	movwf	tblptrh,c
   268  0023EE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   269  0023F0  6EF8               	movwf	tblptru,c
   270  0023F2  EE00  F043         	lfsr	0,__pdataCOMRAM
   271  0023F6  EE10 F007          	lfsr	1,7
   272  0023FA                     copy_data0:
   273  0023FA  0009               	tblrd		*+
   274  0023FC  CFF5 FFEE          	movff	tablat,postinc0
   275  002400  50E5               	movf	postdec1,w,c
   276  002402  50E1               	movf	fsr1l,w,c
   277  002404  E1FA               	bnz	copy_data0
   278  002406                     end_of_initialization:
   279                           	opt stack 0
   280  002406                     __end_of__initialization:
   281                           	opt stack 0
   282  002406  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   283  002408  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   284  00240A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   285  00240C  6EF8               	movwf	tblptru,c
   286  00240E  0100               	movlb	0
   287  002410  EF2D  F00F         	goto	_main	;jump to C main() function
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           postdec1	equ	0xFE5
   295                           fsr1l	equ	0xFE1
   296                           
   297                           	psect	bitbssCOMRAM
   298  000250                     __pbitbssCOMRAM:
   299                           	opt stack 0
   300  000250                     _remote_frame:
   301                           	opt stack 0
   302  000250                     	ds	1
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           postdec1	equ	0xFE5
   310                           fsr1l	equ	0xFE1
   311                           
   312                           	psect	bssCOMRAM
   313  000001                     __pbssCOMRAM:
   314                           	opt stack 0
   315  000001                     _counter:
   316                           	opt stack 0
   317  000001                     	ds	4
   318  000005                     _timeCounter:
   319                           	opt stack 0
   320  000005                     	ds	4
   321  000009                     _Toff:
   322                           	opt stack 0
   323  000009                     	ds	2
   324  00000B                     _Ton:
   325                           	opt stack 0
   326  00000B                     	ds	2
   327  00000D                     _calibration:
   328                           	opt stack 0
   329  00000D                     	ds	2
   330  00000F                     _clock_counter_reference:
   331                           	opt stack 0
   332  00000F                     	ds	2
   333  000011                     _correzione:
   334                           	opt stack 0
   335  000011                     	ds	2
   336  000013                     _errore:
   337                           	opt stack 0
   338  000013                     	ds	2
   339  000015                     _theorySteering:
   340                           	opt stack 0
   341  000015                     	ds	1
   342  000016                     _msg:
   343                           	opt stack 0
   344  000016                     	ds	15
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           postdec1	equ	0xFE5
   352                           fsr1l	equ	0xFE1
   353                           
   354                           	psect	dataCOMRAM
   355  000043                     __pdataCOMRAM:
   356                           	opt stack 0
   357  000043                     _limiteDx:
   358                           	opt stack 0
   359  000043                     	ds	2
   360  000045                     _potenza:
   361                           	opt stack 0
   362  000045                     	ds	2
   363  000047                     _currentSteering:
   364                           	opt stack 0
   365  000047                     	ds	1
   366  000048                     _delay_quartz_frequency_value:
   367                           	opt stack 0
   368  000048                     	ds	1
   369  000049                     _pastSteering:
   370                           	opt stack 0
   371  000049                     	ds	1
   372                           tblptru	equ	0xFF8
   373                           tblptrh	equ	0xFF7
   374                           tblptrl	equ	0xFF6
   375                           tablat	equ	0xFF5
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           postdec1	equ	0xFE5
   379                           fsr1l	equ	0xFE1
   380                           
   381                           	psect	bssBANK0
   382  000091                     __pbssBANK0:
   383                           	opt stack 0
   384  000091                     _counter_array:
   385                           	opt stack 0
   386  000091                     	ds	8
   387  000099                     _currentSteering_array:
   388                           	opt stack 0
   389  000099                     	ds	8
   390  0000A1                     _duty_cycle:
   391                           	opt stack 0
   392  0000A1                     	ds	4
   393  0000A5                     _id:
   394                           	opt stack 0
   395  0000A5                     	ds	4
   396  0000A9                     _previousTimeCounter:
   397                           	opt stack 0
   398  0000A9                     	ds	4
   399  0000AD                     _timer:
   400                           	opt stack 0
   401  0000AD                     	ds	4
   402  0000B1                     _ADCResult:
   403                           	opt stack 0
   404  0000B1                     	ds	2
   405  0000B3                     _data_array:
   406                           	opt stack 0
   407  0000B3                     	ds	8
   408                           tblptru	equ	0xFF8
   409                           tblptrh	equ	0xFF7
   410                           tblptrl	equ	0xFF6
   411                           tablat	equ	0xFF5
   412                           postinc0	equ	0xFEE
   413                           wreg	equ	0xFE8
   414                           postdec1	equ	0xFE5
   415                           fsr1l	equ	0xFE1
   416                           
   417                           	psect	cstackBANK0
   418  000060                     __pcstackBANK0:
   419                           	opt stack 0
   420  000060                     i2WriteTimer0@timer0:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x0
   424  000060                     	ds	2
   425  000062                     i2WriteTimer0@timer:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x2
   429  000062                     	ds	2
   430  000064                     ??_ISR_alta:
   431                           
   432                           ; 0 bytes @ 0x4
   433  000064                     	ds	15
   434  000073                     ?_ReadADC:
   435                           	opt stack 0
   436  000073                     ?___lwdiv:
   437                           	opt stack 0
   438  000073                     ?___lmul:
   439                           	opt stack 0
   440  000073                     CANOperationMode@mode:
   441                           	opt stack 0
   442  000073                     _CANisTxReady$2910:
   443                           	opt stack 0
   444  000073                     OpenADC@config2:
   445                           	opt stack 0
   446  000073                     WriteTimer0@timer0:
   447                           	opt stack 0
   448  000073                     ___lwdiv@dividend:
   449                           	opt stack 0
   450  000073                     CANsendMessage@identifier:
   451                           	opt stack 0
   452  000073                     CANSetMask@mask:
   453                           	opt stack 0
   454  000073                     CANSetFilter@filter:
   455                           	opt stack 0
   456  000073                     ___lmul@multiplier:
   457                           	opt stack 0
   458                           
   459                           ; 4 bytes @ 0x13
   460  000073                     	ds	1
   461  000074                     OpenADC@portconfig:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x14
   465  000074                     	ds	1
   466  000075                     ??_ReadADC:
   467  000075                     ??_OpenADC:
   468  000075                     WriteTimer0@timer:
   469                           	opt stack 0
   470  000075                     ___lwdiv@divisor:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x15
   474  000075                     	ds	2
   475  000077                     CANSetMask@type:
   476                           	opt stack 0
   477  000077                     CANSetFilter@type:
   478                           	opt stack 0
   479  000077                     OpenADC@config:
   480                           	opt stack 0
   481  000077                     CANsendMessage@data:
   482                           	opt stack 0
   483  000077                     ___lwdiv@quotient:
   484                           	opt stack 0
   485  000077                     ___lmul@multiplicand:
   486                           	opt stack 0
   487                           
   488                           ; 4 bytes @ 0x17
   489  000077                     	ds	1
   490  000078                     ??_CANSetMask:
   491  000078                     ??_CANSetFilter:
   492                           
   493                           ; 0 bytes @ 0x18
   494  000078                     	ds	1
   495  000079                     CANsendMessage@dataLength:
   496                           	opt stack 0
   497  000079                     ___lwdiv@counter:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x19
   501  000079                     	ds	1
   502  00007A                     CANsendMessage@flags:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x1A
   506  00007A                     	ds	1
   507  00007B                     ??_CANsendMessage:
   508  00007B                     ___lmul@product:
   509                           	opt stack 0
   510                           
   511                           ; 4 bytes @ 0x1B
   512  00007B                     	ds	1
   513  00007C                     CANSetMask@numBuffer:
   514                           	opt stack 0
   515  00007C                     CANSetFilter@numBuffer:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x1C
   519  00007C                     	ds	1
   520  00007D                     CANSetMask@tamp:
   521                           	opt stack 0
   522  00007D                     CANSetFilter@tamp:
   523                           	opt stack 0
   524                           
   525                           ; 4 bytes @ 0x1D
   526  00007D                     	ds	2
   527  00007F                     ?___lldiv:
   528                           	opt stack 0
   529  00007F                     CANsendMessage@tamp:
   530                           	opt stack 0
   531  00007F                     ___lldiv@dividend:
   532                           	opt stack 0
   533                           
   534                           ; 4 bytes @ 0x1F
   535  00007F                     	ds	2
   536  000081                     CANInitialize@phaseSeg1:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x21
   540  000081                     	ds	1
   541  000082                     CANInitialize@phaseSeg2:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x22
   545  000082                     	ds	1
   546  000083                     CANInitialize@SJW:
   547                           	opt stack 0
   548  000083                     ___lldiv@divisor:
   549                           	opt stack 0
   550                           
   551                           ; 4 bytes @ 0x23
   552  000083                     	ds	1
   553  000084                     CANInitialize@BRP:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x24
   557  000084                     	ds	1
   558  000085                     CANInitialize@flags:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x25
   562  000085                     	ds	1
   563  000086                     ??_CANInitialize:
   564                           
   565                           ; 0 bytes @ 0x26
   566  000086                     	ds	1
   567  000087                     ___lldiv@quotient:
   568                           	opt stack 0
   569                           
   570                           ; 4 bytes @ 0x27
   571  000087                     	ds	3
   572  00008A                     CANInitialize@propSeg:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x2A
   576  00008A                     	ds	1
   577  00008B                     CANInitialize@FilterConfig1:
   578                           	opt stack 0
   579  00008B                     ___lldiv@counter:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x2B
   583  00008B                     	ds	1
   584  00008C                     CANInitialize@FilterConfig2:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x2C
   588  00008C                     	ds	1
   589  00008D                     ??_main:
   590                           
   591                           ; 0 bytes @ 0x2D
   592  00008D                     	ds	4
   593                           tblptru	equ	0xFF8
   594                           tblptrh	equ	0xFF7
   595                           tblptrl	equ	0xFF6
   596                           tablat	equ	0xFF5
   597                           postinc0	equ	0xFEE
   598                           wreg	equ	0xFE8
   599                           postdec1	equ	0xFE5
   600                           fsr1l	equ	0xFE1
   601                           
   602                           	psect	cstackCOMRAM
   603  000025                     __pcstackCOMRAM:
   604                           	opt stack 0
   605  000025                     ?___wmul:
   606                           	opt stack 0
   607  000025                     _CANisRxReady$2912:
   608                           	opt stack 0
   609  000025                     CANreceiveMessage@msg:
   610                           	opt stack 0
   611  000025                     ___wmul@multiplier:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x0
   615  000025                     	ds	2
   616  000027                     ??_CANreceiveMessage:
   617  000027                     ___wmul@multiplicand:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0x2
   621  000027                     	ds	2
   622  000029                     ___wmul@product:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x4
   626  000029                     	ds	2
   627  00002B                     ?i1___lwdiv:
   628                           	opt stack 0
   629  00002B                     i1___lwdiv@dividend:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x6
   633  00002B                     	ds	2
   634  00002D                     i1___lwdiv@divisor:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x8
   638  00002D                     	ds	2
   639  00002F                     CANreceiveMessage@error:
   640                           	opt stack 0
   641  00002F                     i1___lwdiv@quotient:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0xA
   645  00002F                     	ds	1
   646  000030                     CANreceiveMessage@tamp:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0xB
   650  000030                     	ds	1
   651  000031                     i1___lwdiv@counter:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0xC
   655  000031                     	ds	1
   656  000032                     ??_ISR_bassa:
   657                           
   658                           ; 0 bytes @ 0xD
   659  000032                     	ds	17
   660                           tblptru	equ	0xFF8
   661                           tblptrh	equ	0xFF7
   662                           tblptrl	equ	0xFF6
   663                           tablat	equ	0xFF5
   664                           postinc0	equ	0xFEE
   665                           wreg	equ	0xFE8
   666                           postdec1	equ	0xFE5
   667                           fsr1l	equ	0xFE1
   668                           
   669 ;;
   670 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   671 ;;
   672 ;; *************** function _main *****************
   673 ;; Defined at:
   674 ;;		line 104 in file "newmain.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;		None
   679 ;; Return value:  Size  Location     Type
   680 ;;                  2  641[None  ] int 
   681 ;; Registers used:
   682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   688 ;;      Params:         0       0       0       0
   689 ;;      Locals:         0       0       0       0
   690 ;;      Temps:          0       4       0       0
   691 ;;      Totals:         0       4       0       0
   692 ;;Total ram usage:        4 bytes
   693 ;; Hardware stack levels required when called:    7
   694 ;; This function calls:
   695 ;;		_CANisRXwarningON
   696 ;;		_CANisTXwarningON
   697 ;;		_WriteTimer0
   698 ;;		___lldiv
   699 ;;		___lmul
   700 ;;		_calibrazione
   701 ;;		_configurazione_iniziale
   702 ;;		_send_data
   703 ;; This function is called by:
   704 ;;		Startup code after reset
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text0
   709  001E5A                     __ptext0:
   710                           	opt stack 0
   711  001E5A                     _main:
   712                           	opt stack 24
   713                           
   714                           ;newmain.c: 105: configurazione_iniziale();
   715                           
   716                           ;incstack = 0
   717  001E5A  ECC2  F010         	call	_configurazione_iniziale	;wreg free
   718                           
   719                           ;newmain.c: 106: timer = (((0 * 700) / 90) + 800) *2;
   720  001E5E  0E40               	movlw	64
   721  001E60  0100               	movlb	0	; () banked
   722  001E62  6FAD               	movwf	_timer& (0+255),b
   723  001E64  0E06               	movlw	6
   724  001E66  6FAE               	movwf	(_timer+1)& (0+255),b
   725  001E68  0E00               	movlw	0
   726  001E6A  6FAF               	movwf	(_timer+2)& (0+255),b
   727  001E6C  0E00               	movlw	0
   728  001E6E  6FB0               	movwf	(_timer+3)& (0+255),b
   729                           
   730                           ; BSR set to: 0
   731                           ;newmain.c: 107: Ton = 65536 - timer;
   732  001E70  C0AD  F08D         	movff	_timer,??_main
   733  001E74  C0AE  F08E         	movff	_timer+1,??_main+1
   734  001E78  0100               	movlb	0	; () banked
   735  001E7A  1F8D               	comf	??_main& (0+255),f,b
   736  001E7C  1F8E               	comf	(??_main+1)& (0+255),f,b
   737  001E7E  4B8D               	infsnz	??_main& (0+255),f,b
   738  001E80  2B8E               	incf	(??_main+1)& (0+255),f,b
   739  001E82  C08D  F00B         	movff	??_main,_Ton
   740  001E86  C08E  F00C         	movff	??_main+1,_Ton+1
   741                           
   742                           ; BSR set to: 0
   743                           ;newmain.c: 108: Toff = 20000 - (timer / 2);
   744  001E8A  C0AD  F08D         	movff	_timer,??_main
   745  001E8E  C0AE  F08E         	movff	_timer+1,??_main+1
   746  001E92  C0AF  F08F         	movff	_timer+2,??_main+2
   747  001E96  C0B0  F090         	movff	_timer+3,??_main+3
   748  001E9A  0100               	movlb	0	; () banked
   749  001E9C  90D8               	bcf	status,0,c
   750  001E9E  3390               	rrcf	(??_main+3)& (0+255),f,b
   751  001EA0  338F               	rrcf	(??_main+2)& (0+255),f,b
   752  001EA2  338E               	rrcf	(??_main+1)& (0+255),f,b
   753  001EA4  338D               	rrcf	??_main& (0+255),f,b
   754  001EA6  0100               	movlb	0	; () banked
   755  001EA8  1F8D               	comf	??_main& (0+255),f,b
   756  001EAA  1F8E               	comf	(??_main+1)& (0+255),f,b
   757  001EAC  4B8D               	infsnz	??_main& (0+255),f,b
   758  001EAE  2B8E               	incf	(??_main+1)& (0+255),f,b
   759  001EB0  0E20               	movlw	32
   760  001EB2  0100               	movlb	0	; () banked
   761  001EB4  258D               	addwf	??_main& (0+255),w,b
   762  001EB6  6E09               	movwf	_Toff,c
   763  001EB8  0E4E               	movlw	78
   764  001EBA  0100               	movlb	0	; () banked
   765  001EBC  218E               	addwfc	(??_main+1)& (0+255),w,b
   766  001EBE  6E0A               	movwf	_Toff+1,c
   767                           
   768                           ; BSR set to: 0
   769                           ;newmain.c: 109: Toff = (65536 - (Toff * 2));
   770  001EC0  C009  F08D         	movff	_Toff,??_main
   771  001EC4  C00A  F08E         	movff	_Toff+1,??_main+1
   772  001EC8  90D8               	bcf	status,0,c
   773  001ECA  0100               	movlb	0	; () banked
   774  001ECC  378D               	rlcf	??_main& (0+255),f,b
   775  001ECE  378E               	rlcf	(??_main+1)& (0+255),f,b
   776  001ED0  0100               	movlb	0	; () banked
   777  001ED2  1F8D               	comf	??_main& (0+255),f,b
   778  001ED4  1F8E               	comf	(??_main+1)& (0+255),f,b
   779  001ED6  4B8D               	infsnz	??_main& (0+255),f,b
   780  001ED8  2B8E               	incf	(??_main+1)& (0+255),f,b
   781  001EDA  C08D  F009         	movff	??_main,_Toff
   782  001EDE  C08E  F00A         	movff	??_main+1,_Toff+1
   783                           
   784                           ; BSR set to: 0
   785                           ;newmain.c: 110: WriteTimer0(Ton);
   786  001EE2  C00B  F073         	movff	_Ton,WriteTimer0@timer0
   787  001EE6  C00C  F074         	movff	_Ton+1,WriteTimer0@timer0+1
   788  001EEA  EC90  F012         	call	_WriteTimer0	;wreg free
   789                           
   790                           ;newmain.c: 111: T0CONbits.TMR0ON = 1;
   791  001EEE  8ED5               	bsf	4053,7,c	;volatile
   792                           
   793                           ;newmain.c: 112: Toff = 0x4588;
   794  001EF0  0E45               	movlw	69
   795  001EF2  6E0A               	movwf	_Toff+1,c
   796  001EF4  0E88               	movlw	136
   797  001EF6  6E09               	movwf	_Toff,c
   798  001EF8                     l3616:
   799                           
   800                           ;newmain.c: 114: calibrazione();
   801  001EF8  EC0A  F012         	call	_calibrazione	;wreg free
   802                           
   803                           ;newmain.c: 115: duty_cycle = currentSteering;
   804  001EFC  5047               	movf	_currentSteering,w,c
   805  001EFE  0100               	movlb	0	; () banked
   806  001F00  6FA1               	movwf	_duty_cycle& (0+255),b
   807  001F02  6BA2               	clrf	(_duty_cycle+1)& (0+255),b
   808  001F04  6BA3               	clrf	(_duty_cycle+2)& (0+255),b
   809  001F06  6BA4               	clrf	(_duty_cycle+3)& (0+255),b
   810                           
   811                           ; BSR set to: 0
   812                           ;newmain.c: 146: if (PORTCbits.RC0 == 0) {
   813  001F08  B082               	btfsc	3970,0,c	;volatile
   814  001F0A  D7F6               	goto	l3616
   815                           
   816                           ; BSR set to: 0
   817                           ;newmain.c: 147: timer = (((duty_cycle * 700) / 90) + 800) *2;
   818  001F0C  C0A1  F073         	movff	_duty_cycle,___lmul@multiplier
   819  001F10  C0A2  F074         	movff	_duty_cycle+1,___lmul@multiplier+1
   820  001F14  C0A3  F075         	movff	_duty_cycle+2,___lmul@multiplier+2
   821  001F18  C0A4  F076         	movff	_duty_cycle+3,___lmul@multiplier+3
   822  001F1C  0EBC               	movlw	188
   823  001F1E  0100               	movlb	0	; () banked
   824  001F20  6F77               	movwf	___lmul@multiplicand& (0+255),b
   825  001F22  0E02               	movlw	2
   826  001F24  6F78               	movwf	(___lmul@multiplicand+1)& (0+255),b
   827  001F26  0E00               	movlw	0
   828  001F28  6F79               	movwf	(___lmul@multiplicand+2)& (0+255),b
   829  001F2A  0E00               	movlw	0
   830  001F2C  6F7A               	movwf	(___lmul@multiplicand+3)& (0+255),b
   831  001F2E  EC82  F011         	call	___lmul	;wreg free
   832  001F32  C073  F07F         	movff	?___lmul,___lldiv@dividend
   833  001F36  C074  F080         	movff	?___lmul+1,___lldiv@dividend+1
   834  001F3A  C075  F081         	movff	?___lmul+2,___lldiv@dividend+2
   835  001F3E  C076  F082         	movff	?___lmul+3,___lldiv@dividend+3
   836  001F42  0E5A               	movlw	90
   837  001F44  0100               	movlb	0	; () banked
   838  001F46  6F83               	movwf	___lldiv@divisor& (0+255),b
   839  001F48  0E00               	movlw	0
   840  001F4A  6F84               	movwf	(___lldiv@divisor+1)& (0+255),b
   841  001F4C  0E00               	movlw	0
   842  001F4E  6F85               	movwf	(___lldiv@divisor+2)& (0+255),b
   843  001F50  0E00               	movlw	0
   844  001F52  6F86               	movwf	(___lldiv@divisor+3)& (0+255),b
   845  001F54  EC0B  F010         	call	___lldiv	;wreg free
   846  001F58  90D8               	bcf	status,0,c
   847  001F5A  0100               	movlb	0	; () banked
   848  001F5C  357F               	rlcf	?___lldiv& (0+255),w,b
   849  001F5E  0100               	movlb	0	; () banked
   850  001F60  6F8D               	movwf	??_main& (0+255),b
   851  001F62  0100               	movlb	0	; () banked
   852  001F64  3580               	rlcf	(?___lldiv+1)& (0+255),w,b
   853  001F66  0100               	movlb	0	; () banked
   854  001F68  6F8E               	movwf	(??_main+1)& (0+255),b
   855  001F6A  0100               	movlb	0	; () banked
   856  001F6C  3581               	rlcf	(?___lldiv+2)& (0+255),w,b
   857  001F6E  0100               	movlb	0	; () banked
   858  001F70  6F8F               	movwf	(??_main+2)& (0+255),b
   859  001F72  0100               	movlb	0	; () banked
   860  001F74  3582               	rlcf	(?___lldiv+3)& (0+255),w,b
   861  001F76  0100               	movlb	0	; () banked
   862  001F78  6F90               	movwf	(??_main+3)& (0+255),b
   863  001F7A  0E40               	movlw	64
   864  001F7C  0100               	movlb	0	; () banked
   865  001F7E  258D               	addwf	??_main& (0+255),w,b
   866  001F80  0100               	movlb	0	; () banked
   867  001F82  6FAD               	movwf	_timer& (0+255),b
   868  001F84  0E06               	movlw	6
   869  001F86  0100               	movlb	0	; () banked
   870  001F88  218E               	addwfc	(??_main+1)& (0+255),w,b
   871  001F8A  0100               	movlb	0	; () banked
   872  001F8C  6FAE               	movwf	(_timer+1)& (0+255),b
   873  001F8E  0E00               	movlw	0
   874  001F90  0100               	movlb	0	; () banked
   875  001F92  218F               	addwfc	(??_main+2)& (0+255),w,b
   876  001F94  0100               	movlb	0	; () banked
   877  001F96  6FAF               	movwf	(_timer+2)& (0+255),b
   878  001F98  0E00               	movlw	0
   879  001F9A  0100               	movlb	0	; () banked
   880  001F9C  2190               	addwfc	(??_main+3)& (0+255),w,b
   881  001F9E  0100               	movlb	0	; () banked
   882  001FA0  6FB0               	movwf	(_timer+3)& (0+255),b
   883                           
   884                           ; BSR set to: 0
   885                           ;newmain.c: 148: Ton = 65536 - timer;
   886  001FA2  C0AD  F08D         	movff	_timer,??_main
   887  001FA6  C0AE  F08E         	movff	_timer+1,??_main+1
   888  001FAA  0100               	movlb	0	; () banked
   889  001FAC  1F8D               	comf	??_main& (0+255),f,b
   890  001FAE  1F8E               	comf	(??_main+1)& (0+255),f,b
   891  001FB0  4B8D               	infsnz	??_main& (0+255),f,b
   892  001FB2  2B8E               	incf	(??_main+1)& (0+255),f,b
   893  001FB4  C08D  F00B         	movff	??_main,_Ton
   894  001FB8  C08E  F00C         	movff	??_main+1,_Ton+1
   895                           
   896                           ; BSR set to: 0
   897                           ;newmain.c: 149: Toff = 20000 - (timer / 2);
   898  001FBC  C0AD  F08D         	movff	_timer,??_main
   899  001FC0  C0AE  F08E         	movff	_timer+1,??_main+1
   900  001FC4  C0AF  F08F         	movff	_timer+2,??_main+2
   901  001FC8  C0B0  F090         	movff	_timer+3,??_main+3
   902  001FCC  0100               	movlb	0	; () banked
   903  001FCE  90D8               	bcf	status,0,c
   904  001FD0  3390               	rrcf	(??_main+3)& (0+255),f,b
   905  001FD2  338F               	rrcf	(??_main+2)& (0+255),f,b
   906  001FD4  338E               	rrcf	(??_main+1)& (0+255),f,b
   907  001FD6  338D               	rrcf	??_main& (0+255),f,b
   908  001FD8  0100               	movlb	0	; () banked
   909  001FDA  1F8D               	comf	??_main& (0+255),f,b
   910  001FDC  1F8E               	comf	(??_main+1)& (0+255),f,b
   911  001FDE  4B8D               	infsnz	??_main& (0+255),f,b
   912  001FE0  2B8E               	incf	(??_main+1)& (0+255),f,b
   913  001FE2  0E20               	movlw	32
   914  001FE4  0100               	movlb	0	; () banked
   915  001FE6  258D               	addwf	??_main& (0+255),w,b
   916  001FE8  6E09               	movwf	_Toff,c
   917  001FEA  0E4E               	movlw	78
   918  001FEC  0100               	movlb	0	; () banked
   919  001FEE  218E               	addwfc	(??_main+1)& (0+255),w,b
   920  001FF0  6E0A               	movwf	_Toff+1,c
   921                           
   922                           ; BSR set to: 0
   923                           ;newmain.c: 150: Toff = (65536 - (Toff * 2));
   924  001FF2  C009  F08D         	movff	_Toff,??_main
   925  001FF6  C00A  F08E         	movff	_Toff+1,??_main+1
   926  001FFA  90D8               	bcf	status,0,c
   927  001FFC  0100               	movlb	0	; () banked
   928  001FFE  378D               	rlcf	??_main& (0+255),f,b
   929  002000  378E               	rlcf	(??_main+1)& (0+255),f,b
   930  002002  0100               	movlb	0	; () banked
   931  002004  1F8D               	comf	??_main& (0+255),f,b
   932  002006  1F8E               	comf	(??_main+1)& (0+255),f,b
   933  002008  4B8D               	infsnz	??_main& (0+255),f,b
   934  00200A  2B8E               	incf	(??_main+1)& (0+255),f,b
   935  00200C  C08D  F009         	movff	??_main,_Toff
   936  002010  C08E  F00A         	movff	??_main+1,_Toff+1
   937                           
   938                           ; BSR set to: 0
   939                           
   940                           ; BSR set to: 0
   941  002014  D771               	goto	l3616
   942  002016                     __end_of_main:
   943                           	opt stack 0
   944                           tblptru	equ	0xFF8
   945                           tblptrh	equ	0xFF7
   946                           tblptrl	equ	0xFF6
   947                           tablat	equ	0xFF5
   948                           postinc0	equ	0xFEE
   949                           wreg	equ	0xFE8
   950                           postdec1	equ	0xFE5
   951                           fsr1l	equ	0xFE1
   952                           status	equ	0xFD8
   953                           
   954 ;; *************** function _send_data *****************
   955 ;; Defined at:
   956 ;;		line 164 in file "newmain.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;		None               void
   963 ;; Registers used:
   964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   970 ;;      Params:         0       0       0       0
   971 ;;      Locals:         0       0       0       0
   972 ;;      Temps:          0       0       0       0
   973 ;;      Totals:         0       0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    5
   977 ;; This function calls:
   978 ;;		_CANisTxReady
   979 ;;		_CANsendMessage
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text1
   986  00245A                     __ptext1:
   987                           	opt stack 0
   988  00245A                     _send_data:
   989                           	opt stack 25
   990                           
   991                           ;newmain.c: 165: if (CANisTxReady()) {
   992                           
   993                           ;incstack = 0
   994  00245A  EC5F  F012         	call	_CANisTxReady	;wreg free
   995  00245E  0900               	iorlw	0
   996  002460  B4D8               	btfsc	status,2,c
   997  002462  0012               	return	
   998                           
   999                           ;newmain.c: 166: if (remote_frame == 1) {
  1000  002464  A04A               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1001  002466  D016               	goto	l3472
  1002                           
  1003                           ;newmain.c: 168: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG &
  1004                           ;newmain.c: 169: CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1005  002468  C0A5  F073         	movff	_id,CANsendMessage@identifier
  1006  00246C  C0A6  F074         	movff	_id+1,CANsendMessage@identifier+1
  1007  002470  C0A7  F075         	movff	_id+2,CANsendMessage@identifier+2
  1008  002474  C0A8  F076         	movff	_id+3,CANsendMessage@identifier+3
  1009  002478  0EB3               	movlw	low _data_array
  1010  00247A  0100               	movlb	0	; () banked
  1011  00247C  6F77               	movwf	CANsendMessage@data& (0+255),b
  1012  00247E  0E00               	movlw	high _data_array
  1013  002480  0100               	movlb	0	; () banked
  1014  002482  6F78               	movwf	(CANsendMessage@data+1)& (0+255),b
  1015  002484  0E08               	movlw	8
  1016  002486  0100               	movlb	0	; () banked
  1017  002488  6F79               	movwf	CANsendMessage@dataLength& (0+255),b
  1018  00248A  0EBC               	movlw	188
  1019  00248C  0100               	movlb	0	; () banked
  1020  00248E  6F7A               	movwf	CANsendMessage@flags& (0+255),b
  1021  002490  EC2F  F006         	call	_CANsendMessage	;wreg free
  1022  002494                     l3472:
  1023                           
  1024                           ;newmain.c: 174: }
  1025                           ;newmain.c: 175: remote_frame = 0;
  1026  002494  904A               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1027  002496  0012               	return	
  1028  002498                     __end_of_send_data:
  1029                           	opt stack 0
  1030                           tblptru	equ	0xFF8
  1031                           tblptrh	equ	0xFF7
  1032                           tblptrl	equ	0xFF6
  1033                           tablat	equ	0xFF5
  1034                           postinc0	equ	0xFEE
  1035                           wreg	equ	0xFE8
  1036                           postdec1	equ	0xFE5
  1037                           fsr1l	equ	0xFE1
  1038                           status	equ	0xFD8
  1039                           
  1040 ;; *************** function _CANsendMessage *****************
  1041 ;; Defined at:
  1042 ;;		line 294 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  identifier      4   19[BANK0 ] unsigned long 
  1045 ;;  data            2   23[BANK0 ] PTR unsigned char 
  1046 ;;		 -> data_array(8), 
  1047 ;;  dataLength      1   25[BANK0 ] unsigned char 
  1048 ;;  flags           1   26[BANK0 ] enum E16866
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  tamp            4   31[BANK0 ] unsigned long 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;		None               void
  1053 ;; Registers used:
  1054 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1060 ;;      Params:         0       8       0       0
  1061 ;;      Locals:         0       4       0       0
  1062 ;;      Temps:          0       4       0       0
  1063 ;;      Totals:         0      16       0       0
  1064 ;;Total ram usage:       16 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    4
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_send_data
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text2
  1075  000C5E                     __ptext2:
  1076                           	opt stack 0
  1077  000C5E                     _CANsendMessage:
  1078                           	opt stack 25
  1079                           
  1080                           ;inc\CANlib.h: 296: unsigned long tamp;
  1081                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1082                           
  1083                           ;incstack = 0
  1084  000C5E  010F               	movlb	15	; () banked
  1085  000C60  B740               	btfsc	64,3,b	;volatile
  1086  000C62  D13F               	goto	l361
  1087                           
  1088                           ; BSR set to: 15
  1089                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1090  000C64  C079  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1091                           
  1092                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1093  000C68  0100               	movlb	0	; () banked
  1094  000C6A  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1095  000C6C  D003               	goto	l362
  1096                           
  1097                           ; BSR set to: 0
  1098                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1099  000C6E  010F               	movlb	15	; () banked
  1100  000C70  8D45               	bsf	69,6,b	;volatile
  1101  000C72  D002               	goto	l363
  1102  000C74                     l362:
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;inc\CANlib.h: 302: else
  1106                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1107  000C74  010F               	movlb	15	; () banked
  1108  000C76  9D45               	bcf	69,6,b	;volatile
  1109  000C78                     l363:
  1110                           
  1111                           ; BSR set to: 15
  1112                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1113  000C78  0100               	movlb	0	; () banked
  1114  000C7A  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1115  000C7C  D079               	goto	l364
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;inc\CANlib.h: 306: {
  1119                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1120  000C7E  0100               	movlb	0	; () banked
  1121  000C80  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1122  000C82  0100               	movlb	0	; () banked
  1123  000C84  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1124  000C86  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1125  000C88  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1126  000C8A  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1130  000C8C  C07F  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1134  000C90  0E00               	movlw	0
  1135  000C92  0100               	movlb	0	; () banked
  1136  000C94  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1137  000C96  0100               	movlb	0	; () banked
  1138  000C98  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1139  000C9A  0EFF               	movlw	255
  1140  000C9C  0100               	movlb	0	; () banked
  1141  000C9E  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1142  000CA0  0100               	movlb	0	; () banked
  1143  000CA2  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1144  000CA4  0E00               	movlw	0
  1145  000CA6  0100               	movlb	0	; () banked
  1146  000CA8  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1147  000CAA  0100               	movlb	0	; () banked
  1148  000CAC  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1149  000CAE  0E00               	movlw	0
  1150  000CB0  0100               	movlb	0	; () banked
  1151  000CB2  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1152  000CB4  0100               	movlb	0	; () banked
  1153  000CB6  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1154                           
  1155                           ; BSR set to: 0
  1156                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1157  000CB8  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1158  000CBC  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1159  000CC0  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1160  000CC4  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1161  000CC8  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1162  000CCC  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1163  000CD0  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1164  000CD4  0100               	movlb	0	; () banked
  1165  000CD6  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1166  000CD8  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1167  000CDC  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1168  000CE0  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1169  000CE4  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1173  000CE8  C07F  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1177  000CEC  0E00               	movlw	0
  1178  000CEE  010F               	movlb	15	; () banked
  1179  000CF0  6F42               	movwf	66,b	;volatile
  1180                           
  1181                           ; BSR set to: 15
  1182                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1183  000CF2  010F               	movlb	15	; () banked
  1184  000CF4  8742               	bsf	66,3,b	;volatile
  1185                           
  1186                           ; BSR set to: 15
  1187                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1188  000CF6  0100               	movlb	0	; () banked
  1189  000CF8  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1190  000CFA  D002               	goto	l365
  1191                           
  1192                           ; BSR set to: 0
  1193                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1194  000CFC  010F               	movlb	15	; () banked
  1195  000CFE  8142               	bsf	66,0,b	;volatile
  1196  000D00                     l365:
  1197                           
  1198                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1199  000D00  0100               	movlb	0	; () banked
  1200  000D02  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1201  000D04  D002               	goto	l366
  1202                           
  1203                           ; BSR set to: 0
  1204                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1205  000D06  010F               	movlb	15	; () banked
  1206  000D08  8342               	bsf	66,1,b	;volatile
  1207  000D0A                     l366:
  1208                           
  1209                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1210  000D0A  0100               	movlb	0	; () banked
  1211  000D0C  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1212  000D0E  D002               	goto	l367
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1216  000D10  010F               	movlb	15	; () banked
  1217  000D12  8B42               	bsf	66,5,b	;volatile
  1218  000D14                     l367:
  1219                           
  1220                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1221  000D14  0100               	movlb	0	; () banked
  1222  000D16  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1223  000D18  D002               	goto	l368
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1227  000D1A  010F               	movlb	15	; () banked
  1228  000D1C  8D42               	bsf	66,6,b	;volatile
  1229  000D1E                     l368:
  1230                           
  1231                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1232  000D1E  0100               	movlb	0	; () banked
  1233  000D20  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1234  000D22  D002               	goto	l2996
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1238  000D24  010F               	movlb	15	; () banked
  1239  000D26  8F42               	bsf	66,7,b	;volatile
  1240  000D28                     l2996:
  1241                           
  1242                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1243  000D28  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1244  000D2C  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1245  000D30  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1246  000D34  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1247  000D38  0E16               	movlw	22
  1248  000D3A  D006               	goto	u3150
  1249  000D3C                     u3155:
  1250  000D3C  0100               	movlb	0	; () banked
  1251  000D3E  90D8               	bcf	status,0,c
  1252  000D40  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1253  000D42  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1254  000D44  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1255  000D46  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1256  000D48                     u3150:
  1257  000D48  2EE8               	decfsz	wreg,f,c
  1258  000D4A  D7F8               	goto	u3155
  1259  000D4C  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1260  000D50  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1261  000D54  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1262  000D58  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1266  000D5C  0100               	movlb	0	; () banked
  1267  000D5E  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1268  000D60  0100               	movlb	0	; () banked
  1269  000D62  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1270  000D64  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1271  000D66  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1272  000D68  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1276  000D6A  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1277                           
  1278                           ;inc\CANlib.h: 332: }
  1279  000D6E  D059               	goto	l3016
  1280  000D70                     l364:
  1281                           
  1282                           ; BSR set to: 0
  1283                           ;inc\CANlib.h: 334: else
  1284                           ;inc\CANlib.h: 336: {
  1285                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1286  000D70  010F               	movlb	15	; () banked
  1287  000D72  9742               	bcf	66,3,b	;volatile
  1288                           
  1289                           ; BSR set to: 15
  1290                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1291  000D74  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1292  000D78  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1293  000D7C  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1294  000D80  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1295  000D84  0E04               	movlw	4
  1296  000D86  D006               	goto	u3160
  1297  000D88                     u3165:
  1298  000D88  0100               	movlb	0	; () banked
  1299  000D8A  90D8               	bcf	status,0,c
  1300  000D8C  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1301  000D8E  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1302  000D90  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1303  000D92  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1304  000D94                     u3160:
  1305  000D94  2EE8               	decfsz	wreg,f,c
  1306  000D96  D7F8               	goto	u3165
  1307  000D98  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1308  000D9C  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1309  000DA0  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1310  000DA4  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1314  000DA8  0100               	movlb	0	; () banked
  1315  000DAA  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1316  000DAC  0100               	movlb	0	; () banked
  1317  000DAE  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1318  000DB0  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1319  000DB2  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1320  000DB4  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1324  000DB6  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1328  000DBA  0E07               	movlw	7
  1329  000DBC  0100               	movlb	0	; () banked
  1330  000DBE  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1331  000DC0  0100               	movlb	0	; () banked
  1332  000DC2  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1333  000DC4  0E00               	movlw	0
  1334  000DC6  0100               	movlb	0	; () banked
  1335  000DC8  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1336  000DCA  0100               	movlb	0	; () banked
  1337  000DCC  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1338  000DCE  0E00               	movlw	0
  1339  000DD0  0100               	movlb	0	; () banked
  1340  000DD2  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1341  000DD4  0100               	movlb	0	; () banked
  1342  000DD6  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1343  000DD8  0E00               	movlw	0
  1344  000DDA  0100               	movlb	0	; () banked
  1345  000DDC  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1346  000DDE  0100               	movlb	0	; () banked
  1347  000DE0  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1351  000DE2  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1352  000DE6  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1353  000DEA  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1354  000DEE  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1355  000DF2  0E05               	movlw	5
  1356  000DF4                     u3175:
  1357  000DF4  90D8               	bcf	status,0,c
  1358  000DF6  0100               	movlb	0	; () banked
  1359  000DF8  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1360  000DFA  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1361  000DFC  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1362  000DFE  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1363  000E00  2EE8               	decfsz	wreg,f,c
  1364  000E02  D7F8               	goto	u3175
  1365  000E04  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1366  000E08  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1367  000E0C  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1368  000E10  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1372  000E14  010F               	movlb	15	; () banked
  1373  000E16  5142               	movf	66,w,b	;volatile
  1374  000E18  0B1F               	andlw	31
  1375  000E1A  010F               	movlb	15	; () banked
  1376  000E1C  6F42               	movwf	66,b	;volatile
  1377                           
  1378                           ; BSR set to: 15
  1379                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1380  000E1E  C07F  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1381  000E22                     l3016:
  1382                           
  1383                           ;inc\CANlib.h: 347: }
  1384                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1385  000E22  0100               	movlb	0	; () banked
  1386  000E24  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1387  000E26  D003               	goto	l371
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1391  000E28  010F               	movlb	15	; () banked
  1392  000E2A  8140               	bsf	64,0,b	;volatile
  1393  000E2C  D002               	goto	l372
  1394  000E2E                     l371:
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;inc\CANlib.h: 351: else
  1398                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1399  000E2E  010F               	movlb	15	; () banked
  1400  000E30  9140               	bcf	64,0,b	;volatile
  1401  000E32                     l372:
  1402                           
  1403                           ; BSR set to: 15
  1404                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1405  000E32  0100               	movlb	0	; () banked
  1406  000E34  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1407  000E36  D003               	goto	l373
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1411  000E38  010F               	movlb	15	; () banked
  1412  000E3A  8340               	bsf	64,1,b	;volatile
  1413  000E3C  D002               	goto	l3022
  1414  000E3E                     l373:
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;inc\CANlib.h: 355: else
  1418                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1419  000E3E  010F               	movlb	15	; () banked
  1420  000E40  9340               	bcf	64,1,b	;volatile
  1421  000E42                     l3022:
  1422                           
  1423                           ; BSR set to: 15
  1424                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1425  000E42  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1426  000E46  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1427  000E4A  50DF               	movf	indf2,w,c
  1428  000E4C  010F               	movlb	15	; () banked
  1429  000E4E  6F46               	movwf	70,b	;volatile
  1430                           
  1431                           ; BSR set to: 15
  1432                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1433  000E50  0100               	movlb	0	; () banked
  1434  000E52  EE20 F001          	lfsr	2,1
  1435  000E56  5177               	movf	CANsendMessage@data& (0+255),w,b
  1436  000E58  26D9               	addwf	fsr2l,f,c
  1437  000E5A  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1438  000E5C  22DA               	addwfc	fsr2h,f,c
  1439  000E5E  50DF               	movf	indf2,w,c
  1440  000E60  010F               	movlb	15	; () banked
  1441  000E62  6F47               	movwf	71,b	;volatile
  1442                           
  1443                           ; BSR set to: 15
  1444                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1445  000E64  0100               	movlb	0	; () banked
  1446  000E66  EE20 F002          	lfsr	2,2
  1447  000E6A  5177               	movf	CANsendMessage@data& (0+255),w,b
  1448  000E6C  26D9               	addwf	fsr2l,f,c
  1449  000E6E  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1450  000E70  22DA               	addwfc	fsr2h,f,c
  1451  000E72  50DF               	movf	indf2,w,c
  1452  000E74  010F               	movlb	15	; () banked
  1453  000E76  6F48               	movwf	72,b	;volatile
  1454                           
  1455                           ; BSR set to: 15
  1456                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1457  000E78  0100               	movlb	0	; () banked
  1458  000E7A  EE20 F003          	lfsr	2,3
  1459  000E7E  5177               	movf	CANsendMessage@data& (0+255),w,b
  1460  000E80  26D9               	addwf	fsr2l,f,c
  1461  000E82  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1462  000E84  22DA               	addwfc	fsr2h,f,c
  1463  000E86  50DF               	movf	indf2,w,c
  1464  000E88  010F               	movlb	15	; () banked
  1465  000E8A  6F49               	movwf	73,b	;volatile
  1466                           
  1467                           ; BSR set to: 15
  1468                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1469  000E8C  0100               	movlb	0	; () banked
  1470  000E8E  EE20 F004          	lfsr	2,4
  1471  000E92  5177               	movf	CANsendMessage@data& (0+255),w,b
  1472  000E94  26D9               	addwf	fsr2l,f,c
  1473  000E96  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1474  000E98  22DA               	addwfc	fsr2h,f,c
  1475  000E9A  50DF               	movf	indf2,w,c
  1476  000E9C  010F               	movlb	15	; () banked
  1477  000E9E  6F4A               	movwf	74,b	;volatile
  1478                           
  1479                           ; BSR set to: 15
  1480                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1481  000EA0  0100               	movlb	0	; () banked
  1482  000EA2  EE20 F005          	lfsr	2,5
  1483  000EA6  5177               	movf	CANsendMessage@data& (0+255),w,b
  1484  000EA8  26D9               	addwf	fsr2l,f,c
  1485  000EAA  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1486  000EAC  22DA               	addwfc	fsr2h,f,c
  1487  000EAE  50DF               	movf	indf2,w,c
  1488  000EB0  010F               	movlb	15	; () banked
  1489  000EB2  6F4B               	movwf	75,b	;volatile
  1490                           
  1491                           ; BSR set to: 15
  1492                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1493  000EB4  0100               	movlb	0	; () banked
  1494  000EB6  EE20 F006          	lfsr	2,6
  1495  000EBA  5177               	movf	CANsendMessage@data& (0+255),w,b
  1496  000EBC  26D9               	addwf	fsr2l,f,c
  1497  000EBE  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1498  000EC0  22DA               	addwfc	fsr2h,f,c
  1499  000EC2  50DF               	movf	indf2,w,c
  1500  000EC4  010F               	movlb	15	; () banked
  1501  000EC6  6F4C               	movwf	76,b	;volatile
  1502                           
  1503                           ; BSR set to: 15
  1504                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1505  000EC8  0100               	movlb	0	; () banked
  1506  000ECA  EE20 F007          	lfsr	2,7
  1507  000ECE  5177               	movf	CANsendMessage@data& (0+255),w,b
  1508  000ED0  26D9               	addwf	fsr2l,f,c
  1509  000ED2  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1510  000ED4  22DA               	addwfc	fsr2h,f,c
  1511  000ED6  50DF               	movf	indf2,w,c
  1512  000ED8  010F               	movlb	15	; () banked
  1513  000EDA  6F4D               	movwf	77,b	;volatile
  1514                           
  1515                           ; BSR set to: 15
  1516                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1517  000EDC  010F               	movlb	15	; () banked
  1518  000EDE  8740               	bsf	64,3,b	;volatile
  1519                           
  1520                           ; BSR set to: 15
  1521                           ;inc\CANlib.h: 368: return;
  1522  000EE0  0012               	return	
  1523  000EE2                     l361:
  1524                           
  1525                           ; BSR set to: 15
  1526                           ;inc\CANlib.h: 369: }
  1527                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1528  000EE2  010F               	movlb	15	; () banked
  1529  000EE4  B730               	btfsc	48,3,b	;volatile
  1530  000EE6  D13F               	goto	l376
  1531                           
  1532                           ; BSR set to: 15
  1533                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1534  000EE8  C079  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1535                           
  1536                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1537  000EEC  0100               	movlb	0	; () banked
  1538  000EEE  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1539  000EF0  D003               	goto	l377
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1543  000EF2  010F               	movlb	15	; () banked
  1544  000EF4  8D35               	bsf	53,6,b	;volatile
  1545  000EF6  D002               	goto	l378
  1546  000EF8                     l377:
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;inc\CANlib.h: 378: else
  1550                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1551  000EF8  010F               	movlb	15	; () banked
  1552  000EFA  9D35               	bcf	53,6,b	;volatile
  1553  000EFC                     l378:
  1554                           
  1555                           ; BSR set to: 15
  1556                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1557  000EFC  0100               	movlb	0	; () banked
  1558  000EFE  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1559  000F00  D079               	goto	l379
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;inc\CANlib.h: 382: {
  1563                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1564  000F02  0100               	movlb	0	; () banked
  1565  000F04  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1566  000F06  0100               	movlb	0	; () banked
  1567  000F08  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1568  000F0A  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1569  000F0C  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1570  000F0E  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1574  000F10  C07F  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1578  000F14  0E00               	movlw	0
  1579  000F16  0100               	movlb	0	; () banked
  1580  000F18  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1581  000F1A  0100               	movlb	0	; () banked
  1582  000F1C  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1583  000F1E  0EFF               	movlw	255
  1584  000F20  0100               	movlb	0	; () banked
  1585  000F22  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1586  000F24  0100               	movlb	0	; () banked
  1587  000F26  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1588  000F28  0E00               	movlw	0
  1589  000F2A  0100               	movlb	0	; () banked
  1590  000F2C  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1591  000F2E  0100               	movlb	0	; () banked
  1592  000F30  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1593  000F32  0E00               	movlw	0
  1594  000F34  0100               	movlb	0	; () banked
  1595  000F36  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1596  000F38  0100               	movlb	0	; () banked
  1597  000F3A  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1601  000F3C  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1602  000F40  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1603  000F44  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1604  000F48  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1605  000F4C  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1606  000F50  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1607  000F54  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1608  000F58  0100               	movlb	0	; () banked
  1609  000F5A  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1610  000F5C  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1611  000F60  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1612  000F64  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1613  000F68  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1617  000F6C  C07F  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  1621  000F70  0E00               	movlw	0
  1622  000F72  010F               	movlb	15	; () banked
  1623  000F74  6F32               	movwf	50,b	;volatile
  1624                           
  1625                           ; BSR set to: 15
  1626                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1627  000F76  010F               	movlb	15	; () banked
  1628  000F78  8732               	bsf	50,3,b	;volatile
  1629                           
  1630                           ; BSR set to: 15
  1631                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  1632  000F7A  0100               	movlb	0	; () banked
  1633  000F7C  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1634  000F7E  D002               	goto	l380
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  1638  000F80  010F               	movlb	15	; () banked
  1639  000F82  8132               	bsf	50,0,b	;volatile
  1640  000F84                     l380:
  1641                           
  1642                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  1643  000F84  0100               	movlb	0	; () banked
  1644  000F86  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1645  000F88  D002               	goto	l381
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  1649  000F8A  010F               	movlb	15	; () banked
  1650  000F8C  8332               	bsf	50,1,b	;volatile
  1651  000F8E                     l381:
  1652                           
  1653                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  1654  000F8E  0100               	movlb	0	; () banked
  1655  000F90  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1656  000F92  D002               	goto	l382
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  1660  000F94  010F               	movlb	15	; () banked
  1661  000F96  8B32               	bsf	50,5,b	;volatile
  1662  000F98                     l382:
  1663                           
  1664                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  1665  000F98  0100               	movlb	0	; () banked
  1666  000F9A  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1667  000F9C  D002               	goto	l383
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  1671  000F9E  010F               	movlb	15	; () banked
  1672  000FA0  8D32               	bsf	50,6,b	;volatile
  1673  000FA2                     l383:
  1674                           
  1675                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  1676  000FA2  0100               	movlb	0	; () banked
  1677  000FA4  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1678  000FA6  D002               	goto	l3072
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  1682  000FA8  010F               	movlb	15	; () banked
  1683  000FAA  8F32               	bsf	50,7,b	;volatile
  1684  000FAC                     l3072:
  1685                           
  1686                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  1687  000FAC  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1688  000FB0  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1689  000FB4  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1690  000FB8  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1691  000FBC  0E16               	movlw	22
  1692  000FBE  D006               	goto	u3280
  1693  000FC0                     u3285:
  1694  000FC0  0100               	movlb	0	; () banked
  1695  000FC2  90D8               	bcf	status,0,c
  1696  000FC4  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1697  000FC6  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1698  000FC8  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1699  000FCA  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1700  000FCC                     u3280:
  1701  000FCC  2EE8               	decfsz	wreg,f,c
  1702  000FCE  D7F8               	goto	u3285
  1703  000FD0  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1704  000FD4  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1705  000FD8  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1706  000FDC  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  1710  000FE0  0100               	movlb	0	; () banked
  1711  000FE2  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1712  000FE4  0100               	movlb	0	; () banked
  1713  000FE6  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1714  000FE8  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1715  000FEA  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1716  000FEC  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  1720  000FEE  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1721                           
  1722                           ;inc\CANlib.h: 407: }
  1723  000FF2  D059               	goto	l3092
  1724  000FF4                     l379:
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;inc\CANlib.h: 409: else
  1728                           ;inc\CANlib.h: 411: {
  1729                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  1730  000FF4  010F               	movlb	15	; () banked
  1731  000FF6  9732               	bcf	50,3,b	;volatile
  1732                           
  1733                           ; BSR set to: 15
  1734                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  1735  000FF8  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1736  000FFC  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1737  001000  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1738  001004  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1739  001008  0E04               	movlw	4
  1740  00100A  D006               	goto	u3290
  1741  00100C                     u3295:
  1742  00100C  0100               	movlb	0	; () banked
  1743  00100E  90D8               	bcf	status,0,c
  1744  001010  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1745  001012  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1746  001014  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1747  001016  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1748  001018                     u3290:
  1749  001018  2EE8               	decfsz	wreg,f,c
  1750  00101A  D7F8               	goto	u3295
  1751  00101C  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1752  001020  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1753  001024  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1754  001028  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  1758  00102C  0100               	movlb	0	; () banked
  1759  00102E  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1760  001030  0100               	movlb	0	; () banked
  1761  001032  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1762  001034  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1763  001036  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1764  001038  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  1768  00103A  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  1772  00103E  0E07               	movlw	7
  1773  001040  0100               	movlb	0	; () banked
  1774  001042  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1775  001044  0100               	movlb	0	; () banked
  1776  001046  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1777  001048  0E00               	movlw	0
  1778  00104A  0100               	movlb	0	; () banked
  1779  00104C  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1780  00104E  0100               	movlb	0	; () banked
  1781  001050  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1782  001052  0E00               	movlw	0
  1783  001054  0100               	movlb	0	; () banked
  1784  001056  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1785  001058  0100               	movlb	0	; () banked
  1786  00105A  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1787  00105C  0E00               	movlw	0
  1788  00105E  0100               	movlb	0	; () banked
  1789  001060  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1790  001062  0100               	movlb	0	; () banked
  1791  001064  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  1795  001066  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1796  00106A  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1797  00106E  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1798  001072  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1799  001076  0E05               	movlw	5
  1800  001078                     u3305:
  1801  001078  90D8               	bcf	status,0,c
  1802  00107A  0100               	movlb	0	; () banked
  1803  00107C  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1804  00107E  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1805  001080  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1806  001082  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1807  001084  2EE8               	decfsz	wreg,f,c
  1808  001086  D7F8               	goto	u3305
  1809  001088  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1810  00108C  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1811  001090  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1812  001094  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  1816  001098  010F               	movlb	15	; () banked
  1817  00109A  5132               	movf	50,w,b	;volatile
  1818  00109C  0B1F               	andlw	31
  1819  00109E  010F               	movlb	15	; () banked
  1820  0010A0  6F32               	movwf	50,b	;volatile
  1821                           
  1822                           ; BSR set to: 15
  1823                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  1824  0010A2  C07F  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  1825  0010A6                     l3092:
  1826                           
  1827                           ;inc\CANlib.h: 422: }
  1828                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  1829  0010A6  0100               	movlb	0	; () banked
  1830  0010A8  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1831  0010AA  D003               	goto	l386
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  1835  0010AC  010F               	movlb	15	; () banked
  1836  0010AE  8130               	bsf	48,0,b	;volatile
  1837  0010B0  D002               	goto	l387
  1838  0010B2                     l386:
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;inc\CANlib.h: 426: else
  1842                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  1843  0010B2  010F               	movlb	15	; () banked
  1844  0010B4  9130               	bcf	48,0,b	;volatile
  1845  0010B6                     l387:
  1846                           
  1847                           ; BSR set to: 15
  1848                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  1849  0010B6  0100               	movlb	0	; () banked
  1850  0010B8  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1851  0010BA  D003               	goto	l388
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  1855  0010BC  010F               	movlb	15	; () banked
  1856  0010BE  8330               	bsf	48,1,b	;volatile
  1857  0010C0  D002               	goto	l3098
  1858  0010C2                     l388:
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;inc\CANlib.h: 430: else
  1862                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  1863  0010C2  010F               	movlb	15	; () banked
  1864  0010C4  9330               	bcf	48,1,b	;volatile
  1865  0010C6                     l3098:
  1866                           
  1867                           ; BSR set to: 15
  1868                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  1869  0010C6  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1870  0010CA  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1871  0010CE  50DF               	movf	indf2,w,c
  1872  0010D0  010F               	movlb	15	; () banked
  1873  0010D2  6F36               	movwf	54,b	;volatile
  1874                           
  1875                           ; BSR set to: 15
  1876                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  1877  0010D4  0100               	movlb	0	; () banked
  1878  0010D6  EE20 F001          	lfsr	2,1
  1879  0010DA  5177               	movf	CANsendMessage@data& (0+255),w,b
  1880  0010DC  26D9               	addwf	fsr2l,f,c
  1881  0010DE  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1882  0010E0  22DA               	addwfc	fsr2h,f,c
  1883  0010E2  50DF               	movf	indf2,w,c
  1884  0010E4  010F               	movlb	15	; () banked
  1885  0010E6  6F37               	movwf	55,b	;volatile
  1886                           
  1887                           ; BSR set to: 15
  1888                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  1889  0010E8  0100               	movlb	0	; () banked
  1890  0010EA  EE20 F002          	lfsr	2,2
  1891  0010EE  5177               	movf	CANsendMessage@data& (0+255),w,b
  1892  0010F0  26D9               	addwf	fsr2l,f,c
  1893  0010F2  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1894  0010F4  22DA               	addwfc	fsr2h,f,c
  1895  0010F6  50DF               	movf	indf2,w,c
  1896  0010F8  010F               	movlb	15	; () banked
  1897  0010FA  6F38               	movwf	56,b	;volatile
  1898                           
  1899                           ; BSR set to: 15
  1900                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  1901  0010FC  0100               	movlb	0	; () banked
  1902  0010FE  EE20 F003          	lfsr	2,3
  1903  001102  5177               	movf	CANsendMessage@data& (0+255),w,b
  1904  001104  26D9               	addwf	fsr2l,f,c
  1905  001106  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1906  001108  22DA               	addwfc	fsr2h,f,c
  1907  00110A  50DF               	movf	indf2,w,c
  1908  00110C  010F               	movlb	15	; () banked
  1909  00110E  6F39               	movwf	57,b	;volatile
  1910                           
  1911                           ; BSR set to: 15
  1912                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  1913  001110  0100               	movlb	0	; () banked
  1914  001112  EE20 F004          	lfsr	2,4
  1915  001116  5177               	movf	CANsendMessage@data& (0+255),w,b
  1916  001118  26D9               	addwf	fsr2l,f,c
  1917  00111A  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1918  00111C  22DA               	addwfc	fsr2h,f,c
  1919  00111E  50DF               	movf	indf2,w,c
  1920  001120  010F               	movlb	15	; () banked
  1921  001122  6F3A               	movwf	58,b	;volatile
  1922                           
  1923                           ; BSR set to: 15
  1924                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  1925  001124  0100               	movlb	0	; () banked
  1926  001126  EE20 F005          	lfsr	2,5
  1927  00112A  5177               	movf	CANsendMessage@data& (0+255),w,b
  1928  00112C  26D9               	addwf	fsr2l,f,c
  1929  00112E  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1930  001130  22DA               	addwfc	fsr2h,f,c
  1931  001132  50DF               	movf	indf2,w,c
  1932  001134  010F               	movlb	15	; () banked
  1933  001136  6F3B               	movwf	59,b	;volatile
  1934                           
  1935                           ; BSR set to: 15
  1936                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  1937  001138  0100               	movlb	0	; () banked
  1938  00113A  EE20 F006          	lfsr	2,6
  1939  00113E  5177               	movf	CANsendMessage@data& (0+255),w,b
  1940  001140  26D9               	addwf	fsr2l,f,c
  1941  001142  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1942  001144  22DA               	addwfc	fsr2h,f,c
  1943  001146  50DF               	movf	indf2,w,c
  1944  001148  010F               	movlb	15	; () banked
  1945  00114A  6F3C               	movwf	60,b	;volatile
  1946                           
  1947                           ; BSR set to: 15
  1948                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  1949  00114C  0100               	movlb	0	; () banked
  1950  00114E  EE20 F007          	lfsr	2,7
  1951  001152  5177               	movf	CANsendMessage@data& (0+255),w,b
  1952  001154  26D9               	addwf	fsr2l,f,c
  1953  001156  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1954  001158  22DA               	addwfc	fsr2h,f,c
  1955  00115A  50DF               	movf	indf2,w,c
  1956  00115C  010F               	movlb	15	; () banked
  1957  00115E  6F3D               	movwf	61,b	;volatile
  1958                           
  1959                           ; BSR set to: 15
  1960                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  1961  001160  010F               	movlb	15	; () banked
  1962  001162  8730               	bsf	48,3,b	;volatile
  1963                           
  1964                           ; BSR set to: 15
  1965                           ;inc\CANlib.h: 444: return;
  1966  001164  0012               	return	
  1967  001166                     l376:
  1968                           
  1969                           ; BSR set to: 15
  1970                           ;inc\CANlib.h: 445: }
  1971                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  1972  001166  010F               	movlb	15	; () banked
  1973  001168  B720               	btfsc	32,3,b	;volatile
  1974  00116A  0012               	return	
  1975                           
  1976                           ; BSR set to: 15
  1977                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  1978  00116C  C079  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  1979                           
  1980                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  1981  001170  0100               	movlb	0	; () banked
  1982  001172  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1983  001174  D003               	goto	l391
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  1987  001176  010F               	movlb	15	; () banked
  1988  001178  8D25               	bsf	37,6,b	;volatile
  1989  00117A  D002               	goto	l392
  1990  00117C                     l391:
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;inc\CANlib.h: 454: else
  1994                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  1995  00117C  010F               	movlb	15	; () banked
  1996  00117E  9D25               	bcf	37,6,b	;volatile
  1997  001180                     l392:
  1998                           
  1999                           ; BSR set to: 15
  2000                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2001  001180  0100               	movlb	0	; () banked
  2002  001182  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  2003  001184  D079               	goto	l393
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;inc\CANlib.h: 458: {
  2007                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2008  001186  0100               	movlb	0	; () banked
  2009  001188  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  2010  00118A  0100               	movlb	0	; () banked
  2011  00118C  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2012  00118E  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2013  001190  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2014  001192  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2018  001194  C07F  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2022  001198  0E00               	movlw	0
  2023  00119A  0100               	movlb	0	; () banked
  2024  00119C  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2025  00119E  0100               	movlb	0	; () banked
  2026  0011A0  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2027  0011A2  0EFF               	movlw	255
  2028  0011A4  0100               	movlb	0	; () banked
  2029  0011A6  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2030  0011A8  0100               	movlb	0	; () banked
  2031  0011AA  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2032  0011AC  0E00               	movlw	0
  2033  0011AE  0100               	movlb	0	; () banked
  2034  0011B0  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2035  0011B2  0100               	movlb	0	; () banked
  2036  0011B4  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2037  0011B6  0E00               	movlw	0
  2038  0011B8  0100               	movlb	0	; () banked
  2039  0011BA  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2040  0011BC  0100               	movlb	0	; () banked
  2041  0011BE  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2045  0011C0  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2046  0011C4  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2047  0011C8  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2048  0011CC  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2049  0011D0  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  2050  0011D4  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2051  0011D8  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2052  0011DC  0100               	movlb	0	; () banked
  2053  0011DE  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  2054  0011E0  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2055  0011E4  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2056  0011E8  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2057  0011EC  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2061  0011F0  C07F  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2065  0011F4  0E00               	movlw	0
  2066  0011F6  010F               	movlb	15	; () banked
  2067  0011F8  6F22               	movwf	34,b	;volatile
  2068                           
  2069                           ; BSR set to: 15
  2070                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2071  0011FA  010F               	movlb	15	; () banked
  2072  0011FC  8722               	bsf	34,3,b	;volatile
  2073                           
  2074                           ; BSR set to: 15
  2075                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2076  0011FE  0100               	movlb	0	; () banked
  2077  001200  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2078  001202  D002               	goto	l394
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2082  001204  010F               	movlb	15	; () banked
  2083  001206  8122               	bsf	34,0,b	;volatile
  2084  001208                     l394:
  2085                           
  2086                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2087  001208  0100               	movlb	0	; () banked
  2088  00120A  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2089  00120C  D002               	goto	l395
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2093  00120E  010F               	movlb	15	; () banked
  2094  001210  8322               	bsf	34,1,b	;volatile
  2095  001212                     l395:
  2096                           
  2097                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2098  001212  0100               	movlb	0	; () banked
  2099  001214  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2100  001216  D002               	goto	l396
  2101                           
  2102                           ; BSR set to: 0
  2103                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2104  001218  010F               	movlb	15	; () banked
  2105  00121A  8B22               	bsf	34,5,b	;volatile
  2106  00121C                     l396:
  2107                           
  2108                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2109  00121C  0100               	movlb	0	; () banked
  2110  00121E  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2111  001220  D002               	goto	l397
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2115  001222  010F               	movlb	15	; () banked
  2116  001224  8D22               	bsf	34,6,b	;volatile
  2117  001226                     l397:
  2118                           
  2119                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2120  001226  0100               	movlb	0	; () banked
  2121  001228  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2122  00122A  D002               	goto	l3148
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2126  00122C  010F               	movlb	15	; () banked
  2127  00122E  8F22               	bsf	34,7,b	;volatile
  2128  001230                     l3148:
  2129                           
  2130                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2131  001230  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2132  001234  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2133  001238  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2134  00123C  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2135  001240  0E16               	movlw	22
  2136  001242  D006               	goto	u3410
  2137  001244                     u3415:
  2138  001244  0100               	movlb	0	; () banked
  2139  001246  90D8               	bcf	status,0,c
  2140  001248  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2141  00124A  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2142  00124C  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2143  00124E  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2144  001250                     u3410:
  2145  001250  2EE8               	decfsz	wreg,f,c
  2146  001252  D7F8               	goto	u3415
  2147  001254  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2148  001258  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2149  00125C  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2150  001260  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2154  001264  0100               	movlb	0	; () banked
  2155  001266  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2156  001268  0100               	movlb	0	; () banked
  2157  00126A  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2158  00126C  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2159  00126E  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2160  001270  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2164  001272  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2165                           
  2166                           ;inc\CANlib.h: 483: }
  2167  001276  D059               	goto	l3168
  2168  001278                     l393:
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;inc\CANlib.h: 485: else
  2172                           ;inc\CANlib.h: 487: {
  2173                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2174  001278  010F               	movlb	15	; () banked
  2175  00127A  9722               	bcf	34,3,b	;volatile
  2176                           
  2177                           ; BSR set to: 15
  2178                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2179  00127C  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2180  001280  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2181  001284  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2182  001288  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2183  00128C  0E04               	movlw	4
  2184  00128E  D006               	goto	u3420
  2185  001290                     u3425:
  2186  001290  0100               	movlb	0	; () banked
  2187  001292  90D8               	bcf	status,0,c
  2188  001294  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2189  001296  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2190  001298  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2191  00129A  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2192  00129C                     u3420:
  2193  00129C  2EE8               	decfsz	wreg,f,c
  2194  00129E  D7F8               	goto	u3425
  2195  0012A0  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2196  0012A4  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2197  0012A8  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2198  0012AC  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2202  0012B0  0100               	movlb	0	; () banked
  2203  0012B2  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2204  0012B4  0100               	movlb	0	; () banked
  2205  0012B6  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2206  0012B8  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2207  0012BA  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2208  0012BC  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2212  0012BE  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2216  0012C2  0E07               	movlw	7
  2217  0012C4  0100               	movlb	0	; () banked
  2218  0012C6  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2219  0012C8  0100               	movlb	0	; () banked
  2220  0012CA  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2221  0012CC  0E00               	movlw	0
  2222  0012CE  0100               	movlb	0	; () banked
  2223  0012D0  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2224  0012D2  0100               	movlb	0	; () banked
  2225  0012D4  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2226  0012D6  0E00               	movlw	0
  2227  0012D8  0100               	movlb	0	; () banked
  2228  0012DA  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2229  0012DC  0100               	movlb	0	; () banked
  2230  0012DE  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2231  0012E0  0E00               	movlw	0
  2232  0012E2  0100               	movlb	0	; () banked
  2233  0012E4  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2234  0012E6  0100               	movlb	0	; () banked
  2235  0012E8  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2239  0012EA  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2240  0012EE  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2241  0012F2  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2242  0012F6  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2243  0012FA  0E05               	movlw	5
  2244  0012FC                     u3435:
  2245  0012FC  90D8               	bcf	status,0,c
  2246  0012FE  0100               	movlb	0	; () banked
  2247  001300  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  2248  001302  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2249  001304  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2250  001306  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2251  001308  2EE8               	decfsz	wreg,f,c
  2252  00130A  D7F8               	goto	u3435
  2253  00130C  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2254  001310  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2255  001314  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2256  001318  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2260  00131C  010F               	movlb	15	; () banked
  2261  00131E  5122               	movf	34,w,b	;volatile
  2262  001320  0B1F               	andlw	31
  2263  001322  010F               	movlb	15	; () banked
  2264  001324  6F22               	movwf	34,b	;volatile
  2265                           
  2266                           ; BSR set to: 15
  2267                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2268  001326  C07F  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2269  00132A                     l3168:
  2270                           
  2271                           ;inc\CANlib.h: 498: }
  2272                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2273  00132A  0100               	movlb	0	; () banked
  2274  00132C  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  2275  00132E  D003               	goto	l400
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2279  001330  010F               	movlb	15	; () banked
  2280  001332  8120               	bsf	32,0,b	;volatile
  2281  001334  D002               	goto	l401
  2282  001336                     l400:
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;inc\CANlib.h: 502: else
  2286                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2287  001336  010F               	movlb	15	; () banked
  2288  001338  9120               	bcf	32,0,b	;volatile
  2289  00133A                     l401:
  2290                           
  2291                           ; BSR set to: 15
  2292                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2293  00133A  0100               	movlb	0	; () banked
  2294  00133C  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  2295  00133E  D003               	goto	l402
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2299  001340  010F               	movlb	15	; () banked
  2300  001342  8320               	bsf	32,1,b	;volatile
  2301  001344  D002               	goto	l3174
  2302  001346                     l402:
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;inc\CANlib.h: 506: else
  2306                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2307  001346  010F               	movlb	15	; () banked
  2308  001348  9320               	bcf	32,1,b	;volatile
  2309  00134A                     l3174:
  2310                           
  2311                           ; BSR set to: 15
  2312                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2313  00134A  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  2314  00134E  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2315  001352  50DF               	movf	indf2,w,c
  2316  001354  010F               	movlb	15	; () banked
  2317  001356  6F26               	movwf	38,b	;volatile
  2318                           
  2319                           ; BSR set to: 15
  2320                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2321  001358  0100               	movlb	0	; () banked
  2322  00135A  EE20 F001          	lfsr	2,1
  2323  00135E  5177               	movf	CANsendMessage@data& (0+255),w,b
  2324  001360  26D9               	addwf	fsr2l,f,c
  2325  001362  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2326  001364  22DA               	addwfc	fsr2h,f,c
  2327  001366  50DF               	movf	indf2,w,c
  2328  001368  010F               	movlb	15	; () banked
  2329  00136A  6F27               	movwf	39,b	;volatile
  2330                           
  2331                           ; BSR set to: 15
  2332                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2333  00136C  0100               	movlb	0	; () banked
  2334  00136E  EE20 F002          	lfsr	2,2
  2335  001372  5177               	movf	CANsendMessage@data& (0+255),w,b
  2336  001374  26D9               	addwf	fsr2l,f,c
  2337  001376  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2338  001378  22DA               	addwfc	fsr2h,f,c
  2339  00137A  50DF               	movf	indf2,w,c
  2340  00137C  010F               	movlb	15	; () banked
  2341  00137E  6F28               	movwf	40,b	;volatile
  2342                           
  2343                           ; BSR set to: 15
  2344                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2345  001380  0100               	movlb	0	; () banked
  2346  001382  EE20 F003          	lfsr	2,3
  2347  001386  5177               	movf	CANsendMessage@data& (0+255),w,b
  2348  001388  26D9               	addwf	fsr2l,f,c
  2349  00138A  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2350  00138C  22DA               	addwfc	fsr2h,f,c
  2351  00138E  50DF               	movf	indf2,w,c
  2352  001390  010F               	movlb	15	; () banked
  2353  001392  6F29               	movwf	41,b	;volatile
  2354                           
  2355                           ; BSR set to: 15
  2356                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2357  001394  0100               	movlb	0	; () banked
  2358  001396  EE20 F004          	lfsr	2,4
  2359  00139A  5177               	movf	CANsendMessage@data& (0+255),w,b
  2360  00139C  26D9               	addwf	fsr2l,f,c
  2361  00139E  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2362  0013A0  22DA               	addwfc	fsr2h,f,c
  2363  0013A2  50DF               	movf	indf2,w,c
  2364  0013A4  010F               	movlb	15	; () banked
  2365  0013A6  6F2A               	movwf	42,b	;volatile
  2366                           
  2367                           ; BSR set to: 15
  2368                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2369  0013A8  0100               	movlb	0	; () banked
  2370  0013AA  EE20 F005          	lfsr	2,5
  2371  0013AE  5177               	movf	CANsendMessage@data& (0+255),w,b
  2372  0013B0  26D9               	addwf	fsr2l,f,c
  2373  0013B2  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2374  0013B4  22DA               	addwfc	fsr2h,f,c
  2375  0013B6  50DF               	movf	indf2,w,c
  2376  0013B8  010F               	movlb	15	; () banked
  2377  0013BA  6F2B               	movwf	43,b	;volatile
  2378                           
  2379                           ; BSR set to: 15
  2380                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2381  0013BC  0100               	movlb	0	; () banked
  2382  0013BE  EE20 F006          	lfsr	2,6
  2383  0013C2  5177               	movf	CANsendMessage@data& (0+255),w,b
  2384  0013C4  26D9               	addwf	fsr2l,f,c
  2385  0013C6  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2386  0013C8  22DA               	addwfc	fsr2h,f,c
  2387  0013CA  50DF               	movf	indf2,w,c
  2388  0013CC  010F               	movlb	15	; () banked
  2389  0013CE  6F2C               	movwf	44,b	;volatile
  2390                           
  2391                           ; BSR set to: 15
  2392                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2393  0013D0  0100               	movlb	0	; () banked
  2394  0013D2  EE20 F007          	lfsr	2,7
  2395  0013D6  5177               	movf	CANsendMessage@data& (0+255),w,b
  2396  0013D8  26D9               	addwf	fsr2l,f,c
  2397  0013DA  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2398  0013DC  22DA               	addwfc	fsr2h,f,c
  2399  0013DE  50DF               	movf	indf2,w,c
  2400  0013E0  010F               	movlb	15	; () banked
  2401  0013E2  6F2D               	movwf	45,b	;volatile
  2402                           
  2403                           ; BSR set to: 15
  2404                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2405  0013E4  010F               	movlb	15	; () banked
  2406  0013E6  8720               	bsf	32,3,b	;volatile
  2407                           
  2408                           ; BSR set to: 15
  2409                           ;inc\CANlib.h: 520: return;
  2410  0013E8  0012               	return	
  2411  0013EA                     __end_of_CANsendMessage:
  2412                           	opt stack 0
  2413                           tblptru	equ	0xFF8
  2414                           tblptrh	equ	0xFF7
  2415                           tblptrl	equ	0xFF6
  2416                           tablat	equ	0xFF5
  2417                           postinc0	equ	0xFEE
  2418                           wreg	equ	0xFE8
  2419                           postdec1	equ	0xFE5
  2420                           fsr1l	equ	0xFE1
  2421                           indf2	equ	0xFDF
  2422                           fsr2h	equ	0xFDA
  2423                           fsr2l	equ	0xFD9
  2424                           status	equ	0xFD8
  2425                           
  2426 ;; *************** function _CANisTxReady *****************
  2427 ;; Defined at:
  2428 ;;		line 1154 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      unsigned char 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2442 ;;      Params:         0       0       0       0
  2443 ;;      Locals:         0       1       0       0
  2444 ;;      Temps:          0       0       0       0
  2445 ;;      Totals:         0       1       0       0
  2446 ;;Total ram usage:        1 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    4
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_send_data
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text3
  2457  0024BE                     __ptext3:
  2458                           	opt stack 0
  2459  0024BE                     _CANisTxReady:
  2460                           	opt stack 25
  2461                           
  2462                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2463                           
  2464                           ; BSR set to: 15
  2465                           ;incstack = 0
  2466  0024BE  0E01               	movlw	1
  2467  0024C0  0100               	movlb	0	; () banked
  2468  0024C2  6F73               	movwf	_CANisTxReady$2910& (0+255),b
  2469                           
  2470                           ; BSR set to: 0
  2471  0024C4  010F               	movlb	15	; () banked
  2472  0024C6  A740               	btfss	64,3,b	;volatile
  2473  0024C8  D009               	goto	l554
  2474                           
  2475                           ; BSR set to: 15
  2476  0024CA  010F               	movlb	15	; () banked
  2477  0024CC  A730               	btfss	48,3,b	;volatile
  2478  0024CE  D006               	goto	l554
  2479                           
  2480                           ; BSR set to: 15
  2481  0024D0  010F               	movlb	15	; () banked
  2482  0024D2  A720               	btfss	32,3,b	;volatile
  2483  0024D4  D003               	goto	l554
  2484                           
  2485                           ; BSR set to: 15
  2486  0024D6  0E00               	movlw	0
  2487  0024D8  0100               	movlb	0	; () banked
  2488  0024DA  6F73               	movwf	_CANisTxReady$2910& (0+255),b
  2489  0024DC                     l554:
  2490  0024DC  0100               	movlb	0	; () banked
  2491  0024DE  5173               	movf	_CANisTxReady$2910& (0+255),w,b
  2492  0024E0  0012               	return	
  2493  0024E2                     __end_of_CANisTxReady:
  2494                           	opt stack 0
  2495                           tblptru	equ	0xFF8
  2496                           tblptrh	equ	0xFF7
  2497                           tblptrl	equ	0xFF6
  2498                           tablat	equ	0xFF5
  2499                           postinc0	equ	0xFEE
  2500                           wreg	equ	0xFE8
  2501                           postdec1	equ	0xFE5
  2502                           fsr1l	equ	0xFE1
  2503                           indf2	equ	0xFDF
  2504                           fsr2h	equ	0xFDA
  2505                           fsr2l	equ	0xFD9
  2506                           status	equ	0xFD8
  2507                           
  2508 ;; *************** function _configurazione_iniziale *****************
  2509 ;; Defined at:
  2510 ;;		line 186 in file "newmain.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;		None               void
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2524 ;;      Params:         0       0       0       0
  2525 ;;      Locals:         0       0       0       0
  2526 ;;      Temps:          0       0       0       0
  2527 ;;      Totals:         0       0       0       0
  2528 ;;Total ram usage:        0 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    6
  2531 ;; This function calls:
  2532 ;;		_CANInitialize
  2533 ;;		_OpenADC
  2534 ;; This function is called by:
  2535 ;;		_main
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text4
  2540  002184                     __ptext4:
  2541                           	opt stack 0
  2542  002184                     _configurazione_iniziale:
  2543                           	opt stack 24
  2544                           
  2545                           ;newmain.c: 187: LATA = 0x00;
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;incstack = 0
  2549  002184  0E00               	movlw	0
  2550  002186  6E89               	movwf	3977,c	;volatile
  2551                           
  2552                           ;newmain.c: 188: TRISA = 0b11111100;
  2553  002188  0EFC               	movlw	252
  2554  00218A  6E92               	movwf	3986,c	;volatile
  2555                           
  2556                           ;newmain.c: 190: LATB = 0x00;
  2557  00218C  0E00               	movlw	0
  2558  00218E  6E8A               	movwf	3978,c	;volatile
  2559                           
  2560                           ;newmain.c: 191: TRISB = 0b11111011;
  2561  002190  0EFB               	movlw	251
  2562  002192  6E93               	movwf	3987,c	;volatile
  2563                           
  2564                           ;newmain.c: 193: LATC = 0x00;
  2565  002194  0E00               	movlw	0
  2566  002196  6E8B               	movwf	3979,c	;volatile
  2567                           
  2568                           ;newmain.c: 194: TRISC = 0x00;
  2569  002198  0E00               	movlw	0
  2570  00219A  6E94               	movwf	3988,c	;volatile
  2571                           
  2572                           ;newmain.c: 196: LATD = 0x00;
  2573  00219C  0E00               	movlw	0
  2574  00219E  6E8C               	movwf	3980,c	;volatile
  2575                           
  2576                           ;newmain.c: 197: TRISD = 0x00;
  2577  0021A0  0E00               	movlw	0
  2578  0021A2  6E95               	movwf	3989,c	;volatile
  2579                           
  2580                           ;newmain.c: 199: LATE = 0x00;
  2581  0021A4  0E00               	movlw	0
  2582  0021A6  6E8D               	movwf	3981,c	;volatile
  2583                           
  2584                           ;newmain.c: 200: TRISE = 0xFF;
  2585  0021A8  6896               	setf	3990,c	;volatile
  2586                           
  2587                           ;newmain.c: 202: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SA
      +                          MPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2588  0021AA  0E06               	movlw	6
  2589  0021AC  0100               	movlb	0	; () banked
  2590  0021AE  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2591  0021B0  0E05               	movlw	5
  2592  0021B2  0100               	movlb	0	; () banked
  2593  0021B4  6F82               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2594  0021B6  0E01               	movlw	1
  2595  0021B8  0100               	movlb	0	; () banked
  2596  0021BA  6F83               	movwf	CANInitialize@SJW& (0+255),b
  2597  0021BC  0E03               	movlw	3
  2598  0021BE  0100               	movlb	0	; () banked
  2599  0021C0  6F84               	movwf	CANInitialize@BRP& (0+255),b
  2600  0021C2  0E9D               	movlw	157
  2601  0021C4  0100               	movlb	0	; () banked
  2602  0021C6  6F85               	movwf	CANInitialize@flags& (0+255),b
  2603  0021C8  0E04               	movlw	4
  2604  0021CA  EC4A  F00E         	call	_CANInitialize
  2605                           
  2606                           ;newmain.c: 203: RCONbits.IPEN = 1;
  2607  0021CE  8ED0               	bsf	4048,7,c	;volatile
  2608                           
  2609                           ;newmain.c: 206: PIR3bits.RXB1IF = 0;
  2610  0021D0  92A4               	bcf	4004,1,c	;volatile
  2611                           
  2612                           ;newmain.c: 207: PIR3bits.RXB0IF = 0;
  2613  0021D2  90A4               	bcf	4004,0,c	;volatile
  2614                           
  2615                           ;newmain.c: 208: INTCONbits.TMR0IF = 0;
  2616  0021D4  94F2               	bcf	intcon,2,c	;volatile
  2617                           
  2618                           ;newmain.c: 209: PIR2bits.TMR3IF = 0;
  2619  0021D6  92A1               	bcf	4001,1,c	;volatile
  2620                           
  2621                           ;newmain.c: 212: IPR3bits.RXB1IP = 0;
  2622  0021D8  92A5               	bcf	4005,1,c	;volatile
  2623                           
  2624                           ;newmain.c: 213: IPR3bits.RXB0IP = 0;
  2625  0021DA  90A5               	bcf	4005,0,c	;volatile
  2626                           
  2627                           ;newmain.c: 214: INTCON2bits.TMR0IP = 1;
  2628  0021DC  84F1               	bsf	intcon2,2,c	;volatile
  2629                           
  2630                           ;newmain.c: 215: IPR2bits.TMR3IP = 0;
  2631  0021DE  92A2               	bcf	4002,1,c	;volatile
  2632                           
  2633                           ;newmain.c: 218: PIE3bits.RXB1IE = 1;
  2634  0021E0  82A3               	bsf	4003,1,c	;volatile
  2635                           
  2636                           ;newmain.c: 219: PIE3bits.RXB0IE = 1;
  2637  0021E2  80A3               	bsf	4003,0,c	;volatile
  2638                           
  2639                           ;newmain.c: 220: INTCONbits.TMR0IE = 1;
  2640  0021E4  8AF2               	bsf	intcon,5,c	;volatile
  2641                           
  2642                           ;newmain.c: 221: PIE2bits.TMR3IE = 1;
  2643  0021E6  82A0               	bsf	4000,1,c	;volatile
  2644                           
  2645                           ;newmain.c: 222: INTCONbits.GIEH = 1;
  2646  0021E8  8EF2               	bsf	intcon,7,c	;volatile
  2647                           
  2648                           ;newmain.c: 223: INTCONbits.GIEL = 1;
  2649  0021EA  8CF2               	bsf	intcon,6,c	;volatile
  2650                           
  2651                           ;newmain.c: 226: T0CON = 0x80;
  2652  0021EC  0E80               	movlw	128
  2653  0021EE  6ED5               	movwf	4053,c	;volatile
  2654                           
  2655                           ;newmain.c: 229: TMR3H = 0x63;
  2656  0021F0  0E63               	movlw	99
  2657  0021F2  6EB3               	movwf	4019,c	;volatile
  2658                           
  2659                           ;newmain.c: 230: TMR3L = 0xC0;
  2660  0021F4  0EC0               	movlw	192
  2661  0021F6  6EB2               	movwf	4018,c	;volatile
  2662                           
  2663                           ;newmain.c: 231: T3CON = 0x01;
  2664  0021F8  0E01               	movlw	1
  2665  0021FA  6EB1               	movwf	4017,c	;volatile
  2666                           
  2667                           ;newmain.c: 232: OpenADC(0b11011111 & 0b11111111 & 0b11111101, 0b10001111 & 0b11111100 &
      +                           0b01111111, 0b11111101);
  2668  0021FC  0E0C               	movlw	12
  2669  0021FE  0100               	movlb	0	; () banked
  2670  002200  6F73               	movwf	OpenADC@config2& (0+255),b
  2671  002202  0EFD               	movlw	253
  2672  002204  0100               	movlb	0	; () banked
  2673  002206  6F74               	movwf	OpenADC@portconfig& (0+255),b
  2674  002208  0EDD               	movlw	221
  2675  00220A  EC08  F011         	call	_OpenADC
  2676  00220E  0012               	return		;funcret
  2677  002210                     __end_of_configurazione_iniziale:
  2678                           	opt stack 0
  2679                           tblptru	equ	0xFF8
  2680                           tblptrh	equ	0xFF7
  2681                           tblptrl	equ	0xFF6
  2682                           tablat	equ	0xFF5
  2683                           intcon	equ	0xFF2
  2684                           intcon2	equ	0xFF1
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           postdec1	equ	0xFE5
  2688                           fsr1l	equ	0xFE1
  2689                           indf2	equ	0xFDF
  2690                           fsr2h	equ	0xFDA
  2691                           fsr2l	equ	0xFD9
  2692                           status	equ	0xFD8
  2693                           
  2694 ;; *************** function _OpenADC *****************
  2695 ;; Defined at:
  2696 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcopen.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  config          1    wreg     unsigned char 
  2699 ;;  config2         1   19[BANK0 ] unsigned char 
  2700 ;;  portconfig      1   20[BANK0 ] unsigned char 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  config          1   23[BANK0 ] unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;		None               void
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2712 ;;      Params:         0       2       0       0
  2713 ;;      Locals:         0       1       0       0
  2714 ;;      Temps:          0       2       0       0
  2715 ;;      Totals:         0       5       0       0
  2716 ;;Total ram usage:        5 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; Hardware stack levels required when called:    4
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		_configurazione_iniziale
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text5
  2727  002210                     __ptext5:
  2728                           	opt stack 0
  2729  002210                     _OpenADC:
  2730                           	opt stack 25
  2731                           
  2732                           ;incstack = 0
  2733                           ;OpenADC@config stored from wreg
  2734  002210  0100               	movlb	0	; () banked
  2735  002212  6F77               	movwf	OpenADC@config& (0+255),b
  2736  002214  0E00               	movlw	0
  2737  002216  6EC2               	movwf	4034,c	;volatile
  2738  002218  0E00               	movlw	0
  2739  00221A  6EC0               	movwf	4032,c	;volatile
  2740  00221C  0100               	movlb	0	; () banked
  2741  00221E  90D8               	bcf	status,0,c
  2742  002220  3173               	rrcf	OpenADC@config2& (0+255),w,b
  2743  002222  0B3C               	andlw	60
  2744  002224  6EC2               	movwf	4034,c	;volatile
  2745                           
  2746                           ; BSR set to: 0
  2747  002226  C073  F075         	movff	OpenADC@config2,??_OpenADC
  2748  00222A  0100               	movlb	0	; () banked
  2749  00222C  3B75               	swapf	??_OpenADC& (0+255),f,b
  2750  00222E  0EF0               	movlw	240
  2751  002230  1775               	andwf	??_OpenADC& (0+255),f,b
  2752  002232  0E30               	movlw	48
  2753  002234  0100               	movlb	0	; () banked
  2754  002236  1775               	andwf	??_OpenADC& (0+255),f,b
  2755  002238  0100               	movlb	0	; () banked
  2756  00223A  5174               	movf	OpenADC@portconfig& (0+255),w,b
  2757  00223C  0B0F               	andlw	15
  2758  00223E  0100               	movlb	0	; () banked
  2759  002240  1175               	iorwf	??_OpenADC& (0+255),w,b
  2760  002242  6EC1               	movwf	4033,c	;volatile
  2761                           
  2762                           ; BSR set to: 0
  2763  002244  C077  F075         	movff	OpenADC@config,??_OpenADC
  2764  002248  0100               	movlb	0	; () banked
  2765  00224A  90D8               	bcf	status,0,c
  2766  00224C  3775               	rlcf	??_OpenADC& (0+255),f,b
  2767  00224E  0100               	movlb	0	; () banked
  2768  002250  90D8               	bcf	status,0,c
  2769  002252  3775               	rlcf	??_OpenADC& (0+255),f,b
  2770  002254  0E38               	movlw	56
  2771  002256  0100               	movlb	0	; () banked
  2772  002258  1775               	andwf	??_OpenADC& (0+255),f,b
  2773  00225A  C077  F076         	movff	OpenADC@config,??_OpenADC+1
  2774  00225E  0100               	movlb	0	; () banked
  2775  002260  3B76               	swapf	(??_OpenADC+1)& (0+255),f,b
  2776  002262  0E0F               	movlw	15
  2777  002264  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  2778  002266  0E07               	movlw	7
  2779  002268  0100               	movlb	0	; () banked
  2780  00226A  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  2781  00226C  0100               	movlb	0	; () banked
  2782  00226E  5177               	movf	OpenADC@config& (0+255),w,b
  2783  002270  0B80               	andlw	128
  2784  002272  0100               	movlb	0	; () banked
  2785  002274  1176               	iorwf	(??_OpenADC+1)& (0+255),w,b
  2786  002276  0100               	movlb	0	; () banked
  2787  002278  1175               	iorwf	??_OpenADC& (0+255),w,b
  2788  00227A  6EC0               	movwf	4032,c	;volatile
  2789                           
  2790                           ; BSR set to: 0
  2791  00227C  0100               	movlb	0	; () banked
  2792  00227E  AF73               	btfss	OpenADC@config2& (0+255),7,b
  2793  002280  D003               	goto	l691
  2794                           
  2795                           ; BSR set to: 0
  2796  002282  9C9E               	bcf	3998,6,c	;volatile
  2797  002284  8C9D               	bsf	3997,6,c	;volatile
  2798  002286  8CF2               	bsf	intcon,6,c	;volatile
  2799  002288                     l691:
  2800                           
  2801                           ; BSR set to: 0
  2802  002288  80C2               	bsf	4034,0,c	;volatile
  2803                           
  2804                           ; BSR set to: 0
  2805  00228A  0012               	return		;funcret
  2806  00228C                     __end_of_OpenADC:
  2807                           	opt stack 0
  2808                           tblptru	equ	0xFF8
  2809                           tblptrh	equ	0xFF7
  2810                           tblptrl	equ	0xFF6
  2811                           tablat	equ	0xFF5
  2812                           intcon	equ	0xFF2
  2813                           intcon2	equ	0xFF1
  2814                           postinc0	equ	0xFEE
  2815                           wreg	equ	0xFE8
  2816                           postdec1	equ	0xFE5
  2817                           fsr1l	equ	0xFE1
  2818                           indf2	equ	0xFDF
  2819                           fsr2h	equ	0xFDA
  2820                           fsr2l	equ	0xFD9
  2821                           status	equ	0xFD8
  2822                           
  2823 ;; *************** function _CANInitialize *****************
  2824 ;; Defined at:
  2825 ;;		line 218 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  propSeg         1    wreg     unsigned char 
  2828 ;;  phaseSeg1       1   33[BANK0 ] unsigned char 
  2829 ;;  phaseSeg2       1   34[BANK0 ] unsigned char 
  2830 ;;  SJW             1   35[BANK0 ] unsigned char 
  2831 ;;  BRP             1   36[BANK0 ] unsigned char 
  2832 ;;  flags           1   37[BANK0 ] enum E16844
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  propSeg         1   42[BANK0 ] unsigned char 
  2835 ;;  FilterConfig    1   44[BANK0 ] unsigned char 
  2836 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;		None               void
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2846 ;;      Params:         0       5       0       0
  2847 ;;      Locals:         0       3       0       0
  2848 ;;      Temps:          0       4       0       0
  2849 ;;      Totals:         0      12       0       0
  2850 ;;Total ram usage:       12 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    5
  2853 ;; This function calls:
  2854 ;;		_CANOperationMode
  2855 ;;		_CANSetFilter
  2856 ;;		_CANSetMask
  2857 ;; This function is called by:
  2858 ;;		_configurazione_iniziale
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text6
  2863  001C94                     __ptext6:
  2864                           	opt stack 0
  2865  001C94                     _CANInitialize:
  2866                           	opt stack 24
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;incstack = 0
  2870                           ;CANInitialize@propSeg stored from wreg
  2871  001C94  0100               	movlb	0	; () banked
  2872  001C96  6F8A               	movwf	CANInitialize@propSeg& (0+255),b
  2873                           
  2874                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2875                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2876                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2877  001C98  0E80               	movlw	128
  2878  001C9A  EC71  F012         	call	_CANOperationMode
  2879                           
  2880                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2881  001C9E  0E00               	movlw	0
  2882  001CA0  6E70               	movwf	3952,c	;volatile
  2883                           
  2884                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2885  001CA2  0E00               	movlw	0
  2886  001CA4  6E71               	movwf	3953,c	;volatile
  2887                           
  2888                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2889  001CA6  0E00               	movlw	0
  2890  001CA8  6E72               	movwf	3954,c	;volatile
  2891                           
  2892                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2893  001CAA  0100               	movlb	0	; () banked
  2894  001CAC  4183               	rrncf	CANInitialize@SJW& (0+255),w,b
  2895  001CAE  42E8               	rrncf	wreg,f,c
  2896  001CB0  0BC0               	andlw	192
  2897  001CB2  0100               	movlb	0	; () banked
  2898  001CB4  6F83               	movwf	CANInitialize@SJW& (0+255),b
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2902  001CB6  0100               	movlb	0	; () banked
  2903  001CB8  5183               	movf	CANInitialize@SJW& (0+255),w,b
  2904  001CBA  1270               	iorwf	3952,f,c	;volatile
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2908  001CBC  0100               	movlb	0	; () banked
  2909  001CBE  5184               	movf	CANInitialize@BRP& (0+255),w,b
  2910  001CC0  1270               	iorwf	3952,f,c	;volatile
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2914  001CC2  0100               	movlb	0	; () banked
  2915  001CC4  518A               	movf	CANInitialize@propSeg& (0+255),w,b
  2916  001CC6  1271               	iorwf	3953,f,c	;volatile
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2920  001CC8  0100               	movlb	0	; () banked
  2921  001CCA  3981               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2922  001CCC  42E8               	rrncf	wreg,f,c
  2923  001CCE  0BF8               	andlw	248
  2924  001CD0  0100               	movlb	0	; () banked
  2925  001CD2  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2929  001CD4  0100               	movlb	0	; () banked
  2930  001CD6  5181               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2931  001CD8  1271               	iorwf	3953,f,c	;volatile
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2935  001CDA  0100               	movlb	0	; () banked
  2936  001CDC  A585               	btfss	CANInitialize@flags& (0+255),2,b
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2940  001CDE  8C71               	bsf	3953,6,c	;volatile
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2944  001CE0  0100               	movlb	0	; () banked
  2945  001CE2  B185               	btfsc	CANInitialize@flags& (0+255),0,b
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2949  001CE4  8E71               	bsf	3953,7,c	;volatile
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2953                           
  2954                           ; BSR set to: 0
  2955  001CE6  0100               	movlb	0	; () banked
  2956  001CE8  5182               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2957  001CEA  1272               	iorwf	3954,f,c	;volatile
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2961  001CEC  0100               	movlb	0	; () banked
  2962  001CEE  B385               	btfsc	CANInitialize@flags& (0+255),1,b
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2966  001CF0  8C72               	bsf	3954,6,c	;volatile
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2970                           
  2971                           ; BSR set to: 0
  2972  001CF2  0100               	movlb	0	; () banked
  2973  001CF4  5185               	movf	CANInitialize@flags& (0+255),w,b
  2974  001CF6  0B60               	andlw	96
  2975  001CF8  6E60               	movwf	3936,c	;volatile
  2976                           
  2977                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2978  001CFA  0100               	movlb	0	; () banked
  2979  001CFC  5185               	movf	CANInitialize@flags& (0+255),w,b
  2980  001CFE  0B10               	andlw	16
  2981  001D00  0AFF               	xorlw	255
  2982  001D02  B4D8               	btfsc	status,2,c
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2986  001D04  8460               	bsf	3936,2,c	;volatile
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  2990  001D06  CF60 FF50          	movff	3936,3920	;volatile
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2994  001D0A  0E00               	movlw	0
  2995  001D0C  0100               	movlb	0	; () banked
  2996  001D0E  6F73               	movwf	CANSetMask@mask& (0+255),b
  2997  001D10  0E00               	movlw	0
  2998  001D12  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  2999  001D14  0E00               	movlw	0
  3000  001D16  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3001  001D18  0E00               	movlw	0
  3002  001D1A  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3003  001D1C  0EF7               	movlw	247
  3004  001D1E  0100               	movlb	0	; () banked
  3005  001D20  6F77               	movwf	CANSetMask@type& (0+255),b
  3006  001D22  0E01               	movlw	1
  3007  001D24  EC7B  F00C         	call	_CANSetMask
  3008                           
  3009                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3010  001D28  0E00               	movlw	0
  3011  001D2A  0100               	movlb	0	; () banked
  3012  001D2C  6F73               	movwf	CANSetMask@mask& (0+255),b
  3013  001D2E  0E00               	movlw	0
  3014  001D30  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  3015  001D32  0E00               	movlw	0
  3016  001D34  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3017  001D36  0E00               	movlw	0
  3018  001D38  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3019  001D3A  0EF7               	movlw	247
  3020  001D3C  0100               	movlb	0	; () banked
  3021  001D3E  6F77               	movwf	CANSetMask@type& (0+255),b
  3022  001D40  0E02               	movlw	2
  3023  001D42  EC7B  F00C         	call	_CANSetMask
  3024                           
  3025                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3026  001D46  D00F               	goto	l2956
  3027  001D48                     l2950:
  3028                           
  3029                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3030  001D48  0EF7               	movlw	247
  3031  001D4A  0100               	movlb	0	; () banked
  3032  001D4C  6F8B               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3033  001D4E  D007               	goto	l2952
  3034  001D50                     l356:
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3038  001D50  0100               	movlb	0	; () banked
  3039  001D52  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3040                           
  3041                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3042  001D54  0100               	movlb	0	; () banked
  3043  001D56  698C               	setf	CANInitialize@FilterConfig2& (0+255),b
  3044                           
  3045                           ;inc\CANlib.h: 273: break;
  3046  001D58  D028               	goto	l2958
  3047  001D5A                     l357:
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3051  001D5A  0100               	movlb	0	; () banked
  3052  001D5C  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3053  001D5E                     l2952:
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3057  001D5E  0EF7               	movlw	247
  3058  001D60  0100               	movlb	0	; () banked
  3059  001D62  6F8C               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;inc\CANlib.h: 278: }
  3063                           
  3064                           ;inc\CANlib.h: 277: break;
  3065  001D64  D022               	goto	l2958
  3066  001D66                     l2956:
  3067  001D66  0E9F               	movlw	159
  3068  001D68  0100               	movlb	0	; () banked
  3069  001D6A  6F86               	movwf	??_CANInitialize& (0+255),b
  3070  001D6C  0EFF               	movlw	255
  3071  001D6E  0100               	movlb	0	; () banked
  3072  001D70  6F87               	movwf	(??_CANInitialize+1)& (0+255),b
  3073  001D72  0100               	movlb	0	; () banked
  3074  001D74  5185               	movf	CANInitialize@flags& (0+255),w,b
  3075  001D76  0B60               	andlw	96
  3076  001D78  0100               	movlb	0	; () banked
  3077  001D7A  6F88               	movwf	(??_CANInitialize+2)& (0+255),b
  3078  001D7C  6B89               	clrf	(??_CANInitialize+3)& (0+255),b
  3079  001D7E  0100               	movlb	0	; () banked
  3080  001D80  5186               	movf	??_CANInitialize& (0+255),w,b
  3081  001D82  0100               	movlb	0	; () banked
  3082  001D84  1388               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3083  001D86  0100               	movlb	0	; () banked
  3084  001D88  5187               	movf	(??_CANInitialize+1)& (0+255),w,b
  3085  001D8A  0100               	movlb	0	; () banked
  3086  001D8C  1389               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3087                           
  3088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3089                           ; Switch size 1, requested type "space"
  3090                           ; Number of cases is 1, Range of values is 0 to 0
  3091                           ; switch strategies available:
  3092                           ; Name         Instructions Cycles
  3093                           ; simple_byte            4     3 (average)
  3094                           ;	Chosen strategy is simple_byte
  3095  001D8E  0100               	movlb	0	; () banked
  3096  001D90  5189               	movf	(??_CANInitialize+3)& (0+255),w,b
  3097  001D92  0A00               	xorlw	0	; case 0
  3098  001D94  A4D8               	btfss	status,2,c
  3099  001D96  D7E1               	goto	l357
  3100                           
  3101                           ; BSR set to: 0
  3102                           ; Switch size 1, requested type "space"
  3103                           ; Number of cases is 2, Range of values is 191 to 223
  3104                           ; switch strategies available:
  3105                           ; Name         Instructions Cycles
  3106                           ; simple_byte            7     4 (average)
  3107                           ;	Chosen strategy is simple_byte
  3108  001D98  0100               	movlb	0	; () banked
  3109  001D9A  5188               	movf	(??_CANInitialize+2)& (0+255),w,b
  3110  001D9C  0ABF               	xorlw	191	; case 191
  3111  001D9E  B4D8               	btfsc	status,2,c
  3112  001DA0  D7D7               	goto	l356
  3113  001DA2  0A60               	xorlw	96	; case 223
  3114  001DA4  B4D8               	btfsc	status,2,c
  3115  001DA6  D7D0               	goto	l2950
  3116  001DA8  D7D8               	goto	l357
  3117  001DAA                     l2958:
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3121  001DAA  0E00               	movlw	0
  3122  001DAC  0100               	movlb	0	; () banked
  3123  001DAE  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3124  001DB0  0E00               	movlw	0
  3125  001DB2  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3126  001DB4  0E00               	movlw	0
  3127  001DB6  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3128  001DB8  0E00               	movlw	0
  3129  001DBA  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3130  001DBC  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3131  001DC0  0E00               	movlw	0
  3132  001DC2  ECAC  F000         	call	_CANSetFilter
  3133                           
  3134                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3135  001DC6  0E00               	movlw	0
  3136  001DC8  0100               	movlb	0	; () banked
  3137  001DCA  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3138  001DCC  0E00               	movlw	0
  3139  001DCE  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3140  001DD0  0E00               	movlw	0
  3141  001DD2  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3142  001DD4  0E00               	movlw	0
  3143  001DD6  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3144  001DD8  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3145  001DDC  0E01               	movlw	1
  3146  001DDE  ECAC  F000         	call	_CANSetFilter
  3147                           
  3148                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3149  001DE2  0E00               	movlw	0
  3150  001DE4  0100               	movlb	0	; () banked
  3151  001DE6  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3152  001DE8  0E00               	movlw	0
  3153  001DEA  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3154  001DEC  0E00               	movlw	0
  3155  001DEE  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3156  001DF0  0E00               	movlw	0
  3157  001DF2  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3158  001DF4  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3159  001DF8  0E02               	movlw	2
  3160  001DFA  ECAC  F000         	call	_CANSetFilter
  3161                           
  3162                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3163  001DFE  0E00               	movlw	0
  3164  001E00  0100               	movlb	0	; () banked
  3165  001E02  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3166  001E04  0E00               	movlw	0
  3167  001E06  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3168  001E08  0E00               	movlw	0
  3169  001E0A  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3170  001E0C  0E00               	movlw	0
  3171  001E0E  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3172  001E10  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3173  001E14  0E03               	movlw	3
  3174  001E16  ECAC  F000         	call	_CANSetFilter
  3175                           
  3176                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3177  001E1A  0E00               	movlw	0
  3178  001E1C  0100               	movlb	0	; () banked
  3179  001E1E  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3180  001E20  0E00               	movlw	0
  3181  001E22  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3182  001E24  0E00               	movlw	0
  3183  001E26  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3184  001E28  0E00               	movlw	0
  3185  001E2A  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3186  001E2C  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3187  001E30  0E04               	movlw	4
  3188  001E32  ECAC  F000         	call	_CANSetFilter
  3189                           
  3190                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3191  001E36  0E00               	movlw	0
  3192  001E38  0100               	movlb	0	; () banked
  3193  001E3A  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3194  001E3C  0E00               	movlw	0
  3195  001E3E  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3196  001E40  0E00               	movlw	0
  3197  001E42  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3198  001E44  0E00               	movlw	0
  3199  001E46  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3200  001E48  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3201  001E4C  0E05               	movlw	5
  3202  001E4E  ECAC  F000         	call	_CANSetFilter
  3203                           
  3204                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3205  001E52  0E00               	movlw	0
  3206  001E54  EC71  F012         	call	_CANOperationMode
  3207  001E58  0012               	return		;funcret
  3208  001E5A                     __end_of_CANInitialize:
  3209                           	opt stack 0
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           intcon	equ	0xFF2
  3215                           intcon2	equ	0xFF1
  3216                           postinc0	equ	0xFEE
  3217                           wreg	equ	0xFE8
  3218                           postdec1	equ	0xFE5
  3219                           fsr1l	equ	0xFE1
  3220                           indf2	equ	0xFDF
  3221                           fsr2h	equ	0xFDA
  3222                           fsr2l	equ	0xFD9
  3223                           status	equ	0xFD8
  3224                           
  3225 ;; *************** function _CANSetMask *****************
  3226 ;; Defined at:
  3227 ;;		line 640 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  numBuffer       1    wreg     enum E16878
  3230 ;;  mask            4   19[BANK0 ] unsigned long 
  3231 ;;  type            1   23[BANK0 ] enum E16844
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  numBuffer       1   28[BANK0 ] enum E16878
  3234 ;;  tamp            4   29[BANK0 ] unsigned long 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;		None               void
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3244 ;;      Params:         0       5       0       0
  3245 ;;      Locals:         0       5       0       0
  3246 ;;      Temps:          0       4       0       0
  3247 ;;      Totals:         0      14       0       0
  3248 ;;Total ram usage:       14 bytes
  3249 ;; Hardware stack levels used:    1
  3250 ;; Hardware stack levels required when called:    4
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_CANInitialize
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text7
  3259  0018F6                     __ptext7:
  3260                           	opt stack 0
  3261  0018F6                     _CANSetMask:
  3262                           	opt stack 24
  3263                           
  3264                           ;incstack = 0
  3265                           ;CANSetMask@numBuffer stored from wreg
  3266  0018F6  0100               	movlb	0	; () banked
  3267  0018F8  6F7C               	movwf	CANSetMask@numBuffer& (0+255),b
  3268                           
  3269                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3270  0018FA  0100               	movlb	0	; () banked
  3271  0018FC  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  3272  0018FE  A4D8               	btfss	status,2,c
  3273  001900  D056               	goto	l2520
  3274                           
  3275                           ; BSR set to: 0
  3276  001902  0100               	movlb	0	; () banked
  3277  001904  2977               	incf	CANSetMask@type& (0+255),w,b
  3278  001906  A4D8               	btfss	status,2,c
  3279  001908  D052               	goto	l2520
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;inc\CANlib.h: 644: {
  3283                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3284  00190A  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3285  00190E  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3286  001912  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3287  001916  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3288  00191A  0E04               	movlw	4
  3289  00191C  D006               	goto	u2090
  3290  00191E                     u2095:
  3291  00191E  0100               	movlb	0	; () banked
  3292  001920  90D8               	bcf	status,0,c
  3293  001922  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3294  001924  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3295  001926  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3296  001928  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3297  00192A                     u2090:
  3298  00192A  2EE8               	decfsz	wreg,f,c
  3299  00192C  D7F8               	goto	u2095
  3300  00192E  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3301  001932  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3302  001936  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3303  00193A  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3307  00193E  0100               	movlb	0	; () banked
  3308  001940  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3309  001942  0100               	movlb	0	; () banked
  3310  001944  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3311  001946  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3312  001948  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3313  00194A  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3317  00194C  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3321  001950  0E07               	movlw	7
  3322  001952  0100               	movlb	0	; () banked
  3323  001954  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3324  001956  0100               	movlb	0	; () banked
  3325  001958  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3326  00195A  0E00               	movlw	0
  3327  00195C  0100               	movlb	0	; () banked
  3328  00195E  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3329  001960  0100               	movlb	0	; () banked
  3330  001962  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3331  001964  0E00               	movlw	0
  3332  001966  0100               	movlb	0	; () banked
  3333  001968  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3334  00196A  0100               	movlb	0	; () banked
  3335  00196C  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3336  00196E  0E00               	movlw	0
  3337  001970  0100               	movlb	0	; () banked
  3338  001972  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3339  001974  0100               	movlb	0	; () banked
  3340  001976  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3344  001978  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3345  00197C  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3346  001980  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3347  001984  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3348  001988  0E05               	movlw	5
  3349  00198A                     u2105:
  3350  00198A  90D8               	bcf	status,0,c
  3351  00198C  0100               	movlb	0	; () banked
  3352  00198E  3778               	rlcf	??_CANSetMask& (0+255),f,b
  3353  001990  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3354  001992  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3355  001994  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3356  001996  2EE8               	decfsz	wreg,f,c
  3357  001998  D7F8               	goto	u2105
  3358  00199A  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3359  00199E  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3360  0019A2  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3361  0019A6  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3365  0019AA  C07D  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3366  0019AE                     l2520:
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;inc\CANlib.h: 652: }
  3370                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3371  0019AE  0E02               	movlw	2
  3372  0019B0  0100               	movlb	0	; () banked
  3373  0019B2  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3374  0019B4  A4D8               	btfss	status,2,c
  3375  0019B6  D056               	goto	l2536
  3376                           
  3377                           ; BSR set to: 0
  3378  0019B8  0100               	movlb	0	; () banked
  3379  0019BA  2977               	incf	CANSetMask@type& (0+255),w,b
  3380  0019BC  A4D8               	btfss	status,2,c
  3381  0019BE  D052               	goto	l2536
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;inc\CANlib.h: 655: {
  3385                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3386  0019C0  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3387  0019C4  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3388  0019C8  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3389  0019CC  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3390  0019D0  0E04               	movlw	4
  3391  0019D2  D006               	goto	u2130
  3392  0019D4                     u2135:
  3393  0019D4  0100               	movlb	0	; () banked
  3394  0019D6  90D8               	bcf	status,0,c
  3395  0019D8  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3396  0019DA  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3397  0019DC  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3398  0019DE  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3399  0019E0                     u2130:
  3400  0019E0  2EE8               	decfsz	wreg,f,c
  3401  0019E2  D7F8               	goto	u2135
  3402  0019E4  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3403  0019E8  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3404  0019EC  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3405  0019F0  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3409  0019F4  0100               	movlb	0	; () banked
  3410  0019F6  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3411  0019F8  0100               	movlb	0	; () banked
  3412  0019FA  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3413  0019FC  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3414  0019FE  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3415  001A00  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3419  001A02  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3423  001A06  0E07               	movlw	7
  3424  001A08  0100               	movlb	0	; () banked
  3425  001A0A  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3426  001A0C  0100               	movlb	0	; () banked
  3427  001A0E  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3428  001A10  0E00               	movlw	0
  3429  001A12  0100               	movlb	0	; () banked
  3430  001A14  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3431  001A16  0100               	movlb	0	; () banked
  3432  001A18  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3433  001A1A  0E00               	movlw	0
  3434  001A1C  0100               	movlb	0	; () banked
  3435  001A1E  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3436  001A20  0100               	movlb	0	; () banked
  3437  001A22  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3438  001A24  0E00               	movlw	0
  3439  001A26  0100               	movlb	0	; () banked
  3440  001A28  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3441  001A2A  0100               	movlb	0	; () banked
  3442  001A2C  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3446  001A2E  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3447  001A32  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3448  001A36  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3449  001A3A  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3450  001A3E  0E05               	movlw	5
  3451  001A40                     u2145:
  3452  001A40  90D8               	bcf	status,0,c
  3453  001A42  0100               	movlb	0	; () banked
  3454  001A44  3778               	rlcf	??_CANSetMask& (0+255),f,b
  3455  001A46  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3456  001A48  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3457  001A4A  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3458  001A4C  2EE8               	decfsz	wreg,f,c
  3459  001A4E  D7F8               	goto	u2145
  3460  001A50  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3461  001A54  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3462  001A58  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3463  001A5C  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3467  001A60  C07D  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3468  001A64                     l2536:
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;inc\CANlib.h: 663: }
  3472                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3473  001A64  0100               	movlb	0	; () banked
  3474  001A66  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  3475  001A68  A4D8               	btfss	status,2,c
  3476  001A6A  D087               	goto	l2568
  3477                           
  3478                           ; BSR set to: 0
  3479  001A6C  0EF7               	movlw	247
  3480  001A6E  0100               	movlb	0	; () banked
  3481  001A70  1977               	xorwf	CANSetMask@type& (0+255),w,b
  3482  001A72  A4D8               	btfss	status,2,c
  3483  001A74  D082               	goto	l2568
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;inc\CANlib.h: 666: {
  3487                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3488  001A76  0100               	movlb	0	; () banked
  3489  001A78  5173               	movf	CANSetMask@mask& (0+255),w,b
  3490  001A7A  0100               	movlb	0	; () banked
  3491  001A7C  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3492  001A7E  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3493  001A80  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3494  001A82  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3498  001A84  C07D  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3502  001A88  0E00               	movlw	0
  3503  001A8A  0100               	movlb	0	; () banked
  3504  001A8C  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3505  001A8E  0100               	movlb	0	; () banked
  3506  001A90  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3507  001A92  0EFF               	movlw	255
  3508  001A94  0100               	movlb	0	; () banked
  3509  001A96  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3510  001A98  0100               	movlb	0	; () banked
  3511  001A9A  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3512  001A9C  0E00               	movlw	0
  3513  001A9E  0100               	movlb	0	; () banked
  3514  001AA0  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3515  001AA2  0100               	movlb	0	; () banked
  3516  001AA4  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3517  001AA6  0E00               	movlw	0
  3518  001AA8  0100               	movlb	0	; () banked
  3519  001AAA  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3520  001AAC  0100               	movlb	0	; () banked
  3521  001AAE  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3525  001AB0  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3526  001AB4  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3527  001AB8  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3528  001ABC  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3529  001AC0  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  3530  001AC4  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  3531  001AC8  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  3532  001ACC  0100               	movlb	0	; () banked
  3533  001ACE  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  3534  001AD0  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3535  001AD4  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3536  001AD8  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3537  001ADC  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3541  001AE0  C07D  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3545  001AE4  0100               	movlb	0	; () banked
  3546  001AE6  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3547  001AE8  D003               	goto	l430
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3551  001AEA  010F               	movlb	15	; () banked
  3552  001AEC  8119               	bsf	25,0,b	;volatile
  3553  001AEE  D002               	goto	l431
  3554  001AF0                     l430:
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;inc\CANlib.h: 676: else
  3558                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3559  001AF0  010F               	movlb	15	; () banked
  3560  001AF2  9119               	bcf	25,0,b	;volatile
  3561  001AF4                     l431:
  3562                           
  3563                           ; BSR set to: 15
  3564                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3565  001AF4  0100               	movlb	0	; () banked
  3566  001AF6  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3567  001AF8  D003               	goto	l432
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3571  001AFA  010F               	movlb	15	; () banked
  3572  001AFC  8319               	bsf	25,1,b	;volatile
  3573  001AFE  D002               	goto	l433
  3574  001B00                     l432:
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;inc\CANlib.h: 681: else
  3578                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3579  001B00  010F               	movlb	15	; () banked
  3580  001B02  9319               	bcf	25,1,b	;volatile
  3581  001B04                     l433:
  3582                           
  3583                           ; BSR set to: 15
  3584                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3585  001B04  0100               	movlb	0	; () banked
  3586  001B06  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3587  001B08  D003               	goto	l434
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3591  001B0A  010F               	movlb	15	; () banked
  3592  001B0C  8B19               	bsf	25,5,b	;volatile
  3593  001B0E  D002               	goto	l435
  3594  001B10                     l434:
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;inc\CANlib.h: 686: else
  3598                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3599  001B10  010F               	movlb	15	; () banked
  3600  001B12  9B19               	bcf	25,5,b	;volatile
  3601  001B14                     l435:
  3602                           
  3603                           ; BSR set to: 15
  3604                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3605  001B14  0100               	movlb	0	; () banked
  3606  001B16  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3607  001B18  D003               	goto	l436
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3611  001B1A  010F               	movlb	15	; () banked
  3612  001B1C  8D19               	bsf	25,6,b	;volatile
  3613  001B1E  D002               	goto	l437
  3614  001B20                     l436:
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;inc\CANlib.h: 691: else
  3618                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3619  001B20  010F               	movlb	15	; () banked
  3620  001B22  9D19               	bcf	25,6,b	;volatile
  3621  001B24                     l437:
  3622                           
  3623                           ; BSR set to: 15
  3624                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3625  001B24  0100               	movlb	0	; () banked
  3626  001B26  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3627  001B28  D003               	goto	l438
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3631  001B2A  010F               	movlb	15	; () banked
  3632  001B2C  8F19               	bsf	25,7,b	;volatile
  3633  001B2E  D002               	goto	l2562
  3634  001B30                     l438:
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;inc\CANlib.h: 696: else
  3638                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3639  001B30  010F               	movlb	15	; () banked
  3640  001B32  9F19               	bcf	25,7,b	;volatile
  3641  001B34                     l2562:
  3642                           
  3643                           ; BSR set to: 15
  3644                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3645  001B34  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3646  001B38  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3647  001B3C  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3648  001B40  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3649  001B44  0E16               	movlw	22
  3650  001B46  D006               	goto	u2220
  3651  001B48                     u2225:
  3652  001B48  0100               	movlb	0	; () banked
  3653  001B4A  90D8               	bcf	status,0,c
  3654  001B4C  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3655  001B4E  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3656  001B50  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3657  001B52  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3658  001B54                     u2220:
  3659  001B54  2EE8               	decfsz	wreg,f,c
  3660  001B56  D7F8               	goto	u2225
  3661  001B58  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3662  001B5C  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3663  001B60  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3664  001B64  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3668  001B68  0100               	movlb	0	; () banked
  3669  001B6A  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3670  001B6C  0100               	movlb	0	; () banked
  3671  001B6E  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3672  001B70  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3673  001B72  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3674  001B74  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3678  001B76  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3679  001B7A                     l2568:
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;inc\CANlib.h: 702: }
  3683                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3684  001B7A  0E02               	movlw	2
  3685  001B7C  0100               	movlb	0	; () banked
  3686  001B7E  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3687  001B80  A4D8               	btfss	status,2,c
  3688  001B82  0012               	return	
  3689                           
  3690                           ; BSR set to: 0
  3691  001B84  0EF7               	movlw	247
  3692  001B86  0100               	movlb	0	; () banked
  3693  001B88  1977               	xorwf	CANSetMask@type& (0+255),w,b
  3694  001B8A  A4D8               	btfss	status,2,c
  3695  001B8C  0012               	return	
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;inc\CANlib.h: 705: {
  3699                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3700  001B8E  0100               	movlb	0	; () banked
  3701  001B90  5173               	movf	CANSetMask@mask& (0+255),w,b
  3702  001B92  0100               	movlb	0	; () banked
  3703  001B94  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3704  001B96  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3705  001B98  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3706  001B9A  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3710  001B9C  C07D  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3714  001BA0  0E00               	movlw	0
  3715  001BA2  0100               	movlb	0	; () banked
  3716  001BA4  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3717  001BA6  0100               	movlb	0	; () banked
  3718  001BA8  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3719  001BAA  0EFF               	movlw	255
  3720  001BAC  0100               	movlb	0	; () banked
  3721  001BAE  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3722  001BB0  0100               	movlb	0	; () banked
  3723  001BB2  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3724  001BB4  0E00               	movlw	0
  3725  001BB6  0100               	movlb	0	; () banked
  3726  001BB8  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3727  001BBA  0100               	movlb	0	; () banked
  3728  001BBC  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3729  001BBE  0E00               	movlw	0
  3730  001BC0  0100               	movlb	0	; () banked
  3731  001BC2  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3732  001BC4  0100               	movlb	0	; () banked
  3733  001BC6  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3737  001BC8  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3738  001BCC  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3739  001BD0  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3740  001BD4  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3741  001BD8  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  3742  001BDC  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  3743  001BE0  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  3744  001BE4  0100               	movlb	0	; () banked
  3745  001BE6  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  3746  001BE8  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3747  001BEC  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3748  001BF0  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3749  001BF4  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3753  001BF8  C07D  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3757  001BFC  0100               	movlb	0	; () banked
  3758  001BFE  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3759  001C00  D003               	goto	l441
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3763  001C02  010F               	movlb	15	; () banked
  3764  001C04  811D               	bsf	29,0,b	;volatile
  3765  001C06  D002               	goto	l442
  3766  001C08                     l441:
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;inc\CANlib.h: 715: else
  3770                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3771  001C08  010F               	movlb	15	; () banked
  3772  001C0A  911D               	bcf	29,0,b	;volatile
  3773  001C0C                     l442:
  3774                           
  3775                           ; BSR set to: 15
  3776                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3777  001C0C  0100               	movlb	0	; () banked
  3778  001C0E  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3779  001C10  D003               	goto	l443
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3783  001C12  010F               	movlb	15	; () banked
  3784  001C14  831D               	bsf	29,1,b	;volatile
  3785  001C16  D002               	goto	l444
  3786  001C18                     l443:
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;inc\CANlib.h: 720: else
  3790                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3791  001C18  010F               	movlb	15	; () banked
  3792  001C1A  931D               	bcf	29,1,b	;volatile
  3793  001C1C                     l444:
  3794                           
  3795                           ; BSR set to: 15
  3796                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3797  001C1C  0100               	movlb	0	; () banked
  3798  001C1E  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3799  001C20  D003               	goto	l445
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3803  001C22  010F               	movlb	15	; () banked
  3804  001C24  8B1D               	bsf	29,5,b	;volatile
  3805  001C26  D002               	goto	l446
  3806  001C28                     l445:
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;inc\CANlib.h: 725: else
  3810                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3811  001C28  010F               	movlb	15	; () banked
  3812  001C2A  9B1D               	bcf	29,5,b	;volatile
  3813  001C2C                     l446:
  3814                           
  3815                           ; BSR set to: 15
  3816                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3817  001C2C  0100               	movlb	0	; () banked
  3818  001C2E  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3819  001C30  D003               	goto	l447
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3823  001C32  010F               	movlb	15	; () banked
  3824  001C34  8D1D               	bsf	29,6,b	;volatile
  3825  001C36  D002               	goto	l448
  3826  001C38                     l447:
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;inc\CANlib.h: 730: else
  3830                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3831  001C38  010F               	movlb	15	; () banked
  3832  001C3A  9D1D               	bcf	29,6,b	;volatile
  3833  001C3C                     l448:
  3834                           
  3835                           ; BSR set to: 15
  3836                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3837  001C3C  0100               	movlb	0	; () banked
  3838  001C3E  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3839  001C40  D003               	goto	l449
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3843  001C42  010F               	movlb	15	; () banked
  3844  001C44  8F1D               	bsf	29,7,b	;volatile
  3845  001C46  D002               	goto	l2594
  3846  001C48                     l449:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;inc\CANlib.h: 735: else
  3850                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3851  001C48  010F               	movlb	15	; () banked
  3852  001C4A  9F1D               	bcf	29,7,b	;volatile
  3853  001C4C                     l2594:
  3854                           
  3855                           ; BSR set to: 15
  3856                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3857  001C4C  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3858  001C50  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3859  001C54  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3860  001C58  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3861  001C5C  0E16               	movlw	22
  3862  001C5E  D006               	goto	u2300
  3863  001C60                     u2305:
  3864  001C60  0100               	movlb	0	; () banked
  3865  001C62  90D8               	bcf	status,0,c
  3866  001C64  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3867  001C66  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3868  001C68  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3869  001C6A  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3870  001C6C                     u2300:
  3871  001C6C  2EE8               	decfsz	wreg,f,c
  3872  001C6E  D7F8               	goto	u2305
  3873  001C70  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3874  001C74  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3875  001C78  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3876  001C7C  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3880  001C80  0100               	movlb	0	; () banked
  3881  001C82  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3882  001C84  0100               	movlb	0	; () banked
  3883  001C86  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3884  001C88  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3885  001C8A  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3886  001C8C  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3890  001C8E  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3891  001C92  0012               	return	
  3892  001C94                     __end_of_CANSetMask:
  3893                           	opt stack 0
  3894                           tblptru	equ	0xFF8
  3895                           tblptrh	equ	0xFF7
  3896                           tblptrl	equ	0xFF6
  3897                           tablat	equ	0xFF5
  3898                           intcon	equ	0xFF2
  3899                           intcon2	equ	0xFF1
  3900                           postinc0	equ	0xFEE
  3901                           wreg	equ	0xFE8
  3902                           postdec1	equ	0xFE5
  3903                           fsr1l	equ	0xFE1
  3904                           indf2	equ	0xFDF
  3905                           fsr2h	equ	0xFDA
  3906                           fsr2l	equ	0xFD9
  3907                           status	equ	0xFD8
  3908                           
  3909 ;; *************** function _CANSetFilter *****************
  3910 ;; Defined at:
  3911 ;;		line 748 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  numBuffer       1    wreg     enum E16881
  3914 ;;  filter          4   19[BANK0 ] unsigned long 
  3915 ;;  type            1   23[BANK0 ] enum E16844
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  numBuffer       1   28[BANK0 ] enum E16881
  3918 ;;  tamp            4   29[BANK0 ] unsigned long 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;		None               void
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3928 ;;      Params:         0       5       0       0
  3929 ;;      Locals:         0       5       0       0
  3930 ;;      Temps:          0       4       0       0
  3931 ;;      Totals:         0      14       0       0
  3932 ;;Total ram usage:       14 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    4
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_CANInitialize
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text8
  3943  000158                     __ptext8:
  3944                           	opt stack 0
  3945  000158                     _CANSetFilter:
  3946                           	opt stack 24
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;incstack = 0
  3950                           ;CANSetFilter@numBuffer stored from wreg
  3951  000158  0100               	movlb	0	; () banked
  3952  00015A  6F7C               	movwf	CANSetFilter@numBuffer& (0+255),b
  3953                           
  3954                           ;inc\CANlib.h: 750: unsigned long tamp;
  3955                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3956  00015C  0100               	movlb	0	; () banked
  3957  00015E  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3958  000160  0100               	movlb	0	; () banked
  3959  000162  A4D8               	btfss	status,2,c
  3960  000164  D058               	goto	l2618
  3961                           
  3962                           ; BSR set to: 0
  3963  000166  0100               	movlb	0	; () banked
  3964  000168  2977               	incf	CANSetFilter@type& (0+255),w,b
  3965  00016A  A4D8               	btfss	status,2,c
  3966  00016C  D054               	goto	l2618
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;inc\CANlib.h: 753: {
  3970                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3971  00016E  010F               	movlb	15	; () banked
  3972  000170  9701               	bcf	1,3,b	;volatile
  3973                           
  3974                           ; BSR set to: 15
  3975                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  3976  000172  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  3977  000176  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3978  00017A  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3979  00017E  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3980  000182  0E04               	movlw	4
  3981  000184  D006               	goto	u2330
  3982  000186                     u2335:
  3983  000186  0100               	movlb	0	; () banked
  3984  000188  90D8               	bcf	status,0,c
  3985  00018A  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3986  00018C  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3987  00018E  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3988  000190  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  3989  000192                     u2330:
  3990  000192  2EE8               	decfsz	wreg,f,c
  3991  000194  D7F8               	goto	u2335
  3992  000196  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  3993  00019A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3994  00019E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3995  0001A2  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  3999  0001A6  0100               	movlb	0	; () banked
  4000  0001A8  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4001  0001AA  0100               	movlb	0	; () banked
  4002  0001AC  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4003  0001AE  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4004  0001B0  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4005  0001B2  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4009  0001B4  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4013  0001B8  0E07               	movlw	7
  4014  0001BA  0100               	movlb	0	; () banked
  4015  0001BC  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4016  0001BE  0100               	movlb	0	; () banked
  4017  0001C0  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4018  0001C2  0E00               	movlw	0
  4019  0001C4  0100               	movlb	0	; () banked
  4020  0001C6  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4021  0001C8  0100               	movlb	0	; () banked
  4022  0001CA  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4023  0001CC  0E00               	movlw	0
  4024  0001CE  0100               	movlb	0	; () banked
  4025  0001D0  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4026  0001D2  0100               	movlb	0	; () banked
  4027  0001D4  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4028  0001D6  0E00               	movlw	0
  4029  0001D8  0100               	movlb	0	; () banked
  4030  0001DA  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4031  0001DC  0100               	movlb	0	; () banked
  4032  0001DE  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4036  0001E0  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4037  0001E4  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4038  0001E8  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4039  0001EC  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4040  0001F0  0E05               	movlw	5
  4041  0001F2                     u2345:
  4042  0001F2  90D8               	bcf	status,0,c
  4043  0001F4  0100               	movlb	0	; () banked
  4044  0001F6  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4045  0001F8  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4046  0001FA  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4047  0001FC  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4048  0001FE  2EE8               	decfsz	wreg,f,c
  4049  000200  D7F8               	goto	u2345
  4050  000202  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4051  000206  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4052  00020A  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4053  00020E  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4057  000212  C07D  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4058  000216                     l2618:
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;inc\CANlib.h: 763: }
  4062                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4063  000216  0100               	movlb	0	; () banked
  4064  000218  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4065  00021A  A4D8               	btfss	status,2,c
  4066  00021C  D058               	goto	l2636
  4067                           
  4068                           ; BSR set to: 0
  4069  00021E  0100               	movlb	0	; () banked
  4070  000220  2977               	incf	CANSetFilter@type& (0+255),w,b
  4071  000222  A4D8               	btfss	status,2,c
  4072  000224  D054               	goto	l2636
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;inc\CANlib.h: 766: {
  4076                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4077  000226  010F               	movlb	15	; () banked
  4078  000228  9705               	bcf	5,3,b	;volatile
  4079                           
  4080                           ; BSR set to: 15
  4081                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4082  00022A  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4083  00022E  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4084  000232  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4085  000236  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4086  00023A  0E04               	movlw	4
  4087  00023C  D006               	goto	u2370
  4088  00023E                     u2375:
  4089  00023E  0100               	movlb	0	; () banked
  4090  000240  90D8               	bcf	status,0,c
  4091  000242  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4092  000244  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4093  000246  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4094  000248  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4095  00024A                     u2370:
  4096  00024A  2EE8               	decfsz	wreg,f,c
  4097  00024C  D7F8               	goto	u2375
  4098  00024E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4099  000252  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4100  000256  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4101  00025A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4105  00025E  0100               	movlb	0	; () banked
  4106  000260  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4107  000262  0100               	movlb	0	; () banked
  4108  000264  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4109  000266  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4110  000268  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4111  00026A  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4115  00026C  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4119  000270  0E07               	movlw	7
  4120  000272  0100               	movlb	0	; () banked
  4121  000274  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4122  000276  0100               	movlb	0	; () banked
  4123  000278  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4124  00027A  0E00               	movlw	0
  4125  00027C  0100               	movlb	0	; () banked
  4126  00027E  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4127  000280  0100               	movlb	0	; () banked
  4128  000282  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4129  000284  0E00               	movlw	0
  4130  000286  0100               	movlb	0	; () banked
  4131  000288  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4132  00028A  0100               	movlb	0	; () banked
  4133  00028C  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4134  00028E  0E00               	movlw	0
  4135  000290  0100               	movlb	0	; () banked
  4136  000292  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4137  000294  0100               	movlb	0	; () banked
  4138  000296  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4142  000298  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4143  00029C  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4144  0002A0  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4145  0002A4  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4146  0002A8  0E05               	movlw	5
  4147  0002AA                     u2385:
  4148  0002AA  90D8               	bcf	status,0,c
  4149  0002AC  0100               	movlb	0	; () banked
  4150  0002AE  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4151  0002B0  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4152  0002B2  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4153  0002B4  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4154  0002B6  2EE8               	decfsz	wreg,f,c
  4155  0002B8  D7F8               	goto	u2385
  4156  0002BA  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4157  0002BE  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4158  0002C2  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4159  0002C6  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4163  0002CA  C07D  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4164  0002CE                     l2636:
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;inc\CANlib.h: 776: }
  4168                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4169  0002CE  0E02               	movlw	2
  4170  0002D0  0100               	movlb	0	; () banked
  4171  0002D2  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4172  0002D4  A4D8               	btfss	status,2,c
  4173  0002D6  D058               	goto	l2654
  4174                           
  4175                           ; BSR set to: 0
  4176  0002D8  0100               	movlb	0	; () banked
  4177  0002DA  2977               	incf	CANSetFilter@type& (0+255),w,b
  4178  0002DC  A4D8               	btfss	status,2,c
  4179  0002DE  D054               	goto	l2654
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;inc\CANlib.h: 779: {
  4183                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4184  0002E0  010F               	movlb	15	; () banked
  4185  0002E2  9709               	bcf	9,3,b	;volatile
  4186                           
  4187                           ; BSR set to: 15
  4188                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4189  0002E4  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4190  0002E8  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4191  0002EC  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4192  0002F0  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4193  0002F4  0E04               	movlw	4
  4194  0002F6  D006               	goto	u2410
  4195  0002F8                     u2415:
  4196  0002F8  0100               	movlb	0	; () banked
  4197  0002FA  90D8               	bcf	status,0,c
  4198  0002FC  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4199  0002FE  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4200  000300  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4201  000302  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4202  000304                     u2410:
  4203  000304  2EE8               	decfsz	wreg,f,c
  4204  000306  D7F8               	goto	u2415
  4205  000308  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4206  00030C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4207  000310  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4208  000314  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4212  000318  0100               	movlb	0	; () banked
  4213  00031A  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4214  00031C  0100               	movlb	0	; () banked
  4215  00031E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4216  000320  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4217  000322  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4218  000324  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4222  000326  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4226  00032A  0E07               	movlw	7
  4227  00032C  0100               	movlb	0	; () banked
  4228  00032E  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4229  000330  0100               	movlb	0	; () banked
  4230  000332  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4231  000334  0E00               	movlw	0
  4232  000336  0100               	movlb	0	; () banked
  4233  000338  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4234  00033A  0100               	movlb	0	; () banked
  4235  00033C  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4236  00033E  0E00               	movlw	0
  4237  000340  0100               	movlb	0	; () banked
  4238  000342  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4239  000344  0100               	movlb	0	; () banked
  4240  000346  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4241  000348  0E00               	movlw	0
  4242  00034A  0100               	movlb	0	; () banked
  4243  00034C  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4244  00034E  0100               	movlb	0	; () banked
  4245  000350  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4249  000352  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4250  000356  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4251  00035A  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4252  00035E  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4253  000362  0E05               	movlw	5
  4254  000364                     u2425:
  4255  000364  90D8               	bcf	status,0,c
  4256  000366  0100               	movlb	0	; () banked
  4257  000368  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4258  00036A  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4259  00036C  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4260  00036E  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4261  000370  2EE8               	decfsz	wreg,f,c
  4262  000372  D7F8               	goto	u2425
  4263  000374  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4264  000378  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4265  00037C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4266  000380  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4270  000384  C07D  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4271  000388                     l2654:
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;inc\CANlib.h: 789: }
  4275                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4276  000388  0E03               	movlw	3
  4277  00038A  0100               	movlb	0	; () banked
  4278  00038C  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4279  00038E  A4D8               	btfss	status,2,c
  4280  000390  D058               	goto	l2672
  4281                           
  4282                           ; BSR set to: 0
  4283  000392  0100               	movlb	0	; () banked
  4284  000394  2977               	incf	CANSetFilter@type& (0+255),w,b
  4285  000396  A4D8               	btfss	status,2,c
  4286  000398  D054               	goto	l2672
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;inc\CANlib.h: 792: {
  4290                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4291  00039A  010F               	movlb	15	; () banked
  4292  00039C  970D               	bcf	13,3,b	;volatile
  4293                           
  4294                           ; BSR set to: 15
  4295                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4296  00039E  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4297  0003A2  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4298  0003A6  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4299  0003AA  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4300  0003AE  0E04               	movlw	4
  4301  0003B0  D006               	goto	u2450
  4302  0003B2                     u2455:
  4303  0003B2  0100               	movlb	0	; () banked
  4304  0003B4  90D8               	bcf	status,0,c
  4305  0003B6  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4306  0003B8  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4307  0003BA  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4308  0003BC  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4309  0003BE                     u2450:
  4310  0003BE  2EE8               	decfsz	wreg,f,c
  4311  0003C0  D7F8               	goto	u2455
  4312  0003C2  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4313  0003C6  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4314  0003CA  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4315  0003CE  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4319  0003D2  0100               	movlb	0	; () banked
  4320  0003D4  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4321  0003D6  0100               	movlb	0	; () banked
  4322  0003D8  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4323  0003DA  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4324  0003DC  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4325  0003DE  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4329  0003E0  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4333  0003E4  0E07               	movlw	7
  4334  0003E6  0100               	movlb	0	; () banked
  4335  0003E8  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4336  0003EA  0100               	movlb	0	; () banked
  4337  0003EC  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4338  0003EE  0E00               	movlw	0
  4339  0003F0  0100               	movlb	0	; () banked
  4340  0003F2  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4341  0003F4  0100               	movlb	0	; () banked
  4342  0003F6  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4343  0003F8  0E00               	movlw	0
  4344  0003FA  0100               	movlb	0	; () banked
  4345  0003FC  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4346  0003FE  0100               	movlb	0	; () banked
  4347  000400  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4348  000402  0E00               	movlw	0
  4349  000404  0100               	movlb	0	; () banked
  4350  000406  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4351  000408  0100               	movlb	0	; () banked
  4352  00040A  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4356  00040C  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4357  000410  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4358  000414  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4359  000418  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4360  00041C  0E05               	movlw	5
  4361  00041E                     u2465:
  4362  00041E  90D8               	bcf	status,0,c
  4363  000420  0100               	movlb	0	; () banked
  4364  000422  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4365  000424  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4366  000426  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4367  000428  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4368  00042A  2EE8               	decfsz	wreg,f,c
  4369  00042C  D7F8               	goto	u2465
  4370  00042E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4371  000432  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4372  000436  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4373  00043A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4377  00043E  C07D  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4378  000442                     l2672:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;inc\CANlib.h: 802: }
  4382                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4383  000442  0E04               	movlw	4
  4384  000444  0100               	movlb	0	; () banked
  4385  000446  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4386  000448  A4D8               	btfss	status,2,c
  4387  00044A  D058               	goto	l2690
  4388                           
  4389                           ; BSR set to: 0
  4390  00044C  0100               	movlb	0	; () banked
  4391  00044E  2977               	incf	CANSetFilter@type& (0+255),w,b
  4392  000450  A4D8               	btfss	status,2,c
  4393  000452  D054               	goto	l2690
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;inc\CANlib.h: 805: {
  4397                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4398  000454  010F               	movlb	15	; () banked
  4399  000456  9711               	bcf	17,3,b	;volatile
  4400                           
  4401                           ; BSR set to: 15
  4402                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4403  000458  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4404  00045C  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4405  000460  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4406  000464  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4407  000468  0E04               	movlw	4
  4408  00046A  D006               	goto	u2490
  4409  00046C                     u2495:
  4410  00046C  0100               	movlb	0	; () banked
  4411  00046E  90D8               	bcf	status,0,c
  4412  000470  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4413  000472  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4414  000474  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4415  000476  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4416  000478                     u2490:
  4417  000478  2EE8               	decfsz	wreg,f,c
  4418  00047A  D7F8               	goto	u2495
  4419  00047C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4420  000480  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4421  000484  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4422  000488  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4426  00048C  0100               	movlb	0	; () banked
  4427  00048E  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4428  000490  0100               	movlb	0	; () banked
  4429  000492  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4430  000494  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4431  000496  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4432  000498  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4436  00049A  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4440  00049E  0E07               	movlw	7
  4441  0004A0  0100               	movlb	0	; () banked
  4442  0004A2  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4443  0004A4  0100               	movlb	0	; () banked
  4444  0004A6  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4445  0004A8  0E00               	movlw	0
  4446  0004AA  0100               	movlb	0	; () banked
  4447  0004AC  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4448  0004AE  0100               	movlb	0	; () banked
  4449  0004B0  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4450  0004B2  0E00               	movlw	0
  4451  0004B4  0100               	movlb	0	; () banked
  4452  0004B6  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4453  0004B8  0100               	movlb	0	; () banked
  4454  0004BA  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4455  0004BC  0E00               	movlw	0
  4456  0004BE  0100               	movlb	0	; () banked
  4457  0004C0  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4458  0004C2  0100               	movlb	0	; () banked
  4459  0004C4  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4463  0004C6  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4464  0004CA  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4465  0004CE  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4466  0004D2  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4467  0004D6  0E05               	movlw	5
  4468  0004D8                     u2505:
  4469  0004D8  90D8               	bcf	status,0,c
  4470  0004DA  0100               	movlb	0	; () banked
  4471  0004DC  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4472  0004DE  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4473  0004E0  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4474  0004E2  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4475  0004E4  2EE8               	decfsz	wreg,f,c
  4476  0004E6  D7F8               	goto	u2505
  4477  0004E8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4478  0004EC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4479  0004F0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4480  0004F4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4484  0004F8  C07D  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4485  0004FC                     l2690:
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;inc\CANlib.h: 815: }
  4489                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4490  0004FC  0E05               	movlw	5
  4491  0004FE  0100               	movlb	0	; () banked
  4492  000500  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4493  000502  A4D8               	btfss	status,2,c
  4494  000504  D058               	goto	l2708
  4495                           
  4496                           ; BSR set to: 0
  4497  000506  0100               	movlb	0	; () banked
  4498  000508  2977               	incf	CANSetFilter@type& (0+255),w,b
  4499  00050A  A4D8               	btfss	status,2,c
  4500  00050C  D054               	goto	l2708
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;inc\CANlib.h: 818: {
  4504                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4505  00050E  010F               	movlb	15	; () banked
  4506  000510  9715               	bcf	21,3,b	;volatile
  4507                           
  4508                           ; BSR set to: 15
  4509                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4510  000512  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4511  000516  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4512  00051A  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4513  00051E  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4514  000522  0E04               	movlw	4
  4515  000524  D006               	goto	u2530
  4516  000526                     u2535:
  4517  000526  0100               	movlb	0	; () banked
  4518  000528  90D8               	bcf	status,0,c
  4519  00052A  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4520  00052C  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4521  00052E  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4522  000530  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4523  000532                     u2530:
  4524  000532  2EE8               	decfsz	wreg,f,c
  4525  000534  D7F8               	goto	u2535
  4526  000536  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4527  00053A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4528  00053E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4529  000542  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4533  000546  0100               	movlb	0	; () banked
  4534  000548  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4535  00054A  0100               	movlb	0	; () banked
  4536  00054C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4537  00054E  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4538  000550  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4539  000552  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4543  000554  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4547  000558  0E07               	movlw	7
  4548  00055A  0100               	movlb	0	; () banked
  4549  00055C  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4550  00055E  0100               	movlb	0	; () banked
  4551  000560  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4552  000562  0E00               	movlw	0
  4553  000564  0100               	movlb	0	; () banked
  4554  000566  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4555  000568  0100               	movlb	0	; () banked
  4556  00056A  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4557  00056C  0E00               	movlw	0
  4558  00056E  0100               	movlb	0	; () banked
  4559  000570  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4560  000572  0100               	movlb	0	; () banked
  4561  000574  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4562  000576  0E00               	movlw	0
  4563  000578  0100               	movlb	0	; () banked
  4564  00057A  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4565  00057C  0100               	movlb	0	; () banked
  4566  00057E  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4570  000580  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4571  000584  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4572  000588  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4573  00058C  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4574  000590  0E05               	movlw	5
  4575  000592                     u2545:
  4576  000592  90D8               	bcf	status,0,c
  4577  000594  0100               	movlb	0	; () banked
  4578  000596  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4579  000598  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4580  00059A  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4581  00059C  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4582  00059E  2EE8               	decfsz	wreg,f,c
  4583  0005A0  D7F8               	goto	u2545
  4584  0005A2  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4585  0005A6  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4586  0005AA  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4587  0005AE  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4591  0005B2  C07D  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4592  0005B6                     l2708:
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;inc\CANlib.h: 828: }
  4596                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4597  0005B6  0100               	movlb	0	; () banked
  4598  0005B8  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4599  0005BA  0100               	movlb	0	; () banked
  4600  0005BC  A4D8               	btfss	status,2,c
  4601  0005BE  D089               	goto	l2742
  4602                           
  4603                           ; BSR set to: 0
  4604  0005C0  0EF7               	movlw	247
  4605  0005C2  0100               	movlb	0	; () banked
  4606  0005C4  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  4607  0005C6  A4D8               	btfss	status,2,c
  4608  0005C8  D084               	goto	l2742
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;inc\CANlib.h: 832: {
  4612                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4613  0005CA  010F               	movlb	15	; () banked
  4614  0005CC  8701               	bsf	1,3,b	;volatile
  4615                           
  4616                           ; BSR set to: 15
  4617                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4618  0005CE  0100               	movlb	0	; () banked
  4619  0005D0  5173               	movf	CANSetFilter@filter& (0+255),w,b
  4620  0005D2  0100               	movlb	0	; () banked
  4621  0005D4  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4622  0005D6  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4623  0005D8  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4624  0005DA  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4628  0005DC  C07D  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4632  0005E0  0E00               	movlw	0
  4633  0005E2  0100               	movlb	0	; () banked
  4634  0005E4  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4635  0005E6  0100               	movlb	0	; () banked
  4636  0005E8  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4637  0005EA  0EFF               	movlw	255
  4638  0005EC  0100               	movlb	0	; () banked
  4639  0005EE  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4640  0005F0  0100               	movlb	0	; () banked
  4641  0005F2  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4642  0005F4  0E00               	movlw	0
  4643  0005F6  0100               	movlb	0	; () banked
  4644  0005F8  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4645  0005FA  0100               	movlb	0	; () banked
  4646  0005FC  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4647  0005FE  0E00               	movlw	0
  4648  000600  0100               	movlb	0	; () banked
  4649  000602  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4650  000604  0100               	movlb	0	; () banked
  4651  000606  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4655  000608  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4656  00060C  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4657  000610  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4658  000614  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4659  000618  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  4660  00061C  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4661  000620  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4662  000624  0100               	movlb	0	; () banked
  4663  000626  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  4664  000628  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4665  00062C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4666  000630  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4667  000634  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4671  000638  C07D  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4675  00063C  0100               	movlb	0	; () banked
  4676  00063E  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4677  000640  D003               	goto	l461
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4681  000642  010F               	movlb	15	; () banked
  4682  000644  8101               	bsf	1,0,b	;volatile
  4683  000646  D002               	goto	l462
  4684  000648                     l461:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;inc\CANlib.h: 844: else
  4688                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4689  000648  010F               	movlb	15	; () banked
  4690  00064A  9101               	bcf	1,0,b	;volatile
  4691  00064C                     l462:
  4692                           
  4693                           ; BSR set to: 15
  4694                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4695  00064C  0100               	movlb	0	; () banked
  4696  00064E  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4697  000650  D003               	goto	l463
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4701  000652  010F               	movlb	15	; () banked
  4702  000654  8301               	bsf	1,1,b	;volatile
  4703  000656  D002               	goto	l464
  4704  000658                     l463:
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;inc\CANlib.h: 849: else
  4708                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4709  000658  010F               	movlb	15	; () banked
  4710  00065A  9301               	bcf	1,1,b	;volatile
  4711  00065C                     l464:
  4712                           
  4713                           ; BSR set to: 15
  4714                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4715  00065C  0100               	movlb	0	; () banked
  4716  00065E  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4717  000660  D003               	goto	l465
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4721  000662  010F               	movlb	15	; () banked
  4722  000664  8B01               	bsf	1,5,b	;volatile
  4723  000666  D002               	goto	l466
  4724  000668                     l465:
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;inc\CANlib.h: 854: else
  4728                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4729  000668  010F               	movlb	15	; () banked
  4730  00066A  9B01               	bcf	1,5,b	;volatile
  4731  00066C                     l466:
  4732                           
  4733                           ; BSR set to: 15
  4734                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4735  00066C  0100               	movlb	0	; () banked
  4736  00066E  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4737  000670  D003               	goto	l467
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4741  000672  010F               	movlb	15	; () banked
  4742  000674  8D01               	bsf	1,6,b	;volatile
  4743  000676  D002               	goto	l468
  4744  000678                     l467:
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;inc\CANlib.h: 859: else
  4748                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4749  000678  010F               	movlb	15	; () banked
  4750  00067A  9D01               	bcf	1,6,b	;volatile
  4751  00067C                     l468:
  4752                           
  4753                           ; BSR set to: 15
  4754                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4755  00067C  0100               	movlb	0	; () banked
  4756  00067E  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4757  000680  D003               	goto	l469
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4761  000682  010F               	movlb	15	; () banked
  4762  000684  8F01               	bsf	1,7,b	;volatile
  4763  000686  D002               	goto	l2736
  4764  000688                     l469:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;inc\CANlib.h: 864: else
  4768                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4769  000688  010F               	movlb	15	; () banked
  4770  00068A  9F01               	bcf	1,7,b	;volatile
  4771  00068C                     l2736:
  4772                           
  4773                           ; BSR set to: 15
  4774                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4775  00068C  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4776  000690  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4777  000694  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4778  000698  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4779  00069C  0E16               	movlw	22
  4780  00069E  D006               	goto	u2620
  4781  0006A0                     u2625:
  4782  0006A0  0100               	movlb	0	; () banked
  4783  0006A2  90D8               	bcf	status,0,c
  4784  0006A4  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4785  0006A6  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4786  0006A8  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4787  0006AA  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4788  0006AC                     u2620:
  4789  0006AC  2EE8               	decfsz	wreg,f,c
  4790  0006AE  D7F8               	goto	u2625
  4791  0006B0  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4792  0006B4  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4793  0006B8  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4794  0006BC  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4798  0006C0  0100               	movlb	0	; () banked
  4799  0006C2  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4800  0006C4  0100               	movlb	0	; () banked
  4801  0006C6  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4802  0006C8  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4803  0006CA  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4804  0006CC  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4808  0006CE  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4809  0006D2                     l2742:
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;inc\CANlib.h: 870: }
  4813                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4814  0006D2  0100               	movlb	0	; () banked
  4815  0006D4  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4816  0006D6  A4D8               	btfss	status,2,c
  4817  0006D8  D089               	goto	l2776
  4818                           
  4819                           ; BSR set to: 0
  4820  0006DA  0EF7               	movlw	247
  4821  0006DC  0100               	movlb	0	; () banked
  4822  0006DE  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  4823  0006E0  A4D8               	btfss	status,2,c
  4824  0006E2  D084               	goto	l2776
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;inc\CANlib.h: 873: {
  4828                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4829  0006E4  010F               	movlb	15	; () banked
  4830  0006E6  8705               	bsf	5,3,b	;volatile
  4831                           
  4832                           ; BSR set to: 15
  4833                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4834  0006E8  0100               	movlb	0	; () banked
  4835  0006EA  5173               	movf	CANSetFilter@filter& (0+255),w,b
  4836  0006EC  0100               	movlb	0	; () banked
  4837  0006EE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4838  0006F0  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4839  0006F2  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4840  0006F4  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4844  0006F6  C07D  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4848  0006FA  0E00               	movlw	0
  4849  0006FC  0100               	movlb	0	; () banked
  4850  0006FE  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4851  000700  0100               	movlb	0	; () banked
  4852  000702  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4853  000704  0EFF               	movlw	255
  4854  000706  0100               	movlb	0	; () banked
  4855  000708  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4856  00070A  0100               	movlb	0	; () banked
  4857  00070C  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4858  00070E  0E00               	movlw	0
  4859  000710  0100               	movlb	0	; () banked
  4860  000712  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4861  000714  0100               	movlb	0	; () banked
  4862  000716  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4863  000718  0E00               	movlw	0
  4864  00071A  0100               	movlb	0	; () banked
  4865  00071C  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4866  00071E  0100               	movlb	0	; () banked
  4867  000720  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4871  000722  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4872  000726  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4873  00072A  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4874  00072E  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4875  000732  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  4876  000736  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4877  00073A  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4878  00073E  0100               	movlb	0	; () banked
  4879  000740  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  4880  000742  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4881  000746  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4882  00074A  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4883  00074E  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4887  000752  C07D  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4891  000756  0100               	movlb	0	; () banked
  4892  000758  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4893  00075A  D003               	goto	l472
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4897  00075C  010F               	movlb	15	; () banked
  4898  00075E  8105               	bsf	5,0,b	;volatile
  4899  000760  D002               	goto	l473
  4900  000762                     l472:
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;inc\CANlib.h: 885: else
  4904                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4905  000762  010F               	movlb	15	; () banked
  4906  000764  9105               	bcf	5,0,b	;volatile
  4907  000766                     l473:
  4908                           
  4909                           ; BSR set to: 15
  4910                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4911  000766  0100               	movlb	0	; () banked
  4912  000768  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4913  00076A  D003               	goto	l474
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4917  00076C  010F               	movlb	15	; () banked
  4918  00076E  8305               	bsf	5,1,b	;volatile
  4919  000770  D002               	goto	l475
  4920  000772                     l474:
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;inc\CANlib.h: 890: else
  4924                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4925  000772  010F               	movlb	15	; () banked
  4926  000774  9305               	bcf	5,1,b	;volatile
  4927  000776                     l475:
  4928                           
  4929                           ; BSR set to: 15
  4930                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4931  000776  0100               	movlb	0	; () banked
  4932  000778  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4933  00077A  D003               	goto	l476
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4937  00077C  010F               	movlb	15	; () banked
  4938  00077E  8B05               	bsf	5,5,b	;volatile
  4939  000780  D002               	goto	l477
  4940  000782                     l476:
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;inc\CANlib.h: 895: else
  4944                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4945  000782  010F               	movlb	15	; () banked
  4946  000784  9B05               	bcf	5,5,b	;volatile
  4947  000786                     l477:
  4948                           
  4949                           ; BSR set to: 15
  4950                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  4951  000786  0100               	movlb	0	; () banked
  4952  000788  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4953  00078A  D003               	goto	l478
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4957  00078C  010F               	movlb	15	; () banked
  4958  00078E  8D05               	bsf	5,6,b	;volatile
  4959  000790  D002               	goto	l479
  4960  000792                     l478:
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;inc\CANlib.h: 900: else
  4964                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4965  000792  010F               	movlb	15	; () banked
  4966  000794  9D05               	bcf	5,6,b	;volatile
  4967  000796                     l479:
  4968                           
  4969                           ; BSR set to: 15
  4970                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  4971  000796  0100               	movlb	0	; () banked
  4972  000798  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4973  00079A  D003               	goto	l480
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4977  00079C  010F               	movlb	15	; () banked
  4978  00079E  8F05               	bsf	5,7,b	;volatile
  4979  0007A0  D002               	goto	l2770
  4980  0007A2                     l480:
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;inc\CANlib.h: 905: else
  4984                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4985  0007A2  010F               	movlb	15	; () banked
  4986  0007A4  9F05               	bcf	5,7,b	;volatile
  4987  0007A6                     l2770:
  4988                           
  4989                           ; BSR set to: 15
  4990                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  4991  0007A6  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4992  0007AA  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4993  0007AE  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4994  0007B2  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4995  0007B6  0E16               	movlw	22
  4996  0007B8  D006               	goto	u2700
  4997  0007BA                     u2705:
  4998  0007BA  0100               	movlb	0	; () banked
  4999  0007BC  90D8               	bcf	status,0,c
  5000  0007BE  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5001  0007C0  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5002  0007C2  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5003  0007C4  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5004  0007C6                     u2700:
  5005  0007C6  2EE8               	decfsz	wreg,f,c
  5006  0007C8  D7F8               	goto	u2705
  5007  0007CA  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5008  0007CE  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5009  0007D2  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5010  0007D6  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5014  0007DA  0100               	movlb	0	; () banked
  5015  0007DC  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5016  0007DE  0100               	movlb	0	; () banked
  5017  0007E0  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5018  0007E2  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5019  0007E4  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5020  0007E6  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5024  0007E8  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5025  0007EC                     l2776:
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;inc\CANlib.h: 911: }
  5029                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5030  0007EC  0E02               	movlw	2
  5031  0007EE  0100               	movlb	0	; () banked
  5032  0007F0  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5033  0007F2  A4D8               	btfss	status,2,c
  5034  0007F4  D089               	goto	l2810
  5035                           
  5036                           ; BSR set to: 0
  5037  0007F6  0EF7               	movlw	247
  5038  0007F8  0100               	movlb	0	; () banked
  5039  0007FA  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5040  0007FC  A4D8               	btfss	status,2,c
  5041  0007FE  D084               	goto	l2810
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;inc\CANlib.h: 915: {
  5045                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5046  000800  010F               	movlb	15	; () banked
  5047  000802  8709               	bsf	9,3,b	;volatile
  5048                           
  5049                           ; BSR set to: 15
  5050                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5051  000804  0100               	movlb	0	; () banked
  5052  000806  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5053  000808  0100               	movlb	0	; () banked
  5054  00080A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5055  00080C  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5056  00080E  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5057  000810  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5061  000812  C07D  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5065  000816  0E00               	movlw	0
  5066  000818  0100               	movlb	0	; () banked
  5067  00081A  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5068  00081C  0100               	movlb	0	; () banked
  5069  00081E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5070  000820  0EFF               	movlw	255
  5071  000822  0100               	movlb	0	; () banked
  5072  000824  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5073  000826  0100               	movlb	0	; () banked
  5074  000828  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5075  00082A  0E00               	movlw	0
  5076  00082C  0100               	movlb	0	; () banked
  5077  00082E  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5078  000830  0100               	movlb	0	; () banked
  5079  000832  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5080  000834  0E00               	movlw	0
  5081  000836  0100               	movlb	0	; () banked
  5082  000838  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5083  00083A  0100               	movlb	0	; () banked
  5084  00083C  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5085                           
  5086                           ; BSR set to: 0
  5087                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5088  00083E  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5089  000842  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5090  000846  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5091  00084A  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5092  00084E  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5093  000852  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5094  000856  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5095  00085A  0100               	movlb	0	; () banked
  5096  00085C  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5097  00085E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5098  000862  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5099  000866  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5100  00086A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5104  00086E  C07D  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5108  000872  0100               	movlb	0	; () banked
  5109  000874  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5110  000876  D003               	goto	l483
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5114  000878  010F               	movlb	15	; () banked
  5115  00087A  8109               	bsf	9,0,b	;volatile
  5116  00087C  D002               	goto	l484
  5117  00087E                     l483:
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;inc\CANlib.h: 927: else
  5121                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5122  00087E  010F               	movlb	15	; () banked
  5123  000880  9109               	bcf	9,0,b	;volatile
  5124  000882                     l484:
  5125                           
  5126                           ; BSR set to: 15
  5127                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5128  000882  0100               	movlb	0	; () banked
  5129  000884  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5130  000886  D003               	goto	l485
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5134  000888  010F               	movlb	15	; () banked
  5135  00088A  8309               	bsf	9,1,b	;volatile
  5136  00088C  D002               	goto	l486
  5137  00088E                     l485:
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;inc\CANlib.h: 932: else
  5141                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5142  00088E  010F               	movlb	15	; () banked
  5143  000890  9309               	bcf	9,1,b	;volatile
  5144  000892                     l486:
  5145                           
  5146                           ; BSR set to: 15
  5147                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5148  000892  0100               	movlb	0	; () banked
  5149  000894  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5150  000896  D003               	goto	l487
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5154  000898  010F               	movlb	15	; () banked
  5155  00089A  8B09               	bsf	9,5,b	;volatile
  5156  00089C  D002               	goto	l488
  5157  00089E                     l487:
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;inc\CANlib.h: 937: else
  5161                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5162  00089E  010F               	movlb	15	; () banked
  5163  0008A0  9B09               	bcf	9,5,b	;volatile
  5164  0008A2                     l488:
  5165                           
  5166                           ; BSR set to: 15
  5167                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5168  0008A2  0100               	movlb	0	; () banked
  5169  0008A4  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5170  0008A6  D003               	goto	l489
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5174  0008A8  010F               	movlb	15	; () banked
  5175  0008AA  8D09               	bsf	9,6,b	;volatile
  5176  0008AC  D002               	goto	l490
  5177  0008AE                     l489:
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;inc\CANlib.h: 942: else
  5181                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5182  0008AE  010F               	movlb	15	; () banked
  5183  0008B0  9D09               	bcf	9,6,b	;volatile
  5184  0008B2                     l490:
  5185                           
  5186                           ; BSR set to: 15
  5187                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5188  0008B2  0100               	movlb	0	; () banked
  5189  0008B4  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5190  0008B6  D003               	goto	l491
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5194  0008B8  010F               	movlb	15	; () banked
  5195  0008BA  8F09               	bsf	9,7,b	;volatile
  5196  0008BC  D002               	goto	l2804
  5197  0008BE                     l491:
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;inc\CANlib.h: 947: else
  5201                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5202  0008BE  010F               	movlb	15	; () banked
  5203  0008C0  9F09               	bcf	9,7,b	;volatile
  5204  0008C2                     l2804:
  5205                           
  5206                           ; BSR set to: 15
  5207                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5208  0008C2  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5209  0008C6  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5210  0008CA  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5211  0008CE  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5212  0008D2  0E16               	movlw	22
  5213  0008D4  D006               	goto	u2780
  5214  0008D6                     u2785:
  5215  0008D6  0100               	movlb	0	; () banked
  5216  0008D8  90D8               	bcf	status,0,c
  5217  0008DA  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5218  0008DC  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5219  0008DE  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5220  0008E0  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5221  0008E2                     u2780:
  5222  0008E2  2EE8               	decfsz	wreg,f,c
  5223  0008E4  D7F8               	goto	u2785
  5224  0008E6  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5225  0008EA  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5226  0008EE  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5227  0008F2  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5231  0008F6  0100               	movlb	0	; () banked
  5232  0008F8  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5233  0008FA  0100               	movlb	0	; () banked
  5234  0008FC  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5235  0008FE  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5236  000900  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5237  000902  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5241  000904  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5242  000908                     l2810:
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;inc\CANlib.h: 953: }
  5246                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5247  000908  0E03               	movlw	3
  5248  00090A  0100               	movlb	0	; () banked
  5249  00090C  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5250  00090E  A4D8               	btfss	status,2,c
  5251  000910  D089               	goto	l2844
  5252                           
  5253                           ; BSR set to: 0
  5254  000912  0EF7               	movlw	247
  5255  000914  0100               	movlb	0	; () banked
  5256  000916  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5257  000918  A4D8               	btfss	status,2,c
  5258  00091A  D084               	goto	l2844
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;inc\CANlib.h: 956: {
  5262                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5263  00091C  010F               	movlb	15	; () banked
  5264  00091E  870D               	bsf	13,3,b	;volatile
  5265                           
  5266                           ; BSR set to: 15
  5267                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5268  000920  0100               	movlb	0	; () banked
  5269  000922  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5270  000924  0100               	movlb	0	; () banked
  5271  000926  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5272  000928  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5273  00092A  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5274  00092C  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5278  00092E  C07D  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5282  000932  0E00               	movlw	0
  5283  000934  0100               	movlb	0	; () banked
  5284  000936  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5285  000938  0100               	movlb	0	; () banked
  5286  00093A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5287  00093C  0EFF               	movlw	255
  5288  00093E  0100               	movlb	0	; () banked
  5289  000940  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5290  000942  0100               	movlb	0	; () banked
  5291  000944  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5292  000946  0E00               	movlw	0
  5293  000948  0100               	movlb	0	; () banked
  5294  00094A  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5295  00094C  0100               	movlb	0	; () banked
  5296  00094E  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5297  000950  0E00               	movlw	0
  5298  000952  0100               	movlb	0	; () banked
  5299  000954  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5300  000956  0100               	movlb	0	; () banked
  5301  000958  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5305  00095A  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5306  00095E  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5307  000962  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5308  000966  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5309  00096A  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5310  00096E  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5311  000972  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5312  000976  0100               	movlb	0	; () banked
  5313  000978  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5314  00097A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5315  00097E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5316  000982  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5317  000986  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5321  00098A  C07D  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5325  00098E  0100               	movlb	0	; () banked
  5326  000990  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5327  000992  D003               	goto	l494
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5331  000994  010F               	movlb	15	; () banked
  5332  000996  810D               	bsf	13,0,b	;volatile
  5333  000998  D002               	goto	l495
  5334  00099A                     l494:
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;inc\CANlib.h: 968: else
  5338                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5339  00099A  010F               	movlb	15	; () banked
  5340  00099C  910D               	bcf	13,0,b	;volatile
  5341  00099E                     l495:
  5342                           
  5343                           ; BSR set to: 15
  5344                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5345  00099E  0100               	movlb	0	; () banked
  5346  0009A0  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5347  0009A2  D003               	goto	l496
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5351  0009A4  010F               	movlb	15	; () banked
  5352  0009A6  830D               	bsf	13,1,b	;volatile
  5353  0009A8  D002               	goto	l497
  5354  0009AA                     l496:
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;inc\CANlib.h: 973: else
  5358                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5359  0009AA  010F               	movlb	15	; () banked
  5360  0009AC  930D               	bcf	13,1,b	;volatile
  5361  0009AE                     l497:
  5362                           
  5363                           ; BSR set to: 15
  5364                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5365  0009AE  0100               	movlb	0	; () banked
  5366  0009B0  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5367  0009B2  D003               	goto	l498
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5371  0009B4  010F               	movlb	15	; () banked
  5372  0009B6  8B0D               	bsf	13,5,b	;volatile
  5373  0009B8  D002               	goto	l499
  5374  0009BA                     l498:
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;inc\CANlib.h: 978: else
  5378                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5379  0009BA  010F               	movlb	15	; () banked
  5380  0009BC  9B0D               	bcf	13,5,b	;volatile
  5381  0009BE                     l499:
  5382                           
  5383                           ; BSR set to: 15
  5384                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5385  0009BE  0100               	movlb	0	; () banked
  5386  0009C0  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5387  0009C2  D003               	goto	l500
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5391  0009C4  010F               	movlb	15	; () banked
  5392  0009C6  8D0D               	bsf	13,6,b	;volatile
  5393  0009C8  D002               	goto	l501
  5394  0009CA                     l500:
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;inc\CANlib.h: 983: else
  5398                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5399  0009CA  010F               	movlb	15	; () banked
  5400  0009CC  9D0D               	bcf	13,6,b	;volatile
  5401  0009CE                     l501:
  5402                           
  5403                           ; BSR set to: 15
  5404                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5405  0009CE  0100               	movlb	0	; () banked
  5406  0009D0  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5407  0009D2  D003               	goto	l502
  5408                           
  5409                           ; BSR set to: 0
  5410                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5411  0009D4  010F               	movlb	15	; () banked
  5412  0009D6  8F0D               	bsf	13,7,b	;volatile
  5413  0009D8  D002               	goto	l2838
  5414  0009DA                     l502:
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;inc\CANlib.h: 988: else
  5418                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5419  0009DA  010F               	movlb	15	; () banked
  5420  0009DC  9F0D               	bcf	13,7,b	;volatile
  5421  0009DE                     l2838:
  5422                           
  5423                           ; BSR set to: 15
  5424                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5425  0009DE  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5426  0009E2  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5427  0009E6  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5428  0009EA  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5429  0009EE  0E16               	movlw	22
  5430  0009F0  D006               	goto	u2860
  5431  0009F2                     u2865:
  5432  0009F2  0100               	movlb	0	; () banked
  5433  0009F4  90D8               	bcf	status,0,c
  5434  0009F6  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5435  0009F8  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5436  0009FA  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5437  0009FC  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5438  0009FE                     u2860:
  5439  0009FE  2EE8               	decfsz	wreg,f,c
  5440  000A00  D7F8               	goto	u2865
  5441  000A02  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5442  000A06  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5443  000A0A  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5444  000A0E  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5445                           
  5446                           ; BSR set to: 0
  5447                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5448  000A12  0100               	movlb	0	; () banked
  5449  000A14  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5450  000A16  0100               	movlb	0	; () banked
  5451  000A18  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5452  000A1A  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5453  000A1C  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5454  000A1E  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5458  000A20  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5459  000A24                     l2844:
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;inc\CANlib.h: 994: }
  5463                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5464  000A24  0E04               	movlw	4
  5465  000A26  0100               	movlb	0	; () banked
  5466  000A28  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5467  000A2A  A4D8               	btfss	status,2,c
  5468  000A2C  D089               	goto	l2878
  5469                           
  5470                           ; BSR set to: 0
  5471  000A2E  0EF7               	movlw	247
  5472  000A30  0100               	movlb	0	; () banked
  5473  000A32  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5474  000A34  A4D8               	btfss	status,2,c
  5475  000A36  D084               	goto	l2878
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;inc\CANlib.h: 997: {
  5479                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5480  000A38  010F               	movlb	15	; () banked
  5481  000A3A  8711               	bsf	17,3,b	;volatile
  5482                           
  5483                           ; BSR set to: 15
  5484                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5485  000A3C  0100               	movlb	0	; () banked
  5486  000A3E  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5487  000A40  0100               	movlb	0	; () banked
  5488  000A42  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5489  000A44  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5490  000A46  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5491  000A48  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5495  000A4A  C07D  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5499  000A4E  0E00               	movlw	0
  5500  000A50  0100               	movlb	0	; () banked
  5501  000A52  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5502  000A54  0100               	movlb	0	; () banked
  5503  000A56  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5504  000A58  0EFF               	movlw	255
  5505  000A5A  0100               	movlb	0	; () banked
  5506  000A5C  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5507  000A5E  0100               	movlb	0	; () banked
  5508  000A60  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5509  000A62  0E00               	movlw	0
  5510  000A64  0100               	movlb	0	; () banked
  5511  000A66  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5512  000A68  0100               	movlb	0	; () banked
  5513  000A6A  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5514  000A6C  0E00               	movlw	0
  5515  000A6E  0100               	movlb	0	; () banked
  5516  000A70  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5517  000A72  0100               	movlb	0	; () banked
  5518  000A74  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5522  000A76  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5523  000A7A  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5524  000A7E  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5525  000A82  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5526  000A86  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5527  000A8A  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5528  000A8E  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5529  000A92  0100               	movlb	0	; () banked
  5530  000A94  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5531  000A96  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5532  000A9A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5533  000A9E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5534  000AA2  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5538  000AA6  C07D  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5542  000AAA  0100               	movlb	0	; () banked
  5543  000AAC  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5544  000AAE  D003               	goto	l505
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5548  000AB0  010F               	movlb	15	; () banked
  5549  000AB2  8111               	bsf	17,0,b	;volatile
  5550  000AB4  D002               	goto	l506
  5551  000AB6                     l505:
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;inc\CANlib.h: 1009: else
  5555                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5556  000AB6  010F               	movlb	15	; () banked
  5557  000AB8  9111               	bcf	17,0,b	;volatile
  5558  000ABA                     l506:
  5559                           
  5560                           ; BSR set to: 15
  5561                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5562  000ABA  0100               	movlb	0	; () banked
  5563  000ABC  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5564  000ABE  D003               	goto	l507
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5568  000AC0  010F               	movlb	15	; () banked
  5569  000AC2  8311               	bsf	17,1,b	;volatile
  5570  000AC4  D002               	goto	l508
  5571  000AC6                     l507:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;inc\CANlib.h: 1014: else
  5575                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5576  000AC6  010F               	movlb	15	; () banked
  5577  000AC8  9311               	bcf	17,1,b	;volatile
  5578  000ACA                     l508:
  5579                           
  5580                           ; BSR set to: 15
  5581                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5582  000ACA  0100               	movlb	0	; () banked
  5583  000ACC  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5584  000ACE  D003               	goto	l509
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5588  000AD0  010F               	movlb	15	; () banked
  5589  000AD2  8B11               	bsf	17,5,b	;volatile
  5590  000AD4  D002               	goto	l510
  5591  000AD6                     l509:
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;inc\CANlib.h: 1019: else
  5595                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5596  000AD6  010F               	movlb	15	; () banked
  5597  000AD8  9B11               	bcf	17,5,b	;volatile
  5598  000ADA                     l510:
  5599                           
  5600                           ; BSR set to: 15
  5601                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5602  000ADA  0100               	movlb	0	; () banked
  5603  000ADC  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5604  000ADE  D003               	goto	l511
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5608  000AE0  010F               	movlb	15	; () banked
  5609  000AE2  8D11               	bsf	17,6,b	;volatile
  5610  000AE4  D002               	goto	l512
  5611  000AE6                     l511:
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;inc\CANlib.h: 1024: else
  5615                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5616  000AE6  010F               	movlb	15	; () banked
  5617  000AE8  9D11               	bcf	17,6,b	;volatile
  5618  000AEA                     l512:
  5619                           
  5620                           ; BSR set to: 15
  5621                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5622  000AEA  0100               	movlb	0	; () banked
  5623  000AEC  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5624  000AEE  D003               	goto	l513
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5628  000AF0  010F               	movlb	15	; () banked
  5629  000AF2  8F11               	bsf	17,7,b	;volatile
  5630  000AF4  D002               	goto	l2872
  5631  000AF6                     l513:
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;inc\CANlib.h: 1029: else
  5635                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5636  000AF6  010F               	movlb	15	; () banked
  5637  000AF8  9F11               	bcf	17,7,b	;volatile
  5638  000AFA                     l2872:
  5639                           
  5640                           ; BSR set to: 15
  5641                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5642  000AFA  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5643  000AFE  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5644  000B02  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5645  000B06  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5646  000B0A  0E16               	movlw	22
  5647  000B0C  D006               	goto	u2940
  5648  000B0E                     u2945:
  5649  000B0E  0100               	movlb	0	; () banked
  5650  000B10  90D8               	bcf	status,0,c
  5651  000B12  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5652  000B14  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5653  000B16  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5654  000B18  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5655  000B1A                     u2940:
  5656  000B1A  2EE8               	decfsz	wreg,f,c
  5657  000B1C  D7F8               	goto	u2945
  5658  000B1E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5659  000B22  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5660  000B26  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5661  000B2A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5665  000B2E  0100               	movlb	0	; () banked
  5666  000B30  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5667  000B32  0100               	movlb	0	; () banked
  5668  000B34  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5669  000B36  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5670  000B38  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5671  000B3A  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5675  000B3C  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5676  000B40                     l2878:
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;inc\CANlib.h: 1035: }
  5680                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5681  000B40  0E05               	movlw	5
  5682  000B42  0100               	movlb	0	; () banked
  5683  000B44  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5684  000B46  A4D8               	btfss	status,2,c
  5685  000B48  0012               	return	
  5686                           
  5687                           ; BSR set to: 0
  5688  000B4A  0EF7               	movlw	247
  5689  000B4C  0100               	movlb	0	; () banked
  5690  000B4E  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5691  000B50  A4D8               	btfss	status,2,c
  5692  000B52  0012               	return	
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;inc\CANlib.h: 1038: {
  5696                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5697  000B54  010F               	movlb	15	; () banked
  5698  000B56  8715               	bsf	21,3,b	;volatile
  5699                           
  5700                           ; BSR set to: 15
  5701                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5702  000B58  0100               	movlb	0	; () banked
  5703  000B5A  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5704  000B5C  0100               	movlb	0	; () banked
  5705  000B5E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5706  000B60  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5707  000B62  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5708  000B64  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5712  000B66  C07D  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5716  000B6A  0E00               	movlw	0
  5717  000B6C  0100               	movlb	0	; () banked
  5718  000B6E  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5719  000B70  0100               	movlb	0	; () banked
  5720  000B72  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5721  000B74  0EFF               	movlw	255
  5722  000B76  0100               	movlb	0	; () banked
  5723  000B78  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5724  000B7A  0100               	movlb	0	; () banked
  5725  000B7C  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5726  000B7E  0E00               	movlw	0
  5727  000B80  0100               	movlb	0	; () banked
  5728  000B82  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5729  000B84  0100               	movlb	0	; () banked
  5730  000B86  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5731  000B88  0E00               	movlw	0
  5732  000B8A  0100               	movlb	0	; () banked
  5733  000B8C  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5734  000B8E  0100               	movlb	0	; () banked
  5735  000B90  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5739  000B92  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5740  000B96  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5741  000B9A  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5742  000B9E  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5743  000BA2  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5744  000BA6  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5745  000BAA  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5746  000BAE  0100               	movlb	0	; () banked
  5747  000BB0  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5748  000BB2  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5749  000BB6  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5750  000BBA  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5751  000BBE  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5755  000BC2  C07D  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5759  000BC6  0100               	movlb	0	; () banked
  5760  000BC8  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5761  000BCA  D003               	goto	l516
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5765  000BCC  010F               	movlb	15	; () banked
  5766  000BCE  8115               	bsf	21,0,b	;volatile
  5767  000BD0  D002               	goto	l517
  5768  000BD2                     l516:
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;inc\CANlib.h: 1050: else
  5772                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5773  000BD2  010F               	movlb	15	; () banked
  5774  000BD4  9115               	bcf	21,0,b	;volatile
  5775  000BD6                     l517:
  5776                           
  5777                           ; BSR set to: 15
  5778                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5779  000BD6  0100               	movlb	0	; () banked
  5780  000BD8  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5781  000BDA  D003               	goto	l518
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5785  000BDC  010F               	movlb	15	; () banked
  5786  000BDE  8315               	bsf	21,1,b	;volatile
  5787  000BE0  D002               	goto	l519
  5788  000BE2                     l518:
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;inc\CANlib.h: 1055: else
  5792                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5793  000BE2  010F               	movlb	15	; () banked
  5794  000BE4  9315               	bcf	21,1,b	;volatile
  5795  000BE6                     l519:
  5796                           
  5797                           ; BSR set to: 15
  5798                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5799  000BE6  0100               	movlb	0	; () banked
  5800  000BE8  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5801  000BEA  D003               	goto	l520
  5802                           
  5803                           ; BSR set to: 0
  5804                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5805  000BEC  010F               	movlb	15	; () banked
  5806  000BEE  8B15               	bsf	21,5,b	;volatile
  5807  000BF0  D002               	goto	l521
  5808  000BF2                     l520:
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;inc\CANlib.h: 1060: else
  5812                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5813  000BF2  010F               	movlb	15	; () banked
  5814  000BF4  9B15               	bcf	21,5,b	;volatile
  5815  000BF6                     l521:
  5816                           
  5817                           ; BSR set to: 15
  5818                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5819  000BF6  0100               	movlb	0	; () banked
  5820  000BF8  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5821  000BFA  D003               	goto	l522
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5825  000BFC  010F               	movlb	15	; () banked
  5826  000BFE  8D15               	bsf	21,6,b	;volatile
  5827  000C00  D002               	goto	l523
  5828  000C02                     l522:
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;inc\CANlib.h: 1065: else
  5832                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5833  000C02  010F               	movlb	15	; () banked
  5834  000C04  9D15               	bcf	21,6,b	;volatile
  5835  000C06                     l523:
  5836                           
  5837                           ; BSR set to: 15
  5838                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5839  000C06  0100               	movlb	0	; () banked
  5840  000C08  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5841  000C0A  D003               	goto	l524
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5845  000C0C  010F               	movlb	15	; () banked
  5846  000C0E  8F15               	bsf	21,7,b	;volatile
  5847  000C10  D002               	goto	l2906
  5848  000C12                     l524:
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;inc\CANlib.h: 1070: else
  5852                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5853  000C12  010F               	movlb	15	; () banked
  5854  000C14  9F15               	bcf	21,7,b	;volatile
  5855  000C16                     l2906:
  5856                           
  5857                           ; BSR set to: 15
  5858                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5859  000C16  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5860  000C1A  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5861  000C1E  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5862  000C22  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5863  000C26  0E16               	movlw	22
  5864  000C28  D006               	goto	u3020
  5865  000C2A                     u3025:
  5866  000C2A  0100               	movlb	0	; () banked
  5867  000C2C  90D8               	bcf	status,0,c
  5868  000C2E  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5869  000C30  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5870  000C32  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5871  000C34  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5872  000C36                     u3020:
  5873  000C36  2EE8               	decfsz	wreg,f,c
  5874  000C38  D7F8               	goto	u3025
  5875  000C3A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5876  000C3E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5877  000C42  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5878  000C46  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5882  000C4A  0100               	movlb	0	; () banked
  5883  000C4C  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5884  000C4E  0100               	movlb	0	; () banked
  5885  000C50  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5886  000C52  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5887  000C54  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5888  000C56  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5892  000C58  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5893  000C5C  0012               	return	
  5894  000C5E                     __end_of_CANSetFilter:
  5895                           	opt stack 0
  5896                           tblptru	equ	0xFF8
  5897                           tblptrh	equ	0xFF7
  5898                           tblptrl	equ	0xFF6
  5899                           tablat	equ	0xFF5
  5900                           intcon	equ	0xFF2
  5901                           intcon2	equ	0xFF1
  5902                           postinc0	equ	0xFEE
  5903                           wreg	equ	0xFE8
  5904                           postdec1	equ	0xFE5
  5905                           fsr1l	equ	0xFE1
  5906                           indf2	equ	0xFDF
  5907                           fsr2h	equ	0xFDA
  5908                           fsr2l	equ	0xFD9
  5909                           status	equ	0xFD8
  5910                           
  5911 ;; *************** function _CANOperationMode *****************
  5912 ;; Defined at:
  5913 ;;		line 206 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  mode            1    wreg     enum E16838
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;  mode            1   19[BANK0 ] enum E16838
  5918 ;; Return value:  Size  Location     Type
  5919 ;;		None               void
  5920 ;; Registers used:
  5921 ;;		wreg, status,2, status,0
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5927 ;;      Params:         0       0       0       0
  5928 ;;      Locals:         0       1       0       0
  5929 ;;      Temps:          0       0       0       0
  5930 ;;      Totals:         0       1       0       0
  5931 ;;Total ram usage:        1 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    4
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_CANInitialize
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           	psect	text9
  5942  0024E2                     __ptext9:
  5943                           	opt stack 0
  5944  0024E2                     _CANOperationMode:
  5945                           	opt stack 24
  5946                           
  5947                           ; BSR set to: 0
  5948                           ;incstack = 0
  5949                           ;CANOperationMode@mode stored from wreg
  5950  0024E2  0100               	movlb	0	; () banked
  5951  0024E4  6F73               	movwf	CANOperationMode@mode& (0+255),b
  5952                           
  5953                           ;inc\CANlib.h: 208: CANCON = mode;
  5954  0024E6  C073  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5955  0024EA                     l2502:
  5956  0024EA  506E               	movf	3950,w,c	;volatile
  5957  0024EC  0BE0               	andlw	224
  5958  0024EE  0100               	movlb	0	; () banked
  5959  0024F0  1973               	xorwf	CANOperationMode@mode& (0+255),w,b
  5960  0024F2  B4D8               	btfsc	status,2,c
  5961  0024F4  0012               	return	
  5962  0024F6  D7F9               	goto	l2502
  5963  0024F8                     __end_of_CANOperationMode:
  5964                           	opt stack 0
  5965                           tblptru	equ	0xFF8
  5966                           tblptrh	equ	0xFF7
  5967                           tblptrl	equ	0xFF6
  5968                           tablat	equ	0xFF5
  5969                           intcon	equ	0xFF2
  5970                           intcon2	equ	0xFF1
  5971                           postinc0	equ	0xFEE
  5972                           wreg	equ	0xFE8
  5973                           postdec1	equ	0xFE5
  5974                           fsr1l	equ	0xFE1
  5975                           indf2	equ	0xFDF
  5976                           fsr2h	equ	0xFDA
  5977                           fsr2l	equ	0xFD9
  5978                           status	equ	0xFD8
  5979                           
  5980 ;; *************** function _calibrazione *****************
  5981 ;; Defined at:
  5982 ;;		line 179 in file "newmain.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;		None
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;		None
  5987 ;; Return value:  Size  Location     Type
  5988 ;;		None               void
  5989 ;; Registers used:
  5990 ;;		wreg, status,2, status,0, cstack
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5996 ;;      Params:         0       0       0       0
  5997 ;;      Locals:         0       0       0       0
  5998 ;;      Temps:          0       0       0       0
  5999 ;;      Totals:         0       0       0       0
  6000 ;;Total ram usage:        0 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    5
  6003 ;; This function calls:
  6004 ;;		_BusyADC
  6005 ;;		_ConvertADC
  6006 ;;		_ReadADC
  6007 ;;		___lwdiv
  6008 ;; This function is called by:
  6009 ;;		_main
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           	psect	text10
  6014  002414                     __ptext10:
  6015                           	opt stack 0
  6016  002414                     _calibrazione:
  6017                           	opt stack 25
  6018                           
  6019                           ;newmain.c: 180: ConvertADC();
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;incstack = 0
  6023  002414  ECB8  F012         	call	_ConvertADC	;wreg free
  6024  002418                     l3460:
  6025  002418  ECA2  F012         	call	_BusyADC	;wreg free
  6026  00241C  0900               	iorlw	0
  6027  00241E  A4D8               	btfss	status,2,c
  6028  002420  D7FB               	goto	l3460
  6029                           
  6030                           ;newmain.c: 182: ADCResult = ReadADC();
  6031  002422  EC87  F012         	call	_ReadADC	;wreg free
  6032  002426  C073  F0B1         	movff	?_ReadADC,_ADCResult
  6033  00242A  C074  F0B2         	movff	?_ReadADC+1,_ADCResult+1
  6034                           
  6035                           ;newmain.c: 183: calibration = (ADCResult - 511) / 45;
  6036  00242E  0E01               	movlw	1
  6037  002430  0100               	movlb	0	; () banked
  6038  002432  25B1               	addwf	_ADCResult& (0+255),w,b
  6039  002434  0100               	movlb	0	; () banked
  6040  002436  6F73               	movwf	___lwdiv@dividend& (0+255),b
  6041  002438  0EFE               	movlw	254
  6042  00243A  0100               	movlb	0	; () banked
  6043  00243C  21B2               	addwfc	(_ADCResult+1)& (0+255),w,b
  6044  00243E  0100               	movlb	0	; () banked
  6045  002440  6F74               	movwf	(___lwdiv@dividend+1)& (0+255),b
  6046  002442  0E00               	movlw	0
  6047  002444  0100               	movlb	0	; () banked
  6048  002446  6F76               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6049  002448  0E2D               	movlw	45
  6050  00244A  6F75               	movwf	___lwdiv@divisor& (0+255),b
  6051  00244C  EC46  F011         	call	___lwdiv	;wreg free
  6052  002450  C073  F00D         	movff	?___lwdiv,_calibration
  6053  002454  C074  F00E         	movff	?___lwdiv+1,_calibration+1
  6054  002458  0012               	return		;funcret
  6055  00245A                     __end_of_calibrazione:
  6056                           	opt stack 0
  6057                           tblptru	equ	0xFF8
  6058                           tblptrh	equ	0xFF7
  6059                           tblptrl	equ	0xFF6
  6060                           tablat	equ	0xFF5
  6061                           intcon	equ	0xFF2
  6062                           intcon2	equ	0xFF1
  6063                           postinc0	equ	0xFEE
  6064                           wreg	equ	0xFE8
  6065                           postdec1	equ	0xFE5
  6066                           fsr1l	equ	0xFE1
  6067                           indf2	equ	0xFDF
  6068                           fsr2h	equ	0xFDA
  6069                           fsr2l	equ	0xFD9
  6070                           status	equ	0xFD8
  6071                           
  6072 ;; *************** function ___lwdiv *****************
  6073 ;; Defined at:
  6074 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  dividend        2   19[BANK0 ] unsigned int 
  6077 ;;  divisor         2   21[BANK0 ] unsigned int 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  quotient        2   23[BANK0 ] unsigned int 
  6080 ;;  counter         1   25[BANK0 ] unsigned char 
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  2   19[BANK0 ] unsigned int 
  6083 ;; Registers used:
  6084 ;;		wreg, status,2, status,0
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6090 ;;      Params:         0       4       0       0
  6091 ;;      Locals:         0       3       0       0
  6092 ;;      Temps:          0       0       0       0
  6093 ;;      Totals:         0       7       0       0
  6094 ;;Total ram usage:        7 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; Hardware stack levels required when called:    4
  6097 ;; This function calls:
  6098 ;;		Nothing
  6099 ;; This function is called by:
  6100 ;;		_calibrazione
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text11
  6105  00228C                     __ptext11:
  6106                           	opt stack 0
  6107  00228C                     ___lwdiv:
  6108                           	opt stack 25
  6109                           
  6110                           ;incstack = 0
  6111  00228C  0E00               	movlw	0
  6112  00228E  0100               	movlb	0	; () banked
  6113  002290  6F78               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6114  002292  0E00               	movlw	0
  6115  002294  6F77               	movwf	___lwdiv@quotient& (0+255),b
  6116                           
  6117                           ; BSR set to: 0
  6118  002296  0100               	movlb	0	; () banked
  6119  002298  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6120  00229A  0100               	movlb	0	; () banked
  6121  00229C  1176               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6122  00229E  B4D8               	btfsc	status,2,c
  6123  0022A0  D02C               	goto	l1109
  6124                           
  6125                           ; BSR set to: 0
  6126  0022A2  0E01               	movlw	1
  6127  0022A4  0100               	movlb	0	; () banked
  6128  0022A6  6F79               	movwf	___lwdiv@counter& (0+255),b
  6129  0022A8  D006               	goto	l3236
  6130  0022AA                     l3234:
  6131                           
  6132                           ; BSR set to: 0
  6133  0022AA  0100               	movlb	0	; () banked
  6134  0022AC  90D8               	bcf	status,0,c
  6135  0022AE  3775               	rlcf	___lwdiv@divisor& (0+255),f,b
  6136  0022B0  3776               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6137  0022B2  0100               	movlb	0	; () banked
  6138  0022B4  2B79               	incf	___lwdiv@counter& (0+255),f,b
  6139  0022B6                     l3236:
  6140                           
  6141                           ; BSR set to: 0
  6142  0022B6  0100               	movlb	0	; () banked
  6143  0022B8  AF76               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6144  0022BA  D7F7               	goto	l3234
  6145  0022BC                     l3238:
  6146                           
  6147                           ; BSR set to: 0
  6148  0022BC  0100               	movlb	0	; () banked
  6149  0022BE  90D8               	bcf	status,0,c
  6150  0022C0  3777               	rlcf	___lwdiv@quotient& (0+255),f,b
  6151  0022C2  3778               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6152                           
  6153                           ; BSR set to: 0
  6154  0022C4  0100               	movlb	0	; () banked
  6155  0022C6  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6156  0022C8  0100               	movlb	0	; () banked
  6157  0022CA  5D73               	subwf	___lwdiv@dividend& (0+255),w,b
  6158  0022CC  0100               	movlb	0	; () banked
  6159  0022CE  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6160  0022D0  0100               	movlb	0	; () banked
  6161  0022D2  5974               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6162  0022D4  A0D8               	btfss	status,0,c
  6163  0022D6  D00A               	goto	l3246
  6164                           
  6165                           ; BSR set to: 0
  6166  0022D8  0100               	movlb	0	; () banked
  6167  0022DA  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6168  0022DC  0100               	movlb	0	; () banked
  6169  0022DE  5F73               	subwf	___lwdiv@dividend& (0+255),f,b
  6170  0022E0  0100               	movlb	0	; () banked
  6171  0022E2  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6172  0022E4  0100               	movlb	0	; () banked
  6173  0022E6  5B74               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6174                           
  6175                           ; BSR set to: 0
  6176  0022E8  0100               	movlb	0	; () banked
  6177  0022EA  8177               	bsf	___lwdiv@quotient& (0+255),0,b
  6178  0022EC                     l3246:
  6179                           
  6180                           ; BSR set to: 0
  6181  0022EC  0100               	movlb	0	; () banked
  6182  0022EE  90D8               	bcf	status,0,c
  6183  0022F0  3376               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6184  0022F2  3375               	rrcf	___lwdiv@divisor& (0+255),f,b
  6185                           
  6186                           ; BSR set to: 0
  6187  0022F4  0100               	movlb	0	; () banked
  6188  0022F6  2F79               	decfsz	___lwdiv@counter& (0+255),f,b
  6189  0022F8  D7E1               	goto	l3238
  6190  0022FA                     l1109:
  6191                           
  6192                           ; BSR set to: 0
  6193  0022FA  C077  F073         	movff	___lwdiv@quotient,?___lwdiv
  6194  0022FE  C078  F074         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6195                           
  6196                           ; BSR set to: 0
  6197  002302  0012               	return		;funcret
  6198  002304                     __end_of___lwdiv:
  6199                           	opt stack 0
  6200                           tblptru	equ	0xFF8
  6201                           tblptrh	equ	0xFF7
  6202                           tblptrl	equ	0xFF6
  6203                           tablat	equ	0xFF5
  6204                           intcon	equ	0xFF2
  6205                           intcon2	equ	0xFF1
  6206                           postinc0	equ	0xFEE
  6207                           wreg	equ	0xFE8
  6208                           postdec1	equ	0xFE5
  6209                           fsr1l	equ	0xFE1
  6210                           indf2	equ	0xFDF
  6211                           fsr2h	equ	0xFDA
  6212                           fsr2l	equ	0xFD9
  6213                           status	equ	0xFD8
  6214                           
  6215 ;; *************** function _ReadADC *****************
  6216 ;; Defined at:
  6217 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcread.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;		None
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;		None
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  2   19[BANK0 ] int 
  6224 ;; Registers used:
  6225 ;;		wreg, status,2
  6226 ;; Tracked objects:
  6227 ;;		On entry : 0/0
  6228 ;;		On exit  : 0/0
  6229 ;;		Unchanged: 0/0
  6230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6231 ;;      Params:         0       2       0       0
  6232 ;;      Locals:         0       0       0       0
  6233 ;;      Temps:          0       2       0       0
  6234 ;;      Totals:         0       4       0       0
  6235 ;;Total ram usage:        4 bytes
  6236 ;; Hardware stack levels used:    1
  6237 ;; Hardware stack levels required when called:    4
  6238 ;; This function calls:
  6239 ;;		Nothing
  6240 ;; This function is called by:
  6241 ;;		_calibrazione
  6242 ;; This function uses a non-reentrant model
  6243 ;;
  6244                           
  6245                           	psect	text12
  6246  00250E                     __ptext12:
  6247                           	opt stack 0
  6248  00250E                     _ReadADC:
  6249                           	opt stack 25
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;incstack = 0
  6253  00250E  50C4               	movf	4036,w,c	;volatile
  6254  002510  0100               	movlb	0	; () banked
  6255  002512  6F75               	movwf	??_ReadADC& (0+255),b
  6256  002514  50C3               	movf	4035,w,c	;volatile
  6257  002516  0100               	movlb	0	; () banked
  6258  002518  6F73               	movwf	?_ReadADC& (0+255),b
  6259  00251A  C075  F074         	movff	??_ReadADC,?_ReadADC+1
  6260  00251E  0012               	return	
  6261  002520                     __end_of_ReadADC:
  6262                           	opt stack 0
  6263                           tblptru	equ	0xFF8
  6264                           tblptrh	equ	0xFF7
  6265                           tblptrl	equ	0xFF6
  6266                           tablat	equ	0xFF5
  6267                           intcon	equ	0xFF2
  6268                           intcon2	equ	0xFF1
  6269                           postinc0	equ	0xFEE
  6270                           wreg	equ	0xFE8
  6271                           postdec1	equ	0xFE5
  6272                           fsr1l	equ	0xFE1
  6273                           indf2	equ	0xFDF
  6274                           fsr2h	equ	0xFDA
  6275                           fsr2l	equ	0xFD9
  6276                           status	equ	0xFD8
  6277                           
  6278 ;; *************** function _ConvertADC *****************
  6279 ;; Defined at:
  6280 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcconv.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;		None
  6283 ;; Auto vars:     Size  Location     Type
  6284 ;;		None
  6285 ;; Return value:  Size  Location     Type
  6286 ;;		None               void
  6287 ;; Registers used:
  6288 ;;		None
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/0
  6291 ;;		On exit  : 0/0
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6294 ;;      Params:         0       0       0       0
  6295 ;;      Locals:         0       0       0       0
  6296 ;;      Temps:          0       0       0       0
  6297 ;;      Totals:         0       0       0       0
  6298 ;;Total ram usage:        0 bytes
  6299 ;; Hardware stack levels used:    1
  6300 ;; Hardware stack levels required when called:    4
  6301 ;; This function calls:
  6302 ;;		Nothing
  6303 ;; This function is called by:
  6304 ;;		_calibrazione
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text13
  6309  002570                     __ptext13:
  6310                           	opt stack 0
  6311  002570                     _ConvertADC:
  6312                           	opt stack 25
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;incstack = 0
  6316  002570  82C2               	bsf	4034,1,c	;volatile
  6317  002572  0012               	return		;funcret
  6318  002574                     __end_of_ConvertADC:
  6319                           	opt stack 0
  6320                           tblptru	equ	0xFF8
  6321                           tblptrh	equ	0xFF7
  6322                           tblptrl	equ	0xFF6
  6323                           tablat	equ	0xFF5
  6324                           intcon	equ	0xFF2
  6325                           intcon2	equ	0xFF1
  6326                           postinc0	equ	0xFEE
  6327                           wreg	equ	0xFE8
  6328                           postdec1	equ	0xFE5
  6329                           fsr1l	equ	0xFE1
  6330                           indf2	equ	0xFDF
  6331                           fsr2h	equ	0xFDA
  6332                           fsr2l	equ	0xFD9
  6333                           status	equ	0xFD8
  6334                           
  6335 ;; *************** function _BusyADC *****************
  6336 ;; Defined at:
  6337 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcbusy.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;		None
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      unsigned char 
  6344 ;; Registers used:
  6345 ;;		wreg
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6351 ;;      Params:         0       0       0       0
  6352 ;;      Locals:         0       0       0       0
  6353 ;;      Temps:          0       0       0       0
  6354 ;;      Totals:         0       0       0       0
  6355 ;;Total ram usage:        0 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    4
  6358 ;; This function calls:
  6359 ;;		Nothing
  6360 ;; This function is called by:
  6361 ;;		_calibrazione
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text14
  6366  002544                     __ptext14:
  6367                           	opt stack 0
  6368  002544                     _BusyADC:
  6369                           	opt stack 25
  6370                           
  6371                           ;incstack = 0
  6372  002544  A2C2               	btfss	4034,1,c	;volatile
  6373  002546  D002               	goto	u3490
  6374  002548  0E01               	movlw	1
  6375  00254A  0012               	return	
  6376  00254C                     u3490:
  6377  00254C  0E00               	movlw	0
  6378  00254E  0012               	return	
  6379  002550                     __end_of_BusyADC:
  6380                           	opt stack 0
  6381                           tblptru	equ	0xFF8
  6382                           tblptrh	equ	0xFF7
  6383                           tblptrl	equ	0xFF6
  6384                           tablat	equ	0xFF5
  6385                           intcon	equ	0xFF2
  6386                           intcon2	equ	0xFF1
  6387                           postinc0	equ	0xFEE
  6388                           wreg	equ	0xFE8
  6389                           postdec1	equ	0xFE5
  6390                           fsr1l	equ	0xFE1
  6391                           indf2	equ	0xFDF
  6392                           fsr2h	equ	0xFDA
  6393                           fsr2l	equ	0xFD9
  6394                           status	equ	0xFD8
  6395                           
  6396 ;; *************** function ___lmul *****************
  6397 ;; Defined at:
  6398 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  multiplier      4   19[BANK0 ] unsigned long 
  6401 ;;  multiplicand    4   23[BANK0 ] unsigned long 
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;  product         4   27[BANK0 ] unsigned long 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  4   19[BANK0 ] unsigned long 
  6406 ;; Registers used:
  6407 ;;		wreg, status,2, status,0
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6413 ;;      Params:         0       8       0       0
  6414 ;;      Locals:         0       4       0       0
  6415 ;;      Temps:          0       0       0       0
  6416 ;;      Totals:         0      12       0       0
  6417 ;;Total ram usage:       12 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    4
  6420 ;; This function calls:
  6421 ;;		Nothing
  6422 ;; This function is called by:
  6423 ;;		_main
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	text15
  6428  002304                     __ptext15:
  6429                           	opt stack 0
  6430  002304                     ___lmul:
  6431                           	opt stack 26
  6432                           
  6433                           ;incstack = 0
  6434  002304  0E00               	movlw	0
  6435  002306  0100               	movlb	0	; () banked
  6436  002308  6F7B               	movwf	___lmul@product& (0+255),b
  6437  00230A  0E00               	movlw	0
  6438  00230C  6F7C               	movwf	(___lmul@product+1)& (0+255),b
  6439  00230E  0E00               	movlw	0
  6440  002310  6F7D               	movwf	(___lmul@product+2)& (0+255),b
  6441  002312  0E00               	movlw	0
  6442  002314  6F7E               	movwf	(___lmul@product+3)& (0+255),b
  6443  002316                     l3482:
  6444                           
  6445                           ; BSR set to: 0
  6446  002316  0100               	movlb	0	; () banked
  6447  002318  A173               	btfss	___lmul@multiplier& (0+255),0,b
  6448  00231A  D010               	goto	l3486
  6449                           
  6450                           ; BSR set to: 0
  6451  00231C  0100               	movlb	0	; () banked
  6452  00231E  5177               	movf	___lmul@multiplicand& (0+255),w,b
  6453  002320  0100               	movlb	0	; () banked
  6454  002322  277B               	addwf	___lmul@product& (0+255),f,b
  6455  002324  0100               	movlb	0	; () banked
  6456  002326  5178               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6457  002328  0100               	movlb	0	; () banked
  6458  00232A  237C               	addwfc	(___lmul@product+1)& (0+255),f,b
  6459  00232C  0100               	movlb	0	; () banked
  6460  00232E  5179               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6461  002330  0100               	movlb	0	; () banked
  6462  002332  237D               	addwfc	(___lmul@product+2)& (0+255),f,b
  6463  002334  0100               	movlb	0	; () banked
  6464  002336  517A               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6465  002338  0100               	movlb	0	; () banked
  6466  00233A  237E               	addwfc	(___lmul@product+3)& (0+255),f,b
  6467  00233C                     l3486:
  6468                           
  6469                           ; BSR set to: 0
  6470  00233C  0100               	movlb	0	; () banked
  6471  00233E  90D8               	bcf	status,0,c
  6472  002340  3777               	rlcf	___lmul@multiplicand& (0+255),f,b
  6473  002342  3778               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6474  002344  3779               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6475  002346  377A               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6476                           
  6477                           ; BSR set to: 0
  6478  002348  0100               	movlb	0	; () banked
  6479  00234A  90D8               	bcf	status,0,c
  6480  00234C  3376               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6481  00234E  3375               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6482  002350  3374               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6483  002352  3373               	rrcf	___lmul@multiplier& (0+255),f,b
  6484  002354  0100               	movlb	0	; () banked
  6485  002356  5173               	movf	___lmul@multiplier& (0+255),w,b
  6486  002358  0100               	movlb	0	; () banked
  6487  00235A  1174               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6488  00235C  0100               	movlb	0	; () banked
  6489  00235E  1175               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6490  002360  0100               	movlb	0	; () banked
  6491  002362  1176               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6492  002364  A4D8               	btfss	status,2,c
  6493  002366  D7D7               	goto	l3482
  6494                           
  6495                           ; BSR set to: 0
  6496  002368  C07B  F073         	movff	___lmul@product,?___lmul
  6497  00236C  C07C  F074         	movff	___lmul@product+1,?___lmul+1
  6498  002370  C07D  F075         	movff	___lmul@product+2,?___lmul+2
  6499  002374  C07E  F076         	movff	___lmul@product+3,?___lmul+3
  6500                           
  6501                           ; BSR set to: 0
  6502  002378  0012               	return		;funcret
  6503  00237A                     __end_of___lmul:
  6504                           	opt stack 0
  6505                           tblptru	equ	0xFF8
  6506                           tblptrh	equ	0xFF7
  6507                           tblptrl	equ	0xFF6
  6508                           tablat	equ	0xFF5
  6509                           intcon	equ	0xFF2
  6510                           intcon2	equ	0xFF1
  6511                           postinc0	equ	0xFEE
  6512                           wreg	equ	0xFE8
  6513                           postdec1	equ	0xFE5
  6514                           fsr1l	equ	0xFE1
  6515                           indf2	equ	0xFDF
  6516                           fsr2h	equ	0xFDA
  6517                           fsr2l	equ	0xFD9
  6518                           status	equ	0xFD8
  6519                           
  6520 ;; *************** function ___lldiv *****************
  6521 ;; Defined at:
  6522 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;  dividend        4   31[BANK0 ] unsigned long 
  6525 ;;  divisor         4   35[BANK0 ] unsigned long 
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;  quotient        4   39[BANK0 ] unsigned long 
  6528 ;;  counter         1   43[BANK0 ] unsigned char 
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  4   31[BANK0 ] unsigned long 
  6531 ;; Registers used:
  6532 ;;		wreg, status,2, status,0
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6538 ;;      Params:         0       8       0       0
  6539 ;;      Locals:         0       5       0       0
  6540 ;;      Temps:          0       0       0       0
  6541 ;;      Totals:         0      13       0       0
  6542 ;;Total ram usage:       13 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; Hardware stack levels required when called:    4
  6545 ;; This function calls:
  6546 ;;		Nothing
  6547 ;; This function is called by:
  6548 ;;		_main
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text16
  6553  002016                     __ptext16:
  6554                           	opt stack 0
  6555  002016                     ___lldiv:
  6556                           	opt stack 26
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;incstack = 0
  6560  002016  0E00               	movlw	0
  6561  002018  0100               	movlb	0	; () banked
  6562  00201A  6F87               	movwf	___lldiv@quotient& (0+255),b
  6563  00201C  0E00               	movlw	0
  6564  00201E  6F88               	movwf	(___lldiv@quotient+1)& (0+255),b
  6565  002020  0E00               	movlw	0
  6566  002022  6F89               	movwf	(___lldiv@quotient+2)& (0+255),b
  6567  002024  0E00               	movlw	0
  6568  002026  6F8A               	movwf	(___lldiv@quotient+3)& (0+255),b
  6569                           
  6570                           ; BSR set to: 0
  6571  002028  0100               	movlb	0	; () banked
  6572  00202A  5183               	movf	___lldiv@divisor& (0+255),w,b
  6573  00202C  0100               	movlb	0	; () banked
  6574  00202E  1184               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6575  002030  0100               	movlb	0	; () banked
  6576  002032  1185               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6577  002034  0100               	movlb	0	; () banked
  6578  002036  1186               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6579  002038  B4D8               	btfsc	status,2,c
  6580  00203A  D042               	goto	l1056
  6581                           
  6582                           ; BSR set to: 0
  6583  00203C  0E01               	movlw	1
  6584  00203E  0100               	movlb	0	; () banked
  6585  002040  6F8B               	movwf	___lldiv@counter& (0+255),b
  6586  002042  D008               	goto	l3498
  6587  002044                     l3496:
  6588                           
  6589                           ; BSR set to: 0
  6590  002044  0100               	movlb	0	; () banked
  6591  002046  90D8               	bcf	status,0,c
  6592  002048  3783               	rlcf	___lldiv@divisor& (0+255),f,b
  6593  00204A  3784               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6594  00204C  3785               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6595  00204E  3786               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6596  002050  0100               	movlb	0	; () banked
  6597  002052  2B8B               	incf	___lldiv@counter& (0+255),f,b
  6598  002054                     l3498:
  6599                           
  6600                           ; BSR set to: 0
  6601  002054  0100               	movlb	0	; () banked
  6602  002056  AF86               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6603  002058  D7F5               	goto	l3496
  6604  00205A                     l3500:
  6605                           
  6606                           ; BSR set to: 0
  6607  00205A  0100               	movlb	0	; () banked
  6608  00205C  90D8               	bcf	status,0,c
  6609  00205E  3787               	rlcf	___lldiv@quotient& (0+255),f,b
  6610  002060  3788               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6611  002062  3789               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6612  002064  378A               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6613                           
  6614                           ; BSR set to: 0
  6615  002066  0100               	movlb	0	; () banked
  6616  002068  5183               	movf	___lldiv@divisor& (0+255),w,b
  6617  00206A  0100               	movlb	0	; () banked
  6618  00206C  5D7F               	subwf	___lldiv@dividend& (0+255),w,b
  6619  00206E  0100               	movlb	0	; () banked
  6620  002070  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6621  002072  0100               	movlb	0	; () banked
  6622  002074  5980               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6623  002076  0100               	movlb	0	; () banked
  6624  002078  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6625  00207A  0100               	movlb	0	; () banked
  6626  00207C  5981               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6627  00207E  0100               	movlb	0	; () banked
  6628  002080  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6629  002082  0100               	movlb	0	; () banked
  6630  002084  5982               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6631  002086  A0D8               	btfss	status,0,c
  6632  002088  D012               	goto	l3508
  6633                           
  6634                           ; BSR set to: 0
  6635  00208A  0100               	movlb	0	; () banked
  6636  00208C  5183               	movf	___lldiv@divisor& (0+255),w,b
  6637  00208E  0100               	movlb	0	; () banked
  6638  002090  5F7F               	subwf	___lldiv@dividend& (0+255),f,b
  6639  002092  0100               	movlb	0	; () banked
  6640  002094  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6641  002096  0100               	movlb	0	; () banked
  6642  002098  5B80               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6643  00209A  0100               	movlb	0	; () banked
  6644  00209C  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6645  00209E  0100               	movlb	0	; () banked
  6646  0020A0  5B81               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6647  0020A2  0100               	movlb	0	; () banked
  6648  0020A4  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6649  0020A6  0100               	movlb	0	; () banked
  6650  0020A8  5B82               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6651                           
  6652                           ; BSR set to: 0
  6653  0020AA  0100               	movlb	0	; () banked
  6654  0020AC  8187               	bsf	___lldiv@quotient& (0+255),0,b
  6655  0020AE                     l3508:
  6656                           
  6657                           ; BSR set to: 0
  6658  0020AE  0100               	movlb	0	; () banked
  6659  0020B0  90D8               	bcf	status,0,c
  6660  0020B2  3386               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6661  0020B4  3385               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6662  0020B6  3384               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6663  0020B8  3383               	rrcf	___lldiv@divisor& (0+255),f,b
  6664                           
  6665                           ; BSR set to: 0
  6666  0020BA  0100               	movlb	0	; () banked
  6667  0020BC  2F8B               	decfsz	___lldiv@counter& (0+255),f,b
  6668  0020BE  D7CD               	goto	l3500
  6669  0020C0                     l1056:
  6670                           
  6671                           ; BSR set to: 0
  6672  0020C0  C087  F07F         	movff	___lldiv@quotient,?___lldiv
  6673  0020C4  C088  F080         	movff	___lldiv@quotient+1,?___lldiv+1
  6674  0020C8  C089  F081         	movff	___lldiv@quotient+2,?___lldiv+2
  6675  0020CC  C08A  F082         	movff	___lldiv@quotient+3,?___lldiv+3
  6676                           
  6677                           ; BSR set to: 0
  6678  0020D0  0012               	return		;funcret
  6679  0020D2                     __end_of___lldiv:
  6680                           	opt stack 0
  6681                           tblptru	equ	0xFF8
  6682                           tblptrh	equ	0xFF7
  6683                           tblptrl	equ	0xFF6
  6684                           tablat	equ	0xFF5
  6685                           intcon	equ	0xFF2
  6686                           intcon2	equ	0xFF1
  6687                           postinc0	equ	0xFEE
  6688                           wreg	equ	0xFE8
  6689                           postdec1	equ	0xFE5
  6690                           fsr1l	equ	0xFE1
  6691                           indf2	equ	0xFDF
  6692                           fsr2h	equ	0xFDA
  6693                           fsr2l	equ	0xFD9
  6694                           status	equ	0xFD8
  6695                           
  6696 ;; *************** function _WriteTimer0 *****************
  6697 ;; Defined at:
  6698 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;  timer0          2   19[BANK0 ] unsigned int 
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;  timer           2   21[BANK0 ] struct Timers
  6703 ;; Return value:  Size  Location     Type
  6704 ;;		None               void
  6705 ;; Registers used:
  6706 ;;		None
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6712 ;;      Params:         0       2       0       0
  6713 ;;      Locals:         0       2       0       0
  6714 ;;      Temps:          0       0       0       0
  6715 ;;      Totals:         0       4       0       0
  6716 ;;Total ram usage:        4 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:    4
  6719 ;; This function calls:
  6720 ;;		Nothing
  6721 ;; This function is called by:
  6722 ;;		_main
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           	psect	text17
  6727  002520                     __ptext17:
  6728                           	opt stack 0
  6729  002520                     _WriteTimer0:
  6730                           	opt stack 26
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;incstack = 0
  6734  002520  C073  F075         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6735  002524  C074  F076         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6736  002528  C076  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6737  00252C  C075  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6738  002530  0012               	return		;funcret
  6739  002532                     __end_of_WriteTimer0:
  6740                           	opt stack 0
  6741                           tblptru	equ	0xFF8
  6742                           tblptrh	equ	0xFF7
  6743                           tblptrl	equ	0xFF6
  6744                           tablat	equ	0xFF5
  6745                           intcon	equ	0xFF2
  6746                           intcon2	equ	0xFF1
  6747                           postinc0	equ	0xFEE
  6748                           wreg	equ	0xFE8
  6749                           postdec1	equ	0xFE5
  6750                           fsr1l	equ	0xFE1
  6751                           indf2	equ	0xFDF
  6752                           fsr2h	equ	0xFDA
  6753                           fsr2l	equ	0xFD9
  6754                           status	equ	0xFD8
  6755                           
  6756 ;; *************** function _CANisTXwarningON *****************
  6757 ;; Defined at:
  6758 ;;		line 1119 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6759 ;; Parameters:    Size  Location     Type
  6760 ;;		None
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;		None
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  1    wreg      unsigned char 
  6765 ;; Registers used:
  6766 ;;		wreg
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6772 ;;      Params:         0       0       0       0
  6773 ;;      Locals:         0       0       0       0
  6774 ;;      Temps:          0       0       0       0
  6775 ;;      Totals:         0       0       0       0
  6776 ;;Total ram usage:        0 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:    4
  6779 ;; This function calls:
  6780 ;;		Nothing
  6781 ;; This function is called by:
  6782 ;;		_main
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           	psect	text18
  6787  002550                     __ptext18:
  6788                           	opt stack 0
  6789  002550                     _CANisTXwarningON:
  6790                           	opt stack 26
  6791                           
  6792                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  6793                           
  6794                           ;incstack = 0
  6795  002550  A474               	btfss	3956,2,c	;volatile
  6796  002552  D002               	goto	u3780
  6797  002554  0E01               	movlw	1
  6798  002556  0012               	return	
  6799  002558                     u3780:
  6800  002558  0E00               	movlw	0
  6801  00255A  0012               	return	
  6802  00255C                     __end_of_CANisTXwarningON:
  6803                           	opt stack 0
  6804                           tblptru	equ	0xFF8
  6805                           tblptrh	equ	0xFF7
  6806                           tblptrl	equ	0xFF6
  6807                           tablat	equ	0xFF5
  6808                           intcon	equ	0xFF2
  6809                           intcon2	equ	0xFF1
  6810                           postinc0	equ	0xFEE
  6811                           wreg	equ	0xFE8
  6812                           postdec1	equ	0xFE5
  6813                           fsr1l	equ	0xFE1
  6814                           indf2	equ	0xFDF
  6815                           fsr2h	equ	0xFDA
  6816                           fsr2l	equ	0xFD9
  6817                           status	equ	0xFD8
  6818                           
  6819 ;; *************** function _CANisRXwarningON *****************
  6820 ;; Defined at:
  6821 ;;		line 1127 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;		None
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;		None
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  1    wreg      unsigned char 
  6828 ;; Registers used:
  6829 ;;		wreg
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6835 ;;      Params:         0       0       0       0
  6836 ;;      Locals:         0       0       0       0
  6837 ;;      Temps:          0       0       0       0
  6838 ;;      Totals:         0       0       0       0
  6839 ;;Total ram usage:        0 bytes
  6840 ;; Hardware stack levels used:    1
  6841 ;; Hardware stack levels required when called:    4
  6842 ;; This function calls:
  6843 ;;		Nothing
  6844 ;; This function is called by:
  6845 ;;		_main
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           	psect	text19
  6850  00255C                     __ptext19:
  6851                           	opt stack 0
  6852  00255C                     _CANisRXwarningON:
  6853                           	opt stack 26
  6854                           
  6855                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  6856                           
  6857                           ;incstack = 0
  6858  00255C  A274               	btfss	3956,1,c	;volatile
  6859  00255E  D002               	goto	u3790
  6860  002560  0E01               	movlw	1
  6861  002562  0012               	return	
  6862  002564                     u3790:
  6863  002564  0E00               	movlw	0
  6864  002566  0012               	return	
  6865  002568                     __end_of_CANisRXwarningON:
  6866                           	opt stack 0
  6867                           tblptru	equ	0xFF8
  6868                           tblptrh	equ	0xFF7
  6869                           tblptrl	equ	0xFF6
  6870                           tablat	equ	0xFF5
  6871                           intcon	equ	0xFF2
  6872                           intcon2	equ	0xFF1
  6873                           postinc0	equ	0xFEE
  6874                           wreg	equ	0xFE8
  6875                           postdec1	equ	0xFE5
  6876                           fsr1l	equ	0xFE1
  6877                           indf2	equ	0xFDF
  6878                           fsr2h	equ	0xFDA
  6879                           fsr2l	equ	0xFD9
  6880                           status	equ	0xFD8
  6881                           
  6882 ;; *************** function _ISR_bassa *****************
  6883 ;; Defined at:
  6884 ;;		line 74 in file "newmain.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;		None
  6887 ;; Auto vars:     Size  Location     Type
  6888 ;;		None
  6889 ;; Return value:  Size  Location     Type
  6890 ;;		None               void
  6891 ;; Registers used:
  6892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6898 ;;      Params:         0       0       0       0
  6899 ;;      Locals:         0       0       0       0
  6900 ;;      Temps:         17       0       0       0
  6901 ;;      Totals:        17       0       0       0
  6902 ;;Total ram usage:       17 bytes
  6903 ;; Hardware stack levels used:    1
  6904 ;; Hardware stack levels required when called:    3
  6905 ;; This function calls:
  6906 ;;		_CANisRxReady
  6907 ;;		_CANreceiveMessage
  6908 ;;		___wmul
  6909 ;;		i1___lwdiv
  6910 ;; This function is called by:
  6911 ;;		Interrupt level 1
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915                           	psect	intcodelo
  6916  000018                     __pintcodelo:
  6917                           	opt stack 0
  6918  000018                     _ISR_bassa:
  6919                           	opt stack 24
  6920                           
  6921                           ;incstack = 0
  6922  000018  804B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6923  00001A  CFD8 F032          	movff	status,??_ISR_bassa
  6924  00001E  CFE8 F033          	movff	wreg,??_ISR_bassa+1
  6925  000022  CFE0 F034          	movff	bsr,??_ISR_bassa+2
  6926  000026  CFFA F035          	movff	pclath,??_ISR_bassa+3
  6927  00002A  CFFB F036          	movff	pclatu,??_ISR_bassa+4
  6928  00002E  CFE9 F037          	movff	fsr0l,??_ISR_bassa+5
  6929  000032  CFEA F038          	movff	fsr0h,??_ISR_bassa+6
  6930  000036  CFE1 F039          	movff	fsr1l,??_ISR_bassa+7
  6931  00003A  CFE2 F03A          	movff	fsr1h,??_ISR_bassa+8
  6932  00003E  CFD9 F03B          	movff	fsr2l,??_ISR_bassa+9
  6933  000042  CFDA F03C          	movff	fsr2h,??_ISR_bassa+10
  6934  000046  CFF3 F03D          	movff	prodl,??_ISR_bassa+11
  6935  00004A  CFF4 F03E          	movff	prodh,??_ISR_bassa+12
  6936  00004E  CFF6 F03F          	movff	tblptrl,??_ISR_bassa+13
  6937  000052  CFF7 F040          	movff	tblptrh,??_ISR_bassa+14
  6938  000056  CFF8 F041          	movff	tblptru,??_ISR_bassa+15
  6939  00005A  CFF5 F042          	movff	tablat,??_ISR_bassa+16
  6940                           
  6941                           ;newmain.c: 75: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  6942  00005E  A0A4               	btfss	4004,0,c	;volatile
  6943  000060  B2A4               	btfsc	4004,1,c	;volatile
  6944  000062  D001               	goto	i1l3566
  6945  000064  D046               	goto	i1l3590
  6946  000066                     i1l3566:
  6947                           
  6948                           ;newmain.c: 76: if (CANisRxReady()) {
  6949  000066  EC7C  F012         	call	_CANisRxReady	;wreg free
  6950  00006A  0900               	iorlw	0
  6951  00006C  B4D8               	btfsc	status,2,c
  6952  00006E  D03F               	goto	i1l3586
  6953                           
  6954                           ;newmain.c: 77: CANreceiveMessage(&msg);
  6955  000070  0E16               	movlw	low _msg
  6956  000072  6E25               	movwf	CANreceiveMessage@msg,c
  6957  000074  0E00               	movlw	high _msg
  6958  000076  6E26               	movwf	CANreceiveMessage@msg+1,c
  6959  000078  ECF5  F009         	call	_CANreceiveMessage	;wreg free
  6960                           
  6961                           ;newmain.c: 78: if (msg.RTR == 1) {
  6962  00007C  0424               	decf	_msg+14,w,c
  6963  00007E  A4D8               	btfss	status,2,c
  6964  000080  D00D               	goto	i1l3574
  6965                           
  6966                           ;newmain.c: 79: id = msg.identifier;
  6967  000082  C016  F0A5         	movff	_msg,_id
  6968  000086  C017  F0A6         	movff	_msg+1,_id+1
  6969  00008A  C018  F0A7         	movff	_msg+2,_id+2
  6970  00008E  C019  F0A8         	movff	_msg+3,_id+3
  6971                           
  6972                           ;newmain.c: 80: remote_frame = msg.RTR;
  6973  000092  A024               	btfss	_msg+14,0,c
  6974  000094  D002               	goto	i1u402_20
  6975  000096  804A               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  6976  000098  D001               	goto	i1l3574
  6977  00009A                     i1u402_20:
  6978  00009A  904A               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  6979  00009C                     i1l3574:
  6980                           
  6981                           ;newmain.c: 81: }
  6982                           ;newmain.c: 82: if (msg.identifier == 0b10000000000000000000000000000) {
  6983  00009C  0E10               	movlw	16
  6984  00009E  1819               	xorwf	_msg+3,w,c
  6985  0000A0  1016               	iorwf	_msg,w,c
  6986  0000A2  1017               	iorwf	_msg+1,w,c
  6987  0000A4  1018               	iorwf	_msg+2,w,c
  6988  0000A6  B4D8               	btfsc	status,2,c
  6989                           
  6990                           ;newmain.c: 83: data_array[0] = theorySteering;
  6991  0000A8  C015  F0B3         	movff	_theorySteering,_data_array
  6992                           
  6993                           ;newmain.c: 85: }
  6994                           ;newmain.c: 86: if (msg.identifier == 0b00000000000000000000000000110) {
  6995  0000AC  0E06               	movlw	6
  6996  0000AE  1816               	xorwf	_msg,w,c
  6997  0000B0  1017               	iorwf	_msg+1,w,c
  6998  0000B2  1018               	iorwf	_msg+2,w,c
  6999  0000B4  1019               	iorwf	_msg+3,w,c
  7000  0000B6  A4D8               	btfss	status,2,c
  7001  0000B8  D01A               	goto	i1l3586
  7002                           
  7003                           ;newmain.c: 88: theorySteering = msg.data[0];
  7004  0000BA  C01A  F015         	movff	_msg+4,_theorySteering
  7005                           
  7006                           ;newmain.c: 89: currentSteering = theorySteering + calibration;
  7007  0000BE  5015               	movf	_theorySteering,w,c
  7008  0000C0  240D               	addwf	_calibration,w,c
  7009  0000C2  6E47               	movwf	_currentSteering,c
  7010                           
  7011                           ;newmain.c: 90: currentSteering = (limiteDx*currentSteering)/180;
  7012  0000C4  C047  F025         	movff	_currentSteering,___wmul@multiplier
  7013  0000C8  6A26               	clrf	___wmul@multiplier+1,c
  7014  0000CA  C043  F027         	movff	_limiteDx,___wmul@multiplicand
  7015  0000CE  C044  F028         	movff	_limiteDx+1,___wmul@multiplicand+1
  7016  0000D2  EC4C  F012         	call	___wmul	;wreg free
  7017  0000D6  C025  F02B         	movff	?___wmul,i1___lwdiv@dividend
  7018  0000DA  C026  F02C         	movff	?___wmul+1,i1___lwdiv@dividend+1
  7019  0000DE  0E00               	movlw	0
  7020  0000E0  6E2E               	movwf	i1___lwdiv@divisor+1,c
  7021  0000E2  0EB4               	movlw	180
  7022  0000E4  6E2D               	movwf	i1___lwdiv@divisor,c
  7023  0000E6  ECBD  F011         	call	i1___lwdiv	;wreg free
  7024  0000EA  502B               	movf	?i1___lwdiv,w,c
  7025  0000EC  6E47               	movwf	_currentSteering,c
  7026  0000EE                     i1l3586:
  7027                           
  7028                           ;newmain.c: 91: }
  7029                           ;newmain.c: 92: }
  7030                           ;newmain.c: 93: PIR3bits.RXB0IF = 0;
  7031  0000EE  90A4               	bcf	4004,0,c	;volatile
  7032                           
  7033                           ;newmain.c: 94: PIR3bits.RXB1IF = 0;
  7034  0000F0  92A4               	bcf	4004,1,c	;volatile
  7035  0000F2                     i1l3590:
  7036                           
  7037                           ;newmain.c: 95: }
  7038                           ;newmain.c: 96: if (PIR2bits.TMR3IF) {
  7039  0000F2  A2A1               	btfss	4001,1,c	;volatile
  7040  0000F4  D00B               	goto	i1l639
  7041                           
  7042                           ;newmain.c: 97: timeCounter++;
  7043  0000F6  0E01               	movlw	1
  7044  0000F8  2605               	addwf	_timeCounter,f,c
  7045  0000FA  0E00               	movlw	0
  7046  0000FC  2206               	addwfc	_timeCounter+1,f,c
  7047  0000FE  2207               	addwfc	_timeCounter+2,f,c
  7048  000100  2208               	addwfc	_timeCounter+3,f,c
  7049                           
  7050                           ;newmain.c: 98: TMR3H = 0x63;
  7051  000102  0E63               	movlw	99
  7052  000104  6EB3               	movwf	4019,c	;volatile
  7053                           
  7054                           ;newmain.c: 99: TMR3L = 0xC0;
  7055  000106  0EC0               	movlw	192
  7056  000108  6EB2               	movwf	4018,c	;volatile
  7057                           
  7058                           ;newmain.c: 100: PIR2bits.TMR3IF = 0;
  7059  00010A  92A1               	bcf	4001,1,c	;volatile
  7060  00010C                     i1l639:
  7061  00010C  C042  FFF5         	movff	??_ISR_bassa+16,tablat
  7062  000110  C041  FFF8         	movff	??_ISR_bassa+15,tblptru
  7063  000114  C040  FFF7         	movff	??_ISR_bassa+14,tblptrh
  7064  000118  C03F  FFF6         	movff	??_ISR_bassa+13,tblptrl
  7065  00011C  C03E  FFF4         	movff	??_ISR_bassa+12,prodh
  7066  000120  C03D  FFF3         	movff	??_ISR_bassa+11,prodl
  7067  000124  C03C  FFDA         	movff	??_ISR_bassa+10,fsr2h
  7068  000128  C03B  FFD9         	movff	??_ISR_bassa+9,fsr2l
  7069  00012C  C03A  FFE2         	movff	??_ISR_bassa+8,fsr1h
  7070  000130  C039  FFE1         	movff	??_ISR_bassa+7,fsr1l
  7071  000134  C038  FFEA         	movff	??_ISR_bassa+6,fsr0h
  7072  000138  C037  FFE9         	movff	??_ISR_bassa+5,fsr0l
  7073  00013C  C036  FFFB         	movff	??_ISR_bassa+4,pclatu
  7074  000140  C035  FFFA         	movff	??_ISR_bassa+3,pclath
  7075  000144  C034  FFE0         	movff	??_ISR_bassa+2,bsr
  7076  000148  C033  FFE8         	movff	??_ISR_bassa+1,wreg
  7077  00014C  C032  FFD8         	movff	??_ISR_bassa,status
  7078  000150  904B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7079  000152  0010               	retfie	
  7080  000154                     __end_of_ISR_bassa:
  7081                           	opt stack 0
  7082                           pclatu	equ	0xFFB
  7083                           pclath	equ	0xFFA
  7084                           tblptru	equ	0xFF8
  7085                           tblptrh	equ	0xFF7
  7086                           tblptrl	equ	0xFF6
  7087                           tablat	equ	0xFF5
  7088                           prodh	equ	0xFF4
  7089                           prodl	equ	0xFF3
  7090                           intcon	equ	0xFF2
  7091                           intcon2	equ	0xFF1
  7092                           postinc0	equ	0xFEE
  7093                           fsr0h	equ	0xFEA
  7094                           fsr0l	equ	0xFE9
  7095                           wreg	equ	0xFE8
  7096                           postdec1	equ	0xFE5
  7097                           fsr1h	equ	0xFE2
  7098                           fsr1l	equ	0xFE1
  7099                           bsr	equ	0xFE0
  7100                           indf2	equ	0xFDF
  7101                           fsr2h	equ	0xFDA
  7102                           fsr2l	equ	0xFD9
  7103                           status	equ	0xFD8
  7104                           
  7105 ;; *************** function i1___lwdiv *****************
  7106 ;; Defined at:
  7107 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  dividend        2    6[COMRAM] unsigned int 
  7110 ;;  divisor         2    8[COMRAM] unsigned int 
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;  __lwdiv         2   10[COMRAM] unsigned int 
  7113 ;;  __lwdiv         1   12[COMRAM] unsigned char 
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  2    6[COMRAM] unsigned int 
  7116 ;; Registers used:
  7117 ;;		wreg, status,2, status,0
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7123 ;;      Params:         4       0       0       0
  7124 ;;      Locals:         3       0       0       0
  7125 ;;      Temps:          0       0       0       0
  7126 ;;      Totals:         7       0       0       0
  7127 ;;Total ram usage:        7 bytes
  7128 ;; Hardware stack levels used:    1
  7129 ;; Hardware stack levels required when called:    2
  7130 ;; This function calls:
  7131 ;;		Nothing
  7132 ;; This function is called by:
  7133 ;;		_ISR_bassa
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           	psect	text21
  7138  00237A                     __ptext21:
  7139                           	opt stack 0
  7140  00237A                     i1___lwdiv:
  7141                           	opt stack 24
  7142                           
  7143                           ;incstack = 0
  7144  00237A  0E00               	movlw	0
  7145  00237C  6E30               	movwf	i1___lwdiv@quotient+1,c
  7146  00237E  0E00               	movlw	0
  7147  002380  6E2F               	movwf	i1___lwdiv@quotient,c
  7148  002382  502D               	movf	i1___lwdiv@divisor,w,c
  7149  002384  102E               	iorwf	i1___lwdiv@divisor+1,w,c
  7150  002386  B4D8               	btfsc	status,2,c
  7151  002388  D01C               	goto	i1l1109
  7152  00238A  0E01               	movlw	1
  7153  00238C  6E31               	movwf	i1___lwdiv@counter,c
  7154  00238E  D004               	goto	i1l3522
  7155  002390                     i1l3520:
  7156  002390  90D8               	bcf	status,0,c
  7157  002392  362D               	rlcf	i1___lwdiv@divisor,f,c
  7158  002394  362E               	rlcf	i1___lwdiv@divisor+1,f,c
  7159  002396  2A31               	incf	i1___lwdiv@counter,f,c
  7160  002398                     i1l3522:
  7161  002398  AE2E               	btfss	i1___lwdiv@divisor+1,7,c
  7162  00239A  D7FA               	goto	i1l3520
  7163  00239C                     i1l3524:
  7164  00239C  90D8               	bcf	status,0,c
  7165  00239E  362F               	rlcf	i1___lwdiv@quotient,f,c
  7166  0023A0  3630               	rlcf	i1___lwdiv@quotient+1,f,c
  7167  0023A2  502D               	movf	i1___lwdiv@divisor,w,c
  7168  0023A4  5C2B               	subwf	i1___lwdiv@dividend,w,c
  7169  0023A6  502E               	movf	i1___lwdiv@divisor+1,w,c
  7170  0023A8  582C               	subwfb	i1___lwdiv@dividend+1,w,c
  7171  0023AA  A0D8               	btfss	status,0,c
  7172  0023AC  D005               	goto	i1l3532
  7173  0023AE  502D               	movf	i1___lwdiv@divisor,w,c
  7174  0023B0  5E2B               	subwf	i1___lwdiv@dividend,f,c
  7175  0023B2  502E               	movf	i1___lwdiv@divisor+1,w,c
  7176  0023B4  5A2C               	subwfb	i1___lwdiv@dividend+1,f,c
  7177  0023B6  802F               	bsf	i1___lwdiv@quotient,0,c
  7178  0023B8                     i1l3532:
  7179  0023B8  90D8               	bcf	status,0,c
  7180  0023BA  322E               	rrcf	i1___lwdiv@divisor+1,f,c
  7181  0023BC  322D               	rrcf	i1___lwdiv@divisor,f,c
  7182  0023BE  2E31               	decfsz	i1___lwdiv@counter,f,c
  7183  0023C0  D7ED               	goto	i1l3524
  7184  0023C2                     i1l1109:
  7185  0023C2  C02F  F02B         	movff	i1___lwdiv@quotient,?i1___lwdiv
  7186  0023C6  C030  F02C         	movff	i1___lwdiv@quotient+1,?i1___lwdiv+1
  7187  0023CA  0012               	return		;funcret
  7188  0023CC                     __end_ofi1___lwdiv:
  7189                           	opt stack 0
  7190                           pclatu	equ	0xFFB
  7191                           pclath	equ	0xFFA
  7192                           tblptru	equ	0xFF8
  7193                           tblptrh	equ	0xFF7
  7194                           tblptrl	equ	0xFF6
  7195                           tablat	equ	0xFF5
  7196                           prodh	equ	0xFF4
  7197                           prodl	equ	0xFF3
  7198                           intcon	equ	0xFF2
  7199                           intcon2	equ	0xFF1
  7200                           postinc0	equ	0xFEE
  7201                           fsr0h	equ	0xFEA
  7202                           fsr0l	equ	0xFE9
  7203                           wreg	equ	0xFE8
  7204                           postdec1	equ	0xFE5
  7205                           fsr1h	equ	0xFE2
  7206                           fsr1l	equ	0xFE1
  7207                           bsr	equ	0xFE0
  7208                           indf2	equ	0xFDF
  7209                           fsr2h	equ	0xFDA
  7210                           fsr2l	equ	0xFD9
  7211                           status	equ	0xFD8
  7212                           
  7213 ;; *************** function ___wmul *****************
  7214 ;; Defined at:
  7215 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  multiplier      2    0[COMRAM] unsigned int 
  7218 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;  product         2    4[COMRAM] unsigned int 
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  2    0[COMRAM] unsigned int 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2, status,0, prodl, prodh
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7230 ;;      Params:         4       0       0       0
  7231 ;;      Locals:         2       0       0       0
  7232 ;;      Temps:          0       0       0       0
  7233 ;;      Totals:         6       0       0       0
  7234 ;;Total ram usage:        6 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; Hardware stack levels required when called:    2
  7237 ;; This function calls:
  7238 ;;		Nothing
  7239 ;; This function is called by:
  7240 ;;		_ISR_bassa
  7241 ;;		_delay_ms
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text22
  7246  002498                     __ptext22:
  7247                           	opt stack 0
  7248  002498                     ___wmul:
  7249                           	opt stack 24
  7250                           
  7251                           ;incstack = 0
  7252  002498  5025               	movf	___wmul@multiplier,w,c
  7253  00249A  0227               	mulwf	___wmul@multiplicand,c
  7254  00249C  CFF3 F029          	movff	prodl,___wmul@product
  7255  0024A0  CFF4 F02A          	movff	prodh,___wmul@product+1
  7256  0024A4  5025               	movf	___wmul@multiplier,w,c
  7257  0024A6  0228               	mulwf	___wmul@multiplicand+1,c
  7258  0024A8  50F3               	movf	prodl,w,c
  7259  0024AA  262A               	addwf	___wmul@product+1,f,c
  7260  0024AC  5026               	movf	___wmul@multiplier+1,w,c
  7261  0024AE  0227               	mulwf	___wmul@multiplicand,c
  7262  0024B0  50F3               	movf	prodl,w,c
  7263  0024B2  262A               	addwf	___wmul@product+1,f,c
  7264  0024B4  C029  F025         	movff	___wmul@product,?___wmul
  7265  0024B8  C02A  F026         	movff	___wmul@product+1,?___wmul+1
  7266  0024BC  0012               	return	
  7267  0024BE                     __end_of___wmul:
  7268                           	opt stack 0
  7269                           pclatu	equ	0xFFB
  7270                           pclath	equ	0xFFA
  7271                           tblptru	equ	0xFF8
  7272                           tblptrh	equ	0xFF7
  7273                           tblptrl	equ	0xFF6
  7274                           tablat	equ	0xFF5
  7275                           prodh	equ	0xFF4
  7276                           prodl	equ	0xFF3
  7277                           intcon	equ	0xFF2
  7278                           intcon2	equ	0xFF1
  7279                           postinc0	equ	0xFEE
  7280                           fsr0h	equ	0xFEA
  7281                           fsr0l	equ	0xFE9
  7282                           wreg	equ	0xFE8
  7283                           postdec1	equ	0xFE5
  7284                           fsr1h	equ	0xFE2
  7285                           fsr1l	equ	0xFE1
  7286                           bsr	equ	0xFE0
  7287                           indf2	equ	0xFDF
  7288                           fsr2h	equ	0xFDA
  7289                           fsr2l	equ	0xFD9
  7290                           status	equ	0xFD8
  7291                           
  7292 ;; *************** function _CANreceiveMessage *****************
  7293 ;; Defined at:
  7294 ;;		line 528 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  msg             2    0[COMRAM] PTR struct .
  7297 ;;		 -> msg(15), 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;  tamp            1   11[COMRAM] unsigned char 
  7300 ;;  error           1   10[COMRAM] unsigned char 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      unsigned char 
  7303 ;; Registers used:
  7304 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7310 ;;      Params:         2       0       0       0
  7311 ;;      Locals:         2       0       0       0
  7312 ;;      Temps:          8       0       0       0
  7313 ;;      Totals:        12       0       0       0
  7314 ;;Total ram usage:       12 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; Hardware stack levels required when called:    2
  7317 ;; This function calls:
  7318 ;;		Nothing
  7319 ;; This function is called by:
  7320 ;;		_ISR_bassa
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324                           	psect	text23
  7325  0013EA                     __ptext23:
  7326                           	opt stack 0
  7327  0013EA                     _CANreceiveMessage:
  7328                           	opt stack 24
  7329                           
  7330                           ;inc\CANlib.h: 530: BYTE tamp;
  7331                           ;inc\CANlib.h: 531: BYTE error = 0;
  7332                           
  7333                           ;incstack = 0
  7334  0013EA  0E00               	movlw	0
  7335  0013EC  6E2F               	movwf	CANreceiveMessage@error,c
  7336                           
  7337                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7338  0013EE  BE74               	btfsc	3956,7,c	;volatile
  7339                           
  7340                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7341  0013F0  802F               	bsf	CANreceiveMessage@error,0,c
  7342                           
  7343                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7344  0013F2  BC74               	btfsc	3956,6,c	;volatile
  7345                           
  7346                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7347  0013F4  822F               	bsf	CANreceiveMessage@error,1,c
  7348                           
  7349                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7350  0013F6  010F               	movlb	15	; () banked
  7351  0013F8  AF50               	btfss	80,7,b	;volatile
  7352  0013FA  D143               	goto	i1l408
  7353                           
  7354                           ; BSR set to: 15
  7355                           ;inc\CANlib.h: 541: {
  7356                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7357  0013FC  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7358  001400  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7359  001404  6ADE               	clrf	postinc2,c
  7360  001406  6ADE               	clrf	postinc2,c
  7361  001408  6ADE               	clrf	postinc2,c
  7362  00140A  6ADD               	clrf	postdec2,c
  7363                           
  7364                           ; BSR set to: 15
  7365                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7366  00140C  EE20 F004          	lfsr	2,4
  7367  001410  5025               	movf	CANreceiveMessage@msg,w,c
  7368  001412  26D9               	addwf	fsr2l,f,c
  7369  001414  5026               	movf	CANreceiveMessage@msg+1,w,c
  7370  001416  22DA               	addwfc	fsr2h,f,c
  7371  001418  CF56 FFDF          	movff	3926,indf2	;volatile
  7372                           
  7373                           ; BSR set to: 15
  7374                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7375  00141C  EE20 F005          	lfsr	2,5
  7376  001420  5025               	movf	CANreceiveMessage@msg,w,c
  7377  001422  26D9               	addwf	fsr2l,f,c
  7378  001424  5026               	movf	CANreceiveMessage@msg+1,w,c
  7379  001426  22DA               	addwfc	fsr2h,f,c
  7380  001428  CF57 FFDF          	movff	3927,indf2	;volatile
  7381                           
  7382                           ; BSR set to: 15
  7383                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7384  00142C  EE20 F006          	lfsr	2,6
  7385  001430  5025               	movf	CANreceiveMessage@msg,w,c
  7386  001432  26D9               	addwf	fsr2l,f,c
  7387  001434  5026               	movf	CANreceiveMessage@msg+1,w,c
  7388  001436  22DA               	addwfc	fsr2h,f,c
  7389  001438  CF58 FFDF          	movff	3928,indf2	;volatile
  7390                           
  7391                           ; BSR set to: 15
  7392                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7393  00143C  EE20 F007          	lfsr	2,7
  7394  001440  5025               	movf	CANreceiveMessage@msg,w,c
  7395  001442  26D9               	addwf	fsr2l,f,c
  7396  001444  5026               	movf	CANreceiveMessage@msg+1,w,c
  7397  001446  22DA               	addwfc	fsr2h,f,c
  7398  001448  CF59 FFDF          	movff	3929,indf2	;volatile
  7399                           
  7400                           ; BSR set to: 15
  7401                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7402  00144C  EE20 F008          	lfsr	2,8
  7403  001450  5025               	movf	CANreceiveMessage@msg,w,c
  7404  001452  26D9               	addwf	fsr2l,f,c
  7405  001454  5026               	movf	CANreceiveMessage@msg+1,w,c
  7406  001456  22DA               	addwfc	fsr2h,f,c
  7407  001458  CF5A FFDF          	movff	3930,indf2	;volatile
  7408                           
  7409                           ; BSR set to: 15
  7410                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7411  00145C  EE20 F009          	lfsr	2,9
  7412  001460  5025               	movf	CANreceiveMessage@msg,w,c
  7413  001462  26D9               	addwf	fsr2l,f,c
  7414  001464  5026               	movf	CANreceiveMessage@msg+1,w,c
  7415  001466  22DA               	addwfc	fsr2h,f,c
  7416  001468  CF5B FFDF          	movff	3931,indf2	;volatile
  7417                           
  7418                           ; BSR set to: 15
  7419                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7420  00146C  EE20 F00A          	lfsr	2,10
  7421  001470  5025               	movf	CANreceiveMessage@msg,w,c
  7422  001472  26D9               	addwf	fsr2l,f,c
  7423  001474  5026               	movf	CANreceiveMessage@msg+1,w,c
  7424  001476  22DA               	addwfc	fsr2h,f,c
  7425  001478  CF5C FFDF          	movff	3932,indf2	;volatile
  7426                           
  7427                           ; BSR set to: 15
  7428                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7429  00147C  EE20 F00B          	lfsr	2,11
  7430  001480  5025               	movf	CANreceiveMessage@msg,w,c
  7431  001482  26D9               	addwf	fsr2l,f,c
  7432  001484  5026               	movf	CANreceiveMessage@msg+1,w,c
  7433  001486  22DA               	addwfc	fsr2h,f,c
  7434  001488  CF5D FFDF          	movff	3933,indf2	;volatile
  7435                           
  7436                           ; BSR set to: 15
  7437                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7438  00148C  EE20 F00E          	lfsr	2,14
  7439  001490  5025               	movf	CANreceiveMessage@msg,w,c
  7440  001492  26D9               	addwf	fsr2l,f,c
  7441  001494  5026               	movf	CANreceiveMessage@msg+1,w,c
  7442  001496  22DA               	addwfc	fsr2h,f,c
  7443  001498  010F               	movlb	15	; () banked
  7444  00149A  AD55               	btfss	85,6,b	;volatile
  7445  00149C  D002               	goto	i1u357_20
  7446  00149E  0E01               	movlw	1
  7447  0014A0  D001               	goto	i1u357_26
  7448  0014A2                     i1u357_20:
  7449  0014A2  0E00               	movlw	0
  7450  0014A4                     i1u357_26:
  7451  0014A4  6EDF               	movwf	indf2,c
  7452                           
  7453                           ; BSR set to: 15
  7454                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7455  0014A6  EE20 F00D          	lfsr	2,13
  7456  0014AA  5025               	movf	CANreceiveMessage@msg,w,c
  7457  0014AC  26D9               	addwf	fsr2l,f,c
  7458  0014AE  5026               	movf	CANreceiveMessage@msg+1,w,c
  7459  0014B0  22DA               	addwfc	fsr2h,f,c
  7460  0014B2  010F               	movlb	15	; () banked
  7461  0014B4  5155               	movf	85,w,b	;volatile
  7462  0014B6  0B0F               	andlw	15
  7463  0014B8  6EDF               	movwf	indf2,c
  7464                           
  7465                           ; BSR set to: 15
  7466                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7467  0014BA  EE20 F00C          	lfsr	2,12
  7468  0014BE  5025               	movf	CANreceiveMessage@msg,w,c
  7469  0014C0  26D9               	addwf	fsr2l,f,c
  7470  0014C2  5026               	movf	CANreceiveMessage@msg+1,w,c
  7471  0014C4  22DA               	addwfc	fsr2h,f,c
  7472  0014C6  010F               	movlb	15	; () banked
  7473  0014C8  A752               	btfss	82,3,b	;volatile
  7474  0014CA  D002               	goto	i1u358_20
  7475  0014CC  0E01               	movlw	1
  7476  0014CE  D001               	goto	i1u358_26
  7477  0014D0                     i1u358_20:
  7478  0014D0  0E00               	movlw	0
  7479  0014D2                     i1u358_26:
  7480  0014D2  6EDF               	movwf	indf2,c
  7481                           
  7482                           ; BSR set to: 15
  7483                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7484  0014D4  010F               	movlb	15	; () banked
  7485  0014D6  B752               	btfsc	82,3,b	;volatile
  7486  0014D8  D044               	goto	i1l3294
  7487                           
  7488                           ; BSR set to: 15
  7489                           ;inc\CANlib.h: 559: {
  7490                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7491  0014DA  CF51 F027          	movff	3921,??_CANreceiveMessage	;volatile
  7492  0014DE  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7493  0014E0  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7494  0014E2  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7495  0014E4  0E03               	movlw	3
  7496  0014E6                     i1u360_25:
  7497  0014E6  90D8               	bcf	status,0,c
  7498  0014E8  3627               	rlcf	??_CANreceiveMessage,f,c
  7499  0014EA  3628               	rlcf	??_CANreceiveMessage+1,f,c
  7500  0014EC  3629               	rlcf	??_CANreceiveMessage+2,f,c
  7501  0014EE  362A               	rlcf	??_CANreceiveMessage+3,f,c
  7502  0014F0  2EE8               	decfsz	wreg,f,c
  7503  0014F2  D7F9               	goto	i1u360_25
  7504  0014F4  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7505  0014F8  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7506  0014FC  C027  FFDE         	movff	??_CANreceiveMessage,postinc2
  7507  001500  C028  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7508  001504  C029  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7509  001508  C02A  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7510                           
  7511                           ; BSR set to: 15
  7512                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7513  00150C  010F               	movlb	15	; () banked
  7514  00150E  3952               	swapf	82,w,b	;volatile
  7515  001510  42E8               	rrncf	wreg,f,c
  7516  001512  0B07               	andlw	7
  7517  001514  0B07               	andlw	7
  7518  001516  6E30               	movwf	CANreceiveMessage@tamp,c
  7519                           
  7520                           ; BSR set to: 15
  7521                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7522  001518  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7523  00151C  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7524  001520  CFDE F027          	movff	postinc2,??_CANreceiveMessage
  7525  001524  CFDE F028          	movff	postinc2,??_CANreceiveMessage+1
  7526  001528  CFDE F029          	movff	postinc2,??_CANreceiveMessage+2
  7527  00152C  CFDE F02A          	movff	postinc2,??_CANreceiveMessage+3
  7528  001530  5030               	movf	CANreceiveMessage@tamp,w,c
  7529  001532  2427               	addwf	??_CANreceiveMessage,w,c
  7530  001534  6E2B               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7531  001536  0E00               	movlw	0
  7532  001538  2028               	addwfc	??_CANreceiveMessage+1,w,c
  7533  00153A  6E2C               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7534  00153C  0E00               	movlw	0
  7535  00153E  2029               	addwfc	??_CANreceiveMessage+2,w,c
  7536  001540  6E2D               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7537  001542  0E00               	movlw	0
  7538  001544  202A               	addwfc	??_CANreceiveMessage+3,w,c
  7539  001546  6E2E               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7540  001548  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7541  00154C  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7542  001550  C02B  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7543  001554  C02C  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7544  001558  C02D  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7545  00155C  C02E  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7546                           
  7547                           ;inc\CANlib.h: 563: }
  7548  001560  D08D               	goto	i1l3320
  7549  001562                     i1l3294:
  7550                           
  7551                           ; BSR set to: 15
  7552                           ;inc\CANlib.h: 564: else
  7553                           ;inc\CANlib.h: 565: {
  7554                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7555  001562  CF54 F027          	movff	3924,??_CANreceiveMessage	;volatile
  7556  001566  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7557  001568  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7558  00156A  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7559  00156C  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7560  001570  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7561  001574  C027  FFDE         	movff	??_CANreceiveMessage,postinc2
  7562  001578  C028  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7563  00157C  C029  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7564  001580  C02A  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7565                           
  7566                           ; BSR set to: 15
  7567                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7568  001584  CF53 F027          	movff	3923,??_CANreceiveMessage	;volatile
  7569  001588  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7570  00158A  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7571  00158C  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7572  00158E  C029  F02A         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7573  001592  C028  F029         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7574  001596  C027  F028         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7575  00159A  6A27               	clrf	??_CANreceiveMessage,c
  7576  00159C  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7577  0015A0  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7578  0015A4  5027               	movf	??_CANreceiveMessage,w,c
  7579  0015A6  26DE               	addwf	postinc2,f,c
  7580  0015A8  5028               	movf	??_CANreceiveMessage+1,w,c
  7581  0015AA  22DE               	addwfc	postinc2,f,c
  7582  0015AC  5029               	movf	??_CANreceiveMessage+2,w,c
  7583  0015AE  22DE               	addwfc	postinc2,f,c
  7584  0015B0  502A               	movf	??_CANreceiveMessage+3,w,c
  7585  0015B2  22DE               	addwfc	postinc2,f,c
  7586                           
  7587                           ; BSR set to: 15
  7588                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7589  0015B4  010F               	movlb	15	; () banked
  7590  0015B6  A152               	btfss	82,0,b	;volatile
  7591  0015B8  D00C               	goto	i1l3302
  7592                           
  7593                           ; BSR set to: 15
  7594                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7595  0015BA  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7596  0015BE  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7597  0015C2  0E00               	movlw	0
  7598  0015C4  12DE               	iorwf	postinc2,f,c
  7599  0015C6  0E00               	movlw	0
  7600  0015C8  12DE               	iorwf	postinc2,f,c
  7601  0015CA  0E01               	movlw	1
  7602  0015CC  12DE               	iorwf	postinc2,f,c
  7603  0015CE  0E00               	movlw	0
  7604  0015D0  12DE               	iorwf	postinc2,f,c
  7605  0015D2                     i1l3302:
  7606                           
  7607                           ; BSR set to: 15
  7608                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7609  0015D2  010F               	movlb	15	; () banked
  7610  0015D4  A352               	btfss	82,1,b	;volatile
  7611  0015D6  D00C               	goto	i1l3306
  7612                           
  7613                           ; BSR set to: 15
  7614                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7615  0015D8  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7616  0015DC  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7617  0015E0  0E00               	movlw	0
  7618  0015E2  12DE               	iorwf	postinc2,f,c
  7619  0015E4  0E00               	movlw	0
  7620  0015E6  12DE               	iorwf	postinc2,f,c
  7621  0015E8  0E02               	movlw	2
  7622  0015EA  12DE               	iorwf	postinc2,f,c
  7623  0015EC  0E00               	movlw	0
  7624  0015EE  12DE               	iorwf	postinc2,f,c
  7625  0015F0                     i1l3306:
  7626                           
  7627                           ; BSR set to: 15
  7628                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7629  0015F0  010F               	movlb	15	; () banked
  7630  0015F2  AB52               	btfss	82,5,b	;volatile
  7631  0015F4  D00C               	goto	i1l3310
  7632                           
  7633                           ; BSR set to: 15
  7634                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7635  0015F6  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7636  0015FA  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7637  0015FE  0E00               	movlw	0
  7638  001600  12DE               	iorwf	postinc2,f,c
  7639  001602  0E00               	movlw	0
  7640  001604  12DE               	iorwf	postinc2,f,c
  7641  001606  0E04               	movlw	4
  7642  001608  12DE               	iorwf	postinc2,f,c
  7643  00160A  0E00               	movlw	0
  7644  00160C  12DE               	iorwf	postinc2,f,c
  7645  00160E                     i1l3310:
  7646                           
  7647                           ; BSR set to: 15
  7648                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7649  00160E  010F               	movlb	15	; () banked
  7650  001610  AD52               	btfss	82,6,b	;volatile
  7651  001612  D00C               	goto	i1l3314
  7652                           
  7653                           ; BSR set to: 15
  7654                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  7655  001614  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7656  001618  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7657  00161C  0E00               	movlw	0
  7658  00161E  12DE               	iorwf	postinc2,f,c
  7659  001620  0E00               	movlw	0
  7660  001622  12DE               	iorwf	postinc2,f,c
  7661  001624  0E08               	movlw	8
  7662  001626  12DE               	iorwf	postinc2,f,c
  7663  001628  0E00               	movlw	0
  7664  00162A  12DE               	iorwf	postinc2,f,c
  7665  00162C                     i1l3314:
  7666                           
  7667                           ; BSR set to: 15
  7668                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7669  00162C  010F               	movlb	15	; () banked
  7670  00162E  AF52               	btfss	82,7,b	;volatile
  7671  001630  D00C               	goto	i1l3318
  7672                           
  7673                           ; BSR set to: 15
  7674                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  7675  001632  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7676  001636  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7677  00163A  0E00               	movlw	0
  7678  00163C  12DE               	iorwf	postinc2,f,c
  7679  00163E  0E00               	movlw	0
  7680  001640  12DE               	iorwf	postinc2,f,c
  7681  001642  0E10               	movlw	16
  7682  001644  12DE               	iorwf	postinc2,f,c
  7683  001646  0E00               	movlw	0
  7684  001648  12DE               	iorwf	postinc2,f,c
  7685  00164A                     i1l3318:
  7686                           
  7687                           ; BSR set to: 15
  7688                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7689  00164A  CF51 F027          	movff	3921,??_CANreceiveMessage	;volatile
  7690  00164E  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7691  001650  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7692  001652  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7693  001654  0E15               	movlw	21
  7694  001656                     i1u366_25:
  7695  001656  90D8               	bcf	status,0,c
  7696  001658  3627               	rlcf	??_CANreceiveMessage,f,c
  7697  00165A  3628               	rlcf	??_CANreceiveMessage+1,f,c
  7698  00165C  3629               	rlcf	??_CANreceiveMessage+2,f,c
  7699  00165E  362A               	rlcf	??_CANreceiveMessage+3,f,c
  7700  001660  2EE8               	decfsz	wreg,f,c
  7701  001662  D7F9               	goto	i1u366_25
  7702  001664  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7703  001668  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7704  00166C  5027               	movf	??_CANreceiveMessage,w,c
  7705  00166E  12DE               	iorwf	postinc2,f,c
  7706  001670  5028               	movf	??_CANreceiveMessage+1,w,c
  7707  001672  12DE               	iorwf	postinc2,f,c
  7708  001674  5029               	movf	??_CANreceiveMessage+2,w,c
  7709  001676  12DE               	iorwf	postinc2,f,c
  7710  001678  502A               	movf	??_CANreceiveMessage+3,w,c
  7711  00167A  12DE               	iorwf	postinc2,f,c
  7712  00167C                     i1l3320:
  7713                           
  7714                           ; BSR set to: 15
  7715                           ;inc\CANlib.h: 581: }
  7716                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7717  00167C  010F               	movlb	15	; () banked
  7718  00167E  9F50               	bcf	80,7,b	;volatile
  7719                           
  7720                           ; BSR set to: 15
  7721                           ;inc\CANlib.h: 584: return (error);
  7722                           ;	Return value of _CANreceiveMessage is never used
  7723  001680  0012               	return	
  7724  001682                     i1l408:
  7725                           
  7726                           ; BSR set to: 15
  7727                           ;inc\CANlib.h: 585: }
  7728                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7729  001682  AE60               	btfss	3936,7,c	;volatile
  7730  001684  0012               	return	
  7731                           
  7732                           ; BSR set to: 15
  7733                           ;inc\CANlib.h: 588: {
  7734                           ;inc\CANlib.h: 589: msg->identifier = 0;
  7735  001686  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7736  00168A  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7737  00168E  6ADE               	clrf	postinc2,c
  7738  001690  6ADE               	clrf	postinc2,c
  7739  001692  6ADE               	clrf	postinc2,c
  7740  001694  6ADD               	clrf	postdec2,c
  7741                           
  7742                           ; BSR set to: 15
  7743                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  7744  001696  EE20 F004          	lfsr	2,4
  7745  00169A  5025               	movf	CANreceiveMessage@msg,w,c
  7746  00169C  26D9               	addwf	fsr2l,f,c
  7747  00169E  5026               	movf	CANreceiveMessage@msg+1,w,c
  7748  0016A0  22DA               	addwfc	fsr2h,f,c
  7749  0016A2  CF66 FFDF          	movff	3942,indf2	;volatile
  7750                           
  7751                           ; BSR set to: 15
  7752                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  7753  0016A6  EE20 F005          	lfsr	2,5
  7754  0016AA  5025               	movf	CANreceiveMessage@msg,w,c
  7755  0016AC  26D9               	addwf	fsr2l,f,c
  7756  0016AE  5026               	movf	CANreceiveMessage@msg+1,w,c
  7757  0016B0  22DA               	addwfc	fsr2h,f,c
  7758  0016B2  CF67 FFDF          	movff	3943,indf2	;volatile
  7759                           
  7760                           ; BSR set to: 15
  7761                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  7762  0016B6  EE20 F006          	lfsr	2,6
  7763  0016BA  5025               	movf	CANreceiveMessage@msg,w,c
  7764  0016BC  26D9               	addwf	fsr2l,f,c
  7765  0016BE  5026               	movf	CANreceiveMessage@msg+1,w,c
  7766  0016C0  22DA               	addwfc	fsr2h,f,c
  7767  0016C2  CF68 FFDF          	movff	3944,indf2	;volatile
  7768                           
  7769                           ; BSR set to: 15
  7770                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  7771  0016C6  EE20 F007          	lfsr	2,7
  7772  0016CA  5025               	movf	CANreceiveMessage@msg,w,c
  7773  0016CC  26D9               	addwf	fsr2l,f,c
  7774  0016CE  5026               	movf	CANreceiveMessage@msg+1,w,c
  7775  0016D0  22DA               	addwfc	fsr2h,f,c
  7776  0016D2  CF69 FFDF          	movff	3945,indf2	;volatile
  7777                           
  7778                           ; BSR set to: 15
  7779                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  7780  0016D6  EE20 F008          	lfsr	2,8
  7781  0016DA  5025               	movf	CANreceiveMessage@msg,w,c
  7782  0016DC  26D9               	addwf	fsr2l,f,c
  7783  0016DE  5026               	movf	CANreceiveMessage@msg+1,w,c
  7784  0016E0  22DA               	addwfc	fsr2h,f,c
  7785  0016E2  CF6A FFDF          	movff	3946,indf2	;volatile
  7786                           
  7787                           ; BSR set to: 15
  7788                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  7789  0016E6  EE20 F009          	lfsr	2,9
  7790  0016EA  5025               	movf	CANreceiveMessage@msg,w,c
  7791  0016EC  26D9               	addwf	fsr2l,f,c
  7792  0016EE  5026               	movf	CANreceiveMessage@msg+1,w,c
  7793  0016F0  22DA               	addwfc	fsr2h,f,c
  7794  0016F2  CF6B FFDF          	movff	3947,indf2	;volatile
  7795                           
  7796                           ; BSR set to: 15
  7797                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  7798  0016F6  EE20 F00A          	lfsr	2,10
  7799  0016FA  5025               	movf	CANreceiveMessage@msg,w,c
  7800  0016FC  26D9               	addwf	fsr2l,f,c
  7801  0016FE  5026               	movf	CANreceiveMessage@msg+1,w,c
  7802  001700  22DA               	addwfc	fsr2h,f,c
  7803  001702  CF6C FFDF          	movff	3948,indf2	;volatile
  7804                           
  7805                           ; BSR set to: 15
  7806                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  7807  001706  EE20 F00B          	lfsr	2,11
  7808  00170A  5025               	movf	CANreceiveMessage@msg,w,c
  7809  00170C  26D9               	addwf	fsr2l,f,c
  7810  00170E  5026               	movf	CANreceiveMessage@msg+1,w,c
  7811  001710  22DA               	addwfc	fsr2h,f,c
  7812  001712  CF6D FFDF          	movff	3949,indf2	;volatile
  7813                           
  7814                           ; BSR set to: 15
  7815                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7816  001716  EE20 F00E          	lfsr	2,14
  7817  00171A  5025               	movf	CANreceiveMessage@msg,w,c
  7818  00171C  26D9               	addwf	fsr2l,f,c
  7819  00171E  5026               	movf	CANreceiveMessage@msg+1,w,c
  7820  001720  22DA               	addwfc	fsr2h,f,c
  7821  001722  AC65               	btfss	3941,6,c	;volatile
  7822  001724  D002               	goto	i1u368_20
  7823  001726  0E01               	movlw	1
  7824  001728  D001               	goto	i1u368_26
  7825  00172A                     i1u368_20:
  7826  00172A  0E00               	movlw	0
  7827  00172C                     i1u368_26:
  7828  00172C  6EDF               	movwf	indf2,c
  7829                           
  7830                           ; BSR set to: 15
  7831                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7832  00172E  EE20 F00D          	lfsr	2,13
  7833  001732  5025               	movf	CANreceiveMessage@msg,w,c
  7834  001734  26D9               	addwf	fsr2l,f,c
  7835  001736  5026               	movf	CANreceiveMessage@msg+1,w,c
  7836  001738  22DA               	addwfc	fsr2h,f,c
  7837  00173A  5065               	movf	3941,w,c	;volatile
  7838  00173C  0B0F               	andlw	15
  7839  00173E  6EDF               	movwf	indf2,c
  7840                           
  7841                           ; BSR set to: 15
  7842                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  7843  001740  EE20 F00C          	lfsr	2,12
  7844  001744  5025               	movf	CANreceiveMessage@msg,w,c
  7845  001746  26D9               	addwf	fsr2l,f,c
  7846  001748  5026               	movf	CANreceiveMessage@msg+1,w,c
  7847  00174A  22DA               	addwfc	fsr2h,f,c
  7848  00174C  A662               	btfss	3938,3,c	;volatile
  7849  00174E  D002               	goto	i1u369_20
  7850  001750  0E01               	movlw	1
  7851  001752  D001               	goto	i1u369_26
  7852  001754                     i1u369_20:
  7853  001754  0E00               	movlw	0
  7854  001756                     i1u369_26:
  7855  001756  6EDF               	movwf	indf2,c
  7856                           
  7857                           ; BSR set to: 15
  7858                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  7859  001758  B662               	btfsc	3938,3,c	;volatile
  7860  00175A  D043               	goto	i1l3356
  7861                           
  7862                           ; BSR set to: 15
  7863                           ;inc\CANlib.h: 606: {
  7864                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7865  00175C  CF61 F027          	movff	3937,??_CANreceiveMessage	;volatile
  7866  001760  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7867  001762  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7868  001764  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7869  001766  0E03               	movlw	3
  7870  001768                     i1u371_25:
  7871  001768  90D8               	bcf	status,0,c
  7872  00176A  3627               	rlcf	??_CANreceiveMessage,f,c
  7873  00176C  3628               	rlcf	??_CANreceiveMessage+1,f,c
  7874  00176E  3629               	rlcf	??_CANreceiveMessage+2,f,c
  7875  001770  362A               	rlcf	??_CANreceiveMessage+3,f,c
  7876  001772  2EE8               	decfsz	wreg,f,c
  7877  001774  D7F9               	goto	i1u371_25
  7878  001776  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7879  00177A  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7880  00177E  C027  FFDE         	movff	??_CANreceiveMessage,postinc2
  7881  001782  C028  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7882  001786  C029  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7883  00178A  C02A  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7884                           
  7885                           ; BSR set to: 15
  7886                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7887  00178E  3862               	swapf	3938,w,c	;volatile
  7888  001790  42E8               	rrncf	wreg,f,c
  7889  001792  0B07               	andlw	7
  7890  001794  0B07               	andlw	7
  7891  001796  6E30               	movwf	CANreceiveMessage@tamp,c
  7892                           
  7893                           ; BSR set to: 15
  7894                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  7895  001798  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7896  00179C  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7897  0017A0  CFDE F027          	movff	postinc2,??_CANreceiveMessage
  7898  0017A4  CFDE F028          	movff	postinc2,??_CANreceiveMessage+1
  7899  0017A8  CFDE F029          	movff	postinc2,??_CANreceiveMessage+2
  7900  0017AC  CFDE F02A          	movff	postinc2,??_CANreceiveMessage+3
  7901  0017B0  5030               	movf	CANreceiveMessage@tamp,w,c
  7902  0017B2  2427               	addwf	??_CANreceiveMessage,w,c
  7903  0017B4  6E2B               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7904  0017B6  0E00               	movlw	0
  7905  0017B8  2028               	addwfc	??_CANreceiveMessage+1,w,c
  7906  0017BA  6E2C               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7907  0017BC  0E00               	movlw	0
  7908  0017BE  2029               	addwfc	??_CANreceiveMessage+2,w,c
  7909  0017C0  6E2D               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7910  0017C2  0E00               	movlw	0
  7911  0017C4  202A               	addwfc	??_CANreceiveMessage+3,w,c
  7912  0017C6  6E2E               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7913  0017C8  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7914  0017CC  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7915  0017D0  C02B  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7916  0017D4  C02C  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7917  0017D8  C02D  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7918  0017DC  C02E  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7919                           
  7920                           ;inc\CANlib.h: 610: }
  7921  0017E0  D088               	goto	i1l3382
  7922  0017E2                     i1l3356:
  7923                           
  7924                           ; BSR set to: 15
  7925                           ;inc\CANlib.h: 611: else
  7926                           ;inc\CANlib.h: 612: {
  7927                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  7928  0017E2  CF64 F027          	movff	3940,??_CANreceiveMessage	;volatile
  7929  0017E6  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7930  0017E8  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7931  0017EA  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7932  0017EC  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7933  0017F0  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7934  0017F4  C027  FFDE         	movff	??_CANreceiveMessage,postinc2
  7935  0017F8  C028  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7936  0017FC  C029  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7937  001800  C02A  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7938                           
  7939                           ; BSR set to: 15
  7940                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7941  001804  CF63 F027          	movff	3939,??_CANreceiveMessage	;volatile
  7942  001808  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7943  00180A  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7944  00180C  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7945  00180E  C029  F02A         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7946  001812  C028  F029         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7947  001816  C027  F028         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7948  00181A  6A27               	clrf	??_CANreceiveMessage,c
  7949  00181C  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7950  001820  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7951  001824  5027               	movf	??_CANreceiveMessage,w,c
  7952  001826  26DE               	addwf	postinc2,f,c
  7953  001828  5028               	movf	??_CANreceiveMessage+1,w,c
  7954  00182A  22DE               	addwfc	postinc2,f,c
  7955  00182C  5029               	movf	??_CANreceiveMessage+2,w,c
  7956  00182E  22DE               	addwfc	postinc2,f,c
  7957  001830  502A               	movf	??_CANreceiveMessage+3,w,c
  7958  001832  22DE               	addwfc	postinc2,f,c
  7959                           
  7960                           ; BSR set to: 15
  7961                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  7962  001834  A062               	btfss	3938,0,c	;volatile
  7963  001836  D00C               	goto	i1l3364
  7964                           
  7965                           ; BSR set to: 15
  7966                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  7967  001838  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7968  00183C  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7969  001840  0E00               	movlw	0
  7970  001842  12DE               	iorwf	postinc2,f,c
  7971  001844  0E00               	movlw	0
  7972  001846  12DE               	iorwf	postinc2,f,c
  7973  001848  0E01               	movlw	1
  7974  00184A  12DE               	iorwf	postinc2,f,c
  7975  00184C  0E00               	movlw	0
  7976  00184E  12DE               	iorwf	postinc2,f,c
  7977  001850                     i1l3364:
  7978                           
  7979                           ; BSR set to: 15
  7980                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  7981  001850  A262               	btfss	3938,1,c	;volatile
  7982  001852  D00C               	goto	i1l3368
  7983                           
  7984                           ; BSR set to: 15
  7985                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  7986  001854  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7987  001858  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7988  00185C  0E00               	movlw	0
  7989  00185E  12DE               	iorwf	postinc2,f,c
  7990  001860  0E00               	movlw	0
  7991  001862  12DE               	iorwf	postinc2,f,c
  7992  001864  0E02               	movlw	2
  7993  001866  12DE               	iorwf	postinc2,f,c
  7994  001868  0E00               	movlw	0
  7995  00186A  12DE               	iorwf	postinc2,f,c
  7996  00186C                     i1l3368:
  7997                           
  7998                           ; BSR set to: 15
  7999                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8000  00186C  AA62               	btfss	3938,5,c	;volatile
  8001  00186E  D00C               	goto	i1l3372
  8002                           
  8003                           ; BSR set to: 15
  8004                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8005  001870  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8006  001874  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8007  001878  0E00               	movlw	0
  8008  00187A  12DE               	iorwf	postinc2,f,c
  8009  00187C  0E00               	movlw	0
  8010  00187E  12DE               	iorwf	postinc2,f,c
  8011  001880  0E04               	movlw	4
  8012  001882  12DE               	iorwf	postinc2,f,c
  8013  001884  0E00               	movlw	0
  8014  001886  12DE               	iorwf	postinc2,f,c
  8015  001888                     i1l3372:
  8016                           
  8017                           ; BSR set to: 15
  8018                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8019  001888  AC62               	btfss	3938,6,c	;volatile
  8020  00188A  D00C               	goto	i1l3376
  8021                           
  8022                           ; BSR set to: 15
  8023                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8024  00188C  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8025  001890  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8026  001894  0E00               	movlw	0
  8027  001896  12DE               	iorwf	postinc2,f,c
  8028  001898  0E00               	movlw	0
  8029  00189A  12DE               	iorwf	postinc2,f,c
  8030  00189C  0E08               	movlw	8
  8031  00189E  12DE               	iorwf	postinc2,f,c
  8032  0018A0  0E00               	movlw	0
  8033  0018A2  12DE               	iorwf	postinc2,f,c
  8034  0018A4                     i1l3376:
  8035                           
  8036                           ; BSR set to: 15
  8037                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8038  0018A4  AE62               	btfss	3938,7,c	;volatile
  8039  0018A6  D00C               	goto	i1l3380
  8040                           
  8041                           ; BSR set to: 15
  8042                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8043  0018A8  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8044  0018AC  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8045  0018B0  0E00               	movlw	0
  8046  0018B2  12DE               	iorwf	postinc2,f,c
  8047  0018B4  0E00               	movlw	0
  8048  0018B6  12DE               	iorwf	postinc2,f,c
  8049  0018B8  0E10               	movlw	16
  8050  0018BA  12DE               	iorwf	postinc2,f,c
  8051  0018BC  0E00               	movlw	0
  8052  0018BE  12DE               	iorwf	postinc2,f,c
  8053  0018C0                     i1l3380:
  8054                           
  8055                           ; BSR set to: 15
  8056                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8057  0018C0  CF61 F027          	movff	3937,??_CANreceiveMessage	;volatile
  8058  0018C4  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8059  0018C6  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8060  0018C8  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8061  0018CA  0E15               	movlw	21
  8062  0018CC                     i1u377_25:
  8063  0018CC  90D8               	bcf	status,0,c
  8064  0018CE  3627               	rlcf	??_CANreceiveMessage,f,c
  8065  0018D0  3628               	rlcf	??_CANreceiveMessage+1,f,c
  8066  0018D2  3629               	rlcf	??_CANreceiveMessage+2,f,c
  8067  0018D4  362A               	rlcf	??_CANreceiveMessage+3,f,c
  8068  0018D6  2EE8               	decfsz	wreg,f,c
  8069  0018D8  D7F9               	goto	i1u377_25
  8070  0018DA  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8071  0018DE  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8072  0018E2  5027               	movf	??_CANreceiveMessage,w,c
  8073  0018E4  12DE               	iorwf	postinc2,f,c
  8074  0018E6  5028               	movf	??_CANreceiveMessage+1,w,c
  8075  0018E8  12DE               	iorwf	postinc2,f,c
  8076  0018EA  5029               	movf	??_CANreceiveMessage+2,w,c
  8077  0018EC  12DE               	iorwf	postinc2,f,c
  8078  0018EE  502A               	movf	??_CANreceiveMessage+3,w,c
  8079  0018F0  12DE               	iorwf	postinc2,f,c
  8080  0018F2                     i1l3382:
  8081                           
  8082                           ; BSR set to: 15
  8083                           ;inc\CANlib.h: 629: }
  8084                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8085  0018F2  9E60               	bcf	3936,7,c	;volatile
  8086                           
  8087                           ; BSR set to: 15
  8088                           ;inc\CANlib.h: 632: return (error);
  8089                           ;	Return value of _CANreceiveMessage is never used
  8090  0018F4  0012               	return	
  8091  0018F6                     __end_of_CANreceiveMessage:
  8092                           	opt stack 0
  8093                           pclatu	equ	0xFFB
  8094                           pclath	equ	0xFFA
  8095                           tblptru	equ	0xFF8
  8096                           tblptrh	equ	0xFF7
  8097                           tblptrl	equ	0xFF6
  8098                           tablat	equ	0xFF5
  8099                           prodh	equ	0xFF4
  8100                           prodl	equ	0xFF3
  8101                           intcon	equ	0xFF2
  8102                           intcon2	equ	0xFF1
  8103                           postinc0	equ	0xFEE
  8104                           fsr0h	equ	0xFEA
  8105                           fsr0l	equ	0xFE9
  8106                           wreg	equ	0xFE8
  8107                           postdec1	equ	0xFE5
  8108                           fsr1h	equ	0xFE2
  8109                           fsr1l	equ	0xFE1
  8110                           bsr	equ	0xFE0
  8111                           indf2	equ	0xFDF
  8112                           postinc2	equ	0xFDE
  8113                           postdec2	equ	0xFDD
  8114                           fsr2h	equ	0xFDA
  8115                           fsr2l	equ	0xFD9
  8116                           status	equ	0xFD8
  8117                           
  8118 ;; *************** function _CANisRxReady *****************
  8119 ;; Defined at:
  8120 ;;		line 1163 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;		None
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;		None
  8125 ;; Return value:  Size  Location     Type
  8126 ;;                  1    wreg      unsigned char 
  8127 ;; Registers used:
  8128 ;;		wreg, status,2
  8129 ;; Tracked objects:
  8130 ;;		On entry : 0/0
  8131 ;;		On exit  : 0/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8134 ;;      Params:         0       0       0       0
  8135 ;;      Locals:         1       0       0       0
  8136 ;;      Temps:          0       0       0       0
  8137 ;;      Totals:         1       0       0       0
  8138 ;;Total ram usage:        1 bytes
  8139 ;; Hardware stack levels used:    1
  8140 ;; Hardware stack levels required when called:    2
  8141 ;; This function calls:
  8142 ;;		Nothing
  8143 ;; This function is called by:
  8144 ;;		_ISR_bassa
  8145 ;; This function uses a non-reentrant model
  8146 ;;
  8147                           
  8148                           	psect	text24
  8149  0024F8                     __ptext24:
  8150                           	opt stack 0
  8151  0024F8                     _CANisRxReady:
  8152                           	opt stack 24
  8153                           
  8154                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8155                           
  8156                           ; BSR set to: 15
  8157                           ;incstack = 0
  8158  0024F8  0E01               	movlw	1
  8159  0024FA  6E25               	movwf	_CANisRxReady$2912,c
  8160  0024FC  BE60               	btfsc	3936,7,c	;volatile
  8161  0024FE  D005               	goto	i1l559
  8162  002500  010F               	movlb	15	; () banked
  8163  002502  BF50               	btfsc	80,7,b	;volatile
  8164  002504  D002               	goto	i1l559
  8165                           
  8166                           ; BSR set to: 15
  8167  002506  0E00               	movlw	0
  8168  002508  6E25               	movwf	_CANisRxReady$2912,c
  8169  00250A                     i1l559:
  8170  00250A  5025               	movf	_CANisRxReady$2912,w,c
  8171  00250C  0012               	return	
  8172  00250E                     __end_of_CANisRxReady:
  8173                           	opt stack 0
  8174                           pclatu	equ	0xFFB
  8175                           pclath	equ	0xFFA
  8176                           tblptru	equ	0xFF8
  8177                           tblptrh	equ	0xFF7
  8178                           tblptrl	equ	0xFF6
  8179                           tablat	equ	0xFF5
  8180                           prodh	equ	0xFF4
  8181                           prodl	equ	0xFF3
  8182                           intcon	equ	0xFF2
  8183                           intcon2	equ	0xFF1
  8184                           postinc0	equ	0xFEE
  8185                           fsr0h	equ	0xFEA
  8186                           fsr0l	equ	0xFE9
  8187                           wreg	equ	0xFE8
  8188                           postdec1	equ	0xFE5
  8189                           fsr1h	equ	0xFE2
  8190                           fsr1l	equ	0xFE1
  8191                           bsr	equ	0xFE0
  8192                           indf2	equ	0xFDF
  8193                           postinc2	equ	0xFDE
  8194                           postdec2	equ	0xFDD
  8195                           fsr2h	equ	0xFDA
  8196                           fsr2l	equ	0xFD9
  8197                           status	equ	0xFD8
  8198                           
  8199 ;; *************** function _ISR_alta *****************
  8200 ;; Defined at:
  8201 ;;		line 56 in file "newmain.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;		None
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;		None
  8206 ;; Return value:  Size  Location     Type
  8207 ;;		None               void
  8208 ;; Registers used:
  8209 ;;		wreg, status,2, status,0, cstack
  8210 ;; Tracked objects:
  8211 ;;		On entry : 0/0
  8212 ;;		On exit  : 0/0
  8213 ;;		Unchanged: 0/0
  8214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8215 ;;      Params:         0       0       0       0
  8216 ;;      Locals:         0       0       0       0
  8217 ;;      Temps:          0      15       0       0
  8218 ;;      Totals:         0      15       0       0
  8219 ;;Total ram usage:       15 bytes
  8220 ;; Hardware stack levels used:    1
  8221 ;; Hardware stack levels required when called:    1
  8222 ;; This function calls:
  8223 ;;		i2_WriteTimer0
  8224 ;; This function is called by:
  8225 ;;		Interrupt level 2
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           	psect	intcode
  8230  000008                     __pintcode:
  8231                           	opt stack 0
  8232  000008                     _ISR_alta:
  8233                           	opt stack 24
  8234                           
  8235                           ;incstack = 0
  8236  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8237  00000A  CFFA F065          	movff	pclath,??_ISR_alta+1
  8238  00000E  CFFB F066          	movff	pclatu,??_ISR_alta+2
  8239  000012  ED69  F010         	call	int_func,f	;refresh shadow registers
  8240                           pclatu	equ	0xFFB
  8241                           pclath	equ	0xFFA
  8242                           tblptru	equ	0xFF8
  8243                           tblptrh	equ	0xFF7
  8244                           tblptrl	equ	0xFF6
  8245                           tablat	equ	0xFF5
  8246                           prodh	equ	0xFF4
  8247                           prodl	equ	0xFF3
  8248                           intcon	equ	0xFF2
  8249                           intcon2	equ	0xFF1
  8250                           postinc0	equ	0xFEE
  8251                           fsr0h	equ	0xFEA
  8252                           fsr0l	equ	0xFE9
  8253                           wreg	equ	0xFE8
  8254                           postdec1	equ	0xFE5
  8255                           fsr1h	equ	0xFE2
  8256                           fsr1l	equ	0xFE1
  8257                           bsr	equ	0xFE0
  8258                           indf2	equ	0xFDF
  8259                           postinc2	equ	0xFDE
  8260                           postdec2	equ	0xFDD
  8261                           fsr2h	equ	0xFDA
  8262                           fsr2l	equ	0xFD9
  8263                           status	equ	0xFD8
  8264                           
  8265                           	psect	intcode_body
  8266  0020D2                     __pintcode_body:
  8267                           	opt stack 24
  8268  0020D2                     int_func:
  8269                           	opt stack 24
  8270  0020D2  0006               	pop		; remove dummy address from shadow register refresh
  8271  0020D4  CFE9 F067          	movff	fsr0l,??_ISR_alta+3
  8272  0020D8  CFEA F068          	movff	fsr0h,??_ISR_alta+4
  8273  0020DC  CFE1 F069          	movff	fsr1l,??_ISR_alta+5
  8274  0020E0  CFE2 F06A          	movff	fsr1h,??_ISR_alta+6
  8275  0020E4  CFD9 F06B          	movff	fsr2l,??_ISR_alta+7
  8276  0020E8  CFDA F06C          	movff	fsr2h,??_ISR_alta+8
  8277  0020EC  CFF3 F06D          	movff	prodl,??_ISR_alta+9
  8278  0020F0  CFF4 F06E          	movff	prodh,??_ISR_alta+10
  8279  0020F4  CFF6 F06F          	movff	tblptrl,??_ISR_alta+11
  8280  0020F8  CFF7 F070          	movff	tblptrh,??_ISR_alta+12
  8281  0020FC  CFF8 F071          	movff	tblptru,??_ISR_alta+13
  8282  002100  CFF5 F072          	movff	tablat,??_ISR_alta+14
  8283                           
  8284                           ;newmain.c: 57: PORTCbits.RC0 = ~PORTCbits.RC0;
  8285  002104  A082               	btfss	3970,0,c	;volatile
  8286  002106  D002               	goto	i2u411_40
  8287  002108  0E01               	movlw	1
  8288  00210A  D001               	goto	i2u411_46
  8289  00210C                     i2u411_40:
  8290  00210C  0E00               	movlw	0
  8291  00210E                     i2u411_46:
  8292  00210E  0AFF               	xorlw	255
  8293  002110  0100               	movlb	0	; () banked
  8294  002112  6F64               	movwf	??_ISR_alta& (0+255),b
  8295  002114  5082               	movf	3970,w,c	;volatile
  8296  002116  0100               	movlb	0	; () banked
  8297  002118  1964               	xorwf	??_ISR_alta& (0+255),w,b
  8298  00211A  0BFE               	andlw	-2
  8299  00211C  1964               	xorwf	??_ISR_alta& (0+255),w,b
  8300  00211E  6E82               	movwf	3970,c	;volatile
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;newmain.c: 58: T0CONbits.TMR0ON = 0;
  8304  002120  9ED5               	bcf	4053,7,c	;volatile
  8305                           
  8306                           ; BSR set to: 0
  8307                           ;newmain.c: 59: if (PORTCbits.RC0 == 1) {
  8308  002122  A082               	btfss	3970,0,c	;volatile
  8309  002124  D007               	goto	i2l3668
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;newmain.c: 60: WriteTimer0(Ton);
  8313  002126  C00B  F060         	movff	_Ton,i2WriteTimer0@timer0
  8314  00212A  C00C  F061         	movff	_Ton+1,i2WriteTimer0@timer0+1
  8315  00212E  EC99  F012         	call	i2_WriteTimer0	;wreg free
  8316                           
  8317                           ;newmain.c: 61: T0CONbits.TMR0ON = 1;
  8318  002132  8ED5               	bsf	4053,7,c	;volatile
  8319  002134                     i2l3668:
  8320                           
  8321                           ;newmain.c: 62: }
  8322                           ;newmain.c: 63: if (PORTCbits.RC0 == 0) {
  8323  002134  B082               	btfsc	3970,0,c	;volatile
  8324  002136  D007               	goto	i2l3674
  8325                           
  8326                           ;newmain.c: 64: WriteTimer0(Toff);
  8327  002138  C009  F060         	movff	_Toff,i2WriteTimer0@timer0
  8328  00213C  C00A  F061         	movff	_Toff+1,i2WriteTimer0@timer0+1
  8329  002140  EC99  F012         	call	i2_WriteTimer0	;wreg free
  8330                           
  8331                           ;newmain.c: 65: T0CONbits.TMR0ON = 1;
  8332  002144  8ED5               	bsf	4053,7,c	;volatile
  8333  002146                     i2l3674:
  8334                           
  8335                           ;newmain.c: 66: }
  8336                           ;newmain.c: 68: INTCONbits.TMR0IF = 0;
  8337  002146  94F2               	bcf	intcon,2,c	;volatile
  8338  002148  C072  FFF5         	movff	??_ISR_alta+14,tablat
  8339  00214C  C071  FFF8         	movff	??_ISR_alta+13,tblptru
  8340  002150  C070  FFF7         	movff	??_ISR_alta+12,tblptrh
  8341  002154  C06F  FFF6         	movff	??_ISR_alta+11,tblptrl
  8342  002158  C06E  FFF4         	movff	??_ISR_alta+10,prodh
  8343  00215C  C06D  FFF3         	movff	??_ISR_alta+9,prodl
  8344  002160  C06C  FFDA         	movff	??_ISR_alta+8,fsr2h
  8345  002164  C06B  FFD9         	movff	??_ISR_alta+7,fsr2l
  8346  002168  C06A  FFE2         	movff	??_ISR_alta+6,fsr1h
  8347  00216C  C069  FFE1         	movff	??_ISR_alta+5,fsr1l
  8348  002170  C068  FFEA         	movff	??_ISR_alta+4,fsr0h
  8349  002174  C067  FFE9         	movff	??_ISR_alta+3,fsr0l
  8350  002178  C066  FFFB         	movff	??_ISR_alta+2,pclatu
  8351  00217C  C065  FFFA         	movff	??_ISR_alta+1,pclath
  8352  002180  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8353  002182  0011               	retfie		f
  8354  002184                     __end_of_ISR_alta:
  8355                           	opt stack 0
  8356                           pclatu	equ	0xFFB
  8357                           pclath	equ	0xFFA
  8358                           tblptru	equ	0xFF8
  8359                           tblptrh	equ	0xFF7
  8360                           tblptrl	equ	0xFF6
  8361                           tablat	equ	0xFF5
  8362                           prodh	equ	0xFF4
  8363                           prodl	equ	0xFF3
  8364                           intcon	equ	0xFF2
  8365                           intcon2	equ	0xFF1
  8366                           postinc0	equ	0xFEE
  8367                           fsr0h	equ	0xFEA
  8368                           fsr0l	equ	0xFE9
  8369                           wreg	equ	0xFE8
  8370                           postdec1	equ	0xFE5
  8371                           fsr1h	equ	0xFE2
  8372                           fsr1l	equ	0xFE1
  8373                           bsr	equ	0xFE0
  8374                           indf2	equ	0xFDF
  8375                           postinc2	equ	0xFDE
  8376                           postdec2	equ	0xFDD
  8377                           fsr2h	equ	0xFDA
  8378                           fsr2l	equ	0xFD9
  8379                           status	equ	0xFD8
  8380                           
  8381 ;; *************** function i2_WriteTimer0 *****************
  8382 ;; Defined at:
  8383 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;  timer0          2    0[BANK0 ] unsigned int 
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;  WriteTimer0     2    2[BANK0 ] struct Timers
  8388 ;; Return value:  Size  Location     Type
  8389 ;;		None               void
  8390 ;; Registers used:
  8391 ;;		None
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8397 ;;      Params:         0       2       0       0
  8398 ;;      Locals:         0       2       0       0
  8399 ;;      Temps:          0       0       0       0
  8400 ;;      Totals:         0       4       0       0
  8401 ;;Total ram usage:        4 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; This function calls:
  8404 ;;		Nothing
  8405 ;; This function is called by:
  8406 ;;		_ISR_alta
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text26
  8411  002532                     __ptext26:
  8412                           	opt stack 0
  8413  002532                     i2_WriteTimer0:
  8414                           	opt stack 24
  8415                           
  8416                           ;incstack = 0
  8417  002532  C060  F062         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  8418  002536  C061  F063         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  8419  00253A  C063  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  8420  00253E  C062  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  8421  002542  0012               	return		;funcret
  8422  002544                     __end_ofi2_WriteTimer0:
  8423                           	opt stack 0
  8424  0000                     pclatu	equ	0xFFB
  8425                           pclath	equ	0xFFA
  8426                           tblptru	equ	0xFF8
  8427                           tblptrh	equ	0xFF7
  8428                           tblptrl	equ	0xFF6
  8429                           tablat	equ	0xFF5
  8430                           prodh	equ	0xFF4
  8431                           prodl	equ	0xFF3
  8432                           intcon	equ	0xFF2
  8433                           intcon2	equ	0xFF1
  8434                           postinc0	equ	0xFEE
  8435                           fsr0h	equ	0xFEA
  8436                           fsr0l	equ	0xFE9
  8437                           wreg	equ	0xFE8
  8438                           postdec1	equ	0xFE5
  8439                           fsr1h	equ	0xFE2
  8440                           fsr1l	equ	0xFE1
  8441                           bsr	equ	0xFE0
  8442                           indf2	equ	0xFDF
  8443                           postinc2	equ	0xFDE
  8444                           postdec2	equ	0xFDD
  8445                           fsr2h	equ	0xFDA
  8446                           fsr2l	equ	0xFD9
  8447                           status	equ	0xFD8
  8448                           pclatu	equ	0xFFB
  8449                           pclath	equ	0xFFA
  8450                           tblptru	equ	0xFF8
  8451                           tblptrh	equ	0xFF7
  8452                           tblptrl	equ	0xFF6
  8453                           tablat	equ	0xFF5
  8454                           prodh	equ	0xFF4
  8455                           prodl	equ	0xFF3
  8456                           intcon	equ	0xFF2
  8457                           intcon2	equ	0xFF1
  8458                           postinc0	equ	0xFEE
  8459                           fsr0h	equ	0xFEA
  8460                           fsr0l	equ	0xFE9
  8461                           wreg	equ	0xFE8
  8462                           postdec1	equ	0xFE5
  8463                           fsr1h	equ	0xFE2
  8464                           fsr1l	equ	0xFE1
  8465                           bsr	equ	0xFE0
  8466                           indf2	equ	0xFDF
  8467                           postinc2	equ	0xFDE
  8468                           postdec2	equ	0xFDD
  8469                           fsr2h	equ	0xFDA
  8470                           fsr2l	equ	0xFD9
  8471                           status	equ	0xFD8
  8472                           
  8473                           	psect	param0
  8474  0000                     pclatu	equ	0xFFB
  8475                           pclath	equ	0xFFA
  8476                           tblptru	equ	0xFF8
  8477                           tblptrh	equ	0xFF7
  8478                           tblptrl	equ	0xFF6
  8479                           tablat	equ	0xFF5
  8480                           prodh	equ	0xFF4
  8481                           prodl	equ	0xFF3
  8482                           intcon	equ	0xFF2
  8483                           intcon2	equ	0xFF1
  8484                           postinc0	equ	0xFEE
  8485                           fsr0h	equ	0xFEA
  8486                           fsr0l	equ	0xFE9
  8487                           wreg	equ	0xFE8
  8488                           postdec1	equ	0xFE5
  8489                           fsr1h	equ	0xFE2
  8490                           fsr1l	equ	0xFE1
  8491                           bsr	equ	0xFE0
  8492                           indf2	equ	0xFDF
  8493                           postinc2	equ	0xFDE
  8494                           postdec2	equ	0xFDD
  8495                           fsr2h	equ	0xFDA
  8496                           fsr2l	equ	0xFD9
  8497                           status	equ	0xFD8
  8498                           
  8499                           	psect	temp
  8500  00004B                     btemp:
  8501                           	opt stack 0
  8502  00004B                     	ds	1
  8503  0000                     int$flags	set	btemp
  8504                           pclatu	equ	0xFFB
  8505                           pclath	equ	0xFFA
  8506                           tblptru	equ	0xFF8
  8507                           tblptrh	equ	0xFF7
  8508                           tblptrl	equ	0xFF6
  8509                           tablat	equ	0xFF5
  8510                           prodh	equ	0xFF4
  8511                           prodl	equ	0xFF3
  8512                           intcon	equ	0xFF2
  8513                           intcon2	equ	0xFF1
  8514                           postinc0	equ	0xFEE
  8515                           fsr0h	equ	0xFEA
  8516                           fsr0l	equ	0xFE9
  8517                           wreg	equ	0xFE8
  8518                           postdec1	equ	0xFE5
  8519                           fsr1h	equ	0xFE2
  8520                           fsr1l	equ	0xFE1
  8521                           bsr	equ	0xFE0
  8522                           indf2	equ	0xFDF
  8523                           postinc2	equ	0xFDE
  8524                           postdec2	equ	0xFDD
  8525                           fsr2h	equ	0xFDA
  8526                           fsr2l	equ	0xFD9
  8527                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      74
    BANK0           160     49      91
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->i1___lwdiv
    i1___lwdiv->___wmul

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _calibrazione->___lwdiv
    ___lldiv->___lmul

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->i2_WriteTimer0

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9822
                                             45 BANK0      4     4      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                        _WriteTimer0
                            ___lldiv
                             ___lmul
                       _calibrazione
            _configurazione_iniziale
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    2419
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2395
                                             19 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    6216
                      _CANInitialize
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             19 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             33 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibrazione                                         0     0      0     366
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     366
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     322
                                             19 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     290
                                             31 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     209
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           17    17      0    1790
                                             13 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
                             ___wmul
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (5) i1___lwdiv                                            7     3      4     214
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     415
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            15    15      0     166
                                              4 BANK0     15    15      0
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (7) i2_WriteTimer0                                        4     2      2     166
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _WriteTimer0
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _calibrazione
     _BusyADC
     _ConvertADC
     _ReadADC
     ___lwdiv
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenADC
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   ___wmul
   i1___lwdiv
     ___wmul (ARG)

 _ISR_alta (ROOT)
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     31      5B       4       56.9%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1E      4A       1       78.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A5       9        0.0%
DATA                 0      0      A5      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Dec 06 22:31:48 2015

              ??_CANisTXwarningON 0073              __end_of_CANSetFilter 0C5E  
                              _id 00A5                                bsr 000FE0  
             ___wmul@multiplicand 0027                       __CFG_BORV$3 000000  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000                               l400 1336  
                             l401 133A                               l402 1346  
                             l500 09CA                               l501 09CE  
                             l510 0ADA                               l502 09DA  
                             l430 1AF0                               l511 0AE6  
                             l431 1AF4                               l520 0BF2  
                             l512 0AEA                               l432 1B00  
                             l521 0BF6                               l513 0AF6  
                             l505 0AB6                               l441 1C08  
                             l433 1B04                               l361 0EE2  
                             l522 0C02                               l506 0ABA  
                             l442 1C0C                               l434 1B10  
                             l362 0C74                               l523 0C06  
                             l507 0AC6                               l443 1C18  
                             l435 1B14                               l371 0E2E  
                             l363 0C78                               l524 0C12  
                             l516 0BD2                               l508 0ACA  
                             l444 1C1C                               l436 1B20  
                             l356 1D50                               l380 0F84  
                             l372 0E32                               l364 0D70  
                             l517 0BD6                               l509 0AD6  
                             l461 0648                               l445 1C28  
                             l437 1B24                               l357 1D5A  
                             l381 0F8E                               l373 0E3E  
                             l365 0D00                               l518 0BE2  
                             l462 064C                               l446 1C2C  
                             l438 1B30                               l382 0F98  
                             l366 0D0A                               l519 0BE6  
                             l463 0658                               l447 1C38  
                             l391 117C                               l383 0FA2  
                             l367 0D14                               l480 07A2  
                             l472 0762                               l464 065C  
                             l448 1C3C                               l392 1180  
                             l376 1166                               l368 0D1E  
                             l473 0766                               l465 0668  
                             l449 1C48                               l393 1278  
                             l377 0EF8                               l490 08B2  
                             l474 0772                               l466 066C  
                             l554 24DC                               l394 1208  
                             l386 10B2                               l378 0EFC  
                             l491 08BE                               l483 087E  
                             l475 0776                               l467 0678  
                             l395 1212                               l387 10B6  
                             l379 0FF4                               l484 0882  
                             l476 0782                               l468 067C  
                             l396 121C                               l388 10C2  
                             l485 088E                               l477 0786  
                             l469 0688                               l397 1226  
                             l494 099A                               l486 0892  
                             l478 0792                               l495 099E  
                             l487 089E                               l479 0796  
                             l496 09AA                               l488 08A2  
                             l497 09AE                               l489 08AE  
                             l498 09BA                               l499 09BE  
                             l691 2288                      __CFG_CPB$OFF 000000  
                    __CFG_CPD$OFF 000000                               _Ton 000B  
            __size_of_WriteTimer0 0012                               _msg 0016  
                             wreg 000FE8             _currentSteering_array 0099  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            l1109 22FA                              l1056 20C0  
                            l3022 0E42                              l3016 0E22  
                            l2502 24EA                              l2520 19AE  
                            l3072 0FAC                              l3234 22AA  
                            l3500 205A                              l3236 22B6  
                            l3148 1230                              l3092 10A6  
                            l3246 22EC                              l3238 22BC  
                            l3174 134A                              l2536 1A64  
                            l3168 132A                              l2810 0908  
                            l2618 0216                              l2562 1B34  
                            l3098 10C6                              l3508 20AE  
                            l3460 2418                              l2804 08C2  
                            l2708 05B6                              l2636 02CE  
                            l2742 06D2                              l2654 0388  
                            l2736 068C                              l2672 0442  
                            l2568 1B7A                              l3472 2494  
                            l3616 1EF8                              l3482 2316  
                            l2906 0C16                              l2770 07A6  
                            l2690 04FC                              l2594 1C4C  
                            l2844 0A24                              l3486 233C  
                            l2838 09DE                              l2950 1D48  
                            l3496 2044                              l2872 0AFA  
                            l2776 07EC                              l2952 1D5E  
                            l3498 2054                              l2956 1D66  
                            l2878 0B40                              l2958 1DAA  
                            l2996 0D28                              u2105 198A  
                            u2130 19E0                              u3020 0C36  
                            u2300 1C6C                              u2220 1B54  
                            _LATA 000F89                              _LATB 000F8A  
                            u2135 19D4                              _LATC 000F8B  
                            _LATD 000F8C                              u3025 0C2A  
                            u2305 1C60                              u2225 1B48  
                            u2145 1A40                              _LATE 000F8D  
                            u2410 0304                              u2330 0192  
                            u2090 192A                              u3150 0D48  
                            u2415 02F8                              u2335 0186  
                            u2095 191E                              u3160 0D94  
                            u2505 04D8                              u2425 0364  
                            u2345 01F2                              u3305 1078  
                            u2530 0532                              u2450 03BE  
                            u2370 024A                              u3410 1250  
                            u3155 0D3C                              u2700 07C6  
                            u2620 06AC                              u3420 129C  
                            u3165 0D88                              u2535 0526  
                            u2455 03B2                              u2375 023E  
                            u3415 1244                              u3175 0DF4  
                            u3280 0FCC                              u2705 07BA  
                            u2625 06A0                              u2545 0592  
                            u2465 041E                              u2385 02AA  
                            u3425 1290                              u2490 0478  
                            u3290 1018                              u3435 12FC  
                            u3285 0FC0                              u2495 046C  
                            u3295 100C                              u3490 254C  
                            u2940 0B1A                              u2860 09FE  
                            u2780 08E2                              u2945 0B0E  
                            u2865 09F2                              u2785 08D6  
                            u3780 2558                              u3790 2564  
             __size_of_CANSetMask 039E                              _Toff 0009  
                            _main 1E5A                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 004B            __size_ofi2_WriteTimer0 0012  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 0154  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                   __end_of_BusyADC 2550  
                 __end_of_ReadADC 2520                  _CANOperationMode 24E2  
                 __end_of_OpenADC 228C        __size_of_CANreceiveMessage 050C  
                           ?_main 0025                   __end_of___lldiv 20D2  
                           _T0CON 000FD5                             _T3CON 000FB1  
                 __end_of___lwdiv 2304                             i1l408 1682  
                           i1l559 250A                             i1l639 010C  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
               _CANisRxReady$2912 0025                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000               ___lmul@multiplicand 0077  
              __size_of_ISR_bassa 013C                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 0085                  __end_of_ISR_alta 2184  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _timer 00AD                        _ConvertADC 2570  
                  __pbitbssCOMRAM 0250              __end_of_CANisRxReady 250E  
                           tablat 000FF5              __end_of_CANisTxReady 24E2  
                           status 000FD8                __size_ofi1___lwdiv 0052  
                  __CFG_PBADEN$ON 000000                   __initialization 23CC  
                    __end_of_main 2016                            ??_main 008D  
                   i2_WriteTimer0 2532                     __activetblptr 000002  
               _CANisTxReady$2910 0073                     _counter_array 0091  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _CANCON 000F6F  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
           __size_of_calibrazione 0046                   __CFG_BBSIZ$1024 000000  
                          i1l1109 23C2                            i1l3310 160E  
                          i1l3302 15D2                            i1l3320 167C  
                          i1l3314 162C                            i1l3306 15F0  
                          i1l3318 164A                            i1l3520 2390  
                          i1l3522 2398                            i1l3380 18C0  
                          i1l3372 1888                            i1l3364 1850  
                          i1l3356 17E2                            i1l3532 23B8  
                          i1l3524 239C                            i1l3382 18F2  
                          i1l3294 1562                            i1l3376 18A4  
                          i1l3368 186C                            i1l3574 009C  
                          i1l3590 00F2                            i1l3566 0066  
                          i1l3586 00EE                            i2l3674 2146  
                          i2l3668 2134                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F56                            _RXB0D5 000F6B  
                          _RXB1D1 000F57                            _RXB0D6 000F6C  
                          _RXB1D2 000F58                            _RXB0D7 000F6D  
                          _RXB1D3 000F59                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _TXB1D2 000F38  
                          _TXB0D6 000F4C                            _TXB1D3 000F39  
                          _TXB0D7 000F4D                            _TXB2D0 000F26  
                          _TXB1D4 000F3A                            _TXB2D1 000F27  
                          _TXB1D5 000F3B                            _TXB2D2 000F28  
                          _TXB1D6 000F3C                            _TXB2D3 000F29  
                          _TXB1D7 000F3D                            _TXB2D4 000F2A  
                          _TXB2D5 000F2B                            _TXB2D6 000F2C  
                          _TXB2D7 000F2D                CANsendMessage@data 0077  
              CANsendMessage@tamp 007F                         ??_BusyADC 0073  
                       ??_ReadADC 0075             __size_of_CANSetFilter 0B06  
                       ??_OpenADC 0075                    __CFG_XINST$OFF 000000  
               __end_of_ISR_bassa 0154                            ___lmul 2304  
                          ___wmul 2498                    __CFG_STVREN$ON 000000  
                       ??___lldiv 0087                         ??___lwdiv 0077  
                    ??_CANSetMask 0078                            _errore 0013  
                          clear_0 23D2                            clear_1 23E0  
        ?_configurazione_iniziale 0025                    ?i2_WriteTimer0 0060  
                 __CFG_BOREN$BOHW 000000                      _calibrazione 2414  
               __end_ofi1___lwdiv 23CC                      __pdataCOMRAM 0043  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                   _currentSteering 0047  
                    _CANSetFilter 0158                       ?_ConvertADC 0025  
                      __accesstop 0060           __end_of__initialization 2406  
              __end_of_CANSetMask 1C94                     ___rparam_used 000000  
       __size_of_CANisRXwarningON 000C                    __pcstackCOMRAM 0025  
                       ?_ISR_alta 0025             CANSetFilter@numBuffer 007C  
       __size_of_CANisTXwarningON 000C             __size_of_CANisRxReady 0016  
           __size_of_CANisTxReady 0024          __end_of_CANOperationMode 24F8  
                      __pbssBANK0 0091                        _data_array 00B3  
         __size_of_CANsendMessage 078C                           ?___lmul 0073  
                         ?___wmul 0025                        ??_ISR_alta 0064  
                 ??i2_WriteTimer0 0062                __size_of_send_data 003E  
                WriteTimer0@timer 0075                     ??_WriteTimer0 0075  
                  ___lmul@product 007B                      _CANisRxReady 24F8  
             __size_of_ConvertADC 0004                           _CANSTAT 000F6E  
                    _CANisTxReady 24BE                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01C6                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 007A                           _BusyADC 2544  
                         _ReadADC 250E               i2WriteTimer0@timer0 0060  
                      _correzione 0011                         _ADCResult 00B1  
                         _OpenADC 2210                           __Hparam 0000  
                         __Lparam 0000                   __size_of___lmul 0076  
                         ___lldiv 2016                   __size_of___wmul 0026  
                         ___lwdiv 228C              CANInitialize@propSeg 008A  
                         __pcinit 23CC                           __ramtop 0300  
                         __ptext0 1E5A                           __ptext1 245A  
                         __ptext2 0C5E                           __ptext3 24BE  
                         __ptext4 2184                           __ptext5 2210  
                         __ptext6 1C94                           __ptext7 18F6  
                         __ptext8 0158                           __ptext9 24E2  
                       _T0CONbits 000FD5                           _counter 0001  
               i1___lwdiv@divisor 002D                 i1___lwdiv@counter 0031  
                      _duty_cycle 00A1               __end_of_WriteTimer0 2532  
          CANreceiveMessage@error 002F                           _potenza 0045  
                  OpenADC@config2 0073                    __pintcode_body 20D2  
            end_of_initialization 2406                 __end_of_send_data 2498  
                   __Lmediumconst 0000                           int_func 20D2  
                _CANisRXwarningON 255C                     _CANInitialize 1C94  
                 ___lldiv@divisor 0083                   ___lldiv@counter 008B  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
                       _ISR_bassa 0018                         _PORTAbits 000F80  
                  CANSetMask@mask 0073                         _PORTCbits 000F82  
                  CANSetMask@tamp 007D                    CANSetMask@type 0077  
                _CANisTXwarningON 2550                         i1___lwdiv 237A  
                    ??_ConvertADC 0073  __size_of_configurazione_iniziale 008C  
             _previousTimeCounter 00A9           _clock_counter_reference 000F  
                  _CANsendMessage 0C5E                  CANInitialize@BRP 0084  
                CANInitialize@SJW 0083                    ?_CANInitialize 0081  
                  __end_of___lmul 237A                        ?_ISR_bassa 0025  
                  __end_of___wmul 24BE                     __pidataCOMRAM 2568  
               __size_of_ISR_alta 217C                       _WriteTimer0 2520  
              __end_of_ConvertADC 2574               start_initialization 23CC  
                      ?i1___lwdiv 002B               CANSetMask@numBuffer 007C  
          __end_of_CANsendMessage 13EA                 ?_CANOperationMode 0025  
              ??_CANOperationMode 0073        CANInitialize@FilterConfig1 008B  
      CANInitialize@FilterConfig2 008C                          ??___lmul 007B  
                        ??___wmul 0029                       _calibration 000D  
                __CFG_LPT1OSC$OFF 000000            CANInitialize@phaseSeg1 0081  
          CANInitialize@phaseSeg2 0082                       __pbssCOMRAM 0001  
                   __pcstackBANK0 0060                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72                   ?_CANsendMessage 0073  
                 ??_CANInitialize 0086                          ?_BusyADC 0025  
                        ?_ReadADC 0073                CANSetFilter@filter 0073  
               OpenADC@portconfig 0074                          ?_OpenADC 0073  
                  _theorySteering 0015                  ___lwdiv@dividend 0073  
                       __pintcode 0008                          ?___lldiv 007F  
                        ?___lwdiv 0073                       ??_ISR_bassa 0032  
                     __pintcodelo 0018             __end_ofi2_WriteTimer0 2544  
               WriteTimer0@timer0 0073          __end_of_CANisRXwarningON 2568  
                     _COMSTATbits 000F74                i2WriteTimer0@timer 0062  
                ___lwdiv@quotient 0077           _configurazione_iniziale 2184  
                     ??i1___lwdiv 002F             CANreceiveMessage@tamp 0030  
                  ___wmul@product 0029                     OpenADC@config 0077  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 0048  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                         _send_data 245A  
                        _PIE3bits 000FA3          __end_of_CANisTXwarningON 255C  
                        i1u402_20 009A                          i1u360_25 14E6  
                        i1u371_25 1768                          i1u357_20 14A2  
                        i1u357_26 14A4                          i1u358_20 14D0  
                        i1u366_25 1656                          i1u358_26 14D2  
                        i1u368_20 172A                          i1u368_26 172C  
                        i1u369_20 1754                          i1u377_25 18CC  
                        i1u369_26 1756                          i2u411_40 210C  
                        i2u411_46 210E                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                          _PIR3bits 000FA4  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                          _RXB0SIDL 000F62  
                        _RXF0EIDH 000F02                          _RXB1SIDH 000F51  
                        _RXF0EIDL 000F03                          _RXB1SIDL 000F52  
                        _RXF1EIDH 000F06                          _RXF1EIDL 000F07  
                        _RXF2EIDH 000F0A                      _pastSteering 0049  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _ISR_alta 0008  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                 ___wmul@multiplier 0025  
                   ?_calibrazione 0025                     ?_CANSetFilter 0073  
               ___lmul@multiplier 0073                       _INTCON2bits 000FF1  
                       copy_data0 23FA                        _CANCONbits 000F6F  
                        __Hparam0 0000                        ?_send_data 0025  
                __size_of_BusyADC 000C                  __size_of_ReadADC 0012  
                        __Lparam0 0000                      _RXB0SIDLbits 000F62  
                __size_of_OpenADC 007C                      _RXB1SIDLbits 000F52  
                      _CANSetMask 18F6                  __size_of___lldiv 00BC  
                __size_of___lwdiv 0078                      ?_WriteTimer0 0073  
                  ??_calibrazione 007A         ??_configurazione_iniziale 008D  
                    _RXF0SIDLbits 000F01                   ___lwdiv@divisor 0075  
                    _RXF1SIDLbits 000F05                   ___lwdiv@counter 0079  
                  ??_CANSetFilter 0078                          __ptext10 2414  
                        __ptext11 228C                          __ptext12 250E  
                        __ptext21 237A                          __ptext13 2570  
                        __ptext22 2498                          __ptext14 2544  
                        __ptext23 13EA                          __ptext15 2304  
                        __ptext24 24F8                          __ptext16 2016  
                        __ptext17 2520                          __ptext26 2532  
                        __ptext18 2550                          __ptext19 255C  
                    _RXF2SIDLbits 000F09                      _RXF3SIDLbits 000F0D  
                    _RXF4SIDLbits 000F11                i1___lwdiv@dividend 002B  
                    _RXF5SIDLbits 000F15          CANsendMessage@dataLength 0079  
                    _remote_frame 0250                     __size_of_main 01BC  
                        _limiteDx 0043              CANreceiveMessage@msg 0025  
                    _TXB0SIDLbits 000F42                      _TXB1SIDLbits 000F32  
                    _TXB2SIDLbits 000F22                          int$flags 004B  
       __size_of_CANOperationMode 0016                     ?_CANisRxReady 0025  
                   ?_CANisTxReady 0025                       _RXB0DLCbits 000F65  
              i1___lwdiv@quotient 002F                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 13EA  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 007B                ?_CANreceiveMessage 0025  
        CANsendMessage@identifier 0073                          intlevel1 0000  
                        intlevel2 0000                  CANSetFilter@tamp 007D  
                CANSetFilter@type 0077               ??_CANreceiveMessage 0027  
                ___lldiv@dividend 007F                       _TXB0DLCbits 000F45  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 0083                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 2210                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 0005  
            CANOperationMode@mode 0073                    ??_CANisRxReady 0025  
                     ?_CANSetMask 0073                    ??_CANisTxReady 0073  
       __end_of_CANreceiveMessage 18F6                  ___lldiv@quotient 0087  
               ?_CANisRXwarningON 0025                ??_CANisRXwarningON 0073  
            __end_of_calibrazione 245A             __end_of_CANInitialize 1E5A  
               ?_CANisTXwarningON 0025  
