

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Jan 20 14:40:00 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	param0,global,class=BANK0,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  0024C2                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _limiteDx
    49  0024C2  0078               	dw	120
    50                           
    51                           ;initializer for _potenza
    52  0024C4  0002               	dw	2
    53                           
    54                           ;initializer for _currentSteering
    55  0024C6  B4                 	db	180
    56                           
    57                           ;initializer for _delay_quartz_frequency_value
    58  0024C7  14                 	db	20
    59                           
    60                           ;initializer for _pastSteering
    61  0024C8  01                 	db	1
    62  0000                     _RXB1CON	set	3920
    63  0000                     _RXB1CONbits	set	3920
    64  0000                     _RXB1D0	set	3926
    65  0000                     _RXB1D1	set	3927
    66  0000                     _RXB1D2	set	3928
    67  0000                     _RXB1D3	set	3929
    68  0000                     _RXB1D4	set	3930
    69  0000                     _RXB1D5	set	3931
    70  0000                     _RXB1D6	set	3932
    71  0000                     _RXB1D7	set	3933
    72  0000                     _RXB1DLC	set	3925
    73  0000                     _RXB1DLCbits	set	3925
    74  0000                     _RXB1EIDH	set	3923
    75  0000                     _RXB1EIDL	set	3924
    76  0000                     _RXB1SIDH	set	3921
    77  0000                     _RXB1SIDL	set	3922
    78  0000                     _RXB1SIDLbits	set	3922
    79  0000                     _RXF0EIDH	set	3842
    80  0000                     _RXF0EIDL	set	3843
    81  0000                     _RXF0SIDH	set	3840
    82  0000                     _RXF0SIDL	set	3841
    83  0000                     _RXF0SIDLbits	set	3841
    84  0000                     _RXF1EIDH	set	3846
    85  0000                     _RXF1EIDL	set	3847
    86  0000                     _RXF1SIDH	set	3844
    87  0000                     _RXF1SIDL	set	3845
    88  0000                     _RXF1SIDLbits	set	3845
    89  0000                     _RXF2EIDH	set	3850
    90  0000                     _RXF2EIDL	set	3851
    91  0000                     _RXF2SIDH	set	3848
    92  0000                     _RXF2SIDL	set	3849
    93  0000                     _RXF2SIDLbits	set	3849
    94  0000                     _RXF3EIDH	set	3854
    95  0000                     _RXF3EIDL	set	3855
    96  0000                     _RXF3SIDH	set	3852
    97  0000                     _RXF3SIDL	set	3853
    98  0000                     _RXF3SIDLbits	set	3853
    99  0000                     _RXF4EIDH	set	3858
   100  0000                     _RXF4EIDL	set	3859
   101  0000                     _RXF4SIDH	set	3856
   102  0000                     _RXF4SIDL	set	3857
   103  0000                     _RXF4SIDLbits	set	3857
   104  0000                     _RXF5EIDH	set	3862
   105  0000                     _RXF5EIDL	set	3863
   106  0000                     _RXF5SIDH	set	3860
   107  0000                     _RXF5SIDL	set	3861
   108  0000                     _RXF5SIDLbits	set	3861
   109  0000                     _RXM0EIDH	set	3866
   110  0000                     _RXM0EIDL	set	3867
   111  0000                     _RXM0SIDH	set	3864
   112  0000                     _RXM0SIDL	set	3865
   113  0000                     _RXM0SIDLbits	set	3865
   114  0000                     _RXM1EIDH	set	3870
   115  0000                     _RXM1EIDL	set	3871
   116  0000                     _RXM1SIDH	set	3868
   117  0000                     _RXM1SIDL	set	3869
   118  0000                     _RXM1SIDLbits	set	3869
   119  0000                     _TXB0CONbits	set	3904
   120  0000                     _TXB0D0	set	3910
   121  0000                     _TXB0D1	set	3911
   122  0000                     _TXB0D2	set	3912
   123  0000                     _TXB0D3	set	3913
   124  0000                     _TXB0D4	set	3914
   125  0000                     _TXB0D5	set	3915
   126  0000                     _TXB0D6	set	3916
   127  0000                     _TXB0D7	set	3917
   128  0000                     _TXB0DLC	set	3909
   129  0000                     _TXB0DLCbits	set	3909
   130  0000                     _TXB0EIDH	set	3907
   131  0000                     _TXB0EIDL	set	3908
   132  0000                     _TXB0SIDH	set	3905
   133  0000                     _TXB0SIDL	set	3906
   134  0000                     _TXB0SIDLbits	set	3906
   135  0000                     _TXB1CONbits	set	3888
   136  0000                     _TXB1D0	set	3894
   137  0000                     _TXB1D1	set	3895
   138  0000                     _TXB1D2	set	3896
   139  0000                     _TXB1D3	set	3897
   140  0000                     _TXB1D4	set	3898
   141  0000                     _TXB1D5	set	3899
   142  0000                     _TXB1D6	set	3900
   143  0000                     _TXB1D7	set	3901
   144  0000                     _TXB1DLC	set	3893
   145  0000                     _TXB1DLCbits	set	3893
   146  0000                     _TXB1EIDH	set	3891
   147  0000                     _TXB1EIDL	set	3892
   148  0000                     _TXB1SIDH	set	3889
   149  0000                     _TXB1SIDL	set	3890
   150  0000                     _TXB1SIDLbits	set	3890
   151  0000                     _TXB2CONbits	set	3872
   152  0000                     _TXB2D0	set	3878
   153  0000                     _TXB2D1	set	3879
   154  0000                     _TXB2D2	set	3880
   155  0000                     _TXB2D3	set	3881
   156  0000                     _TXB2D4	set	3882
   157  0000                     _TXB2D5	set	3883
   158  0000                     _TXB2D6	set	3884
   159  0000                     _TXB2D7	set	3885
   160  0000                     _TXB2DLC	set	3877
   161  0000                     _TXB2DLCbits	set	3877
   162  0000                     _TXB2EIDH	set	3875
   163  0000                     _TXB2EIDL	set	3876
   164  0000                     _TXB2SIDH	set	3873
   165  0000                     _TXB2SIDL	set	3874
   166  0000                     _TXB2SIDLbits	set	3874
   167  0000                     _ADCON0	set	4034
   168  0000                     _ADCON0bits	set	4034
   169  0000                     _ADCON1	set	4033
   170  0000                     _ADCON2	set	4032
   171  0000                     _ADRESH	set	4036
   172  0000                     _ADRESL	set	4035
   173  0000                     _BRGCON1	set	3952
   174  0000                     _BRGCON2	set	3953
   175  0000                     _BRGCON2bits	set	3953
   176  0000                     _BRGCON3	set	3954
   177  0000                     _BRGCON3bits	set	3954
   178  0000                     _CANCON	set	3951
   179  0000                     _CANCONbits	set	3951
   180  0000                     _CANSTAT	set	3950
   181  0000                     _COMSTATbits	set	3956
   182  0000                     _INTCON2bits	set	4081
   183  0000                     _INTCONbits	set	4082
   184  0000                     _IPR2bits	set	4002
   185  0000                     _IPR3bits	set	4005
   186  0000                     _LATA	set	3977
   187  0000                     _LATB	set	3978
   188  0000                     _LATC	set	3979
   189  0000                     _LATD	set	3980
   190  0000                     _LATE	set	3981
   191  0000                     _PIE1bits	set	3997
   192  0000                     _PIE2bits	set	4000
   193  0000                     _PIE3bits	set	4003
   194  0000                     _PIR1bits	set	3998
   195  0000                     _PIR2bits	set	4001
   196  0000                     _PIR3bits	set	4004
   197  0000                     _PORTAbits	set	3968
   198  0000                     _PORTCbits	set	3970
   199  0000                     _RCONbits	set	4048
   200  0000                     _RXB0CON	set	3936
   201  0000                     _RXB0CONbits	set	3936
   202  0000                     _RXB0D0	set	3942
   203  0000                     _RXB0D1	set	3943
   204  0000                     _RXB0D2	set	3944
   205  0000                     _RXB0D3	set	3945
   206  0000                     _RXB0D4	set	3946
   207  0000                     _RXB0D5	set	3947
   208  0000                     _RXB0D6	set	3948
   209  0000                     _RXB0D7	set	3949
   210  0000                     _RXB0DLC	set	3941
   211  0000                     _RXB0DLCbits	set	3941
   212  0000                     _RXB0EIDH	set	3939
   213  0000                     _RXB0EIDL	set	3940
   214  0000                     _RXB0SIDH	set	3937
   215  0000                     _RXB0SIDL	set	3938
   216  0000                     _RXB0SIDLbits	set	3938
   217  0000                     _RXERRCNT	set	3957
   218  0000                     _T0CON	set	4053
   219  0000                     _T0CONbits	set	4053
   220  0000                     _T3CON	set	4017
   221  0000                     _TMR0H	set	4055
   222  0000                     _TMR0L	set	4054
   223  0000                     _TMR3H	set	4019
   224  0000                     _TMR3L	set	4018
   225  0000                     _TRISA	set	3986
   226  0000                     _TRISB	set	3987
   227  0000                     _TRISC	set	3988
   228  0000                     _TRISD	set	3989
   229  0000                     _TRISE	set	3990
   230  0000                     _TXERRCNT	set	3958
   231                           
   232                           ; #config settings
   233  0000                     
   234                           	psect	cinit
   235  002338                     __pcinit:
   236                           	opt stack 0
   237  002338                     start_initialization:
   238                           	opt stack 0
   239  002338                     __initialization:
   240                           	opt stack 0
   241                           
   242                           ; Clear objects allocated to BANK0 (45 bytes)
   243  002338  EE00  F091         	lfsr	0,__pbssBANK0
   244  00233C  0E2D               	movlw	45
   245  00233E                     clear_0:
   246  00233E  6AEE               	clrf	postinc0,c
   247  002340  06E8               	decf	wreg,f,c
   248  002342  E1FD               	bnz	clear_0
   249                           
   250                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   251  002344  6A47               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   252                           
   253                           ; Clear objects allocated to COMRAM (33 bytes)
   254  002346  EE00  F001         	lfsr	0,__pbssCOMRAM
   255  00234A  0E21               	movlw	33
   256  00234C                     clear_1:
   257  00234C  6AEE               	clrf	postinc0,c
   258  00234E  06E8               	decf	wreg,f,c
   259  002350  E1FD               	bnz	clear_1
   260                           
   261                           ; Initialize objects allocated to COMRAM (7 bytes)
   262                           ; load TBLPTR registers with __pidataCOMRAM
   263  002352  0EC2               	movlw	low __pidataCOMRAM
   264  002354  6EF6               	movwf	tblptrl,c
   265  002356  0E24               	movlw	high __pidataCOMRAM
   266  002358  6EF7               	movwf	tblptrh,c
   267  00235A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   268  00235C  6EF8               	movwf	tblptru,c
   269  00235E  EE00  F040         	lfsr	0,__pdataCOMRAM
   270  002362  EE10 F007          	lfsr	1,7
   271  002366                     copy_data0:
   272  002366  0009               	tblrd		*+
   273  002368  CFF5 FFEE          	movff	tablat,postinc0
   274  00236C  50E5               	movf	postdec1,w,c
   275  00236E  50E1               	movf	fsr1l,w,c
   276  002370  E1FA               	bnz	copy_data0
   277  002372                     end_of_initialization:
   278                           	opt stack 0
   279  002372                     __end_of__initialization:
   280                           	opt stack 0
   281  002372  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   282  002374  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   283  002376  0E00               	movlw	low (__Lmediumconst shr (0+16))
   284  002378  6EF8               	movwf	tblptru,c
   285  00237A  0100               	movlb	0
   286  00237C  EF2C  F00F         	goto	_main	;jump to C main() function
   287                           tblptru	equ	0xFF8
   288                           tblptrh	equ	0xFF7
   289                           tblptrl	equ	0xFF6
   290                           tablat	equ	0xFF5
   291                           postinc0	equ	0xFEE
   292                           wreg	equ	0xFE8
   293                           postdec1	equ	0xFE5
   294                           fsr1l	equ	0xFE1
   295                           
   296                           	psect	bitbssCOMRAM
   297  000238                     __pbitbssCOMRAM:
   298                           	opt stack 0
   299  000238                     _noChange:
   300                           	opt stack 0
   301  000238                     	ds	1
   302  000239                     _remote_frame:
   303                           	opt stack 0
   304  000239                     	ds	1
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           postdec1	equ	0xFE5
   312                           fsr1l	equ	0xFE1
   313                           
   314                           	psect	bssCOMRAM
   315  000001                     __pbssCOMRAM:
   316                           	opt stack 0
   317  000001                     _counter_array:
   318                           	opt stack 0
   319  000001                     	ds	8
   320  000009                     _counter:
   321                           	opt stack 0
   322  000009                     	ds	4
   323  00000D                     _previousTimeCounter:
   324                           	opt stack 0
   325  00000D                     	ds	4
   326  000011                     _timeCounter:
   327                           	opt stack 0
   328  000011                     	ds	4
   329  000015                     _Toff:
   330                           	opt stack 0
   331  000015                     	ds	2
   332  000017                     _Ton:
   333                           	opt stack 0
   334  000017                     	ds	2
   335  000019                     _calibration:
   336                           	opt stack 0
   337  000019                     	ds	2
   338  00001B                     _clock_counter_reference:
   339                           	opt stack 0
   340  00001B                     	ds	2
   341  00001D                     _correzione:
   342                           	opt stack 0
   343  00001D                     	ds	2
   344  00001F                     _errore:
   345                           	opt stack 0
   346  00001F                     	ds	2
   347  000021                     _theorySteering:
   348                           	opt stack 0
   349  000021                     	ds	1
   350                           tblptru	equ	0xFF8
   351                           tblptrh	equ	0xFF7
   352                           tblptrl	equ	0xFF6
   353                           tablat	equ	0xFF5
   354                           postinc0	equ	0xFEE
   355                           wreg	equ	0xFE8
   356                           postdec1	equ	0xFE5
   357                           fsr1l	equ	0xFE1
   358                           
   359                           	psect	dataCOMRAM
   360  000040                     __pdataCOMRAM:
   361                           	opt stack 0
   362  000040                     _limiteDx:
   363                           	opt stack 0
   364  000040                     	ds	2
   365  000042                     _potenza:
   366                           	opt stack 0
   367  000042                     	ds	2
   368  000044                     _currentSteering:
   369                           	opt stack 0
   370  000044                     	ds	1
   371  000045                     _delay_quartz_frequency_value:
   372                           	opt stack 0
   373  000045                     	ds	1
   374  000046                     _pastSteering:
   375                           	opt stack 0
   376  000046                     	ds	1
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           postdec1	equ	0xFE5
   384                           fsr1l	equ	0xFE1
   385                           
   386                           	psect	bssBANK0
   387  000091                     __pbssBANK0:
   388                           	opt stack 0
   389  000091                     _currentSteering_array:
   390                           	opt stack 0
   391  000091                     	ds	8
   392  000099                     _duty_cycle:
   393                           	opt stack 0
   394  000099                     	ds	4
   395  00009D                     _id:
   396                           	opt stack 0
   397  00009D                     	ds	4
   398  0000A1                     _timer:
   399                           	opt stack 0
   400  0000A1                     	ds	4
   401  0000A5                     _ADCResult:
   402                           	opt stack 0
   403  0000A5                     	ds	2
   404  0000A7                     _msg:
   405                           	opt stack 0
   406  0000A7                     	ds	15
   407  0000B6                     _data_array:
   408                           	opt stack 0
   409  0000B6                     	ds	8
   410                           tblptru	equ	0xFF8
   411                           tblptrh	equ	0xFF7
   412                           tblptrl	equ	0xFF6
   413                           tablat	equ	0xFF5
   414                           postinc0	equ	0xFEE
   415                           wreg	equ	0xFE8
   416                           postdec1	equ	0xFE5
   417                           fsr1l	equ	0xFE1
   418                           
   419                           	psect	cstackBANK0
   420  000060                     __pcstackBANK0:
   421                           	opt stack 0
   422  000060                     WriteTimer0@timer0:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x0
   426  000060                     	ds	2
   427  000062                     WriteTimer0@timer:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x2
   431  000062                     	ds	2
   432  000064                     ??_ISR_alta:
   433                           
   434                           ; 0 bytes @ 0x4
   435  000064                     	ds	15
   436  000073                     ?_ReadADC:
   437                           	opt stack 0
   438  000073                     ?___lwdiv:
   439                           	opt stack 0
   440  000073                     ?___lmul:
   441                           	opt stack 0
   442  000073                     CANOperationMode@mode:
   443                           	opt stack 0
   444  000073                     _CANisTxReady$2910:
   445                           	opt stack 0
   446  000073                     OpenADC@config2:
   447                           	opt stack 0
   448  000073                     ___lwdiv@dividend:
   449                           	opt stack 0
   450  000073                     CANsendMessage@identifier:
   451                           	opt stack 0
   452  000073                     CANSetMask@mask:
   453                           	opt stack 0
   454  000073                     CANSetFilter@filter:
   455                           	opt stack 0
   456  000073                     ___lmul@multiplier:
   457                           	opt stack 0
   458                           
   459                           ; 4 bytes @ 0x13
   460  000073                     	ds	1
   461  000074                     OpenADC@portconfig:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x14
   465  000074                     	ds	1
   466  000075                     ??_ReadADC:
   467  000075                     ??_OpenADC:
   468  000075                     ___lwdiv@divisor:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x15
   472  000075                     	ds	2
   473  000077                     CANSetMask@type:
   474                           	opt stack 0
   475  000077                     CANSetFilter@type:
   476                           	opt stack 0
   477  000077                     OpenADC@config:
   478                           	opt stack 0
   479  000077                     CANsendMessage@data:
   480                           	opt stack 0
   481  000077                     ___lwdiv@quotient:
   482                           	opt stack 0
   483  000077                     ___lmul@multiplicand:
   484                           	opt stack 0
   485                           
   486                           ; 4 bytes @ 0x17
   487  000077                     	ds	1
   488  000078                     ??_CANSetMask:
   489  000078                     ??_CANSetFilter:
   490                           
   491                           ; 0 bytes @ 0x18
   492  000078                     	ds	1
   493  000079                     CANsendMessage@dataLength:
   494                           	opt stack 0
   495  000079                     ___lwdiv@counter:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x19
   499  000079                     	ds	1
   500  00007A                     CANsendMessage@flags:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x1A
   504  00007A                     	ds	1
   505  00007B                     ??_CANsendMessage:
   506  00007B                     ___lmul@product:
   507                           	opt stack 0
   508                           
   509                           ; 4 bytes @ 0x1B
   510  00007B                     	ds	1
   511  00007C                     CANSetMask@numBuffer:
   512                           	opt stack 0
   513  00007C                     CANSetFilter@numBuffer:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x1C
   517  00007C                     	ds	1
   518  00007D                     CANSetMask@tamp:
   519                           	opt stack 0
   520  00007D                     CANSetFilter@tamp:
   521                           	opt stack 0
   522                           
   523                           ; 4 bytes @ 0x1D
   524  00007D                     	ds	2
   525  00007F                     ?___lldiv:
   526                           	opt stack 0
   527  00007F                     CANsendMessage@tamp:
   528                           	opt stack 0
   529  00007F                     ___lldiv@dividend:
   530                           	opt stack 0
   531                           
   532                           ; 4 bytes @ 0x1F
   533  00007F                     	ds	2
   534  000081                     CANInitialize@phaseSeg1:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x21
   538  000081                     	ds	1
   539  000082                     CANInitialize@phaseSeg2:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x22
   543  000082                     	ds	1
   544  000083                     CANInitialize@SJW:
   545                           	opt stack 0
   546  000083                     ___lldiv@divisor:
   547                           	opt stack 0
   548                           
   549                           ; 4 bytes @ 0x23
   550  000083                     	ds	1
   551  000084                     CANInitialize@BRP:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x24
   555  000084                     	ds	1
   556  000085                     CANInitialize@flags:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x25
   560  000085                     	ds	1
   561  000086                     ??_CANInitialize:
   562                           
   563                           ; 0 bytes @ 0x26
   564  000086                     	ds	1
   565  000087                     ___lldiv@quotient:
   566                           	opt stack 0
   567                           
   568                           ; 4 bytes @ 0x27
   569  000087                     	ds	3
   570  00008A                     CANInitialize@propSeg:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x2A
   574  00008A                     	ds	1
   575  00008B                     CANInitialize@FilterConfig1:
   576                           	opt stack 0
   577  00008B                     ___lldiv@counter:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x2B
   581  00008B                     	ds	1
   582  00008C                     CANInitialize@FilterConfig2:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x2C
   586  00008C                     	ds	1
   587  00008D                     ??_main:
   588                           
   589                           ; 0 bytes @ 0x2D
   590  00008D                     	ds	4
   591                           tblptru	equ	0xFF8
   592                           tblptrh	equ	0xFF7
   593                           tblptrl	equ	0xFF6
   594                           tablat	equ	0xFF5
   595                           postinc0	equ	0xFEE
   596                           wreg	equ	0xFE8
   597                           postdec1	equ	0xFE5
   598                           fsr1l	equ	0xFE1
   599                           
   600                           	psect	cstackCOMRAM
   601  000022                     __pcstackCOMRAM:
   602                           	opt stack 0
   603  000022                     ?___wmul:
   604                           	opt stack 0
   605  000022                     _CANisRxReady$2912:
   606                           	opt stack 0
   607  000022                     CANreceiveMessage@msg:
   608                           	opt stack 0
   609  000022                     ___wmul@multiplier:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x0
   613  000022                     	ds	2
   614  000024                     ??_CANreceiveMessage:
   615  000024                     ___wmul@multiplicand:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x2
   619  000024                     	ds	2
   620  000026                     ___wmul@product:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0x4
   624  000026                     	ds	2
   625  000028                     ?i1___lwdiv:
   626                           	opt stack 0
   627  000028                     i1___lwdiv@dividend:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x6
   631  000028                     	ds	2
   632  00002A                     i1___lwdiv@divisor:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x8
   636  00002A                     	ds	2
   637  00002C                     CANreceiveMessage@error:
   638                           	opt stack 0
   639  00002C                     i1___lwdiv@quotient:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0xA
   643  00002C                     	ds	1
   644  00002D                     CANreceiveMessage@tamp:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0xB
   648  00002D                     	ds	1
   649  00002E                     i1___lwdiv@counter:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0xC
   653  00002E                     	ds	1
   654  00002F                     ??_ISR_bassa:
   655                           
   656                           ; 0 bytes @ 0xD
   657  00002F                     	ds	17
   658                           tblptru	equ	0xFF8
   659                           tblptrh	equ	0xFF7
   660                           tblptrl	equ	0xFF6
   661                           tablat	equ	0xFF5
   662                           postinc0	equ	0xFEE
   663                           wreg	equ	0xFE8
   664                           postdec1	equ	0xFE5
   665                           fsr1l	equ	0xFE1
   666                           
   667 ;;
   668 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   669 ;;
   670 ;; *************** function _main *****************
   671 ;; Defined at:
   672 ;;		line 124 in file "newmain.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  2  643[None  ] int 
   679 ;; Registers used:
   680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   686 ;;      Params:         0       0       0       0
   687 ;;      Locals:         0       0       0       0
   688 ;;      Temps:          0       4       0       0
   689 ;;      Totals:         0       4       0       0
   690 ;;Total ram usage:        4 bytes
   691 ;; Hardware stack levels required when called:    7
   692 ;; This function calls:
   693 ;;		_CANisRXwarningON
   694 ;;		_CANisTXwarningON
   695 ;;		___lldiv
   696 ;;		___lmul
   697 ;;		_calibrazione
   698 ;;		_configurazione_iniziale
   699 ;;		_send_data
   700 ;; This function is called by:
   701 ;;		Startup code after reset
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text0
   706  001E58                     __ptext0:
   707                           	opt stack 0
   708  001E58                     _main:
   709                           	opt stack 24
   710                           
   711                           ;newmain.c: 125: configurazione_iniziale();
   712                           
   713                           ;incstack = 0
   714  001E58  EC76  F010         	call	_configurazione_iniziale	;wreg free
   715  001E5C                     l644:
   716                           
   717                           ;newmain.c: 127: calibrazione();
   718  001E5C  ECC0  F011         	call	_calibrazione	;wreg free
   719                           
   720                           ;newmain.c: 128: duty_cycle = currentSteering;
   721  001E60  5044               	movf	_currentSteering,w,c
   722  001E62  0100               	movlb	0	; () banked
   723  001E64  6F99               	movwf	_duty_cycle& (0+255),b
   724  001E66  6B9A               	clrf	(_duty_cycle+1)& (0+255),b
   725  001E68  6B9B               	clrf	(_duty_cycle+2)& (0+255),b
   726  001E6A  6B9C               	clrf	(_duty_cycle+3)& (0+255),b
   727                           
   728                           ; BSR set to: 0
   729                           ;newmain.c: 129: if (PORTCbits.RC0 == 0) {
   730  001E6C  B082               	btfsc	3970,0,c	;volatile
   731  001E6E  D7F6               	goto	l644
   732                           
   733                           ; BSR set to: 0
   734                           ;newmain.c: 130: timer = (((duty_cycle * 700) / 90) + 800) *2;
   735  001E70  C099  F073         	movff	_duty_cycle,___lmul@multiplier
   736  001E74  C09A  F074         	movff	_duty_cycle+1,___lmul@multiplier+1
   737  001E78  C09B  F075         	movff	_duty_cycle+2,___lmul@multiplier+2
   738  001E7C  C09C  F076         	movff	_duty_cycle+3,___lmul@multiplier+3
   739  001E80  0EBC               	movlw	188
   740  001E82  0100               	movlb	0	; () banked
   741  001E84  6F77               	movwf	___lmul@multiplicand& (0+255),b
   742  001E86  0E02               	movlw	2
   743  001E88  6F78               	movwf	(___lmul@multiplicand+1)& (0+255),b
   744  001E8A  0E00               	movlw	0
   745  001E8C  6F79               	movwf	(___lmul@multiplicand+2)& (0+255),b
   746  001E8E  0E00               	movlw	0
   747  001E90  6F7A               	movwf	(___lmul@multiplicand+3)& (0+255),b
   748  001E92  EC38  F011         	call	___lmul	;wreg free
   749  001E96  C073  F07F         	movff	?___lmul,___lldiv@dividend
   750  001E9A  C074  F080         	movff	?___lmul+1,___lldiv@dividend+1
   751  001E9E  C075  F081         	movff	?___lmul+2,___lldiv@dividend+2
   752  001EA2  C076  F082         	movff	?___lmul+3,___lldiv@dividend+3
   753  001EA6  0E5A               	movlw	90
   754  001EA8  0100               	movlb	0	; () banked
   755  001EAA  6F83               	movwf	___lldiv@divisor& (0+255),b
   756  001EAC  0E00               	movlw	0
   757  001EAE  6F84               	movwf	(___lldiv@divisor+1)& (0+255),b
   758  001EB0  0E00               	movlw	0
   759  001EB2  6F85               	movwf	(___lldiv@divisor+2)& (0+255),b
   760  001EB4  0E00               	movlw	0
   761  001EB6  6F86               	movwf	(___lldiv@divisor+3)& (0+255),b
   762  001EB8  ECBD  F00F         	call	___lldiv	;wreg free
   763  001EBC  90D8               	bcf	status,0,c
   764  001EBE  0100               	movlb	0	; () banked
   765  001EC0  357F               	rlcf	?___lldiv& (0+255),w,b
   766  001EC2  0100               	movlb	0	; () banked
   767  001EC4  6F8D               	movwf	??_main& (0+255),b
   768  001EC6  0100               	movlb	0	; () banked
   769  001EC8  3580               	rlcf	(?___lldiv+1)& (0+255),w,b
   770  001ECA  0100               	movlb	0	; () banked
   771  001ECC  6F8E               	movwf	(??_main+1)& (0+255),b
   772  001ECE  0100               	movlb	0	; () banked
   773  001ED0  3581               	rlcf	(?___lldiv+2)& (0+255),w,b
   774  001ED2  0100               	movlb	0	; () banked
   775  001ED4  6F8F               	movwf	(??_main+2)& (0+255),b
   776  001ED6  0100               	movlb	0	; () banked
   777  001ED8  3582               	rlcf	(?___lldiv+3)& (0+255),w,b
   778  001EDA  0100               	movlb	0	; () banked
   779  001EDC  6F90               	movwf	(??_main+3)& (0+255),b
   780  001EDE  0E40               	movlw	64
   781  001EE0  0100               	movlb	0	; () banked
   782  001EE2  258D               	addwf	??_main& (0+255),w,b
   783  001EE4  0100               	movlb	0	; () banked
   784  001EE6  6FA1               	movwf	_timer& (0+255),b
   785  001EE8  0E06               	movlw	6
   786  001EEA  0100               	movlb	0	; () banked
   787  001EEC  218E               	addwfc	(??_main+1)& (0+255),w,b
   788  001EEE  0100               	movlb	0	; () banked
   789  001EF0  6FA2               	movwf	(_timer+1)& (0+255),b
   790  001EF2  0E00               	movlw	0
   791  001EF4  0100               	movlb	0	; () banked
   792  001EF6  218F               	addwfc	(??_main+2)& (0+255),w,b
   793  001EF8  0100               	movlb	0	; () banked
   794  001EFA  6FA3               	movwf	(_timer+2)& (0+255),b
   795  001EFC  0E00               	movlw	0
   796  001EFE  0100               	movlb	0	; () banked
   797  001F00  2190               	addwfc	(??_main+3)& (0+255),w,b
   798  001F02  0100               	movlb	0	; () banked
   799  001F04  6FA4               	movwf	(_timer+3)& (0+255),b
   800                           
   801                           ; BSR set to: 0
   802                           ;newmain.c: 131: Ton = 65536 - timer;
   803  001F06  C0A1  F08D         	movff	_timer,??_main
   804  001F0A  C0A2  F08E         	movff	_timer+1,??_main+1
   805  001F0E  0100               	movlb	0	; () banked
   806  001F10  1F8D               	comf	??_main& (0+255),f,b
   807  001F12  1F8E               	comf	(??_main+1)& (0+255),f,b
   808  001F14  4B8D               	infsnz	??_main& (0+255),f,b
   809  001F16  2B8E               	incf	(??_main+1)& (0+255),f,b
   810  001F18  C08D  F017         	movff	??_main,_Ton
   811  001F1C  C08E  F018         	movff	??_main+1,_Ton+1
   812                           
   813                           ; BSR set to: 0
   814                           ;newmain.c: 132: Toff = 20000 - (timer / 2);
   815  001F20  C0A1  F08D         	movff	_timer,??_main
   816  001F24  C0A2  F08E         	movff	_timer+1,??_main+1
   817  001F28  C0A3  F08F         	movff	_timer+2,??_main+2
   818  001F2C  C0A4  F090         	movff	_timer+3,??_main+3
   819  001F30  0100               	movlb	0	; () banked
   820  001F32  90D8               	bcf	status,0,c
   821  001F34  3390               	rrcf	(??_main+3)& (0+255),f,b
   822  001F36  338F               	rrcf	(??_main+2)& (0+255),f,b
   823  001F38  338E               	rrcf	(??_main+1)& (0+255),f,b
   824  001F3A  338D               	rrcf	??_main& (0+255),f,b
   825  001F3C  0100               	movlb	0	; () banked
   826  001F3E  1F8D               	comf	??_main& (0+255),f,b
   827  001F40  1F8E               	comf	(??_main+1)& (0+255),f,b
   828  001F42  4B8D               	infsnz	??_main& (0+255),f,b
   829  001F44  2B8E               	incf	(??_main+1)& (0+255),f,b
   830  001F46  0E20               	movlw	32
   831  001F48  0100               	movlb	0	; () banked
   832  001F4A  258D               	addwf	??_main& (0+255),w,b
   833  001F4C  6E15               	movwf	_Toff,c
   834  001F4E  0E4E               	movlw	78
   835  001F50  0100               	movlb	0	; () banked
   836  001F52  218E               	addwfc	(??_main+1)& (0+255),w,b
   837  001F54  6E16               	movwf	_Toff+1,c
   838                           
   839                           ; BSR set to: 0
   840                           ;newmain.c: 133: Toff = (65536 - (Toff * 2));
   841  001F56  C015  F08D         	movff	_Toff,??_main
   842  001F5A  C016  F08E         	movff	_Toff+1,??_main+1
   843  001F5E  90D8               	bcf	status,0,c
   844  001F60  0100               	movlb	0	; () banked
   845  001F62  378D               	rlcf	??_main& (0+255),f,b
   846  001F64  378E               	rlcf	(??_main+1)& (0+255),f,b
   847  001F66  0100               	movlb	0	; () banked
   848  001F68  1F8D               	comf	??_main& (0+255),f,b
   849  001F6A  1F8E               	comf	(??_main+1)& (0+255),f,b
   850  001F6C  4B8D               	infsnz	??_main& (0+255),f,b
   851  001F6E  2B8E               	incf	(??_main+1)& (0+255),f,b
   852  001F70  C08D  F015         	movff	??_main,_Toff
   853  001F74  C08E  F016         	movff	??_main+1,_Toff+1
   854                           
   855                           ; BSR set to: 0
   856                           
   857                           ; BSR set to: 0
   858  001F78  D771               	goto	l644
   859  001F7A                     __end_of_main:
   860                           	opt stack 0
   861                           tblptru	equ	0xFF8
   862                           tblptrh	equ	0xFF7
   863                           tblptrl	equ	0xFF6
   864                           tablat	equ	0xFF5
   865                           postinc0	equ	0xFEE
   866                           wreg	equ	0xFE8
   867                           postdec1	equ	0xFE5
   868                           fsr1l	equ	0xFE1
   869                           status	equ	0xFD8
   870                           
   871 ;; *************** function _send_data *****************
   872 ;; Defined at:
   873 ;;		line 151 in file "newmain.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;		None               void
   880 ;; Registers used:
   881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   887 ;;      Params:         0       0       0       0
   888 ;;      Locals:         0       0       0       0
   889 ;;      Temps:          0       0       0       0
   890 ;;      Totals:         0       0       0       0
   891 ;;Total ram usage:        0 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    5
   894 ;; This function calls:
   895 ;;		_CANisTxReady
   896 ;;		_CANsendMessage
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text1
   903  0023C6                     __ptext1:
   904                           	opt stack 0
   905  0023C6                     _send_data:
   906                           	opt stack 25
   907                           
   908                           ;newmain.c: 152: if (CANisTxReady()) {
   909                           
   910                           ;incstack = 0
   911  0023C6  EC15  F012         	call	_CANisTxReady	;wreg free
   912  0023CA  0900               	iorlw	0
   913  0023CC  B4D8               	btfsc	status,2,c
   914  0023CE  0012               	return	
   915                           
   916                           ;newmain.c: 153: if (remote_frame == 1) {
   917  0023D0  A247               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
   918  0023D2  D016               	goto	l3492
   919                           
   920                           ;newmain.c: 155: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG &
   921                           ;newmain.c: 156: CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   922  0023D4  C09D  F073         	movff	_id,CANsendMessage@identifier
   923  0023D8  C09E  F074         	movff	_id+1,CANsendMessage@identifier+1
   924  0023DC  C09F  F075         	movff	_id+2,CANsendMessage@identifier+2
   925  0023E0  C0A0  F076         	movff	_id+3,CANsendMessage@identifier+3
   926  0023E4  0EB6               	movlw	low _data_array
   927  0023E6  0100               	movlb	0	; () banked
   928  0023E8  6F77               	movwf	CANsendMessage@data& (0+255),b
   929  0023EA  0E00               	movlw	high _data_array
   930  0023EC  0100               	movlb	0	; () banked
   931  0023EE  6F78               	movwf	(CANsendMessage@data+1)& (0+255),b
   932  0023F0  0E08               	movlw	8
   933  0023F2  0100               	movlb	0	; () banked
   934  0023F4  6F79               	movwf	CANsendMessage@dataLength& (0+255),b
   935  0023F6  0EBC               	movlw	188
   936  0023F8  0100               	movlb	0	; () banked
   937  0023FA  6F7A               	movwf	CANsendMessage@flags& (0+255),b
   938  0023FC  EC2E  F006         	call	_CANsendMessage	;wreg free
   939  002400                     l3492:
   940                           
   941                           ;newmain.c: 161: }
   942                           ;newmain.c: 162: remote_frame = 0;
   943  002400  9247               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
   944  002402  0012               	return	
   945  002404                     __end_of_send_data:
   946                           	opt stack 0
   947                           tblptru	equ	0xFF8
   948                           tblptrh	equ	0xFF7
   949                           tblptrl	equ	0xFF6
   950                           tablat	equ	0xFF5
   951                           postinc0	equ	0xFEE
   952                           wreg	equ	0xFE8
   953                           postdec1	equ	0xFE5
   954                           fsr1l	equ	0xFE1
   955                           status	equ	0xFD8
   956                           
   957 ;; *************** function _CANsendMessage *****************
   958 ;; Defined at:
   959 ;;		line 294 in file "../../Scuola/Triennio/Tesina/can\CANlib.h"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  identifier      4   19[BANK0 ] unsigned long 
   962 ;;  data            2   23[BANK0 ] PTR unsigned char 
   963 ;;		 -> data_array(8), 
   964 ;;  dataLength      1   25[BANK0 ] unsigned char 
   965 ;;  flags           1   26[BANK0 ] enum E16866
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  tamp            4   31[BANK0 ] unsigned long 
   968 ;; Return value:  Size  Location     Type
   969 ;;		None               void
   970 ;; Registers used:
   971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   977 ;;      Params:         0       8       0       0
   978 ;;      Locals:         0       4       0       0
   979 ;;      Temps:          0       4       0       0
   980 ;;      Totals:         0      16       0       0
   981 ;;Total ram usage:       16 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    4
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_send_data
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text2
   992  000C5C                     __ptext2:
   993                           	opt stack 0
   994  000C5C                     _CANsendMessage:
   995                           	opt stack 25
   996                           
   997                           ;can\CANlib.h: 296: unsigned long tamp;
   998                           ;can\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
   999                           
  1000                           ;incstack = 0
  1001  000C5C  010F               	movlb	15	; () banked
  1002  000C5E  B740               	btfsc	64,3,b	;volatile
  1003  000C60  D13F               	goto	l361
  1004                           
  1005                           ; BSR set to: 15
  1006                           ;can\CANlib.h: 299: { TXB0DLC = dataLength;
  1007  000C62  C079  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1008                           
  1009                           ;can\CANlib.h: 300: if (0b01000000 & flags)
  1010  000C66  0100               	movlb	0	; () banked
  1011  000C68  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1012  000C6A  D003               	goto	l362
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;can\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1016  000C6C  010F               	movlb	15	; () banked
  1017  000C6E  8D45               	bsf	69,6,b	;volatile
  1018  000C70  D002               	goto	l363
  1019  000C72                     l362:
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;can\CANlib.h: 302: else
  1023                           ;can\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1024  000C72  010F               	movlb	15	; () banked
  1025  000C74  9D45               	bcf	69,6,b	;volatile
  1026  000C76                     l363:
  1027                           
  1028                           ; BSR set to: 15
  1029                           ;can\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1030  000C76  0100               	movlb	0	; () banked
  1031  000C78  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1032  000C7A  D079               	goto	l364
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;can\CANlib.h: 306: {
  1036                           ;can\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1037  000C7C  0100               	movlb	0	; () banked
  1038  000C7E  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1039  000C80  0100               	movlb	0	; () banked
  1040  000C82  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1041  000C84  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1042  000C86  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1043  000C88  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1044                           
  1045                           ; BSR set to: 0
  1046                           ;can\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1047  000C8A  C07F  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;can\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1051  000C8E  0E00               	movlw	0
  1052  000C90  0100               	movlb	0	; () banked
  1053  000C92  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1054  000C94  0100               	movlb	0	; () banked
  1055  000C96  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1056  000C98  0EFF               	movlw	255
  1057  000C9A  0100               	movlb	0	; () banked
  1058  000C9C  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1059  000C9E  0100               	movlb	0	; () banked
  1060  000CA0  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1061  000CA2  0E00               	movlw	0
  1062  000CA4  0100               	movlb	0	; () banked
  1063  000CA6  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1064  000CA8  0100               	movlb	0	; () banked
  1065  000CAA  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1066  000CAC  0E00               	movlw	0
  1067  000CAE  0100               	movlb	0	; () banked
  1068  000CB0  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1069  000CB2  0100               	movlb	0	; () banked
  1070  000CB4  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;can\CANlib.h: 312: tamp = tamp >> 8;
  1074  000CB6  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1075  000CBA  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1076  000CBE  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1077  000CC2  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1078  000CC6  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1079  000CCA  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1080  000CCE  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1081  000CD2  0100               	movlb	0	; () banked
  1082  000CD4  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1083  000CD6  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1084  000CDA  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1085  000CDE  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1086  000CE2  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;can\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1090  000CE6  C07F  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;can\CANlib.h: 315: TXB0SIDL = 0x00;
  1094  000CEA  0E00               	movlw	0
  1095  000CEC  010F               	movlb	15	; () banked
  1096  000CEE  6F42               	movwf	66,b	;volatile
  1097                           
  1098                           ; BSR set to: 15
  1099                           ;can\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1100  000CF0  010F               	movlb	15	; () banked
  1101  000CF2  8742               	bsf	66,3,b	;volatile
  1102                           
  1103                           ; BSR set to: 15
  1104                           ;can\CANlib.h: 318: if (identifier & 0x00010000)
  1105  000CF4  0100               	movlb	0	; () banked
  1106  000CF6  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1107  000CF8  D002               	goto	l365
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;can\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1111  000CFA  010F               	movlb	15	; () banked
  1112  000CFC  8142               	bsf	66,0,b	;volatile
  1113  000CFE                     l365:
  1114                           
  1115                           ;can\CANlib.h: 320: if (identifier & 0x00020000)
  1116  000CFE  0100               	movlb	0	; () banked
  1117  000D00  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1118  000D02  D002               	goto	l366
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;can\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1122  000D04  010F               	movlb	15	; () banked
  1123  000D06  8342               	bsf	66,1,b	;volatile
  1124  000D08                     l366:
  1125                           
  1126                           ;can\CANlib.h: 322: if (identifier & 0x00040000)
  1127  000D08  0100               	movlb	0	; () banked
  1128  000D0A  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1129  000D0C  D002               	goto	l367
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;can\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1133  000D0E  010F               	movlb	15	; () banked
  1134  000D10  8B42               	bsf	66,5,b	;volatile
  1135  000D12                     l367:
  1136                           
  1137                           ;can\CANlib.h: 324: if (identifier & 0x00080000)
  1138  000D12  0100               	movlb	0	; () banked
  1139  000D14  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1140  000D16  D002               	goto	l368
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;can\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1144  000D18  010F               	movlb	15	; () banked
  1145  000D1A  8D42               	bsf	66,6,b	;volatile
  1146  000D1C                     l368:
  1147                           
  1148                           ;can\CANlib.h: 326: if (identifier & 0x00100000)
  1149  000D1C  0100               	movlb	0	; () banked
  1150  000D1E  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1151  000D20  D002               	goto	l2998
  1152                           
  1153                           ; BSR set to: 0
  1154                           ;can\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1155  000D22  010F               	movlb	15	; () banked
  1156  000D24  8F42               	bsf	66,7,b	;volatile
  1157  000D26                     l2998:
  1158                           
  1159                           ;can\CANlib.h: 329: tamp = (identifier >> 21);
  1160  000D26  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1161  000D2A  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1162  000D2E  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1163  000D32  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1164  000D36  0E16               	movlw	22
  1165  000D38  D006               	goto	u3150
  1166  000D3A                     u3155:
  1167  000D3A  0100               	movlb	0	; () banked
  1168  000D3C  90D8               	bcf	status,0,c
  1169  000D3E  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1170  000D40  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1171  000D42  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1172  000D44  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1173  000D46                     u3150:
  1174  000D46  2EE8               	decfsz	wreg,f,c
  1175  000D48  D7F8               	goto	u3155
  1176  000D4A  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1177  000D4E  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1178  000D52  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1179  000D56  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;can\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1183  000D5A  0100               	movlb	0	; () banked
  1184  000D5C  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1185  000D5E  0100               	movlb	0	; () banked
  1186  000D60  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1187  000D62  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1188  000D64  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1189  000D66  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;can\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1193  000D68  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1194                           
  1195                           ;can\CANlib.h: 332: }
  1196  000D6C  D059               	goto	l3018
  1197  000D6E                     l364:
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;can\CANlib.h: 334: else
  1201                           ;can\CANlib.h: 336: {
  1202                           ;can\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1203  000D6E  010F               	movlb	15	; () banked
  1204  000D70  9742               	bcf	66,3,b	;volatile
  1205                           
  1206                           ; BSR set to: 15
  1207                           ;can\CANlib.h: 339: tamp = (identifier >> 3);
  1208  000D72  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1209  000D76  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1210  000D7A  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1211  000D7E  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1212  000D82  0E04               	movlw	4
  1213  000D84  D006               	goto	u3160
  1214  000D86                     u3165:
  1215  000D86  0100               	movlb	0	; () banked
  1216  000D88  90D8               	bcf	status,0,c
  1217  000D8A  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1218  000D8C  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1219  000D8E  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1220  000D90  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1221  000D92                     u3160:
  1222  000D92  2EE8               	decfsz	wreg,f,c
  1223  000D94  D7F8               	goto	u3165
  1224  000D96  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1225  000D9A  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1226  000D9E  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1227  000DA2  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;can\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1231  000DA6  0100               	movlb	0	; () banked
  1232  000DA8  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1233  000DAA  0100               	movlb	0	; () banked
  1234  000DAC  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1235  000DAE  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1236  000DB0  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1237  000DB2  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;can\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1241  000DB4  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;can\CANlib.h: 343: tamp = identifier & 0x00000007;
  1245  000DB8  0E07               	movlw	7
  1246  000DBA  0100               	movlb	0	; () banked
  1247  000DBC  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1248  000DBE  0100               	movlb	0	; () banked
  1249  000DC0  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1250  000DC2  0E00               	movlw	0
  1251  000DC4  0100               	movlb	0	; () banked
  1252  000DC6  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1253  000DC8  0100               	movlb	0	; () banked
  1254  000DCA  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1255  000DCC  0E00               	movlw	0
  1256  000DCE  0100               	movlb	0	; () banked
  1257  000DD0  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1258  000DD2  0100               	movlb	0	; () banked
  1259  000DD4  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1260  000DD6  0E00               	movlw	0
  1261  000DD8  0100               	movlb	0	; () banked
  1262  000DDA  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1263  000DDC  0100               	movlb	0	; () banked
  1264  000DDE  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;can\CANlib.h: 344: tamp = tamp << 5;
  1268  000DE0  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1269  000DE4  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1270  000DE8  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1271  000DEC  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1272  000DF0  0E05               	movlw	5
  1273  000DF2                     u3175:
  1274  000DF2  90D8               	bcf	status,0,c
  1275  000DF4  0100               	movlb	0	; () banked
  1276  000DF6  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1277  000DF8  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1278  000DFA  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1279  000DFC  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1280  000DFE  2EE8               	decfsz	wreg,f,c
  1281  000E00  D7F8               	goto	u3175
  1282  000E02  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1283  000E06  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1284  000E0A  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1285  000E0E  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;can\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1289  000E12  010F               	movlb	15	; () banked
  1290  000E14  5142               	movf	66,w,b	;volatile
  1291  000E16  0B1F               	andlw	31
  1292  000E18  010F               	movlb	15	; () banked
  1293  000E1A  6F42               	movwf	66,b	;volatile
  1294                           
  1295                           ; BSR set to: 15
  1296                           ;can\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1297  000E1C  C07F  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1298  000E20                     l3018:
  1299                           
  1300                           ;can\CANlib.h: 347: }
  1301                           ;can\CANlib.h: 349: if (0b00000001 & flags)
  1302  000E20  0100               	movlb	0	; () banked
  1303  000E22  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1304  000E24  D003               	goto	l371
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;can\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1308  000E26  010F               	movlb	15	; () banked
  1309  000E28  8140               	bsf	64,0,b	;volatile
  1310  000E2A  D002               	goto	l372
  1311  000E2C                     l371:
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;can\CANlib.h: 351: else
  1315                           ;can\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1316  000E2C  010F               	movlb	15	; () banked
  1317  000E2E  9140               	bcf	64,0,b	;volatile
  1318  000E30                     l372:
  1319                           
  1320                           ; BSR set to: 15
  1321                           ;can\CANlib.h: 353: if (0b00000010 & flags)
  1322  000E30  0100               	movlb	0	; () banked
  1323  000E32  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1324  000E34  D003               	goto	l373
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;can\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1328  000E36  010F               	movlb	15	; () banked
  1329  000E38  8340               	bsf	64,1,b	;volatile
  1330  000E3A  D002               	goto	l3024
  1331  000E3C                     l373:
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;can\CANlib.h: 355: else
  1335                           ;can\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1336  000E3C  010F               	movlb	15	; () banked
  1337  000E3E  9340               	bcf	64,1,b	;volatile
  1338  000E40                     l3024:
  1339                           
  1340                           ; BSR set to: 15
  1341                           ;can\CANlib.h: 358: TXB0D0 = data[0];
  1342  000E40  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1343  000E44  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1344  000E48  50DF               	movf	indf2,w,c
  1345  000E4A  010F               	movlb	15	; () banked
  1346  000E4C  6F46               	movwf	70,b	;volatile
  1347                           
  1348                           ; BSR set to: 15
  1349                           ;can\CANlib.h: 359: TXB0D1 = data[1];
  1350  000E4E  0100               	movlb	0	; () banked
  1351  000E50  EE20 F001          	lfsr	2,1
  1352  000E54  5177               	movf	CANsendMessage@data& (0+255),w,b
  1353  000E56  26D9               	addwf	fsr2l,f,c
  1354  000E58  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1355  000E5A  22DA               	addwfc	fsr2h,f,c
  1356  000E5C  50DF               	movf	indf2,w,c
  1357  000E5E  010F               	movlb	15	; () banked
  1358  000E60  6F47               	movwf	71,b	;volatile
  1359                           
  1360                           ; BSR set to: 15
  1361                           ;can\CANlib.h: 360: TXB0D2 = data[2];
  1362  000E62  0100               	movlb	0	; () banked
  1363  000E64  EE20 F002          	lfsr	2,2
  1364  000E68  5177               	movf	CANsendMessage@data& (0+255),w,b
  1365  000E6A  26D9               	addwf	fsr2l,f,c
  1366  000E6C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1367  000E6E  22DA               	addwfc	fsr2h,f,c
  1368  000E70  50DF               	movf	indf2,w,c
  1369  000E72  010F               	movlb	15	; () banked
  1370  000E74  6F48               	movwf	72,b	;volatile
  1371                           
  1372                           ; BSR set to: 15
  1373                           ;can\CANlib.h: 361: TXB0D3 = data[3];
  1374  000E76  0100               	movlb	0	; () banked
  1375  000E78  EE20 F003          	lfsr	2,3
  1376  000E7C  5177               	movf	CANsendMessage@data& (0+255),w,b
  1377  000E7E  26D9               	addwf	fsr2l,f,c
  1378  000E80  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1379  000E82  22DA               	addwfc	fsr2h,f,c
  1380  000E84  50DF               	movf	indf2,w,c
  1381  000E86  010F               	movlb	15	; () banked
  1382  000E88  6F49               	movwf	73,b	;volatile
  1383                           
  1384                           ; BSR set to: 15
  1385                           ;can\CANlib.h: 362: TXB0D4 = data[4];
  1386  000E8A  0100               	movlb	0	; () banked
  1387  000E8C  EE20 F004          	lfsr	2,4
  1388  000E90  5177               	movf	CANsendMessage@data& (0+255),w,b
  1389  000E92  26D9               	addwf	fsr2l,f,c
  1390  000E94  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1391  000E96  22DA               	addwfc	fsr2h,f,c
  1392  000E98  50DF               	movf	indf2,w,c
  1393  000E9A  010F               	movlb	15	; () banked
  1394  000E9C  6F4A               	movwf	74,b	;volatile
  1395                           
  1396                           ; BSR set to: 15
  1397                           ;can\CANlib.h: 363: TXB0D5 = data[5];
  1398  000E9E  0100               	movlb	0	; () banked
  1399  000EA0  EE20 F005          	lfsr	2,5
  1400  000EA4  5177               	movf	CANsendMessage@data& (0+255),w,b
  1401  000EA6  26D9               	addwf	fsr2l,f,c
  1402  000EA8  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1403  000EAA  22DA               	addwfc	fsr2h,f,c
  1404  000EAC  50DF               	movf	indf2,w,c
  1405  000EAE  010F               	movlb	15	; () banked
  1406  000EB0  6F4B               	movwf	75,b	;volatile
  1407                           
  1408                           ; BSR set to: 15
  1409                           ;can\CANlib.h: 364: TXB0D6 = data[6];
  1410  000EB2  0100               	movlb	0	; () banked
  1411  000EB4  EE20 F006          	lfsr	2,6
  1412  000EB8  5177               	movf	CANsendMessage@data& (0+255),w,b
  1413  000EBA  26D9               	addwf	fsr2l,f,c
  1414  000EBC  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1415  000EBE  22DA               	addwfc	fsr2h,f,c
  1416  000EC0  50DF               	movf	indf2,w,c
  1417  000EC2  010F               	movlb	15	; () banked
  1418  000EC4  6F4C               	movwf	76,b	;volatile
  1419                           
  1420                           ; BSR set to: 15
  1421                           ;can\CANlib.h: 365: TXB0D7 = data[7];
  1422  000EC6  0100               	movlb	0	; () banked
  1423  000EC8  EE20 F007          	lfsr	2,7
  1424  000ECC  5177               	movf	CANsendMessage@data& (0+255),w,b
  1425  000ECE  26D9               	addwf	fsr2l,f,c
  1426  000ED0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1427  000ED2  22DA               	addwfc	fsr2h,f,c
  1428  000ED4  50DF               	movf	indf2,w,c
  1429  000ED6  010F               	movlb	15	; () banked
  1430  000ED8  6F4D               	movwf	77,b	;volatile
  1431                           
  1432                           ; BSR set to: 15
  1433                           ;can\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1434  000EDA  010F               	movlb	15	; () banked
  1435  000EDC  8740               	bsf	64,3,b	;volatile
  1436                           
  1437                           ; BSR set to: 15
  1438                           ;can\CANlib.h: 368: return;
  1439  000EDE  0012               	return	
  1440  000EE0                     l361:
  1441                           
  1442                           ; BSR set to: 15
  1443                           ;can\CANlib.h: 369: }
  1444                           ;can\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1445  000EE0  010F               	movlb	15	; () banked
  1446  000EE2  B730               	btfsc	48,3,b	;volatile
  1447  000EE4  D13F               	goto	l376
  1448                           
  1449                           ; BSR set to: 15
  1450                           ;can\CANlib.h: 374: { TXB1DLC = dataLength;
  1451  000EE6  C079  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1452                           
  1453                           ;can\CANlib.h: 376: if (0b01000000 & flags)
  1454  000EEA  0100               	movlb	0	; () banked
  1455  000EEC  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1456  000EEE  D003               	goto	l377
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;can\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1460  000EF0  010F               	movlb	15	; () banked
  1461  000EF2  8D35               	bsf	53,6,b	;volatile
  1462  000EF4  D002               	goto	l378
  1463  000EF6                     l377:
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;can\CANlib.h: 378: else
  1467                           ;can\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1468  000EF6  010F               	movlb	15	; () banked
  1469  000EF8  9D35               	bcf	53,6,b	;volatile
  1470  000EFA                     l378:
  1471                           
  1472                           ; BSR set to: 15
  1473                           ;can\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1474  000EFA  0100               	movlb	0	; () banked
  1475  000EFC  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1476  000EFE  D079               	goto	l379
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;can\CANlib.h: 382: {
  1480                           ;can\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1481  000F00  0100               	movlb	0	; () banked
  1482  000F02  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1483  000F04  0100               	movlb	0	; () banked
  1484  000F06  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1485  000F08  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1486  000F0A  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1487  000F0C  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;can\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1491  000F0E  C07F  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;can\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1495  000F12  0E00               	movlw	0
  1496  000F14  0100               	movlb	0	; () banked
  1497  000F16  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1498  000F18  0100               	movlb	0	; () banked
  1499  000F1A  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1500  000F1C  0EFF               	movlw	255
  1501  000F1E  0100               	movlb	0	; () banked
  1502  000F20  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1503  000F22  0100               	movlb	0	; () banked
  1504  000F24  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1505  000F26  0E00               	movlw	0
  1506  000F28  0100               	movlb	0	; () banked
  1507  000F2A  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1508  000F2C  0100               	movlb	0	; () banked
  1509  000F2E  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1510  000F30  0E00               	movlw	0
  1511  000F32  0100               	movlb	0	; () banked
  1512  000F34  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1513  000F36  0100               	movlb	0	; () banked
  1514  000F38  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;can\CANlib.h: 387: tamp = tamp >> 8;
  1518  000F3A  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1519  000F3E  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1520  000F42  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1521  000F46  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1522  000F4A  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1523  000F4E  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1524  000F52  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1525  000F56  0100               	movlb	0	; () banked
  1526  000F58  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1527  000F5A  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1528  000F5E  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1529  000F62  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1530  000F66  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;can\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1534  000F6A  C07F  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1535                           
  1536                           ; BSR set to: 0
  1537                           ;can\CANlib.h: 390: TXB1SIDL = 0x00;
  1538  000F6E  0E00               	movlw	0
  1539  000F70  010F               	movlb	15	; () banked
  1540  000F72  6F32               	movwf	50,b	;volatile
  1541                           
  1542                           ; BSR set to: 15
  1543                           ;can\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1544  000F74  010F               	movlb	15	; () banked
  1545  000F76  8732               	bsf	50,3,b	;volatile
  1546                           
  1547                           ; BSR set to: 15
  1548                           ;can\CANlib.h: 393: if (identifier & 0x00010000)
  1549  000F78  0100               	movlb	0	; () banked
  1550  000F7A  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1551  000F7C  D002               	goto	l380
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;can\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  1555  000F7E  010F               	movlb	15	; () banked
  1556  000F80  8132               	bsf	50,0,b	;volatile
  1557  000F82                     l380:
  1558                           
  1559                           ;can\CANlib.h: 395: if (identifier & 0x00020000)
  1560  000F82  0100               	movlb	0	; () banked
  1561  000F84  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1562  000F86  D002               	goto	l381
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;can\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  1566  000F88  010F               	movlb	15	; () banked
  1567  000F8A  8332               	bsf	50,1,b	;volatile
  1568  000F8C                     l381:
  1569                           
  1570                           ;can\CANlib.h: 397: if (identifier & 0x00040000)
  1571  000F8C  0100               	movlb	0	; () banked
  1572  000F8E  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1573  000F90  D002               	goto	l382
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;can\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  1577  000F92  010F               	movlb	15	; () banked
  1578  000F94  8B32               	bsf	50,5,b	;volatile
  1579  000F96                     l382:
  1580                           
  1581                           ;can\CANlib.h: 399: if (identifier & 0x00080000)
  1582  000F96  0100               	movlb	0	; () banked
  1583  000F98  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1584  000F9A  D002               	goto	l383
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;can\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  1588  000F9C  010F               	movlb	15	; () banked
  1589  000F9E  8D32               	bsf	50,6,b	;volatile
  1590  000FA0                     l383:
  1591                           
  1592                           ;can\CANlib.h: 401: if (identifier & 0x00100000)
  1593  000FA0  0100               	movlb	0	; () banked
  1594  000FA2  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1595  000FA4  D002               	goto	l3074
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;can\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  1599  000FA6  010F               	movlb	15	; () banked
  1600  000FA8  8F32               	bsf	50,7,b	;volatile
  1601  000FAA                     l3074:
  1602                           
  1603                           ;can\CANlib.h: 404: tamp = (identifier >> 21);
  1604  000FAA  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1605  000FAE  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1606  000FB2  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1607  000FB6  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1608  000FBA  0E16               	movlw	22
  1609  000FBC  D006               	goto	u3280
  1610  000FBE                     u3285:
  1611  000FBE  0100               	movlb	0	; () banked
  1612  000FC0  90D8               	bcf	status,0,c
  1613  000FC2  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1614  000FC4  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1615  000FC6  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1616  000FC8  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1617  000FCA                     u3280:
  1618  000FCA  2EE8               	decfsz	wreg,f,c
  1619  000FCC  D7F8               	goto	u3285
  1620  000FCE  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1621  000FD2  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1622  000FD6  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1623  000FDA  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;can\CANlib.h: 405: tamp = tamp & 0x000000FF;
  1627  000FDE  0100               	movlb	0	; () banked
  1628  000FE0  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1629  000FE2  0100               	movlb	0	; () banked
  1630  000FE4  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1631  000FE6  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1632  000FE8  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1633  000FEA  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;can\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  1637  000FEC  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1638                           
  1639                           ;can\CANlib.h: 407: }
  1640  000FF0  D059               	goto	l3094
  1641  000FF2                     l379:
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;can\CANlib.h: 409: else
  1645                           ;can\CANlib.h: 411: {
  1646                           ;can\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  1647  000FF2  010F               	movlb	15	; () banked
  1648  000FF4  9732               	bcf	50,3,b	;volatile
  1649                           
  1650                           ; BSR set to: 15
  1651                           ;can\CANlib.h: 414: tamp = (identifier >> 3);
  1652  000FF6  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1653  000FFA  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1654  000FFE  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1655  001002  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1656  001006  0E04               	movlw	4
  1657  001008  D006               	goto	u3290
  1658  00100A                     u3295:
  1659  00100A  0100               	movlb	0	; () banked
  1660  00100C  90D8               	bcf	status,0,c
  1661  00100E  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1662  001010  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1663  001012  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1664  001014  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1665  001016                     u3290:
  1666  001016  2EE8               	decfsz	wreg,f,c
  1667  001018  D7F8               	goto	u3295
  1668  00101A  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1669  00101E  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1670  001022  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1671  001026  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;can\CANlib.h: 415: tamp = tamp & 0x000000FF;
  1675  00102A  0100               	movlb	0	; () banked
  1676  00102C  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1677  00102E  0100               	movlb	0	; () banked
  1678  001030  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1679  001032  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1680  001034  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1681  001036  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;can\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  1685  001038  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;can\CANlib.h: 418: tamp = identifier & 0x00000007;
  1689  00103C  0E07               	movlw	7
  1690  00103E  0100               	movlb	0	; () banked
  1691  001040  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1692  001042  0100               	movlb	0	; () banked
  1693  001044  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1694  001046  0E00               	movlw	0
  1695  001048  0100               	movlb	0	; () banked
  1696  00104A  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1697  00104C  0100               	movlb	0	; () banked
  1698  00104E  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1699  001050  0E00               	movlw	0
  1700  001052  0100               	movlb	0	; () banked
  1701  001054  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1702  001056  0100               	movlb	0	; () banked
  1703  001058  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1704  00105A  0E00               	movlw	0
  1705  00105C  0100               	movlb	0	; () banked
  1706  00105E  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1707  001060  0100               	movlb	0	; () banked
  1708  001062  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;can\CANlib.h: 419: tamp = tamp << 5;
  1712  001064  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1713  001068  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1714  00106C  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1715  001070  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1716  001074  0E05               	movlw	5
  1717  001076                     u3305:
  1718  001076  90D8               	bcf	status,0,c
  1719  001078  0100               	movlb	0	; () banked
  1720  00107A  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1721  00107C  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1722  00107E  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1723  001080  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1724  001082  2EE8               	decfsz	wreg,f,c
  1725  001084  D7F8               	goto	u3305
  1726  001086  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1727  00108A  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1728  00108E  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1729  001092  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;can\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  1733  001096  010F               	movlb	15	; () banked
  1734  001098  5132               	movf	50,w,b	;volatile
  1735  00109A  0B1F               	andlw	31
  1736  00109C  010F               	movlb	15	; () banked
  1737  00109E  6F32               	movwf	50,b	;volatile
  1738                           
  1739                           ; BSR set to: 15
  1740                           ;can\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  1741  0010A0  C07F  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  1742  0010A4                     l3094:
  1743                           
  1744                           ;can\CANlib.h: 422: }
  1745                           ;can\CANlib.h: 424: if (0b00000001 & flags)
  1746  0010A4  0100               	movlb	0	; () banked
  1747  0010A6  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1748  0010A8  D003               	goto	l386
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;can\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  1752  0010AA  010F               	movlb	15	; () banked
  1753  0010AC  8130               	bsf	48,0,b	;volatile
  1754  0010AE  D002               	goto	l387
  1755  0010B0                     l386:
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;can\CANlib.h: 426: else
  1759                           ;can\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  1760  0010B0  010F               	movlb	15	; () banked
  1761  0010B2  9130               	bcf	48,0,b	;volatile
  1762  0010B4                     l387:
  1763                           
  1764                           ; BSR set to: 15
  1765                           ;can\CANlib.h: 428: if (0b00000010 & flags)
  1766  0010B4  0100               	movlb	0	; () banked
  1767  0010B6  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1768  0010B8  D003               	goto	l388
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;can\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  1772  0010BA  010F               	movlb	15	; () banked
  1773  0010BC  8330               	bsf	48,1,b	;volatile
  1774  0010BE  D002               	goto	l3100
  1775  0010C0                     l388:
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;can\CANlib.h: 430: else
  1779                           ;can\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  1780  0010C0  010F               	movlb	15	; () banked
  1781  0010C2  9330               	bcf	48,1,b	;volatile
  1782  0010C4                     l3100:
  1783                           
  1784                           ; BSR set to: 15
  1785                           ;can\CANlib.h: 433: TXB1D0 = data[0];
  1786  0010C4  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1787  0010C8  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1788  0010CC  50DF               	movf	indf2,w,c
  1789  0010CE  010F               	movlb	15	; () banked
  1790  0010D0  6F36               	movwf	54,b	;volatile
  1791                           
  1792                           ; BSR set to: 15
  1793                           ;can\CANlib.h: 434: TXB1D1 = data[1];
  1794  0010D2  0100               	movlb	0	; () banked
  1795  0010D4  EE20 F001          	lfsr	2,1
  1796  0010D8  5177               	movf	CANsendMessage@data& (0+255),w,b
  1797  0010DA  26D9               	addwf	fsr2l,f,c
  1798  0010DC  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1799  0010DE  22DA               	addwfc	fsr2h,f,c
  1800  0010E0  50DF               	movf	indf2,w,c
  1801  0010E2  010F               	movlb	15	; () banked
  1802  0010E4  6F37               	movwf	55,b	;volatile
  1803                           
  1804                           ; BSR set to: 15
  1805                           ;can\CANlib.h: 435: TXB1D2 = data[2];
  1806  0010E6  0100               	movlb	0	; () banked
  1807  0010E8  EE20 F002          	lfsr	2,2
  1808  0010EC  5177               	movf	CANsendMessage@data& (0+255),w,b
  1809  0010EE  26D9               	addwf	fsr2l,f,c
  1810  0010F0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1811  0010F2  22DA               	addwfc	fsr2h,f,c
  1812  0010F4  50DF               	movf	indf2,w,c
  1813  0010F6  010F               	movlb	15	; () banked
  1814  0010F8  6F38               	movwf	56,b	;volatile
  1815                           
  1816                           ; BSR set to: 15
  1817                           ;can\CANlib.h: 436: TXB1D3 = data[3];
  1818  0010FA  0100               	movlb	0	; () banked
  1819  0010FC  EE20 F003          	lfsr	2,3
  1820  001100  5177               	movf	CANsendMessage@data& (0+255),w,b
  1821  001102  26D9               	addwf	fsr2l,f,c
  1822  001104  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1823  001106  22DA               	addwfc	fsr2h,f,c
  1824  001108  50DF               	movf	indf2,w,c
  1825  00110A  010F               	movlb	15	; () banked
  1826  00110C  6F39               	movwf	57,b	;volatile
  1827                           
  1828                           ; BSR set to: 15
  1829                           ;can\CANlib.h: 437: TXB1D4 = data[4];
  1830  00110E  0100               	movlb	0	; () banked
  1831  001110  EE20 F004          	lfsr	2,4
  1832  001114  5177               	movf	CANsendMessage@data& (0+255),w,b
  1833  001116  26D9               	addwf	fsr2l,f,c
  1834  001118  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1835  00111A  22DA               	addwfc	fsr2h,f,c
  1836  00111C  50DF               	movf	indf2,w,c
  1837  00111E  010F               	movlb	15	; () banked
  1838  001120  6F3A               	movwf	58,b	;volatile
  1839                           
  1840                           ; BSR set to: 15
  1841                           ;can\CANlib.h: 438: TXB1D5 = data[5];
  1842  001122  0100               	movlb	0	; () banked
  1843  001124  EE20 F005          	lfsr	2,5
  1844  001128  5177               	movf	CANsendMessage@data& (0+255),w,b
  1845  00112A  26D9               	addwf	fsr2l,f,c
  1846  00112C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1847  00112E  22DA               	addwfc	fsr2h,f,c
  1848  001130  50DF               	movf	indf2,w,c
  1849  001132  010F               	movlb	15	; () banked
  1850  001134  6F3B               	movwf	59,b	;volatile
  1851                           
  1852                           ; BSR set to: 15
  1853                           ;can\CANlib.h: 439: TXB1D6 = data[6];
  1854  001136  0100               	movlb	0	; () banked
  1855  001138  EE20 F006          	lfsr	2,6
  1856  00113C  5177               	movf	CANsendMessage@data& (0+255),w,b
  1857  00113E  26D9               	addwf	fsr2l,f,c
  1858  001140  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1859  001142  22DA               	addwfc	fsr2h,f,c
  1860  001144  50DF               	movf	indf2,w,c
  1861  001146  010F               	movlb	15	; () banked
  1862  001148  6F3C               	movwf	60,b	;volatile
  1863                           
  1864                           ; BSR set to: 15
  1865                           ;can\CANlib.h: 440: TXB1D7 = data[7];
  1866  00114A  0100               	movlb	0	; () banked
  1867  00114C  EE20 F007          	lfsr	2,7
  1868  001150  5177               	movf	CANsendMessage@data& (0+255),w,b
  1869  001152  26D9               	addwf	fsr2l,f,c
  1870  001154  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1871  001156  22DA               	addwfc	fsr2h,f,c
  1872  001158  50DF               	movf	indf2,w,c
  1873  00115A  010F               	movlb	15	; () banked
  1874  00115C  6F3D               	movwf	61,b	;volatile
  1875                           
  1876                           ; BSR set to: 15
  1877                           ;can\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  1878  00115E  010F               	movlb	15	; () banked
  1879  001160  8730               	bsf	48,3,b	;volatile
  1880                           
  1881                           ; BSR set to: 15
  1882                           ;can\CANlib.h: 444: return;
  1883  001162  0012               	return	
  1884  001164                     l376:
  1885                           
  1886                           ; BSR set to: 15
  1887                           ;can\CANlib.h: 445: }
  1888                           ;can\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  1889  001164  010F               	movlb	15	; () banked
  1890  001166  B720               	btfsc	32,3,b	;volatile
  1891  001168  0012               	return	
  1892                           
  1893                           ; BSR set to: 15
  1894                           ;can\CANlib.h: 450: { TXB2DLC = dataLength;
  1895  00116A  C079  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  1896                           
  1897                           ;can\CANlib.h: 452: if (0b01000000 & flags)
  1898  00116E  0100               	movlb	0	; () banked
  1899  001170  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1900  001172  D003               	goto	l391
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;can\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  1904  001174  010F               	movlb	15	; () banked
  1905  001176  8D25               	bsf	37,6,b	;volatile
  1906  001178  D002               	goto	l392
  1907  00117A                     l391:
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;can\CANlib.h: 454: else
  1911                           ;can\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  1912  00117A  010F               	movlb	15	; () banked
  1913  00117C  9D25               	bcf	37,6,b	;volatile
  1914  00117E                     l392:
  1915                           
  1916                           ; BSR set to: 15
  1917                           ;can\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  1918  00117E  0100               	movlb	0	; () banked
  1919  001180  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1920  001182  D079               	goto	l393
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;can\CANlib.h: 458: {
  1924                           ;can\CANlib.h: 459: tamp = identifier & 0x000000FF;
  1925  001184  0100               	movlb	0	; () banked
  1926  001186  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1927  001188  0100               	movlb	0	; () banked
  1928  00118A  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1929  00118C  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1930  00118E  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1931  001190  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;can\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  1935  001192  C07F  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;can\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  1939  001196  0E00               	movlw	0
  1940  001198  0100               	movlb	0	; () banked
  1941  00119A  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1942  00119C  0100               	movlb	0	; () banked
  1943  00119E  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1944  0011A0  0EFF               	movlw	255
  1945  0011A2  0100               	movlb	0	; () banked
  1946  0011A4  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1947  0011A6  0100               	movlb	0	; () banked
  1948  0011A8  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1949  0011AA  0E00               	movlw	0
  1950  0011AC  0100               	movlb	0	; () banked
  1951  0011AE  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1952  0011B0  0100               	movlb	0	; () banked
  1953  0011B2  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1954  0011B4  0E00               	movlw	0
  1955  0011B6  0100               	movlb	0	; () banked
  1956  0011B8  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1957  0011BA  0100               	movlb	0	; () banked
  1958  0011BC  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;can\CANlib.h: 463: tamp = tamp >> 8;
  1962  0011BE  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1963  0011C2  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1964  0011C6  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1965  0011CA  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1966  0011CE  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1967  0011D2  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1968  0011D6  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1969  0011DA  0100               	movlb	0	; () banked
  1970  0011DC  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1971  0011DE  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1972  0011E2  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1973  0011E6  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1974  0011EA  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;can\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  1978  0011EE  C07F  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;can\CANlib.h: 466: TXB2SIDL = 0x00;
  1982  0011F2  0E00               	movlw	0
  1983  0011F4  010F               	movlb	15	; () banked
  1984  0011F6  6F22               	movwf	34,b	;volatile
  1985                           
  1986                           ; BSR set to: 15
  1987                           ;can\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  1988  0011F8  010F               	movlb	15	; () banked
  1989  0011FA  8722               	bsf	34,3,b	;volatile
  1990                           
  1991                           ; BSR set to: 15
  1992                           ;can\CANlib.h: 469: if (identifier & 0x00010000)
  1993  0011FC  0100               	movlb	0	; () banked
  1994  0011FE  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1995  001200  D002               	goto	l394
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;can\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  1999  001202  010F               	movlb	15	; () banked
  2000  001204  8122               	bsf	34,0,b	;volatile
  2001  001206                     l394:
  2002                           
  2003                           ;can\CANlib.h: 471: if (identifier & 0x00020000)
  2004  001206  0100               	movlb	0	; () banked
  2005  001208  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2006  00120A  D002               	goto	l395
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;can\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2010  00120C  010F               	movlb	15	; () banked
  2011  00120E  8322               	bsf	34,1,b	;volatile
  2012  001210                     l395:
  2013                           
  2014                           ;can\CANlib.h: 473: if (identifier & 0x00040000)
  2015  001210  0100               	movlb	0	; () banked
  2016  001212  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2017  001214  D002               	goto	l396
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;can\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2021  001216  010F               	movlb	15	; () banked
  2022  001218  8B22               	bsf	34,5,b	;volatile
  2023  00121A                     l396:
  2024                           
  2025                           ;can\CANlib.h: 475: if (identifier & 0x00080000)
  2026  00121A  0100               	movlb	0	; () banked
  2027  00121C  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2028  00121E  D002               	goto	l397
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;can\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2032  001220  010F               	movlb	15	; () banked
  2033  001222  8D22               	bsf	34,6,b	;volatile
  2034  001224                     l397:
  2035                           
  2036                           ;can\CANlib.h: 477: if (identifier & 0x00100000)
  2037  001224  0100               	movlb	0	; () banked
  2038  001226  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2039  001228  D002               	goto	l3150
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;can\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2043  00122A  010F               	movlb	15	; () banked
  2044  00122C  8F22               	bsf	34,7,b	;volatile
  2045  00122E                     l3150:
  2046                           
  2047                           ;can\CANlib.h: 480: tamp = (identifier >> 21);
  2048  00122E  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2049  001232  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2050  001236  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2051  00123A  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2052  00123E  0E16               	movlw	22
  2053  001240  D006               	goto	u3410
  2054  001242                     u3415:
  2055  001242  0100               	movlb	0	; () banked
  2056  001244  90D8               	bcf	status,0,c
  2057  001246  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2058  001248  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2059  00124A  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2060  00124C  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2061  00124E                     u3410:
  2062  00124E  2EE8               	decfsz	wreg,f,c
  2063  001250  D7F8               	goto	u3415
  2064  001252  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2065  001256  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2066  00125A  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2067  00125E  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;can\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2071  001262  0100               	movlb	0	; () banked
  2072  001264  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2073  001266  0100               	movlb	0	; () banked
  2074  001268  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2075  00126A  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2076  00126C  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2077  00126E  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;can\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2081  001270  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2082                           
  2083                           ;can\CANlib.h: 483: }
  2084  001274  D059               	goto	l3170
  2085  001276                     l393:
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;can\CANlib.h: 485: else
  2089                           ;can\CANlib.h: 487: {
  2090                           ;can\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2091  001276  010F               	movlb	15	; () banked
  2092  001278  9722               	bcf	34,3,b	;volatile
  2093                           
  2094                           ; BSR set to: 15
  2095                           ;can\CANlib.h: 490: tamp = (identifier >> 3);
  2096  00127A  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2097  00127E  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2098  001282  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2099  001286  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2100  00128A  0E04               	movlw	4
  2101  00128C  D006               	goto	u3420
  2102  00128E                     u3425:
  2103  00128E  0100               	movlb	0	; () banked
  2104  001290  90D8               	bcf	status,0,c
  2105  001292  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2106  001294  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2107  001296  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2108  001298  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2109  00129A                     u3420:
  2110  00129A  2EE8               	decfsz	wreg,f,c
  2111  00129C  D7F8               	goto	u3425
  2112  00129E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2113  0012A2  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2114  0012A6  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2115  0012AA  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;can\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2119  0012AE  0100               	movlb	0	; () banked
  2120  0012B0  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2121  0012B2  0100               	movlb	0	; () banked
  2122  0012B4  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2123  0012B6  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2124  0012B8  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2125  0012BA  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;can\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2129  0012BC  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;can\CANlib.h: 494: tamp = identifier & 0x00000007;
  2133  0012C0  0E07               	movlw	7
  2134  0012C2  0100               	movlb	0	; () banked
  2135  0012C4  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2136  0012C6  0100               	movlb	0	; () banked
  2137  0012C8  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2138  0012CA  0E00               	movlw	0
  2139  0012CC  0100               	movlb	0	; () banked
  2140  0012CE  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2141  0012D0  0100               	movlb	0	; () banked
  2142  0012D2  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2143  0012D4  0E00               	movlw	0
  2144  0012D6  0100               	movlb	0	; () banked
  2145  0012D8  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2146  0012DA  0100               	movlb	0	; () banked
  2147  0012DC  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2148  0012DE  0E00               	movlw	0
  2149  0012E0  0100               	movlb	0	; () banked
  2150  0012E2  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2151  0012E4  0100               	movlb	0	; () banked
  2152  0012E6  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;can\CANlib.h: 495: tamp = tamp << 5;
  2156  0012E8  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2157  0012EC  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2158  0012F0  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2159  0012F4  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2160  0012F8  0E05               	movlw	5
  2161  0012FA                     u3435:
  2162  0012FA  90D8               	bcf	status,0,c
  2163  0012FC  0100               	movlb	0	; () banked
  2164  0012FE  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  2165  001300  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2166  001302  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2167  001304  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2168  001306  2EE8               	decfsz	wreg,f,c
  2169  001308  D7F8               	goto	u3435
  2170  00130A  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2171  00130E  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2172  001312  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2173  001316  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;can\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2177  00131A  010F               	movlb	15	; () banked
  2178  00131C  5122               	movf	34,w,b	;volatile
  2179  00131E  0B1F               	andlw	31
  2180  001320  010F               	movlb	15	; () banked
  2181  001322  6F22               	movwf	34,b	;volatile
  2182                           
  2183                           ; BSR set to: 15
  2184                           ;can\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2185  001324  C07F  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2186  001328                     l3170:
  2187                           
  2188                           ;can\CANlib.h: 498: }
  2189                           ;can\CANlib.h: 500: if (0b00000001 & flags)
  2190  001328  0100               	movlb	0	; () banked
  2191  00132A  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  2192  00132C  D003               	goto	l400
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;can\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2196  00132E  010F               	movlb	15	; () banked
  2197  001330  8120               	bsf	32,0,b	;volatile
  2198  001332  D002               	goto	l401
  2199  001334                     l400:
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;can\CANlib.h: 502: else
  2203                           ;can\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2204  001334  010F               	movlb	15	; () banked
  2205  001336  9120               	bcf	32,0,b	;volatile
  2206  001338                     l401:
  2207                           
  2208                           ; BSR set to: 15
  2209                           ;can\CANlib.h: 504: if (0b00000010 & flags)
  2210  001338  0100               	movlb	0	; () banked
  2211  00133A  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  2212  00133C  D003               	goto	l402
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;can\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2216  00133E  010F               	movlb	15	; () banked
  2217  001340  8320               	bsf	32,1,b	;volatile
  2218  001342  D002               	goto	l3176
  2219  001344                     l402:
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;can\CANlib.h: 506: else
  2223                           ;can\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2224  001344  010F               	movlb	15	; () banked
  2225  001346  9320               	bcf	32,1,b	;volatile
  2226  001348                     l3176:
  2227                           
  2228                           ; BSR set to: 15
  2229                           ;can\CANlib.h: 509: TXB2D0 = data[0];
  2230  001348  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  2231  00134C  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2232  001350  50DF               	movf	indf2,w,c
  2233  001352  010F               	movlb	15	; () banked
  2234  001354  6F26               	movwf	38,b	;volatile
  2235                           
  2236                           ; BSR set to: 15
  2237                           ;can\CANlib.h: 510: TXB2D1 = data[1];
  2238  001356  0100               	movlb	0	; () banked
  2239  001358  EE20 F001          	lfsr	2,1
  2240  00135C  5177               	movf	CANsendMessage@data& (0+255),w,b
  2241  00135E  26D9               	addwf	fsr2l,f,c
  2242  001360  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2243  001362  22DA               	addwfc	fsr2h,f,c
  2244  001364  50DF               	movf	indf2,w,c
  2245  001366  010F               	movlb	15	; () banked
  2246  001368  6F27               	movwf	39,b	;volatile
  2247                           
  2248                           ; BSR set to: 15
  2249                           ;can\CANlib.h: 511: TXB2D2 = data[2];
  2250  00136A  0100               	movlb	0	; () banked
  2251  00136C  EE20 F002          	lfsr	2,2
  2252  001370  5177               	movf	CANsendMessage@data& (0+255),w,b
  2253  001372  26D9               	addwf	fsr2l,f,c
  2254  001374  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2255  001376  22DA               	addwfc	fsr2h,f,c
  2256  001378  50DF               	movf	indf2,w,c
  2257  00137A  010F               	movlb	15	; () banked
  2258  00137C  6F28               	movwf	40,b	;volatile
  2259                           
  2260                           ; BSR set to: 15
  2261                           ;can\CANlib.h: 512: TXB2D3 = data[3];
  2262  00137E  0100               	movlb	0	; () banked
  2263  001380  EE20 F003          	lfsr	2,3
  2264  001384  5177               	movf	CANsendMessage@data& (0+255),w,b
  2265  001386  26D9               	addwf	fsr2l,f,c
  2266  001388  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2267  00138A  22DA               	addwfc	fsr2h,f,c
  2268  00138C  50DF               	movf	indf2,w,c
  2269  00138E  010F               	movlb	15	; () banked
  2270  001390  6F29               	movwf	41,b	;volatile
  2271                           
  2272                           ; BSR set to: 15
  2273                           ;can\CANlib.h: 513: TXB2D4 = data[4];
  2274  001392  0100               	movlb	0	; () banked
  2275  001394  EE20 F004          	lfsr	2,4
  2276  001398  5177               	movf	CANsendMessage@data& (0+255),w,b
  2277  00139A  26D9               	addwf	fsr2l,f,c
  2278  00139C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2279  00139E  22DA               	addwfc	fsr2h,f,c
  2280  0013A0  50DF               	movf	indf2,w,c
  2281  0013A2  010F               	movlb	15	; () banked
  2282  0013A4  6F2A               	movwf	42,b	;volatile
  2283                           
  2284                           ; BSR set to: 15
  2285                           ;can\CANlib.h: 514: TXB2D5 = data[5];
  2286  0013A6  0100               	movlb	0	; () banked
  2287  0013A8  EE20 F005          	lfsr	2,5
  2288  0013AC  5177               	movf	CANsendMessage@data& (0+255),w,b
  2289  0013AE  26D9               	addwf	fsr2l,f,c
  2290  0013B0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2291  0013B2  22DA               	addwfc	fsr2h,f,c
  2292  0013B4  50DF               	movf	indf2,w,c
  2293  0013B6  010F               	movlb	15	; () banked
  2294  0013B8  6F2B               	movwf	43,b	;volatile
  2295                           
  2296                           ; BSR set to: 15
  2297                           ;can\CANlib.h: 515: TXB2D6 = data[6];
  2298  0013BA  0100               	movlb	0	; () banked
  2299  0013BC  EE20 F006          	lfsr	2,6
  2300  0013C0  5177               	movf	CANsendMessage@data& (0+255),w,b
  2301  0013C2  26D9               	addwf	fsr2l,f,c
  2302  0013C4  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2303  0013C6  22DA               	addwfc	fsr2h,f,c
  2304  0013C8  50DF               	movf	indf2,w,c
  2305  0013CA  010F               	movlb	15	; () banked
  2306  0013CC  6F2C               	movwf	44,b	;volatile
  2307                           
  2308                           ; BSR set to: 15
  2309                           ;can\CANlib.h: 516: TXB2D7 = data[7];
  2310  0013CE  0100               	movlb	0	; () banked
  2311  0013D0  EE20 F007          	lfsr	2,7
  2312  0013D4  5177               	movf	CANsendMessage@data& (0+255),w,b
  2313  0013D6  26D9               	addwf	fsr2l,f,c
  2314  0013D8  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2315  0013DA  22DA               	addwfc	fsr2h,f,c
  2316  0013DC  50DF               	movf	indf2,w,c
  2317  0013DE  010F               	movlb	15	; () banked
  2318  0013E0  6F2D               	movwf	45,b	;volatile
  2319                           
  2320                           ; BSR set to: 15
  2321                           ;can\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2322  0013E2  010F               	movlb	15	; () banked
  2323  0013E4  8720               	bsf	32,3,b	;volatile
  2324                           
  2325                           ; BSR set to: 15
  2326                           ;can\CANlib.h: 520: return;
  2327  0013E6  0012               	return	
  2328  0013E8                     __end_of_CANsendMessage:
  2329                           	opt stack 0
  2330                           tblptru	equ	0xFF8
  2331                           tblptrh	equ	0xFF7
  2332                           tblptrl	equ	0xFF6
  2333                           tablat	equ	0xFF5
  2334                           postinc0	equ	0xFEE
  2335                           wreg	equ	0xFE8
  2336                           postdec1	equ	0xFE5
  2337                           fsr1l	equ	0xFE1
  2338                           indf2	equ	0xFDF
  2339                           fsr2h	equ	0xFDA
  2340                           fsr2l	equ	0xFD9
  2341                           status	equ	0xFD8
  2342                           
  2343 ;; *************** function _CANisTxReady *****************
  2344 ;; Defined at:
  2345 ;;		line 1154 in file "../../Scuola/Triennio/Tesina/can\CANlib.h"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      unsigned char 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2359 ;;      Params:         0       0       0       0
  2360 ;;      Locals:         0       1       0       0
  2361 ;;      Temps:          0       0       0       0
  2362 ;;      Totals:         0       1       0       0
  2363 ;;Total ram usage:        1 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    4
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_send_data
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text3
  2374  00242A                     __ptext3:
  2375                           	opt stack 0
  2376  00242A                     _CANisTxReady:
  2377                           	opt stack 25
  2378                           
  2379                           ;can\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2380                           
  2381                           ; BSR set to: 15
  2382                           ;incstack = 0
  2383  00242A  0E01               	movlw	1
  2384  00242C  0100               	movlb	0	; () banked
  2385  00242E  6F73               	movwf	_CANisTxReady$2910& (0+255),b
  2386                           
  2387                           ; BSR set to: 0
  2388  002430  010F               	movlb	15	; () banked
  2389  002432  A740               	btfss	64,3,b	;volatile
  2390  002434  D009               	goto	l554
  2391                           
  2392                           ; BSR set to: 15
  2393  002436  010F               	movlb	15	; () banked
  2394  002438  A730               	btfss	48,3,b	;volatile
  2395  00243A  D006               	goto	l554
  2396                           
  2397                           ; BSR set to: 15
  2398  00243C  010F               	movlb	15	; () banked
  2399  00243E  A720               	btfss	32,3,b	;volatile
  2400  002440  D003               	goto	l554
  2401                           
  2402                           ; BSR set to: 15
  2403  002442  0E00               	movlw	0
  2404  002444  0100               	movlb	0	; () banked
  2405  002446  6F73               	movwf	_CANisTxReady$2910& (0+255),b
  2406  002448                     l554:
  2407  002448  0100               	movlb	0	; () banked
  2408  00244A  5173               	movf	_CANisTxReady$2910& (0+255),w,b
  2409  00244C  0012               	return	
  2410  00244E                     __end_of_CANisTxReady:
  2411                           	opt stack 0
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           postinc0	equ	0xFEE
  2417                           wreg	equ	0xFE8
  2418                           postdec1	equ	0xFE5
  2419                           fsr1l	equ	0xFE1
  2420                           indf2	equ	0xFDF
  2421                           fsr2h	equ	0xFDA
  2422                           fsr2l	equ	0xFD9
  2423                           status	equ	0xFD8
  2424                           
  2425 ;; *************** function _configurazione_iniziale *****************
  2426 ;; Defined at:
  2427 ;;		line 181 in file "newmain.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;		None               void
  2434 ;; Registers used:
  2435 ;;		wreg, status,2, status,0, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2441 ;;      Params:         0       0       0       0
  2442 ;;      Locals:         0       0       0       0
  2443 ;;      Temps:          0       0       0       0
  2444 ;;      Totals:         0       0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    6
  2448 ;; This function calls:
  2449 ;;		_CANInitialize
  2450 ;;		_OpenADC
  2451 ;; This function is called by:
  2452 ;;		_main
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text4
  2457  0020EC                     __ptext4:
  2458                           	opt stack 0
  2459  0020EC                     _configurazione_iniziale:
  2460                           	opt stack 24
  2461                           
  2462                           ;newmain.c: 186: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SA
      +                          MPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;incstack = 0
  2466  0020EC  0E06               	movlw	6
  2467  0020EE  0100               	movlb	0	; () banked
  2468  0020F0  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2469  0020F2  0E05               	movlw	5
  2470  0020F4  0100               	movlb	0	; () banked
  2471  0020F6  6F82               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2472  0020F8  0E01               	movlw	1
  2473  0020FA  0100               	movlb	0	; () banked
  2474  0020FC  6F83               	movwf	CANInitialize@SJW& (0+255),b
  2475  0020FE  0E03               	movlw	3
  2476  002100  0100               	movlb	0	; () banked
  2477  002102  6F84               	movwf	CANInitialize@BRP& (0+255),b
  2478  002104  0E9D               	movlw	157
  2479  002106  0100               	movlb	0	; () banked
  2480  002108  6F85               	movwf	CANInitialize@flags& (0+255),b
  2481  00210A  0E04               	movlw	4
  2482  00210C  EC49  F00E         	call	_CANInitialize
  2483                           
  2484                           ;newmain.c: 191: PIR3bits.RXB1IF = 0;
  2485  002110  92A4               	bcf	4004,1,c	;volatile
  2486                           
  2487                           ;newmain.c: 192: PIR3bits.RXB0IF = 0;
  2488  002112  90A4               	bcf	4004,0,c	;volatile
  2489                           
  2490                           ;newmain.c: 193: INTCONbits.TMR0IF = 0;
  2491  002114  94F2               	bcf	intcon,2,c	;volatile
  2492                           
  2493                           ;newmain.c: 194: PIR2bits.TMR3IF = 0;
  2494  002116  92A1               	bcf	4001,1,c	;volatile
  2495                           
  2496                           ;newmain.c: 199: IPR3bits.RXB1IP = 0;
  2497  002118  92A5               	bcf	4005,1,c	;volatile
  2498                           
  2499                           ;newmain.c: 200: IPR3bits.RXB0IP = 0;
  2500  00211A  90A5               	bcf	4005,0,c	;volatile
  2501                           
  2502                           ;newmain.c: 201: INTCON2bits.TMR0IP = 1;
  2503  00211C  84F1               	bsf	intcon2,2,c	;volatile
  2504                           
  2505                           ;newmain.c: 202: IPR2bits.TMR3IP = 0;
  2506  00211E  92A2               	bcf	4002,1,c	;volatile
  2507                           
  2508                           ;newmain.c: 207: RCONbits.IPEN = 1;
  2509  002120  8ED0               	bsf	4048,7,c	;volatile
  2510                           
  2511                           ;newmain.c: 208: PIE3bits.RXB1IE = 1;
  2512  002122  82A3               	bsf	4003,1,c	;volatile
  2513                           
  2514                           ;newmain.c: 209: PIE3bits.RXB0IE = 1;
  2515  002124  80A3               	bsf	4003,0,c	;volatile
  2516                           
  2517                           ;newmain.c: 210: INTCONbits.TMR0IE = 1;
  2518  002126  8AF2               	bsf	intcon,5,c	;volatile
  2519                           
  2520                           ;newmain.c: 211: PIE2bits.TMR3IE = 1;
  2521  002128  82A0               	bsf	4000,1,c	;volatile
  2522                           
  2523                           ;newmain.c: 212: INTCONbits.GIEH = 1;
  2524  00212A  8EF2               	bsf	intcon,7,c	;volatile
  2525                           
  2526                           ;newmain.c: 213: INTCONbits.GIEL = 1;
  2527  00212C  8CF2               	bsf	intcon,6,c	;volatile
  2528                           
  2529                           ;newmain.c: 218: T0CON = 0x80;
  2530  00212E  0E80               	movlw	128
  2531  002130  6ED5               	movwf	4053,c	;volatile
  2532                           
  2533                           ;newmain.c: 223: TMR3H = 0x63;
  2534  002132  0E63               	movlw	99
  2535  002134  6EB3               	movwf	4019,c	;volatile
  2536                           
  2537                           ;newmain.c: 224: TMR3L = 0xC0;
  2538  002136  0EC0               	movlw	192
  2539  002138  6EB2               	movwf	4018,c	;volatile
  2540                           
  2541                           ;newmain.c: 225: T3CON = 0x01;
  2542  00213A  0E01               	movlw	1
  2543  00213C  6EB1               	movwf	4017,c	;volatile
  2544                           
  2545                           ;newmain.c: 226: OpenADC(0b11011111 & 0b11111111 & 0b11111101, 0b10001111 & 0b11111100 &
      +                           0b01111111, 0b11111101);
  2546  00213E  0E0C               	movlw	12
  2547  002140  0100               	movlb	0	; () banked
  2548  002142  6F73               	movwf	OpenADC@config2& (0+255),b
  2549  002144  0EFD               	movlw	253
  2550  002146  0100               	movlb	0	; () banked
  2551  002148  6F74               	movwf	OpenADC@portconfig& (0+255),b
  2552  00214A  0EDD               	movlw	221
  2553  00214C  ECBE  F010         	call	_OpenADC
  2554                           
  2555                           ;newmain.c: 237: T0CONbits.TMR0ON = 1;
  2556  002150  8ED5               	bsf	4053,7,c	;volatile
  2557                           
  2558                           ;newmain.c: 239: PORTCbits.RC0 = 0;
  2559  002152  9082               	bcf	3970,0,c	;volatile
  2560                           
  2561                           ;newmain.c: 243: LATA = 0x00;
  2562  002154  0E00               	movlw	0
  2563  002156  6E89               	movwf	3977,c	;volatile
  2564                           
  2565                           ;newmain.c: 244: TRISA = 0b11111100;
  2566  002158  0EFC               	movlw	252
  2567  00215A  6E92               	movwf	3986,c	;volatile
  2568                           
  2569                           ;newmain.c: 246: LATB = 0x00;
  2570  00215C  0E00               	movlw	0
  2571  00215E  6E8A               	movwf	3978,c	;volatile
  2572                           
  2573                           ;newmain.c: 247: TRISB = 0b11111011;
  2574  002160  0EFB               	movlw	251
  2575  002162  6E93               	movwf	3987,c	;volatile
  2576                           
  2577                           ;newmain.c: 249: LATC = 0x00;
  2578  002164  0E00               	movlw	0
  2579  002166  6E8B               	movwf	3979,c	;volatile
  2580                           
  2581                           ;newmain.c: 250: TRISC = 0x00;
  2582  002168  0E00               	movlw	0
  2583  00216A  6E94               	movwf	3988,c	;volatile
  2584                           
  2585                           ;newmain.c: 252: LATD = 0x00;
  2586  00216C  0E00               	movlw	0
  2587  00216E  6E8C               	movwf	3980,c	;volatile
  2588                           
  2589                           ;newmain.c: 253: TRISD = 0x00;
  2590  002170  0E00               	movlw	0
  2591  002172  6E95               	movwf	3989,c	;volatile
  2592                           
  2593                           ;newmain.c: 255: LATE = 0x00;
  2594  002174  0E00               	movlw	0
  2595  002176  6E8D               	movwf	3981,c	;volatile
  2596                           
  2597                           ;newmain.c: 256: TRISE = 0xFF;
  2598  002178  6896               	setf	3990,c	;volatile
  2599  00217A  0012               	return		;funcret
  2600  00217C                     __end_of_configurazione_iniziale:
  2601                           	opt stack 0
  2602                           tblptru	equ	0xFF8
  2603                           tblptrh	equ	0xFF7
  2604                           tblptrl	equ	0xFF6
  2605                           tablat	equ	0xFF5
  2606                           intcon	equ	0xFF2
  2607                           intcon2	equ	0xFF1
  2608                           postinc0	equ	0xFEE
  2609                           wreg	equ	0xFE8
  2610                           postdec1	equ	0xFE5
  2611                           fsr1l	equ	0xFE1
  2612                           indf2	equ	0xFDF
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           status	equ	0xFD8
  2616                           
  2617 ;; *************** function _OpenADC *****************
  2618 ;; Defined at:
  2619 ;;		line 68 in file "P:\Programmi\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcopen.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  config          1    wreg     unsigned char 
  2622 ;;  config2         1   19[BANK0 ] unsigned char 
  2623 ;;  portconfig      1   20[BANK0 ] unsigned char 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  config          1   23[BANK0 ] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;		None               void
  2628 ;; Registers used:
  2629 ;;		wreg, status,2, status,0
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2635 ;;      Params:         0       2       0       0
  2636 ;;      Locals:         0       1       0       0
  2637 ;;      Temps:          0       2       0       0
  2638 ;;      Totals:         0       5       0       0
  2639 ;;Total ram usage:        5 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    4
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_configurazione_iniziale
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text5
  2650  00217C                     __ptext5:
  2651                           	opt stack 0
  2652  00217C                     _OpenADC:
  2653                           	opt stack 25
  2654                           
  2655                           ;incstack = 0
  2656                           ;OpenADC@config stored from wreg
  2657  00217C  0100               	movlb	0	; () banked
  2658  00217E  6F77               	movwf	OpenADC@config& (0+255),b
  2659  002180  0E00               	movlw	0
  2660  002182  6EC2               	movwf	4034,c	;volatile
  2661  002184  0E00               	movlw	0
  2662  002186  6EC0               	movwf	4032,c	;volatile
  2663  002188  0100               	movlb	0	; () banked
  2664  00218A  90D8               	bcf	status,0,c
  2665  00218C  3173               	rrcf	OpenADC@config2& (0+255),w,b
  2666  00218E  0B3C               	andlw	60
  2667  002190  6EC2               	movwf	4034,c	;volatile
  2668                           
  2669                           ; BSR set to: 0
  2670  002192  C073  F075         	movff	OpenADC@config2,??_OpenADC
  2671  002196  0100               	movlb	0	; () banked
  2672  002198  3B75               	swapf	??_OpenADC& (0+255),f,b
  2673  00219A  0EF0               	movlw	240
  2674  00219C  1775               	andwf	??_OpenADC& (0+255),f,b
  2675  00219E  0E30               	movlw	48
  2676  0021A0  0100               	movlb	0	; () banked
  2677  0021A2  1775               	andwf	??_OpenADC& (0+255),f,b
  2678  0021A4  0100               	movlb	0	; () banked
  2679  0021A6  5174               	movf	OpenADC@portconfig& (0+255),w,b
  2680  0021A8  0B0F               	andlw	15
  2681  0021AA  0100               	movlb	0	; () banked
  2682  0021AC  1175               	iorwf	??_OpenADC& (0+255),w,b
  2683  0021AE  6EC1               	movwf	4033,c	;volatile
  2684                           
  2685                           ; BSR set to: 0
  2686  0021B0  C077  F075         	movff	OpenADC@config,??_OpenADC
  2687  0021B4  0100               	movlb	0	; () banked
  2688  0021B6  90D8               	bcf	status,0,c
  2689  0021B8  3775               	rlcf	??_OpenADC& (0+255),f,b
  2690  0021BA  0100               	movlb	0	; () banked
  2691  0021BC  90D8               	bcf	status,0,c
  2692  0021BE  3775               	rlcf	??_OpenADC& (0+255),f,b
  2693  0021C0  0E38               	movlw	56
  2694  0021C2  0100               	movlb	0	; () banked
  2695  0021C4  1775               	andwf	??_OpenADC& (0+255),f,b
  2696  0021C6  C077  F076         	movff	OpenADC@config,??_OpenADC+1
  2697  0021CA  0100               	movlb	0	; () banked
  2698  0021CC  3B76               	swapf	(??_OpenADC+1)& (0+255),f,b
  2699  0021CE  0E0F               	movlw	15
  2700  0021D0  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  2701  0021D2  0E07               	movlw	7
  2702  0021D4  0100               	movlb	0	; () banked
  2703  0021D6  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  2704  0021D8  0100               	movlb	0	; () banked
  2705  0021DA  5177               	movf	OpenADC@config& (0+255),w,b
  2706  0021DC  0B80               	andlw	128
  2707  0021DE  0100               	movlb	0	; () banked
  2708  0021E0  1176               	iorwf	(??_OpenADC+1)& (0+255),w,b
  2709  0021E2  0100               	movlb	0	; () banked
  2710  0021E4  1175               	iorwf	??_OpenADC& (0+255),w,b
  2711  0021E6  6EC0               	movwf	4032,c	;volatile
  2712                           
  2713                           ; BSR set to: 0
  2714  0021E8  0100               	movlb	0	; () banked
  2715  0021EA  AF73               	btfss	OpenADC@config2& (0+255),7,b
  2716  0021EC  D003               	goto	l693
  2717                           
  2718                           ; BSR set to: 0
  2719  0021EE  9C9E               	bcf	3998,6,c	;volatile
  2720  0021F0  8C9D               	bsf	3997,6,c	;volatile
  2721  0021F2  8CF2               	bsf	intcon,6,c	;volatile
  2722  0021F4                     l693:
  2723                           
  2724                           ; BSR set to: 0
  2725  0021F4  80C2               	bsf	4034,0,c	;volatile
  2726                           
  2727                           ; BSR set to: 0
  2728  0021F6  0012               	return		;funcret
  2729  0021F8                     __end_of_OpenADC:
  2730                           	opt stack 0
  2731                           tblptru	equ	0xFF8
  2732                           tblptrh	equ	0xFF7
  2733                           tblptrl	equ	0xFF6
  2734                           tablat	equ	0xFF5
  2735                           intcon	equ	0xFF2
  2736                           intcon2	equ	0xFF1
  2737                           postinc0	equ	0xFEE
  2738                           wreg	equ	0xFE8
  2739                           postdec1	equ	0xFE5
  2740                           fsr1l	equ	0xFE1
  2741                           indf2	equ	0xFDF
  2742                           fsr2h	equ	0xFDA
  2743                           fsr2l	equ	0xFD9
  2744                           status	equ	0xFD8
  2745                           
  2746 ;; *************** function _CANInitialize *****************
  2747 ;; Defined at:
  2748 ;;		line 218 in file "../../Scuola/Triennio/Tesina/can\CANlib.h"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  propSeg         1    wreg     unsigned char 
  2751 ;;  phaseSeg1       1   33[BANK0 ] unsigned char 
  2752 ;;  phaseSeg2       1   34[BANK0 ] unsigned char 
  2753 ;;  SJW             1   35[BANK0 ] unsigned char 
  2754 ;;  BRP             1   36[BANK0 ] unsigned char 
  2755 ;;  flags           1   37[BANK0 ] enum E16844
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  propSeg         1   42[BANK0 ] unsigned char 
  2758 ;;  FilterConfig    1   44[BANK0 ] unsigned char 
  2759 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;		None               void
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2769 ;;      Params:         0       5       0       0
  2770 ;;      Locals:         0       3       0       0
  2771 ;;      Temps:          0       4       0       0
  2772 ;;      Totals:         0      12       0       0
  2773 ;;Total ram usage:       12 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    5
  2776 ;; This function calls:
  2777 ;;		_CANOperationMode
  2778 ;;		_CANSetFilter
  2779 ;;		_CANSetMask
  2780 ;; This function is called by:
  2781 ;;		_configurazione_iniziale
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text6
  2786  001C92                     __ptext6:
  2787                           	opt stack 0
  2788  001C92                     _CANInitialize:
  2789                           	opt stack 24
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;incstack = 0
  2793                           ;CANInitialize@propSeg stored from wreg
  2794  001C92  0100               	movlb	0	; () banked
  2795  001C94  6F8A               	movwf	CANInitialize@propSeg& (0+255),b
  2796                           
  2797                           ;can\CANlib.h: 220: BYTE FilterConfig1;
  2798                           ;can\CANlib.h: 221: BYTE FilterConfig2;
  2799                           ;can\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2800  001C96  0E80               	movlw	128
  2801  001C98  EC27  F012         	call	_CANOperationMode
  2802                           
  2803                           ;can\CANlib.h: 225: BRGCON1 = 0x00;
  2804  001C9C  0E00               	movlw	0
  2805  001C9E  6E70               	movwf	3952,c	;volatile
  2806                           
  2807                           ;can\CANlib.h: 226: BRGCON2 = 0x00;
  2808  001CA0  0E00               	movlw	0
  2809  001CA2  6E71               	movwf	3953,c	;volatile
  2810                           
  2811                           ;can\CANlib.h: 227: BRGCON3 = 0x00;
  2812  001CA4  0E00               	movlw	0
  2813  001CA6  6E72               	movwf	3954,c	;volatile
  2814                           
  2815                           ;can\CANlib.h: 229: SJW= SJW << 6;
  2816  001CA8  0100               	movlb	0	; () banked
  2817  001CAA  4183               	rrncf	CANInitialize@SJW& (0+255),w,b
  2818  001CAC  42E8               	rrncf	wreg,f,c
  2819  001CAE  0BC0               	andlw	192
  2820  001CB0  0100               	movlb	0	; () banked
  2821  001CB2  6F83               	movwf	CANInitialize@SJW& (0+255),b
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;can\CANlib.h: 230: BRGCON1 |= SJW;
  2825  001CB4  0100               	movlb	0	; () banked
  2826  001CB6  5183               	movf	CANInitialize@SJW& (0+255),w,b
  2827  001CB8  1270               	iorwf	3952,f,c	;volatile
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;can\CANlib.h: 231: BRGCON1 |= BRP;
  2831  001CBA  0100               	movlb	0	; () banked
  2832  001CBC  5184               	movf	CANInitialize@BRP& (0+255),w,b
  2833  001CBE  1270               	iorwf	3952,f,c	;volatile
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;can\CANlib.h: 233: BRGCON2 |= propSeg;
  2837  001CC0  0100               	movlb	0	; () banked
  2838  001CC2  518A               	movf	CANInitialize@propSeg& (0+255),w,b
  2839  001CC4  1271               	iorwf	3953,f,c	;volatile
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;can\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2843  001CC6  0100               	movlb	0	; () banked
  2844  001CC8  3981               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2845  001CCA  42E8               	rrncf	wreg,f,c
  2846  001CCC  0BF8               	andlw	248
  2847  001CCE  0100               	movlb	0	; () banked
  2848  001CD0  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;can\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2852  001CD2  0100               	movlb	0	; () banked
  2853  001CD4  5181               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2854  001CD6  1271               	iorwf	3953,f,c	;volatile
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;can\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2858  001CD8  0100               	movlb	0	; () banked
  2859  001CDA  A585               	btfss	CANInitialize@flags& (0+255),2,b
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;can\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2863  001CDC  8C71               	bsf	3953,6,c	;volatile
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;can\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2867  001CDE  0100               	movlb	0	; () banked
  2868  001CE0  B185               	btfsc	CANInitialize@flags& (0+255),0,b
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;can\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2872  001CE2  8E71               	bsf	3953,7,c	;volatile
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;can\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2876                           
  2877                           ; BSR set to: 0
  2878  001CE4  0100               	movlb	0	; () banked
  2879  001CE6  5182               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2880  001CE8  1272               	iorwf	3954,f,c	;volatile
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;can\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2884  001CEA  0100               	movlb	0	; () banked
  2885  001CEC  B385               	btfsc	CANInitialize@flags& (0+255),1,b
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;can\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2889  001CEE  8C72               	bsf	3954,6,c	;volatile
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;can\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2893                           
  2894                           ; BSR set to: 0
  2895  001CF0  0100               	movlb	0	; () banked
  2896  001CF2  5185               	movf	CANInitialize@flags& (0+255),w,b
  2897  001CF4  0B60               	andlw	96
  2898  001CF6  6E60               	movwf	3936,c	;volatile
  2899                           
  2900                           ;can\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2901  001CF8  0100               	movlb	0	; () banked
  2902  001CFA  5185               	movf	CANInitialize@flags& (0+255),w,b
  2903  001CFC  0B10               	andlw	16
  2904  001CFE  0AFF               	xorlw	255
  2905  001D00  B4D8               	btfsc	status,2,c
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;can\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2909  001D02  8460               	bsf	3936,2,c	;volatile
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;can\CANlib.h: 255: RXB1CON = RXB0CON;
  2913  001D04  CF60 FF50          	movff	3936,3920	;volatile
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;can\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2917  001D08  0E00               	movlw	0
  2918  001D0A  0100               	movlb	0	; () banked
  2919  001D0C  6F73               	movwf	CANSetMask@mask& (0+255),b
  2920  001D0E  0E00               	movlw	0
  2921  001D10  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  2922  001D12  0E00               	movlw	0
  2923  001D14  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  2924  001D16  0E00               	movlw	0
  2925  001D18  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  2926  001D1A  0EF7               	movlw	247
  2927  001D1C  0100               	movlb	0	; () banked
  2928  001D1E  6F77               	movwf	CANSetMask@type& (0+255),b
  2929  001D20  0E01               	movlw	1
  2930  001D22  EC7A  F00C         	call	_CANSetMask
  2931                           
  2932                           ;can\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2933  001D26  0E00               	movlw	0
  2934  001D28  0100               	movlb	0	; () banked
  2935  001D2A  6F73               	movwf	CANSetMask@mask& (0+255),b
  2936  001D2C  0E00               	movlw	0
  2937  001D2E  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  2938  001D30  0E00               	movlw	0
  2939  001D32  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  2940  001D34  0E00               	movlw	0
  2941  001D36  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  2942  001D38  0EF7               	movlw	247
  2943  001D3A  0100               	movlb	0	; () banked
  2944  001D3C  6F77               	movwf	CANSetMask@type& (0+255),b
  2945  001D3E  0E02               	movlw	2
  2946  001D40  EC7A  F00C         	call	_CANSetMask
  2947                           
  2948                           ;can\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2949  001D44  D00F               	goto	l2958
  2950  001D46                     l2952:
  2951                           
  2952                           ;can\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2953  001D46  0EF7               	movlw	247
  2954  001D48  0100               	movlb	0	; () banked
  2955  001D4A  6F8B               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2956  001D4C  D007               	goto	l2954
  2957  001D4E                     l356:
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;can\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2961  001D4E  0100               	movlb	0	; () banked
  2962  001D50  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  2963                           
  2964                           ;can\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2965  001D52  0100               	movlb	0	; () banked
  2966  001D54  698C               	setf	CANInitialize@FilterConfig2& (0+255),b
  2967                           
  2968                           ;can\CANlib.h: 273: break;
  2969  001D56  D028               	goto	l2960
  2970  001D58                     l357:
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;can\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2974  001D58  0100               	movlb	0	; () banked
  2975  001D5A  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  2976  001D5C                     l2954:
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;can\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2980  001D5C  0EF7               	movlw	247
  2981  001D5E  0100               	movlb	0	; () banked
  2982  001D60  6F8C               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;can\CANlib.h: 278: }
  2986                           
  2987                           ;can\CANlib.h: 277: break;
  2988  001D62  D022               	goto	l2960
  2989  001D64                     l2958:
  2990  001D64  0E9F               	movlw	159
  2991  001D66  0100               	movlb	0	; () banked
  2992  001D68  6F86               	movwf	??_CANInitialize& (0+255),b
  2993  001D6A  0EFF               	movlw	255
  2994  001D6C  0100               	movlb	0	; () banked
  2995  001D6E  6F87               	movwf	(??_CANInitialize+1)& (0+255),b
  2996  001D70  0100               	movlb	0	; () banked
  2997  001D72  5185               	movf	CANInitialize@flags& (0+255),w,b
  2998  001D74  0B60               	andlw	96
  2999  001D76  0100               	movlb	0	; () banked
  3000  001D78  6F88               	movwf	(??_CANInitialize+2)& (0+255),b
  3001  001D7A  6B89               	clrf	(??_CANInitialize+3)& (0+255),b
  3002  001D7C  0100               	movlb	0	; () banked
  3003  001D7E  5186               	movf	??_CANInitialize& (0+255),w,b
  3004  001D80  0100               	movlb	0	; () banked
  3005  001D82  1388               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3006  001D84  0100               	movlb	0	; () banked
  3007  001D86  5187               	movf	(??_CANInitialize+1)& (0+255),w,b
  3008  001D88  0100               	movlb	0	; () banked
  3009  001D8A  1389               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3010                           
  3011                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3012                           ; Switch size 1, requested type "space"
  3013                           ; Number of cases is 1, Range of values is 0 to 0
  3014                           ; switch strategies available:
  3015                           ; Name         Instructions Cycles
  3016                           ; simple_byte            4     3 (average)
  3017                           ;	Chosen strategy is simple_byte
  3018  001D8C  0100               	movlb	0	; () banked
  3019  001D8E  5189               	movf	(??_CANInitialize+3)& (0+255),w,b
  3020  001D90  0A00               	xorlw	0	; case 0
  3021  001D92  A4D8               	btfss	status,2,c
  3022  001D94  D7E1               	goto	l357
  3023                           
  3024                           ; BSR set to: 0
  3025                           ; Switch size 1, requested type "space"
  3026                           ; Number of cases is 2, Range of values is 191 to 223
  3027                           ; switch strategies available:
  3028                           ; Name         Instructions Cycles
  3029                           ; simple_byte            7     4 (average)
  3030                           ;	Chosen strategy is simple_byte
  3031  001D96  0100               	movlb	0	; () banked
  3032  001D98  5188               	movf	(??_CANInitialize+2)& (0+255),w,b
  3033  001D9A  0ABF               	xorlw	191	; case 191
  3034  001D9C  B4D8               	btfsc	status,2,c
  3035  001D9E  D7D7               	goto	l356
  3036  001DA0  0A60               	xorlw	96	; case 223
  3037  001DA2  B4D8               	btfsc	status,2,c
  3038  001DA4  D7D0               	goto	l2952
  3039  001DA6  D7D8               	goto	l357
  3040  001DA8                     l2960:
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;can\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3044  001DA8  0E00               	movlw	0
  3045  001DAA  0100               	movlb	0	; () banked
  3046  001DAC  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3047  001DAE  0E00               	movlw	0
  3048  001DB0  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3049  001DB2  0E00               	movlw	0
  3050  001DB4  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3051  001DB6  0E00               	movlw	0
  3052  001DB8  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3053  001DBA  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3054  001DBE  0E00               	movlw	0
  3055  001DC0  ECAB  F000         	call	_CANSetFilter
  3056                           
  3057                           ;can\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3058  001DC4  0E00               	movlw	0
  3059  001DC6  0100               	movlb	0	; () banked
  3060  001DC8  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3061  001DCA  0E00               	movlw	0
  3062  001DCC  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3063  001DCE  0E00               	movlw	0
  3064  001DD0  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3065  001DD2  0E00               	movlw	0
  3066  001DD4  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3067  001DD6  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3068  001DDA  0E01               	movlw	1
  3069  001DDC  ECAB  F000         	call	_CANSetFilter
  3070                           
  3071                           ;can\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3072  001DE0  0E00               	movlw	0
  3073  001DE2  0100               	movlb	0	; () banked
  3074  001DE4  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3075  001DE6  0E00               	movlw	0
  3076  001DE8  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3077  001DEA  0E00               	movlw	0
  3078  001DEC  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3079  001DEE  0E00               	movlw	0
  3080  001DF0  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3081  001DF2  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3082  001DF6  0E02               	movlw	2
  3083  001DF8  ECAB  F000         	call	_CANSetFilter
  3084                           
  3085                           ;can\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3086  001DFC  0E00               	movlw	0
  3087  001DFE  0100               	movlb	0	; () banked
  3088  001E00  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3089  001E02  0E00               	movlw	0
  3090  001E04  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3091  001E06  0E00               	movlw	0
  3092  001E08  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3093  001E0A  0E00               	movlw	0
  3094  001E0C  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3095  001E0E  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3096  001E12  0E03               	movlw	3
  3097  001E14  ECAB  F000         	call	_CANSetFilter
  3098                           
  3099                           ;can\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3100  001E18  0E00               	movlw	0
  3101  001E1A  0100               	movlb	0	; () banked
  3102  001E1C  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3103  001E1E  0E00               	movlw	0
  3104  001E20  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3105  001E22  0E00               	movlw	0
  3106  001E24  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3107  001E26  0E00               	movlw	0
  3108  001E28  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3109  001E2A  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3110  001E2E  0E04               	movlw	4
  3111  001E30  ECAB  F000         	call	_CANSetFilter
  3112                           
  3113                           ;can\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3114  001E34  0E00               	movlw	0
  3115  001E36  0100               	movlb	0	; () banked
  3116  001E38  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3117  001E3A  0E00               	movlw	0
  3118  001E3C  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3119  001E3E  0E00               	movlw	0
  3120  001E40  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3121  001E42  0E00               	movlw	0
  3122  001E44  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3123  001E46  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3124  001E4A  0E05               	movlw	5
  3125  001E4C  ECAB  F000         	call	_CANSetFilter
  3126                           
  3127                           ;can\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3128  001E50  0E00               	movlw	0
  3129  001E52  EC27  F012         	call	_CANOperationMode
  3130  001E56  0012               	return		;funcret
  3131  001E58                     __end_of_CANInitialize:
  3132                           	opt stack 0
  3133                           tblptru	equ	0xFF8
  3134                           tblptrh	equ	0xFF7
  3135                           tblptrl	equ	0xFF6
  3136                           tablat	equ	0xFF5
  3137                           intcon	equ	0xFF2
  3138                           intcon2	equ	0xFF1
  3139                           postinc0	equ	0xFEE
  3140                           wreg	equ	0xFE8
  3141                           postdec1	equ	0xFE5
  3142                           fsr1l	equ	0xFE1
  3143                           indf2	equ	0xFDF
  3144                           fsr2h	equ	0xFDA
  3145                           fsr2l	equ	0xFD9
  3146                           status	equ	0xFD8
  3147                           
  3148 ;; *************** function _CANSetMask *****************
  3149 ;; Defined at:
  3150 ;;		line 640 in file "../../Scuola/Triennio/Tesina/can\CANlib.h"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  numBuffer       1    wreg     enum E16878
  3153 ;;  mask            4   19[BANK0 ] unsigned long 
  3154 ;;  type            1   23[BANK0 ] enum E16844
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  numBuffer       1   28[BANK0 ] enum E16878
  3157 ;;  tamp            4   29[BANK0 ] unsigned long 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;		None               void
  3160 ;; Registers used:
  3161 ;;		wreg, status,2, status,0
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3167 ;;      Params:         0       5       0       0
  3168 ;;      Locals:         0       5       0       0
  3169 ;;      Temps:          0       4       0       0
  3170 ;;      Totals:         0      14       0       0
  3171 ;;Total ram usage:       14 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    4
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_CANInitialize
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text7
  3182  0018F4                     __ptext7:
  3183                           	opt stack 0
  3184  0018F4                     _CANSetMask:
  3185                           	opt stack 24
  3186                           
  3187                           ;incstack = 0
  3188                           ;CANSetMask@numBuffer stored from wreg
  3189  0018F4  0100               	movlb	0	; () banked
  3190  0018F6  6F7C               	movwf	CANSetMask@numBuffer& (0+255),b
  3191                           
  3192                           ;can\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3193  0018F8  0100               	movlb	0	; () banked
  3194  0018FA  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  3195  0018FC  A4D8               	btfss	status,2,c
  3196  0018FE  D056               	goto	l2522
  3197                           
  3198                           ; BSR set to: 0
  3199  001900  0100               	movlb	0	; () banked
  3200  001902  2977               	incf	CANSetMask@type& (0+255),w,b
  3201  001904  A4D8               	btfss	status,2,c
  3202  001906  D052               	goto	l2522
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;can\CANlib.h: 644: {
  3206                           ;can\CANlib.h: 645: tamp = (mask >> 3);
  3207  001908  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3208  00190C  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3209  001910  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3210  001914  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3211  001918  0E04               	movlw	4
  3212  00191A  D006               	goto	u2090
  3213  00191C                     u2095:
  3214  00191C  0100               	movlb	0	; () banked
  3215  00191E  90D8               	bcf	status,0,c
  3216  001920  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3217  001922  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3218  001924  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3219  001926  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3220  001928                     u2090:
  3221  001928  2EE8               	decfsz	wreg,f,c
  3222  00192A  D7F8               	goto	u2095
  3223  00192C  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3224  001930  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3225  001934  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3226  001938  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;can\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3230  00193C  0100               	movlb	0	; () banked
  3231  00193E  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3232  001940  0100               	movlb	0	; () banked
  3233  001942  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3234  001944  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3235  001946  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3236  001948  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;can\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3240  00194A  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;can\CANlib.h: 649: tamp = mask & 0x00000007;
  3244  00194E  0E07               	movlw	7
  3245  001950  0100               	movlb	0	; () banked
  3246  001952  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3247  001954  0100               	movlb	0	; () banked
  3248  001956  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3249  001958  0E00               	movlw	0
  3250  00195A  0100               	movlb	0	; () banked
  3251  00195C  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3252  00195E  0100               	movlb	0	; () banked
  3253  001960  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3254  001962  0E00               	movlw	0
  3255  001964  0100               	movlb	0	; () banked
  3256  001966  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3257  001968  0100               	movlb	0	; () banked
  3258  00196A  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3259  00196C  0E00               	movlw	0
  3260  00196E  0100               	movlb	0	; () banked
  3261  001970  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3262  001972  0100               	movlb	0	; () banked
  3263  001974  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;can\CANlib.h: 650: tamp = tamp << 5;
  3267  001976  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3268  00197A  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3269  00197E  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3270  001982  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3271  001986  0E05               	movlw	5
  3272  001988                     u2105:
  3273  001988  90D8               	bcf	status,0,c
  3274  00198A  0100               	movlb	0	; () banked
  3275  00198C  3778               	rlcf	??_CANSetMask& (0+255),f,b
  3276  00198E  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3277  001990  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3278  001992  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3279  001994  2EE8               	decfsz	wreg,f,c
  3280  001996  D7F8               	goto	u2105
  3281  001998  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3282  00199C  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3283  0019A0  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3284  0019A4  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;can\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3288  0019A8  C07D  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3289  0019AC                     l2522:
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;can\CANlib.h: 652: }
  3293                           ;can\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3294  0019AC  0E02               	movlw	2
  3295  0019AE  0100               	movlb	0	; () banked
  3296  0019B0  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3297  0019B2  A4D8               	btfss	status,2,c
  3298  0019B4  D056               	goto	l2538
  3299                           
  3300                           ; BSR set to: 0
  3301  0019B6  0100               	movlb	0	; () banked
  3302  0019B8  2977               	incf	CANSetMask@type& (0+255),w,b
  3303  0019BA  A4D8               	btfss	status,2,c
  3304  0019BC  D052               	goto	l2538
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;can\CANlib.h: 655: {
  3308                           ;can\CANlib.h: 656: tamp = (mask >> 3);
  3309  0019BE  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3310  0019C2  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3311  0019C6  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3312  0019CA  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3313  0019CE  0E04               	movlw	4
  3314  0019D0  D006               	goto	u2130
  3315  0019D2                     u2135:
  3316  0019D2  0100               	movlb	0	; () banked
  3317  0019D4  90D8               	bcf	status,0,c
  3318  0019D6  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3319  0019D8  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3320  0019DA  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3321  0019DC  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3322  0019DE                     u2130:
  3323  0019DE  2EE8               	decfsz	wreg,f,c
  3324  0019E0  D7F8               	goto	u2135
  3325  0019E2  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3326  0019E6  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3327  0019EA  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3328  0019EE  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;can\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3332  0019F2  0100               	movlb	0	; () banked
  3333  0019F4  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3334  0019F6  0100               	movlb	0	; () banked
  3335  0019F8  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3336  0019FA  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3337  0019FC  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3338  0019FE  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;can\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3342  001A00  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;can\CANlib.h: 660: tamp = mask & 0x00000007;
  3346  001A04  0E07               	movlw	7
  3347  001A06  0100               	movlb	0	; () banked
  3348  001A08  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3349  001A0A  0100               	movlb	0	; () banked
  3350  001A0C  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3351  001A0E  0E00               	movlw	0
  3352  001A10  0100               	movlb	0	; () banked
  3353  001A12  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3354  001A14  0100               	movlb	0	; () banked
  3355  001A16  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3356  001A18  0E00               	movlw	0
  3357  001A1A  0100               	movlb	0	; () banked
  3358  001A1C  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3359  001A1E  0100               	movlb	0	; () banked
  3360  001A20  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3361  001A22  0E00               	movlw	0
  3362  001A24  0100               	movlb	0	; () banked
  3363  001A26  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3364  001A28  0100               	movlb	0	; () banked
  3365  001A2A  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;can\CANlib.h: 661: tamp = tamp << 5;
  3369  001A2C  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3370  001A30  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3371  001A34  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3372  001A38  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3373  001A3C  0E05               	movlw	5
  3374  001A3E                     u2145:
  3375  001A3E  90D8               	bcf	status,0,c
  3376  001A40  0100               	movlb	0	; () banked
  3377  001A42  3778               	rlcf	??_CANSetMask& (0+255),f,b
  3378  001A44  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3379  001A46  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3380  001A48  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3381  001A4A  2EE8               	decfsz	wreg,f,c
  3382  001A4C  D7F8               	goto	u2145
  3383  001A4E  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3384  001A52  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3385  001A56  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3386  001A5A  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;can\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3390  001A5E  C07D  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3391  001A62                     l2538:
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;can\CANlib.h: 663: }
  3395                           ;can\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3396  001A62  0100               	movlb	0	; () banked
  3397  001A64  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  3398  001A66  A4D8               	btfss	status,2,c
  3399  001A68  D087               	goto	l2570
  3400                           
  3401                           ; BSR set to: 0
  3402  001A6A  0EF7               	movlw	247
  3403  001A6C  0100               	movlb	0	; () banked
  3404  001A6E  1977               	xorwf	CANSetMask@type& (0+255),w,b
  3405  001A70  A4D8               	btfss	status,2,c
  3406  001A72  D082               	goto	l2570
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;can\CANlib.h: 666: {
  3410                           ;can\CANlib.h: 667: tamp = mask & 0x000000FF;
  3411  001A74  0100               	movlb	0	; () banked
  3412  001A76  5173               	movf	CANSetMask@mask& (0+255),w,b
  3413  001A78  0100               	movlb	0	; () banked
  3414  001A7A  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3415  001A7C  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3416  001A7E  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3417  001A80  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;can\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3421  001A82  C07D  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;can\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3425  001A86  0E00               	movlw	0
  3426  001A88  0100               	movlb	0	; () banked
  3427  001A8A  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3428  001A8C  0100               	movlb	0	; () banked
  3429  001A8E  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3430  001A90  0EFF               	movlw	255
  3431  001A92  0100               	movlb	0	; () banked
  3432  001A94  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3433  001A96  0100               	movlb	0	; () banked
  3434  001A98  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3435  001A9A  0E00               	movlw	0
  3436  001A9C  0100               	movlb	0	; () banked
  3437  001A9E  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3438  001AA0  0100               	movlb	0	; () banked
  3439  001AA2  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3440  001AA4  0E00               	movlw	0
  3441  001AA6  0100               	movlb	0	; () banked
  3442  001AA8  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3443  001AAA  0100               	movlb	0	; () banked
  3444  001AAC  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;can\CANlib.h: 671: tamp = tamp >> 8;
  3448  001AAE  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3449  001AB2  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3450  001AB6  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3451  001ABA  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3452  001ABE  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  3453  001AC2  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  3454  001AC6  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  3455  001ACA  0100               	movlb	0	; () banked
  3456  001ACC  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  3457  001ACE  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3458  001AD2  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3459  001AD6  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3460  001ADA  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;can\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3464  001ADE  C07D  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;can\CANlib.h: 674: if (mask & 0x00010000)
  3468  001AE2  0100               	movlb	0	; () banked
  3469  001AE4  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3470  001AE6  D003               	goto	l430
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;can\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3474  001AE8  010F               	movlb	15	; () banked
  3475  001AEA  8119               	bsf	25,0,b	;volatile
  3476  001AEC  D002               	goto	l431
  3477  001AEE                     l430:
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;can\CANlib.h: 676: else
  3481                           ;can\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3482  001AEE  010F               	movlb	15	; () banked
  3483  001AF0  9119               	bcf	25,0,b	;volatile
  3484  001AF2                     l431:
  3485                           
  3486                           ; BSR set to: 15
  3487                           ;can\CANlib.h: 679: if (mask & 0x00020000)
  3488  001AF2  0100               	movlb	0	; () banked
  3489  001AF4  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3490  001AF6  D003               	goto	l432
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;can\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3494  001AF8  010F               	movlb	15	; () banked
  3495  001AFA  8319               	bsf	25,1,b	;volatile
  3496  001AFC  D002               	goto	l433
  3497  001AFE                     l432:
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;can\CANlib.h: 681: else
  3501                           ;can\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3502  001AFE  010F               	movlb	15	; () banked
  3503  001B00  9319               	bcf	25,1,b	;volatile
  3504  001B02                     l433:
  3505                           
  3506                           ; BSR set to: 15
  3507                           ;can\CANlib.h: 684: if (mask & 0x00040000)
  3508  001B02  0100               	movlb	0	; () banked
  3509  001B04  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3510  001B06  D003               	goto	l434
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;can\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3514  001B08  010F               	movlb	15	; () banked
  3515  001B0A  8B19               	bsf	25,5,b	;volatile
  3516  001B0C  D002               	goto	l435
  3517  001B0E                     l434:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;can\CANlib.h: 686: else
  3521                           ;can\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3522  001B0E  010F               	movlb	15	; () banked
  3523  001B10  9B19               	bcf	25,5,b	;volatile
  3524  001B12                     l435:
  3525                           
  3526                           ; BSR set to: 15
  3527                           ;can\CANlib.h: 689: if (mask & 0x00080000)
  3528  001B12  0100               	movlb	0	; () banked
  3529  001B14  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3530  001B16  D003               	goto	l436
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;can\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3534  001B18  010F               	movlb	15	; () banked
  3535  001B1A  8D19               	bsf	25,6,b	;volatile
  3536  001B1C  D002               	goto	l437
  3537  001B1E                     l436:
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;can\CANlib.h: 691: else
  3541                           ;can\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3542  001B1E  010F               	movlb	15	; () banked
  3543  001B20  9D19               	bcf	25,6,b	;volatile
  3544  001B22                     l437:
  3545                           
  3546                           ; BSR set to: 15
  3547                           ;can\CANlib.h: 694: if (mask & 0x00100000)
  3548  001B22  0100               	movlb	0	; () banked
  3549  001B24  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3550  001B26  D003               	goto	l438
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;can\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3554  001B28  010F               	movlb	15	; () banked
  3555  001B2A  8F19               	bsf	25,7,b	;volatile
  3556  001B2C  D002               	goto	l2564
  3557  001B2E                     l438:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;can\CANlib.h: 696: else
  3561                           ;can\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3562  001B2E  010F               	movlb	15	; () banked
  3563  001B30  9F19               	bcf	25,7,b	;volatile
  3564  001B32                     l2564:
  3565                           
  3566                           ; BSR set to: 15
  3567                           ;can\CANlib.h: 699: tamp = (mask >> 21);
  3568  001B32  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3569  001B36  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3570  001B3A  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3571  001B3E  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3572  001B42  0E16               	movlw	22
  3573  001B44  D006               	goto	u2220
  3574  001B46                     u2225:
  3575  001B46  0100               	movlb	0	; () banked
  3576  001B48  90D8               	bcf	status,0,c
  3577  001B4A  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3578  001B4C  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3579  001B4E  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3580  001B50  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3581  001B52                     u2220:
  3582  001B52  2EE8               	decfsz	wreg,f,c
  3583  001B54  D7F8               	goto	u2225
  3584  001B56  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3585  001B5A  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3586  001B5E  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3587  001B62  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;can\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3591  001B66  0100               	movlb	0	; () banked
  3592  001B68  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3593  001B6A  0100               	movlb	0	; () banked
  3594  001B6C  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3595  001B6E  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3596  001B70  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3597  001B72  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;can\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3601  001B74  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3602  001B78                     l2570:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;can\CANlib.h: 702: }
  3606                           ;can\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3607  001B78  0E02               	movlw	2
  3608  001B7A  0100               	movlb	0	; () banked
  3609  001B7C  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3610  001B7E  A4D8               	btfss	status,2,c
  3611  001B80  0012               	return	
  3612                           
  3613                           ; BSR set to: 0
  3614  001B82  0EF7               	movlw	247
  3615  001B84  0100               	movlb	0	; () banked
  3616  001B86  1977               	xorwf	CANSetMask@type& (0+255),w,b
  3617  001B88  A4D8               	btfss	status,2,c
  3618  001B8A  0012               	return	
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;can\CANlib.h: 705: {
  3622                           ;can\CANlib.h: 706: tamp = mask & 0x000000FF;
  3623  001B8C  0100               	movlb	0	; () banked
  3624  001B8E  5173               	movf	CANSetMask@mask& (0+255),w,b
  3625  001B90  0100               	movlb	0	; () banked
  3626  001B92  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3627  001B94  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3628  001B96  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3629  001B98  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;can\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3633  001B9A  C07D  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;can\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3637  001B9E  0E00               	movlw	0
  3638  001BA0  0100               	movlb	0	; () banked
  3639  001BA2  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3640  001BA4  0100               	movlb	0	; () banked
  3641  001BA6  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3642  001BA8  0EFF               	movlw	255
  3643  001BAA  0100               	movlb	0	; () banked
  3644  001BAC  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3645  001BAE  0100               	movlb	0	; () banked
  3646  001BB0  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3647  001BB2  0E00               	movlw	0
  3648  001BB4  0100               	movlb	0	; () banked
  3649  001BB6  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3650  001BB8  0100               	movlb	0	; () banked
  3651  001BBA  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3652  001BBC  0E00               	movlw	0
  3653  001BBE  0100               	movlb	0	; () banked
  3654  001BC0  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3655  001BC2  0100               	movlb	0	; () banked
  3656  001BC4  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;can\CANlib.h: 710: tamp = tamp >> 8;
  3660  001BC6  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3661  001BCA  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3662  001BCE  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3663  001BD2  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3664  001BD6  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  3665  001BDA  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  3666  001BDE  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  3667  001BE2  0100               	movlb	0	; () banked
  3668  001BE4  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  3669  001BE6  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3670  001BEA  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3671  001BEE  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3672  001BF2  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;can\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3676  001BF6  C07D  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;can\CANlib.h: 713: if (mask & 0x00010000)
  3680  001BFA  0100               	movlb	0	; () banked
  3681  001BFC  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3682  001BFE  D003               	goto	l441
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;can\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3686  001C00  010F               	movlb	15	; () banked
  3687  001C02  811D               	bsf	29,0,b	;volatile
  3688  001C04  D002               	goto	l442
  3689  001C06                     l441:
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;can\CANlib.h: 715: else
  3693                           ;can\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3694  001C06  010F               	movlb	15	; () banked
  3695  001C08  911D               	bcf	29,0,b	;volatile
  3696  001C0A                     l442:
  3697                           
  3698                           ; BSR set to: 15
  3699                           ;can\CANlib.h: 718: if (mask & 0x00020000)
  3700  001C0A  0100               	movlb	0	; () banked
  3701  001C0C  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3702  001C0E  D003               	goto	l443
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;can\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3706  001C10  010F               	movlb	15	; () banked
  3707  001C12  831D               	bsf	29,1,b	;volatile
  3708  001C14  D002               	goto	l444
  3709  001C16                     l443:
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;can\CANlib.h: 720: else
  3713                           ;can\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3714  001C16  010F               	movlb	15	; () banked
  3715  001C18  931D               	bcf	29,1,b	;volatile
  3716  001C1A                     l444:
  3717                           
  3718                           ; BSR set to: 15
  3719                           ;can\CANlib.h: 723: if (mask & 0x00040000)
  3720  001C1A  0100               	movlb	0	; () banked
  3721  001C1C  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3722  001C1E  D003               	goto	l445
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;can\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3726  001C20  010F               	movlb	15	; () banked
  3727  001C22  8B1D               	bsf	29,5,b	;volatile
  3728  001C24  D002               	goto	l446
  3729  001C26                     l445:
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;can\CANlib.h: 725: else
  3733                           ;can\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3734  001C26  010F               	movlb	15	; () banked
  3735  001C28  9B1D               	bcf	29,5,b	;volatile
  3736  001C2A                     l446:
  3737                           
  3738                           ; BSR set to: 15
  3739                           ;can\CANlib.h: 728: if (mask & 0x00080000)
  3740  001C2A  0100               	movlb	0	; () banked
  3741  001C2C  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3742  001C2E  D003               	goto	l447
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;can\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3746  001C30  010F               	movlb	15	; () banked
  3747  001C32  8D1D               	bsf	29,6,b	;volatile
  3748  001C34  D002               	goto	l448
  3749  001C36                     l447:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;can\CANlib.h: 730: else
  3753                           ;can\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3754  001C36  010F               	movlb	15	; () banked
  3755  001C38  9D1D               	bcf	29,6,b	;volatile
  3756  001C3A                     l448:
  3757                           
  3758                           ; BSR set to: 15
  3759                           ;can\CANlib.h: 733: if (mask & 0x00100000)
  3760  001C3A  0100               	movlb	0	; () banked
  3761  001C3C  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3762  001C3E  D003               	goto	l449
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;can\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3766  001C40  010F               	movlb	15	; () banked
  3767  001C42  8F1D               	bsf	29,7,b	;volatile
  3768  001C44  D002               	goto	l2596
  3769  001C46                     l449:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;can\CANlib.h: 735: else
  3773                           ;can\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3774  001C46  010F               	movlb	15	; () banked
  3775  001C48  9F1D               	bcf	29,7,b	;volatile
  3776  001C4A                     l2596:
  3777                           
  3778                           ; BSR set to: 15
  3779                           ;can\CANlib.h: 738: tamp = (mask >> 21);
  3780  001C4A  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3781  001C4E  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3782  001C52  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3783  001C56  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3784  001C5A  0E16               	movlw	22
  3785  001C5C  D006               	goto	u2300
  3786  001C5E                     u2305:
  3787  001C5E  0100               	movlb	0	; () banked
  3788  001C60  90D8               	bcf	status,0,c
  3789  001C62  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3790  001C64  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3791  001C66  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3792  001C68  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3793  001C6A                     u2300:
  3794  001C6A  2EE8               	decfsz	wreg,f,c
  3795  001C6C  D7F8               	goto	u2305
  3796  001C6E  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3797  001C72  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3798  001C76  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3799  001C7A  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;can\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3803  001C7E  0100               	movlb	0	; () banked
  3804  001C80  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3805  001C82  0100               	movlb	0	; () banked
  3806  001C84  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3807  001C86  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3808  001C88  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3809  001C8A  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;can\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3813  001C8C  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3814  001C90  0012               	return	
  3815  001C92                     __end_of_CANSetMask:
  3816                           	opt stack 0
  3817                           tblptru	equ	0xFF8
  3818                           tblptrh	equ	0xFF7
  3819                           tblptrl	equ	0xFF6
  3820                           tablat	equ	0xFF5
  3821                           intcon	equ	0xFF2
  3822                           intcon2	equ	0xFF1
  3823                           postinc0	equ	0xFEE
  3824                           wreg	equ	0xFE8
  3825                           postdec1	equ	0xFE5
  3826                           fsr1l	equ	0xFE1
  3827                           indf2	equ	0xFDF
  3828                           fsr2h	equ	0xFDA
  3829                           fsr2l	equ	0xFD9
  3830                           status	equ	0xFD8
  3831                           
  3832 ;; *************** function _CANSetFilter *****************
  3833 ;; Defined at:
  3834 ;;		line 748 in file "../../Scuola/Triennio/Tesina/can\CANlib.h"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  numBuffer       1    wreg     enum E16881
  3837 ;;  filter          4   19[BANK0 ] unsigned long 
  3838 ;;  type            1   23[BANK0 ] enum E16844
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  numBuffer       1   28[BANK0 ] enum E16881
  3841 ;;  tamp            4   29[BANK0 ] unsigned long 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;		None               void
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3851 ;;      Params:         0       5       0       0
  3852 ;;      Locals:         0       5       0       0
  3853 ;;      Temps:          0       4       0       0
  3854 ;;      Totals:         0      14       0       0
  3855 ;;Total ram usage:       14 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    4
  3858 ;; This function calls:
  3859 ;;		Nothing
  3860 ;; This function is called by:
  3861 ;;		_CANInitialize
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text8
  3866  000156                     __ptext8:
  3867                           	opt stack 0
  3868  000156                     _CANSetFilter:
  3869                           	opt stack 24
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;incstack = 0
  3873                           ;CANSetFilter@numBuffer stored from wreg
  3874  000156  0100               	movlb	0	; () banked
  3875  000158  6F7C               	movwf	CANSetFilter@numBuffer& (0+255),b
  3876                           
  3877                           ;can\CANlib.h: 750: unsigned long tamp;
  3878                           ;can\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3879  00015A  0100               	movlb	0	; () banked
  3880  00015C  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3881  00015E  0100               	movlb	0	; () banked
  3882  000160  A4D8               	btfss	status,2,c
  3883  000162  D058               	goto	l2620
  3884                           
  3885                           ; BSR set to: 0
  3886  000164  0100               	movlb	0	; () banked
  3887  000166  2977               	incf	CANSetFilter@type& (0+255),w,b
  3888  000168  A4D8               	btfss	status,2,c
  3889  00016A  D054               	goto	l2620
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;can\CANlib.h: 753: {
  3893                           ;can\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3894  00016C  010F               	movlb	15	; () banked
  3895  00016E  9701               	bcf	1,3,b	;volatile
  3896                           
  3897                           ; BSR set to: 15
  3898                           ;can\CANlib.h: 756: tamp = (filter >> 3);
  3899  000170  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  3900  000174  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3901  000178  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3902  00017C  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3903  000180  0E04               	movlw	4
  3904  000182  D006               	goto	u2330
  3905  000184                     u2335:
  3906  000184  0100               	movlb	0	; () banked
  3907  000186  90D8               	bcf	status,0,c
  3908  000188  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3909  00018A  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3910  00018C  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3911  00018E  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  3912  000190                     u2330:
  3913  000190  2EE8               	decfsz	wreg,f,c
  3914  000192  D7F8               	goto	u2335
  3915  000194  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  3916  000198  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3917  00019C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3918  0001A0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;can\CANlib.h: 757: tamp = tamp & 0x000000FF;
  3922  0001A4  0100               	movlb	0	; () banked
  3923  0001A6  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  3924  0001A8  0100               	movlb	0	; () banked
  3925  0001AA  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  3926  0001AC  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3927  0001AE  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3928  0001B0  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;can\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3932  0001B2  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;can\CANlib.h: 760: tamp = filter & 0x00000007;
  3936  0001B6  0E07               	movlw	7
  3937  0001B8  0100               	movlb	0	; () banked
  3938  0001BA  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  3939  0001BC  0100               	movlb	0	; () banked
  3940  0001BE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  3941  0001C0  0E00               	movlw	0
  3942  0001C2  0100               	movlb	0	; () banked
  3943  0001C4  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3944  0001C6  0100               	movlb	0	; () banked
  3945  0001C8  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3946  0001CA  0E00               	movlw	0
  3947  0001CC  0100               	movlb	0	; () banked
  3948  0001CE  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3949  0001D0  0100               	movlb	0	; () banked
  3950  0001D2  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3951  0001D4  0E00               	movlw	0
  3952  0001D6  0100               	movlb	0	; () banked
  3953  0001D8  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3954  0001DA  0100               	movlb	0	; () banked
  3955  0001DC  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;can\CANlib.h: 761: tamp = tamp << 5;
  3959  0001DE  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  3960  0001E2  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3961  0001E6  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3962  0001EA  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3963  0001EE  0E05               	movlw	5
  3964  0001F0                     u2345:
  3965  0001F0  90D8               	bcf	status,0,c
  3966  0001F2  0100               	movlb	0	; () banked
  3967  0001F4  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  3968  0001F6  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3969  0001F8  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3970  0001FA  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3971  0001FC  2EE8               	decfsz	wreg,f,c
  3972  0001FE  D7F8               	goto	u2345
  3973  000200  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  3974  000204  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3975  000208  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3976  00020C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;can\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3980  000210  C07D  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3981  000214                     l2620:
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;can\CANlib.h: 763: }
  3985                           ;can\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3986  000214  0100               	movlb	0	; () banked
  3987  000216  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3988  000218  A4D8               	btfss	status,2,c
  3989  00021A  D058               	goto	l2638
  3990                           
  3991                           ; BSR set to: 0
  3992  00021C  0100               	movlb	0	; () banked
  3993  00021E  2977               	incf	CANSetFilter@type& (0+255),w,b
  3994  000220  A4D8               	btfss	status,2,c
  3995  000222  D054               	goto	l2638
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;can\CANlib.h: 766: {
  3999                           ;can\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4000  000224  010F               	movlb	15	; () banked
  4001  000226  9705               	bcf	5,3,b	;volatile
  4002                           
  4003                           ; BSR set to: 15
  4004                           ;can\CANlib.h: 769: tamp = (filter >> 3);
  4005  000228  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4006  00022C  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4007  000230  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4008  000234  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4009  000238  0E04               	movlw	4
  4010  00023A  D006               	goto	u2370
  4011  00023C                     u2375:
  4012  00023C  0100               	movlb	0	; () banked
  4013  00023E  90D8               	bcf	status,0,c
  4014  000240  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4015  000242  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4016  000244  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4017  000246  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4018  000248                     u2370:
  4019  000248  2EE8               	decfsz	wreg,f,c
  4020  00024A  D7F8               	goto	u2375
  4021  00024C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4022  000250  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4023  000254  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4024  000258  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;can\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4028  00025C  0100               	movlb	0	; () banked
  4029  00025E  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4030  000260  0100               	movlb	0	; () banked
  4031  000262  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4032  000264  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4033  000266  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4034  000268  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;can\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4038  00026A  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;can\CANlib.h: 773: tamp = filter & 0x00000007;
  4042  00026E  0E07               	movlw	7
  4043  000270  0100               	movlb	0	; () banked
  4044  000272  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4045  000274  0100               	movlb	0	; () banked
  4046  000276  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4047  000278  0E00               	movlw	0
  4048  00027A  0100               	movlb	0	; () banked
  4049  00027C  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4050  00027E  0100               	movlb	0	; () banked
  4051  000280  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4052  000282  0E00               	movlw	0
  4053  000284  0100               	movlb	0	; () banked
  4054  000286  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4055  000288  0100               	movlb	0	; () banked
  4056  00028A  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4057  00028C  0E00               	movlw	0
  4058  00028E  0100               	movlb	0	; () banked
  4059  000290  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4060  000292  0100               	movlb	0	; () banked
  4061  000294  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;can\CANlib.h: 774: tamp = tamp << 5;
  4065  000296  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4066  00029A  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4067  00029E  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4068  0002A2  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4069  0002A6  0E05               	movlw	5
  4070  0002A8                     u2385:
  4071  0002A8  90D8               	bcf	status,0,c
  4072  0002AA  0100               	movlb	0	; () banked
  4073  0002AC  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4074  0002AE  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4075  0002B0  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4076  0002B2  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4077  0002B4  2EE8               	decfsz	wreg,f,c
  4078  0002B6  D7F8               	goto	u2385
  4079  0002B8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4080  0002BC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4081  0002C0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4082  0002C4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;can\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4086  0002C8  C07D  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4087  0002CC                     l2638:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;can\CANlib.h: 776: }
  4091                           ;can\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4092  0002CC  0E02               	movlw	2
  4093  0002CE  0100               	movlb	0	; () banked
  4094  0002D0  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4095  0002D2  A4D8               	btfss	status,2,c
  4096  0002D4  D058               	goto	l2656
  4097                           
  4098                           ; BSR set to: 0
  4099  0002D6  0100               	movlb	0	; () banked
  4100  0002D8  2977               	incf	CANSetFilter@type& (0+255),w,b
  4101  0002DA  A4D8               	btfss	status,2,c
  4102  0002DC  D054               	goto	l2656
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;can\CANlib.h: 779: {
  4106                           ;can\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4107  0002DE  010F               	movlb	15	; () banked
  4108  0002E0  9709               	bcf	9,3,b	;volatile
  4109                           
  4110                           ; BSR set to: 15
  4111                           ;can\CANlib.h: 782: tamp = (filter >> 3);
  4112  0002E2  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4113  0002E6  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4114  0002EA  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4115  0002EE  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4116  0002F2  0E04               	movlw	4
  4117  0002F4  D006               	goto	u2410
  4118  0002F6                     u2415:
  4119  0002F6  0100               	movlb	0	; () banked
  4120  0002F8  90D8               	bcf	status,0,c
  4121  0002FA  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4122  0002FC  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4123  0002FE  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4124  000300  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4125  000302                     u2410:
  4126  000302  2EE8               	decfsz	wreg,f,c
  4127  000304  D7F8               	goto	u2415
  4128  000306  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4129  00030A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4130  00030E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4131  000312  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;can\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4135  000316  0100               	movlb	0	; () banked
  4136  000318  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4137  00031A  0100               	movlb	0	; () banked
  4138  00031C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4139  00031E  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4140  000320  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4141  000322  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;can\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4145  000324  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;can\CANlib.h: 786: tamp = filter & 0x00000007;
  4149  000328  0E07               	movlw	7
  4150  00032A  0100               	movlb	0	; () banked
  4151  00032C  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4152  00032E  0100               	movlb	0	; () banked
  4153  000330  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4154  000332  0E00               	movlw	0
  4155  000334  0100               	movlb	0	; () banked
  4156  000336  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4157  000338  0100               	movlb	0	; () banked
  4158  00033A  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4159  00033C  0E00               	movlw	0
  4160  00033E  0100               	movlb	0	; () banked
  4161  000340  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4162  000342  0100               	movlb	0	; () banked
  4163  000344  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4164  000346  0E00               	movlw	0
  4165  000348  0100               	movlb	0	; () banked
  4166  00034A  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4167  00034C  0100               	movlb	0	; () banked
  4168  00034E  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;can\CANlib.h: 787: tamp = tamp << 5;
  4172  000350  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4173  000354  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4174  000358  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4175  00035C  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4176  000360  0E05               	movlw	5
  4177  000362                     u2425:
  4178  000362  90D8               	bcf	status,0,c
  4179  000364  0100               	movlb	0	; () banked
  4180  000366  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4181  000368  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4182  00036A  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4183  00036C  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4184  00036E  2EE8               	decfsz	wreg,f,c
  4185  000370  D7F8               	goto	u2425
  4186  000372  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4187  000376  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4188  00037A  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4189  00037E  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;can\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4193  000382  C07D  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4194  000386                     l2656:
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;can\CANlib.h: 789: }
  4198                           ;can\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4199  000386  0E03               	movlw	3
  4200  000388  0100               	movlb	0	; () banked
  4201  00038A  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4202  00038C  A4D8               	btfss	status,2,c
  4203  00038E  D058               	goto	l2674
  4204                           
  4205                           ; BSR set to: 0
  4206  000390  0100               	movlb	0	; () banked
  4207  000392  2977               	incf	CANSetFilter@type& (0+255),w,b
  4208  000394  A4D8               	btfss	status,2,c
  4209  000396  D054               	goto	l2674
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;can\CANlib.h: 792: {
  4213                           ;can\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4214  000398  010F               	movlb	15	; () banked
  4215  00039A  970D               	bcf	13,3,b	;volatile
  4216                           
  4217                           ; BSR set to: 15
  4218                           ;can\CANlib.h: 795: tamp = (filter >> 3);
  4219  00039C  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4220  0003A0  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4221  0003A4  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4222  0003A8  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4223  0003AC  0E04               	movlw	4
  4224  0003AE  D006               	goto	u2450
  4225  0003B0                     u2455:
  4226  0003B0  0100               	movlb	0	; () banked
  4227  0003B2  90D8               	bcf	status,0,c
  4228  0003B4  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4229  0003B6  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4230  0003B8  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4231  0003BA  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4232  0003BC                     u2450:
  4233  0003BC  2EE8               	decfsz	wreg,f,c
  4234  0003BE  D7F8               	goto	u2455
  4235  0003C0  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4236  0003C4  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4237  0003C8  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4238  0003CC  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;can\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4242  0003D0  0100               	movlb	0	; () banked
  4243  0003D2  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4244  0003D4  0100               	movlb	0	; () banked
  4245  0003D6  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4246  0003D8  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4247  0003DA  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4248  0003DC  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;can\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4252  0003DE  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;can\CANlib.h: 799: tamp = filter & 0x00000007;
  4256  0003E2  0E07               	movlw	7
  4257  0003E4  0100               	movlb	0	; () banked
  4258  0003E6  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4259  0003E8  0100               	movlb	0	; () banked
  4260  0003EA  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4261  0003EC  0E00               	movlw	0
  4262  0003EE  0100               	movlb	0	; () banked
  4263  0003F0  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4264  0003F2  0100               	movlb	0	; () banked
  4265  0003F4  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4266  0003F6  0E00               	movlw	0
  4267  0003F8  0100               	movlb	0	; () banked
  4268  0003FA  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4269  0003FC  0100               	movlb	0	; () banked
  4270  0003FE  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4271  000400  0E00               	movlw	0
  4272  000402  0100               	movlb	0	; () banked
  4273  000404  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4274  000406  0100               	movlb	0	; () banked
  4275  000408  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;can\CANlib.h: 800: tamp = tamp << 5;
  4279  00040A  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4280  00040E  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4281  000412  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4282  000416  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4283  00041A  0E05               	movlw	5
  4284  00041C                     u2465:
  4285  00041C  90D8               	bcf	status,0,c
  4286  00041E  0100               	movlb	0	; () banked
  4287  000420  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4288  000422  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4289  000424  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4290  000426  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4291  000428  2EE8               	decfsz	wreg,f,c
  4292  00042A  D7F8               	goto	u2465
  4293  00042C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4294  000430  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4295  000434  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4296  000438  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;can\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4300  00043C  C07D  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4301  000440                     l2674:
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;can\CANlib.h: 802: }
  4305                           ;can\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4306  000440  0E04               	movlw	4
  4307  000442  0100               	movlb	0	; () banked
  4308  000444  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4309  000446  A4D8               	btfss	status,2,c
  4310  000448  D058               	goto	l2692
  4311                           
  4312                           ; BSR set to: 0
  4313  00044A  0100               	movlb	0	; () banked
  4314  00044C  2977               	incf	CANSetFilter@type& (0+255),w,b
  4315  00044E  A4D8               	btfss	status,2,c
  4316  000450  D054               	goto	l2692
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;can\CANlib.h: 805: {
  4320                           ;can\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4321  000452  010F               	movlb	15	; () banked
  4322  000454  9711               	bcf	17,3,b	;volatile
  4323                           
  4324                           ; BSR set to: 15
  4325                           ;can\CANlib.h: 808: tamp = (filter >> 3);
  4326  000456  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4327  00045A  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4328  00045E  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4329  000462  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4330  000466  0E04               	movlw	4
  4331  000468  D006               	goto	u2490
  4332  00046A                     u2495:
  4333  00046A  0100               	movlb	0	; () banked
  4334  00046C  90D8               	bcf	status,0,c
  4335  00046E  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4336  000470  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4337  000472  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4338  000474  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4339  000476                     u2490:
  4340  000476  2EE8               	decfsz	wreg,f,c
  4341  000478  D7F8               	goto	u2495
  4342  00047A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4343  00047E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4344  000482  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4345  000486  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;can\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4349  00048A  0100               	movlb	0	; () banked
  4350  00048C  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4351  00048E  0100               	movlb	0	; () banked
  4352  000490  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4353  000492  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4354  000494  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4355  000496  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;can\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4359  000498  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;can\CANlib.h: 812: tamp = filter & 0x00000007;
  4363  00049C  0E07               	movlw	7
  4364  00049E  0100               	movlb	0	; () banked
  4365  0004A0  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4366  0004A2  0100               	movlb	0	; () banked
  4367  0004A4  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4368  0004A6  0E00               	movlw	0
  4369  0004A8  0100               	movlb	0	; () banked
  4370  0004AA  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4371  0004AC  0100               	movlb	0	; () banked
  4372  0004AE  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4373  0004B0  0E00               	movlw	0
  4374  0004B2  0100               	movlb	0	; () banked
  4375  0004B4  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4376  0004B6  0100               	movlb	0	; () banked
  4377  0004B8  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4378  0004BA  0E00               	movlw	0
  4379  0004BC  0100               	movlb	0	; () banked
  4380  0004BE  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4381  0004C0  0100               	movlb	0	; () banked
  4382  0004C2  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;can\CANlib.h: 813: tamp = tamp << 5;
  4386  0004C4  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4387  0004C8  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4388  0004CC  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4389  0004D0  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4390  0004D4  0E05               	movlw	5
  4391  0004D6                     u2505:
  4392  0004D6  90D8               	bcf	status,0,c
  4393  0004D8  0100               	movlb	0	; () banked
  4394  0004DA  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4395  0004DC  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4396  0004DE  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4397  0004E0  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4398  0004E2  2EE8               	decfsz	wreg,f,c
  4399  0004E4  D7F8               	goto	u2505
  4400  0004E6  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4401  0004EA  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4402  0004EE  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4403  0004F2  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;can\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4407  0004F6  C07D  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4408  0004FA                     l2692:
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;can\CANlib.h: 815: }
  4412                           ;can\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4413  0004FA  0E05               	movlw	5
  4414  0004FC  0100               	movlb	0	; () banked
  4415  0004FE  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4416  000500  A4D8               	btfss	status,2,c
  4417  000502  D058               	goto	l2710
  4418                           
  4419                           ; BSR set to: 0
  4420  000504  0100               	movlb	0	; () banked
  4421  000506  2977               	incf	CANSetFilter@type& (0+255),w,b
  4422  000508  A4D8               	btfss	status,2,c
  4423  00050A  D054               	goto	l2710
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;can\CANlib.h: 818: {
  4427                           ;can\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4428  00050C  010F               	movlb	15	; () banked
  4429  00050E  9715               	bcf	21,3,b	;volatile
  4430                           
  4431                           ; BSR set to: 15
  4432                           ;can\CANlib.h: 821: tamp = (filter >> 3);
  4433  000510  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4434  000514  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4435  000518  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4436  00051C  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4437  000520  0E04               	movlw	4
  4438  000522  D006               	goto	u2530
  4439  000524                     u2535:
  4440  000524  0100               	movlb	0	; () banked
  4441  000526  90D8               	bcf	status,0,c
  4442  000528  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4443  00052A  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4444  00052C  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4445  00052E  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4446  000530                     u2530:
  4447  000530  2EE8               	decfsz	wreg,f,c
  4448  000532  D7F8               	goto	u2535
  4449  000534  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4450  000538  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4451  00053C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4452  000540  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;can\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4456  000544  0100               	movlb	0	; () banked
  4457  000546  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4458  000548  0100               	movlb	0	; () banked
  4459  00054A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4460  00054C  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4461  00054E  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4462  000550  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;can\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4466  000552  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;can\CANlib.h: 825: tamp = filter & 0x00000007;
  4470  000556  0E07               	movlw	7
  4471  000558  0100               	movlb	0	; () banked
  4472  00055A  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4473  00055C  0100               	movlb	0	; () banked
  4474  00055E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4475  000560  0E00               	movlw	0
  4476  000562  0100               	movlb	0	; () banked
  4477  000564  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4478  000566  0100               	movlb	0	; () banked
  4479  000568  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4480  00056A  0E00               	movlw	0
  4481  00056C  0100               	movlb	0	; () banked
  4482  00056E  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4483  000570  0100               	movlb	0	; () banked
  4484  000572  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4485  000574  0E00               	movlw	0
  4486  000576  0100               	movlb	0	; () banked
  4487  000578  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4488  00057A  0100               	movlb	0	; () banked
  4489  00057C  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;can\CANlib.h: 826: tamp = tamp << 5;
  4493  00057E  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4494  000582  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4495  000586  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4496  00058A  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4497  00058E  0E05               	movlw	5
  4498  000590                     u2545:
  4499  000590  90D8               	bcf	status,0,c
  4500  000592  0100               	movlb	0	; () banked
  4501  000594  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4502  000596  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4503  000598  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4504  00059A  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4505  00059C  2EE8               	decfsz	wreg,f,c
  4506  00059E  D7F8               	goto	u2545
  4507  0005A0  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4508  0005A4  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4509  0005A8  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4510  0005AC  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;can\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4514  0005B0  C07D  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4515  0005B4                     l2710:
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;can\CANlib.h: 828: }
  4519                           ;can\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4520  0005B4  0100               	movlb	0	; () banked
  4521  0005B6  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4522  0005B8  0100               	movlb	0	; () banked
  4523  0005BA  A4D8               	btfss	status,2,c
  4524  0005BC  D089               	goto	l2744
  4525                           
  4526                           ; BSR set to: 0
  4527  0005BE  0EF7               	movlw	247
  4528  0005C0  0100               	movlb	0	; () banked
  4529  0005C2  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  4530  0005C4  A4D8               	btfss	status,2,c
  4531  0005C6  D084               	goto	l2744
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;can\CANlib.h: 832: {
  4535                           ;can\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4536  0005C8  010F               	movlb	15	; () banked
  4537  0005CA  8701               	bsf	1,3,b	;volatile
  4538                           
  4539                           ; BSR set to: 15
  4540                           ;can\CANlib.h: 835: tamp = filter & 0x000000FF;
  4541  0005CC  0100               	movlb	0	; () banked
  4542  0005CE  5173               	movf	CANSetFilter@filter& (0+255),w,b
  4543  0005D0  0100               	movlb	0	; () banked
  4544  0005D2  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4545  0005D4  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4546  0005D6  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4547  0005D8  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;can\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4551  0005DA  C07D  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;can\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4555  0005DE  0E00               	movlw	0
  4556  0005E0  0100               	movlb	0	; () banked
  4557  0005E2  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4558  0005E4  0100               	movlb	0	; () banked
  4559  0005E6  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4560  0005E8  0EFF               	movlw	255
  4561  0005EA  0100               	movlb	0	; () banked
  4562  0005EC  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4563  0005EE  0100               	movlb	0	; () banked
  4564  0005F0  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4565  0005F2  0E00               	movlw	0
  4566  0005F4  0100               	movlb	0	; () banked
  4567  0005F6  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4568  0005F8  0100               	movlb	0	; () banked
  4569  0005FA  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4570  0005FC  0E00               	movlw	0
  4571  0005FE  0100               	movlb	0	; () banked
  4572  000600  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4573  000602  0100               	movlb	0	; () banked
  4574  000604  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;can\CANlib.h: 839: tamp = tamp >> 8;
  4578  000606  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4579  00060A  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4580  00060E  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4581  000612  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4582  000616  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  4583  00061A  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4584  00061E  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4585  000622  0100               	movlb	0	; () banked
  4586  000624  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  4587  000626  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4588  00062A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4589  00062E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4590  000632  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;can\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4594  000636  C07D  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;can\CANlib.h: 842: if (filter & 0x00010000)
  4598  00063A  0100               	movlb	0	; () banked
  4599  00063C  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4600  00063E  D003               	goto	l461
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;can\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4604  000640  010F               	movlb	15	; () banked
  4605  000642  8101               	bsf	1,0,b	;volatile
  4606  000644  D002               	goto	l462
  4607  000646                     l461:
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;can\CANlib.h: 844: else
  4611                           ;can\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4612  000646  010F               	movlb	15	; () banked
  4613  000648  9101               	bcf	1,0,b	;volatile
  4614  00064A                     l462:
  4615                           
  4616                           ; BSR set to: 15
  4617                           ;can\CANlib.h: 847: if (filter & 0x00020000)
  4618  00064A  0100               	movlb	0	; () banked
  4619  00064C  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4620  00064E  D003               	goto	l463
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;can\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4624  000650  010F               	movlb	15	; () banked
  4625  000652  8301               	bsf	1,1,b	;volatile
  4626  000654  D002               	goto	l464
  4627  000656                     l463:
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;can\CANlib.h: 849: else
  4631                           ;can\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4632  000656  010F               	movlb	15	; () banked
  4633  000658  9301               	bcf	1,1,b	;volatile
  4634  00065A                     l464:
  4635                           
  4636                           ; BSR set to: 15
  4637                           ;can\CANlib.h: 852: if (filter & 0x00040000)
  4638  00065A  0100               	movlb	0	; () banked
  4639  00065C  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4640  00065E  D003               	goto	l465
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;can\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4644  000660  010F               	movlb	15	; () banked
  4645  000662  8B01               	bsf	1,5,b	;volatile
  4646  000664  D002               	goto	l466
  4647  000666                     l465:
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;can\CANlib.h: 854: else
  4651                           ;can\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4652  000666  010F               	movlb	15	; () banked
  4653  000668  9B01               	bcf	1,5,b	;volatile
  4654  00066A                     l466:
  4655                           
  4656                           ; BSR set to: 15
  4657                           ;can\CANlib.h: 857: if (filter & 0x00080000)
  4658  00066A  0100               	movlb	0	; () banked
  4659  00066C  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4660  00066E  D003               	goto	l467
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;can\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4664  000670  010F               	movlb	15	; () banked
  4665  000672  8D01               	bsf	1,6,b	;volatile
  4666  000674  D002               	goto	l468
  4667  000676                     l467:
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;can\CANlib.h: 859: else
  4671                           ;can\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4672  000676  010F               	movlb	15	; () banked
  4673  000678  9D01               	bcf	1,6,b	;volatile
  4674  00067A                     l468:
  4675                           
  4676                           ; BSR set to: 15
  4677                           ;can\CANlib.h: 862: if (filter & 0x00100000)
  4678  00067A  0100               	movlb	0	; () banked
  4679  00067C  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4680  00067E  D003               	goto	l469
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;can\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4684  000680  010F               	movlb	15	; () banked
  4685  000682  8F01               	bsf	1,7,b	;volatile
  4686  000684  D002               	goto	l2738
  4687  000686                     l469:
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;can\CANlib.h: 864: else
  4691                           ;can\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4692  000686  010F               	movlb	15	; () banked
  4693  000688  9F01               	bcf	1,7,b	;volatile
  4694  00068A                     l2738:
  4695                           
  4696                           ; BSR set to: 15
  4697                           ;can\CANlib.h: 867: tamp = (filter >> 21);
  4698  00068A  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4699  00068E  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4700  000692  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4701  000696  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4702  00069A  0E16               	movlw	22
  4703  00069C  D006               	goto	u2620
  4704  00069E                     u2625:
  4705  00069E  0100               	movlb	0	; () banked
  4706  0006A0  90D8               	bcf	status,0,c
  4707  0006A2  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4708  0006A4  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4709  0006A6  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4710  0006A8  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4711  0006AA                     u2620:
  4712  0006AA  2EE8               	decfsz	wreg,f,c
  4713  0006AC  D7F8               	goto	u2625
  4714  0006AE  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4715  0006B2  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4716  0006B6  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4717  0006BA  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;can\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4721  0006BE  0100               	movlb	0	; () banked
  4722  0006C0  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4723  0006C2  0100               	movlb	0	; () banked
  4724  0006C4  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4725  0006C6  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4726  0006C8  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4727  0006CA  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;can\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4731  0006CC  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4732  0006D0                     l2744:
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;can\CANlib.h: 870: }
  4736                           ;can\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4737  0006D0  0100               	movlb	0	; () banked
  4738  0006D2  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4739  0006D4  A4D8               	btfss	status,2,c
  4740  0006D6  D089               	goto	l2778
  4741                           
  4742                           ; BSR set to: 0
  4743  0006D8  0EF7               	movlw	247
  4744  0006DA  0100               	movlb	0	; () banked
  4745  0006DC  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  4746  0006DE  A4D8               	btfss	status,2,c
  4747  0006E0  D084               	goto	l2778
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;can\CANlib.h: 873: {
  4751                           ;can\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4752  0006E2  010F               	movlb	15	; () banked
  4753  0006E4  8705               	bsf	5,3,b	;volatile
  4754                           
  4755                           ; BSR set to: 15
  4756                           ;can\CANlib.h: 876: tamp = filter & 0x000000FF;
  4757  0006E6  0100               	movlb	0	; () banked
  4758  0006E8  5173               	movf	CANSetFilter@filter& (0+255),w,b
  4759  0006EA  0100               	movlb	0	; () banked
  4760  0006EC  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4761  0006EE  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4762  0006F0  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4763  0006F2  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;can\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4767  0006F4  C07D  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;can\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4771  0006F8  0E00               	movlw	0
  4772  0006FA  0100               	movlb	0	; () banked
  4773  0006FC  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4774  0006FE  0100               	movlb	0	; () banked
  4775  000700  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4776  000702  0EFF               	movlw	255
  4777  000704  0100               	movlb	0	; () banked
  4778  000706  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4779  000708  0100               	movlb	0	; () banked
  4780  00070A  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4781  00070C  0E00               	movlw	0
  4782  00070E  0100               	movlb	0	; () banked
  4783  000710  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4784  000712  0100               	movlb	0	; () banked
  4785  000714  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4786  000716  0E00               	movlw	0
  4787  000718  0100               	movlb	0	; () banked
  4788  00071A  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4789  00071C  0100               	movlb	0	; () banked
  4790  00071E  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;can\CANlib.h: 880: tamp = tamp >> 8;
  4794  000720  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4795  000724  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4796  000728  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4797  00072C  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4798  000730  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  4799  000734  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4800  000738  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4801  00073C  0100               	movlb	0	; () banked
  4802  00073E  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  4803  000740  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4804  000744  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4805  000748  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4806  00074C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;can\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4810  000750  C07D  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;can\CANlib.h: 883: if (filter & 0x00010000)
  4814  000754  0100               	movlb	0	; () banked
  4815  000756  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4816  000758  D003               	goto	l472
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;can\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4820  00075A  010F               	movlb	15	; () banked
  4821  00075C  8105               	bsf	5,0,b	;volatile
  4822  00075E  D002               	goto	l473
  4823  000760                     l472:
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;can\CANlib.h: 885: else
  4827                           ;can\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4828  000760  010F               	movlb	15	; () banked
  4829  000762  9105               	bcf	5,0,b	;volatile
  4830  000764                     l473:
  4831                           
  4832                           ; BSR set to: 15
  4833                           ;can\CANlib.h: 888: if (filter & 0x00020000)
  4834  000764  0100               	movlb	0	; () banked
  4835  000766  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4836  000768  D003               	goto	l474
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;can\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4840  00076A  010F               	movlb	15	; () banked
  4841  00076C  8305               	bsf	5,1,b	;volatile
  4842  00076E  D002               	goto	l475
  4843  000770                     l474:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;can\CANlib.h: 890: else
  4847                           ;can\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4848  000770  010F               	movlb	15	; () banked
  4849  000772  9305               	bcf	5,1,b	;volatile
  4850  000774                     l475:
  4851                           
  4852                           ; BSR set to: 15
  4853                           ;can\CANlib.h: 893: if (filter & 0x00040000)
  4854  000774  0100               	movlb	0	; () banked
  4855  000776  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4856  000778  D003               	goto	l476
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;can\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4860  00077A  010F               	movlb	15	; () banked
  4861  00077C  8B05               	bsf	5,5,b	;volatile
  4862  00077E  D002               	goto	l477
  4863  000780                     l476:
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;can\CANlib.h: 895: else
  4867                           ;can\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4868  000780  010F               	movlb	15	; () banked
  4869  000782  9B05               	bcf	5,5,b	;volatile
  4870  000784                     l477:
  4871                           
  4872                           ; BSR set to: 15
  4873                           ;can\CANlib.h: 898: if (filter & 0x00080000)
  4874  000784  0100               	movlb	0	; () banked
  4875  000786  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4876  000788  D003               	goto	l478
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;can\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4880  00078A  010F               	movlb	15	; () banked
  4881  00078C  8D05               	bsf	5,6,b	;volatile
  4882  00078E  D002               	goto	l479
  4883  000790                     l478:
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;can\CANlib.h: 900: else
  4887                           ;can\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4888  000790  010F               	movlb	15	; () banked
  4889  000792  9D05               	bcf	5,6,b	;volatile
  4890  000794                     l479:
  4891                           
  4892                           ; BSR set to: 15
  4893                           ;can\CANlib.h: 903: if (filter & 0x00100000)
  4894  000794  0100               	movlb	0	; () banked
  4895  000796  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4896  000798  D003               	goto	l480
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;can\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4900  00079A  010F               	movlb	15	; () banked
  4901  00079C  8F05               	bsf	5,7,b	;volatile
  4902  00079E  D002               	goto	l2772
  4903  0007A0                     l480:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;can\CANlib.h: 905: else
  4907                           ;can\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4908  0007A0  010F               	movlb	15	; () banked
  4909  0007A2  9F05               	bcf	5,7,b	;volatile
  4910  0007A4                     l2772:
  4911                           
  4912                           ; BSR set to: 15
  4913                           ;can\CANlib.h: 908: tamp = (filter >> 21);
  4914  0007A4  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4915  0007A8  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4916  0007AC  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4917  0007B0  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4918  0007B4  0E16               	movlw	22
  4919  0007B6  D006               	goto	u2700
  4920  0007B8                     u2705:
  4921  0007B8  0100               	movlb	0	; () banked
  4922  0007BA  90D8               	bcf	status,0,c
  4923  0007BC  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4924  0007BE  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4925  0007C0  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4926  0007C2  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4927  0007C4                     u2700:
  4928  0007C4  2EE8               	decfsz	wreg,f,c
  4929  0007C6  D7F8               	goto	u2705
  4930  0007C8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4931  0007CC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4932  0007D0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4933  0007D4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;can\CANlib.h: 909: tamp = tamp & 0x000000FF;
  4937  0007D8  0100               	movlb	0	; () banked
  4938  0007DA  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4939  0007DC  0100               	movlb	0	; () banked
  4940  0007DE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4941  0007E0  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4942  0007E2  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4943  0007E4  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;can\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4947  0007E6  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4948  0007EA                     l2778:
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;can\CANlib.h: 911: }
  4952                           ;can\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4953  0007EA  0E02               	movlw	2
  4954  0007EC  0100               	movlb	0	; () banked
  4955  0007EE  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4956  0007F0  A4D8               	btfss	status,2,c
  4957  0007F2  D089               	goto	l2812
  4958                           
  4959                           ; BSR set to: 0
  4960  0007F4  0EF7               	movlw	247
  4961  0007F6  0100               	movlb	0	; () banked
  4962  0007F8  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  4963  0007FA  A4D8               	btfss	status,2,c
  4964  0007FC  D084               	goto	l2812
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;can\CANlib.h: 915: {
  4968                           ;can\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4969  0007FE  010F               	movlb	15	; () banked
  4970  000800  8709               	bsf	9,3,b	;volatile
  4971                           
  4972                           ; BSR set to: 15
  4973                           ;can\CANlib.h: 918: tamp = filter & 0x000000FF;
  4974  000802  0100               	movlb	0	; () banked
  4975  000804  5173               	movf	CANSetFilter@filter& (0+255),w,b
  4976  000806  0100               	movlb	0	; () banked
  4977  000808  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4978  00080A  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4979  00080C  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4980  00080E  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;can\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4984  000810  C07D  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;can\CANlib.h: 921: tamp = filter & 0x0000FF00;
  4988  000814  0E00               	movlw	0
  4989  000816  0100               	movlb	0	; () banked
  4990  000818  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4991  00081A  0100               	movlb	0	; () banked
  4992  00081C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4993  00081E  0EFF               	movlw	255
  4994  000820  0100               	movlb	0	; () banked
  4995  000822  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4996  000824  0100               	movlb	0	; () banked
  4997  000826  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4998  000828  0E00               	movlw	0
  4999  00082A  0100               	movlb	0	; () banked
  5000  00082C  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5001  00082E  0100               	movlb	0	; () banked
  5002  000830  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5003  000832  0E00               	movlw	0
  5004  000834  0100               	movlb	0	; () banked
  5005  000836  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5006  000838  0100               	movlb	0	; () banked
  5007  00083A  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;can\CANlib.h: 922: tamp = tamp >> 8;
  5011  00083C  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5012  000840  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5013  000844  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5014  000848  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5015  00084C  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5016  000850  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5017  000854  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5018  000858  0100               	movlb	0	; () banked
  5019  00085A  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5020  00085C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5021  000860  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5022  000864  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5023  000868  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;can\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5027  00086C  C07D  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;can\CANlib.h: 925: if (filter & 0x00010000)
  5031  000870  0100               	movlb	0	; () banked
  5032  000872  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5033  000874  D003               	goto	l483
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;can\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5037  000876  010F               	movlb	15	; () banked
  5038  000878  8109               	bsf	9,0,b	;volatile
  5039  00087A  D002               	goto	l484
  5040  00087C                     l483:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;can\CANlib.h: 927: else
  5044                           ;can\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5045  00087C  010F               	movlb	15	; () banked
  5046  00087E  9109               	bcf	9,0,b	;volatile
  5047  000880                     l484:
  5048                           
  5049                           ; BSR set to: 15
  5050                           ;can\CANlib.h: 930: if (filter & 0x00020000)
  5051  000880  0100               	movlb	0	; () banked
  5052  000882  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5053  000884  D003               	goto	l485
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;can\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5057  000886  010F               	movlb	15	; () banked
  5058  000888  8309               	bsf	9,1,b	;volatile
  5059  00088A  D002               	goto	l486
  5060  00088C                     l485:
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;can\CANlib.h: 932: else
  5064                           ;can\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5065  00088C  010F               	movlb	15	; () banked
  5066  00088E  9309               	bcf	9,1,b	;volatile
  5067  000890                     l486:
  5068                           
  5069                           ; BSR set to: 15
  5070                           ;can\CANlib.h: 935: if (filter & 0x00040000)
  5071  000890  0100               	movlb	0	; () banked
  5072  000892  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5073  000894  D003               	goto	l487
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;can\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5077  000896  010F               	movlb	15	; () banked
  5078  000898  8B09               	bsf	9,5,b	;volatile
  5079  00089A  D002               	goto	l488
  5080  00089C                     l487:
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;can\CANlib.h: 937: else
  5084                           ;can\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5085  00089C  010F               	movlb	15	; () banked
  5086  00089E  9B09               	bcf	9,5,b	;volatile
  5087  0008A0                     l488:
  5088                           
  5089                           ; BSR set to: 15
  5090                           ;can\CANlib.h: 940: if (filter & 0x00080000)
  5091  0008A0  0100               	movlb	0	; () banked
  5092  0008A2  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5093  0008A4  D003               	goto	l489
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;can\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5097  0008A6  010F               	movlb	15	; () banked
  5098  0008A8  8D09               	bsf	9,6,b	;volatile
  5099  0008AA  D002               	goto	l490
  5100  0008AC                     l489:
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;can\CANlib.h: 942: else
  5104                           ;can\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5105  0008AC  010F               	movlb	15	; () banked
  5106  0008AE  9D09               	bcf	9,6,b	;volatile
  5107  0008B0                     l490:
  5108                           
  5109                           ; BSR set to: 15
  5110                           ;can\CANlib.h: 945: if (filter & 0x00100000)
  5111  0008B0  0100               	movlb	0	; () banked
  5112  0008B2  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5113  0008B4  D003               	goto	l491
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;can\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5117  0008B6  010F               	movlb	15	; () banked
  5118  0008B8  8F09               	bsf	9,7,b	;volatile
  5119  0008BA  D002               	goto	l2806
  5120  0008BC                     l491:
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;can\CANlib.h: 947: else
  5124                           ;can\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5125  0008BC  010F               	movlb	15	; () banked
  5126  0008BE  9F09               	bcf	9,7,b	;volatile
  5127  0008C0                     l2806:
  5128                           
  5129                           ; BSR set to: 15
  5130                           ;can\CANlib.h: 950: tamp = (filter >> 21);
  5131  0008C0  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5132  0008C4  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5133  0008C8  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5134  0008CC  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5135  0008D0  0E16               	movlw	22
  5136  0008D2  D006               	goto	u2780
  5137  0008D4                     u2785:
  5138  0008D4  0100               	movlb	0	; () banked
  5139  0008D6  90D8               	bcf	status,0,c
  5140  0008D8  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5141  0008DA  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5142  0008DC  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5143  0008DE  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5144  0008E0                     u2780:
  5145  0008E0  2EE8               	decfsz	wreg,f,c
  5146  0008E2  D7F8               	goto	u2785
  5147  0008E4  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5148  0008E8  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5149  0008EC  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5150  0008F0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;can\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5154  0008F4  0100               	movlb	0	; () banked
  5155  0008F6  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5156  0008F8  0100               	movlb	0	; () banked
  5157  0008FA  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5158  0008FC  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5159  0008FE  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5160  000900  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;can\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5164  000902  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5165  000906                     l2812:
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;can\CANlib.h: 953: }
  5169                           ;can\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5170  000906  0E03               	movlw	3
  5171  000908  0100               	movlb	0	; () banked
  5172  00090A  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5173  00090C  A4D8               	btfss	status,2,c
  5174  00090E  D089               	goto	l2846
  5175                           
  5176                           ; BSR set to: 0
  5177  000910  0EF7               	movlw	247
  5178  000912  0100               	movlb	0	; () banked
  5179  000914  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5180  000916  A4D8               	btfss	status,2,c
  5181  000918  D084               	goto	l2846
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;can\CANlib.h: 956: {
  5185                           ;can\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5186  00091A  010F               	movlb	15	; () banked
  5187  00091C  870D               	bsf	13,3,b	;volatile
  5188                           
  5189                           ; BSR set to: 15
  5190                           ;can\CANlib.h: 959: tamp = filter & 0x000000FF;
  5191  00091E  0100               	movlb	0	; () banked
  5192  000920  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5193  000922  0100               	movlb	0	; () banked
  5194  000924  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5195  000926  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5196  000928  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5197  00092A  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;can\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5201  00092C  C07D  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;can\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5205  000930  0E00               	movlw	0
  5206  000932  0100               	movlb	0	; () banked
  5207  000934  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5208  000936  0100               	movlb	0	; () banked
  5209  000938  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5210  00093A  0EFF               	movlw	255
  5211  00093C  0100               	movlb	0	; () banked
  5212  00093E  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5213  000940  0100               	movlb	0	; () banked
  5214  000942  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5215  000944  0E00               	movlw	0
  5216  000946  0100               	movlb	0	; () banked
  5217  000948  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5218  00094A  0100               	movlb	0	; () banked
  5219  00094C  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5220  00094E  0E00               	movlw	0
  5221  000950  0100               	movlb	0	; () banked
  5222  000952  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5223  000954  0100               	movlb	0	; () banked
  5224  000956  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;can\CANlib.h: 963: tamp = tamp >> 8;
  5228  000958  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5229  00095C  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5230  000960  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5231  000964  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5232  000968  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5233  00096C  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5234  000970  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5235  000974  0100               	movlb	0	; () banked
  5236  000976  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5237  000978  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5238  00097C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5239  000980  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5240  000984  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;can\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5244  000988  C07D  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;can\CANlib.h: 966: if (filter & 0x00010000)
  5248  00098C  0100               	movlb	0	; () banked
  5249  00098E  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5250  000990  D003               	goto	l494
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;can\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5254  000992  010F               	movlb	15	; () banked
  5255  000994  810D               	bsf	13,0,b	;volatile
  5256  000996  D002               	goto	l495
  5257  000998                     l494:
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;can\CANlib.h: 968: else
  5261                           ;can\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5262  000998  010F               	movlb	15	; () banked
  5263  00099A  910D               	bcf	13,0,b	;volatile
  5264  00099C                     l495:
  5265                           
  5266                           ; BSR set to: 15
  5267                           ;can\CANlib.h: 971: if (filter & 0x00020000)
  5268  00099C  0100               	movlb	0	; () banked
  5269  00099E  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5270  0009A0  D003               	goto	l496
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;can\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5274  0009A2  010F               	movlb	15	; () banked
  5275  0009A4  830D               	bsf	13,1,b	;volatile
  5276  0009A6  D002               	goto	l497
  5277  0009A8                     l496:
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;can\CANlib.h: 973: else
  5281                           ;can\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5282  0009A8  010F               	movlb	15	; () banked
  5283  0009AA  930D               	bcf	13,1,b	;volatile
  5284  0009AC                     l497:
  5285                           
  5286                           ; BSR set to: 15
  5287                           ;can\CANlib.h: 976: if (filter & 0x00040000)
  5288  0009AC  0100               	movlb	0	; () banked
  5289  0009AE  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5290  0009B0  D003               	goto	l498
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;can\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5294  0009B2  010F               	movlb	15	; () banked
  5295  0009B4  8B0D               	bsf	13,5,b	;volatile
  5296  0009B6  D002               	goto	l499
  5297  0009B8                     l498:
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;can\CANlib.h: 978: else
  5301                           ;can\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5302  0009B8  010F               	movlb	15	; () banked
  5303  0009BA  9B0D               	bcf	13,5,b	;volatile
  5304  0009BC                     l499:
  5305                           
  5306                           ; BSR set to: 15
  5307                           ;can\CANlib.h: 981: if (filter & 0x00080000)
  5308  0009BC  0100               	movlb	0	; () banked
  5309  0009BE  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5310  0009C0  D003               	goto	l500
  5311                           
  5312                           ; BSR set to: 0
  5313                           ;can\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5314  0009C2  010F               	movlb	15	; () banked
  5315  0009C4  8D0D               	bsf	13,6,b	;volatile
  5316  0009C6  D002               	goto	l501
  5317  0009C8                     l500:
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;can\CANlib.h: 983: else
  5321                           ;can\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5322  0009C8  010F               	movlb	15	; () banked
  5323  0009CA  9D0D               	bcf	13,6,b	;volatile
  5324  0009CC                     l501:
  5325                           
  5326                           ; BSR set to: 15
  5327                           ;can\CANlib.h: 986: if (filter & 0x00100000)
  5328  0009CC  0100               	movlb	0	; () banked
  5329  0009CE  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5330  0009D0  D003               	goto	l502
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;can\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5334  0009D2  010F               	movlb	15	; () banked
  5335  0009D4  8F0D               	bsf	13,7,b	;volatile
  5336  0009D6  D002               	goto	l2840
  5337  0009D8                     l502:
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;can\CANlib.h: 988: else
  5341                           ;can\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5342  0009D8  010F               	movlb	15	; () banked
  5343  0009DA  9F0D               	bcf	13,7,b	;volatile
  5344  0009DC                     l2840:
  5345                           
  5346                           ; BSR set to: 15
  5347                           ;can\CANlib.h: 991: tamp = (filter >> 21);
  5348  0009DC  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5349  0009E0  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5350  0009E4  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5351  0009E8  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5352  0009EC  0E16               	movlw	22
  5353  0009EE  D006               	goto	u2860
  5354  0009F0                     u2865:
  5355  0009F0  0100               	movlb	0	; () banked
  5356  0009F2  90D8               	bcf	status,0,c
  5357  0009F4  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5358  0009F6  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5359  0009F8  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5360  0009FA  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5361  0009FC                     u2860:
  5362  0009FC  2EE8               	decfsz	wreg,f,c
  5363  0009FE  D7F8               	goto	u2865
  5364  000A00  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5365  000A04  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5366  000A08  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5367  000A0C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;can\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5371  000A10  0100               	movlb	0	; () banked
  5372  000A12  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5373  000A14  0100               	movlb	0	; () banked
  5374  000A16  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5375  000A18  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5376  000A1A  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5377  000A1C  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;can\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5381  000A1E  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5382  000A22                     l2846:
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;can\CANlib.h: 994: }
  5386                           ;can\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5387  000A22  0E04               	movlw	4
  5388  000A24  0100               	movlb	0	; () banked
  5389  000A26  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5390  000A28  A4D8               	btfss	status,2,c
  5391  000A2A  D089               	goto	l2880
  5392                           
  5393                           ; BSR set to: 0
  5394  000A2C  0EF7               	movlw	247
  5395  000A2E  0100               	movlb	0	; () banked
  5396  000A30  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5397  000A32  A4D8               	btfss	status,2,c
  5398  000A34  D084               	goto	l2880
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;can\CANlib.h: 997: {
  5402                           ;can\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5403  000A36  010F               	movlb	15	; () banked
  5404  000A38  8711               	bsf	17,3,b	;volatile
  5405                           
  5406                           ; BSR set to: 15
  5407                           ;can\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5408  000A3A  0100               	movlb	0	; () banked
  5409  000A3C  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5410  000A3E  0100               	movlb	0	; () banked
  5411  000A40  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5412  000A42  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5413  000A44  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5414  000A46  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;can\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5418  000A48  C07D  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;can\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5422  000A4C  0E00               	movlw	0
  5423  000A4E  0100               	movlb	0	; () banked
  5424  000A50  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5425  000A52  0100               	movlb	0	; () banked
  5426  000A54  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5427  000A56  0EFF               	movlw	255
  5428  000A58  0100               	movlb	0	; () banked
  5429  000A5A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5430  000A5C  0100               	movlb	0	; () banked
  5431  000A5E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5432  000A60  0E00               	movlw	0
  5433  000A62  0100               	movlb	0	; () banked
  5434  000A64  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5435  000A66  0100               	movlb	0	; () banked
  5436  000A68  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5437  000A6A  0E00               	movlw	0
  5438  000A6C  0100               	movlb	0	; () banked
  5439  000A6E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5440  000A70  0100               	movlb	0	; () banked
  5441  000A72  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;can\CANlib.h: 1004: tamp = tamp >> 8;
  5445  000A74  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5446  000A78  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5447  000A7C  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5448  000A80  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5449  000A84  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5450  000A88  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5451  000A8C  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5452  000A90  0100               	movlb	0	; () banked
  5453  000A92  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5454  000A94  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5455  000A98  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5456  000A9C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5457  000AA0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;can\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5461  000AA4  C07D  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;can\CANlib.h: 1007: if (filter & 0x00010000)
  5465  000AA8  0100               	movlb	0	; () banked
  5466  000AAA  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5467  000AAC  D003               	goto	l505
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;can\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5471  000AAE  010F               	movlb	15	; () banked
  5472  000AB0  8111               	bsf	17,0,b	;volatile
  5473  000AB2  D002               	goto	l506
  5474  000AB4                     l505:
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;can\CANlib.h: 1009: else
  5478                           ;can\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5479  000AB4  010F               	movlb	15	; () banked
  5480  000AB6  9111               	bcf	17,0,b	;volatile
  5481  000AB8                     l506:
  5482                           
  5483                           ; BSR set to: 15
  5484                           ;can\CANlib.h: 1012: if (filter & 0x00020000)
  5485  000AB8  0100               	movlb	0	; () banked
  5486  000ABA  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5487  000ABC  D003               	goto	l507
  5488                           
  5489                           ; BSR set to: 0
  5490                           ;can\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5491  000ABE  010F               	movlb	15	; () banked
  5492  000AC0  8311               	bsf	17,1,b	;volatile
  5493  000AC2  D002               	goto	l508
  5494  000AC4                     l507:
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;can\CANlib.h: 1014: else
  5498                           ;can\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5499  000AC4  010F               	movlb	15	; () banked
  5500  000AC6  9311               	bcf	17,1,b	;volatile
  5501  000AC8                     l508:
  5502                           
  5503                           ; BSR set to: 15
  5504                           ;can\CANlib.h: 1017: if (filter & 0x00040000)
  5505  000AC8  0100               	movlb	0	; () banked
  5506  000ACA  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5507  000ACC  D003               	goto	l509
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;can\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5511  000ACE  010F               	movlb	15	; () banked
  5512  000AD0  8B11               	bsf	17,5,b	;volatile
  5513  000AD2  D002               	goto	l510
  5514  000AD4                     l509:
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;can\CANlib.h: 1019: else
  5518                           ;can\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5519  000AD4  010F               	movlb	15	; () banked
  5520  000AD6  9B11               	bcf	17,5,b	;volatile
  5521  000AD8                     l510:
  5522                           
  5523                           ; BSR set to: 15
  5524                           ;can\CANlib.h: 1022: if (filter & 0x00080000)
  5525  000AD8  0100               	movlb	0	; () banked
  5526  000ADA  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5527  000ADC  D003               	goto	l511
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;can\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5531  000ADE  010F               	movlb	15	; () banked
  5532  000AE0  8D11               	bsf	17,6,b	;volatile
  5533  000AE2  D002               	goto	l512
  5534  000AE4                     l511:
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;can\CANlib.h: 1024: else
  5538                           ;can\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5539  000AE4  010F               	movlb	15	; () banked
  5540  000AE6  9D11               	bcf	17,6,b	;volatile
  5541  000AE8                     l512:
  5542                           
  5543                           ; BSR set to: 15
  5544                           ;can\CANlib.h: 1027: if (filter & 0x00100000)
  5545  000AE8  0100               	movlb	0	; () banked
  5546  000AEA  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5547  000AEC  D003               	goto	l513
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;can\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5551  000AEE  010F               	movlb	15	; () banked
  5552  000AF0  8F11               	bsf	17,7,b	;volatile
  5553  000AF2  D002               	goto	l2874
  5554  000AF4                     l513:
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;can\CANlib.h: 1029: else
  5558                           ;can\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5559  000AF4  010F               	movlb	15	; () banked
  5560  000AF6  9F11               	bcf	17,7,b	;volatile
  5561  000AF8                     l2874:
  5562                           
  5563                           ; BSR set to: 15
  5564                           ;can\CANlib.h: 1032: tamp = (filter >> 21);
  5565  000AF8  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5566  000AFC  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5567  000B00  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5568  000B04  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5569  000B08  0E16               	movlw	22
  5570  000B0A  D006               	goto	u2940
  5571  000B0C                     u2945:
  5572  000B0C  0100               	movlb	0	; () banked
  5573  000B0E  90D8               	bcf	status,0,c
  5574  000B10  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5575  000B12  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5576  000B14  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5577  000B16  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5578  000B18                     u2940:
  5579  000B18  2EE8               	decfsz	wreg,f,c
  5580  000B1A  D7F8               	goto	u2945
  5581  000B1C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5582  000B20  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5583  000B24  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5584  000B28  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;can\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5588  000B2C  0100               	movlb	0	; () banked
  5589  000B2E  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5590  000B30  0100               	movlb	0	; () banked
  5591  000B32  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5592  000B34  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5593  000B36  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5594  000B38  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;can\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5598  000B3A  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5599  000B3E                     l2880:
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;can\CANlib.h: 1035: }
  5603                           ;can\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5604  000B3E  0E05               	movlw	5
  5605  000B40  0100               	movlb	0	; () banked
  5606  000B42  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5607  000B44  A4D8               	btfss	status,2,c
  5608  000B46  0012               	return	
  5609                           
  5610                           ; BSR set to: 0
  5611  000B48  0EF7               	movlw	247
  5612  000B4A  0100               	movlb	0	; () banked
  5613  000B4C  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5614  000B4E  A4D8               	btfss	status,2,c
  5615  000B50  0012               	return	
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;can\CANlib.h: 1038: {
  5619                           ;can\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5620  000B52  010F               	movlb	15	; () banked
  5621  000B54  8715               	bsf	21,3,b	;volatile
  5622                           
  5623                           ; BSR set to: 15
  5624                           ;can\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5625  000B56  0100               	movlb	0	; () banked
  5626  000B58  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5627  000B5A  0100               	movlb	0	; () banked
  5628  000B5C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5629  000B5E  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5630  000B60  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5631  000B62  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;can\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5635  000B64  C07D  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5636                           
  5637                           ; BSR set to: 0
  5638                           ;can\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5639  000B68  0E00               	movlw	0
  5640  000B6A  0100               	movlb	0	; () banked
  5641  000B6C  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5642  000B6E  0100               	movlb	0	; () banked
  5643  000B70  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5644  000B72  0EFF               	movlw	255
  5645  000B74  0100               	movlb	0	; () banked
  5646  000B76  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5647  000B78  0100               	movlb	0	; () banked
  5648  000B7A  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5649  000B7C  0E00               	movlw	0
  5650  000B7E  0100               	movlb	0	; () banked
  5651  000B80  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5652  000B82  0100               	movlb	0	; () banked
  5653  000B84  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5654  000B86  0E00               	movlw	0
  5655  000B88  0100               	movlb	0	; () banked
  5656  000B8A  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5657  000B8C  0100               	movlb	0	; () banked
  5658  000B8E  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;can\CANlib.h: 1045: tamp = tamp >> 8;
  5662  000B90  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5663  000B94  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5664  000B98  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5665  000B9C  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5666  000BA0  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5667  000BA4  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5668  000BA8  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5669  000BAC  0100               	movlb	0	; () banked
  5670  000BAE  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5671  000BB0  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5672  000BB4  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5673  000BB8  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5674  000BBC  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;can\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5678  000BC0  C07D  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;can\CANlib.h: 1048: if (filter & 0x00010000)
  5682  000BC4  0100               	movlb	0	; () banked
  5683  000BC6  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5684  000BC8  D003               	goto	l516
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;can\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5688  000BCA  010F               	movlb	15	; () banked
  5689  000BCC  8115               	bsf	21,0,b	;volatile
  5690  000BCE  D002               	goto	l517
  5691  000BD0                     l516:
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;can\CANlib.h: 1050: else
  5695                           ;can\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5696  000BD0  010F               	movlb	15	; () banked
  5697  000BD2  9115               	bcf	21,0,b	;volatile
  5698  000BD4                     l517:
  5699                           
  5700                           ; BSR set to: 15
  5701                           ;can\CANlib.h: 1053: if (filter & 0x00020000)
  5702  000BD4  0100               	movlb	0	; () banked
  5703  000BD6  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5704  000BD8  D003               	goto	l518
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;can\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5708  000BDA  010F               	movlb	15	; () banked
  5709  000BDC  8315               	bsf	21,1,b	;volatile
  5710  000BDE  D002               	goto	l519
  5711  000BE0                     l518:
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;can\CANlib.h: 1055: else
  5715                           ;can\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5716  000BE0  010F               	movlb	15	; () banked
  5717  000BE2  9315               	bcf	21,1,b	;volatile
  5718  000BE4                     l519:
  5719                           
  5720                           ; BSR set to: 15
  5721                           ;can\CANlib.h: 1058: if (filter & 0x00040000)
  5722  000BE4  0100               	movlb	0	; () banked
  5723  000BE6  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5724  000BE8  D003               	goto	l520
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;can\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5728  000BEA  010F               	movlb	15	; () banked
  5729  000BEC  8B15               	bsf	21,5,b	;volatile
  5730  000BEE  D002               	goto	l521
  5731  000BF0                     l520:
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;can\CANlib.h: 1060: else
  5735                           ;can\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5736  000BF0  010F               	movlb	15	; () banked
  5737  000BF2  9B15               	bcf	21,5,b	;volatile
  5738  000BF4                     l521:
  5739                           
  5740                           ; BSR set to: 15
  5741                           ;can\CANlib.h: 1063: if (filter & 0x00080000)
  5742  000BF4  0100               	movlb	0	; () banked
  5743  000BF6  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5744  000BF8  D003               	goto	l522
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;can\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5748  000BFA  010F               	movlb	15	; () banked
  5749  000BFC  8D15               	bsf	21,6,b	;volatile
  5750  000BFE  D002               	goto	l523
  5751  000C00                     l522:
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;can\CANlib.h: 1065: else
  5755                           ;can\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5756  000C00  010F               	movlb	15	; () banked
  5757  000C02  9D15               	bcf	21,6,b	;volatile
  5758  000C04                     l523:
  5759                           
  5760                           ; BSR set to: 15
  5761                           ;can\CANlib.h: 1068: if (filter & 0x00100000)
  5762  000C04  0100               	movlb	0	; () banked
  5763  000C06  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5764  000C08  D003               	goto	l524
  5765                           
  5766                           ; BSR set to: 0
  5767                           ;can\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5768  000C0A  010F               	movlb	15	; () banked
  5769  000C0C  8F15               	bsf	21,7,b	;volatile
  5770  000C0E  D002               	goto	l2908
  5771  000C10                     l524:
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;can\CANlib.h: 1070: else
  5775                           ;can\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5776  000C10  010F               	movlb	15	; () banked
  5777  000C12  9F15               	bcf	21,7,b	;volatile
  5778  000C14                     l2908:
  5779                           
  5780                           ; BSR set to: 15
  5781                           ;can\CANlib.h: 1073: tamp = (filter >> 21);
  5782  000C14  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5783  000C18  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5784  000C1C  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5785  000C20  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5786  000C24  0E16               	movlw	22
  5787  000C26  D006               	goto	u3020
  5788  000C28                     u3025:
  5789  000C28  0100               	movlb	0	; () banked
  5790  000C2A  90D8               	bcf	status,0,c
  5791  000C2C  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5792  000C2E  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5793  000C30  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5794  000C32  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5795  000C34                     u3020:
  5796  000C34  2EE8               	decfsz	wreg,f,c
  5797  000C36  D7F8               	goto	u3025
  5798  000C38  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5799  000C3C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5800  000C40  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5801  000C44  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5802                           
  5803                           ; BSR set to: 0
  5804                           ;can\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5805  000C48  0100               	movlb	0	; () banked
  5806  000C4A  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5807  000C4C  0100               	movlb	0	; () banked
  5808  000C4E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5809  000C50  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5810  000C52  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5811  000C54  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;can\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5815  000C56  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5816  000C5A  0012               	return	
  5817  000C5C                     __end_of_CANSetFilter:
  5818                           	opt stack 0
  5819                           tblptru	equ	0xFF8
  5820                           tblptrh	equ	0xFF7
  5821                           tblptrl	equ	0xFF6
  5822                           tablat	equ	0xFF5
  5823                           intcon	equ	0xFF2
  5824                           intcon2	equ	0xFF1
  5825                           postinc0	equ	0xFEE
  5826                           wreg	equ	0xFE8
  5827                           postdec1	equ	0xFE5
  5828                           fsr1l	equ	0xFE1
  5829                           indf2	equ	0xFDF
  5830                           fsr2h	equ	0xFDA
  5831                           fsr2l	equ	0xFD9
  5832                           status	equ	0xFD8
  5833                           
  5834 ;; *************** function _CANOperationMode *****************
  5835 ;; Defined at:
  5836 ;;		line 206 in file "../../Scuola/Triennio/Tesina/can\CANlib.h"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;  mode            1    wreg     enum E16838
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;  mode            1   19[BANK0 ] enum E16838
  5841 ;; Return value:  Size  Location     Type
  5842 ;;		None               void
  5843 ;; Registers used:
  5844 ;;		wreg, status,2, status,0
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5850 ;;      Params:         0       0       0       0
  5851 ;;      Locals:         0       1       0       0
  5852 ;;      Temps:          0       0       0       0
  5853 ;;      Totals:         0       1       0       0
  5854 ;;Total ram usage:        1 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; Hardware stack levels required when called:    4
  5857 ;; This function calls:
  5858 ;;		Nothing
  5859 ;; This function is called by:
  5860 ;;		_CANInitialize
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text9
  5865  00244E                     __ptext9:
  5866                           	opt stack 0
  5867  00244E                     _CANOperationMode:
  5868                           	opt stack 24
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;incstack = 0
  5872                           ;CANOperationMode@mode stored from wreg
  5873  00244E  0100               	movlb	0	; () banked
  5874  002450  6F73               	movwf	CANOperationMode@mode& (0+255),b
  5875                           
  5876                           ;can\CANlib.h: 208: CANCON = mode;
  5877  002452  C073  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5878  002456                     l2504:
  5879  002456  506E               	movf	3950,w,c	;volatile
  5880  002458  0BE0               	andlw	224
  5881  00245A  0100               	movlb	0	; () banked
  5882  00245C  1973               	xorwf	CANOperationMode@mode& (0+255),w,b
  5883  00245E  B4D8               	btfsc	status,2,c
  5884  002460  0012               	return	
  5885  002462  D7F9               	goto	l2504
  5886  002464                     __end_of_CANOperationMode:
  5887                           	opt stack 0
  5888                           tblptru	equ	0xFF8
  5889                           tblptrh	equ	0xFF7
  5890                           tblptrl	equ	0xFF6
  5891                           tablat	equ	0xFF5
  5892                           intcon	equ	0xFF2
  5893                           intcon2	equ	0xFF1
  5894                           postinc0	equ	0xFEE
  5895                           wreg	equ	0xFE8
  5896                           postdec1	equ	0xFE5
  5897                           fsr1l	equ	0xFE1
  5898                           indf2	equ	0xFDF
  5899                           fsr2h	equ	0xFDA
  5900                           fsr2l	equ	0xFD9
  5901                           status	equ	0xFD8
  5902                           
  5903 ;; *************** function _calibrazione *****************
  5904 ;; Defined at:
  5905 ;;		line 170 in file "newmain.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;		None
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;		None
  5910 ;; Return value:  Size  Location     Type
  5911 ;;		None               void
  5912 ;; Registers used:
  5913 ;;		wreg, status,2, status,0, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5919 ;;      Params:         0       0       0       0
  5920 ;;      Locals:         0       0       0       0
  5921 ;;      Temps:          0       0       0       0
  5922 ;;      Totals:         0       0       0       0
  5923 ;;Total ram usage:        0 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    5
  5926 ;; This function calls:
  5927 ;;		_BusyADC
  5928 ;;		_ConvertADC
  5929 ;;		_ReadADC
  5930 ;;		___lwdiv
  5931 ;; This function is called by:
  5932 ;;		_main
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text10
  5937  002380                     __ptext10:
  5938                           	opt stack 0
  5939  002380                     _calibrazione:
  5940                           	opt stack 25
  5941                           
  5942                           ;newmain.c: 171: ConvertADC();
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;incstack = 0
  5946  002380  EC65  F012         	call	_ConvertADC	;wreg free
  5947  002384                     l3480:
  5948  002384  EC4F  F012         	call	_BusyADC	;wreg free
  5949  002388  0900               	iorlw	0
  5950  00238A  A4D8               	btfss	status,2,c
  5951  00238C  D7FB               	goto	l3480
  5952                           
  5953                           ;newmain.c: 173: ADCResult = ReadADC();
  5954  00238E  EC3D  F012         	call	_ReadADC	;wreg free
  5955  002392  C073  F0A5         	movff	?_ReadADC,_ADCResult
  5956  002396  C074  F0A6         	movff	?_ReadADC+1,_ADCResult+1
  5957                           
  5958                           ;newmain.c: 174: calibration = (ADCResult - 511) / 45;
  5959  00239A  0E01               	movlw	1
  5960  00239C  0100               	movlb	0	; () banked
  5961  00239E  25A5               	addwf	_ADCResult& (0+255),w,b
  5962  0023A0  0100               	movlb	0	; () banked
  5963  0023A2  6F73               	movwf	___lwdiv@dividend& (0+255),b
  5964  0023A4  0EFE               	movlw	254
  5965  0023A6  0100               	movlb	0	; () banked
  5966  0023A8  21A6               	addwfc	(_ADCResult+1)& (0+255),w,b
  5967  0023AA  0100               	movlb	0	; () banked
  5968  0023AC  6F74               	movwf	(___lwdiv@dividend+1)& (0+255),b
  5969  0023AE  0E00               	movlw	0
  5970  0023B0  0100               	movlb	0	; () banked
  5971  0023B2  6F76               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5972  0023B4  0E2D               	movlw	45
  5973  0023B6  6F75               	movwf	___lwdiv@divisor& (0+255),b
  5974  0023B8  ECFC  F010         	call	___lwdiv	;wreg free
  5975  0023BC  C073  F019         	movff	?___lwdiv,_calibration
  5976  0023C0  C074  F01A         	movff	?___lwdiv+1,_calibration+1
  5977  0023C4  0012               	return		;funcret
  5978  0023C6                     __end_of_calibrazione:
  5979                           	opt stack 0
  5980                           tblptru	equ	0xFF8
  5981                           tblptrh	equ	0xFF7
  5982                           tblptrl	equ	0xFF6
  5983                           tablat	equ	0xFF5
  5984                           intcon	equ	0xFF2
  5985                           intcon2	equ	0xFF1
  5986                           postinc0	equ	0xFEE
  5987                           wreg	equ	0xFE8
  5988                           postdec1	equ	0xFE5
  5989                           fsr1l	equ	0xFE1
  5990                           indf2	equ	0xFDF
  5991                           fsr2h	equ	0xFDA
  5992                           fsr2l	equ	0xFD9
  5993                           status	equ	0xFD8
  5994                           
  5995 ;; *************** function ___lwdiv *****************
  5996 ;; Defined at:
  5997 ;;		line 8 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;  dividend        2   19[BANK0 ] unsigned int 
  6000 ;;  divisor         2   21[BANK0 ] unsigned int 
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;  quotient        2   23[BANK0 ] unsigned int 
  6003 ;;  counter         1   25[BANK0 ] unsigned char 
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  2   19[BANK0 ] unsigned int 
  6006 ;; Registers used:
  6007 ;;		wreg, status,2, status,0
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6013 ;;      Params:         0       4       0       0
  6014 ;;      Locals:         0       3       0       0
  6015 ;;      Temps:          0       0       0       0
  6016 ;;      Totals:         0       7       0       0
  6017 ;;Total ram usage:        7 bytes
  6018 ;; Hardware stack levels used:    1
  6019 ;; Hardware stack levels required when called:    4
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_calibrazione
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text11
  6028  0021F8                     __ptext11:
  6029                           	opt stack 0
  6030  0021F8                     ___lwdiv:
  6031                           	opt stack 25
  6032                           
  6033                           ;incstack = 0
  6034  0021F8  0E00               	movlw	0
  6035  0021FA  0100               	movlb	0	; () banked
  6036  0021FC  6F78               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6037  0021FE  0E00               	movlw	0
  6038  002200  6F77               	movwf	___lwdiv@quotient& (0+255),b
  6039                           
  6040                           ; BSR set to: 0
  6041  002202  0100               	movlb	0	; () banked
  6042  002204  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6043  002206  0100               	movlb	0	; () banked
  6044  002208  1176               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6045  00220A  B4D8               	btfsc	status,2,c
  6046  00220C  D02C               	goto	l1111
  6047                           
  6048                           ; BSR set to: 0
  6049  00220E  0E01               	movlw	1
  6050  002210  0100               	movlb	0	; () banked
  6051  002212  6F79               	movwf	___lwdiv@counter& (0+255),b
  6052  002214  D006               	goto	l3238
  6053  002216                     l3236:
  6054                           
  6055                           ; BSR set to: 0
  6056  002216  0100               	movlb	0	; () banked
  6057  002218  90D8               	bcf	status,0,c
  6058  00221A  3775               	rlcf	___lwdiv@divisor& (0+255),f,b
  6059  00221C  3776               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6060  00221E  0100               	movlb	0	; () banked
  6061  002220  2B79               	incf	___lwdiv@counter& (0+255),f,b
  6062  002222                     l3238:
  6063                           
  6064                           ; BSR set to: 0
  6065  002222  0100               	movlb	0	; () banked
  6066  002224  AF76               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6067  002226  D7F7               	goto	l3236
  6068  002228                     l3240:
  6069                           
  6070                           ; BSR set to: 0
  6071  002228  0100               	movlb	0	; () banked
  6072  00222A  90D8               	bcf	status,0,c
  6073  00222C  3777               	rlcf	___lwdiv@quotient& (0+255),f,b
  6074  00222E  3778               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6075                           
  6076                           ; BSR set to: 0
  6077  002230  0100               	movlb	0	; () banked
  6078  002232  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6079  002234  0100               	movlb	0	; () banked
  6080  002236  5D73               	subwf	___lwdiv@dividend& (0+255),w,b
  6081  002238  0100               	movlb	0	; () banked
  6082  00223A  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6083  00223C  0100               	movlb	0	; () banked
  6084  00223E  5974               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6085  002240  A0D8               	btfss	status,0,c
  6086  002242  D00A               	goto	l3248
  6087                           
  6088                           ; BSR set to: 0
  6089  002244  0100               	movlb	0	; () banked
  6090  002246  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6091  002248  0100               	movlb	0	; () banked
  6092  00224A  5F73               	subwf	___lwdiv@dividend& (0+255),f,b
  6093  00224C  0100               	movlb	0	; () banked
  6094  00224E  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6095  002250  0100               	movlb	0	; () banked
  6096  002252  5B74               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6097                           
  6098                           ; BSR set to: 0
  6099  002254  0100               	movlb	0	; () banked
  6100  002256  8177               	bsf	___lwdiv@quotient& (0+255),0,b
  6101  002258                     l3248:
  6102                           
  6103                           ; BSR set to: 0
  6104  002258  0100               	movlb	0	; () banked
  6105  00225A  90D8               	bcf	status,0,c
  6106  00225C  3376               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6107  00225E  3375               	rrcf	___lwdiv@divisor& (0+255),f,b
  6108                           
  6109                           ; BSR set to: 0
  6110  002260  0100               	movlb	0	; () banked
  6111  002262  2F79               	decfsz	___lwdiv@counter& (0+255),f,b
  6112  002264  D7E1               	goto	l3240
  6113  002266                     l1111:
  6114                           
  6115                           ; BSR set to: 0
  6116  002266  C077  F073         	movff	___lwdiv@quotient,?___lwdiv
  6117  00226A  C078  F074         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6118                           
  6119                           ; BSR set to: 0
  6120  00226E  0012               	return		;funcret
  6121  002270                     __end_of___lwdiv:
  6122                           	opt stack 0
  6123                           tblptru	equ	0xFF8
  6124                           tblptrh	equ	0xFF7
  6125                           tblptrl	equ	0xFF6
  6126                           tablat	equ	0xFF5
  6127                           intcon	equ	0xFF2
  6128                           intcon2	equ	0xFF1
  6129                           postinc0	equ	0xFEE
  6130                           wreg	equ	0xFE8
  6131                           postdec1	equ	0xFE5
  6132                           fsr1l	equ	0xFE1
  6133                           indf2	equ	0xFDF
  6134                           fsr2h	equ	0xFDA
  6135                           fsr2l	equ	0xFD9
  6136                           status	equ	0xFD8
  6137                           
  6138 ;; *************** function _ReadADC *****************
  6139 ;; Defined at:
  6140 ;;		line 24 in file "P:\Programmi\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcread.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;		None
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;		None
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  2   19[BANK0 ] int 
  6147 ;; Registers used:
  6148 ;;		wreg, status,2
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6154 ;;      Params:         0       2       0       0
  6155 ;;      Locals:         0       0       0       0
  6156 ;;      Temps:          0       2       0       0
  6157 ;;      Totals:         0       4       0       0
  6158 ;;Total ram usage:        4 bytes
  6159 ;; Hardware stack levels used:    1
  6160 ;; Hardware stack levels required when called:    4
  6161 ;; This function calls:
  6162 ;;		Nothing
  6163 ;; This function is called by:
  6164 ;;		_calibrazione
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	text12
  6169  00247A                     __ptext12:
  6170                           	opt stack 0
  6171  00247A                     _ReadADC:
  6172                           	opt stack 25
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;incstack = 0
  6176  00247A  50C4               	movf	4036,w,c	;volatile
  6177  00247C  0100               	movlb	0	; () banked
  6178  00247E  6F75               	movwf	??_ReadADC& (0+255),b
  6179  002480  50C3               	movf	4035,w,c	;volatile
  6180  002482  0100               	movlb	0	; () banked
  6181  002484  6F73               	movwf	?_ReadADC& (0+255),b
  6182  002486  C075  F074         	movff	??_ReadADC,?_ReadADC+1
  6183  00248A  0012               	return	
  6184  00248C                     __end_of_ReadADC:
  6185                           	opt stack 0
  6186                           tblptru	equ	0xFF8
  6187                           tblptrh	equ	0xFF7
  6188                           tblptrl	equ	0xFF6
  6189                           tablat	equ	0xFF5
  6190                           intcon	equ	0xFF2
  6191                           intcon2	equ	0xFF1
  6192                           postinc0	equ	0xFEE
  6193                           wreg	equ	0xFE8
  6194                           postdec1	equ	0xFE5
  6195                           fsr1l	equ	0xFE1
  6196                           indf2	equ	0xFDF
  6197                           fsr2h	equ	0xFDA
  6198                           fsr2l	equ	0xFD9
  6199                           status	equ	0xFD8
  6200                           
  6201 ;; *************** function _ConvertADC *****************
  6202 ;; Defined at:
  6203 ;;		line 22 in file "P:\Programmi\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcconv.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;		None
  6206 ;; Auto vars:     Size  Location     Type
  6207 ;;		None
  6208 ;; Return value:  Size  Location     Type
  6209 ;;		None               void
  6210 ;; Registers used:
  6211 ;;		None
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6217 ;;      Params:         0       0       0       0
  6218 ;;      Locals:         0       0       0       0
  6219 ;;      Temps:          0       0       0       0
  6220 ;;      Totals:         0       0       0       0
  6221 ;;Total ram usage:        0 bytes
  6222 ;; Hardware stack levels used:    1
  6223 ;; Hardware stack levels required when called:    4
  6224 ;; This function calls:
  6225 ;;		Nothing
  6226 ;; This function is called by:
  6227 ;;		_calibrazione
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           	psect	text13
  6232  0024CA                     __ptext13:
  6233                           	opt stack 0
  6234  0024CA                     _ConvertADC:
  6235                           	opt stack 25
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;incstack = 0
  6239  0024CA  82C2               	bsf	4034,1,c	;volatile
  6240  0024CC  0012               	return		;funcret
  6241  0024CE                     __end_of_ConvertADC:
  6242                           	opt stack 0
  6243                           tblptru	equ	0xFF8
  6244                           tblptrh	equ	0xFF7
  6245                           tblptrl	equ	0xFF6
  6246                           tablat	equ	0xFF5
  6247                           intcon	equ	0xFF2
  6248                           intcon2	equ	0xFF1
  6249                           postinc0	equ	0xFEE
  6250                           wreg	equ	0xFE8
  6251                           postdec1	equ	0xFE5
  6252                           fsr1l	equ	0xFE1
  6253                           indf2	equ	0xFDF
  6254                           fsr2h	equ	0xFDA
  6255                           fsr2l	equ	0xFD9
  6256                           status	equ	0xFD8
  6257                           
  6258 ;; *************** function _BusyADC *****************
  6259 ;; Defined at:
  6260 ;;		line 26 in file "P:\Programmi\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcbusy.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;		None
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;		None
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  1    wreg      unsigned char 
  6267 ;; Registers used:
  6268 ;;		wreg
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6274 ;;      Params:         0       0       0       0
  6275 ;;      Locals:         0       0       0       0
  6276 ;;      Temps:          0       0       0       0
  6277 ;;      Totals:         0       0       0       0
  6278 ;;Total ram usage:        0 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:    4
  6281 ;; This function calls:
  6282 ;;		Nothing
  6283 ;; This function is called by:
  6284 ;;		_calibrazione
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text14
  6289  00249E                     __ptext14:
  6290                           	opt stack 0
  6291  00249E                     _BusyADC:
  6292                           	opt stack 25
  6293                           
  6294                           ;incstack = 0
  6295  00249E  A2C2               	btfss	4034,1,c	;volatile
  6296  0024A0  D002               	goto	u3490
  6297  0024A2  0E01               	movlw	1
  6298  0024A4  0012               	return	
  6299  0024A6                     u3490:
  6300  0024A6  0E00               	movlw	0
  6301  0024A8  0012               	return	
  6302  0024AA                     __end_of_BusyADC:
  6303                           	opt stack 0
  6304                           tblptru	equ	0xFF8
  6305                           tblptrh	equ	0xFF7
  6306                           tblptrl	equ	0xFF6
  6307                           tablat	equ	0xFF5
  6308                           intcon	equ	0xFF2
  6309                           intcon2	equ	0xFF1
  6310                           postinc0	equ	0xFEE
  6311                           wreg	equ	0xFE8
  6312                           postdec1	equ	0xFE5
  6313                           fsr1l	equ	0xFE1
  6314                           indf2	equ	0xFDF
  6315                           fsr2h	equ	0xFDA
  6316                           fsr2l	equ	0xFD9
  6317                           status	equ	0xFD8
  6318                           
  6319 ;; *************** function ___lmul *****************
  6320 ;; Defined at:
  6321 ;;		line 15 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\Umul32.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  multiplier      4   19[BANK0 ] unsigned long 
  6324 ;;  multiplicand    4   23[BANK0 ] unsigned long 
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;  product         4   27[BANK0 ] unsigned long 
  6327 ;; Return value:  Size  Location     Type
  6328 ;;                  4   19[BANK0 ] unsigned long 
  6329 ;; Registers used:
  6330 ;;		wreg, status,2, status,0
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6336 ;;      Params:         0       8       0       0
  6337 ;;      Locals:         0       4       0       0
  6338 ;;      Temps:          0       0       0       0
  6339 ;;      Totals:         0      12       0       0
  6340 ;;Total ram usage:       12 bytes
  6341 ;; Hardware stack levels used:    1
  6342 ;; Hardware stack levels required when called:    4
  6343 ;; This function calls:
  6344 ;;		Nothing
  6345 ;; This function is called by:
  6346 ;;		_main
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text15
  6351  002270                     __ptext15:
  6352                           	opt stack 0
  6353  002270                     ___lmul:
  6354                           	opt stack 26
  6355                           
  6356                           ;incstack = 0
  6357  002270  0E00               	movlw	0
  6358  002272  0100               	movlb	0	; () banked
  6359  002274  6F7B               	movwf	___lmul@product& (0+255),b
  6360  002276  0E00               	movlw	0
  6361  002278  6F7C               	movwf	(___lmul@product+1)& (0+255),b
  6362  00227A  0E00               	movlw	0
  6363  00227C  6F7D               	movwf	(___lmul@product+2)& (0+255),b
  6364  00227E  0E00               	movlw	0
  6365  002280  6F7E               	movwf	(___lmul@product+3)& (0+255),b
  6366  002282                     l3502:
  6367                           
  6368                           ; BSR set to: 0
  6369  002282  0100               	movlb	0	; () banked
  6370  002284  A173               	btfss	___lmul@multiplier& (0+255),0,b
  6371  002286  D010               	goto	l3506
  6372                           
  6373                           ; BSR set to: 0
  6374  002288  0100               	movlb	0	; () banked
  6375  00228A  5177               	movf	___lmul@multiplicand& (0+255),w,b
  6376  00228C  0100               	movlb	0	; () banked
  6377  00228E  277B               	addwf	___lmul@product& (0+255),f,b
  6378  002290  0100               	movlb	0	; () banked
  6379  002292  5178               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6380  002294  0100               	movlb	0	; () banked
  6381  002296  237C               	addwfc	(___lmul@product+1)& (0+255),f,b
  6382  002298  0100               	movlb	0	; () banked
  6383  00229A  5179               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6384  00229C  0100               	movlb	0	; () banked
  6385  00229E  237D               	addwfc	(___lmul@product+2)& (0+255),f,b
  6386  0022A0  0100               	movlb	0	; () banked
  6387  0022A2  517A               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6388  0022A4  0100               	movlb	0	; () banked
  6389  0022A6  237E               	addwfc	(___lmul@product+3)& (0+255),f,b
  6390  0022A8                     l3506:
  6391                           
  6392                           ; BSR set to: 0
  6393  0022A8  0100               	movlb	0	; () banked
  6394  0022AA  90D8               	bcf	status,0,c
  6395  0022AC  3777               	rlcf	___lmul@multiplicand& (0+255),f,b
  6396  0022AE  3778               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6397  0022B0  3779               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6398  0022B2  377A               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6399                           
  6400                           ; BSR set to: 0
  6401  0022B4  0100               	movlb	0	; () banked
  6402  0022B6  90D8               	bcf	status,0,c
  6403  0022B8  3376               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6404  0022BA  3375               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6405  0022BC  3374               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6406  0022BE  3373               	rrcf	___lmul@multiplier& (0+255),f,b
  6407  0022C0  0100               	movlb	0	; () banked
  6408  0022C2  5173               	movf	___lmul@multiplier& (0+255),w,b
  6409  0022C4  0100               	movlb	0	; () banked
  6410  0022C6  1174               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6411  0022C8  0100               	movlb	0	; () banked
  6412  0022CA  1175               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6413  0022CC  0100               	movlb	0	; () banked
  6414  0022CE  1176               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6415  0022D0  A4D8               	btfss	status,2,c
  6416  0022D2  D7D7               	goto	l3502
  6417                           
  6418                           ; BSR set to: 0
  6419  0022D4  C07B  F073         	movff	___lmul@product,?___lmul
  6420  0022D8  C07C  F074         	movff	___lmul@product+1,?___lmul+1
  6421  0022DC  C07D  F075         	movff	___lmul@product+2,?___lmul+2
  6422  0022E0  C07E  F076         	movff	___lmul@product+3,?___lmul+3
  6423                           
  6424                           ; BSR set to: 0
  6425  0022E4  0012               	return		;funcret
  6426  0022E6                     __end_of___lmul:
  6427                           	opt stack 0
  6428                           tblptru	equ	0xFF8
  6429                           tblptrh	equ	0xFF7
  6430                           tblptrl	equ	0xFF6
  6431                           tablat	equ	0xFF5
  6432                           intcon	equ	0xFF2
  6433                           intcon2	equ	0xFF1
  6434                           postinc0	equ	0xFEE
  6435                           wreg	equ	0xFE8
  6436                           postdec1	equ	0xFE5
  6437                           fsr1l	equ	0xFE1
  6438                           indf2	equ	0xFDF
  6439                           fsr2h	equ	0xFDA
  6440                           fsr2l	equ	0xFD9
  6441                           status	equ	0xFD8
  6442                           
  6443 ;; *************** function ___lldiv *****************
  6444 ;; Defined at:
  6445 ;;		line 8 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\lldiv.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  dividend        4   31[BANK0 ] unsigned long 
  6448 ;;  divisor         4   35[BANK0 ] unsigned long 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;  quotient        4   39[BANK0 ] unsigned long 
  6451 ;;  counter         1   43[BANK0 ] unsigned char 
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  4   31[BANK0 ] unsigned long 
  6454 ;; Registers used:
  6455 ;;		wreg, status,2, status,0
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6461 ;;      Params:         0       8       0       0
  6462 ;;      Locals:         0       5       0       0
  6463 ;;      Temps:          0       0       0       0
  6464 ;;      Totals:         0      13       0       0
  6465 ;;Total ram usage:       13 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    4
  6468 ;; This function calls:
  6469 ;;		Nothing
  6470 ;; This function is called by:
  6471 ;;		_main
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           	psect	text16
  6476  001F7A                     __ptext16:
  6477                           	opt stack 0
  6478  001F7A                     ___lldiv:
  6479                           	opt stack 26
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;incstack = 0
  6483  001F7A  0E00               	movlw	0
  6484  001F7C  0100               	movlb	0	; () banked
  6485  001F7E  6F87               	movwf	___lldiv@quotient& (0+255),b
  6486  001F80  0E00               	movlw	0
  6487  001F82  6F88               	movwf	(___lldiv@quotient+1)& (0+255),b
  6488  001F84  0E00               	movlw	0
  6489  001F86  6F89               	movwf	(___lldiv@quotient+2)& (0+255),b
  6490  001F88  0E00               	movlw	0
  6491  001F8A  6F8A               	movwf	(___lldiv@quotient+3)& (0+255),b
  6492                           
  6493                           ; BSR set to: 0
  6494  001F8C  0100               	movlb	0	; () banked
  6495  001F8E  5183               	movf	___lldiv@divisor& (0+255),w,b
  6496  001F90  0100               	movlb	0	; () banked
  6497  001F92  1184               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6498  001F94  0100               	movlb	0	; () banked
  6499  001F96  1185               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6500  001F98  0100               	movlb	0	; () banked
  6501  001F9A  1186               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6502  001F9C  B4D8               	btfsc	status,2,c
  6503  001F9E  D042               	goto	l1058
  6504                           
  6505                           ; BSR set to: 0
  6506  001FA0  0E01               	movlw	1
  6507  001FA2  0100               	movlb	0	; () banked
  6508  001FA4  6F8B               	movwf	___lldiv@counter& (0+255),b
  6509  001FA6  D008               	goto	l3518
  6510  001FA8                     l3516:
  6511                           
  6512                           ; BSR set to: 0
  6513  001FA8  0100               	movlb	0	; () banked
  6514  001FAA  90D8               	bcf	status,0,c
  6515  001FAC  3783               	rlcf	___lldiv@divisor& (0+255),f,b
  6516  001FAE  3784               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6517  001FB0  3785               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6518  001FB2  3786               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6519  001FB4  0100               	movlb	0	; () banked
  6520  001FB6  2B8B               	incf	___lldiv@counter& (0+255),f,b
  6521  001FB8                     l3518:
  6522                           
  6523                           ; BSR set to: 0
  6524  001FB8  0100               	movlb	0	; () banked
  6525  001FBA  AF86               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6526  001FBC  D7F5               	goto	l3516
  6527  001FBE                     l3520:
  6528                           
  6529                           ; BSR set to: 0
  6530  001FBE  0100               	movlb	0	; () banked
  6531  001FC0  90D8               	bcf	status,0,c
  6532  001FC2  3787               	rlcf	___lldiv@quotient& (0+255),f,b
  6533  001FC4  3788               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6534  001FC6  3789               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6535  001FC8  378A               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6536                           
  6537                           ; BSR set to: 0
  6538  001FCA  0100               	movlb	0	; () banked
  6539  001FCC  5183               	movf	___lldiv@divisor& (0+255),w,b
  6540  001FCE  0100               	movlb	0	; () banked
  6541  001FD0  5D7F               	subwf	___lldiv@dividend& (0+255),w,b
  6542  001FD2  0100               	movlb	0	; () banked
  6543  001FD4  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6544  001FD6  0100               	movlb	0	; () banked
  6545  001FD8  5980               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6546  001FDA  0100               	movlb	0	; () banked
  6547  001FDC  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6548  001FDE  0100               	movlb	0	; () banked
  6549  001FE0  5981               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6550  001FE2  0100               	movlb	0	; () banked
  6551  001FE4  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6552  001FE6  0100               	movlb	0	; () banked
  6553  001FE8  5982               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6554  001FEA  A0D8               	btfss	status,0,c
  6555  001FEC  D012               	goto	l3528
  6556                           
  6557                           ; BSR set to: 0
  6558  001FEE  0100               	movlb	0	; () banked
  6559  001FF0  5183               	movf	___lldiv@divisor& (0+255),w,b
  6560  001FF2  0100               	movlb	0	; () banked
  6561  001FF4  5F7F               	subwf	___lldiv@dividend& (0+255),f,b
  6562  001FF6  0100               	movlb	0	; () banked
  6563  001FF8  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6564  001FFA  0100               	movlb	0	; () banked
  6565  001FFC  5B80               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6566  001FFE  0100               	movlb	0	; () banked
  6567  002000  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6568  002002  0100               	movlb	0	; () banked
  6569  002004  5B81               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6570  002006  0100               	movlb	0	; () banked
  6571  002008  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6572  00200A  0100               	movlb	0	; () banked
  6573  00200C  5B82               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6574                           
  6575                           ; BSR set to: 0
  6576  00200E  0100               	movlb	0	; () banked
  6577  002010  8187               	bsf	___lldiv@quotient& (0+255),0,b
  6578  002012                     l3528:
  6579                           
  6580                           ; BSR set to: 0
  6581  002012  0100               	movlb	0	; () banked
  6582  002014  90D8               	bcf	status,0,c
  6583  002016  3386               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6584  002018  3385               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6585  00201A  3384               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6586  00201C  3383               	rrcf	___lldiv@divisor& (0+255),f,b
  6587                           
  6588                           ; BSR set to: 0
  6589  00201E  0100               	movlb	0	; () banked
  6590  002020  2F8B               	decfsz	___lldiv@counter& (0+255),f,b
  6591  002022  D7CD               	goto	l3520
  6592  002024                     l1058:
  6593                           
  6594                           ; BSR set to: 0
  6595  002024  C087  F07F         	movff	___lldiv@quotient,?___lldiv
  6596  002028  C088  F080         	movff	___lldiv@quotient+1,?___lldiv+1
  6597  00202C  C089  F081         	movff	___lldiv@quotient+2,?___lldiv+2
  6598  002030  C08A  F082         	movff	___lldiv@quotient+3,?___lldiv+3
  6599                           
  6600                           ; BSR set to: 0
  6601  002034  0012               	return		;funcret
  6602  002036                     __end_of___lldiv:
  6603                           	opt stack 0
  6604                           tblptru	equ	0xFF8
  6605                           tblptrh	equ	0xFF7
  6606                           tblptrl	equ	0xFF6
  6607                           tablat	equ	0xFF5
  6608                           intcon	equ	0xFF2
  6609                           intcon2	equ	0xFF1
  6610                           postinc0	equ	0xFEE
  6611                           wreg	equ	0xFE8
  6612                           postdec1	equ	0xFE5
  6613                           fsr1l	equ	0xFE1
  6614                           indf2	equ	0xFDF
  6615                           fsr2h	equ	0xFDA
  6616                           fsr2l	equ	0xFD9
  6617                           status	equ	0xFD8
  6618                           
  6619 ;; *************** function _CANisTXwarningON *****************
  6620 ;; Defined at:
  6621 ;;		line 1119 in file "../../Scuola/Triennio/Tesina/can\CANlib.h"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;		None
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;		None
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      unsigned char 
  6628 ;; Registers used:
  6629 ;;		wreg
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6635 ;;      Params:         0       0       0       0
  6636 ;;      Locals:         0       0       0       0
  6637 ;;      Temps:          0       0       0       0
  6638 ;;      Totals:         0       0       0       0
  6639 ;;Total ram usage:        0 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; Hardware stack levels required when called:    4
  6642 ;; This function calls:
  6643 ;;		Nothing
  6644 ;; This function is called by:
  6645 ;;		_main
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text17
  6650  0024AA                     __ptext17:
  6651                           	opt stack 0
  6652  0024AA                     _CANisTXwarningON:
  6653                           	opt stack 26
  6654                           
  6655                           ;can\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;incstack = 0
  6659  0024AA  A474               	btfss	3956,2,c	;volatile
  6660  0024AC  D002               	goto	u3780
  6661  0024AE  0E01               	movlw	1
  6662  0024B0  0012               	return	
  6663  0024B2                     u3780:
  6664  0024B2  0E00               	movlw	0
  6665  0024B4  0012               	return	
  6666  0024B6                     __end_of_CANisTXwarningON:
  6667                           	opt stack 0
  6668                           tblptru	equ	0xFF8
  6669                           tblptrh	equ	0xFF7
  6670                           tblptrl	equ	0xFF6
  6671                           tablat	equ	0xFF5
  6672                           intcon	equ	0xFF2
  6673                           intcon2	equ	0xFF1
  6674                           postinc0	equ	0xFEE
  6675                           wreg	equ	0xFE8
  6676                           postdec1	equ	0xFE5
  6677                           fsr1l	equ	0xFE1
  6678                           indf2	equ	0xFDF
  6679                           fsr2h	equ	0xFDA
  6680                           fsr2l	equ	0xFD9
  6681                           status	equ	0xFD8
  6682                           
  6683 ;; *************** function _CANisRXwarningON *****************
  6684 ;; Defined at:
  6685 ;;		line 1127 in file "../../Scuola/Triennio/Tesina/can\CANlib.h"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;		None
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  1    wreg      unsigned char 
  6692 ;; Registers used:
  6693 ;;		wreg
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6699 ;;      Params:         0       0       0       0
  6700 ;;      Locals:         0       0       0       0
  6701 ;;      Temps:          0       0       0       0
  6702 ;;      Totals:         0       0       0       0
  6703 ;;Total ram usage:        0 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:    4
  6706 ;; This function calls:
  6707 ;;		Nothing
  6708 ;; This function is called by:
  6709 ;;		_main
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text18
  6714  0024B6                     __ptext18:
  6715                           	opt stack 0
  6716  0024B6                     _CANisRXwarningON:
  6717                           	opt stack 26
  6718                           
  6719                           ;can\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  6720                           
  6721                           ;incstack = 0
  6722  0024B6  A274               	btfss	3956,1,c	;volatile
  6723  0024B8  D002               	goto	u3790
  6724  0024BA  0E01               	movlw	1
  6725  0024BC  0012               	return	
  6726  0024BE                     u3790:
  6727  0024BE  0E00               	movlw	0
  6728  0024C0  0012               	return	
  6729  0024C2                     __end_of_CANisRXwarningON:
  6730                           	opt stack 0
  6731                           tblptru	equ	0xFF8
  6732                           tblptrh	equ	0xFF7
  6733                           tblptrl	equ	0xFF6
  6734                           tablat	equ	0xFF5
  6735                           intcon	equ	0xFF2
  6736                           intcon2	equ	0xFF1
  6737                           postinc0	equ	0xFEE
  6738                           wreg	equ	0xFE8
  6739                           postdec1	equ	0xFE5
  6740                           fsr1l	equ	0xFE1
  6741                           indf2	equ	0xFDF
  6742                           fsr2h	equ	0xFDA
  6743                           fsr2l	equ	0xFD9
  6744                           status	equ	0xFD8
  6745                           
  6746 ;; *************** function _ISR_bassa *****************
  6747 ;; Defined at:
  6748 ;;		line 92 in file "newmain.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;		None
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;		None
  6753 ;; Return value:  Size  Location     Type
  6754 ;;		None               void
  6755 ;; Registers used:
  6756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6762 ;;      Params:         0       0       0       0
  6763 ;;      Locals:         0       0       0       0
  6764 ;;      Temps:         17       0       0       0
  6765 ;;      Totals:        17       0       0       0
  6766 ;;Total ram usage:       17 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:    3
  6769 ;; This function calls:
  6770 ;;		_CANisRxReady
  6771 ;;		_CANreceiveMessage
  6772 ;;		___wmul
  6773 ;;		i1___lwdiv
  6774 ;; This function is called by:
  6775 ;;		Interrupt level 1
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	intcodelo
  6780  000018                     __pintcodelo:
  6781                           	opt stack 0
  6782  000018                     _ISR_bassa:
  6783                           	opt stack 24
  6784                           
  6785                           ;incstack = 0
  6786  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6787  00001A  CFD8 F02F          	movff	status,??_ISR_bassa
  6788  00001E  CFE8 F030          	movff	wreg,??_ISR_bassa+1
  6789  000022  CFE0 F031          	movff	bsr,??_ISR_bassa+2
  6790  000026  CFFA F032          	movff	pclath,??_ISR_bassa+3
  6791  00002A  CFFB F033          	movff	pclatu,??_ISR_bassa+4
  6792  00002E  CFE9 F034          	movff	fsr0l,??_ISR_bassa+5
  6793  000032  CFEA F035          	movff	fsr0h,??_ISR_bassa+6
  6794  000036  CFE1 F036          	movff	fsr1l,??_ISR_bassa+7
  6795  00003A  CFE2 F037          	movff	fsr1h,??_ISR_bassa+8
  6796  00003E  CFD9 F038          	movff	fsr2l,??_ISR_bassa+9
  6797  000042  CFDA F039          	movff	fsr2h,??_ISR_bassa+10
  6798  000046  CFF3 F03A          	movff	prodl,??_ISR_bassa+11
  6799  00004A  CFF4 F03B          	movff	prodh,??_ISR_bassa+12
  6800  00004E  CFF6 F03C          	movff	tblptrl,??_ISR_bassa+13
  6801  000052  CFF7 F03D          	movff	tblptrh,??_ISR_bassa+14
  6802  000056  CFF8 F03E          	movff	tblptru,??_ISR_bassa+15
  6803  00005A  CFF5 F03F          	movff	tablat,??_ISR_bassa+16
  6804                           
  6805                           ;newmain.c: 93: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  6806  00005E  A0A4               	btfss	4004,0,c	;volatile
  6807  000060  B2A4               	btfsc	4004,1,c	;volatile
  6808  000062  D001               	goto	i1l3586
  6809  000064  D045               	goto	i1l3608
  6810  000066                     i1l3586:
  6811                           
  6812                           ;newmain.c: 94: if (CANisRxReady()) {
  6813  000066  EC32  F012         	call	_CANisRxReady	;wreg free
  6814  00006A  0900               	iorlw	0
  6815  00006C  B4D8               	btfsc	status,2,c
  6816  00006E  D03E               	goto	i1l3604
  6817                           
  6818                           ;newmain.c: 95: CANreceiveMessage(&msg);
  6819  000070  0EA7               	movlw	low _msg
  6820  000072  6E22               	movwf	CANreceiveMessage@msg,c
  6821  000074  0E00               	movlw	high _msg
  6822  000076  6E23               	movwf	CANreceiveMessage@msg+1,c
  6823  000078  ECF4  F009         	call	_CANreceiveMessage	;wreg free
  6824                           
  6825                           ;newmain.c: 96: if (msg.RTR == 1) {
  6826  00007C  0100               	movlb	0	; () banked
  6827  00007E  05B5               	decf	(_msg+14)& (0+255),w,b
  6828  000080  A4D8               	btfss	status,2,c
  6829  000082  D00E               	goto	i1l3594
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;newmain.c: 97: id = msg.identifier;
  6833  000084  C0A7  F09D         	movff	_msg,_id
  6834  000088  C0A8  F09E         	movff	_msg+1,_id+1
  6835  00008C  C0A9  F09F         	movff	_msg+2,_id+2
  6836  000090  C0AA  F0A0         	movff	_msg+3,_id+3
  6837                           
  6838                           ;newmain.c: 98: remote_frame = msg.RTR;
  6839  000094  0100               	movlb	0	; () banked
  6840  000096  A1B5               	btfss	(_msg+14)& (0+255),0,b
  6841  000098  D002               	goto	i1u403_20
  6842  00009A  8247               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  6843  00009C  D001               	goto	i1l3594
  6844  00009E                     i1u403_20:
  6845  00009E  9247               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  6846  0000A0                     i1l3594:
  6847                           
  6848                           ;newmain.c: 99: }
  6849                           ;newmain.c: 101: if (msg.identifier == 0b00000000000000000000000000110) {
  6850  0000A0  0E06               	movlw	6
  6851  0000A2  0100               	movlb	0	; () banked
  6852  0000A4  19A7               	xorwf	_msg& (0+255),w,b
  6853  0000A6  0100               	movlb	0	; () banked
  6854  0000A8  11A8               	iorwf	(_msg+1)& (0+255),w,b
  6855  0000AA  0100               	movlb	0	; () banked
  6856  0000AC  11A9               	iorwf	(_msg+2)& (0+255),w,b
  6857  0000AE  0100               	movlb	0	; () banked
  6858  0000B0  11AA               	iorwf	(_msg+3)& (0+255),w,b
  6859  0000B2  A4D8               	btfss	status,2,c
  6860  0000B4  D01B               	goto	i1l3604
  6861                           
  6862                           ; BSR set to: 0
  6863                           ;newmain.c: 103: theorySteering = msg.data[0];
  6864  0000B6  C0AB  F021         	movff	_msg+4,_theorySteering
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;newmain.c: 104: currentSteering = theorySteering + calibration;
  6868  0000BA  5021               	movf	_theorySteering,w,c
  6869  0000BC  2419               	addwf	_calibration,w,c
  6870  0000BE  6E44               	movwf	_currentSteering,c
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;newmain.c: 105: currentSteering = (limiteDx * currentSteering) / 180;
  6874  0000C0  C044  F022         	movff	_currentSteering,___wmul@multiplier
  6875  0000C4  6A23               	clrf	___wmul@multiplier+1,c
  6876  0000C6  C040  F024         	movff	_limiteDx,___wmul@multiplicand
  6877  0000CA  C041  F025         	movff	_limiteDx+1,___wmul@multiplicand+1
  6878  0000CE  EC02  F012         	call	___wmul	;wreg free
  6879  0000D2  C022  F028         	movff	?___wmul,i1___lwdiv@dividend
  6880  0000D6  C023  F029         	movff	?___wmul+1,i1___lwdiv@dividend+1
  6881  0000DA  0E00               	movlw	0
  6882  0000DC  6E2B               	movwf	i1___lwdiv@divisor+1,c
  6883  0000DE  0EB4               	movlw	180
  6884  0000E0  6E2A               	movwf	i1___lwdiv@divisor,c
  6885  0000E2  EC73  F011         	call	i1___lwdiv	;wreg free
  6886  0000E6  5028               	movf	?i1___lwdiv,w,c
  6887  0000E8  6E44               	movwf	_currentSteering,c
  6888                           
  6889                           ;newmain.c: 106: noChange = 1;
  6890  0000EA  8047               	bsf	_noChange/(0+8),_noChange& (0+7),c
  6891  0000EC                     i1l3604:
  6892                           
  6893                           ;newmain.c: 107: }
  6894                           ;newmain.c: 108: }
  6895                           ;newmain.c: 109: PIR3bits.RXB0IF = 0;
  6896  0000EC  90A4               	bcf	4004,0,c	;volatile
  6897                           
  6898                           ;newmain.c: 110: PIR3bits.RXB1IF = 0;
  6899  0000EE  92A4               	bcf	4004,1,c	;volatile
  6900  0000F0                     i1l3608:
  6901                           
  6902                           ;newmain.c: 111: }
  6903                           ;newmain.c: 112: if (PIR2bits.TMR3IF) {
  6904  0000F0  A2A1               	btfss	4001,1,c	;volatile
  6905  0000F2  D00B               	goto	i1l641
  6906                           
  6907                           ;newmain.c: 113: timeCounter++;
  6908  0000F4  0E01               	movlw	1
  6909  0000F6  2611               	addwf	_timeCounter,f,c
  6910  0000F8  0E00               	movlw	0
  6911  0000FA  2212               	addwfc	_timeCounter+1,f,c
  6912  0000FC  2213               	addwfc	_timeCounter+2,f,c
  6913  0000FE  2214               	addwfc	_timeCounter+3,f,c
  6914                           
  6915                           ;newmain.c: 114: TMR3H = 0x63;
  6916  000100  0E63               	movlw	99
  6917  000102  6EB3               	movwf	4019,c	;volatile
  6918                           
  6919                           ;newmain.c: 115: TMR3L = 0xC0;
  6920  000104  0EC0               	movlw	192
  6921  000106  6EB2               	movwf	4018,c	;volatile
  6922                           
  6923                           ;newmain.c: 116: PIR2bits.TMR3IF = 0;
  6924  000108  92A1               	bcf	4001,1,c	;volatile
  6925  00010A                     i1l641:
  6926  00010A  C03F  FFF5         	movff	??_ISR_bassa+16,tablat
  6927  00010E  C03E  FFF8         	movff	??_ISR_bassa+15,tblptru
  6928  000112  C03D  FFF7         	movff	??_ISR_bassa+14,tblptrh
  6929  000116  C03C  FFF6         	movff	??_ISR_bassa+13,tblptrl
  6930  00011A  C03B  FFF4         	movff	??_ISR_bassa+12,prodh
  6931  00011E  C03A  FFF3         	movff	??_ISR_bassa+11,prodl
  6932  000122  C039  FFDA         	movff	??_ISR_bassa+10,fsr2h
  6933  000126  C038  FFD9         	movff	??_ISR_bassa+9,fsr2l
  6934  00012A  C037  FFE2         	movff	??_ISR_bassa+8,fsr1h
  6935  00012E  C036  FFE1         	movff	??_ISR_bassa+7,fsr1l
  6936  000132  C035  FFEA         	movff	??_ISR_bassa+6,fsr0h
  6937  000136  C034  FFE9         	movff	??_ISR_bassa+5,fsr0l
  6938  00013A  C033  FFFB         	movff	??_ISR_bassa+4,pclatu
  6939  00013E  C032  FFFA         	movff	??_ISR_bassa+3,pclath
  6940  000142  C031  FFE0         	movff	??_ISR_bassa+2,bsr
  6941  000146  C030  FFE8         	movff	??_ISR_bassa+1,wreg
  6942  00014A  C02F  FFD8         	movff	??_ISR_bassa,status
  6943  00014E  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6944  000150  0010               	retfie	
  6945  000152                     __end_of_ISR_bassa:
  6946                           	opt stack 0
  6947                           pclatu	equ	0xFFB
  6948                           pclath	equ	0xFFA
  6949                           tblptru	equ	0xFF8
  6950                           tblptrh	equ	0xFF7
  6951                           tblptrl	equ	0xFF6
  6952                           tablat	equ	0xFF5
  6953                           prodh	equ	0xFF4
  6954                           prodl	equ	0xFF3
  6955                           intcon	equ	0xFF2
  6956                           intcon2	equ	0xFF1
  6957                           postinc0	equ	0xFEE
  6958                           fsr0h	equ	0xFEA
  6959                           fsr0l	equ	0xFE9
  6960                           wreg	equ	0xFE8
  6961                           postdec1	equ	0xFE5
  6962                           fsr1h	equ	0xFE2
  6963                           fsr1l	equ	0xFE1
  6964                           bsr	equ	0xFE0
  6965                           indf2	equ	0xFDF
  6966                           fsr2h	equ	0xFDA
  6967                           fsr2l	equ	0xFD9
  6968                           status	equ	0xFD8
  6969                           
  6970 ;; *************** function i1___lwdiv *****************
  6971 ;; Defined at:
  6972 ;;		line 8 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  dividend        2    6[COMRAM] unsigned int 
  6975 ;;  divisor         2    8[COMRAM] unsigned int 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  __lwdiv         2   10[COMRAM] unsigned int 
  6978 ;;  __lwdiv         1   12[COMRAM] unsigned char 
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  2    6[COMRAM] unsigned int 
  6981 ;; Registers used:
  6982 ;;		wreg, status,2, status,0
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6988 ;;      Params:         4       0       0       0
  6989 ;;      Locals:         3       0       0       0
  6990 ;;      Temps:          0       0       0       0
  6991 ;;      Totals:         7       0       0       0
  6992 ;;Total ram usage:        7 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:    2
  6995 ;; This function calls:
  6996 ;;		Nothing
  6997 ;; This function is called by:
  6998 ;;		_ISR_bassa
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           	psect	text20
  7003  0022E6                     __ptext20:
  7004                           	opt stack 0
  7005  0022E6                     i1___lwdiv:
  7006                           	opt stack 24
  7007                           
  7008                           ;incstack = 0
  7009  0022E6  0E00               	movlw	0
  7010  0022E8  6E2D               	movwf	i1___lwdiv@quotient+1,c
  7011  0022EA  0E00               	movlw	0
  7012  0022EC  6E2C               	movwf	i1___lwdiv@quotient,c
  7013  0022EE  502A               	movf	i1___lwdiv@divisor,w,c
  7014  0022F0  102B               	iorwf	i1___lwdiv@divisor+1,w,c
  7015  0022F2  B4D8               	btfsc	status,2,c
  7016  0022F4  D01C               	goto	i1l1111
  7017  0022F6  0E01               	movlw	1
  7018  0022F8  6E2E               	movwf	i1___lwdiv@counter,c
  7019  0022FA  D004               	goto	i1l3540
  7020  0022FC                     i1l3538:
  7021  0022FC  90D8               	bcf	status,0,c
  7022  0022FE  362A               	rlcf	i1___lwdiv@divisor,f,c
  7023  002300  362B               	rlcf	i1___lwdiv@divisor+1,f,c
  7024  002302  2A2E               	incf	i1___lwdiv@counter,f,c
  7025  002304                     i1l3540:
  7026  002304  AE2B               	btfss	i1___lwdiv@divisor+1,7,c
  7027  002306  D7FA               	goto	i1l3538
  7028  002308                     i1l3542:
  7029  002308  90D8               	bcf	status,0,c
  7030  00230A  362C               	rlcf	i1___lwdiv@quotient,f,c
  7031  00230C  362D               	rlcf	i1___lwdiv@quotient+1,f,c
  7032  00230E  502A               	movf	i1___lwdiv@divisor,w,c
  7033  002310  5C28               	subwf	i1___lwdiv@dividend,w,c
  7034  002312  502B               	movf	i1___lwdiv@divisor+1,w,c
  7035  002314  5829               	subwfb	i1___lwdiv@dividend+1,w,c
  7036  002316  A0D8               	btfss	status,0,c
  7037  002318  D005               	goto	i1l3550
  7038  00231A  502A               	movf	i1___lwdiv@divisor,w,c
  7039  00231C  5E28               	subwf	i1___lwdiv@dividend,f,c
  7040  00231E  502B               	movf	i1___lwdiv@divisor+1,w,c
  7041  002320  5A29               	subwfb	i1___lwdiv@dividend+1,f,c
  7042  002322  802C               	bsf	i1___lwdiv@quotient,0,c
  7043  002324                     i1l3550:
  7044  002324  90D8               	bcf	status,0,c
  7045  002326  322B               	rrcf	i1___lwdiv@divisor+1,f,c
  7046  002328  322A               	rrcf	i1___lwdiv@divisor,f,c
  7047  00232A  2E2E               	decfsz	i1___lwdiv@counter,f,c
  7048  00232C  D7ED               	goto	i1l3542
  7049  00232E                     i1l1111:
  7050  00232E  C02C  F028         	movff	i1___lwdiv@quotient,?i1___lwdiv
  7051  002332  C02D  F029         	movff	i1___lwdiv@quotient+1,?i1___lwdiv+1
  7052  002336  0012               	return		;funcret
  7053  002338                     __end_ofi1___lwdiv:
  7054                           	opt stack 0
  7055                           pclatu	equ	0xFFB
  7056                           pclath	equ	0xFFA
  7057                           tblptru	equ	0xFF8
  7058                           tblptrh	equ	0xFF7
  7059                           tblptrl	equ	0xFF6
  7060                           tablat	equ	0xFF5
  7061                           prodh	equ	0xFF4
  7062                           prodl	equ	0xFF3
  7063                           intcon	equ	0xFF2
  7064                           intcon2	equ	0xFF1
  7065                           postinc0	equ	0xFEE
  7066                           fsr0h	equ	0xFEA
  7067                           fsr0l	equ	0xFE9
  7068                           wreg	equ	0xFE8
  7069                           postdec1	equ	0xFE5
  7070                           fsr1h	equ	0xFE2
  7071                           fsr1l	equ	0xFE1
  7072                           bsr	equ	0xFE0
  7073                           indf2	equ	0xFDF
  7074                           fsr2h	equ	0xFDA
  7075                           fsr2l	equ	0xFD9
  7076                           status	equ	0xFD8
  7077                           
  7078 ;; *************** function ___wmul *****************
  7079 ;; Defined at:
  7080 ;;		line 15 in file "P:\Programmi\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  multiplier      2    0[COMRAM] unsigned int 
  7083 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;  product         2    4[COMRAM] unsigned int 
  7086 ;; Return value:  Size  Location     Type
  7087 ;;                  2    0[COMRAM] unsigned int 
  7088 ;; Registers used:
  7089 ;;		wreg, status,2, status,0, prodl, prodh
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7095 ;;      Params:         4       0       0       0
  7096 ;;      Locals:         2       0       0       0
  7097 ;;      Temps:          0       0       0       0
  7098 ;;      Totals:         6       0       0       0
  7099 ;;Total ram usage:        6 bytes
  7100 ;; Hardware stack levels used:    1
  7101 ;; Hardware stack levels required when called:    2
  7102 ;; This function calls:
  7103 ;;		Nothing
  7104 ;; This function is called by:
  7105 ;;		_ISR_bassa
  7106 ;;		_delay_ms
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           	psect	text21
  7111  002404                     __ptext21:
  7112                           	opt stack 0
  7113  002404                     ___wmul:
  7114                           	opt stack 24
  7115                           
  7116                           ;incstack = 0
  7117  002404  5022               	movf	___wmul@multiplier,w,c
  7118  002406  0224               	mulwf	___wmul@multiplicand,c
  7119  002408  CFF3 F026          	movff	prodl,___wmul@product
  7120  00240C  CFF4 F027          	movff	prodh,___wmul@product+1
  7121  002410  5022               	movf	___wmul@multiplier,w,c
  7122  002412  0225               	mulwf	___wmul@multiplicand+1,c
  7123  002414  50F3               	movf	prodl,w,c
  7124  002416  2627               	addwf	___wmul@product+1,f,c
  7125  002418  5023               	movf	___wmul@multiplier+1,w,c
  7126  00241A  0224               	mulwf	___wmul@multiplicand,c
  7127  00241C  50F3               	movf	prodl,w,c
  7128  00241E  2627               	addwf	___wmul@product+1,f,c
  7129  002420  C026  F022         	movff	___wmul@product,?___wmul
  7130  002424  C027  F023         	movff	___wmul@product+1,?___wmul+1
  7131  002428  0012               	return	
  7132  00242A                     __end_of___wmul:
  7133                           	opt stack 0
  7134                           pclatu	equ	0xFFB
  7135                           pclath	equ	0xFFA
  7136                           tblptru	equ	0xFF8
  7137                           tblptrh	equ	0xFF7
  7138                           tblptrl	equ	0xFF6
  7139                           tablat	equ	0xFF5
  7140                           prodh	equ	0xFF4
  7141                           prodl	equ	0xFF3
  7142                           intcon	equ	0xFF2
  7143                           intcon2	equ	0xFF1
  7144                           postinc0	equ	0xFEE
  7145                           fsr0h	equ	0xFEA
  7146                           fsr0l	equ	0xFE9
  7147                           wreg	equ	0xFE8
  7148                           postdec1	equ	0xFE5
  7149                           fsr1h	equ	0xFE2
  7150                           fsr1l	equ	0xFE1
  7151                           bsr	equ	0xFE0
  7152                           indf2	equ	0xFDF
  7153                           fsr2h	equ	0xFDA
  7154                           fsr2l	equ	0xFD9
  7155                           status	equ	0xFD8
  7156                           
  7157 ;; *************** function _CANreceiveMessage *****************
  7158 ;; Defined at:
  7159 ;;		line 528 in file "../../Scuola/Triennio/Tesina/can\CANlib.h"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;  msg             2    0[COMRAM] PTR struct .
  7162 ;;		 -> msg(15), 
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;  tamp            1   11[COMRAM] unsigned char 
  7165 ;;  error           1   10[COMRAM] unsigned char 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      unsigned char 
  7168 ;; Registers used:
  7169 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7175 ;;      Params:         2       0       0       0
  7176 ;;      Locals:         2       0       0       0
  7177 ;;      Temps:          8       0       0       0
  7178 ;;      Totals:        12       0       0       0
  7179 ;;Total ram usage:       12 bytes
  7180 ;; Hardware stack levels used:    1
  7181 ;; Hardware stack levels required when called:    2
  7182 ;; This function calls:
  7183 ;;		Nothing
  7184 ;; This function is called by:
  7185 ;;		_ISR_bassa
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text22
  7190  0013E8                     __ptext22:
  7191                           	opt stack 0
  7192  0013E8                     _CANreceiveMessage:
  7193                           	opt stack 24
  7194                           
  7195                           ;can\CANlib.h: 530: BYTE tamp;
  7196                           ;can\CANlib.h: 531: BYTE error = 0;
  7197                           
  7198                           ;incstack = 0
  7199  0013E8  0E00               	movlw	0
  7200  0013EA  6E2C               	movwf	CANreceiveMessage@error,c
  7201                           
  7202                           ;can\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7203  0013EC  BE74               	btfsc	3956,7,c	;volatile
  7204                           
  7205                           ;can\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7206  0013EE  802C               	bsf	CANreceiveMessage@error,0,c
  7207                           
  7208                           ;can\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7209  0013F0  BC74               	btfsc	3956,6,c	;volatile
  7210                           
  7211                           ;can\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7212  0013F2  822C               	bsf	CANreceiveMessage@error,1,c
  7213                           
  7214                           ;can\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7215  0013F4  010F               	movlb	15	; () banked
  7216  0013F6  AF50               	btfss	80,7,b	;volatile
  7217  0013F8  D143               	goto	i1l408
  7218                           
  7219                           ; BSR set to: 15
  7220                           ;can\CANlib.h: 541: {
  7221                           ;can\CANlib.h: 542: msg->identifier = 0;
  7222  0013FA  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7223  0013FE  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7224  001402  6ADE               	clrf	postinc2,c
  7225  001404  6ADE               	clrf	postinc2,c
  7226  001406  6ADE               	clrf	postinc2,c
  7227  001408  6ADD               	clrf	postdec2,c
  7228                           
  7229                           ; BSR set to: 15
  7230                           ;can\CANlib.h: 543: msg->data[0] =RXB1D0;
  7231  00140A  EE20 F004          	lfsr	2,4
  7232  00140E  5022               	movf	CANreceiveMessage@msg,w,c
  7233  001410  26D9               	addwf	fsr2l,f,c
  7234  001412  5023               	movf	CANreceiveMessage@msg+1,w,c
  7235  001414  22DA               	addwfc	fsr2h,f,c
  7236  001416  CF56 FFDF          	movff	3926,indf2	;volatile
  7237                           
  7238                           ; BSR set to: 15
  7239                           ;can\CANlib.h: 544: msg->data[1] =RXB1D1;
  7240  00141A  EE20 F005          	lfsr	2,5
  7241  00141E  5022               	movf	CANreceiveMessage@msg,w,c
  7242  001420  26D9               	addwf	fsr2l,f,c
  7243  001422  5023               	movf	CANreceiveMessage@msg+1,w,c
  7244  001424  22DA               	addwfc	fsr2h,f,c
  7245  001426  CF57 FFDF          	movff	3927,indf2	;volatile
  7246                           
  7247                           ; BSR set to: 15
  7248                           ;can\CANlib.h: 545: msg->data[2] =RXB1D2;
  7249  00142A  EE20 F006          	lfsr	2,6
  7250  00142E  5022               	movf	CANreceiveMessage@msg,w,c
  7251  001430  26D9               	addwf	fsr2l,f,c
  7252  001432  5023               	movf	CANreceiveMessage@msg+1,w,c
  7253  001434  22DA               	addwfc	fsr2h,f,c
  7254  001436  CF58 FFDF          	movff	3928,indf2	;volatile
  7255                           
  7256                           ; BSR set to: 15
  7257                           ;can\CANlib.h: 546: msg->data[3] =RXB1D3;
  7258  00143A  EE20 F007          	lfsr	2,7
  7259  00143E  5022               	movf	CANreceiveMessage@msg,w,c
  7260  001440  26D9               	addwf	fsr2l,f,c
  7261  001442  5023               	movf	CANreceiveMessage@msg+1,w,c
  7262  001444  22DA               	addwfc	fsr2h,f,c
  7263  001446  CF59 FFDF          	movff	3929,indf2	;volatile
  7264                           
  7265                           ; BSR set to: 15
  7266                           ;can\CANlib.h: 547: msg->data[4] =RXB1D4;
  7267  00144A  EE20 F008          	lfsr	2,8
  7268  00144E  5022               	movf	CANreceiveMessage@msg,w,c
  7269  001450  26D9               	addwf	fsr2l,f,c
  7270  001452  5023               	movf	CANreceiveMessage@msg+1,w,c
  7271  001454  22DA               	addwfc	fsr2h,f,c
  7272  001456  CF5A FFDF          	movff	3930,indf2	;volatile
  7273                           
  7274                           ; BSR set to: 15
  7275                           ;can\CANlib.h: 548: msg->data[5] =RXB1D5;
  7276  00145A  EE20 F009          	lfsr	2,9
  7277  00145E  5022               	movf	CANreceiveMessage@msg,w,c
  7278  001460  26D9               	addwf	fsr2l,f,c
  7279  001462  5023               	movf	CANreceiveMessage@msg+1,w,c
  7280  001464  22DA               	addwfc	fsr2h,f,c
  7281  001466  CF5B FFDF          	movff	3931,indf2	;volatile
  7282                           
  7283                           ; BSR set to: 15
  7284                           ;can\CANlib.h: 549: msg->data[6] =RXB1D6;
  7285  00146A  EE20 F00A          	lfsr	2,10
  7286  00146E  5022               	movf	CANreceiveMessage@msg,w,c
  7287  001470  26D9               	addwf	fsr2l,f,c
  7288  001472  5023               	movf	CANreceiveMessage@msg+1,w,c
  7289  001474  22DA               	addwfc	fsr2h,f,c
  7290  001476  CF5C FFDF          	movff	3932,indf2	;volatile
  7291                           
  7292                           ; BSR set to: 15
  7293                           ;can\CANlib.h: 550: msg->data[7] =RXB1D7;
  7294  00147A  EE20 F00B          	lfsr	2,11
  7295  00147E  5022               	movf	CANreceiveMessage@msg,w,c
  7296  001480  26D9               	addwf	fsr2l,f,c
  7297  001482  5023               	movf	CANreceiveMessage@msg+1,w,c
  7298  001484  22DA               	addwfc	fsr2h,f,c
  7299  001486  CF5D FFDF          	movff	3933,indf2	;volatile
  7300                           
  7301                           ; BSR set to: 15
  7302                           ;can\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7303  00148A  EE20 F00E          	lfsr	2,14
  7304  00148E  5022               	movf	CANreceiveMessage@msg,w,c
  7305  001490  26D9               	addwf	fsr2l,f,c
  7306  001492  5023               	movf	CANreceiveMessage@msg+1,w,c
  7307  001494  22DA               	addwfc	fsr2h,f,c
  7308  001496  010F               	movlb	15	; () banked
  7309  001498  AD55               	btfss	85,6,b	;volatile
  7310  00149A  D002               	goto	i1u357_20
  7311  00149C  0E01               	movlw	1
  7312  00149E  D001               	goto	i1u357_26
  7313  0014A0                     i1u357_20:
  7314  0014A0  0E00               	movlw	0
  7315  0014A2                     i1u357_26:
  7316  0014A2  6EDF               	movwf	indf2,c
  7317                           
  7318                           ; BSR set to: 15
  7319                           ;can\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7320  0014A4  EE20 F00D          	lfsr	2,13
  7321  0014A8  5022               	movf	CANreceiveMessage@msg,w,c
  7322  0014AA  26D9               	addwf	fsr2l,f,c
  7323  0014AC  5023               	movf	CANreceiveMessage@msg+1,w,c
  7324  0014AE  22DA               	addwfc	fsr2h,f,c
  7325  0014B0  010F               	movlb	15	; () banked
  7326  0014B2  5155               	movf	85,w,b	;volatile
  7327  0014B4  0B0F               	andlw	15
  7328  0014B6  6EDF               	movwf	indf2,c
  7329                           
  7330                           ; BSR set to: 15
  7331                           ;can\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7332  0014B8  EE20 F00C          	lfsr	2,12
  7333  0014BC  5022               	movf	CANreceiveMessage@msg,w,c
  7334  0014BE  26D9               	addwf	fsr2l,f,c
  7335  0014C0  5023               	movf	CANreceiveMessage@msg+1,w,c
  7336  0014C2  22DA               	addwfc	fsr2h,f,c
  7337  0014C4  010F               	movlb	15	; () banked
  7338  0014C6  A752               	btfss	82,3,b	;volatile
  7339  0014C8  D002               	goto	i1u358_20
  7340  0014CA  0E01               	movlw	1
  7341  0014CC  D001               	goto	i1u358_26
  7342  0014CE                     i1u358_20:
  7343  0014CE  0E00               	movlw	0
  7344  0014D0                     i1u358_26:
  7345  0014D0  6EDF               	movwf	indf2,c
  7346                           
  7347                           ; BSR set to: 15
  7348                           ;can\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7349  0014D2  010F               	movlb	15	; () banked
  7350  0014D4  B752               	btfsc	82,3,b	;volatile
  7351  0014D6  D044               	goto	i1l3296
  7352                           
  7353                           ; BSR set to: 15
  7354                           ;can\CANlib.h: 559: {
  7355                           ;can\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7356  0014D8  CF51 F024          	movff	3921,??_CANreceiveMessage	;volatile
  7357  0014DC  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7358  0014DE  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7359  0014E0  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7360  0014E2  0E03               	movlw	3
  7361  0014E4                     i1u360_25:
  7362  0014E4  90D8               	bcf	status,0,c
  7363  0014E6  3624               	rlcf	??_CANreceiveMessage,f,c
  7364  0014E8  3625               	rlcf	??_CANreceiveMessage+1,f,c
  7365  0014EA  3626               	rlcf	??_CANreceiveMessage+2,f,c
  7366  0014EC  3627               	rlcf	??_CANreceiveMessage+3,f,c
  7367  0014EE  2EE8               	decfsz	wreg,f,c
  7368  0014F0  D7F9               	goto	i1u360_25
  7369  0014F2  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7370  0014F6  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7371  0014FA  C024  FFDE         	movff	??_CANreceiveMessage,postinc2
  7372  0014FE  C025  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7373  001502  C026  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7374  001506  C027  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7375                           
  7376                           ; BSR set to: 15
  7377                           ;can\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7378  00150A  010F               	movlb	15	; () banked
  7379  00150C  3952               	swapf	82,w,b	;volatile
  7380  00150E  42E8               	rrncf	wreg,f,c
  7381  001510  0B07               	andlw	7
  7382  001512  0B07               	andlw	7
  7383  001514  6E2D               	movwf	CANreceiveMessage@tamp,c
  7384                           
  7385                           ; BSR set to: 15
  7386                           ;can\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7387  001516  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7388  00151A  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7389  00151E  CFDE F024          	movff	postinc2,??_CANreceiveMessage
  7390  001522  CFDE F025          	movff	postinc2,??_CANreceiveMessage+1
  7391  001526  CFDE F026          	movff	postinc2,??_CANreceiveMessage+2
  7392  00152A  CFDE F027          	movff	postinc2,??_CANreceiveMessage+3
  7393  00152E  502D               	movf	CANreceiveMessage@tamp,w,c
  7394  001530  2424               	addwf	??_CANreceiveMessage,w,c
  7395  001532  6E28               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7396  001534  0E00               	movlw	0
  7397  001536  2025               	addwfc	??_CANreceiveMessage+1,w,c
  7398  001538  6E29               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7399  00153A  0E00               	movlw	0
  7400  00153C  2026               	addwfc	??_CANreceiveMessage+2,w,c
  7401  00153E  6E2A               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7402  001540  0E00               	movlw	0
  7403  001542  2027               	addwfc	??_CANreceiveMessage+3,w,c
  7404  001544  6E2B               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7405  001546  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7406  00154A  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7407  00154E  C028  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7408  001552  C029  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7409  001556  C02A  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7410  00155A  C02B  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7411                           
  7412                           ;can\CANlib.h: 563: }
  7413  00155E  D08D               	goto	i1l3322
  7414  001560                     i1l3296:
  7415                           
  7416                           ; BSR set to: 15
  7417                           ;can\CANlib.h: 564: else
  7418                           ;can\CANlib.h: 565: {
  7419                           ;can\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7420  001560  CF54 F024          	movff	3924,??_CANreceiveMessage	;volatile
  7421  001564  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7422  001566  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7423  001568  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7424  00156A  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7425  00156E  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7426  001572  C024  FFDE         	movff	??_CANreceiveMessage,postinc2
  7427  001576  C025  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7428  00157A  C026  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7429  00157E  C027  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7430                           
  7431                           ; BSR set to: 15
  7432                           ;can\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7433  001582  CF53 F024          	movff	3923,??_CANreceiveMessage	;volatile
  7434  001586  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7435  001588  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7436  00158A  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7437  00158C  C026  F027         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7438  001590  C025  F026         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7439  001594  C024  F025         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7440  001598  6A24               	clrf	??_CANreceiveMessage,c
  7441  00159A  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7442  00159E  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7443  0015A2  5024               	movf	??_CANreceiveMessage,w,c
  7444  0015A4  26DE               	addwf	postinc2,f,c
  7445  0015A6  5025               	movf	??_CANreceiveMessage+1,w,c
  7446  0015A8  22DE               	addwfc	postinc2,f,c
  7447  0015AA  5026               	movf	??_CANreceiveMessage+2,w,c
  7448  0015AC  22DE               	addwfc	postinc2,f,c
  7449  0015AE  5027               	movf	??_CANreceiveMessage+3,w,c
  7450  0015B0  22DE               	addwfc	postinc2,f,c
  7451                           
  7452                           ; BSR set to: 15
  7453                           ;can\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7454  0015B2  010F               	movlb	15	; () banked
  7455  0015B4  A152               	btfss	82,0,b	;volatile
  7456  0015B6  D00C               	goto	i1l3304
  7457                           
  7458                           ; BSR set to: 15
  7459                           ;can\CANlib.h: 570: msg->identifier |= 0x00010000;
  7460  0015B8  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7461  0015BC  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7462  0015C0  0E00               	movlw	0
  7463  0015C2  12DE               	iorwf	postinc2,f,c
  7464  0015C4  0E00               	movlw	0
  7465  0015C6  12DE               	iorwf	postinc2,f,c
  7466  0015C8  0E01               	movlw	1
  7467  0015CA  12DE               	iorwf	postinc2,f,c
  7468  0015CC  0E00               	movlw	0
  7469  0015CE  12DE               	iorwf	postinc2,f,c
  7470  0015D0                     i1l3304:
  7471                           
  7472                           ; BSR set to: 15
  7473                           ;can\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7474  0015D0  010F               	movlb	15	; () banked
  7475  0015D2  A352               	btfss	82,1,b	;volatile
  7476  0015D4  D00C               	goto	i1l3308
  7477                           
  7478                           ; BSR set to: 15
  7479                           ;can\CANlib.h: 572: msg->identifier |= 0x00020000;
  7480  0015D6  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7481  0015DA  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7482  0015DE  0E00               	movlw	0
  7483  0015E0  12DE               	iorwf	postinc2,f,c
  7484  0015E2  0E00               	movlw	0
  7485  0015E4  12DE               	iorwf	postinc2,f,c
  7486  0015E6  0E02               	movlw	2
  7487  0015E8  12DE               	iorwf	postinc2,f,c
  7488  0015EA  0E00               	movlw	0
  7489  0015EC  12DE               	iorwf	postinc2,f,c
  7490  0015EE                     i1l3308:
  7491                           
  7492                           ; BSR set to: 15
  7493                           ;can\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7494  0015EE  010F               	movlb	15	; () banked
  7495  0015F0  AB52               	btfss	82,5,b	;volatile
  7496  0015F2  D00C               	goto	i1l3312
  7497                           
  7498                           ; BSR set to: 15
  7499                           ;can\CANlib.h: 574: msg->identifier |= 0x00040000;
  7500  0015F4  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7501  0015F8  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7502  0015FC  0E00               	movlw	0
  7503  0015FE  12DE               	iorwf	postinc2,f,c
  7504  001600  0E00               	movlw	0
  7505  001602  12DE               	iorwf	postinc2,f,c
  7506  001604  0E04               	movlw	4
  7507  001606  12DE               	iorwf	postinc2,f,c
  7508  001608  0E00               	movlw	0
  7509  00160A  12DE               	iorwf	postinc2,f,c
  7510  00160C                     i1l3312:
  7511                           
  7512                           ; BSR set to: 15
  7513                           ;can\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7514  00160C  010F               	movlb	15	; () banked
  7515  00160E  AD52               	btfss	82,6,b	;volatile
  7516  001610  D00C               	goto	i1l3316
  7517                           
  7518                           ; BSR set to: 15
  7519                           ;can\CANlib.h: 576: msg->identifier |= 0x00080000;
  7520  001612  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7521  001616  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7522  00161A  0E00               	movlw	0
  7523  00161C  12DE               	iorwf	postinc2,f,c
  7524  00161E  0E00               	movlw	0
  7525  001620  12DE               	iorwf	postinc2,f,c
  7526  001622  0E08               	movlw	8
  7527  001624  12DE               	iorwf	postinc2,f,c
  7528  001626  0E00               	movlw	0
  7529  001628  12DE               	iorwf	postinc2,f,c
  7530  00162A                     i1l3316:
  7531                           
  7532                           ; BSR set to: 15
  7533                           ;can\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7534  00162A  010F               	movlb	15	; () banked
  7535  00162C  AF52               	btfss	82,7,b	;volatile
  7536  00162E  D00C               	goto	i1l3320
  7537                           
  7538                           ; BSR set to: 15
  7539                           ;can\CANlib.h: 578: msg->identifier |= 0x00100000;
  7540  001630  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7541  001634  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7542  001638  0E00               	movlw	0
  7543  00163A  12DE               	iorwf	postinc2,f,c
  7544  00163C  0E00               	movlw	0
  7545  00163E  12DE               	iorwf	postinc2,f,c
  7546  001640  0E10               	movlw	16
  7547  001642  12DE               	iorwf	postinc2,f,c
  7548  001644  0E00               	movlw	0
  7549  001646  12DE               	iorwf	postinc2,f,c
  7550  001648                     i1l3320:
  7551                           
  7552                           ; BSR set to: 15
  7553                           ;can\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7554  001648  CF51 F024          	movff	3921,??_CANreceiveMessage	;volatile
  7555  00164C  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7556  00164E  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7557  001650  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7558  001652  0E15               	movlw	21
  7559  001654                     i1u366_25:
  7560  001654  90D8               	bcf	status,0,c
  7561  001656  3624               	rlcf	??_CANreceiveMessage,f,c
  7562  001658  3625               	rlcf	??_CANreceiveMessage+1,f,c
  7563  00165A  3626               	rlcf	??_CANreceiveMessage+2,f,c
  7564  00165C  3627               	rlcf	??_CANreceiveMessage+3,f,c
  7565  00165E  2EE8               	decfsz	wreg,f,c
  7566  001660  D7F9               	goto	i1u366_25
  7567  001662  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7568  001666  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7569  00166A  5024               	movf	??_CANreceiveMessage,w,c
  7570  00166C  12DE               	iorwf	postinc2,f,c
  7571  00166E  5025               	movf	??_CANreceiveMessage+1,w,c
  7572  001670  12DE               	iorwf	postinc2,f,c
  7573  001672  5026               	movf	??_CANreceiveMessage+2,w,c
  7574  001674  12DE               	iorwf	postinc2,f,c
  7575  001676  5027               	movf	??_CANreceiveMessage+3,w,c
  7576  001678  12DE               	iorwf	postinc2,f,c
  7577  00167A                     i1l3322:
  7578                           
  7579                           ; BSR set to: 15
  7580                           ;can\CANlib.h: 581: }
  7581                           ;can\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7582  00167A  010F               	movlb	15	; () banked
  7583  00167C  9F50               	bcf	80,7,b	;volatile
  7584                           
  7585                           ; BSR set to: 15
  7586                           ;can\CANlib.h: 584: return (error);
  7587                           ;	Return value of _CANreceiveMessage is never used
  7588  00167E  0012               	return	
  7589  001680                     i1l408:
  7590                           
  7591                           ; BSR set to: 15
  7592                           ;can\CANlib.h: 585: }
  7593                           ;can\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7594  001680  AE60               	btfss	3936,7,c	;volatile
  7595  001682  0012               	return	
  7596                           
  7597                           ; BSR set to: 15
  7598                           ;can\CANlib.h: 588: {
  7599                           ;can\CANlib.h: 589: msg->identifier = 0;
  7600  001684  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7601  001688  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7602  00168C  6ADE               	clrf	postinc2,c
  7603  00168E  6ADE               	clrf	postinc2,c
  7604  001690  6ADE               	clrf	postinc2,c
  7605  001692  6ADD               	clrf	postdec2,c
  7606                           
  7607                           ; BSR set to: 15
  7608                           ;can\CANlib.h: 590: msg->data[0] =RXB0D0;
  7609  001694  EE20 F004          	lfsr	2,4
  7610  001698  5022               	movf	CANreceiveMessage@msg,w,c
  7611  00169A  26D9               	addwf	fsr2l,f,c
  7612  00169C  5023               	movf	CANreceiveMessage@msg+1,w,c
  7613  00169E  22DA               	addwfc	fsr2h,f,c
  7614  0016A0  CF66 FFDF          	movff	3942,indf2	;volatile
  7615                           
  7616                           ; BSR set to: 15
  7617                           ;can\CANlib.h: 591: msg->data[1] =RXB0D1;
  7618  0016A4  EE20 F005          	lfsr	2,5
  7619  0016A8  5022               	movf	CANreceiveMessage@msg,w,c
  7620  0016AA  26D9               	addwf	fsr2l,f,c
  7621  0016AC  5023               	movf	CANreceiveMessage@msg+1,w,c
  7622  0016AE  22DA               	addwfc	fsr2h,f,c
  7623  0016B0  CF67 FFDF          	movff	3943,indf2	;volatile
  7624                           
  7625                           ; BSR set to: 15
  7626                           ;can\CANlib.h: 592: msg->data[2] =RXB0D2;
  7627  0016B4  EE20 F006          	lfsr	2,6
  7628  0016B8  5022               	movf	CANreceiveMessage@msg,w,c
  7629  0016BA  26D9               	addwf	fsr2l,f,c
  7630  0016BC  5023               	movf	CANreceiveMessage@msg+1,w,c
  7631  0016BE  22DA               	addwfc	fsr2h,f,c
  7632  0016C0  CF68 FFDF          	movff	3944,indf2	;volatile
  7633                           
  7634                           ; BSR set to: 15
  7635                           ;can\CANlib.h: 593: msg->data[3] =RXB0D3;
  7636  0016C4  EE20 F007          	lfsr	2,7
  7637  0016C8  5022               	movf	CANreceiveMessage@msg,w,c
  7638  0016CA  26D9               	addwf	fsr2l,f,c
  7639  0016CC  5023               	movf	CANreceiveMessage@msg+1,w,c
  7640  0016CE  22DA               	addwfc	fsr2h,f,c
  7641  0016D0  CF69 FFDF          	movff	3945,indf2	;volatile
  7642                           
  7643                           ; BSR set to: 15
  7644                           ;can\CANlib.h: 594: msg->data[4] =RXB0D4;
  7645  0016D4  EE20 F008          	lfsr	2,8
  7646  0016D8  5022               	movf	CANreceiveMessage@msg,w,c
  7647  0016DA  26D9               	addwf	fsr2l,f,c
  7648  0016DC  5023               	movf	CANreceiveMessage@msg+1,w,c
  7649  0016DE  22DA               	addwfc	fsr2h,f,c
  7650  0016E0  CF6A FFDF          	movff	3946,indf2	;volatile
  7651                           
  7652                           ; BSR set to: 15
  7653                           ;can\CANlib.h: 595: msg->data[5] =RXB0D5;
  7654  0016E4  EE20 F009          	lfsr	2,9
  7655  0016E8  5022               	movf	CANreceiveMessage@msg,w,c
  7656  0016EA  26D9               	addwf	fsr2l,f,c
  7657  0016EC  5023               	movf	CANreceiveMessage@msg+1,w,c
  7658  0016EE  22DA               	addwfc	fsr2h,f,c
  7659  0016F0  CF6B FFDF          	movff	3947,indf2	;volatile
  7660                           
  7661                           ; BSR set to: 15
  7662                           ;can\CANlib.h: 596: msg->data[6] =RXB0D6;
  7663  0016F4  EE20 F00A          	lfsr	2,10
  7664  0016F8  5022               	movf	CANreceiveMessage@msg,w,c
  7665  0016FA  26D9               	addwf	fsr2l,f,c
  7666  0016FC  5023               	movf	CANreceiveMessage@msg+1,w,c
  7667  0016FE  22DA               	addwfc	fsr2h,f,c
  7668  001700  CF6C FFDF          	movff	3948,indf2	;volatile
  7669                           
  7670                           ; BSR set to: 15
  7671                           ;can\CANlib.h: 597: msg->data[7] =RXB0D7;
  7672  001704  EE20 F00B          	lfsr	2,11
  7673  001708  5022               	movf	CANreceiveMessage@msg,w,c
  7674  00170A  26D9               	addwf	fsr2l,f,c
  7675  00170C  5023               	movf	CANreceiveMessage@msg+1,w,c
  7676  00170E  22DA               	addwfc	fsr2h,f,c
  7677  001710  CF6D FFDF          	movff	3949,indf2	;volatile
  7678                           
  7679                           ; BSR set to: 15
  7680                           ;can\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7681  001714  EE20 F00E          	lfsr	2,14
  7682  001718  5022               	movf	CANreceiveMessage@msg,w,c
  7683  00171A  26D9               	addwf	fsr2l,f,c
  7684  00171C  5023               	movf	CANreceiveMessage@msg+1,w,c
  7685  00171E  22DA               	addwfc	fsr2h,f,c
  7686  001720  AC65               	btfss	3941,6,c	;volatile
  7687  001722  D002               	goto	i1u368_20
  7688  001724  0E01               	movlw	1
  7689  001726  D001               	goto	i1u368_26
  7690  001728                     i1u368_20:
  7691  001728  0E00               	movlw	0
  7692  00172A                     i1u368_26:
  7693  00172A  6EDF               	movwf	indf2,c
  7694                           
  7695                           ; BSR set to: 15
  7696                           ;can\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7697  00172C  EE20 F00D          	lfsr	2,13
  7698  001730  5022               	movf	CANreceiveMessage@msg,w,c
  7699  001732  26D9               	addwf	fsr2l,f,c
  7700  001734  5023               	movf	CANreceiveMessage@msg+1,w,c
  7701  001736  22DA               	addwfc	fsr2h,f,c
  7702  001738  5065               	movf	3941,w,c	;volatile
  7703  00173A  0B0F               	andlw	15
  7704  00173C  6EDF               	movwf	indf2,c
  7705                           
  7706                           ; BSR set to: 15
  7707                           ;can\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  7708  00173E  EE20 F00C          	lfsr	2,12
  7709  001742  5022               	movf	CANreceiveMessage@msg,w,c
  7710  001744  26D9               	addwf	fsr2l,f,c
  7711  001746  5023               	movf	CANreceiveMessage@msg+1,w,c
  7712  001748  22DA               	addwfc	fsr2h,f,c
  7713  00174A  A662               	btfss	3938,3,c	;volatile
  7714  00174C  D002               	goto	i1u369_20
  7715  00174E  0E01               	movlw	1
  7716  001750  D001               	goto	i1u369_26
  7717  001752                     i1u369_20:
  7718  001752  0E00               	movlw	0
  7719  001754                     i1u369_26:
  7720  001754  6EDF               	movwf	indf2,c
  7721                           
  7722                           ; BSR set to: 15
  7723                           ;can\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  7724  001756  B662               	btfsc	3938,3,c	;volatile
  7725  001758  D043               	goto	i1l3358
  7726                           
  7727                           ; BSR set to: 15
  7728                           ;can\CANlib.h: 606: {
  7729                           ;can\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7730  00175A  CF61 F024          	movff	3937,??_CANreceiveMessage	;volatile
  7731  00175E  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7732  001760  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7733  001762  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7734  001764  0E03               	movlw	3
  7735  001766                     i1u371_25:
  7736  001766  90D8               	bcf	status,0,c
  7737  001768  3624               	rlcf	??_CANreceiveMessage,f,c
  7738  00176A  3625               	rlcf	??_CANreceiveMessage+1,f,c
  7739  00176C  3626               	rlcf	??_CANreceiveMessage+2,f,c
  7740  00176E  3627               	rlcf	??_CANreceiveMessage+3,f,c
  7741  001770  2EE8               	decfsz	wreg,f,c
  7742  001772  D7F9               	goto	i1u371_25
  7743  001774  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7744  001778  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7745  00177C  C024  FFDE         	movff	??_CANreceiveMessage,postinc2
  7746  001780  C025  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7747  001784  C026  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7748  001788  C027  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7749                           
  7750                           ; BSR set to: 15
  7751                           ;can\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7752  00178C  3862               	swapf	3938,w,c	;volatile
  7753  00178E  42E8               	rrncf	wreg,f,c
  7754  001790  0B07               	andlw	7
  7755  001792  0B07               	andlw	7
  7756  001794  6E2D               	movwf	CANreceiveMessage@tamp,c
  7757                           
  7758                           ; BSR set to: 15
  7759                           ;can\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  7760  001796  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7761  00179A  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7762  00179E  CFDE F024          	movff	postinc2,??_CANreceiveMessage
  7763  0017A2  CFDE F025          	movff	postinc2,??_CANreceiveMessage+1
  7764  0017A6  CFDE F026          	movff	postinc2,??_CANreceiveMessage+2
  7765  0017AA  CFDE F027          	movff	postinc2,??_CANreceiveMessage+3
  7766  0017AE  502D               	movf	CANreceiveMessage@tamp,w,c
  7767  0017B0  2424               	addwf	??_CANreceiveMessage,w,c
  7768  0017B2  6E28               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7769  0017B4  0E00               	movlw	0
  7770  0017B6  2025               	addwfc	??_CANreceiveMessage+1,w,c
  7771  0017B8  6E29               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7772  0017BA  0E00               	movlw	0
  7773  0017BC  2026               	addwfc	??_CANreceiveMessage+2,w,c
  7774  0017BE  6E2A               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7775  0017C0  0E00               	movlw	0
  7776  0017C2  2027               	addwfc	??_CANreceiveMessage+3,w,c
  7777  0017C4  6E2B               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7778  0017C6  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7779  0017CA  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7780  0017CE  C028  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7781  0017D2  C029  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7782  0017D6  C02A  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7783  0017DA  C02B  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7784                           
  7785                           ;can\CANlib.h: 610: }
  7786  0017DE  D088               	goto	i1l3384
  7787  0017E0                     i1l3358:
  7788                           
  7789                           ; BSR set to: 15
  7790                           ;can\CANlib.h: 611: else
  7791                           ;can\CANlib.h: 612: {
  7792                           ;can\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  7793  0017E0  CF64 F024          	movff	3940,??_CANreceiveMessage	;volatile
  7794  0017E4  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7795  0017E6  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7796  0017E8  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7797  0017EA  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7798  0017EE  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7799  0017F2  C024  FFDE         	movff	??_CANreceiveMessage,postinc2
  7800  0017F6  C025  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7801  0017FA  C026  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7802  0017FE  C027  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7803                           
  7804                           ; BSR set to: 15
  7805                           ;can\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7806  001802  CF63 F024          	movff	3939,??_CANreceiveMessage	;volatile
  7807  001806  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7808  001808  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7809  00180A  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7810  00180C  C026  F027         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7811  001810  C025  F026         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7812  001814  C024  F025         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7813  001818  6A24               	clrf	??_CANreceiveMessage,c
  7814  00181A  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7815  00181E  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7816  001822  5024               	movf	??_CANreceiveMessage,w,c
  7817  001824  26DE               	addwf	postinc2,f,c
  7818  001826  5025               	movf	??_CANreceiveMessage+1,w,c
  7819  001828  22DE               	addwfc	postinc2,f,c
  7820  00182A  5026               	movf	??_CANreceiveMessage+2,w,c
  7821  00182C  22DE               	addwfc	postinc2,f,c
  7822  00182E  5027               	movf	??_CANreceiveMessage+3,w,c
  7823  001830  22DE               	addwfc	postinc2,f,c
  7824                           
  7825                           ; BSR set to: 15
  7826                           ;can\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  7827  001832  A062               	btfss	3938,0,c	;volatile
  7828  001834  D00C               	goto	i1l3366
  7829                           
  7830                           ; BSR set to: 15
  7831                           ;can\CANlib.h: 617: msg->identifier |= 0x00010000;
  7832  001836  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7833  00183A  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7834  00183E  0E00               	movlw	0
  7835  001840  12DE               	iorwf	postinc2,f,c
  7836  001842  0E00               	movlw	0
  7837  001844  12DE               	iorwf	postinc2,f,c
  7838  001846  0E01               	movlw	1
  7839  001848  12DE               	iorwf	postinc2,f,c
  7840  00184A  0E00               	movlw	0
  7841  00184C  12DE               	iorwf	postinc2,f,c
  7842  00184E                     i1l3366:
  7843                           
  7844                           ; BSR set to: 15
  7845                           ;can\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  7846  00184E  A262               	btfss	3938,1,c	;volatile
  7847  001850  D00C               	goto	i1l3370
  7848                           
  7849                           ; BSR set to: 15
  7850                           ;can\CANlib.h: 619: msg->identifier |= 0x00020000;
  7851  001852  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7852  001856  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7853  00185A  0E00               	movlw	0
  7854  00185C  12DE               	iorwf	postinc2,f,c
  7855  00185E  0E00               	movlw	0
  7856  001860  12DE               	iorwf	postinc2,f,c
  7857  001862  0E02               	movlw	2
  7858  001864  12DE               	iorwf	postinc2,f,c
  7859  001866  0E00               	movlw	0
  7860  001868  12DE               	iorwf	postinc2,f,c
  7861  00186A                     i1l3370:
  7862                           
  7863                           ; BSR set to: 15
  7864                           ;can\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  7865  00186A  AA62               	btfss	3938,5,c	;volatile
  7866  00186C  D00C               	goto	i1l3374
  7867                           
  7868                           ; BSR set to: 15
  7869                           ;can\CANlib.h: 621: msg->identifier |= 0x00040000;
  7870  00186E  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7871  001872  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7872  001876  0E00               	movlw	0
  7873  001878  12DE               	iorwf	postinc2,f,c
  7874  00187A  0E00               	movlw	0
  7875  00187C  12DE               	iorwf	postinc2,f,c
  7876  00187E  0E04               	movlw	4
  7877  001880  12DE               	iorwf	postinc2,f,c
  7878  001882  0E00               	movlw	0
  7879  001884  12DE               	iorwf	postinc2,f,c
  7880  001886                     i1l3374:
  7881                           
  7882                           ; BSR set to: 15
  7883                           ;can\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  7884  001886  AC62               	btfss	3938,6,c	;volatile
  7885  001888  D00C               	goto	i1l3378
  7886                           
  7887                           ; BSR set to: 15
  7888                           ;can\CANlib.h: 623: msg->identifier |= 0x00080000;
  7889  00188A  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7890  00188E  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7891  001892  0E00               	movlw	0
  7892  001894  12DE               	iorwf	postinc2,f,c
  7893  001896  0E00               	movlw	0
  7894  001898  12DE               	iorwf	postinc2,f,c
  7895  00189A  0E08               	movlw	8
  7896  00189C  12DE               	iorwf	postinc2,f,c
  7897  00189E  0E00               	movlw	0
  7898  0018A0  12DE               	iorwf	postinc2,f,c
  7899  0018A2                     i1l3378:
  7900                           
  7901                           ; BSR set to: 15
  7902                           ;can\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  7903  0018A2  AE62               	btfss	3938,7,c	;volatile
  7904  0018A4  D00C               	goto	i1l3382
  7905                           
  7906                           ; BSR set to: 15
  7907                           ;can\CANlib.h: 625: msg->identifier |= 0x00100000;
  7908  0018A6  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7909  0018AA  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7910  0018AE  0E00               	movlw	0
  7911  0018B0  12DE               	iorwf	postinc2,f,c
  7912  0018B2  0E00               	movlw	0
  7913  0018B4  12DE               	iorwf	postinc2,f,c
  7914  0018B6  0E10               	movlw	16
  7915  0018B8  12DE               	iorwf	postinc2,f,c
  7916  0018BA  0E00               	movlw	0
  7917  0018BC  12DE               	iorwf	postinc2,f,c
  7918  0018BE                     i1l3382:
  7919                           
  7920                           ; BSR set to: 15
  7921                           ;can\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  7922  0018BE  CF61 F024          	movff	3937,??_CANreceiveMessage	;volatile
  7923  0018C2  6A25               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7924  0018C4  6A26               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7925  0018C6  6A27               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7926  0018C8  0E15               	movlw	21
  7927  0018CA                     i1u377_25:
  7928  0018CA  90D8               	bcf	status,0,c
  7929  0018CC  3624               	rlcf	??_CANreceiveMessage,f,c
  7930  0018CE  3625               	rlcf	??_CANreceiveMessage+1,f,c
  7931  0018D0  3626               	rlcf	??_CANreceiveMessage+2,f,c
  7932  0018D2  3627               	rlcf	??_CANreceiveMessage+3,f,c
  7933  0018D4  2EE8               	decfsz	wreg,f,c
  7934  0018D6  D7F9               	goto	i1u377_25
  7935  0018D8  C022  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7936  0018DC  C023  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7937  0018E0  5024               	movf	??_CANreceiveMessage,w,c
  7938  0018E2  12DE               	iorwf	postinc2,f,c
  7939  0018E4  5025               	movf	??_CANreceiveMessage+1,w,c
  7940  0018E6  12DE               	iorwf	postinc2,f,c
  7941  0018E8  5026               	movf	??_CANreceiveMessage+2,w,c
  7942  0018EA  12DE               	iorwf	postinc2,f,c
  7943  0018EC  5027               	movf	??_CANreceiveMessage+3,w,c
  7944  0018EE  12DE               	iorwf	postinc2,f,c
  7945  0018F0                     i1l3384:
  7946                           
  7947                           ; BSR set to: 15
  7948                           ;can\CANlib.h: 629: }
  7949                           ;can\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  7950  0018F0  9E60               	bcf	3936,7,c	;volatile
  7951                           
  7952                           ; BSR set to: 15
  7953                           ;can\CANlib.h: 632: return (error);
  7954                           ;	Return value of _CANreceiveMessage is never used
  7955  0018F2  0012               	return	
  7956  0018F4                     __end_of_CANreceiveMessage:
  7957                           	opt stack 0
  7958                           pclatu	equ	0xFFB
  7959                           pclath	equ	0xFFA
  7960                           tblptru	equ	0xFF8
  7961                           tblptrh	equ	0xFF7
  7962                           tblptrl	equ	0xFF6
  7963                           tablat	equ	0xFF5
  7964                           prodh	equ	0xFF4
  7965                           prodl	equ	0xFF3
  7966                           intcon	equ	0xFF2
  7967                           intcon2	equ	0xFF1
  7968                           postinc0	equ	0xFEE
  7969                           fsr0h	equ	0xFEA
  7970                           fsr0l	equ	0xFE9
  7971                           wreg	equ	0xFE8
  7972                           postdec1	equ	0xFE5
  7973                           fsr1h	equ	0xFE2
  7974                           fsr1l	equ	0xFE1
  7975                           bsr	equ	0xFE0
  7976                           indf2	equ	0xFDF
  7977                           postinc2	equ	0xFDE
  7978                           postdec2	equ	0xFDD
  7979                           fsr2h	equ	0xFDA
  7980                           fsr2l	equ	0xFD9
  7981                           status	equ	0xFD8
  7982                           
  7983 ;; *************** function _CANisRxReady *****************
  7984 ;; Defined at:
  7985 ;;		line 1163 in file "../../Scuola/Triennio/Tesina/can\CANlib.h"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;		None
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;		None
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  1    wreg      unsigned char 
  7992 ;; Registers used:
  7993 ;;		wreg, status,2
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 0/0
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7999 ;;      Params:         0       0       0       0
  8000 ;;      Locals:         1       0       0       0
  8001 ;;      Temps:          0       0       0       0
  8002 ;;      Totals:         1       0       0       0
  8003 ;;Total ram usage:        1 bytes
  8004 ;; Hardware stack levels used:    1
  8005 ;; Hardware stack levels required when called:    2
  8006 ;; This function calls:
  8007 ;;		Nothing
  8008 ;; This function is called by:
  8009 ;;		_ISR_bassa
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013                           	psect	text23
  8014  002464                     __ptext23:
  8015                           	opt stack 0
  8016  002464                     _CANisRxReady:
  8017                           	opt stack 24
  8018                           
  8019                           ;can\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8020                           
  8021                           ; BSR set to: 15
  8022                           ;incstack = 0
  8023  002464  0E01               	movlw	1
  8024  002466  6E22               	movwf	_CANisRxReady$2912,c
  8025  002468  BE60               	btfsc	3936,7,c	;volatile
  8026  00246A  D005               	goto	i1l559
  8027  00246C  010F               	movlb	15	; () banked
  8028  00246E  BF50               	btfsc	80,7,b	;volatile
  8029  002470  D002               	goto	i1l559
  8030                           
  8031                           ; BSR set to: 15
  8032  002472  0E00               	movlw	0
  8033  002474  6E22               	movwf	_CANisRxReady$2912,c
  8034  002476                     i1l559:
  8035  002476  5022               	movf	_CANisRxReady$2912,w,c
  8036  002478  0012               	return	
  8037  00247A                     __end_of_CANisRxReady:
  8038                           	opt stack 0
  8039                           pclatu	equ	0xFFB
  8040                           pclath	equ	0xFFA
  8041                           tblptru	equ	0xFF8
  8042                           tblptrh	equ	0xFF7
  8043                           tblptrl	equ	0xFF6
  8044                           tablat	equ	0xFF5
  8045                           prodh	equ	0xFF4
  8046                           prodl	equ	0xFF3
  8047                           intcon	equ	0xFF2
  8048                           intcon2	equ	0xFF1
  8049                           postinc0	equ	0xFEE
  8050                           fsr0h	equ	0xFEA
  8051                           fsr0l	equ	0xFE9
  8052                           wreg	equ	0xFE8
  8053                           postdec1	equ	0xFE5
  8054                           fsr1h	equ	0xFE2
  8055                           fsr1l	equ	0xFE1
  8056                           bsr	equ	0xFE0
  8057                           indf2	equ	0xFDF
  8058                           postinc2	equ	0xFDE
  8059                           postdec2	equ	0xFDD
  8060                           fsr2h	equ	0xFDA
  8061                           fsr2l	equ	0xFD9
  8062                           status	equ	0xFD8
  8063                           
  8064 ;; *************** function _ISR_alta *****************
  8065 ;; Defined at:
  8066 ;;		line 72 in file "newmain.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;		None
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;		None
  8071 ;; Return value:  Size  Location     Type
  8072 ;;		None               void
  8073 ;; Registers used:
  8074 ;;		wreg, status,2, status,0, cstack
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8080 ;;      Params:         0       0       0       0
  8081 ;;      Locals:         0       0       0       0
  8082 ;;      Temps:          0      15       0       0
  8083 ;;      Totals:         0      15       0       0
  8084 ;;Total ram usage:       15 bytes
  8085 ;; Hardware stack levels used:    1
  8086 ;; Hardware stack levels required when called:    1
  8087 ;; This function calls:
  8088 ;;		_WriteTimer0
  8089 ;; This function is called by:
  8090 ;;		Interrupt level 2
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094                           	psect	intcode
  8095  000008                     __pintcode:
  8096                           	opt stack 0
  8097  000008                     _ISR_alta:
  8098                           	opt stack 24
  8099                           
  8100                           ;incstack = 0
  8101  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8102  00000A  CFFA F065          	movff	pclath,??_ISR_alta+1
  8103  00000E  CFFB F066          	movff	pclatu,??_ISR_alta+2
  8104  000012  ED1B  F010         	call	int_func,f	;refresh shadow registers
  8105                           pclatu	equ	0xFFB
  8106                           pclath	equ	0xFFA
  8107                           tblptru	equ	0xFF8
  8108                           tblptrh	equ	0xFF7
  8109                           tblptrl	equ	0xFF6
  8110                           tablat	equ	0xFF5
  8111                           prodh	equ	0xFF4
  8112                           prodl	equ	0xFF3
  8113                           intcon	equ	0xFF2
  8114                           intcon2	equ	0xFF1
  8115                           postinc0	equ	0xFEE
  8116                           fsr0h	equ	0xFEA
  8117                           fsr0l	equ	0xFE9
  8118                           wreg	equ	0xFE8
  8119                           postdec1	equ	0xFE5
  8120                           fsr1h	equ	0xFE2
  8121                           fsr1l	equ	0xFE1
  8122                           bsr	equ	0xFE0
  8123                           indf2	equ	0xFDF
  8124                           postinc2	equ	0xFDE
  8125                           postdec2	equ	0xFDD
  8126                           fsr2h	equ	0xFDA
  8127                           fsr2l	equ	0xFD9
  8128                           status	equ	0xFD8
  8129                           
  8130                           	psect	intcode_body
  8131  002036                     __pintcode_body:
  8132                           	opt stack 24
  8133  002036                     int_func:
  8134                           	opt stack 24
  8135  002036  0006               	pop		; remove dummy address from shadow register refresh
  8136  002038  CFE9 F067          	movff	fsr0l,??_ISR_alta+3
  8137  00203C  CFEA F068          	movff	fsr0h,??_ISR_alta+4
  8138  002040  CFE1 F069          	movff	fsr1l,??_ISR_alta+5
  8139  002044  CFE2 F06A          	movff	fsr1h,??_ISR_alta+6
  8140  002048  CFD9 F06B          	movff	fsr2l,??_ISR_alta+7
  8141  00204C  CFDA F06C          	movff	fsr2h,??_ISR_alta+8
  8142  002050  CFF3 F06D          	movff	prodl,??_ISR_alta+9
  8143  002054  CFF4 F06E          	movff	prodh,??_ISR_alta+10
  8144  002058  CFF6 F06F          	movff	tblptrl,??_ISR_alta+11
  8145  00205C  CFF7 F070          	movff	tblptrh,??_ISR_alta+12
  8146  002060  CFF8 F071          	movff	tblptru,??_ISR_alta+13
  8147  002064  CFF5 F072          	movff	tablat,??_ISR_alta+14
  8148                           
  8149                           ;newmain.c: 73: if (noChange == 1) {
  8150  002068  A047               	btfss	_noChange/(0+8),_noChange& (0+7),c
  8151  00206A  D021               	goto	i2l3678
  8152                           
  8153                           ;newmain.c: 74: PORTCbits.RC0 = ~PORTCbits.RC0;
  8154  00206C  A082               	btfss	3970,0,c	;volatile
  8155  00206E  D002               	goto	i2u412_40
  8156  002070  0E01               	movlw	1
  8157  002072  D001               	goto	i2u412_46
  8158  002074                     i2u412_40:
  8159  002074  0E00               	movlw	0
  8160  002076                     i2u412_46:
  8161  002076  0AFF               	xorlw	255
  8162  002078  0100               	movlb	0	; () banked
  8163  00207A  6F64               	movwf	??_ISR_alta& (0+255),b
  8164  00207C  5082               	movf	3970,w,c	;volatile
  8165  00207E  0100               	movlb	0	; () banked
  8166  002080  1964               	xorwf	??_ISR_alta& (0+255),w,b
  8167  002082  0BFE               	andlw	-2
  8168  002084  1964               	xorwf	??_ISR_alta& (0+255),w,b
  8169  002086  6E82               	movwf	3970,c	;volatile
  8170                           
  8171                           ; BSR set to: 0
  8172                           ;newmain.c: 75: T0CONbits.TMR0ON = 0;
  8173  002088  9ED5               	bcf	4053,7,c	;volatile
  8174                           
  8175                           ; BSR set to: 0
  8176                           ;newmain.c: 76: if (PORTCbits.RC0 == 1) {
  8177  00208A  A082               	btfss	3970,0,c	;volatile
  8178  00208C  D007               	goto	i2l3672
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;newmain.c: 77: WriteTimer0(Ton);
  8182  00208E  C017  F060         	movff	_Ton,WriteTimer0@timer0
  8183  002092  C018  F061         	movff	_Ton+1,WriteTimer0@timer0+1
  8184  002096  EC46  F012         	call	_WriteTimer0	;wreg free
  8185                           
  8186                           ;newmain.c: 78: T0CONbits.TMR0ON = 1;
  8187  00209A  8ED5               	bsf	4053,7,c	;volatile
  8188  00209C                     i2l3672:
  8189                           
  8190                           ;newmain.c: 79: }
  8191                           ;newmain.c: 80: if (PORTCbits.RC0 == 0) {
  8192  00209C  B082               	btfsc	3970,0,c	;volatile
  8193  00209E  D007               	goto	i2l3678
  8194                           
  8195                           ;newmain.c: 81: WriteTimer0(Toff);
  8196  0020A0  C015  F060         	movff	_Toff,WriteTimer0@timer0
  8197  0020A4  C016  F061         	movff	_Toff+1,WriteTimer0@timer0+1
  8198  0020A8  EC46  F012         	call	_WriteTimer0	;wreg free
  8199                           
  8200                           ;newmain.c: 82: T0CONbits.TMR0ON = 1;
  8201  0020AC  8ED5               	bsf	4053,7,c	;volatile
  8202  0020AE                     i2l3678:
  8203                           
  8204                           ;newmain.c: 83: }
  8205                           ;newmain.c: 84: }
  8206                           ;newmain.c: 85: INTCONbits.TMR0IF = 0;
  8207  0020AE  94F2               	bcf	intcon,2,c	;volatile
  8208  0020B0  C072  FFF5         	movff	??_ISR_alta+14,tablat
  8209  0020B4  C071  FFF8         	movff	??_ISR_alta+13,tblptru
  8210  0020B8  C070  FFF7         	movff	??_ISR_alta+12,tblptrh
  8211  0020BC  C06F  FFF6         	movff	??_ISR_alta+11,tblptrl
  8212  0020C0  C06E  FFF4         	movff	??_ISR_alta+10,prodh
  8213  0020C4  C06D  FFF3         	movff	??_ISR_alta+9,prodl
  8214  0020C8  C06C  FFDA         	movff	??_ISR_alta+8,fsr2h
  8215  0020CC  C06B  FFD9         	movff	??_ISR_alta+7,fsr2l
  8216  0020D0  C06A  FFE2         	movff	??_ISR_alta+6,fsr1h
  8217  0020D4  C069  FFE1         	movff	??_ISR_alta+5,fsr1l
  8218  0020D8  C068  FFEA         	movff	??_ISR_alta+4,fsr0h
  8219  0020DC  C067  FFE9         	movff	??_ISR_alta+3,fsr0l
  8220  0020E0  C066  FFFB         	movff	??_ISR_alta+2,pclatu
  8221  0020E4  C065  FFFA         	movff	??_ISR_alta+1,pclath
  8222  0020E8  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8223  0020EA  0011               	retfie		f
  8224  0020EC                     __end_of_ISR_alta:
  8225                           	opt stack 0
  8226                           pclatu	equ	0xFFB
  8227                           pclath	equ	0xFFA
  8228                           tblptru	equ	0xFF8
  8229                           tblptrh	equ	0xFF7
  8230                           tblptrl	equ	0xFF6
  8231                           tablat	equ	0xFF5
  8232                           prodh	equ	0xFF4
  8233                           prodl	equ	0xFF3
  8234                           intcon	equ	0xFF2
  8235                           intcon2	equ	0xFF1
  8236                           postinc0	equ	0xFEE
  8237                           fsr0h	equ	0xFEA
  8238                           fsr0l	equ	0xFE9
  8239                           wreg	equ	0xFE8
  8240                           postdec1	equ	0xFE5
  8241                           fsr1h	equ	0xFE2
  8242                           fsr1l	equ	0xFE1
  8243                           bsr	equ	0xFE0
  8244                           indf2	equ	0xFDF
  8245                           postinc2	equ	0xFDE
  8246                           postdec2	equ	0xFDD
  8247                           fsr2h	equ	0xFDA
  8248                           fsr2l	equ	0xFD9
  8249                           status	equ	0xFD8
  8250                           
  8251 ;; *************** function _WriteTimer0 *****************
  8252 ;; Defined at:
  8253 ;;		line 16 in file "P:\Programmi\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;  timer0          2    0[BANK0 ] unsigned int 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  timer           2    2[BANK0 ] struct Timers
  8258 ;; Return value:  Size  Location     Type
  8259 ;;		None               void
  8260 ;; Registers used:
  8261 ;;		None
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8267 ;;      Params:         0       2       0       0
  8268 ;;      Locals:         0       2       0       0
  8269 ;;      Temps:          0       0       0       0
  8270 ;;      Totals:         0       4       0       0
  8271 ;;Total ram usage:        4 bytes
  8272 ;; Hardware stack levels used:    1
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_ISR_alta
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text25
  8281  00248C                     __ptext25:
  8282                           	opt stack 0
  8283  00248C                     _WriteTimer0:
  8284                           	opt stack 24
  8285                           
  8286                           ;incstack = 0
  8287  00248C  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  8288  002490  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  8289  002494  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  8290  002498  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  8291  00249C  0012               	return		;funcret
  8292  00249E                     __end_of_WriteTimer0:
  8293                           	opt stack 0
  8294  0000                     pclatu	equ	0xFFB
  8295                           pclath	equ	0xFFA
  8296                           tblptru	equ	0xFF8
  8297                           tblptrh	equ	0xFF7
  8298                           tblptrl	equ	0xFF6
  8299                           tablat	equ	0xFF5
  8300                           prodh	equ	0xFF4
  8301                           prodl	equ	0xFF3
  8302                           intcon	equ	0xFF2
  8303                           intcon2	equ	0xFF1
  8304                           postinc0	equ	0xFEE
  8305                           fsr0h	equ	0xFEA
  8306                           fsr0l	equ	0xFE9
  8307                           wreg	equ	0xFE8
  8308                           postdec1	equ	0xFE5
  8309                           fsr1h	equ	0xFE2
  8310                           fsr1l	equ	0xFE1
  8311                           bsr	equ	0xFE0
  8312                           indf2	equ	0xFDF
  8313                           postinc2	equ	0xFDE
  8314                           postdec2	equ	0xFDD
  8315                           fsr2h	equ	0xFDA
  8316                           fsr2l	equ	0xFD9
  8317                           status	equ	0xFD8
  8318                           pclatu	equ	0xFFB
  8319                           pclath	equ	0xFFA
  8320                           tblptru	equ	0xFF8
  8321                           tblptrh	equ	0xFF7
  8322                           tblptrl	equ	0xFF6
  8323                           tablat	equ	0xFF5
  8324                           prodh	equ	0xFF4
  8325                           prodl	equ	0xFF3
  8326                           intcon	equ	0xFF2
  8327                           intcon2	equ	0xFF1
  8328                           postinc0	equ	0xFEE
  8329                           fsr0h	equ	0xFEA
  8330                           fsr0l	equ	0xFE9
  8331                           wreg	equ	0xFE8
  8332                           postdec1	equ	0xFE5
  8333                           fsr1h	equ	0xFE2
  8334                           fsr1l	equ	0xFE1
  8335                           bsr	equ	0xFE0
  8336                           indf2	equ	0xFDF
  8337                           postinc2	equ	0xFDE
  8338                           postdec2	equ	0xFDD
  8339                           fsr2h	equ	0xFDA
  8340                           fsr2l	equ	0xFD9
  8341                           status	equ	0xFD8
  8342                           
  8343                           	psect	param0
  8344  0000                     pclatu	equ	0xFFB
  8345                           pclath	equ	0xFFA
  8346                           tblptru	equ	0xFF8
  8347                           tblptrh	equ	0xFF7
  8348                           tblptrl	equ	0xFF6
  8349                           tablat	equ	0xFF5
  8350                           prodh	equ	0xFF4
  8351                           prodl	equ	0xFF3
  8352                           intcon	equ	0xFF2
  8353                           intcon2	equ	0xFF1
  8354                           postinc0	equ	0xFEE
  8355                           fsr0h	equ	0xFEA
  8356                           fsr0l	equ	0xFE9
  8357                           wreg	equ	0xFE8
  8358                           postdec1	equ	0xFE5
  8359                           fsr1h	equ	0xFE2
  8360                           fsr1l	equ	0xFE1
  8361                           bsr	equ	0xFE0
  8362                           indf2	equ	0xFDF
  8363                           postinc2	equ	0xFDE
  8364                           postdec2	equ	0xFDD
  8365                           fsr2h	equ	0xFDA
  8366                           fsr2l	equ	0xFD9
  8367                           status	equ	0xFD8
  8368                           
  8369                           	psect	temp
  8370  000048                     btemp:
  8371                           	opt stack 0
  8372  000048                     	ds	1
  8373  0000                     int$flags	set	btemp
  8374                           pclatu	equ	0xFFB
  8375                           pclath	equ	0xFFA
  8376                           tblptru	equ	0xFF8
  8377                           tblptrh	equ	0xFF7
  8378                           tblptrl	equ	0xFF6
  8379                           tablat	equ	0xFF5
  8380                           prodh	equ	0xFF4
  8381                           prodl	equ	0xFF3
  8382                           intcon	equ	0xFF2
  8383                           intcon2	equ	0xFF1
  8384                           postinc0	equ	0xFEE
  8385                           fsr0h	equ	0xFEA
  8386                           fsr0l	equ	0xFE9
  8387                           wreg	equ	0xFE8
  8388                           postdec1	equ	0xFE5
  8389                           fsr1h	equ	0xFE2
  8390                           fsr1l	equ	0xFE1
  8391                           bsr	equ	0xFE0
  8392                           indf2	equ	0xFDF
  8393                           postinc2	equ	0xFDE
  8394                           postdec2	equ	0xFDD
  8395                           fsr2h	equ	0xFDA
  8396                           fsr2l	equ	0xFD9
  8397                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      71
    BANK0           160     49      94
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->i1___lwdiv
    i1___lwdiv->___wmul

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _calibrazione->___lwdiv
    ___lldiv->___lmul

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->_WriteTimer0

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9613
                                             45 BANK0      4     4      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___lldiv
                             ___lmul
                       _calibrazione
            _configurazione_iniziale
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    2419
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2395
                                             19 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    6216
                      _CANInitialize
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             19 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             33 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibrazione                                         0     0      0     366
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     366
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     322
                                             19 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     290
                                             31 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           17    17      0    1790
                                             13 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
                             ___wmul
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (5) i1___lwdiv                                            7     3      4     214
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     415
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            15    15      0     253
                                              4 BANK0     15    15      0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     253
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _calibrazione
     _BusyADC
     _ConvertADC
     _ReadADC
     ___lwdiv
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenADC
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   ___wmul
   i1___lwdiv
     ___wmul (ARG)

 _ISR_alta (ROOT)
   _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     31      5E       4       58.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1E      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A5       9        0.0%
DATA                 0      0      A5      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Jan 20 14:40:00 2016

              ??_CANisTXwarningON 0073              __end_of_CANSetFilter 0C5C  
                              _id 009D                                bsr 000FE0  
             ___wmul@multiplicand 0024                       __CFG_BORV$3 000000  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000                               l400 1334  
                             l401 1338                               l402 1344  
                             l500 09C8                               l501 09CC  
                             l510 0AD8                               l502 09D8  
                             l430 1AEE                               l511 0AE4  
                             l431 1AF2                               l520 0BF0  
                             l512 0AE8                               l432 1AFE  
                             l521 0BF4                               l513 0AF4  
                             l505 0AB4                               l441 1C06  
                             l433 1B02                               l361 0EE0  
                             l522 0C00                               l506 0AB8  
                             l442 1C0A                               l434 1B0E  
                             l362 0C72                               l523 0C04  
                             l507 0AC4                               l443 1C16  
                             l435 1B12                               l371 0E2C  
                             l363 0C76                               l524 0C10  
                             l516 0BD0                               l508 0AC8  
                             l444 1C1A                               l436 1B1E  
                             l356 1D4E                               l380 0F82  
                             l372 0E30                               l364 0D6E  
                             l517 0BD4                               l509 0AD4  
                             l461 0646                               l445 1C26  
                             l437 1B22                               l357 1D58  
                             l381 0F8C                               l373 0E3C  
                             l365 0CFE                               l518 0BE0  
                             l462 064A                               l446 1C2A  
                             l438 1B2E                               l382 0F96  
                             l366 0D08                               l519 0BE4  
                             l463 0656                               l447 1C36  
                             l391 117A                               l383 0FA0  
                             l367 0D12                               l480 07A0  
                             l472 0760                               l464 065A  
                             l448 1C3A                               l392 117E  
                             l376 1164                               l368 0D1C  
                             l473 0764                               l465 0666  
                             l449 1C46                               l393 1276  
                             l377 0EF6                               l490 08B0  
                             l474 0770                               l466 066A  
                             l554 2448                               l394 1206  
                             l386 10B0                               l378 0EFA  
                             l491 08BC                               l483 087C  
                             l475 0774                               l467 0676  
                             l395 1210                               l387 10B4  
                             l379 0FF2                               l484 0880  
                             l476 0780                               l468 067A  
                             l396 121A                               l388 10C0  
                             l644 1E5C                               l485 088C  
                             l477 0784                               l469 0686  
                             l397 1224                               l494 0998  
                             l486 0890                               l478 0790  
                             l495 099C                               l487 089C  
                             l479 0794                               l496 09A8  
                             l488 08A0                               l497 09AC  
                             l489 08AC                               l498 09B8  
                             l499 09BC                               l693 21F4  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _Ton 0017              __size_of_WriteTimer0 0012  
                             _msg 00A7                               wreg 000FE8  
           _currentSteering_array 0091                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              l1111 2266  
                            l1058 2024                              l3100 10C4  
                            l3024 0E40                              l3018 0E20  
                            l3150 122E                              l3240 2228  
                            l2504 2456                              l2522 19AC  
                            l3170 1328                              l3074 0FAA  
                            l3236 2216                              l2620 0214  
                            l3502 2282                              l3238 2222  
                            l2710 05B4                              l3094 10A4  
                            l3520 1FBE                              l3248 2258  
                            l3176 1348                              l3506 22A8  
                            l2570 1B78                              l2538 1A62  
                            l3516 1FA8                              l2812 0906  
                            l2564 1B32                              l3518 1FB8  
                            l2806 08C0                              l2638 02CC  
                            l3528 2012                              l3480 2384  
                            l2840 09DC                              l2744 06D0  
                            l2656 0386                              l2738 068A  
                            l2674 0440                              l2908 0C14  
                            l2772 07A4                              l2692 04FA  
                            l2596 1C4A                              l3492 2400  
                            l2846 0A22                              l2880 0B3E  
                            l2960 1DA8                              l2952 1D46  
                            l2874 0AF8                              l2778 07EA  
                            l2954 1D5C                              l2958 1D64  
                            l2998 0D26                              u2105 1988  
                            u2130 19DE                              u3020 0C34  
                            u2300 1C6A                              u2220 1B52  
                            _LATA 000F89                              _LATB 000F8A  
                            u2135 19D2                              _LATC 000F8B  
                            _LATD 000F8C                              u3025 0C28  
                            u2305 1C5E                              u2225 1B46  
                            u2145 1A3E                              _LATE 000F8D  
                            u2410 0302                              u2330 0190  
                            u2090 1928                              u3150 0D46  
                            u2415 02F6                              u2335 0184  
                            u2095 191C                              u3160 0D92  
                            u2505 04D6                              u2425 0362  
                            u2345 01F0                              u3305 1076  
                            u2530 0530                              u2450 03BC  
                            u2370 0248                              u3410 124E  
                            u3155 0D3A                              u2700 07C4  
                            u2620 06AA                              u3420 129A  
                            u3165 0D86                              u2535 0524  
                            u2455 03B0                              u2375 023C  
                            u3415 1242                              u3175 0DF2  
                            u3280 0FCA                              u2705 07B8  
                            u2625 069E                              u2545 0590  
                            u2465 041C                              u2385 02A8  
                            u3425 128E                              u2490 0476  
                            u3290 1016                              u3435 12FA  
                            u3285 0FBE                              u2495 046A  
                            u3295 100A                              u3490 24A6  
                            u2940 0B18                              u2860 09FC  
                            u2780 08E0                              u2945 0B0C  
                            u2865 09F0                              u2785 08D4  
                            u3780 24B2                              u3790 24BE  
             __size_of_CANSetMask 039E                              _Toff 0015  
                            _main 1E58                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 0048                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0152                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000000  
                 __end_of_BusyADC 24AA                   __end_of_ReadADC 248C  
                _CANOperationMode 244E                   __end_of_OpenADC 21F8  
      __size_of_CANreceiveMessage 050C                             ?_main 0022  
                 __end_of___lldiv 2036                             _T0CON 000FD5  
                           _T3CON 000FB1                   __end_of___lwdiv 2270  
                           i1l408 1680                             i1l641 010A  
                           i1l559 2476                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _TMR3H 000FB3  
                           _TMR3L 000FB2                 _CANisRxReady$2912 0022  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
             ___lmul@multiplicand 0077                __size_of_ISR_bassa 013A  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                CANInitialize@flags 0085  
                __end_of_ISR_alta 20EC                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _timer 00A1  
                      _ConvertADC 24CA                    __pbitbssCOMRAM 0238  
            __end_of_CANisRxReady 247A                             tablat 000FF5  
            __end_of_CANisTxReady 244E                             status 000FD8  
              __size_ofi1___lwdiv 0052                    __CFG_PBADEN$ON 000000  
                 __initialization 2338                      __end_of_main 1F7A  
                          ??_main 008D                     __activetblptr 000002  
               _CANisTxReady$2910 0073                     _counter_array 0001  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _CANCON 000F6F  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
           __size_of_calibrazione 0046                   __CFG_BBSIZ$1024 000000  
                          i1l1111 232E                            i1l3320 1648  
                          i1l3312 160C                            i1l3304 15D0  
                          i1l3322 167A                            i1l3316 162A  
                          i1l3308 15EE                            i1l3370 186A  
                          i1l3540 2304                            i1l3604 00EC  
                          i1l3382 18BE                            i1l3374 1886  
                          i1l3366 184E                            i1l3358 17E0  
                          i1l3550 2324                            i1l3542 2308  
                          i1l3384 18F0                            i1l3296 1560  
                          i1l3608 00F0                            i1l3378 18A2  
                          i1l3538 22FC                            i1l3594 00A0  
                          i1l3586 0066                            i2l3672 209C  
                          i2l3678 20AE                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F56                            _RXB0D5 000F6B  
                          _RXB1D1 000F57                            _RXB0D6 000F6C  
                          _RXB1D2 000F58                            _RXB0D7 000F6D  
                          _RXB1D3 000F59                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _TXB1D2 000F38  
                          _TXB0D6 000F4C                            _TXB1D3 000F39  
                          _TXB0D7 000F4D                            _TXB2D0 000F26  
                          _TXB1D4 000F3A                            _TXB2D1 000F27  
                          _TXB1D5 000F3B                            _TXB2D2 000F28  
                          _TXB1D6 000F3C                            _TXB2D3 000F29  
                          _TXB1D7 000F3D                            _TXB2D4 000F2A  
                          _TXB2D5 000F2B                            _TXB2D6 000F2C  
                          _TXB2D7 000F2D                CANsendMessage@data 0077  
              CANsendMessage@tamp 007F                         ??_BusyADC 0073  
                       ??_ReadADC 0075             __size_of_CANSetFilter 0B06  
                       ??_OpenADC 0075                    __CFG_XINST$OFF 000000  
               __end_of_ISR_bassa 0152                            ___lmul 2270  
                          ___wmul 2404                    __CFG_STVREN$ON 000000  
                       ??___lldiv 0087                         ??___lwdiv 0077  
                    ??_CANSetMask 0078                            _errore 001F  
                          clear_0 233E                            clear_1 234C  
        ?_configurazione_iniziale 0022                   __CFG_BOREN$BOHW 000000  
                    _calibrazione 2380                 __end_ofi1___lwdiv 2338  
                    __pdataCOMRAM 0040                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                 _currentSteering 0044                      _CANSetFilter 0156  
                     ?_ConvertADC 0022                        __accesstop 0060  
         __end_of__initialization 2372                __end_of_CANSetMask 1C92  
                   ___rparam_used 000000         __size_of_CANisRXwarningON 000C  
                  __pcstackCOMRAM 0022                         ?_ISR_alta 0022  
           CANSetFilter@numBuffer 007C         __size_of_CANisTXwarningON 000C  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 0024  
        __end_of_CANOperationMode 2464                        __pbssBANK0 0091  
                      _data_array 00B6           __size_of_CANsendMessage 078C  
                         ?___lmul 0073                           ?___wmul 0022  
                      ??_ISR_alta 0064                __size_of_send_data 003E  
                WriteTimer0@timer 0062                     ??_WriteTimer0 0062  
                  ___lmul@product 007B                      _CANisRxReady 2464  
             __size_of_ConvertADC 0004                           _CANSTAT 000F6E  
                    _CANisTxReady 242A                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01C6                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 007A                           _BusyADC 249E  
                         _ReadADC 247A                        _correzione 001D  
                       _ADCResult 00A5                           _OpenADC 217C  
                         __Hparam 0000                           __Lparam 0000  
                 __size_of___lmul 0076                           ___lldiv 1F7A  
                 __size_of___wmul 0026                           ___lwdiv 21F8  
            CANInitialize@propSeg 008A                           __pcinit 2338  
                         __ramtop 0300                           __ptext0 1E58  
                         __ptext1 23C6                           __ptext2 0C5C  
                         __ptext3 242A                           __ptext4 20EC  
                         __ptext5 217C                           __ptext6 1C92  
                         __ptext7 18F4                           __ptext8 0156  
                         __ptext9 244E                         _T0CONbits 000FD5  
                         _counter 0009                 i1___lwdiv@divisor 002A  
               i1___lwdiv@counter 002E                        _duty_cycle 0099  
             __end_of_WriteTimer0 249E            CANreceiveMessage@error 002C  
                         _potenza 0042                    OpenADC@config2 0073  
                  __pintcode_body 2036              end_of_initialization 2372  
               __end_of_send_data 2404                     __Lmediumconst 0000  
                         int_func 2036                  _CANisRXwarningON 24B6  
                   _CANInitialize 1C92                   ___lldiv@divisor 0083  
                 ___lldiv@counter 008B                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                         _ISR_bassa 0018  
                       _PORTAbits 000F80                    CANSetMask@mask 0073  
                       _PORTCbits 000F82                    CANSetMask@tamp 007D  
                  CANSetMask@type 0077                  _CANisTXwarningON 24AA  
                       i1___lwdiv 22E6                      ??_ConvertADC 0073  
__size_of_configurazione_iniziale 0090               _previousTimeCounter 000D  
         _clock_counter_reference 001B                    _CANsendMessage 0C5C  
                CANInitialize@BRP 0084                  CANInitialize@SJW 0083  
                  ?_CANInitialize 0081                    __end_of___lmul 22E6  
                      ?_ISR_bassa 0022                    __end_of___wmul 242A  
                   __pidataCOMRAM 24C2                 __size_of_ISR_alta 20E4  
                     _WriteTimer0 248C                __end_of_ConvertADC 24CE  
             start_initialization 2338                        ?i1___lwdiv 0028  
             CANSetMask@numBuffer 007C            __end_of_CANsendMessage 13E8  
               ?_CANOperationMode 0022                ??_CANOperationMode 0073  
      CANInitialize@FilterConfig1 008B        CANInitialize@FilterConfig2 008C  
                        ??___lmul 007B                          ??___wmul 0026  
                     _calibration 0019                  __CFG_LPT1OSC$OFF 000000  
          CANInitialize@phaseSeg1 0081            CANInitialize@phaseSeg2 0082  
                     __pbssCOMRAM 0001                     __pcstackBANK0 0060  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
                 ?_CANsendMessage 0073                   ??_CANInitialize 0086  
                        ?_BusyADC 0022                          ?_ReadADC 0073  
              CANSetFilter@filter 0073                 OpenADC@portconfig 0074  
                        ?_OpenADC 0073                    _theorySteering 0021  
                ___lwdiv@dividend 0073                         __pintcode 0008  
                        ?___lldiv 007F                          ?___lwdiv 0073  
                     ??_ISR_bassa 002F                       __pintcodelo 0018  
               WriteTimer0@timer0 0060          __end_of_CANisRXwarningON 24C2  
                     _COMSTATbits 000F74                  ___lwdiv@quotient 0077  
         _configurazione_iniziale 20EC                       ??i1___lwdiv 002C  
           CANreceiveMessage@tamp 002D                    ___wmul@product 0026  
                   OpenADC@config 0077                          _IPR2bits 000FA2  
    _delay_quartz_frequency_value 0045                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE2bits 000FA0  
                       _send_data 23C6                          _PIE3bits 000FA3  
        __end_of_CANisTXwarningON 24B6                          i1u403_20 009E  
                        i1u360_25 14E4                          i1u371_25 1766  
                        i1u357_20 14A0                          i1u357_26 14A2  
                        i1u358_20 14CE                          i1u366_25 1654  
                        i1u358_26 14D0                          i1u368_20 1728  
                        i1u368_26 172A                          i1u369_20 1752  
                        i1u377_25 18CA                          i1u369_26 1754  
                        i2u412_40 2074                          i2u412_46 2076  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                    _pastSteering 0046                          _RXF2EIDL 000F0B  
                        _RXF3EIDH 000F0E                          _RXF3EIDL 000F0F  
                        _RXF4EIDH 000F12                          _RXF4EIDL 000F13  
                        _RXF5EIDH 000F16                          _RXF5EIDL 000F17  
                        _RXF0SIDH 000F00                          _RXF0SIDL 000F01  
                        _TXB0EIDH 000F43                          _RXF1SIDH 000F04  
                        _TXB0EIDL 000F44                          _RXF1SIDL 000F05  
                        _TXB1EIDH 000F33                          _RXF2SIDH 000F08  
                        _TXB1EIDL 000F34                          _RXF2SIDL 000F09  
                        _ISR_alta 0008                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _TXERRCNT 000F76                        _ADCON0bits 000FC2  
               ___wmul@multiplier 0022                     ?_calibrazione 0022  
                   ?_CANSetFilter 0073                 ___lmul@multiplier 0073  
                     _INTCON2bits 000FF1                         copy_data0 2366  
                      _CANCONbits 000F6F                          __Hparam0 0000  
                      ?_send_data 0022                  __size_of_BusyADC 000C  
                __size_of_ReadADC 0012                          __Lparam0 0000  
                    _RXB0SIDLbits 000F62                  __size_of_OpenADC 007C  
                    _RXB1SIDLbits 000F52                        _CANSetMask 18F4  
                __size_of___lldiv 00BC                  __size_of___lwdiv 0078  
                    ?_WriteTimer0 0060                    ??_calibrazione 007A  
       ??_configurazione_iniziale 008D                      _RXF0SIDLbits 000F01  
                 ___lwdiv@divisor 0075                      _RXF1SIDLbits 000F05  
                 ___lwdiv@counter 0079                    ??_CANSetFilter 0078  
                        __ptext10 2380                          __ptext11 21F8  
                        __ptext20 22E6                          __ptext12 247A  
                        __ptext21 2404                          __ptext13 24CA  
                        __ptext22 13E8                          __ptext14 249E  
                        __ptext23 2464                          __ptext15 2270  
                        __ptext16 1F7A                          __ptext25 248C  
                        __ptext17 24AA                          __ptext18 24B6  
                    _RXF2SIDLbits 000F09                          _noChange 0238  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
              i1___lwdiv@dividend 0028                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 0079                      _remote_frame 0239  
                   __size_of_main 0122                          _limiteDx 0040  
            CANreceiveMessage@msg 0022                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 0048         __size_of_CANOperationMode 0016  
                   ?_CANisRxReady 0022                     ?_CANisTxReady 0022  
                     _RXB0DLCbits 000F65                i1___lwdiv@quotient 002C  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 13E8                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                  ??_CANsendMessage 007B  
              ?_CANreceiveMessage 0022          CANsendMessage@identifier 0073  
                        intlevel1 0000                          intlevel2 0000  
                CANSetFilter@tamp 007D                  CANSetFilter@type 0077  
             ??_CANreceiveMessage 0024                  ___lldiv@dividend 007F  
                     _TXB0DLCbits 000F45                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       ??_send_data 0083  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 217C  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 0011              CANOperationMode@mode 0073  
                  ??_CANisRxReady 0022                       ?_CANSetMask 0073  
                  ??_CANisTxReady 0073         __end_of_CANreceiveMessage 18F4  
                ___lldiv@quotient 0087                 ?_CANisRXwarningON 0022  
              ??_CANisRXwarningON 0073              __end_of_calibrazione 23C6  
           __end_of_CANInitialize 1E58                 ?_CANisTXwarningON 0022  
