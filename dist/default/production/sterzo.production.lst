

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jun 04 15:28:00 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	param0,global,class=BANK0,space=1,delta=1
    47  0000                     
    48                           	psect	idataCOMRAM
    49  002DD6                     __pidataCOMRAM:
    50                           	opt stack 0
    51                           
    52                           ;initializer for _currentSteering
    53  002DD6  005A               	dw	90
    54                           
    55                           ;initializer for _limiteDx
    56  002DD8  0078               	dw	120
    57                           
    58                           	psect	idataBANK0
    59  002DDE                     __pidataBANK0:
    60                           	opt stack 0
    61                           
    62                           ;initializer for _delay_quartz_frequency_value
    63  002DDE  10                 	db	16
    64  0000                     _RXB1CON	set	3920
    65  0000                     _RXB1CONbits	set	3920
    66  0000                     _RXB1D0	set	3926
    67  0000                     _RXB1D1	set	3927
    68  0000                     _RXB1D2	set	3928
    69  0000                     _RXB1D3	set	3929
    70  0000                     _RXB1D4	set	3930
    71  0000                     _RXB1D5	set	3931
    72  0000                     _RXB1D6	set	3932
    73  0000                     _RXB1D7	set	3933
    74  0000                     _RXB1DLC	set	3925
    75  0000                     _RXB1DLCbits	set	3925
    76  0000                     _RXB1EIDH	set	3923
    77  0000                     _RXB1EIDL	set	3924
    78  0000                     _RXB1SIDH	set	3921
    79  0000                     _RXB1SIDL	set	3922
    80  0000                     _RXB1SIDLbits	set	3922
    81  0000                     _RXF0EIDH	set	3842
    82  0000                     _RXF0EIDL	set	3843
    83  0000                     _RXF0SIDH	set	3840
    84  0000                     _RXF0SIDL	set	3841
    85  0000                     _RXF0SIDLbits	set	3841
    86  0000                     _RXF1EIDH	set	3846
    87  0000                     _RXF1EIDL	set	3847
    88  0000                     _RXF1SIDH	set	3844
    89  0000                     _RXF1SIDL	set	3845
    90  0000                     _RXF1SIDLbits	set	3845
    91  0000                     _RXF2EIDH	set	3850
    92  0000                     _RXF2EIDL	set	3851
    93  0000                     _RXF2SIDH	set	3848
    94  0000                     _RXF2SIDL	set	3849
    95  0000                     _RXF2SIDLbits	set	3849
    96  0000                     _RXF3EIDH	set	3854
    97  0000                     _RXF3EIDL	set	3855
    98  0000                     _RXF3SIDH	set	3852
    99  0000                     _RXF3SIDL	set	3853
   100  0000                     _RXF3SIDLbits	set	3853
   101  0000                     _RXF4EIDH	set	3858
   102  0000                     _RXF4EIDL	set	3859
   103  0000                     _RXF4SIDH	set	3856
   104  0000                     _RXF4SIDL	set	3857
   105  0000                     _RXF4SIDLbits	set	3857
   106  0000                     _RXF5EIDH	set	3862
   107  0000                     _RXF5EIDL	set	3863
   108  0000                     _RXF5SIDH	set	3860
   109  0000                     _RXF5SIDL	set	3861
   110  0000                     _RXF5SIDLbits	set	3861
   111  0000                     _RXM0EIDH	set	3866
   112  0000                     _RXM0EIDL	set	3867
   113  0000                     _RXM0SIDH	set	3864
   114  0000                     _RXM0SIDL	set	3865
   115  0000                     _RXM0SIDLbits	set	3865
   116  0000                     _RXM1EIDH	set	3870
   117  0000                     _RXM1EIDL	set	3871
   118  0000                     _RXM1SIDH	set	3868
   119  0000                     _RXM1SIDL	set	3869
   120  0000                     _RXM1SIDLbits	set	3869
   121  0000                     _TXB0CONbits	set	3904
   122  0000                     _TXB0D0	set	3910
   123  0000                     _TXB0D1	set	3911
   124  0000                     _TXB0D2	set	3912
   125  0000                     _TXB0D3	set	3913
   126  0000                     _TXB0D4	set	3914
   127  0000                     _TXB0D5	set	3915
   128  0000                     _TXB0D6	set	3916
   129  0000                     _TXB0D7	set	3917
   130  0000                     _TXB0DLC	set	3909
   131  0000                     _TXB0DLCbits	set	3909
   132  0000                     _TXB0EIDH	set	3907
   133  0000                     _TXB0EIDL	set	3908
   134  0000                     _TXB0SIDH	set	3905
   135  0000                     _TXB0SIDL	set	3906
   136  0000                     _TXB0SIDLbits	set	3906
   137  0000                     _TXB1CONbits	set	3888
   138  0000                     _TXB1D0	set	3894
   139  0000                     _TXB1D1	set	3895
   140  0000                     _TXB1D2	set	3896
   141  0000                     _TXB1D3	set	3897
   142  0000                     _TXB1D4	set	3898
   143  0000                     _TXB1D5	set	3899
   144  0000                     _TXB1D6	set	3900
   145  0000                     _TXB1D7	set	3901
   146  0000                     _TXB1DLC	set	3893
   147  0000                     _TXB1DLCbits	set	3893
   148  0000                     _TXB1EIDH	set	3891
   149  0000                     _TXB1EIDL	set	3892
   150  0000                     _TXB1SIDH	set	3889
   151  0000                     _TXB1SIDL	set	3890
   152  0000                     _TXB1SIDLbits	set	3890
   153  0000                     _TXB2CONbits	set	3872
   154  0000                     _TXB2D0	set	3878
   155  0000                     _TXB2D1	set	3879
   156  0000                     _TXB2D2	set	3880
   157  0000                     _TXB2D3	set	3881
   158  0000                     _TXB2D4	set	3882
   159  0000                     _TXB2D5	set	3883
   160  0000                     _TXB2D6	set	3884
   161  0000                     _TXB2D7	set	3885
   162  0000                     _TXB2DLC	set	3877
   163  0000                     _TXB2DLCbits	set	3877
   164  0000                     _TXB2EIDH	set	3875
   165  0000                     _TXB2EIDL	set	3876
   166  0000                     _TXB2SIDH	set	3873
   167  0000                     _TXB2SIDL	set	3874
   168  0000                     _TXB2SIDLbits	set	3874
   169  0000                     _ADCON0	set	4034
   170  0000                     _ADCON0bits	set	4034
   171  0000                     _ADCON1	set	4033
   172  0000                     _ADCON2	set	4032
   173  0000                     _ADRESH	set	4036
   174  0000                     _ADRESL	set	4035
   175  0000                     _BRGCON1	set	3952
   176  0000                     _BRGCON2	set	3953
   177  0000                     _BRGCON2bits	set	3953
   178  0000                     _BRGCON3	set	3954
   179  0000                     _BRGCON3bits	set	3954
   180  0000                     _CANCON	set	3951
   181  0000                     _CANCONbits	set	3951
   182  0000                     _CANSTAT	set	3950
   183  0000                     _COMSTATbits	set	3956
   184  0000                     _INTCON2bits	set	4081
   185  0000                     _INTCONbits	set	4082
   186  0000                     _IPR3bits	set	4005
   187  0000                     _LATA	set	3977
   188  0000                     _LATB	set	3978
   189  0000                     _LATC	set	3979
   190  0000                     _LATD	set	3980
   191  0000                     _LATE	set	3981
   192  0000                     _PIE1bits	set	3997
   193  0000                     _PIE3bits	set	4003
   194  0000                     _PIR1bits	set	3998
   195  0000                     _PIR3bits	set	4004
   196  0000                     _PORTAbits	set	3968
   197  0000                     _PORTCbits	set	3970
   198  0000                     _RCONbits	set	4048
   199  0000                     _RXB0CON	set	3936
   200  0000                     _RXB0CONbits	set	3936
   201  0000                     _RXB0D0	set	3942
   202  0000                     _RXB0D1	set	3943
   203  0000                     _RXB0D2	set	3944
   204  0000                     _RXB0D3	set	3945
   205  0000                     _RXB0D4	set	3946
   206  0000                     _RXB0D5	set	3947
   207  0000                     _RXB0D6	set	3948
   208  0000                     _RXB0D7	set	3949
   209  0000                     _RXB0DLC	set	3941
   210  0000                     _RXB0DLCbits	set	3941
   211  0000                     _RXB0EIDH	set	3939
   212  0000                     _RXB0EIDL	set	3940
   213  0000                     _RXB0SIDH	set	3937
   214  0000                     _RXB0SIDL	set	3938
   215  0000                     _RXB0SIDLbits	set	3938
   216  0000                     _RXERRCNT	set	3957
   217  0000                     _T0CON	set	4053
   218  0000                     _T0CONbits	set	4053
   219  0000                     _TMR0H	set	4055
   220  0000                     _TMR0L	set	4054
   221  0000                     _TRISA	set	3986
   222  0000                     _TRISB	set	3987
   223  0000                     _TRISC	set	3988
   224  0000                     _TRISD	set	3989
   225  0000                     _TRISE	set	3990
   226  0000                     _TXERRCNT	set	3958
   227                           
   228                           ; #config settings
   229  0000                     
   230                           	psect	cinit
   231  002BFE                     __pcinit:
   232                           	opt stack 0
   233  002BFE                     start_initialization:
   234                           	opt stack 0
   235  002BFE                     __initialization:
   236                           	opt stack 0
   237                           
   238                           ; Clear objects allocated to BANK0 (18 bytes)
   239  002BFE  EE00  F090         	lfsr	0,__pbssBANK0
   240  002C02  0E12               	movlw	18
   241  002C04                     clear_0:
   242  002C04  6AEE               	clrf	postinc0,c
   243  002C06  06E8               	decf	wreg,f,c
   244  002C08  E1FD               	bnz	clear_0
   245                           
   246                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   247  002C0A  6A47               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   248                           
   249                           ; Clear objects allocated to COMRAM (30 bytes)
   250  002C0C  EE00  F025         	lfsr	0,__pbssCOMRAM
   251  002C10  0E1E               	movlw	30
   252  002C12                     clear_1:
   253  002C12  6AEE               	clrf	postinc0,c
   254  002C14  06E8               	decf	wreg,f,c
   255  002C16  E1FD               	bnz	clear_1
   256                           
   257                           ; Initialize objects allocated to BANK0 (1 bytes)
   258                           ; load TBLPTR registers with __pidataBANK0
   259  002C18  0EDE               	movlw	low __pidataBANK0
   260  002C1A  6EF6               	movwf	tblptrl,c
   261  002C1C  0E2D               	movlw	high __pidataBANK0
   262  002C1E  6EF7               	movwf	tblptrh,c
   263  002C20  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   264  002C22  6EF8               	movwf	tblptru,c
   265  002C24  0009               	tblrd		*+	;fetch initializer
   266  002C26  CFF5 F0A2          	movff	tablat,__pdataBANK0
   267                           
   268                           ; Initialize objects allocated to COMRAM (4 bytes)
   269                           ; load TBLPTR registers with __pidataCOMRAM
   270  002C2A  0ED6               	movlw	low __pidataCOMRAM
   271  002C2C  6EF6               	movwf	tblptrl,c
   272  002C2E  0E2D               	movlw	high __pidataCOMRAM
   273  002C30  6EF7               	movwf	tblptrh,c
   274  002C32  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   275  002C34  6EF8               	movwf	tblptru,c
   276  002C36  EE00  F043         	lfsr	0,__pdataCOMRAM
   277  002C3A  EE10 F004          	lfsr	1,4
   278  002C3E                     copy_data0:
   279  002C3E  0009               	tblrd		*+
   280  002C40  CFF5 FFEE          	movff	tablat,postinc0
   281  002C44  50E5               	movf	postdec1,w,c
   282  002C46  50E1               	movf	fsr1l,w,c
   283  002C48  E1FA               	bnz	copy_data0
   284  002C4A                     end_of_initialization:
   285                           	opt stack 0
   286  002C4A                     __end_of__initialization:
   287                           	opt stack 0
   288  002C4A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   289  002C4C  6EF8               	movwf	tblptru,c
   290  002C4E  0100               	movlb	0
   291  002C50  EFE6  F012         	goto	_main	;jump to C main() function
   292                           tblptru	equ	0xFF8
   293                           tblptrh	equ	0xFF7
   294                           tblptrl	equ	0xFF6
   295                           tablat	equ	0xFF5
   296                           postinc0	equ	0xFEE
   297                           wreg	equ	0xFE8
   298                           postdec1	equ	0xFE5
   299                           fsr1l	equ	0xFE1
   300                           
   301                           	psect	bitbssCOMRAM
   302  000238                     __pbitbssCOMRAM:
   303                           	opt stack 0
   304  000238                     _noChange:
   305                           	opt stack 0
   306  000238                     	ds	1
   307  000239                     _remote_frame:
   308                           	opt stack 0
   309  000239                     	ds	1
   310                           tblptru	equ	0xFF8
   311                           tblptrh	equ	0xFF7
   312                           tblptrl	equ	0xFF6
   313                           tablat	equ	0xFF5
   314                           postinc0	equ	0xFEE
   315                           wreg	equ	0xFE8
   316                           postdec1	equ	0xFE5
   317                           fsr1l	equ	0xFE1
   318                           
   319                           	psect	bssCOMRAM
   320  000025                     __pbssCOMRAM:
   321                           	opt stack 0
   322  000025                     _Toff:
   323                           	opt stack 0
   324  000025                     	ds	2
   325  000027                     _Ton:
   326                           	opt stack 0
   327  000027                     	ds	2
   328  000029                     _calibration:
   329                           	opt stack 0
   330  000029                     	ds	2
   331  00002B                     _theorySteering:
   332                           	opt stack 0
   333  00002B                     	ds	1
   334  00002C                     _msg:
   335                           	opt stack 0
   336  00002C                     	ds	15
   337  00003B                     _data_array:
   338                           	opt stack 0
   339  00003B                     	ds	8
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           tblptrl	equ	0xFF6
   343                           tablat	equ	0xFF5
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           postdec1	equ	0xFE5
   347                           fsr1l	equ	0xFE1
   348                           
   349                           	psect	dataCOMRAM
   350  000043                     __pdataCOMRAM:
   351                           	opt stack 0
   352  000043                     _currentSteering:
   353                           	opt stack 0
   354  000043                     	ds	2
   355  000045                     _limiteDx:
   356                           	opt stack 0
   357  000045                     	ds	2
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           postdec1	equ	0xFE5
   365                           fsr1l	equ	0xFE1
   366                           
   367                           	psect	bssBANK0
   368  000090                     __pbssBANK0:
   369                           	opt stack 0
   370  000090                     _ADCResult:
   371                           	opt stack 0
   372  000090                     	ds	4
   373  000094                     _duty_cycle:
   374                           	opt stack 0
   375  000094                     	ds	4
   376  000098                     _id:
   377                           	opt stack 0
   378  000098                     	ds	4
   379  00009C                     _timer:
   380                           	opt stack 0
   381  00009C                     	ds	4
   382  0000A0                     _clock_counter_reference:
   383                           	opt stack 0
   384  0000A0                     	ds	2
   385                           tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           postinc0	equ	0xFEE
   390                           wreg	equ	0xFE8
   391                           postdec1	equ	0xFE5
   392                           fsr1l	equ	0xFE1
   393                           
   394                           	psect	dataBANK0
   395  0000A2                     __pdataBANK0:
   396                           	opt stack 0
   397  0000A2                     _delay_quartz_frequency_value:
   398                           	opt stack 0
   399  0000A2                     	ds	1
   400                           tblptru	equ	0xFF8
   401                           tblptrh	equ	0xFF7
   402                           tblptrl	equ	0xFF6
   403                           tablat	equ	0xFF5
   404                           postinc0	equ	0xFEE
   405                           wreg	equ	0xFE8
   406                           postdec1	equ	0xFE5
   407                           fsr1l	equ	0xFE1
   408                           
   409                           	psect	cstackBANK0
   410  000060                     __pcstackBANK0:
   411                           	opt stack 0
   412  000060                     WriteTimer0@timer0:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x0
   416  000060                     	ds	2
   417  000062                     WriteTimer0@timer:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x2
   421  000062                     	ds	2
   422  000064                     ??_ISR_alta:
   423                           
   424                           ; 0 bytes @ 0x4
   425  000064                     	ds	14
   426  000072                     ?_ReadADC:
   427                           	opt stack 0
   428  000072                     ?___wmul:
   429                           	opt stack 0
   430  000072                     ?___lmul:
   431                           	opt stack 0
   432  000072                     ?___aldiv:
   433                           	opt stack 0
   434  000072                     CANOperationMode@mode:
   435                           	opt stack 0
   436  000072                     _CANisTxReady$2823:
   437                           	opt stack 0
   438  000072                     OpenADC@config2:
   439                           	opt stack 0
   440  000072                     ___wmul@multiplier:
   441                           	opt stack 0
   442  000072                     CANsendMessage@identifier:
   443                           	opt stack 0
   444  000072                     CANSetMask@mask:
   445                           	opt stack 0
   446  000072                     CANSetFilter@filter:
   447                           	opt stack 0
   448  000072                     ___lmul@multiplier:
   449                           	opt stack 0
   450  000072                     ___aldiv@dividend:
   451                           	opt stack 0
   452                           
   453                           ; 4 bytes @ 0x12
   454  000072                     	ds	1
   455  000073                     OpenADC@portconfig:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x13
   459  000073                     	ds	1
   460  000074                     ??_ReadADC:
   461  000074                     ??_OpenADC:
   462  000074                     ___wmul@multiplicand:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x14
   466  000074                     	ds	2
   467  000076                     CANSetMask@type:
   468                           	opt stack 0
   469  000076                     CANSetFilter@type:
   470                           	opt stack 0
   471  000076                     OpenADC@config:
   472                           	opt stack 0
   473  000076                     CANsendMessage@data:
   474                           	opt stack 0
   475  000076                     ___wmul@product:
   476                           	opt stack 0
   477  000076                     ___lmul@multiplicand:
   478                           	opt stack 0
   479  000076                     ___aldiv@divisor:
   480                           	opt stack 0
   481                           
   482                           ; 4 bytes @ 0x16
   483  000076                     	ds	1
   484  000077                     ??_CANSetMask:
   485  000077                     ??_CANSetFilter:
   486                           
   487                           ; 0 bytes @ 0x17
   488  000077                     	ds	1
   489  000078                     CANsendMessage@dataLength:
   490                           	opt stack 0
   491  000078                     delay_ms@value_ms:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x18
   495  000078                     	ds	1
   496  000079                     CANsendMessage@flags:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x19
   500  000079                     	ds	1
   501  00007A                     ??_CANsendMessage:
   502  00007A                     ___aldiv@counter:
   503                           	opt stack 0
   504  00007A                     ___lmul@product:
   505                           	opt stack 0
   506                           
   507                           ; 4 bytes @ 0x1A
   508  00007A                     	ds	1
   509  00007B                     CANSetMask@numBuffer:
   510                           	opt stack 0
   511  00007B                     CANSetFilter@numBuffer:
   512                           	opt stack 0
   513  00007B                     ___aldiv@sign:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x1B
   517  00007B                     	ds	1
   518  00007C                     CANSetMask@tamp:
   519                           	opt stack 0
   520  00007C                     CANSetFilter@tamp:
   521                           	opt stack 0
   522  00007C                     ___aldiv@quotient:
   523                           	opt stack 0
   524                           
   525                           ; 4 bytes @ 0x1C
   526  00007C                     	ds	2
   527  00007E                     ?___lldiv:
   528                           	opt stack 0
   529  00007E                     CANsendMessage@tamp:
   530                           	opt stack 0
   531  00007E                     ___lldiv@dividend:
   532                           	opt stack 0
   533                           
   534                           ; 4 bytes @ 0x1E
   535  00007E                     	ds	2
   536  000080                     CANInitialize@phaseSeg1:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x20
   540  000080                     	ds	1
   541  000081                     CANInitialize@phaseSeg2:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x21
   545  000081                     	ds	1
   546  000082                     CANInitialize@SJW:
   547                           	opt stack 0
   548  000082                     ___lldiv@divisor:
   549                           	opt stack 0
   550                           
   551                           ; 4 bytes @ 0x22
   552  000082                     	ds	1
   553  000083                     CANInitialize@BRP:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x23
   557  000083                     	ds	1
   558  000084                     CANInitialize@flags:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x24
   562  000084                     	ds	1
   563  000085                     ??_CANInitialize:
   564                           
   565                           ; 0 bytes @ 0x25
   566  000085                     	ds	1
   567  000086                     ___lldiv@quotient:
   568                           	opt stack 0
   569                           
   570                           ; 4 bytes @ 0x26
   571  000086                     	ds	3
   572  000089                     CANInitialize@propSeg:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x29
   576  000089                     	ds	1
   577  00008A                     CANInitialize@FilterConfig1:
   578                           	opt stack 0
   579  00008A                     ___lldiv@counter:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x2A
   583  00008A                     	ds	1
   584  00008B                     CANInitialize@FilterConfig2:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x2B
   588  00008B                     	ds	1
   589  00008C                     ??_main:
   590                           
   591                           ; 0 bytes @ 0x2C
   592  00008C                     	ds	4
   593                           tblptru	equ	0xFF8
   594                           tblptrh	equ	0xFF7
   595                           tblptrl	equ	0xFF6
   596                           tablat	equ	0xFF5
   597                           postinc0	equ	0xFEE
   598                           wreg	equ	0xFE8
   599                           postdec1	equ	0xFE5
   600                           fsr1l	equ	0xFE1
   601                           
   602                           	psect	cstackCOMRAM
   603  000001                     __pcstackCOMRAM:
   604                           	opt stack 0
   605  000001                     ?i1___wmul:
   606                           	opt stack 0
   607  000001                     _CANisRxReady$2825:
   608                           	opt stack 0
   609  000001                     CANreceiveMessage@msg:
   610                           	opt stack 0
   611  000001                     i1___wmul@multiplier:
   612                           	opt stack 0
   613  000001                     i1CANsendMessage@identifier:
   614                           	opt stack 0
   615                           
   616                           ; 4 bytes @ 0x0
   617  000001                     	ds	2
   618  000003                     ??_CANreceiveMessage:
   619  000003                     i1___wmul@multiplicand:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x2
   623  000003                     	ds	2
   624  000005                     i1CANsendMessage@data:
   625                           	opt stack 0
   626  000005                     i1___wmul@product:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x4
   630  000005                     	ds	2
   631  000007                     ?___lwdiv:
   632                           	opt stack 0
   633  000007                     i1CANsendMessage@dataLength:
   634                           	opt stack 0
   635  000007                     ___lwdiv@dividend:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x6
   639  000007                     	ds	1
   640  000008                     i1CANsendMessage@flags:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0x7
   644  000008                     	ds	1
   645  000009                     ??i1_CANsendMessage:
   646  000009                     ___lwdiv@divisor:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x8
   650  000009                     	ds	2
   651  00000B                     CANreceiveMessage@error:
   652                           	opt stack 0
   653  00000B                     ___lwdiv@quotient:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0xA
   657  00000B                     	ds	1
   658  00000C                     CANreceiveMessage@tamp:
   659                           	opt stack 0
   660                           
   661                           ; 1 bytes @ 0xB
   662  00000C                     	ds	1
   663  00000D                     ___lwdiv@counter:
   664                           	opt stack 0
   665  00000D                     i1CANsendMessage@tamp:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0xC
   669  00000D                     	ds	4
   670  000011                     ??_ISR_bassa:
   671                           
   672                           ; 0 bytes @ 0x10
   673  000011                     	ds	20
   674                           tblptru	equ	0xFF8
   675                           tblptrh	equ	0xFF7
   676                           tblptrl	equ	0xFF6
   677                           tablat	equ	0xFF5
   678                           postinc0	equ	0xFEE
   679                           wreg	equ	0xFE8
   680                           postdec1	equ	0xFE5
   681                           fsr1l	equ	0xFE1
   682                           
   683 ;;
   684 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   685 ;;
   686 ;; *************** function _main *****************
   687 ;; Defined at:
   688 ;;		line 124 in file "sterzo.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;		None
   693 ;; Return value:  Size  Location     Type
   694 ;;                  2  612[None  ] int 
   695 ;; Registers used:
   696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   702 ;;      Params:         0       0       0       0
   703 ;;      Locals:         0       0       0       0
   704 ;;      Temps:          0       4       0       0
   705 ;;      Totals:         0       4       0       0
   706 ;;Total ram usage:        4 bytes
   707 ;; Hardware stack levels required when called:    7
   708 ;; This function calls:
   709 ;;		_CANisRXwarningON
   710 ;;		_CANisTXwarningON
   711 ;;		___lldiv
   712 ;;		___lmul
   713 ;;		_calibrazione
   714 ;;		_configurazione_iniziale
   715 ;;		_delay_ms
   716 ;;		_send_data
   717 ;; This function is called by:
   718 ;;		Startup code after reset
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text0
   723  0025CC                     __ptext0:
   724                           	opt stack 0
   725  0025CC                     _main:
   726                           	opt stack 24
   727                           
   728                           ;sterzo.c: 125: configurazione_iniziale();
   729                           
   730                           ;incstack = 0
   731  0025CC  ECDC  F014         	call	_configurazione_iniziale	;wreg free
   732  0025D0  D000               	goto	l4071
   733  0025D2                     l4071:
   734                           
   735                           ;sterzo.c: 133: delay_ms(10);
   736  0025D2  0E00               	movlw	0
   737  0025D4  0100               	movlb	0	; () banked
   738  0025D6  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
   739  0025D8  0E0A               	movlw	10
   740  0025DA  6F78               	movwf	delay_ms@value_ms& (0+255),b
   741  0025DC  EC4B  F016         	call	_delay_ms	;wreg free
   742                           
   743                           ;sterzo.c: 134: calibrazione();
   744  0025E0  EC97  F015         	call	_calibrazione	;wreg free
   745                           
   746                           ;sterzo.c: 135: duty_cycle = currentSteering;
   747  0025E4  C043  F094         	movff	_currentSteering,_duty_cycle
   748  0025E8  C044  F095         	movff	_currentSteering+1,_duty_cycle+1
   749  0025EC  0100               	movlb	0	; () banked
   750  0025EE  0E00               	movlw	0
   751  0025F0  BF95               	btfsc	(_duty_cycle+1)& (0+255),7,b
   752  0025F2  0EFF               	movlw	-1
   753  0025F4  6F96               	movwf	(_duty_cycle+2)& (0+255),b
   754  0025F6  6F97               	movwf	(_duty_cycle+3)& (0+255),b
   755                           
   756                           ; BSR set to: 0
   757                           ;sterzo.c: 136: if (PORTCbits.RC0 == 0) {
   758  0025F8  B082               	btfsc	3970,0,c	;volatile
   759  0025FA  D7EB               	goto	l4071
   760                           
   761                           ; BSR set to: 0
   762                           ;sterzo.c: 137: timer = (((duty_cycle * 700) / 90) + 800) *2;
   763  0025FC  C094  F072         	movff	_duty_cycle,___lmul@multiplier
   764  002600  C095  F073         	movff	_duty_cycle+1,___lmul@multiplier+1
   765  002604  C096  F074         	movff	_duty_cycle+2,___lmul@multiplier+2
   766  002608  C097  F075         	movff	_duty_cycle+3,___lmul@multiplier+3
   767  00260C  0EBC               	movlw	188
   768  00260E  0100               	movlb	0	; () banked
   769  002610  6F76               	movwf	___lmul@multiplicand& (0+255),b
   770  002612  0E02               	movlw	2
   771  002614  6F77               	movwf	(___lmul@multiplicand+1)& (0+255),b
   772  002616  0E00               	movlw	0
   773  002618  6F78               	movwf	(___lmul@multiplicand+2)& (0+255),b
   774  00261A  0E00               	movlw	0
   775  00261C  6F79               	movwf	(___lmul@multiplicand+3)& (0+255),b
   776  00261E  EC5A  F015         	call	___lmul	;wreg free
   777  002622  C072  F07E         	movff	?___lmul,___lldiv@dividend
   778  002626  C073  F07F         	movff	?___lmul+1,___lldiv@dividend+1
   779  00262A  C074  F080         	movff	?___lmul+2,___lldiv@dividend+2
   780  00262E  C075  F081         	movff	?___lmul+3,___lldiv@dividend+3
   781  002632  0E5A               	movlw	90
   782  002634  0100               	movlb	0	; () banked
   783  002636  6F82               	movwf	___lldiv@divisor& (0+255),b
   784  002638  0E00               	movlw	0
   785  00263A  6F83               	movwf	(___lldiv@divisor+1)& (0+255),b
   786  00263C  0E00               	movlw	0
   787  00263E  6F84               	movwf	(___lldiv@divisor+2)& (0+255),b
   788  002640  0E00               	movlw	0
   789  002642  6F85               	movwf	(___lldiv@divisor+3)& (0+255),b
   790  002644  EC2C  F014         	call	___lldiv	;wreg free
   791  002648  90D8               	bcf	status,0,c
   792  00264A  0100               	movlb	0	; () banked
   793  00264C  357E               	rlcf	?___lldiv& (0+255),w,b
   794  00264E  0100               	movlb	0	; () banked
   795  002650  6F8C               	movwf	??_main& (0+255),b
   796  002652  0100               	movlb	0	; () banked
   797  002654  357F               	rlcf	(?___lldiv+1)& (0+255),w,b
   798  002656  0100               	movlb	0	; () banked
   799  002658  6F8D               	movwf	(??_main+1)& (0+255),b
   800  00265A  0100               	movlb	0	; () banked
   801  00265C  3580               	rlcf	(?___lldiv+2)& (0+255),w,b
   802  00265E  0100               	movlb	0	; () banked
   803  002660  6F8E               	movwf	(??_main+2)& (0+255),b
   804  002662  0100               	movlb	0	; () banked
   805  002664  3581               	rlcf	(?___lldiv+3)& (0+255),w,b
   806  002666  0100               	movlb	0	; () banked
   807  002668  6F8F               	movwf	(??_main+3)& (0+255),b
   808  00266A  0E40               	movlw	64
   809  00266C  0100               	movlb	0	; () banked
   810  00266E  258C               	addwf	??_main& (0+255),w,b
   811  002670  0100               	movlb	0	; () banked
   812  002672  6F9C               	movwf	_timer& (0+255),b
   813  002674  0E06               	movlw	6
   814  002676  0100               	movlb	0	; () banked
   815  002678  218D               	addwfc	(??_main+1)& (0+255),w,b
   816  00267A  0100               	movlb	0	; () banked
   817  00267C  6F9D               	movwf	(_timer+1)& (0+255),b
   818  00267E  0E00               	movlw	0
   819  002680  0100               	movlb	0	; () banked
   820  002682  218E               	addwfc	(??_main+2)& (0+255),w,b
   821  002684  0100               	movlb	0	; () banked
   822  002686  6F9E               	movwf	(_timer+2)& (0+255),b
   823  002688  0E00               	movlw	0
   824  00268A  0100               	movlb	0	; () banked
   825  00268C  218F               	addwfc	(??_main+3)& (0+255),w,b
   826  00268E  0100               	movlb	0	; () banked
   827  002690  6F9F               	movwf	(_timer+3)& (0+255),b
   828                           
   829                           ; BSR set to: 0
   830                           ;sterzo.c: 138: Ton = 65536 - timer;
   831  002692  C09C  F08C         	movff	_timer,??_main
   832  002696  C09D  F08D         	movff	_timer+1,??_main+1
   833  00269A  0100               	movlb	0	; () banked
   834  00269C  1F8C               	comf	??_main& (0+255),f,b
   835  00269E  1F8D               	comf	(??_main+1)& (0+255),f,b
   836  0026A0  4B8C               	infsnz	??_main& (0+255),f,b
   837  0026A2  2B8D               	incf	(??_main+1)& (0+255),f,b
   838  0026A4  C08C  F027         	movff	??_main,_Ton
   839  0026A8  C08D  F028         	movff	??_main+1,_Ton+1
   840                           
   841                           ; BSR set to: 0
   842                           ;sterzo.c: 139: Toff = 20000 - (timer / 2);
   843  0026AC  C09C  F08C         	movff	_timer,??_main
   844  0026B0  C09D  F08D         	movff	_timer+1,??_main+1
   845  0026B4  C09E  F08E         	movff	_timer+2,??_main+2
   846  0026B8  C09F  F08F         	movff	_timer+3,??_main+3
   847  0026BC  0100               	movlb	0	; () banked
   848  0026BE  90D8               	bcf	status,0,c
   849  0026C0  338F               	rrcf	(??_main+3)& (0+255),f,b
   850  0026C2  338E               	rrcf	(??_main+2)& (0+255),f,b
   851  0026C4  338D               	rrcf	(??_main+1)& (0+255),f,b
   852  0026C6  338C               	rrcf	??_main& (0+255),f,b
   853  0026C8  0100               	movlb	0	; () banked
   854  0026CA  1F8C               	comf	??_main& (0+255),f,b
   855  0026CC  1F8D               	comf	(??_main+1)& (0+255),f,b
   856  0026CE  4B8C               	infsnz	??_main& (0+255),f,b
   857  0026D0  2B8D               	incf	(??_main+1)& (0+255),f,b
   858  0026D2  0E20               	movlw	32
   859  0026D4  0100               	movlb	0	; () banked
   860  0026D6  258C               	addwf	??_main& (0+255),w,b
   861  0026D8  6E25               	movwf	_Toff,c
   862  0026DA  0E4E               	movlw	78
   863  0026DC  0100               	movlb	0	; () banked
   864  0026DE  218D               	addwfc	(??_main+1)& (0+255),w,b
   865  0026E0  6E26               	movwf	_Toff+1,c
   866                           
   867                           ; BSR set to: 0
   868                           ;sterzo.c: 140: Toff = (65536 - (Toff * 2));
   869  0026E2  C025  F08C         	movff	_Toff,??_main
   870  0026E6  C026  F08D         	movff	_Toff+1,??_main+1
   871  0026EA  90D8               	bcf	status,0,c
   872  0026EC  0100               	movlb	0	; () banked
   873  0026EE  378C               	rlcf	??_main& (0+255),f,b
   874  0026F0  378D               	rlcf	(??_main+1)& (0+255),f,b
   875  0026F2  0100               	movlb	0	; () banked
   876  0026F4  1F8C               	comf	??_main& (0+255),f,b
   877  0026F6  1F8D               	comf	(??_main+1)& (0+255),f,b
   878  0026F8  4B8C               	infsnz	??_main& (0+255),f,b
   879  0026FA  2B8D               	incf	(??_main+1)& (0+255),f,b
   880  0026FC  C08C  F025         	movff	??_main,_Toff
   881  002700  C08D  F026         	movff	??_main+1,_Toff+1
   882                           
   883                           ; BSR set to: 0
   884                           
   885                           ; BSR set to: 0
   886  002704  D766               	goto	l4071
   887                           
   888                           ; BSR set to: 0
   889                           ;sterzo.c: 141: }
   890                           ;sterzo.c: 142: }
   891                           ;sterzo.c: 143: if (remote_frame == 1) {
   892  002706  A247               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
   893  002708  D003               	goto	l4089
   894                           
   895                           ; BSR set to: 0
   896                           ;sterzo.c: 144: send_data();
   897  00270A  EC2A  F016         	call	_send_data	;wreg free
   898  00270E  D000               	goto	l4089
   899  002710                     l4089:
   900                           
   901                           ;sterzo.c: 145: }
   902                           ;sterzo.c: 146: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   903  002710  ECDD  F016         	call	_CANisTXwarningON	;wreg free
   904  002714  06E8               	decf	wreg,f,c
   905  002716  B4D8               	btfsc	status,2,c
   906  002718  D006               	goto	l620
   907  00271A  ECE4  F016         	call	_CANisRXwarningON	;wreg free
   908  00271E  06E8               	decf	wreg,f,c
   909  002720  A4D8               	btfss	status,2,c
   910  002722  EFDA  F000         	goto	start
   911  002726                     l620:
   912                           
   913                           ;sterzo.c: 147: PORTAbits.RA1 = 1;
   914  002726  8280               	bsf	3968,1,c	;volatile
   915  002728  EFDA  F000         	goto	start
   916  00272C                     __end_of_main:
   917                           	opt stack 0
   918                           tblptru	equ	0xFF8
   919                           tblptrh	equ	0xFF7
   920                           tblptrl	equ	0xFF6
   921                           tablat	equ	0xFF5
   922                           postinc0	equ	0xFEE
   923                           wreg	equ	0xFE8
   924                           postdec1	equ	0xFE5
   925                           fsr1l	equ	0xFE1
   926                           status	equ	0xFD8
   927                           
   928 ;; *************** function _send_data *****************
   929 ;; Defined at:
   930 ;;		line 155 in file "sterzo.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;		None
   935 ;; Return value:  Size  Location     Type
   936 ;;		None               void
   937 ;; Registers used:
   938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   944 ;;      Params:         0       0       0       0
   945 ;;      Locals:         0       0       0       0
   946 ;;      Temps:          0       0       0       0
   947 ;;      Totals:         0       0       0       0
   948 ;;Total ram usage:        0 bytes
   949 ;; Hardware stack levels used:    1
   950 ;; Hardware stack levels required when called:    5
   951 ;; This function calls:
   952 ;;		_CANisTxReady
   953 ;;		_CANsendMessage
   954 ;; This function is called by:
   955 ;;		_main
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text1
   960  002C54                     __ptext1:
   961                           	opt stack 0
   962  002C54                     _send_data:
   963                           	opt stack 25
   964                           
   965                           ;sterzo.c: 156: if (CANisTxReady()) {
   966                           
   967                           ;incstack = 0
   968  002C54  EC98  F016         	call	_CANisTxReady	;wreg free
   969  002C58  0900               	iorlw	0
   970  002C5A  B4D8               	btfsc	status,2,c
   971  002C5C  D01B               	goto	l626
   972                           
   973                           ;sterzo.c: 157: if (remote_frame == 1) {
   974  002C5E  A247               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
   975  002C60  D017               	goto	l3713
   976                           
   977                           ;sterzo.c: 159: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG &
   978                           ;sterzo.c: 160: CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   979  002C62  C098  F072         	movff	_id,CANsendMessage@identifier
   980  002C66  C099  F073         	movff	_id+1,CANsendMessage@identifier+1
   981  002C6A  C09A  F074         	movff	_id+2,CANsendMessage@identifier+2
   982  002C6E  C09B  F075         	movff	_id+3,CANsendMessage@identifier+3
   983  002C72  0E3B               	movlw	low _data_array
   984  002C74  0100               	movlb	0	; () banked
   985  002C76  6F76               	movwf	CANsendMessage@data& (0+255),b
   986  002C78  0E00               	movlw	high _data_array
   987  002C7A  0100               	movlb	0	; () banked
   988  002C7C  6F77               	movwf	(CANsendMessage@data+1)& (0+255),b
   989  002C7E  0E08               	movlw	8
   990  002C80  0100               	movlb	0	; () banked
   991  002C82  6F78               	movwf	CANsendMessage@dataLength& (0+255),b
   992  002C84  0EBC               	movlw	188
   993  002C86  0100               	movlb	0	; () banked
   994  002C88  6F79               	movwf	CANsendMessage@flags& (0+255),b
   995  002C8A  EC71  F006         	call	_CANsendMessage	;wreg free
   996  002C8E  D000               	goto	l3713
   997  002C90                     l3713:
   998                           
   999                           ;sterzo.c: 161: }
  1000                           ;sterzo.c: 162: remote_frame = 0;
  1001  002C90  9247               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1002  002C92  D000               	goto	l626
  1003  002C94                     l626:
  1004  002C94  0012               	return		;funcret
  1005  002C96                     __end_of_send_data:
  1006                           	opt stack 0
  1007                           tblptru	equ	0xFF8
  1008                           tblptrh	equ	0xFF7
  1009                           tblptrl	equ	0xFF6
  1010                           tablat	equ	0xFF5
  1011                           postinc0	equ	0xFEE
  1012                           wreg	equ	0xFE8
  1013                           postdec1	equ	0xFE5
  1014                           fsr1l	equ	0xFE1
  1015                           status	equ	0xFD8
  1016                           
  1017 ;; *************** function _CANsendMessage *****************
  1018 ;; Defined at:
  1019 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  identifier      4   18[BANK0 ] unsigned long 
  1022 ;;  data            2   22[BANK0 ] PTR unsigned char 
  1023 ;;		 -> data_array(8), 
  1024 ;;  dataLength      1   24[BANK0 ] unsigned char 
  1025 ;;  flags           1   25[BANK0 ] enum E16907
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  tamp            4   30[BANK0 ] unsigned long 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;		None               void
  1030 ;; Registers used:
  1031 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1037 ;;      Params:         0       8       0       0
  1038 ;;      Locals:         0       4       0       0
  1039 ;;      Temps:          0       4       0       0
  1040 ;;      Totals:         0      16       0       0
  1041 ;;Total ram usage:       16 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; Hardware stack levels required when called:    4
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_send_data
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text2
  1052  000CE2                     __ptext2:
  1053                           	opt stack 0
  1054  000CE2                     _CANsendMessage:
  1055                           	opt stack 25
  1056                           
  1057                           ;inc\CANlib.h: 296: unsigned long tamp;
  1058                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1059                           
  1060                           ;incstack = 0
  1061  000CE2  010F               	movlb	15	; () banked
  1062  000CE4  B740               	btfsc	64,3,b	;volatile
  1063  000CE6  D142               	goto	l349
  1064                           
  1065                           ; BSR set to: 15
  1066                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1067  000CE8  C078  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1068                           
  1069                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1070  000CEC  0100               	movlb	0	; () banked
  1071  000CEE  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
  1072  000CF0  D003               	goto	l350
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1076  000CF2  010F               	movlb	15	; () banked
  1077  000CF4  8D45               	bsf	69,6,b	;volatile
  1078  000CF6  D002               	goto	l351
  1079  000CF8                     l350:
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;inc\CANlib.h: 302: else
  1083                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1084  000CF8  010F               	movlb	15	; () banked
  1085  000CFA  9D45               	bcf	69,6,b	;volatile
  1086  000CFC                     l351:
  1087                           
  1088                           ; BSR set to: 15
  1089                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1090  000CFC  0100               	movlb	0	; () banked
  1091  000CFE  A779               	btfss	CANsendMessage@flags& (0+255),3,b
  1092  000D00  D07A               	goto	l352
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;inc\CANlib.h: 306: {
  1096                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1097  000D02  0100               	movlb	0	; () banked
  1098  000D04  5172               	movf	CANsendMessage@identifier& (0+255),w,b
  1099  000D06  0100               	movlb	0	; () banked
  1100  000D08  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
  1101  000D0A  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1102  000D0C  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1103  000D0E  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1104                           
  1105                           ; BSR set to: 0
  1106                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1107  000D10  C07E  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1111  000D14  0E00               	movlw	0
  1112  000D16  0100               	movlb	0	; () banked
  1113  000D18  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
  1114  000D1A  0100               	movlb	0	; () banked
  1115  000D1C  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
  1116  000D1E  0EFF               	movlw	255
  1117  000D20  0100               	movlb	0	; () banked
  1118  000D22  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1119  000D24  0100               	movlb	0	; () banked
  1120  000D26  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1121  000D28  0E00               	movlw	0
  1122  000D2A  0100               	movlb	0	; () banked
  1123  000D2C  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1124  000D2E  0100               	movlb	0	; () banked
  1125  000D30  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1126  000D32  0E00               	movlw	0
  1127  000D34  0100               	movlb	0	; () banked
  1128  000D36  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1129  000D38  0100               	movlb	0	; () banked
  1130  000D3A  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1134  000D3C  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
  1135  000D40  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1136  000D44  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1137  000D48  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1138  000D4C  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
  1139  000D50  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1140  000D54  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1141  000D58  0100               	movlb	0	; () banked
  1142  000D5A  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
  1143  000D5C  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
  1144  000D60  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1145  000D64  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1146  000D68  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1150  000D6C  C07E  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1154  000D70  0E00               	movlw	0
  1155  000D72  010F               	movlb	15	; () banked
  1156  000D74  6F42               	movwf	66,b	;volatile
  1157                           
  1158                           ; BSR set to: 15
  1159                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1160  000D76  010F               	movlb	15	; () banked
  1161  000D78  8742               	bsf	66,3,b	;volatile
  1162                           
  1163                           ; BSR set to: 15
  1164                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1165  000D7A  0100               	movlb	0	; () banked
  1166  000D7C  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1167  000D7E  D002               	goto	l353
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1171  000D80  010F               	movlb	15	; () banked
  1172  000D82  8142               	bsf	66,0,b	;volatile
  1173  000D84                     l353:
  1174                           
  1175                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1176  000D84  0100               	movlb	0	; () banked
  1177  000D86  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1178  000D88  D002               	goto	l354
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1182  000D8A  010F               	movlb	15	; () banked
  1183  000D8C  8342               	bsf	66,1,b	;volatile
  1184  000D8E                     l354:
  1185                           
  1186                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1187  000D8E  0100               	movlb	0	; () banked
  1188  000D90  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1189  000D92  D002               	goto	l355
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1193  000D94  010F               	movlb	15	; () banked
  1194  000D96  8B42               	bsf	66,5,b	;volatile
  1195  000D98                     l355:
  1196                           
  1197                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1198  000D98  0100               	movlb	0	; () banked
  1199  000D9A  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1200  000D9C  D002               	goto	l356
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1204  000D9E  010F               	movlb	15	; () banked
  1205  000DA0  8D42               	bsf	66,6,b	;volatile
  1206  000DA2                     l356:
  1207                           
  1208                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1209  000DA2  0100               	movlb	0	; () banked
  1210  000DA4  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1211  000DA6  D003               	goto	l3201
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1215  000DA8  010F               	movlb	15	; () banked
  1216  000DAA  8F42               	bsf	66,7,b	;volatile
  1217  000DAC  D000               	goto	l3201
  1218  000DAE                     l3201:
  1219                           
  1220                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1221  000DAE  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
  1222  000DB2  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1223  000DB6  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1224  000DBA  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1225  000DBE  0E16               	movlw	22
  1226  000DC0  D006               	goto	u3550
  1227  000DC2                     u3555:
  1228  000DC2  0100               	movlb	0	; () banked
  1229  000DC4  90D8               	bcf	status,0,c
  1230  000DC6  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1231  000DC8  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1232  000DCA  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1233  000DCC  337A               	rrcf	??_CANsendMessage& (0+255),f,b
  1234  000DCE                     u3550:
  1235  000DCE  2EE8               	decfsz	wreg,f,c
  1236  000DD0  D7F8               	goto	u3555
  1237  000DD2  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
  1238  000DD6  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1239  000DDA  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1240  000DDE  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1244  000DE2  0100               	movlb	0	; () banked
  1245  000DE4  517E               	movf	CANsendMessage@tamp& (0+255),w,b
  1246  000DE6  0100               	movlb	0	; () banked
  1247  000DE8  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
  1248  000DEA  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1249  000DEC  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1250  000DEE  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1254  000DF0  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1255                           
  1256                           ;inc\CANlib.h: 332: }
  1257  000DF4  D05A               	goto	l3221
  1258  000DF6                     l352:
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;inc\CANlib.h: 334: else
  1262                           ;inc\CANlib.h: 336: {
  1263                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1264  000DF6  010F               	movlb	15	; () banked
  1265  000DF8  9742               	bcf	66,3,b	;volatile
  1266                           
  1267                           ; BSR set to: 15
  1268                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1269  000DFA  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
  1270  000DFE  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1271  000E02  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1272  000E06  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1273  000E0A  0E04               	movlw	4
  1274  000E0C  D006               	goto	u3560
  1275  000E0E                     u3565:
  1276  000E0E  0100               	movlb	0	; () banked
  1277  000E10  90D8               	bcf	status,0,c
  1278  000E12  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1279  000E14  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1280  000E16  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1281  000E18  337A               	rrcf	??_CANsendMessage& (0+255),f,b
  1282  000E1A                     u3560:
  1283  000E1A  2EE8               	decfsz	wreg,f,c
  1284  000E1C  D7F8               	goto	u3565
  1285  000E1E  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
  1286  000E22  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1287  000E26  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1288  000E2A  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1292  000E2E  0100               	movlb	0	; () banked
  1293  000E30  517E               	movf	CANsendMessage@tamp& (0+255),w,b
  1294  000E32  0100               	movlb	0	; () banked
  1295  000E34  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
  1296  000E36  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1297  000E38  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1298  000E3A  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1302  000E3C  C07E  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1306  000E40  0E07               	movlw	7
  1307  000E42  0100               	movlb	0	; () banked
  1308  000E44  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
  1309  000E46  0100               	movlb	0	; () banked
  1310  000E48  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
  1311  000E4A  0E00               	movlw	0
  1312  000E4C  0100               	movlb	0	; () banked
  1313  000E4E  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1314  000E50  0100               	movlb	0	; () banked
  1315  000E52  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1316  000E54  0E00               	movlw	0
  1317  000E56  0100               	movlb	0	; () banked
  1318  000E58  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1319  000E5A  0100               	movlb	0	; () banked
  1320  000E5C  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1321  000E5E  0E00               	movlw	0
  1322  000E60  0100               	movlb	0	; () banked
  1323  000E62  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1324  000E64  0100               	movlb	0	; () banked
  1325  000E66  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1329  000E68  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
  1330  000E6C  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1331  000E70  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1332  000E74  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1333  000E78  0E05               	movlw	5
  1334  000E7A                     u3575:
  1335  000E7A  90D8               	bcf	status,0,c
  1336  000E7C  0100               	movlb	0	; () banked
  1337  000E7E  377A               	rlcf	??_CANsendMessage& (0+255),f,b
  1338  000E80  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1339  000E82  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1340  000E84  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1341  000E86  2EE8               	decfsz	wreg,f,c
  1342  000E88  D7F8               	goto	u3575
  1343  000E8A  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
  1344  000E8E  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1345  000E92  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1346  000E96  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1350  000E9A  010F               	movlb	15	; () banked
  1351  000E9C  5142               	movf	66,w,b	;volatile
  1352  000E9E  0B1F               	andlw	31
  1353  000EA0  010F               	movlb	15	; () banked
  1354  000EA2  6F42               	movwf	66,b	;volatile
  1355                           
  1356                           ; BSR set to: 15
  1357                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1358  000EA4  C07E  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1359  000EA8  D000               	goto	l3221
  1360  000EAA                     l3221:
  1361                           
  1362                           ;inc\CANlib.h: 347: }
  1363                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1364  000EAA  0100               	movlb	0	; () banked
  1365  000EAC  A179               	btfss	CANsendMessage@flags& (0+255),0,b
  1366  000EAE  D003               	goto	l359
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1370  000EB0  010F               	movlb	15	; () banked
  1371  000EB2  8140               	bsf	64,0,b	;volatile
  1372  000EB4  D002               	goto	l360
  1373  000EB6                     l359:
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;inc\CANlib.h: 351: else
  1377                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1378  000EB6  010F               	movlb	15	; () banked
  1379  000EB8  9140               	bcf	64,0,b	;volatile
  1380  000EBA                     l360:
  1381                           
  1382                           ; BSR set to: 15
  1383                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1384  000EBA  0100               	movlb	0	; () banked
  1385  000EBC  A379               	btfss	CANsendMessage@flags& (0+255),1,b
  1386  000EBE  D003               	goto	l361
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1390  000EC0  010F               	movlb	15	; () banked
  1391  000EC2  8340               	bsf	64,1,b	;volatile
  1392  000EC4  D003               	goto	l3227
  1393  000EC6                     l361:
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;inc\CANlib.h: 355: else
  1397                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1398  000EC6  010F               	movlb	15	; () banked
  1399  000EC8  9340               	bcf	64,1,b	;volatile
  1400  000ECA  D000               	goto	l3227
  1401  000ECC                     l3227:
  1402                           
  1403                           ; BSR set to: 15
  1404                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1405  000ECC  C076  FFD9         	movff	CANsendMessage@data,fsr2l
  1406  000ED0  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1407  000ED4  50DF               	movf	indf2,w,c
  1408  000ED6  010F               	movlb	15	; () banked
  1409  000ED8  6F46               	movwf	70,b	;volatile
  1410                           
  1411                           ; BSR set to: 15
  1412                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1413  000EDA  0100               	movlb	0	; () banked
  1414  000EDC  EE20 F001          	lfsr	2,1
  1415  000EE0  5176               	movf	CANsendMessage@data& (0+255),w,b
  1416  000EE2  26D9               	addwf	fsr2l,f,c
  1417  000EE4  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1418  000EE6  22DA               	addwfc	fsr2h,f,c
  1419  000EE8  50DF               	movf	indf2,w,c
  1420  000EEA  010F               	movlb	15	; () banked
  1421  000EEC  6F47               	movwf	71,b	;volatile
  1422                           
  1423                           ; BSR set to: 15
  1424                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1425  000EEE  0100               	movlb	0	; () banked
  1426  000EF0  EE20 F002          	lfsr	2,2
  1427  000EF4  5176               	movf	CANsendMessage@data& (0+255),w,b
  1428  000EF6  26D9               	addwf	fsr2l,f,c
  1429  000EF8  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1430  000EFA  22DA               	addwfc	fsr2h,f,c
  1431  000EFC  50DF               	movf	indf2,w,c
  1432  000EFE  010F               	movlb	15	; () banked
  1433  000F00  6F48               	movwf	72,b	;volatile
  1434                           
  1435                           ; BSR set to: 15
  1436                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1437  000F02  0100               	movlb	0	; () banked
  1438  000F04  EE20 F003          	lfsr	2,3
  1439  000F08  5176               	movf	CANsendMessage@data& (0+255),w,b
  1440  000F0A  26D9               	addwf	fsr2l,f,c
  1441  000F0C  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1442  000F0E  22DA               	addwfc	fsr2h,f,c
  1443  000F10  50DF               	movf	indf2,w,c
  1444  000F12  010F               	movlb	15	; () banked
  1445  000F14  6F49               	movwf	73,b	;volatile
  1446                           
  1447                           ; BSR set to: 15
  1448                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1449  000F16  0100               	movlb	0	; () banked
  1450  000F18  EE20 F004          	lfsr	2,4
  1451  000F1C  5176               	movf	CANsendMessage@data& (0+255),w,b
  1452  000F1E  26D9               	addwf	fsr2l,f,c
  1453  000F20  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1454  000F22  22DA               	addwfc	fsr2h,f,c
  1455  000F24  50DF               	movf	indf2,w,c
  1456  000F26  010F               	movlb	15	; () banked
  1457  000F28  6F4A               	movwf	74,b	;volatile
  1458                           
  1459                           ; BSR set to: 15
  1460                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1461  000F2A  0100               	movlb	0	; () banked
  1462  000F2C  EE20 F005          	lfsr	2,5
  1463  000F30  5176               	movf	CANsendMessage@data& (0+255),w,b
  1464  000F32  26D9               	addwf	fsr2l,f,c
  1465  000F34  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1466  000F36  22DA               	addwfc	fsr2h,f,c
  1467  000F38  50DF               	movf	indf2,w,c
  1468  000F3A  010F               	movlb	15	; () banked
  1469  000F3C  6F4B               	movwf	75,b	;volatile
  1470                           
  1471                           ; BSR set to: 15
  1472                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1473  000F3E  0100               	movlb	0	; () banked
  1474  000F40  EE20 F006          	lfsr	2,6
  1475  000F44  5176               	movf	CANsendMessage@data& (0+255),w,b
  1476  000F46  26D9               	addwf	fsr2l,f,c
  1477  000F48  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1478  000F4A  22DA               	addwfc	fsr2h,f,c
  1479  000F4C  50DF               	movf	indf2,w,c
  1480  000F4E  010F               	movlb	15	; () banked
  1481  000F50  6F4C               	movwf	76,b	;volatile
  1482                           
  1483                           ; BSR set to: 15
  1484                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1485  000F52  0100               	movlb	0	; () banked
  1486  000F54  EE20 F007          	lfsr	2,7
  1487  000F58  5176               	movf	CANsendMessage@data& (0+255),w,b
  1488  000F5A  26D9               	addwf	fsr2l,f,c
  1489  000F5C  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1490  000F5E  22DA               	addwfc	fsr2h,f,c
  1491  000F60  50DF               	movf	indf2,w,c
  1492  000F62  010F               	movlb	15	; () banked
  1493  000F64  6F4D               	movwf	77,b	;volatile
  1494                           
  1495                           ; BSR set to: 15
  1496                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1497  000F66  010F               	movlb	15	; () banked
  1498  000F68  8740               	bsf	64,3,b	;volatile
  1499                           
  1500                           ; BSR set to: 15
  1501                           ;inc\CANlib.h: 368: return;
  1502  000F6A  D28A               	goto	l363
  1503  000F6C                     l349:
  1504                           
  1505                           ; BSR set to: 15
  1506                           ;inc\CANlib.h: 369: }
  1507                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1508  000F6C  010F               	movlb	15	; () banked
  1509  000F6E  B730               	btfsc	48,3,b	;volatile
  1510  000F70  D142               	goto	l364
  1511                           
  1512                           ; BSR set to: 15
  1513                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1514  000F72  C078  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1515                           
  1516                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1517  000F76  0100               	movlb	0	; () banked
  1518  000F78  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
  1519  000F7A  D003               	goto	l365
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1523  000F7C  010F               	movlb	15	; () banked
  1524  000F7E  8D35               	bsf	53,6,b	;volatile
  1525  000F80  D002               	goto	l366
  1526  000F82                     l365:
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;inc\CANlib.h: 378: else
  1530                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1531  000F82  010F               	movlb	15	; () banked
  1532  000F84  9D35               	bcf	53,6,b	;volatile
  1533  000F86                     l366:
  1534                           
  1535                           ; BSR set to: 15
  1536                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1537  000F86  0100               	movlb	0	; () banked
  1538  000F88  A779               	btfss	CANsendMessage@flags& (0+255),3,b
  1539  000F8A  D07A               	goto	l367
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;inc\CANlib.h: 382: {
  1543                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1544  000F8C  0100               	movlb	0	; () banked
  1545  000F8E  5172               	movf	CANsendMessage@identifier& (0+255),w,b
  1546  000F90  0100               	movlb	0	; () banked
  1547  000F92  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
  1548  000F94  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1549  000F96  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1550  000F98  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1554  000F9A  C07E  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1558  000F9E  0E00               	movlw	0
  1559  000FA0  0100               	movlb	0	; () banked
  1560  000FA2  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
  1561  000FA4  0100               	movlb	0	; () banked
  1562  000FA6  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
  1563  000FA8  0EFF               	movlw	255
  1564  000FAA  0100               	movlb	0	; () banked
  1565  000FAC  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1566  000FAE  0100               	movlb	0	; () banked
  1567  000FB0  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1568  000FB2  0E00               	movlw	0
  1569  000FB4  0100               	movlb	0	; () banked
  1570  000FB6  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1571  000FB8  0100               	movlb	0	; () banked
  1572  000FBA  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1573  000FBC  0E00               	movlw	0
  1574  000FBE  0100               	movlb	0	; () banked
  1575  000FC0  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1576  000FC2  0100               	movlb	0	; () banked
  1577  000FC4  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1581  000FC6  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
  1582  000FCA  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1583  000FCE  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1584  000FD2  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1585  000FD6  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
  1586  000FDA  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1587  000FDE  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1588  000FE2  0100               	movlb	0	; () banked
  1589  000FE4  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
  1590  000FE6  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
  1591  000FEA  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1592  000FEE  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1593  000FF2  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1597  000FF6  C07E  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  1601  000FFA  0E00               	movlw	0
  1602  000FFC  010F               	movlb	15	; () banked
  1603  000FFE  6F32               	movwf	50,b	;volatile
  1604                           
  1605                           ; BSR set to: 15
  1606                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1607  001000  010F               	movlb	15	; () banked
  1608  001002  8732               	bsf	50,3,b	;volatile
  1609                           
  1610                           ; BSR set to: 15
  1611                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  1612  001004  0100               	movlb	0	; () banked
  1613  001006  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1614  001008  D002               	goto	l368
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  1618  00100A  010F               	movlb	15	; () banked
  1619  00100C  8132               	bsf	50,0,b	;volatile
  1620  00100E                     l368:
  1621                           
  1622                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  1623  00100E  0100               	movlb	0	; () banked
  1624  001010  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1625  001012  D002               	goto	l369
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  1629  001014  010F               	movlb	15	; () banked
  1630  001016  8332               	bsf	50,1,b	;volatile
  1631  001018                     l369:
  1632                           
  1633                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  1634  001018  0100               	movlb	0	; () banked
  1635  00101A  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1636  00101C  D002               	goto	l370
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  1640  00101E  010F               	movlb	15	; () banked
  1641  001020  8B32               	bsf	50,5,b	;volatile
  1642  001022                     l370:
  1643                           
  1644                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  1645  001022  0100               	movlb	0	; () banked
  1646  001024  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1647  001026  D002               	goto	l371
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  1651  001028  010F               	movlb	15	; () banked
  1652  00102A  8D32               	bsf	50,6,b	;volatile
  1653  00102C                     l371:
  1654                           
  1655                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  1656  00102C  0100               	movlb	0	; () banked
  1657  00102E  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1658  001030  D003               	goto	l3277
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  1662  001032  010F               	movlb	15	; () banked
  1663  001034  8F32               	bsf	50,7,b	;volatile
  1664  001036  D000               	goto	l3277
  1665  001038                     l3277:
  1666                           
  1667                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  1668  001038  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
  1669  00103C  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1670  001040  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1671  001044  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1672  001048  0E16               	movlw	22
  1673  00104A  D006               	goto	u3680
  1674  00104C                     u3685:
  1675  00104C  0100               	movlb	0	; () banked
  1676  00104E  90D8               	bcf	status,0,c
  1677  001050  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1678  001052  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1679  001054  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1680  001056  337A               	rrcf	??_CANsendMessage& (0+255),f,b
  1681  001058                     u3680:
  1682  001058  2EE8               	decfsz	wreg,f,c
  1683  00105A  D7F8               	goto	u3685
  1684  00105C  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
  1685  001060  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1686  001064  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1687  001068  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  1691  00106C  0100               	movlb	0	; () banked
  1692  00106E  517E               	movf	CANsendMessage@tamp& (0+255),w,b
  1693  001070  0100               	movlb	0	; () banked
  1694  001072  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
  1695  001074  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1696  001076  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1697  001078  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  1701  00107A  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1702                           
  1703                           ;inc\CANlib.h: 407: }
  1704  00107E  D05A               	goto	l3297
  1705  001080                     l367:
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;inc\CANlib.h: 409: else
  1709                           ;inc\CANlib.h: 411: {
  1710                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  1711  001080  010F               	movlb	15	; () banked
  1712  001082  9732               	bcf	50,3,b	;volatile
  1713                           
  1714                           ; BSR set to: 15
  1715                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  1716  001084  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
  1717  001088  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1718  00108C  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1719  001090  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1720  001094  0E04               	movlw	4
  1721  001096  D006               	goto	u3690
  1722  001098                     u3695:
  1723  001098  0100               	movlb	0	; () banked
  1724  00109A  90D8               	bcf	status,0,c
  1725  00109C  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1726  00109E  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1727  0010A0  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1728  0010A2  337A               	rrcf	??_CANsendMessage& (0+255),f,b
  1729  0010A4                     u3690:
  1730  0010A4  2EE8               	decfsz	wreg,f,c
  1731  0010A6  D7F8               	goto	u3695
  1732  0010A8  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
  1733  0010AC  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1734  0010B0  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1735  0010B4  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  1739  0010B8  0100               	movlb	0	; () banked
  1740  0010BA  517E               	movf	CANsendMessage@tamp& (0+255),w,b
  1741  0010BC  0100               	movlb	0	; () banked
  1742  0010BE  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
  1743  0010C0  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1744  0010C2  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1745  0010C4  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  1749  0010C6  C07E  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  1753  0010CA  0E07               	movlw	7
  1754  0010CC  0100               	movlb	0	; () banked
  1755  0010CE  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
  1756  0010D0  0100               	movlb	0	; () banked
  1757  0010D2  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
  1758  0010D4  0E00               	movlw	0
  1759  0010D6  0100               	movlb	0	; () banked
  1760  0010D8  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1761  0010DA  0100               	movlb	0	; () banked
  1762  0010DC  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1763  0010DE  0E00               	movlw	0
  1764  0010E0  0100               	movlb	0	; () banked
  1765  0010E2  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1766  0010E4  0100               	movlb	0	; () banked
  1767  0010E6  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1768  0010E8  0E00               	movlw	0
  1769  0010EA  0100               	movlb	0	; () banked
  1770  0010EC  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1771  0010EE  0100               	movlb	0	; () banked
  1772  0010F0  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  1776  0010F2  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
  1777  0010F6  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1778  0010FA  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1779  0010FE  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1780  001102  0E05               	movlw	5
  1781  001104                     u3705:
  1782  001104  90D8               	bcf	status,0,c
  1783  001106  0100               	movlb	0	; () banked
  1784  001108  377A               	rlcf	??_CANsendMessage& (0+255),f,b
  1785  00110A  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1786  00110C  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1787  00110E  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1788  001110  2EE8               	decfsz	wreg,f,c
  1789  001112  D7F8               	goto	u3705
  1790  001114  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
  1791  001118  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1792  00111C  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1793  001120  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  1797  001124  010F               	movlb	15	; () banked
  1798  001126  5132               	movf	50,w,b	;volatile
  1799  001128  0B1F               	andlw	31
  1800  00112A  010F               	movlb	15	; () banked
  1801  00112C  6F32               	movwf	50,b	;volatile
  1802                           
  1803                           ; BSR set to: 15
  1804                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  1805  00112E  C07E  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  1806  001132  D000               	goto	l3297
  1807  001134                     l3297:
  1808                           
  1809                           ;inc\CANlib.h: 422: }
  1810                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  1811  001134  0100               	movlb	0	; () banked
  1812  001136  A179               	btfss	CANsendMessage@flags& (0+255),0,b
  1813  001138  D003               	goto	l374
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  1817  00113A  010F               	movlb	15	; () banked
  1818  00113C  8130               	bsf	48,0,b	;volatile
  1819  00113E  D002               	goto	l375
  1820  001140                     l374:
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;inc\CANlib.h: 426: else
  1824                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  1825  001140  010F               	movlb	15	; () banked
  1826  001142  9130               	bcf	48,0,b	;volatile
  1827  001144                     l375:
  1828                           
  1829                           ; BSR set to: 15
  1830                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  1831  001144  0100               	movlb	0	; () banked
  1832  001146  A379               	btfss	CANsendMessage@flags& (0+255),1,b
  1833  001148  D003               	goto	l376
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  1837  00114A  010F               	movlb	15	; () banked
  1838  00114C  8330               	bsf	48,1,b	;volatile
  1839  00114E  D003               	goto	l3303
  1840  001150                     l376:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;inc\CANlib.h: 430: else
  1844                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  1845  001150  010F               	movlb	15	; () banked
  1846  001152  9330               	bcf	48,1,b	;volatile
  1847  001154  D000               	goto	l3303
  1848  001156                     l3303:
  1849                           
  1850                           ; BSR set to: 15
  1851                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  1852  001156  C076  FFD9         	movff	CANsendMessage@data,fsr2l
  1853  00115A  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1854  00115E  50DF               	movf	indf2,w,c
  1855  001160  010F               	movlb	15	; () banked
  1856  001162  6F36               	movwf	54,b	;volatile
  1857                           
  1858                           ; BSR set to: 15
  1859                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  1860  001164  0100               	movlb	0	; () banked
  1861  001166  EE20 F001          	lfsr	2,1
  1862  00116A  5176               	movf	CANsendMessage@data& (0+255),w,b
  1863  00116C  26D9               	addwf	fsr2l,f,c
  1864  00116E  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1865  001170  22DA               	addwfc	fsr2h,f,c
  1866  001172  50DF               	movf	indf2,w,c
  1867  001174  010F               	movlb	15	; () banked
  1868  001176  6F37               	movwf	55,b	;volatile
  1869                           
  1870                           ; BSR set to: 15
  1871                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  1872  001178  0100               	movlb	0	; () banked
  1873  00117A  EE20 F002          	lfsr	2,2
  1874  00117E  5176               	movf	CANsendMessage@data& (0+255),w,b
  1875  001180  26D9               	addwf	fsr2l,f,c
  1876  001182  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1877  001184  22DA               	addwfc	fsr2h,f,c
  1878  001186  50DF               	movf	indf2,w,c
  1879  001188  010F               	movlb	15	; () banked
  1880  00118A  6F38               	movwf	56,b	;volatile
  1881                           
  1882                           ; BSR set to: 15
  1883                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  1884  00118C  0100               	movlb	0	; () banked
  1885  00118E  EE20 F003          	lfsr	2,3
  1886  001192  5176               	movf	CANsendMessage@data& (0+255),w,b
  1887  001194  26D9               	addwf	fsr2l,f,c
  1888  001196  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1889  001198  22DA               	addwfc	fsr2h,f,c
  1890  00119A  50DF               	movf	indf2,w,c
  1891  00119C  010F               	movlb	15	; () banked
  1892  00119E  6F39               	movwf	57,b	;volatile
  1893                           
  1894                           ; BSR set to: 15
  1895                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  1896  0011A0  0100               	movlb	0	; () banked
  1897  0011A2  EE20 F004          	lfsr	2,4
  1898  0011A6  5176               	movf	CANsendMessage@data& (0+255),w,b
  1899  0011A8  26D9               	addwf	fsr2l,f,c
  1900  0011AA  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1901  0011AC  22DA               	addwfc	fsr2h,f,c
  1902  0011AE  50DF               	movf	indf2,w,c
  1903  0011B0  010F               	movlb	15	; () banked
  1904  0011B2  6F3A               	movwf	58,b	;volatile
  1905                           
  1906                           ; BSR set to: 15
  1907                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  1908  0011B4  0100               	movlb	0	; () banked
  1909  0011B6  EE20 F005          	lfsr	2,5
  1910  0011BA  5176               	movf	CANsendMessage@data& (0+255),w,b
  1911  0011BC  26D9               	addwf	fsr2l,f,c
  1912  0011BE  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1913  0011C0  22DA               	addwfc	fsr2h,f,c
  1914  0011C2  50DF               	movf	indf2,w,c
  1915  0011C4  010F               	movlb	15	; () banked
  1916  0011C6  6F3B               	movwf	59,b	;volatile
  1917                           
  1918                           ; BSR set to: 15
  1919                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  1920  0011C8  0100               	movlb	0	; () banked
  1921  0011CA  EE20 F006          	lfsr	2,6
  1922  0011CE  5176               	movf	CANsendMessage@data& (0+255),w,b
  1923  0011D0  26D9               	addwf	fsr2l,f,c
  1924  0011D2  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1925  0011D4  22DA               	addwfc	fsr2h,f,c
  1926  0011D6  50DF               	movf	indf2,w,c
  1927  0011D8  010F               	movlb	15	; () banked
  1928  0011DA  6F3C               	movwf	60,b	;volatile
  1929                           
  1930                           ; BSR set to: 15
  1931                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  1932  0011DC  0100               	movlb	0	; () banked
  1933  0011DE  EE20 F007          	lfsr	2,7
  1934  0011E2  5176               	movf	CANsendMessage@data& (0+255),w,b
  1935  0011E4  26D9               	addwf	fsr2l,f,c
  1936  0011E6  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1937  0011E8  22DA               	addwfc	fsr2h,f,c
  1938  0011EA  50DF               	movf	indf2,w,c
  1939  0011EC  010F               	movlb	15	; () banked
  1940  0011EE  6F3D               	movwf	61,b	;volatile
  1941                           
  1942                           ; BSR set to: 15
  1943                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  1944  0011F0  010F               	movlb	15	; () banked
  1945  0011F2  8730               	bsf	48,3,b	;volatile
  1946                           
  1947                           ; BSR set to: 15
  1948                           ;inc\CANlib.h: 444: return;
  1949  0011F4  D145               	goto	l363
  1950  0011F6                     l364:
  1951                           
  1952                           ; BSR set to: 15
  1953                           ;inc\CANlib.h: 445: }
  1954                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  1955  0011F6  010F               	movlb	15	; () banked
  1956  0011F8  B720               	btfsc	32,3,b	;volatile
  1957  0011FA  D142               	goto	l363
  1958                           
  1959                           ; BSR set to: 15
  1960                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  1961  0011FC  C078  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  1962                           
  1963                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  1964  001200  0100               	movlb	0	; () banked
  1965  001202  AD79               	btfss	CANsendMessage@flags& (0+255),6,b
  1966  001204  D003               	goto	l379
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  1970  001206  010F               	movlb	15	; () banked
  1971  001208  8D25               	bsf	37,6,b	;volatile
  1972  00120A  D002               	goto	l380
  1973  00120C                     l379:
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;inc\CANlib.h: 454: else
  1977                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  1978  00120C  010F               	movlb	15	; () banked
  1979  00120E  9D25               	bcf	37,6,b	;volatile
  1980  001210                     l380:
  1981                           
  1982                           ; BSR set to: 15
  1983                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  1984  001210  0100               	movlb	0	; () banked
  1985  001212  A779               	btfss	CANsendMessage@flags& (0+255),3,b
  1986  001214  D07A               	goto	l381
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;inc\CANlib.h: 458: {
  1990                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  1991  001216  0100               	movlb	0	; () banked
  1992  001218  5172               	movf	CANsendMessage@identifier& (0+255),w,b
  1993  00121A  0100               	movlb	0	; () banked
  1994  00121C  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
  1995  00121E  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1996  001220  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1997  001222  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2001  001224  C07E  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2005  001228  0E00               	movlw	0
  2006  00122A  0100               	movlb	0	; () banked
  2007  00122C  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
  2008  00122E  0100               	movlb	0	; () banked
  2009  001230  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
  2010  001232  0EFF               	movlw	255
  2011  001234  0100               	movlb	0	; () banked
  2012  001236  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2013  001238  0100               	movlb	0	; () banked
  2014  00123A  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2015  00123C  0E00               	movlw	0
  2016  00123E  0100               	movlb	0	; () banked
  2017  001240  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2018  001242  0100               	movlb	0	; () banked
  2019  001244  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2020  001246  0E00               	movlw	0
  2021  001248  0100               	movlb	0	; () banked
  2022  00124A  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2023  00124C  0100               	movlb	0	; () banked
  2024  00124E  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2028  001250  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
  2029  001254  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2030  001258  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2031  00125C  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2032  001260  C07B  F07A         	movff	??_CANsendMessage+1,??_CANsendMessage
  2033  001264  C07C  F07B         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2034  001268  C07D  F07C         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2035  00126C  0100               	movlb	0	; () banked
  2036  00126E  6B7D               	clrf	(??_CANsendMessage+3)& (0+255),b
  2037  001270  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
  2038  001274  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2039  001278  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2040  00127C  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2044  001280  C07E  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2048  001284  0E00               	movlw	0
  2049  001286  010F               	movlb	15	; () banked
  2050  001288  6F22               	movwf	34,b	;volatile
  2051                           
  2052                           ; BSR set to: 15
  2053                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2054  00128A  010F               	movlb	15	; () banked
  2055  00128C  8722               	bsf	34,3,b	;volatile
  2056                           
  2057                           ; BSR set to: 15
  2058                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2059  00128E  0100               	movlb	0	; () banked
  2060  001290  A174               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2061  001292  D002               	goto	l382
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2065  001294  010F               	movlb	15	; () banked
  2066  001296  8122               	bsf	34,0,b	;volatile
  2067  001298                     l382:
  2068                           
  2069                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2070  001298  0100               	movlb	0	; () banked
  2071  00129A  A374               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2072  00129C  D002               	goto	l383
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2076  00129E  010F               	movlb	15	; () banked
  2077  0012A0  8322               	bsf	34,1,b	;volatile
  2078  0012A2                     l383:
  2079                           
  2080                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2081  0012A2  0100               	movlb	0	; () banked
  2082  0012A4  A574               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2083  0012A6  D002               	goto	l384
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2087  0012A8  010F               	movlb	15	; () banked
  2088  0012AA  8B22               	bsf	34,5,b	;volatile
  2089  0012AC                     l384:
  2090                           
  2091                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2092  0012AC  0100               	movlb	0	; () banked
  2093  0012AE  A774               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2094  0012B0  D002               	goto	l385
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2098  0012B2  010F               	movlb	15	; () banked
  2099  0012B4  8D22               	bsf	34,6,b	;volatile
  2100  0012B6                     l385:
  2101                           
  2102                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2103  0012B6  0100               	movlb	0	; () banked
  2104  0012B8  A974               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2105  0012BA  D003               	goto	l3353
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2109  0012BC  010F               	movlb	15	; () banked
  2110  0012BE  8F22               	bsf	34,7,b	;volatile
  2111  0012C0  D000               	goto	l3353
  2112  0012C2                     l3353:
  2113                           
  2114                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2115  0012C2  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
  2116  0012C6  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2117  0012CA  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2118  0012CE  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2119  0012D2  0E16               	movlw	22
  2120  0012D4  D006               	goto	u3810
  2121  0012D6                     u3815:
  2122  0012D6  0100               	movlb	0	; () banked
  2123  0012D8  90D8               	bcf	status,0,c
  2124  0012DA  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2125  0012DC  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2126  0012DE  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2127  0012E0  337A               	rrcf	??_CANsendMessage& (0+255),f,b
  2128  0012E2                     u3810:
  2129  0012E2  2EE8               	decfsz	wreg,f,c
  2130  0012E4  D7F8               	goto	u3815
  2131  0012E6  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
  2132  0012EA  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2133  0012EE  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2134  0012F2  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2138  0012F6  0100               	movlb	0	; () banked
  2139  0012F8  517E               	movf	CANsendMessage@tamp& (0+255),w,b
  2140  0012FA  0100               	movlb	0	; () banked
  2141  0012FC  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
  2142  0012FE  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2143  001300  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2144  001302  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2148  001304  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2149                           
  2150                           ;inc\CANlib.h: 483: }
  2151  001308  D05A               	goto	l3373
  2152  00130A                     l381:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;inc\CANlib.h: 485: else
  2156                           ;inc\CANlib.h: 487: {
  2157                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2158  00130A  010F               	movlb	15	; () banked
  2159  00130C  9722               	bcf	34,3,b	;volatile
  2160                           
  2161                           ; BSR set to: 15
  2162                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2163  00130E  C072  F07A         	movff	CANsendMessage@identifier,??_CANsendMessage
  2164  001312  C073  F07B         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2165  001316  C074  F07C         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2166  00131A  C075  F07D         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2167  00131E  0E04               	movlw	4
  2168  001320  D006               	goto	u3820
  2169  001322                     u3825:
  2170  001322  0100               	movlb	0	; () banked
  2171  001324  90D8               	bcf	status,0,c
  2172  001326  337D               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2173  001328  337C               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2174  00132A  337B               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2175  00132C  337A               	rrcf	??_CANsendMessage& (0+255),f,b
  2176  00132E                     u3820:
  2177  00132E  2EE8               	decfsz	wreg,f,c
  2178  001330  D7F8               	goto	u3825
  2179  001332  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
  2180  001336  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2181  00133A  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2182  00133E  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2186  001342  0100               	movlb	0	; () banked
  2187  001344  517E               	movf	CANsendMessage@tamp& (0+255),w,b
  2188  001346  0100               	movlb	0	; () banked
  2189  001348  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
  2190  00134A  6B7F               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2191  00134C  6B80               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2192  00134E  6B81               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2196  001350  C07E  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2200  001354  0E07               	movlw	7
  2201  001356  0100               	movlb	0	; () banked
  2202  001358  1572               	andwf	CANsendMessage@identifier& (0+255),w,b
  2203  00135A  0100               	movlb	0	; () banked
  2204  00135C  6F7E               	movwf	CANsendMessage@tamp& (0+255),b
  2205  00135E  0E00               	movlw	0
  2206  001360  0100               	movlb	0	; () banked
  2207  001362  1573               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2208  001364  0100               	movlb	0	; () banked
  2209  001366  6F7F               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2210  001368  0E00               	movlw	0
  2211  00136A  0100               	movlb	0	; () banked
  2212  00136C  1574               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2213  00136E  0100               	movlb	0	; () banked
  2214  001370  6F80               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2215  001372  0E00               	movlw	0
  2216  001374  0100               	movlb	0	; () banked
  2217  001376  1575               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2218  001378  0100               	movlb	0	; () banked
  2219  00137A  6F81               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2223  00137C  C07E  F07A         	movff	CANsendMessage@tamp,??_CANsendMessage
  2224  001380  C07F  F07B         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2225  001384  C080  F07C         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2226  001388  C081  F07D         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2227  00138C  0E05               	movlw	5
  2228  00138E                     u3835:
  2229  00138E  90D8               	bcf	status,0,c
  2230  001390  0100               	movlb	0	; () banked
  2231  001392  377A               	rlcf	??_CANsendMessage& (0+255),f,b
  2232  001394  377B               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2233  001396  377C               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2234  001398  377D               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2235  00139A  2EE8               	decfsz	wreg,f,c
  2236  00139C  D7F8               	goto	u3835
  2237  00139E  C07A  F07E         	movff	??_CANsendMessage,CANsendMessage@tamp
  2238  0013A2  C07B  F07F         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2239  0013A6  C07C  F080         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2240  0013AA  C07D  F081         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2244  0013AE  010F               	movlb	15	; () banked
  2245  0013B0  5122               	movf	34,w,b	;volatile
  2246  0013B2  0B1F               	andlw	31
  2247  0013B4  010F               	movlb	15	; () banked
  2248  0013B6  6F22               	movwf	34,b	;volatile
  2249                           
  2250                           ; BSR set to: 15
  2251                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2252  0013B8  C07E  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2253  0013BC  D000               	goto	l3373
  2254  0013BE                     l3373:
  2255                           
  2256                           ;inc\CANlib.h: 498: }
  2257                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2258  0013BE  0100               	movlb	0	; () banked
  2259  0013C0  A179               	btfss	CANsendMessage@flags& (0+255),0,b
  2260  0013C2  D003               	goto	l388
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2264  0013C4  010F               	movlb	15	; () banked
  2265  0013C6  8120               	bsf	32,0,b	;volatile
  2266  0013C8  D002               	goto	l389
  2267  0013CA                     l388:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;inc\CANlib.h: 502: else
  2271                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2272  0013CA  010F               	movlb	15	; () banked
  2273  0013CC  9120               	bcf	32,0,b	;volatile
  2274  0013CE                     l389:
  2275                           
  2276                           ; BSR set to: 15
  2277                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2278  0013CE  0100               	movlb	0	; () banked
  2279  0013D0  A379               	btfss	CANsendMessage@flags& (0+255),1,b
  2280  0013D2  D003               	goto	l390
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2284  0013D4  010F               	movlb	15	; () banked
  2285  0013D6  8320               	bsf	32,1,b	;volatile
  2286  0013D8  D003               	goto	l3379
  2287  0013DA                     l390:
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;inc\CANlib.h: 506: else
  2291                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2292  0013DA  010F               	movlb	15	; () banked
  2293  0013DC  9320               	bcf	32,1,b	;volatile
  2294  0013DE  D000               	goto	l3379
  2295  0013E0                     l3379:
  2296                           
  2297                           ; BSR set to: 15
  2298                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2299  0013E0  C076  FFD9         	movff	CANsendMessage@data,fsr2l
  2300  0013E4  C077  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2301  0013E8  50DF               	movf	indf2,w,c
  2302  0013EA  010F               	movlb	15	; () banked
  2303  0013EC  6F26               	movwf	38,b	;volatile
  2304                           
  2305                           ; BSR set to: 15
  2306                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2307  0013EE  0100               	movlb	0	; () banked
  2308  0013F0  EE20 F001          	lfsr	2,1
  2309  0013F4  5176               	movf	CANsendMessage@data& (0+255),w,b
  2310  0013F6  26D9               	addwf	fsr2l,f,c
  2311  0013F8  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2312  0013FA  22DA               	addwfc	fsr2h,f,c
  2313  0013FC  50DF               	movf	indf2,w,c
  2314  0013FE  010F               	movlb	15	; () banked
  2315  001400  6F27               	movwf	39,b	;volatile
  2316                           
  2317                           ; BSR set to: 15
  2318                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2319  001402  0100               	movlb	0	; () banked
  2320  001404  EE20 F002          	lfsr	2,2
  2321  001408  5176               	movf	CANsendMessage@data& (0+255),w,b
  2322  00140A  26D9               	addwf	fsr2l,f,c
  2323  00140C  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2324  00140E  22DA               	addwfc	fsr2h,f,c
  2325  001410  50DF               	movf	indf2,w,c
  2326  001412  010F               	movlb	15	; () banked
  2327  001414  6F28               	movwf	40,b	;volatile
  2328                           
  2329                           ; BSR set to: 15
  2330                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2331  001416  0100               	movlb	0	; () banked
  2332  001418  EE20 F003          	lfsr	2,3
  2333  00141C  5176               	movf	CANsendMessage@data& (0+255),w,b
  2334  00141E  26D9               	addwf	fsr2l,f,c
  2335  001420  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2336  001422  22DA               	addwfc	fsr2h,f,c
  2337  001424  50DF               	movf	indf2,w,c
  2338  001426  010F               	movlb	15	; () banked
  2339  001428  6F29               	movwf	41,b	;volatile
  2340                           
  2341                           ; BSR set to: 15
  2342                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2343  00142A  0100               	movlb	0	; () banked
  2344  00142C  EE20 F004          	lfsr	2,4
  2345  001430  5176               	movf	CANsendMessage@data& (0+255),w,b
  2346  001432  26D9               	addwf	fsr2l,f,c
  2347  001434  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2348  001436  22DA               	addwfc	fsr2h,f,c
  2349  001438  50DF               	movf	indf2,w,c
  2350  00143A  010F               	movlb	15	; () banked
  2351  00143C  6F2A               	movwf	42,b	;volatile
  2352                           
  2353                           ; BSR set to: 15
  2354                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2355  00143E  0100               	movlb	0	; () banked
  2356  001440  EE20 F005          	lfsr	2,5
  2357  001444  5176               	movf	CANsendMessage@data& (0+255),w,b
  2358  001446  26D9               	addwf	fsr2l,f,c
  2359  001448  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2360  00144A  22DA               	addwfc	fsr2h,f,c
  2361  00144C  50DF               	movf	indf2,w,c
  2362  00144E  010F               	movlb	15	; () banked
  2363  001450  6F2B               	movwf	43,b	;volatile
  2364                           
  2365                           ; BSR set to: 15
  2366                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2367  001452  0100               	movlb	0	; () banked
  2368  001454  EE20 F006          	lfsr	2,6
  2369  001458  5176               	movf	CANsendMessage@data& (0+255),w,b
  2370  00145A  26D9               	addwf	fsr2l,f,c
  2371  00145C  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2372  00145E  22DA               	addwfc	fsr2h,f,c
  2373  001460  50DF               	movf	indf2,w,c
  2374  001462  010F               	movlb	15	; () banked
  2375  001464  6F2C               	movwf	44,b	;volatile
  2376                           
  2377                           ; BSR set to: 15
  2378                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2379  001466  0100               	movlb	0	; () banked
  2380  001468  EE20 F007          	lfsr	2,7
  2381  00146C  5176               	movf	CANsendMessage@data& (0+255),w,b
  2382  00146E  26D9               	addwf	fsr2l,f,c
  2383  001470  5177               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2384  001472  22DA               	addwfc	fsr2h,f,c
  2385  001474  50DF               	movf	indf2,w,c
  2386  001476  010F               	movlb	15	; () banked
  2387  001478  6F2D               	movwf	45,b	;volatile
  2388                           
  2389                           ; BSR set to: 15
  2390                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2391  00147A  010F               	movlb	15	; () banked
  2392  00147C  8720               	bsf	32,3,b	;volatile
  2393                           
  2394                           ; BSR set to: 15
  2395                           ;inc\CANlib.h: 520: return;
  2396  00147E  D000               	goto	l363
  2397  001480                     l363:
  2398                           
  2399                           ; BSR set to: 15
  2400  001480  0012               	return		;funcret
  2401  001482                     __end_of_CANsendMessage:
  2402                           	opt stack 0
  2403                           tblptru	equ	0xFF8
  2404                           tblptrh	equ	0xFF7
  2405                           tblptrl	equ	0xFF6
  2406                           tablat	equ	0xFF5
  2407                           postinc0	equ	0xFEE
  2408                           wreg	equ	0xFE8
  2409                           postdec1	equ	0xFE5
  2410                           fsr1l	equ	0xFE1
  2411                           indf2	equ	0xFDF
  2412                           fsr2h	equ	0xFDA
  2413                           fsr2l	equ	0xFD9
  2414                           status	equ	0xFD8
  2415                           
  2416 ;; *************** function _CANisTxReady *****************
  2417 ;; Defined at:
  2418 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;		None
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      unsigned char 
  2425 ;; Registers used:
  2426 ;;		wreg, status,2
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2432 ;;      Params:         0       0       0       0
  2433 ;;      Locals:         0       1       0       0
  2434 ;;      Temps:          0       0       0       0
  2435 ;;      Totals:         0       1       0       0
  2436 ;;Total ram usage:        1 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    4
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_send_data
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text3
  2447  002D30                     __ptext3:
  2448                           	opt stack 0
  2449  002D30                     _CANisTxReady:
  2450                           	opt stack 25
  2451                           
  2452                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2453                           
  2454                           ; BSR set to: 15
  2455                           ;incstack = 0
  2456  002D30  0E01               	movlw	1
  2457  002D32  0100               	movlb	0	; () banked
  2458  002D34  6F72               	movwf	_CANisTxReady$2823& (0+255),b
  2459                           
  2460                           ; BSR set to: 0
  2461  002D36  010F               	movlb	15	; () banked
  2462  002D38  A740               	btfss	64,3,b	;volatile
  2463  002D3A  D009               	goto	l542
  2464                           
  2465                           ; BSR set to: 15
  2466  002D3C  010F               	movlb	15	; () banked
  2467  002D3E  A730               	btfss	48,3,b	;volatile
  2468  002D40  D006               	goto	l542
  2469                           
  2470                           ; BSR set to: 15
  2471  002D42  010F               	movlb	15	; () banked
  2472  002D44  A720               	btfss	32,3,b	;volatile
  2473  002D46  D003               	goto	l542
  2474                           
  2475                           ; BSR set to: 15
  2476  002D48  0E00               	movlw	0
  2477  002D4A  0100               	movlb	0	; () banked
  2478  002D4C  6F72               	movwf	_CANisTxReady$2823& (0+255),b
  2479  002D4E                     l542:
  2480  002D4E  0100               	movlb	0	; () banked
  2481  002D50  5172               	movf	_CANisTxReady$2823& (0+255),w,b
  2482  002D52  D000               	goto	l543
  2483  002D54                     l543:
  2484                           
  2485                           ; BSR set to: 0
  2486  002D54  0012               	return		;funcret
  2487  002D56                     __end_of_CANisTxReady:
  2488                           	opt stack 0
  2489                           tblptru	equ	0xFF8
  2490                           tblptrh	equ	0xFF7
  2491                           tblptrl	equ	0xFF6
  2492                           tablat	equ	0xFF5
  2493                           postinc0	equ	0xFEE
  2494                           wreg	equ	0xFE8
  2495                           postdec1	equ	0xFE5
  2496                           fsr1l	equ	0xFE1
  2497                           indf2	equ	0xFDF
  2498                           fsr2h	equ	0xFDA
  2499                           fsr2l	equ	0xFD9
  2500                           status	equ	0xFD8
  2501                           
  2502 ;; *************** function _delay_ms *****************
  2503 ;; Defined at:
  2504 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  value_ms        2   24[BANK0 ] unsigned int 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;		None               void
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2518 ;;      Params:         0       2       0       0
  2519 ;;      Locals:         0       0       0       0
  2520 ;;      Temps:          0       0       0       0
  2521 ;;      Totals:         0       2       0       0
  2522 ;;Total ram usage:        2 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    5
  2525 ;; This function calls:
  2526 ;;		___wmul
  2527 ;; This function is called by:
  2528 ;;		_main
  2529 ;;		_delay_s
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text4
  2534  002C96                     __ptext4:
  2535                           	opt stack 0
  2536  002C96                     _delay_ms:
  2537                           	opt stack 25
  2538                           
  2539                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;incstack = 0
  2543  002C96  C0A2  F072         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  2544  002C9A  0100               	movlb	0	; () banked
  2545  002C9C  6B73               	clrf	(___wmul@multiplier+1)& (0+255),b
  2546  002C9E  C078  F074         	movff	delay_ms@value_ms,___wmul@multiplicand
  2547  002CA2  C079  F075         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  2548  002CA6  EC68  F016         	call	___wmul	;wreg free
  2549  002CAA  C072  F0A0         	movff	?___wmul,_clock_counter_reference	;volatile
  2550  002CAE  C073  F0A1         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  2551                           
  2552                           ;src\delay.c: 75: while (clock_counter_reference) {
  2553  002CB2  D007               	goto	l555
  2554  002CB4                     l3639:
  2555                           
  2556                           ;src\delay.c: 85: _delay(240);
  2557  002CB4  0E50               	movlw	80
  2558  002CB6                     u4947:
  2559  002CB6  2EE8               	decfsz	wreg,f,c
  2560  002CB8  D7FE               	goto	u4947
  2561                           
  2562                           ;src\delay.c: 88: clock_counter_reference--;
  2563  002CBA  0100               	movlb	0	; () banked
  2564  002CBC  07A0               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  2565  002CBE  A0D8               	btfss	status,0,c
  2566  002CC0  07A1               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  2567  002CC2                     l555:
  2568  002CC2  0100               	movlb	0	; () banked
  2569  002CC4  51A0               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  2570  002CC6  0100               	movlb	0	; () banked
  2571  002CC8  11A1               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  2572  002CCA  A4D8               	btfss	status,2,c
  2573  002CCC  D7F3               	goto	l3639
  2574                           
  2575                           ; BSR set to: 0
  2576                           
  2577                           ; BSR set to: 0
  2578  002CCE  0012               	return		;funcret
  2579  002CD0                     __end_of_delay_ms:
  2580                           	opt stack 0
  2581                           tblptru	equ	0xFF8
  2582                           tblptrh	equ	0xFF7
  2583                           tblptrl	equ	0xFF6
  2584                           tablat	equ	0xFF5
  2585                           postinc0	equ	0xFEE
  2586                           wreg	equ	0xFE8
  2587                           postdec1	equ	0xFE5
  2588                           fsr1l	equ	0xFE1
  2589                           indf2	equ	0xFDF
  2590                           fsr2h	equ	0xFDA
  2591                           fsr2l	equ	0xFD9
  2592                           status	equ	0xFD8
  2593                           
  2594 ;; *************** function ___wmul *****************
  2595 ;; Defined at:
  2596 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  multiplier      2   18[BANK0 ] unsigned int 
  2599 ;;  multiplicand    2   20[BANK0 ] unsigned int 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  product         2   22[BANK0 ] unsigned int 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  2   18[BANK0 ] unsigned int 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0, prodl, prodh
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2611 ;;      Params:         0       4       0       0
  2612 ;;      Locals:         0       2       0       0
  2613 ;;      Temps:          0       0       0       0
  2614 ;;      Totals:         0       6       0       0
  2615 ;;Total ram usage:        6 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; Hardware stack levels required when called:    4
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_delay_ms
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text5
  2626  002CD0                     __ptext5:
  2627                           	opt stack 0
  2628  002CD0                     ___wmul:
  2629                           	opt stack 25
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;incstack = 0
  2633  002CD0  0100               	movlb	0	; () banked
  2634  002CD2  5172               	movf	___wmul@multiplier& (0+255),w,b
  2635  002CD4  0100               	movlb	0	; () banked
  2636  002CD6  0374               	mulwf	___wmul@multiplicand& (0+255),b
  2637  002CD8  CFF3 F076          	movff	prodl,___wmul@product
  2638  002CDC  CFF4 F077          	movff	prodh,___wmul@product+1
  2639  002CE0  0100               	movlb	0	; () banked
  2640  002CE2  5172               	movf	___wmul@multiplier& (0+255),w,b
  2641  002CE4  0100               	movlb	0	; () banked
  2642  002CE6  0375               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2643  002CE8  50F3               	movf	prodl,w,c
  2644  002CEA  0100               	movlb	0	; () banked
  2645  002CEC  2777               	addwf	(___wmul@product+1)& (0+255),f,b
  2646  002CEE  0100               	movlb	0	; () banked
  2647  002CF0  5173               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2648  002CF2  0100               	movlb	0	; () banked
  2649  002CF4  0374               	mulwf	___wmul@multiplicand& (0+255),b
  2650  002CF6  50F3               	movf	prodl,w,c
  2651  002CF8  0100               	movlb	0	; () banked
  2652  002CFA  2777               	addwf	(___wmul@product+1)& (0+255),f,b
  2653                           
  2654                           ; BSR set to: 0
  2655  002CFC  C076  F072         	movff	___wmul@product,?___wmul
  2656  002D00  C077  F073         	movff	___wmul@product+1,?___wmul+1
  2657  002D04  D000               	goto	l680
  2658  002D06                     l680:
  2659                           
  2660                           ; BSR set to: 0
  2661  002D06  0012               	return		;funcret
  2662  002D08                     __end_of___wmul:
  2663                           	opt stack 0
  2664                           tblptru	equ	0xFF8
  2665                           tblptrh	equ	0xFF7
  2666                           tblptrl	equ	0xFF6
  2667                           tablat	equ	0xFF5
  2668                           prodh	equ	0xFF4
  2669                           prodl	equ	0xFF3
  2670                           postinc0	equ	0xFEE
  2671                           wreg	equ	0xFE8
  2672                           postdec1	equ	0xFE5
  2673                           fsr1l	equ	0xFE1
  2674                           indf2	equ	0xFDF
  2675                           fsr2h	equ	0xFDA
  2676                           fsr2l	equ	0xFD9
  2677                           status	equ	0xFD8
  2678                           
  2679 ;; *************** function _configurazione_iniziale *****************
  2680 ;; Defined at:
  2681 ;;		line 181 in file "sterzo.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;		None
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;		None               void
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2695 ;;      Params:         0       0       0       0
  2696 ;;      Locals:         0       0       0       0
  2697 ;;      Temps:          0       0       0       0
  2698 ;;      Totals:         0       0       0       0
  2699 ;;Total ram usage:        0 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    6
  2702 ;; This function calls:
  2703 ;;		_CANInitialize
  2704 ;;		_OpenADC
  2705 ;; This function is called by:
  2706 ;;		_main
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text6
  2711  0029B8                     __ptext6:
  2712                           	opt stack 0
  2713  0029B8                     _configurazione_iniziale:
  2714                           	opt stack 24
  2715                           
  2716                           ;sterzo.c: 186: RCONbits.IPEN = 1;
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;incstack = 0
  2720  0029B8  8ED0               	bsf	4048,7,c	;volatile
  2721                           
  2722                           ;sterzo.c: 187: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2723  0029BA  0E06               	movlw	6
  2724  0029BC  0100               	movlb	0	; () banked
  2725  0029BE  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2726  0029C0  0E05               	movlw	5
  2727  0029C2  0100               	movlb	0	; () banked
  2728  0029C4  6F81               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2729  0029C6  0E01               	movlw	1
  2730  0029C8  0100               	movlb	0	; () banked
  2731  0029CA  6F82               	movwf	CANInitialize@SJW& (0+255),b
  2732  0029CC  0E03               	movlw	3
  2733  0029CE  0100               	movlb	0	; () banked
  2734  0029D0  6F83               	movwf	CANInitialize@BRP& (0+255),b
  2735  0029D2  0E9D               	movlw	157
  2736  0029D4  0100               	movlb	0	; () banked
  2737  0029D6  6F84               	movwf	CANInitialize@flags& (0+255),b
  2738  0029D8  0E04               	movlw	4
  2739  0029DA  ECFF  F011         	call	_CANInitialize
  2740                           
  2741                           ;sterzo.c: 192: PIR3bits.RXB1IF = 0;
  2742  0029DE  92A4               	bcf	4004,1,c	;volatile
  2743                           
  2744                           ;sterzo.c: 193: PIR3bits.RXB0IF = 0;
  2745  0029E0  90A4               	bcf	4004,0,c	;volatile
  2746                           
  2747                           ;sterzo.c: 194: INTCONbits.TMR0IF = 0;
  2748  0029E2  94F2               	bcf	intcon,2,c	;volatile
  2749                           
  2750                           ;sterzo.c: 200: IPR3bits.RXB1IP = 0;
  2751  0029E4  92A5               	bcf	4005,1,c	;volatile
  2752                           
  2753                           ;sterzo.c: 201: IPR3bits.RXB0IP = 0;
  2754  0029E6  90A5               	bcf	4005,0,c	;volatile
  2755                           
  2756                           ;sterzo.c: 202: INTCON2bits.TMR0IP = 1;
  2757  0029E8  84F1               	bsf	intcon2,2,c	;volatile
  2758                           
  2759                           ;sterzo.c: 208: RCONbits.IPEN = 1;
  2760  0029EA  8ED0               	bsf	4048,7,c	;volatile
  2761                           
  2762                           ;sterzo.c: 209: PIE3bits.RXB1IE = 1;
  2763  0029EC  82A3               	bsf	4003,1,c	;volatile
  2764                           
  2765                           ;sterzo.c: 210: PIE3bits.RXB0IE = 1;
  2766  0029EE  80A3               	bsf	4003,0,c	;volatile
  2767                           
  2768                           ;sterzo.c: 211: INTCONbits.TMR0IE = 1;
  2769  0029F0  8AF2               	bsf	intcon,5,c	;volatile
  2770                           
  2771                           ;sterzo.c: 213: INTCONbits.GIEH = 1;
  2772  0029F2  8EF2               	bsf	intcon,7,c	;volatile
  2773                           
  2774                           ;sterzo.c: 214: INTCONbits.GIEL = 1;
  2775  0029F4  8CF2               	bsf	intcon,6,c	;volatile
  2776                           
  2777                           ;sterzo.c: 220: OpenADC(0b11011111 & 0b11111111 & 0b11111101, 0b10000111 & 0b11111100 & 
      +                          0b01111111, 0b11111110);
  2778  0029F6  0E04               	movlw	4
  2779  0029F8  0100               	movlb	0	; () banked
  2780  0029FA  6F72               	movwf	OpenADC@config2& (0+255),b
  2781  0029FC  0EFE               	movlw	254
  2782  0029FE  0100               	movlb	0	; () banked
  2783  002A00  6F73               	movwf	OpenADC@portconfig& (0+255),b
  2784  002A02  0EDD               	movlw	221
  2785  002A04  EC1C  F015         	call	_OpenADC
  2786                           
  2787                           ;sterzo.c: 226: T0CONbits.TMR0ON = 1;
  2788  002A08  8ED5               	bsf	4053,7,c	;volatile
  2789                           
  2790                           ;sterzo.c: 227: PORTCbits.RC0 = 0;
  2791  002A0A  9082               	bcf	3970,0,c	;volatile
  2792                           
  2793                           ;sterzo.c: 231: LATA = 0x00;
  2794  002A0C  0E00               	movlw	0
  2795  002A0E  6E89               	movwf	3977,c	;volatile
  2796                           
  2797                           ;sterzo.c: 232: TRISA = 0b11111101;
  2798  002A10  0EFD               	movlw	253
  2799  002A12  6E92               	movwf	3986,c	;volatile
  2800                           
  2801                           ;sterzo.c: 234: LATB = 0x00;
  2802  002A14  0E00               	movlw	0
  2803  002A16  6E8A               	movwf	3978,c	;volatile
  2804                           
  2805                           ;sterzo.c: 235: TRISB = 0b11111011;
  2806  002A18  0EFB               	movlw	251
  2807  002A1A  6E93               	movwf	3987,c	;volatile
  2808                           
  2809                           ;sterzo.c: 237: LATC = 0x00;
  2810  002A1C  0E00               	movlw	0
  2811  002A1E  6E8B               	movwf	3979,c	;volatile
  2812                           
  2813                           ;sterzo.c: 238: TRISC = 0x00;
  2814  002A20  0E00               	movlw	0
  2815  002A22  6E94               	movwf	3988,c	;volatile
  2816                           
  2817                           ;sterzo.c: 240: LATD = 0x00;
  2818  002A24  0E00               	movlw	0
  2819  002A26  6E8C               	movwf	3980,c	;volatile
  2820                           
  2821                           ;sterzo.c: 241: TRISD = 0x00;
  2822  002A28  0E00               	movlw	0
  2823  002A2A  6E95               	movwf	3989,c	;volatile
  2824                           
  2825                           ;sterzo.c: 243: LATE = 0x00;
  2826  002A2C  0E00               	movlw	0
  2827  002A2E  6E8D               	movwf	3981,c	;volatile
  2828                           
  2829                           ;sterzo.c: 244: TRISE = 0xFF;
  2830  002A30  6896               	setf	3990,c	;volatile
  2831                           
  2832                           ;sterzo.c: 245: T0CON = 0x80;
  2833  002A32  0E80               	movlw	128
  2834  002A34  6ED5               	movwf	4053,c	;volatile
  2835  002A36  0012               	return		;funcret
  2836  002A38                     __end_of_configurazione_iniziale:
  2837                           	opt stack 0
  2838                           tblptru	equ	0xFF8
  2839                           tblptrh	equ	0xFF7
  2840                           tblptrl	equ	0xFF6
  2841                           tablat	equ	0xFF5
  2842                           prodh	equ	0xFF4
  2843                           prodl	equ	0xFF3
  2844                           intcon	equ	0xFF2
  2845                           intcon2	equ	0xFF1
  2846                           postinc0	equ	0xFEE
  2847                           wreg	equ	0xFE8
  2848                           postdec1	equ	0xFE5
  2849                           fsr1l	equ	0xFE1
  2850                           indf2	equ	0xFDF
  2851                           fsr2h	equ	0xFDA
  2852                           fsr2l	equ	0xFD9
  2853                           status	equ	0xFD8
  2854                           
  2855 ;; *************** function _OpenADC *****************
  2856 ;; Defined at:
  2857 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  config          1    wreg     unsigned char 
  2860 ;;  config2         1   18[BANK0 ] unsigned char 
  2861 ;;  portconfig      1   19[BANK0 ] unsigned char 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  config          1   22[BANK0 ] unsigned char 
  2864 ;; Return value:  Size  Location     Type
  2865 ;;		None               void
  2866 ;; Registers used:
  2867 ;;		wreg, status,2, status,0
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2873 ;;      Params:         0       2       0       0
  2874 ;;      Locals:         0       1       0       0
  2875 ;;      Temps:          0       2       0       0
  2876 ;;      Totals:         0       5       0       0
  2877 ;;Total ram usage:        5 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    4
  2880 ;; This function calls:
  2881 ;;		Nothing
  2882 ;; This function is called by:
  2883 ;;		_configurazione_iniziale
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text7
  2888  002A38                     __ptext7:
  2889                           	opt stack 0
  2890  002A38                     _OpenADC:
  2891                           	opt stack 25
  2892                           
  2893                           ;incstack = 0
  2894                           ;OpenADC@config stored from wreg
  2895  002A38  0100               	movlb	0	; () banked
  2896  002A3A  6F76               	movwf	OpenADC@config& (0+255),b
  2897                           
  2898                           ; BSR set to: 0
  2899  002A3C  0E00               	movlw	0
  2900  002A3E  6EC2               	movwf	4034,c	;volatile
  2901  002A40  0E00               	movlw	0
  2902  002A42  6EC0               	movwf	4032,c	;volatile
  2903                           
  2904                           ; BSR set to: 0
  2905  002A44  0100               	movlb	0	; () banked
  2906  002A46  90D8               	bcf	status,0,c
  2907  002A48  3172               	rrcf	OpenADC@config2& (0+255),w,b
  2908  002A4A  0B3C               	andlw	60
  2909  002A4C  6EC2               	movwf	4034,c	;volatile
  2910                           
  2911                           ; BSR set to: 0
  2912  002A4E  C072  F074         	movff	OpenADC@config2,??_OpenADC
  2913  002A52  0100               	movlb	0	; () banked
  2914  002A54  3B74               	swapf	??_OpenADC& (0+255),f,b
  2915  002A56  0EF0               	movlw	240
  2916  002A58  1774               	andwf	??_OpenADC& (0+255),f,b
  2917  002A5A  0E30               	movlw	48
  2918  002A5C  0100               	movlb	0	; () banked
  2919  002A5E  1774               	andwf	??_OpenADC& (0+255),f,b
  2920  002A60  0100               	movlb	0	; () banked
  2921  002A62  5173               	movf	OpenADC@portconfig& (0+255),w,b
  2922  002A64  0B0F               	andlw	15
  2923  002A66  0100               	movlb	0	; () banked
  2924  002A68  1174               	iorwf	??_OpenADC& (0+255),w,b
  2925  002A6A  6EC1               	movwf	4033,c	;volatile
  2926                           
  2927                           ; BSR set to: 0
  2928  002A6C  C076  F074         	movff	OpenADC@config,??_OpenADC
  2929  002A70  0100               	movlb	0	; () banked
  2930  002A72  90D8               	bcf	status,0,c
  2931  002A74  3774               	rlcf	??_OpenADC& (0+255),f,b
  2932  002A76  0100               	movlb	0	; () banked
  2933  002A78  90D8               	bcf	status,0,c
  2934  002A7A  3774               	rlcf	??_OpenADC& (0+255),f,b
  2935  002A7C  0E38               	movlw	56
  2936  002A7E  0100               	movlb	0	; () banked
  2937  002A80  1774               	andwf	??_OpenADC& (0+255),f,b
  2938  002A82  C076  F075         	movff	OpenADC@config,??_OpenADC+1
  2939  002A86  0100               	movlb	0	; () banked
  2940  002A88  3B75               	swapf	(??_OpenADC+1)& (0+255),f,b
  2941  002A8A  0E0F               	movlw	15
  2942  002A8C  1775               	andwf	(??_OpenADC+1)& (0+255),f,b
  2943  002A8E  0E07               	movlw	7
  2944  002A90  0100               	movlb	0	; () banked
  2945  002A92  1775               	andwf	(??_OpenADC+1)& (0+255),f,b
  2946  002A94  0100               	movlb	0	; () banked
  2947  002A96  5176               	movf	OpenADC@config& (0+255),w,b
  2948  002A98  0B80               	andlw	128
  2949  002A9A  0100               	movlb	0	; () banked
  2950  002A9C  1175               	iorwf	(??_OpenADC+1)& (0+255),w,b
  2951  002A9E  0100               	movlb	0	; () banked
  2952  002AA0  1174               	iorwf	??_OpenADC& (0+255),w,b
  2953  002AA2  6EC0               	movwf	4032,c	;volatile
  2954                           
  2955                           ; BSR set to: 0
  2956  002AA4  0100               	movlb	0	; () banked
  2957  002AA6  AF72               	btfss	OpenADC@config2& (0+255),7,b
  2958  002AA8  D003               	goto	l662
  2959                           
  2960                           ; BSR set to: 0
  2961  002AAA  9C9E               	bcf	3998,6,c	;volatile
  2962  002AAC  8C9D               	bsf	3997,6,c	;volatile
  2963  002AAE  8CF2               	bsf	intcon,6,c	;volatile
  2964  002AB0                     l662:
  2965                           
  2966                           ; BSR set to: 0
  2967  002AB0  80C2               	bsf	4034,0,c	;volatile
  2968                           
  2969                           ; BSR set to: 0
  2970  002AB2  0012               	return		;funcret
  2971  002AB4                     __end_of_OpenADC:
  2972                           	opt stack 0
  2973                           tblptru	equ	0xFF8
  2974                           tblptrh	equ	0xFF7
  2975                           tblptrl	equ	0xFF6
  2976                           tablat	equ	0xFF5
  2977                           prodh	equ	0xFF4
  2978                           prodl	equ	0xFF3
  2979                           intcon	equ	0xFF2
  2980                           intcon2	equ	0xFF1
  2981                           postinc0	equ	0xFEE
  2982                           wreg	equ	0xFE8
  2983                           postdec1	equ	0xFE5
  2984                           fsr1l	equ	0xFE1
  2985                           indf2	equ	0xFDF
  2986                           fsr2h	equ	0xFDA
  2987                           fsr2l	equ	0xFD9
  2988                           status	equ	0xFD8
  2989                           
  2990 ;; *************** function _CANInitialize *****************
  2991 ;; Defined at:
  2992 ;;		line 218 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  propSeg         1    wreg     unsigned char 
  2995 ;;  phaseSeg1       1   32[BANK0 ] unsigned char 
  2996 ;;  phaseSeg2       1   33[BANK0 ] unsigned char 
  2997 ;;  SJW             1   34[BANK0 ] unsigned char 
  2998 ;;  BRP             1   35[BANK0 ] unsigned char 
  2999 ;;  flags           1   36[BANK0 ] enum E16885
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  propSeg         1   41[BANK0 ] unsigned char 
  3002 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  3003 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;		None               void
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3013 ;;      Params:         0       5       0       0
  3014 ;;      Locals:         0       3       0       0
  3015 ;;      Temps:          0       4       0       0
  3016 ;;      Totals:         0      12       0       0
  3017 ;;Total ram usage:       12 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    5
  3020 ;; This function calls:
  3021 ;;		_CANOperationMode
  3022 ;;		_CANSetFilter
  3023 ;;		_CANSetMask
  3024 ;; This function is called by:
  3025 ;;		_configurazione_iniziale
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text8
  3030  0023FE                     __ptext8:
  3031                           	opt stack 0
  3032  0023FE                     _CANInitialize:
  3033                           	opt stack 24
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;incstack = 0
  3037                           ;CANInitialize@propSeg stored from wreg
  3038  0023FE  0100               	movlb	0	; () banked
  3039  002400  6F89               	movwf	CANInitialize@propSeg& (0+255),b
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3043                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3044                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3045  002402  0E80               	movlw	128
  3046  002404  ECAB  F016         	call	_CANOperationMode
  3047                           
  3048                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3049  002408  0E00               	movlw	0
  3050  00240A  6E70               	movwf	3952,c	;volatile
  3051                           
  3052                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3053  00240C  0E00               	movlw	0
  3054  00240E  6E71               	movwf	3953,c	;volatile
  3055                           
  3056                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3057  002410  0E00               	movlw	0
  3058  002412  6E72               	movwf	3954,c	;volatile
  3059                           
  3060                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3061  002414  0100               	movlb	0	; () banked
  3062  002416  4182               	rrncf	CANInitialize@SJW& (0+255),w,b
  3063  002418  42E8               	rrncf	wreg,f,c
  3064  00241A  0BC0               	andlw	192
  3065  00241C  0100               	movlb	0	; () banked
  3066  00241E  6F82               	movwf	CANInitialize@SJW& (0+255),b
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3070  002420  0100               	movlb	0	; () banked
  3071  002422  5182               	movf	CANInitialize@SJW& (0+255),w,b
  3072  002424  1270               	iorwf	3952,f,c	;volatile
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3076  002426  0100               	movlb	0	; () banked
  3077  002428  5183               	movf	CANInitialize@BRP& (0+255),w,b
  3078  00242A  1270               	iorwf	3952,f,c	;volatile
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3082  00242C  0100               	movlb	0	; () banked
  3083  00242E  5189               	movf	CANInitialize@propSeg& (0+255),w,b
  3084  002430  1271               	iorwf	3953,f,c	;volatile
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3088  002432  0100               	movlb	0	; () banked
  3089  002434  3980               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3090  002436  42E8               	rrncf	wreg,f,c
  3091  002438  0BF8               	andlw	248
  3092  00243A  0100               	movlb	0	; () banked
  3093  00243C  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3097  00243E  0100               	movlb	0	; () banked
  3098  002440  5180               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3099  002442  1271               	iorwf	3953,f,c	;volatile
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3103  002444  0100               	movlb	0	; () banked
  3104  002446  A584               	btfss	CANInitialize@flags& (0+255),2,b
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3108  002448  8C71               	bsf	3953,6,c	;volatile
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3112  00244A  0100               	movlb	0	; () banked
  3113  00244C  A184               	btfss	CANInitialize@flags& (0+255),0,b
  3114  00244E  D002               	goto	l3143
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3118  002450  8E71               	bsf	3953,7,c	;volatile
  3119  002452  D000               	goto	l3143
  3120  002454                     l3143:
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3124  002454  0100               	movlb	0	; () banked
  3125  002456  5181               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3126  002458  1272               	iorwf	3954,f,c	;volatile
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3130  00245A  0100               	movlb	0	; () banked
  3131  00245C  A384               	btfss	CANInitialize@flags& (0+255),1,b
  3132  00245E  D002               	goto	l3149
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3136  002460  8C72               	bsf	3954,6,c	;volatile
  3137  002462  D000               	goto	l3149
  3138  002464                     l3149:
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3142  002464  0100               	movlb	0	; () banked
  3143  002466  5184               	movf	CANInitialize@flags& (0+255),w,b
  3144  002468  0B60               	andlw	96
  3145  00246A  6E60               	movwf	3936,c	;volatile
  3146                           
  3147                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3148  00246C  0100               	movlb	0	; () banked
  3149  00246E  5184               	movf	CANInitialize@flags& (0+255),w,b
  3150  002470  0B10               	andlw	16
  3151  002472  0AFF               	xorlw	255
  3152  002474  B4D8               	btfsc	status,2,c
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3156  002476  8460               	bsf	3936,2,c	;volatile
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3160  002478  CF60 FF50          	movff	3936,3920	;volatile
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3164  00247C  0E00               	movlw	0
  3165  00247E  0100               	movlb	0	; () banked
  3166  002480  6F72               	movwf	CANSetMask@mask& (0+255),b
  3167  002482  0E00               	movlw	0
  3168  002484  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  3169  002486  0E00               	movlw	0
  3170  002488  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  3171  00248A  0E00               	movlw	0
  3172  00248C  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  3173  00248E  0EF7               	movlw	247
  3174  002490  0100               	movlb	0	; () banked
  3175  002492  6F76               	movwf	CANSetMask@type& (0+255),b
  3176  002494  0E01               	movlw	1
  3177  002496  EC2A  F010         	call	_CANSetMask
  3178                           
  3179                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3180  00249A  0E00               	movlw	0
  3181  00249C  0100               	movlb	0	; () banked
  3182  00249E  6F72               	movwf	CANSetMask@mask& (0+255),b
  3183  0024A0  0E00               	movlw	0
  3184  0024A2  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  3185  0024A4  0E00               	movlw	0
  3186  0024A6  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  3187  0024A8  0E00               	movlw	0
  3188  0024AA  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  3189  0024AC  0EF7               	movlw	247
  3190  0024AE  0100               	movlb	0	; () banked
  3191  0024B0  6F76               	movwf	CANSetMask@type& (0+255),b
  3192  0024B2  0E02               	movlw	2
  3193  0024B4  EC2A  F010         	call	_CANSetMask
  3194                           
  3195                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3196  0024B8  D00F               	goto	l3161
  3197  0024BA                     l3155:
  3198                           
  3199                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3200  0024BA  0EF7               	movlw	247
  3201  0024BC  0100               	movlb	0	; () banked
  3202  0024BE  6F8A               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3203  0024C0  D007               	goto	l3157
  3204  0024C2                     l344:
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3208  0024C2  0100               	movlb	0	; () banked
  3209  0024C4  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  3210                           
  3211                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3212  0024C6  0100               	movlb	0	; () banked
  3213  0024C8  698B               	setf	CANInitialize@FilterConfig2& (0+255),b
  3214                           
  3215                           ;inc\CANlib.h: 273: break;
  3216  0024CA  D028               	goto	l3163
  3217  0024CC                     l345:
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3221  0024CC  0100               	movlb	0	; () banked
  3222  0024CE  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  3223  0024D0                     l3157:
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3227  0024D0  0EF7               	movlw	247
  3228  0024D2  0100               	movlb	0	; () banked
  3229  0024D4  6F8B               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;inc\CANlib.h: 278: }
  3233                           
  3234                           ;inc\CANlib.h: 277: break;
  3235  0024D6  D022               	goto	l3163
  3236  0024D8                     l3161:
  3237  0024D8  0E9F               	movlw	159
  3238  0024DA  0100               	movlb	0	; () banked
  3239  0024DC  6F85               	movwf	??_CANInitialize& (0+255),b
  3240  0024DE  0EFF               	movlw	255
  3241  0024E0  0100               	movlb	0	; () banked
  3242  0024E2  6F86               	movwf	(??_CANInitialize+1)& (0+255),b
  3243  0024E4  0100               	movlb	0	; () banked
  3244  0024E6  5184               	movf	CANInitialize@flags& (0+255),w,b
  3245  0024E8  0B60               	andlw	96
  3246  0024EA  0100               	movlb	0	; () banked
  3247  0024EC  6F87               	movwf	(??_CANInitialize+2)& (0+255),b
  3248  0024EE  6B88               	clrf	(??_CANInitialize+3)& (0+255),b
  3249  0024F0  0100               	movlb	0	; () banked
  3250  0024F2  5185               	movf	??_CANInitialize& (0+255),w,b
  3251  0024F4  0100               	movlb	0	; () banked
  3252  0024F6  1387               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3253  0024F8  0100               	movlb	0	; () banked
  3254  0024FA  5186               	movf	(??_CANInitialize+1)& (0+255),w,b
  3255  0024FC  0100               	movlb	0	; () banked
  3256  0024FE  1388               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3257                           
  3258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3259                           ; Switch size 1, requested type "space"
  3260                           ; Number of cases is 1, Range of values is 0 to 0
  3261                           ; switch strategies available:
  3262                           ; Name         Instructions Cycles
  3263                           ; simple_byte            4     3 (average)
  3264                           ;	Chosen strategy is simple_byte
  3265  002500  0100               	movlb	0	; () banked
  3266  002502  5188               	movf	(??_CANInitialize+3)& (0+255),w,b
  3267  002504  0A00               	xorlw	0	; case 0
  3268  002506  A4D8               	btfss	status,2,c
  3269  002508  D7E1               	goto	l345
  3270                           
  3271                           ; BSR set to: 0
  3272                           ; Switch size 1, requested type "space"
  3273                           ; Number of cases is 2, Range of values is 191 to 223
  3274                           ; switch strategies available:
  3275                           ; Name         Instructions Cycles
  3276                           ; simple_byte            7     4 (average)
  3277                           ;	Chosen strategy is simple_byte
  3278  00250A  0100               	movlb	0	; () banked
  3279  00250C  5187               	movf	(??_CANInitialize+2)& (0+255),w,b
  3280  00250E  0ABF               	xorlw	191	; case 191
  3281  002510  B4D8               	btfsc	status,2,c
  3282  002512  D7D7               	goto	l344
  3283  002514  0A60               	xorlw	96	; case 223
  3284  002516  B4D8               	btfsc	status,2,c
  3285  002518  D7D0               	goto	l3155
  3286  00251A  D7D8               	goto	l345
  3287  00251C                     l3163:
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3291  00251C  0E00               	movlw	0
  3292  00251E  0100               	movlb	0	; () banked
  3293  002520  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3294  002522  0E00               	movlw	0
  3295  002524  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3296  002526  0E00               	movlw	0
  3297  002528  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3298  00252A  0E00               	movlw	0
  3299  00252C  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3300  00252E  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3301  002532  0E00               	movlw	0
  3302  002534  ECDC  F000         	call	_CANSetFilter
  3303                           
  3304                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3305  002538  0E00               	movlw	0
  3306  00253A  0100               	movlb	0	; () banked
  3307  00253C  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3308  00253E  0E00               	movlw	0
  3309  002540  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3310  002542  0E00               	movlw	0
  3311  002544  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3312  002546  0E00               	movlw	0
  3313  002548  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3314  00254A  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3315  00254E  0E01               	movlw	1
  3316  002550  ECDC  F000         	call	_CANSetFilter
  3317                           
  3318                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3319  002554  0E00               	movlw	0
  3320  002556  0100               	movlb	0	; () banked
  3321  002558  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3322  00255A  0E00               	movlw	0
  3323  00255C  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3324  00255E  0E00               	movlw	0
  3325  002560  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3326  002562  0E00               	movlw	0
  3327  002564  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3328  002566  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3329  00256A  0E02               	movlw	2
  3330  00256C  ECDC  F000         	call	_CANSetFilter
  3331                           
  3332                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3333  002570  0E00               	movlw	0
  3334  002572  0100               	movlb	0	; () banked
  3335  002574  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3336  002576  0E00               	movlw	0
  3337  002578  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3338  00257A  0E00               	movlw	0
  3339  00257C  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3340  00257E  0E00               	movlw	0
  3341  002580  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3342  002582  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3343  002586  0E03               	movlw	3
  3344  002588  ECDC  F000         	call	_CANSetFilter
  3345                           
  3346                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3347  00258C  0E00               	movlw	0
  3348  00258E  0100               	movlb	0	; () banked
  3349  002590  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3350  002592  0E00               	movlw	0
  3351  002594  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3352  002596  0E00               	movlw	0
  3353  002598  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3354  00259A  0E00               	movlw	0
  3355  00259C  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3356  00259E  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3357  0025A2  0E04               	movlw	4
  3358  0025A4  ECDC  F000         	call	_CANSetFilter
  3359                           
  3360                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3361  0025A8  0E00               	movlw	0
  3362  0025AA  0100               	movlb	0	; () banked
  3363  0025AC  6F72               	movwf	CANSetFilter@filter& (0+255),b
  3364  0025AE  0E00               	movlw	0
  3365  0025B0  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3366  0025B2  0E00               	movlw	0
  3367  0025B4  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3368  0025B6  0E00               	movlw	0
  3369  0025B8  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3370  0025BA  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3371  0025BE  0E05               	movlw	5
  3372  0025C0  ECDC  F000         	call	_CANSetFilter
  3373                           
  3374                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3375  0025C4  0E00               	movlw	0
  3376  0025C6  ECAB  F016         	call	_CANOperationMode
  3377  0025CA  0012               	return		;funcret
  3378  0025CC                     __end_of_CANInitialize:
  3379                           	opt stack 0
  3380                           tblptru	equ	0xFF8
  3381                           tblptrh	equ	0xFF7
  3382                           tblptrl	equ	0xFF6
  3383                           tablat	equ	0xFF5
  3384                           prodh	equ	0xFF4
  3385                           prodl	equ	0xFF3
  3386                           intcon	equ	0xFF2
  3387                           intcon2	equ	0xFF1
  3388                           postinc0	equ	0xFEE
  3389                           wreg	equ	0xFE8
  3390                           postdec1	equ	0xFE5
  3391                           fsr1l	equ	0xFE1
  3392                           indf2	equ	0xFDF
  3393                           fsr2h	equ	0xFDA
  3394                           fsr2l	equ	0xFD9
  3395                           status	equ	0xFD8
  3396                           
  3397 ;; *************** function _CANSetMask *****************
  3398 ;; Defined at:
  3399 ;;		line 640 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  numBuffer       1    wreg     enum E16919
  3402 ;;  mask            4   18[BANK0 ] unsigned long 
  3403 ;;  type            1   22[BANK0 ] enum E16885
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  numBuffer       1   27[BANK0 ] enum E16919
  3406 ;;  tamp            4   28[BANK0 ] unsigned long 
  3407 ;; Return value:  Size  Location     Type
  3408 ;;		None               void
  3409 ;; Registers used:
  3410 ;;		wreg, status,2, status,0
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3416 ;;      Params:         0       5       0       0
  3417 ;;      Locals:         0       5       0       0
  3418 ;;      Temps:          0       4       0       0
  3419 ;;      Totals:         0      14       0       0
  3420 ;;Total ram usage:       14 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:    4
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_CANInitialize
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text9
  3431  002054                     __ptext9:
  3432                           	opt stack 0
  3433  002054                     _CANSetMask:
  3434                           	opt stack 24
  3435                           
  3436                           ;incstack = 0
  3437                           ;CANSetMask@numBuffer stored from wreg
  3438  002054  0100               	movlb	0	; () banked
  3439  002056  6F7B               	movwf	CANSetMask@numBuffer& (0+255),b
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3443  002058  0100               	movlb	0	; () banked
  3444  00205A  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  3445  00205C  A4D8               	btfss	status,2,c
  3446  00205E  D057               	goto	l2725
  3447                           
  3448                           ; BSR set to: 0
  3449  002060  0100               	movlb	0	; () banked
  3450  002062  2976               	incf	CANSetMask@type& (0+255),w,b
  3451  002064  A4D8               	btfss	status,2,c
  3452  002066  D053               	goto	l2725
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;inc\CANlib.h: 644: {
  3456                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3457  002068  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3458  00206C  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3459  002070  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3460  002074  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3461  002078  0E04               	movlw	4
  3462  00207A  D006               	goto	u2490
  3463  00207C                     u2495:
  3464  00207C  0100               	movlb	0	; () banked
  3465  00207E  90D8               	bcf	status,0,c
  3466  002080  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3467  002082  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3468  002084  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3469  002086  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3470  002088                     u2490:
  3471  002088  2EE8               	decfsz	wreg,f,c
  3472  00208A  D7F8               	goto	u2495
  3473  00208C  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3474  002090  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3475  002094  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3476  002098  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3480  00209C  0100               	movlb	0	; () banked
  3481  00209E  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3482  0020A0  0100               	movlb	0	; () banked
  3483  0020A2  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3484  0020A4  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3485  0020A6  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3486  0020A8  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3490  0020AA  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3494  0020AE  0E07               	movlw	7
  3495  0020B0  0100               	movlb	0	; () banked
  3496  0020B2  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3497  0020B4  0100               	movlb	0	; () banked
  3498  0020B6  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3499  0020B8  0E00               	movlw	0
  3500  0020BA  0100               	movlb	0	; () banked
  3501  0020BC  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3502  0020BE  0100               	movlb	0	; () banked
  3503  0020C0  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3504  0020C2  0E00               	movlw	0
  3505  0020C4  0100               	movlb	0	; () banked
  3506  0020C6  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3507  0020C8  0100               	movlb	0	; () banked
  3508  0020CA  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3509  0020CC  0E00               	movlw	0
  3510  0020CE  0100               	movlb	0	; () banked
  3511  0020D0  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3512  0020D2  0100               	movlb	0	; () banked
  3513  0020D4  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3517  0020D6  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3518  0020DA  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3519  0020DE  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3520  0020E2  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3521  0020E6  0E05               	movlw	5
  3522  0020E8                     u2505:
  3523  0020E8  90D8               	bcf	status,0,c
  3524  0020EA  0100               	movlb	0	; () banked
  3525  0020EC  3777               	rlcf	??_CANSetMask& (0+255),f,b
  3526  0020EE  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3527  0020F0  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3528  0020F2  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3529  0020F4  2EE8               	decfsz	wreg,f,c
  3530  0020F6  D7F8               	goto	u2505
  3531  0020F8  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3532  0020FC  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3533  002100  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3534  002104  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3538  002108  C07C  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3539  00210C  D000               	goto	l2725
  3540  00210E                     l2725:
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;inc\CANlib.h: 652: }
  3544                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3545  00210E  0E02               	movlw	2
  3546  002110  0100               	movlb	0	; () banked
  3547  002112  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3548  002114  A4D8               	btfss	status,2,c
  3549  002116  D057               	goto	l2741
  3550                           
  3551                           ; BSR set to: 0
  3552  002118  0100               	movlb	0	; () banked
  3553  00211A  2976               	incf	CANSetMask@type& (0+255),w,b
  3554  00211C  A4D8               	btfss	status,2,c
  3555  00211E  D053               	goto	l2741
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;inc\CANlib.h: 655: {
  3559                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3560  002120  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3561  002124  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3562  002128  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3563  00212C  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3564  002130  0E04               	movlw	4
  3565  002132  D006               	goto	u2530
  3566  002134                     u2535:
  3567  002134  0100               	movlb	0	; () banked
  3568  002136  90D8               	bcf	status,0,c
  3569  002138  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3570  00213A  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3571  00213C  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3572  00213E  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3573  002140                     u2530:
  3574  002140  2EE8               	decfsz	wreg,f,c
  3575  002142  D7F8               	goto	u2535
  3576  002144  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3577  002148  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3578  00214C  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3579  002150  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3583  002154  0100               	movlb	0	; () banked
  3584  002156  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3585  002158  0100               	movlb	0	; () banked
  3586  00215A  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3587  00215C  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3588  00215E  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3589  002160  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3593  002162  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3597  002166  0E07               	movlw	7
  3598  002168  0100               	movlb	0	; () banked
  3599  00216A  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3600  00216C  0100               	movlb	0	; () banked
  3601  00216E  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3602  002170  0E00               	movlw	0
  3603  002172  0100               	movlb	0	; () banked
  3604  002174  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3605  002176  0100               	movlb	0	; () banked
  3606  002178  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3607  00217A  0E00               	movlw	0
  3608  00217C  0100               	movlb	0	; () banked
  3609  00217E  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3610  002180  0100               	movlb	0	; () banked
  3611  002182  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3612  002184  0E00               	movlw	0
  3613  002186  0100               	movlb	0	; () banked
  3614  002188  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3615  00218A  0100               	movlb	0	; () banked
  3616  00218C  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3620  00218E  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3621  002192  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3622  002196  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3623  00219A  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3624  00219E  0E05               	movlw	5
  3625  0021A0                     u2545:
  3626  0021A0  90D8               	bcf	status,0,c
  3627  0021A2  0100               	movlb	0	; () banked
  3628  0021A4  3777               	rlcf	??_CANSetMask& (0+255),f,b
  3629  0021A6  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3630  0021A8  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3631  0021AA  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3632  0021AC  2EE8               	decfsz	wreg,f,c
  3633  0021AE  D7F8               	goto	u2545
  3634  0021B0  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3635  0021B4  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3636  0021B8  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3637  0021BC  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3641  0021C0  C07C  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3642  0021C4  D000               	goto	l2741
  3643  0021C6                     l2741:
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;inc\CANlib.h: 663: }
  3647                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3648  0021C6  0100               	movlb	0	; () banked
  3649  0021C8  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  3650  0021CA  A4D8               	btfss	status,2,c
  3651  0021CC  D089               	goto	l2773
  3652                           
  3653                           ; BSR set to: 0
  3654  0021CE  0EF7               	movlw	247
  3655  0021D0  0100               	movlb	0	; () banked
  3656  0021D2  1976               	xorwf	CANSetMask@type& (0+255),w,b
  3657  0021D4  A4D8               	btfss	status,2,c
  3658  0021D6  D084               	goto	l2773
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;inc\CANlib.h: 666: {
  3662                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3663  0021D8  0100               	movlb	0	; () banked
  3664  0021DA  5172               	movf	CANSetMask@mask& (0+255),w,b
  3665  0021DC  0100               	movlb	0	; () banked
  3666  0021DE  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3667  0021E0  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3668  0021E2  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3669  0021E4  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3673  0021E6  C07C  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3677  0021EA  0E00               	movlw	0
  3678  0021EC  0100               	movlb	0	; () banked
  3679  0021EE  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3680  0021F0  0100               	movlb	0	; () banked
  3681  0021F2  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3682  0021F4  0EFF               	movlw	255
  3683  0021F6  0100               	movlb	0	; () banked
  3684  0021F8  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3685  0021FA  0100               	movlb	0	; () banked
  3686  0021FC  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3687  0021FE  0E00               	movlw	0
  3688  002200  0100               	movlb	0	; () banked
  3689  002202  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3690  002204  0100               	movlb	0	; () banked
  3691  002206  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3692  002208  0E00               	movlw	0
  3693  00220A  0100               	movlb	0	; () banked
  3694  00220C  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3695  00220E  0100               	movlb	0	; () banked
  3696  002210  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3700  002212  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3701  002216  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3702  00221A  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3703  00221E  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3704  002222  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  3705  002226  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  3706  00222A  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  3707  00222E  0100               	movlb	0	; () banked
  3708  002230  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  3709  002232  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3710  002236  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3711  00223A  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3712  00223E  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3716  002242  C07C  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3720  002246  0100               	movlb	0	; () banked
  3721  002248  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3722  00224A  D003               	goto	l418
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3726  00224C  010F               	movlb	15	; () banked
  3727  00224E  8119               	bsf	25,0,b	;volatile
  3728  002250  D002               	goto	l419
  3729  002252                     l418:
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;inc\CANlib.h: 676: else
  3733                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3734  002252  010F               	movlb	15	; () banked
  3735  002254  9119               	bcf	25,0,b	;volatile
  3736  002256                     l419:
  3737                           
  3738                           ; BSR set to: 15
  3739                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3740  002256  0100               	movlb	0	; () banked
  3741  002258  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3742  00225A  D003               	goto	l420
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3746  00225C  010F               	movlb	15	; () banked
  3747  00225E  8319               	bsf	25,1,b	;volatile
  3748  002260  D002               	goto	l421
  3749  002262                     l420:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;inc\CANlib.h: 681: else
  3753                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3754  002262  010F               	movlb	15	; () banked
  3755  002264  9319               	bcf	25,1,b	;volatile
  3756  002266                     l421:
  3757                           
  3758                           ; BSR set to: 15
  3759                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3760  002266  0100               	movlb	0	; () banked
  3761  002268  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3762  00226A  D003               	goto	l422
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3766  00226C  010F               	movlb	15	; () banked
  3767  00226E  8B19               	bsf	25,5,b	;volatile
  3768  002270  D002               	goto	l423
  3769  002272                     l422:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;inc\CANlib.h: 686: else
  3773                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3774  002272  010F               	movlb	15	; () banked
  3775  002274  9B19               	bcf	25,5,b	;volatile
  3776  002276                     l423:
  3777                           
  3778                           ; BSR set to: 15
  3779                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3780  002276  0100               	movlb	0	; () banked
  3781  002278  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3782  00227A  D003               	goto	l424
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3786  00227C  010F               	movlb	15	; () banked
  3787  00227E  8D19               	bsf	25,6,b	;volatile
  3788  002280  D002               	goto	l425
  3789  002282                     l424:
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;inc\CANlib.h: 691: else
  3793                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3794  002282  010F               	movlb	15	; () banked
  3795  002284  9D19               	bcf	25,6,b	;volatile
  3796  002286                     l425:
  3797                           
  3798                           ; BSR set to: 15
  3799                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3800  002286  0100               	movlb	0	; () banked
  3801  002288  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3802  00228A  D003               	goto	l426
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3806  00228C  010F               	movlb	15	; () banked
  3807  00228E  8F19               	bsf	25,7,b	;volatile
  3808  002290  D003               	goto	l2767
  3809  002292                     l426:
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;inc\CANlib.h: 696: else
  3813                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3814  002292  010F               	movlb	15	; () banked
  3815  002294  9F19               	bcf	25,7,b	;volatile
  3816  002296  D000               	goto	l2767
  3817  002298                     l2767:
  3818                           
  3819                           ; BSR set to: 15
  3820                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3821  002298  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  3822  00229C  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3823  0022A0  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3824  0022A4  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3825  0022A8  0E16               	movlw	22
  3826  0022AA  D006               	goto	u2620
  3827  0022AC                     u2625:
  3828  0022AC  0100               	movlb	0	; () banked
  3829  0022AE  90D8               	bcf	status,0,c
  3830  0022B0  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3831  0022B2  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3832  0022B4  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3833  0022B6  3377               	rrcf	??_CANSetMask& (0+255),f,b
  3834  0022B8                     u2620:
  3835  0022B8  2EE8               	decfsz	wreg,f,c
  3836  0022BA  D7F8               	goto	u2625
  3837  0022BC  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3838  0022C0  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3839  0022C4  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3840  0022C8  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3844  0022CC  0100               	movlb	0	; () banked
  3845  0022CE  517C               	movf	CANSetMask@tamp& (0+255),w,b
  3846  0022D0  0100               	movlb	0	; () banked
  3847  0022D2  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3848  0022D4  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3849  0022D6  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3850  0022D8  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3854  0022DA  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3855  0022DE  D000               	goto	l2773
  3856  0022E0                     l2773:
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;inc\CANlib.h: 702: }
  3860                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3861  0022E0  0E02               	movlw	2
  3862  0022E2  0100               	movlb	0	; () banked
  3863  0022E4  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3864  0022E6  A4D8               	btfss	status,2,c
  3865  0022E8  D089               	goto	l439
  3866                           
  3867                           ; BSR set to: 0
  3868  0022EA  0EF7               	movlw	247
  3869  0022EC  0100               	movlb	0	; () banked
  3870  0022EE  1976               	xorwf	CANSetMask@type& (0+255),w,b
  3871  0022F0  A4D8               	btfss	status,2,c
  3872  0022F2  D084               	goto	l439
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;inc\CANlib.h: 705: {
  3876                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3877  0022F4  0100               	movlb	0	; () banked
  3878  0022F6  5172               	movf	CANSetMask@mask& (0+255),w,b
  3879  0022F8  0100               	movlb	0	; () banked
  3880  0022FA  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3881  0022FC  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3882  0022FE  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3883  002300  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3887  002302  C07C  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3891  002306  0E00               	movlw	0
  3892  002308  0100               	movlb	0	; () banked
  3893  00230A  1572               	andwf	CANSetMask@mask& (0+255),w,b
  3894  00230C  0100               	movlb	0	; () banked
  3895  00230E  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  3896  002310  0EFF               	movlw	255
  3897  002312  0100               	movlb	0	; () banked
  3898  002314  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3899  002316  0100               	movlb	0	; () banked
  3900  002318  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3901  00231A  0E00               	movlw	0
  3902  00231C  0100               	movlb	0	; () banked
  3903  00231E  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3904  002320  0100               	movlb	0	; () banked
  3905  002322  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3906  002324  0E00               	movlw	0
  3907  002326  0100               	movlb	0	; () banked
  3908  002328  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3909  00232A  0100               	movlb	0	; () banked
  3910  00232C  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3914  00232E  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  3915  002332  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3916  002336  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3917  00233A  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3918  00233E  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  3919  002342  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  3920  002346  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  3921  00234A  0100               	movlb	0	; () banked
  3922  00234C  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  3923  00234E  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  3924  002352  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3925  002356  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3926  00235A  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3930  00235E  C07C  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3934  002362  0100               	movlb	0	; () banked
  3935  002364  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3936  002366  D003               	goto	l429
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3940  002368  010F               	movlb	15	; () banked
  3941  00236A  811D               	bsf	29,0,b	;volatile
  3942  00236C  D002               	goto	l430
  3943  00236E                     l429:
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;inc\CANlib.h: 715: else
  3947                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3948  00236E  010F               	movlb	15	; () banked
  3949  002370  911D               	bcf	29,0,b	;volatile
  3950  002372                     l430:
  3951                           
  3952                           ; BSR set to: 15
  3953                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3954  002372  0100               	movlb	0	; () banked
  3955  002374  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3956  002376  D003               	goto	l431
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3960  002378  010F               	movlb	15	; () banked
  3961  00237A  831D               	bsf	29,1,b	;volatile
  3962  00237C  D002               	goto	l432
  3963  00237E                     l431:
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;inc\CANlib.h: 720: else
  3967                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3968  00237E  010F               	movlb	15	; () banked
  3969  002380  931D               	bcf	29,1,b	;volatile
  3970  002382                     l432:
  3971                           
  3972                           ; BSR set to: 15
  3973                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3974  002382  0100               	movlb	0	; () banked
  3975  002384  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3976  002386  D003               	goto	l433
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3980  002388  010F               	movlb	15	; () banked
  3981  00238A  8B1D               	bsf	29,5,b	;volatile
  3982  00238C  D002               	goto	l434
  3983  00238E                     l433:
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;inc\CANlib.h: 725: else
  3987                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3988  00238E  010F               	movlb	15	; () banked
  3989  002390  9B1D               	bcf	29,5,b	;volatile
  3990  002392                     l434:
  3991                           
  3992                           ; BSR set to: 15
  3993                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3994  002392  0100               	movlb	0	; () banked
  3995  002394  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3996  002396  D003               	goto	l435
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4000  002398  010F               	movlb	15	; () banked
  4001  00239A  8D1D               	bsf	29,6,b	;volatile
  4002  00239C  D002               	goto	l436
  4003  00239E                     l435:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;inc\CANlib.h: 730: else
  4007                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4008  00239E  010F               	movlb	15	; () banked
  4009  0023A0  9D1D               	bcf	29,6,b	;volatile
  4010  0023A2                     l436:
  4011                           
  4012                           ; BSR set to: 15
  4013                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4014  0023A2  0100               	movlb	0	; () banked
  4015  0023A4  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4016  0023A6  D003               	goto	l437
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4020  0023A8  010F               	movlb	15	; () banked
  4021  0023AA  8F1D               	bsf	29,7,b	;volatile
  4022  0023AC  D003               	goto	l2799
  4023  0023AE                     l437:
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;inc\CANlib.h: 735: else
  4027                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4028  0023AE  010F               	movlb	15	; () banked
  4029  0023B0  9F1D               	bcf	29,7,b	;volatile
  4030  0023B2  D000               	goto	l2799
  4031  0023B4                     l2799:
  4032                           
  4033                           ; BSR set to: 15
  4034                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4035  0023B4  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  4036  0023B8  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4037  0023BC  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4038  0023C0  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4039  0023C4  0E16               	movlw	22
  4040  0023C6  D006               	goto	u2700
  4041  0023C8                     u2705:
  4042  0023C8  0100               	movlb	0	; () banked
  4043  0023CA  90D8               	bcf	status,0,c
  4044  0023CC  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4045  0023CE  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4046  0023D0  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4047  0023D2  3377               	rrcf	??_CANSetMask& (0+255),f,b
  4048  0023D4                     u2700:
  4049  0023D4  2EE8               	decfsz	wreg,f,c
  4050  0023D6  D7F8               	goto	u2705
  4051  0023D8  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  4052  0023DC  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4053  0023E0  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4054  0023E4  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4058  0023E8  0100               	movlb	0	; () banked
  4059  0023EA  517C               	movf	CANSetMask@tamp& (0+255),w,b
  4060  0023EC  0100               	movlb	0	; () banked
  4061  0023EE  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  4062  0023F0  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4063  0023F2  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4064  0023F4  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4068  0023F6  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4069  0023FA  D000               	goto	l439
  4070  0023FC                     l439:
  4071                           
  4072                           ; BSR set to: 0
  4073  0023FC  0012               	return		;funcret
  4074  0023FE                     __end_of_CANSetMask:
  4075                           	opt stack 0
  4076                           tblptru	equ	0xFF8
  4077                           tblptrh	equ	0xFF7
  4078                           tblptrl	equ	0xFF6
  4079                           tablat	equ	0xFF5
  4080                           prodh	equ	0xFF4
  4081                           prodl	equ	0xFF3
  4082                           intcon	equ	0xFF2
  4083                           intcon2	equ	0xFF1
  4084                           postinc0	equ	0xFEE
  4085                           wreg	equ	0xFE8
  4086                           postdec1	equ	0xFE5
  4087                           fsr1l	equ	0xFE1
  4088                           indf2	equ	0xFDF
  4089                           fsr2h	equ	0xFDA
  4090                           fsr2l	equ	0xFD9
  4091                           status	equ	0xFD8
  4092                           
  4093 ;; *************** function _CANSetFilter *****************
  4094 ;; Defined at:
  4095 ;;		line 748 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  numBuffer       1    wreg     enum E16922
  4098 ;;  filter          4   18[BANK0 ] unsigned long 
  4099 ;;  type            1   22[BANK0 ] enum E16885
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  numBuffer       1   27[BANK0 ] enum E16922
  4102 ;;  tamp            4   28[BANK0 ] unsigned long 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;		None               void
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4112 ;;      Params:         0       5       0       0
  4113 ;;      Locals:         0       5       0       0
  4114 ;;      Temps:          0       4       0       0
  4115 ;;      Totals:         0      14       0       0
  4116 ;;Total ram usage:       14 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    4
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_CANInitialize
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text10
  4127  0001B8                     __ptext10:
  4128                           	opt stack 0
  4129  0001B8                     _CANSetFilter:
  4130                           	opt stack 24
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;incstack = 0
  4134                           ;CANSetFilter@numBuffer stored from wreg
  4135  0001B8  0100               	movlb	0	; () banked
  4136  0001BA  6F7B               	movwf	CANSetFilter@numBuffer& (0+255),b
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;inc\CANlib.h: 750: unsigned long tamp;
  4140                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4141  0001BC  0100               	movlb	0	; () banked
  4142  0001BE  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4143  0001C0  0100               	movlb	0	; () banked
  4144  0001C2  A4D8               	btfss	status,2,c
  4145  0001C4  D059               	goto	l2823
  4146                           
  4147                           ; BSR set to: 0
  4148  0001C6  0100               	movlb	0	; () banked
  4149  0001C8  2976               	incf	CANSetFilter@type& (0+255),w,b
  4150  0001CA  A4D8               	btfss	status,2,c
  4151  0001CC  D055               	goto	l2823
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;inc\CANlib.h: 753: {
  4155                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4156  0001CE  010F               	movlb	15	; () banked
  4157  0001D0  9701               	bcf	1,3,b	;volatile
  4158                           
  4159                           ; BSR set to: 15
  4160                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4161  0001D2  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4162  0001D6  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4163  0001DA  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4164  0001DE  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4165  0001E2  0E04               	movlw	4
  4166  0001E4  D006               	goto	u2730
  4167  0001E6                     u2735:
  4168  0001E6  0100               	movlb	0	; () banked
  4169  0001E8  90D8               	bcf	status,0,c
  4170  0001EA  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4171  0001EC  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4172  0001EE  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4173  0001F0  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4174  0001F2                     u2730:
  4175  0001F2  2EE8               	decfsz	wreg,f,c
  4176  0001F4  D7F8               	goto	u2735
  4177  0001F6  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4178  0001FA  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4179  0001FE  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4180  000202  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4184  000206  0100               	movlb	0	; () banked
  4185  000208  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4186  00020A  0100               	movlb	0	; () banked
  4187  00020C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4188  00020E  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4189  000210  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4190  000212  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4194  000214  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4198  000218  0E07               	movlw	7
  4199  00021A  0100               	movlb	0	; () banked
  4200  00021C  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4201  00021E  0100               	movlb	0	; () banked
  4202  000220  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4203  000222  0E00               	movlw	0
  4204  000224  0100               	movlb	0	; () banked
  4205  000226  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4206  000228  0100               	movlb	0	; () banked
  4207  00022A  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4208  00022C  0E00               	movlw	0
  4209  00022E  0100               	movlb	0	; () banked
  4210  000230  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4211  000232  0100               	movlb	0	; () banked
  4212  000234  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4213  000236  0E00               	movlw	0
  4214  000238  0100               	movlb	0	; () banked
  4215  00023A  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4216  00023C  0100               	movlb	0	; () banked
  4217  00023E  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4221  000240  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4222  000244  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4223  000248  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4224  00024C  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4225  000250  0E05               	movlw	5
  4226  000252                     u2745:
  4227  000252  90D8               	bcf	status,0,c
  4228  000254  0100               	movlb	0	; () banked
  4229  000256  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4230  000258  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4231  00025A  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4232  00025C  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4233  00025E  2EE8               	decfsz	wreg,f,c
  4234  000260  D7F8               	goto	u2745
  4235  000262  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4236  000266  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4237  00026A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4238  00026E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4242  000272  C07C  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4243  000276  D000               	goto	l2823
  4244  000278                     l2823:
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;inc\CANlib.h: 763: }
  4248                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4249  000278  0100               	movlb	0	; () banked
  4250  00027A  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4251  00027C  A4D8               	btfss	status,2,c
  4252  00027E  D059               	goto	l2841
  4253                           
  4254                           ; BSR set to: 0
  4255  000280  0100               	movlb	0	; () banked
  4256  000282  2976               	incf	CANSetFilter@type& (0+255),w,b
  4257  000284  A4D8               	btfss	status,2,c
  4258  000286  D055               	goto	l2841
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;inc\CANlib.h: 766: {
  4262                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4263  000288  010F               	movlb	15	; () banked
  4264  00028A  9705               	bcf	5,3,b	;volatile
  4265                           
  4266                           ; BSR set to: 15
  4267                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4268  00028C  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4269  000290  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4270  000294  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4271  000298  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4272  00029C  0E04               	movlw	4
  4273  00029E  D006               	goto	u2770
  4274  0002A0                     u2775:
  4275  0002A0  0100               	movlb	0	; () banked
  4276  0002A2  90D8               	bcf	status,0,c
  4277  0002A4  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4278  0002A6  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4279  0002A8  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4280  0002AA  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4281  0002AC                     u2770:
  4282  0002AC  2EE8               	decfsz	wreg,f,c
  4283  0002AE  D7F8               	goto	u2775
  4284  0002B0  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4285  0002B4  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4286  0002B8  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4287  0002BC  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4291  0002C0  0100               	movlb	0	; () banked
  4292  0002C2  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4293  0002C4  0100               	movlb	0	; () banked
  4294  0002C6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4295  0002C8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4296  0002CA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4297  0002CC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4301  0002CE  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4305  0002D2  0E07               	movlw	7
  4306  0002D4  0100               	movlb	0	; () banked
  4307  0002D6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4308  0002D8  0100               	movlb	0	; () banked
  4309  0002DA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4310  0002DC  0E00               	movlw	0
  4311  0002DE  0100               	movlb	0	; () banked
  4312  0002E0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4313  0002E2  0100               	movlb	0	; () banked
  4314  0002E4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4315  0002E6  0E00               	movlw	0
  4316  0002E8  0100               	movlb	0	; () banked
  4317  0002EA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4318  0002EC  0100               	movlb	0	; () banked
  4319  0002EE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4320  0002F0  0E00               	movlw	0
  4321  0002F2  0100               	movlb	0	; () banked
  4322  0002F4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4323  0002F6  0100               	movlb	0	; () banked
  4324  0002F8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4328  0002FA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4329  0002FE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4330  000302  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4331  000306  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4332  00030A  0E05               	movlw	5
  4333  00030C                     u2785:
  4334  00030C  90D8               	bcf	status,0,c
  4335  00030E  0100               	movlb	0	; () banked
  4336  000310  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4337  000312  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4338  000314  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4339  000316  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4340  000318  2EE8               	decfsz	wreg,f,c
  4341  00031A  D7F8               	goto	u2785
  4342  00031C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4343  000320  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4344  000324  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4345  000328  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4349  00032C  C07C  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4350  000330  D000               	goto	l2841
  4351  000332                     l2841:
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;inc\CANlib.h: 776: }
  4355                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4356  000332  0E02               	movlw	2
  4357  000334  0100               	movlb	0	; () banked
  4358  000336  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4359  000338  A4D8               	btfss	status,2,c
  4360  00033A  D059               	goto	l2859
  4361                           
  4362                           ; BSR set to: 0
  4363  00033C  0100               	movlb	0	; () banked
  4364  00033E  2976               	incf	CANSetFilter@type& (0+255),w,b
  4365  000340  A4D8               	btfss	status,2,c
  4366  000342  D055               	goto	l2859
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;inc\CANlib.h: 779: {
  4370                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4371  000344  010F               	movlb	15	; () banked
  4372  000346  9709               	bcf	9,3,b	;volatile
  4373                           
  4374                           ; BSR set to: 15
  4375                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4376  000348  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4377  00034C  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4378  000350  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4379  000354  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4380  000358  0E04               	movlw	4
  4381  00035A  D006               	goto	u2810
  4382  00035C                     u2815:
  4383  00035C  0100               	movlb	0	; () banked
  4384  00035E  90D8               	bcf	status,0,c
  4385  000360  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4386  000362  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4387  000364  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4388  000366  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4389  000368                     u2810:
  4390  000368  2EE8               	decfsz	wreg,f,c
  4391  00036A  D7F8               	goto	u2815
  4392  00036C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4393  000370  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4394  000374  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4395  000378  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4399  00037C  0100               	movlb	0	; () banked
  4400  00037E  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4401  000380  0100               	movlb	0	; () banked
  4402  000382  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4403  000384  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4404  000386  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4405  000388  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4409  00038A  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4413  00038E  0E07               	movlw	7
  4414  000390  0100               	movlb	0	; () banked
  4415  000392  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4416  000394  0100               	movlb	0	; () banked
  4417  000396  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4418  000398  0E00               	movlw	0
  4419  00039A  0100               	movlb	0	; () banked
  4420  00039C  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4421  00039E  0100               	movlb	0	; () banked
  4422  0003A0  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4423  0003A2  0E00               	movlw	0
  4424  0003A4  0100               	movlb	0	; () banked
  4425  0003A6  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4426  0003A8  0100               	movlb	0	; () banked
  4427  0003AA  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4428  0003AC  0E00               	movlw	0
  4429  0003AE  0100               	movlb	0	; () banked
  4430  0003B0  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4431  0003B2  0100               	movlb	0	; () banked
  4432  0003B4  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4436  0003B6  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4437  0003BA  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4438  0003BE  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4439  0003C2  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4440  0003C6  0E05               	movlw	5
  4441  0003C8                     u2825:
  4442  0003C8  90D8               	bcf	status,0,c
  4443  0003CA  0100               	movlb	0	; () banked
  4444  0003CC  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4445  0003CE  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4446  0003D0  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4447  0003D2  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4448  0003D4  2EE8               	decfsz	wreg,f,c
  4449  0003D6  D7F8               	goto	u2825
  4450  0003D8  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4451  0003DC  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4452  0003E0  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4453  0003E4  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4457  0003E8  C07C  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4458  0003EC  D000               	goto	l2859
  4459  0003EE                     l2859:
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;inc\CANlib.h: 789: }
  4463                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4464  0003EE  0E03               	movlw	3
  4465  0003F0  0100               	movlb	0	; () banked
  4466  0003F2  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4467  0003F4  A4D8               	btfss	status,2,c
  4468  0003F6  D059               	goto	l2877
  4469                           
  4470                           ; BSR set to: 0
  4471  0003F8  0100               	movlb	0	; () banked
  4472  0003FA  2976               	incf	CANSetFilter@type& (0+255),w,b
  4473  0003FC  A4D8               	btfss	status,2,c
  4474  0003FE  D055               	goto	l2877
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;inc\CANlib.h: 792: {
  4478                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4479  000400  010F               	movlb	15	; () banked
  4480  000402  970D               	bcf	13,3,b	;volatile
  4481                           
  4482                           ; BSR set to: 15
  4483                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4484  000404  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4485  000408  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4486  00040C  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4487  000410  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4488  000414  0E04               	movlw	4
  4489  000416  D006               	goto	u2850
  4490  000418                     u2855:
  4491  000418  0100               	movlb	0	; () banked
  4492  00041A  90D8               	bcf	status,0,c
  4493  00041C  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4494  00041E  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4495  000420  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4496  000422  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4497  000424                     u2850:
  4498  000424  2EE8               	decfsz	wreg,f,c
  4499  000426  D7F8               	goto	u2855
  4500  000428  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4501  00042C  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4502  000430  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4503  000434  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4507  000438  0100               	movlb	0	; () banked
  4508  00043A  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4509  00043C  0100               	movlb	0	; () banked
  4510  00043E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4511  000440  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4512  000442  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4513  000444  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4517  000446  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4521  00044A  0E07               	movlw	7
  4522  00044C  0100               	movlb	0	; () banked
  4523  00044E  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4524  000450  0100               	movlb	0	; () banked
  4525  000452  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4526  000454  0E00               	movlw	0
  4527  000456  0100               	movlb	0	; () banked
  4528  000458  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4529  00045A  0100               	movlb	0	; () banked
  4530  00045C  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4531  00045E  0E00               	movlw	0
  4532  000460  0100               	movlb	0	; () banked
  4533  000462  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4534  000464  0100               	movlb	0	; () banked
  4535  000466  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4536  000468  0E00               	movlw	0
  4537  00046A  0100               	movlb	0	; () banked
  4538  00046C  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4539  00046E  0100               	movlb	0	; () banked
  4540  000470  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4544  000472  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4545  000476  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4546  00047A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4547  00047E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4548  000482  0E05               	movlw	5
  4549  000484                     u2865:
  4550  000484  90D8               	bcf	status,0,c
  4551  000486  0100               	movlb	0	; () banked
  4552  000488  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4553  00048A  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4554  00048C  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4555  00048E  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4556  000490  2EE8               	decfsz	wreg,f,c
  4557  000492  D7F8               	goto	u2865
  4558  000494  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4559  000498  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4560  00049C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4561  0004A0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4565  0004A4  C07C  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4566  0004A8  D000               	goto	l2877
  4567  0004AA                     l2877:
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;inc\CANlib.h: 802: }
  4571                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4572  0004AA  0E04               	movlw	4
  4573  0004AC  0100               	movlb	0	; () banked
  4574  0004AE  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4575  0004B0  A4D8               	btfss	status,2,c
  4576  0004B2  D059               	goto	l2895
  4577                           
  4578                           ; BSR set to: 0
  4579  0004B4  0100               	movlb	0	; () banked
  4580  0004B6  2976               	incf	CANSetFilter@type& (0+255),w,b
  4581  0004B8  A4D8               	btfss	status,2,c
  4582  0004BA  D055               	goto	l2895
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;inc\CANlib.h: 805: {
  4586                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4587  0004BC  010F               	movlb	15	; () banked
  4588  0004BE  9711               	bcf	17,3,b	;volatile
  4589                           
  4590                           ; BSR set to: 15
  4591                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4592  0004C0  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4593  0004C4  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4594  0004C8  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4595  0004CC  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4596  0004D0  0E04               	movlw	4
  4597  0004D2  D006               	goto	u2890
  4598  0004D4                     u2895:
  4599  0004D4  0100               	movlb	0	; () banked
  4600  0004D6  90D8               	bcf	status,0,c
  4601  0004D8  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4602  0004DA  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4603  0004DC  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4604  0004DE  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4605  0004E0                     u2890:
  4606  0004E0  2EE8               	decfsz	wreg,f,c
  4607  0004E2  D7F8               	goto	u2895
  4608  0004E4  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4609  0004E8  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4610  0004EC  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4611  0004F0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4615  0004F4  0100               	movlb	0	; () banked
  4616  0004F6  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4617  0004F8  0100               	movlb	0	; () banked
  4618  0004FA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4619  0004FC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4620  0004FE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4621  000500  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4625  000502  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4629  000506  0E07               	movlw	7
  4630  000508  0100               	movlb	0	; () banked
  4631  00050A  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4632  00050C  0100               	movlb	0	; () banked
  4633  00050E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4634  000510  0E00               	movlw	0
  4635  000512  0100               	movlb	0	; () banked
  4636  000514  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4637  000516  0100               	movlb	0	; () banked
  4638  000518  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4639  00051A  0E00               	movlw	0
  4640  00051C  0100               	movlb	0	; () banked
  4641  00051E  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4642  000520  0100               	movlb	0	; () banked
  4643  000522  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4644  000524  0E00               	movlw	0
  4645  000526  0100               	movlb	0	; () banked
  4646  000528  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4647  00052A  0100               	movlb	0	; () banked
  4648  00052C  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4652  00052E  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4653  000532  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4654  000536  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4655  00053A  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4656  00053E  0E05               	movlw	5
  4657  000540                     u2905:
  4658  000540  90D8               	bcf	status,0,c
  4659  000542  0100               	movlb	0	; () banked
  4660  000544  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4661  000546  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4662  000548  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4663  00054A  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4664  00054C  2EE8               	decfsz	wreg,f,c
  4665  00054E  D7F8               	goto	u2905
  4666  000550  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4667  000554  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4668  000558  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4669  00055C  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4673  000560  C07C  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4674  000564  D000               	goto	l2895
  4675  000566                     l2895:
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;inc\CANlib.h: 815: }
  4679                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4680  000566  0E05               	movlw	5
  4681  000568  0100               	movlb	0	; () banked
  4682  00056A  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4683  00056C  A4D8               	btfss	status,2,c
  4684  00056E  D059               	goto	l2913
  4685                           
  4686                           ; BSR set to: 0
  4687  000570  0100               	movlb	0	; () banked
  4688  000572  2976               	incf	CANSetFilter@type& (0+255),w,b
  4689  000574  A4D8               	btfss	status,2,c
  4690  000576  D055               	goto	l2913
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;inc\CANlib.h: 818: {
  4694                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4695  000578  010F               	movlb	15	; () banked
  4696  00057A  9715               	bcf	21,3,b	;volatile
  4697                           
  4698                           ; BSR set to: 15
  4699                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4700  00057C  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4701  000580  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4702  000584  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4703  000588  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4704  00058C  0E04               	movlw	4
  4705  00058E  D006               	goto	u2930
  4706  000590                     u2935:
  4707  000590  0100               	movlb	0	; () banked
  4708  000592  90D8               	bcf	status,0,c
  4709  000594  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4710  000596  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4711  000598  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4712  00059A  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4713  00059C                     u2930:
  4714  00059C  2EE8               	decfsz	wreg,f,c
  4715  00059E  D7F8               	goto	u2935
  4716  0005A0  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4717  0005A4  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4718  0005A8  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4719  0005AC  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4723  0005B0  0100               	movlb	0	; () banked
  4724  0005B2  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4725  0005B4  0100               	movlb	0	; () banked
  4726  0005B6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4727  0005B8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4728  0005BA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4729  0005BC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4733  0005BE  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4737  0005C2  0E07               	movlw	7
  4738  0005C4  0100               	movlb	0	; () banked
  4739  0005C6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4740  0005C8  0100               	movlb	0	; () banked
  4741  0005CA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4742  0005CC  0E00               	movlw	0
  4743  0005CE  0100               	movlb	0	; () banked
  4744  0005D0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4745  0005D2  0100               	movlb	0	; () banked
  4746  0005D4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4747  0005D6  0E00               	movlw	0
  4748  0005D8  0100               	movlb	0	; () banked
  4749  0005DA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4750  0005DC  0100               	movlb	0	; () banked
  4751  0005DE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4752  0005E0  0E00               	movlw	0
  4753  0005E2  0100               	movlb	0	; () banked
  4754  0005E4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4755  0005E6  0100               	movlb	0	; () banked
  4756  0005E8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4760  0005EA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4761  0005EE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4762  0005F2  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4763  0005F6  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4764  0005FA  0E05               	movlw	5
  4765  0005FC                     u2945:
  4766  0005FC  90D8               	bcf	status,0,c
  4767  0005FE  0100               	movlb	0	; () banked
  4768  000600  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  4769  000602  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4770  000604  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4771  000606  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4772  000608  2EE8               	decfsz	wreg,f,c
  4773  00060A  D7F8               	goto	u2945
  4774  00060C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4775  000610  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4776  000614  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4777  000618  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4781  00061C  C07C  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4782  000620  D000               	goto	l2913
  4783  000622                     l2913:
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;inc\CANlib.h: 828: }
  4787                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4788  000622  0100               	movlb	0	; () banked
  4789  000624  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4790  000626  0100               	movlb	0	; () banked
  4791  000628  A4D8               	btfss	status,2,c
  4792  00062A  D08B               	goto	l2947
  4793                           
  4794                           ; BSR set to: 0
  4795  00062C  0EF7               	movlw	247
  4796  00062E  0100               	movlb	0	; () banked
  4797  000630  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4798  000632  A4D8               	btfss	status,2,c
  4799  000634  D086               	goto	l2947
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;inc\CANlib.h: 832: {
  4803                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4804  000636  010F               	movlb	15	; () banked
  4805  000638  8701               	bsf	1,3,b	;volatile
  4806                           
  4807                           ; BSR set to: 15
  4808                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4809  00063A  0100               	movlb	0	; () banked
  4810  00063C  5172               	movf	CANSetFilter@filter& (0+255),w,b
  4811  00063E  0100               	movlb	0	; () banked
  4812  000640  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4813  000642  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4814  000644  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4815  000646  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4819  000648  C07C  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4823  00064C  0E00               	movlw	0
  4824  00064E  0100               	movlb	0	; () banked
  4825  000650  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4826  000652  0100               	movlb	0	; () banked
  4827  000654  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4828  000656  0EFF               	movlw	255
  4829  000658  0100               	movlb	0	; () banked
  4830  00065A  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4831  00065C  0100               	movlb	0	; () banked
  4832  00065E  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4833  000660  0E00               	movlw	0
  4834  000662  0100               	movlb	0	; () banked
  4835  000664  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4836  000666  0100               	movlb	0	; () banked
  4837  000668  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4838  00066A  0E00               	movlw	0
  4839  00066C  0100               	movlb	0	; () banked
  4840  00066E  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4841  000670  0100               	movlb	0	; () banked
  4842  000672  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4846  000674  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4847  000678  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4848  00067C  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4849  000680  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4850  000684  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  4851  000688  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4852  00068C  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4853  000690  0100               	movlb	0	; () banked
  4854  000692  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4855  000694  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4856  000698  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4857  00069C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4858  0006A0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4862  0006A4  C07C  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4866  0006A8  0100               	movlb	0	; () banked
  4867  0006AA  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4868  0006AC  D003               	goto	l449
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4872  0006AE  010F               	movlb	15	; () banked
  4873  0006B0  8101               	bsf	1,0,b	;volatile
  4874  0006B2  D002               	goto	l450
  4875  0006B4                     l449:
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;inc\CANlib.h: 844: else
  4879                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4880  0006B4  010F               	movlb	15	; () banked
  4881  0006B6  9101               	bcf	1,0,b	;volatile
  4882  0006B8                     l450:
  4883                           
  4884                           ; BSR set to: 15
  4885                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4886  0006B8  0100               	movlb	0	; () banked
  4887  0006BA  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4888  0006BC  D003               	goto	l451
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4892  0006BE  010F               	movlb	15	; () banked
  4893  0006C0  8301               	bsf	1,1,b	;volatile
  4894  0006C2  D002               	goto	l452
  4895  0006C4                     l451:
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;inc\CANlib.h: 849: else
  4899                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4900  0006C4  010F               	movlb	15	; () banked
  4901  0006C6  9301               	bcf	1,1,b	;volatile
  4902  0006C8                     l452:
  4903                           
  4904                           ; BSR set to: 15
  4905                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4906  0006C8  0100               	movlb	0	; () banked
  4907  0006CA  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4908  0006CC  D003               	goto	l453
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4912  0006CE  010F               	movlb	15	; () banked
  4913  0006D0  8B01               	bsf	1,5,b	;volatile
  4914  0006D2  D002               	goto	l454
  4915  0006D4                     l453:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;inc\CANlib.h: 854: else
  4919                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4920  0006D4  010F               	movlb	15	; () banked
  4921  0006D6  9B01               	bcf	1,5,b	;volatile
  4922  0006D8                     l454:
  4923                           
  4924                           ; BSR set to: 15
  4925                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4926  0006D8  0100               	movlb	0	; () banked
  4927  0006DA  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4928  0006DC  D003               	goto	l455
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4932  0006DE  010F               	movlb	15	; () banked
  4933  0006E0  8D01               	bsf	1,6,b	;volatile
  4934  0006E2  D002               	goto	l456
  4935  0006E4                     l455:
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;inc\CANlib.h: 859: else
  4939                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4940  0006E4  010F               	movlb	15	; () banked
  4941  0006E6  9D01               	bcf	1,6,b	;volatile
  4942  0006E8                     l456:
  4943                           
  4944                           ; BSR set to: 15
  4945                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4946  0006E8  0100               	movlb	0	; () banked
  4947  0006EA  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4948  0006EC  D003               	goto	l457
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4952  0006EE  010F               	movlb	15	; () banked
  4953  0006F0  8F01               	bsf	1,7,b	;volatile
  4954  0006F2  D003               	goto	l2941
  4955  0006F4                     l457:
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;inc\CANlib.h: 864: else
  4959                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4960  0006F4  010F               	movlb	15	; () banked
  4961  0006F6  9F01               	bcf	1,7,b	;volatile
  4962  0006F8  D000               	goto	l2941
  4963  0006FA                     l2941:
  4964                           
  4965                           ; BSR set to: 15
  4966                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4967  0006FA  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4968  0006FE  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4969  000702  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4970  000706  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4971  00070A  0E16               	movlw	22
  4972  00070C  D006               	goto	u3020
  4973  00070E                     u3025:
  4974  00070E  0100               	movlb	0	; () banked
  4975  000710  90D8               	bcf	status,0,c
  4976  000712  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4977  000714  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4978  000716  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4979  000718  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4980  00071A                     u3020:
  4981  00071A  2EE8               	decfsz	wreg,f,c
  4982  00071C  D7F8               	goto	u3025
  4983  00071E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4984  000722  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4985  000726  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4986  00072A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4990  00072E  0100               	movlb	0	; () banked
  4991  000730  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4992  000732  0100               	movlb	0	; () banked
  4993  000734  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4994  000736  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4995  000738  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4996  00073A  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5000  00073C  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5001  000740  D000               	goto	l2947
  5002  000742                     l2947:
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;inc\CANlib.h: 870: }
  5006                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5007  000742  0100               	movlb	0	; () banked
  5008  000744  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5009  000746  A4D8               	btfss	status,2,c
  5010  000748  D08B               	goto	l2981
  5011                           
  5012                           ; BSR set to: 0
  5013  00074A  0EF7               	movlw	247
  5014  00074C  0100               	movlb	0	; () banked
  5015  00074E  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5016  000750  A4D8               	btfss	status,2,c
  5017  000752  D086               	goto	l2981
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;inc\CANlib.h: 873: {
  5021                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5022  000754  010F               	movlb	15	; () banked
  5023  000756  8705               	bsf	5,3,b	;volatile
  5024                           
  5025                           ; BSR set to: 15
  5026                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5027  000758  0100               	movlb	0	; () banked
  5028  00075A  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5029  00075C  0100               	movlb	0	; () banked
  5030  00075E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5031  000760  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5032  000762  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5033  000764  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5037  000766  C07C  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5041  00076A  0E00               	movlw	0
  5042  00076C  0100               	movlb	0	; () banked
  5043  00076E  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5044  000770  0100               	movlb	0	; () banked
  5045  000772  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5046  000774  0EFF               	movlw	255
  5047  000776  0100               	movlb	0	; () banked
  5048  000778  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5049  00077A  0100               	movlb	0	; () banked
  5050  00077C  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5051  00077E  0E00               	movlw	0
  5052  000780  0100               	movlb	0	; () banked
  5053  000782  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5054  000784  0100               	movlb	0	; () banked
  5055  000786  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5056  000788  0E00               	movlw	0
  5057  00078A  0100               	movlb	0	; () banked
  5058  00078C  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5059  00078E  0100               	movlb	0	; () banked
  5060  000790  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5064  000792  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5065  000796  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5066  00079A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5067  00079E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5068  0007A2  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5069  0007A6  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5070  0007AA  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5071  0007AE  0100               	movlb	0	; () banked
  5072  0007B0  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5073  0007B2  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5074  0007B6  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5075  0007BA  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5076  0007BE  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5080  0007C2  C07C  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5084  0007C6  0100               	movlb	0	; () banked
  5085  0007C8  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5086  0007CA  D003               	goto	l460
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5090  0007CC  010F               	movlb	15	; () banked
  5091  0007CE  8105               	bsf	5,0,b	;volatile
  5092  0007D0  D002               	goto	l461
  5093  0007D2                     l460:
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;inc\CANlib.h: 885: else
  5097                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5098  0007D2  010F               	movlb	15	; () banked
  5099  0007D4  9105               	bcf	5,0,b	;volatile
  5100  0007D6                     l461:
  5101                           
  5102                           ; BSR set to: 15
  5103                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5104  0007D6  0100               	movlb	0	; () banked
  5105  0007D8  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5106  0007DA  D003               	goto	l462
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5110  0007DC  010F               	movlb	15	; () banked
  5111  0007DE  8305               	bsf	5,1,b	;volatile
  5112  0007E0  D002               	goto	l463
  5113  0007E2                     l462:
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;inc\CANlib.h: 890: else
  5117                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5118  0007E2  010F               	movlb	15	; () banked
  5119  0007E4  9305               	bcf	5,1,b	;volatile
  5120  0007E6                     l463:
  5121                           
  5122                           ; BSR set to: 15
  5123                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5124  0007E6  0100               	movlb	0	; () banked
  5125  0007E8  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5126  0007EA  D003               	goto	l464
  5127                           
  5128                           ; BSR set to: 0
  5129                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5130  0007EC  010F               	movlb	15	; () banked
  5131  0007EE  8B05               	bsf	5,5,b	;volatile
  5132  0007F0  D002               	goto	l465
  5133  0007F2                     l464:
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;inc\CANlib.h: 895: else
  5137                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5138  0007F2  010F               	movlb	15	; () banked
  5139  0007F4  9B05               	bcf	5,5,b	;volatile
  5140  0007F6                     l465:
  5141                           
  5142                           ; BSR set to: 15
  5143                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5144  0007F6  0100               	movlb	0	; () banked
  5145  0007F8  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5146  0007FA  D003               	goto	l466
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5150  0007FC  010F               	movlb	15	; () banked
  5151  0007FE  8D05               	bsf	5,6,b	;volatile
  5152  000800  D002               	goto	l467
  5153  000802                     l466:
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;inc\CANlib.h: 900: else
  5157                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5158  000802  010F               	movlb	15	; () banked
  5159  000804  9D05               	bcf	5,6,b	;volatile
  5160  000806                     l467:
  5161                           
  5162                           ; BSR set to: 15
  5163                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5164  000806  0100               	movlb	0	; () banked
  5165  000808  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5166  00080A  D003               	goto	l468
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5170  00080C  010F               	movlb	15	; () banked
  5171  00080E  8F05               	bsf	5,7,b	;volatile
  5172  000810  D003               	goto	l2975
  5173  000812                     l468:
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;inc\CANlib.h: 905: else
  5177                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5178  000812  010F               	movlb	15	; () banked
  5179  000814  9F05               	bcf	5,7,b	;volatile
  5180  000816  D000               	goto	l2975
  5181  000818                     l2975:
  5182                           
  5183                           ; BSR set to: 15
  5184                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5185  000818  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5186  00081C  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5187  000820  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5188  000824  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5189  000828  0E16               	movlw	22
  5190  00082A  D006               	goto	u3100
  5191  00082C                     u3105:
  5192  00082C  0100               	movlb	0	; () banked
  5193  00082E  90D8               	bcf	status,0,c
  5194  000830  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5195  000832  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5196  000834  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5197  000836  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5198  000838                     u3100:
  5199  000838  2EE8               	decfsz	wreg,f,c
  5200  00083A  D7F8               	goto	u3105
  5201  00083C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5202  000840  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5203  000844  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5204  000848  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5208  00084C  0100               	movlb	0	; () banked
  5209  00084E  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5210  000850  0100               	movlb	0	; () banked
  5211  000852  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5212  000854  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5213  000856  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5214  000858  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5218  00085A  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5219  00085E  D000               	goto	l2981
  5220  000860                     l2981:
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;inc\CANlib.h: 911: }
  5224                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5225  000860  0E02               	movlw	2
  5226  000862  0100               	movlb	0	; () banked
  5227  000864  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5228  000866  A4D8               	btfss	status,2,c
  5229  000868  D08B               	goto	l3015
  5230                           
  5231                           ; BSR set to: 0
  5232  00086A  0EF7               	movlw	247
  5233  00086C  0100               	movlb	0	; () banked
  5234  00086E  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5235  000870  A4D8               	btfss	status,2,c
  5236  000872  D086               	goto	l3015
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;inc\CANlib.h: 915: {
  5240                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5241  000874  010F               	movlb	15	; () banked
  5242  000876  8709               	bsf	9,3,b	;volatile
  5243                           
  5244                           ; BSR set to: 15
  5245                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5246  000878  0100               	movlb	0	; () banked
  5247  00087A  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5248  00087C  0100               	movlb	0	; () banked
  5249  00087E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5250  000880  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5251  000882  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5252  000884  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5253                           
  5254                           ; BSR set to: 0
  5255                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5256  000886  C07C  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5260  00088A  0E00               	movlw	0
  5261  00088C  0100               	movlb	0	; () banked
  5262  00088E  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5263  000890  0100               	movlb	0	; () banked
  5264  000892  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5265  000894  0EFF               	movlw	255
  5266  000896  0100               	movlb	0	; () banked
  5267  000898  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5268  00089A  0100               	movlb	0	; () banked
  5269  00089C  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5270  00089E  0E00               	movlw	0
  5271  0008A0  0100               	movlb	0	; () banked
  5272  0008A2  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5273  0008A4  0100               	movlb	0	; () banked
  5274  0008A6  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5275  0008A8  0E00               	movlw	0
  5276  0008AA  0100               	movlb	0	; () banked
  5277  0008AC  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5278  0008AE  0100               	movlb	0	; () banked
  5279  0008B0  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5283  0008B2  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5284  0008B6  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5285  0008BA  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5286  0008BE  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5287  0008C2  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5288  0008C6  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5289  0008CA  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5290  0008CE  0100               	movlb	0	; () banked
  5291  0008D0  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5292  0008D2  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5293  0008D6  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5294  0008DA  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5295  0008DE  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5299  0008E2  C07C  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5303  0008E6  0100               	movlb	0	; () banked
  5304  0008E8  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5305  0008EA  D003               	goto	l471
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5309  0008EC  010F               	movlb	15	; () banked
  5310  0008EE  8109               	bsf	9,0,b	;volatile
  5311  0008F0  D002               	goto	l472
  5312  0008F2                     l471:
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;inc\CANlib.h: 927: else
  5316                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5317  0008F2  010F               	movlb	15	; () banked
  5318  0008F4  9109               	bcf	9,0,b	;volatile
  5319  0008F6                     l472:
  5320                           
  5321                           ; BSR set to: 15
  5322                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5323  0008F6  0100               	movlb	0	; () banked
  5324  0008F8  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5325  0008FA  D003               	goto	l473
  5326                           
  5327                           ; BSR set to: 0
  5328                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5329  0008FC  010F               	movlb	15	; () banked
  5330  0008FE  8309               	bsf	9,1,b	;volatile
  5331  000900  D002               	goto	l474
  5332  000902                     l473:
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;inc\CANlib.h: 932: else
  5336                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5337  000902  010F               	movlb	15	; () banked
  5338  000904  9309               	bcf	9,1,b	;volatile
  5339  000906                     l474:
  5340                           
  5341                           ; BSR set to: 15
  5342                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5343  000906  0100               	movlb	0	; () banked
  5344  000908  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5345  00090A  D003               	goto	l475
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5349  00090C  010F               	movlb	15	; () banked
  5350  00090E  8B09               	bsf	9,5,b	;volatile
  5351  000910  D002               	goto	l476
  5352  000912                     l475:
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;inc\CANlib.h: 937: else
  5356                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5357  000912  010F               	movlb	15	; () banked
  5358  000914  9B09               	bcf	9,5,b	;volatile
  5359  000916                     l476:
  5360                           
  5361                           ; BSR set to: 15
  5362                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5363  000916  0100               	movlb	0	; () banked
  5364  000918  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5365  00091A  D003               	goto	l477
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5369  00091C  010F               	movlb	15	; () banked
  5370  00091E  8D09               	bsf	9,6,b	;volatile
  5371  000920  D002               	goto	l478
  5372  000922                     l477:
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;inc\CANlib.h: 942: else
  5376                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5377  000922  010F               	movlb	15	; () banked
  5378  000924  9D09               	bcf	9,6,b	;volatile
  5379  000926                     l478:
  5380                           
  5381                           ; BSR set to: 15
  5382                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5383  000926  0100               	movlb	0	; () banked
  5384  000928  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5385  00092A  D003               	goto	l479
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5389  00092C  010F               	movlb	15	; () banked
  5390  00092E  8F09               	bsf	9,7,b	;volatile
  5391  000930  D003               	goto	l3009
  5392  000932                     l479:
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;inc\CANlib.h: 947: else
  5396                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5397  000932  010F               	movlb	15	; () banked
  5398  000934  9F09               	bcf	9,7,b	;volatile
  5399  000936  D000               	goto	l3009
  5400  000938                     l3009:
  5401                           
  5402                           ; BSR set to: 15
  5403                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5404  000938  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5405  00093C  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5406  000940  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5407  000944  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5408  000948  0E16               	movlw	22
  5409  00094A  D006               	goto	u3180
  5410  00094C                     u3185:
  5411  00094C  0100               	movlb	0	; () banked
  5412  00094E  90D8               	bcf	status,0,c
  5413  000950  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5414  000952  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5415  000954  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5416  000956  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5417  000958                     u3180:
  5418  000958  2EE8               	decfsz	wreg,f,c
  5419  00095A  D7F8               	goto	u3185
  5420  00095C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5421  000960  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5422  000964  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5423  000968  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5424                           
  5425                           ; BSR set to: 0
  5426                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5427  00096C  0100               	movlb	0	; () banked
  5428  00096E  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5429  000970  0100               	movlb	0	; () banked
  5430  000972  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5431  000974  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5432  000976  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5433  000978  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5437  00097A  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5438  00097E  D000               	goto	l3015
  5439  000980                     l3015:
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;inc\CANlib.h: 953: }
  5443                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5444  000980  0E03               	movlw	3
  5445  000982  0100               	movlb	0	; () banked
  5446  000984  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5447  000986  A4D8               	btfss	status,2,c
  5448  000988  D08B               	goto	l3049
  5449                           
  5450                           ; BSR set to: 0
  5451  00098A  0EF7               	movlw	247
  5452  00098C  0100               	movlb	0	; () banked
  5453  00098E  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5454  000990  A4D8               	btfss	status,2,c
  5455  000992  D086               	goto	l3049
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;inc\CANlib.h: 956: {
  5459                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5460  000994  010F               	movlb	15	; () banked
  5461  000996  870D               	bsf	13,3,b	;volatile
  5462                           
  5463                           ; BSR set to: 15
  5464                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5465  000998  0100               	movlb	0	; () banked
  5466  00099A  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5467  00099C  0100               	movlb	0	; () banked
  5468  00099E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5469  0009A0  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5470  0009A2  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5471  0009A4  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5475  0009A6  C07C  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5479  0009AA  0E00               	movlw	0
  5480  0009AC  0100               	movlb	0	; () banked
  5481  0009AE  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5482  0009B0  0100               	movlb	0	; () banked
  5483  0009B2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5484  0009B4  0EFF               	movlw	255
  5485  0009B6  0100               	movlb	0	; () banked
  5486  0009B8  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5487  0009BA  0100               	movlb	0	; () banked
  5488  0009BC  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5489  0009BE  0E00               	movlw	0
  5490  0009C0  0100               	movlb	0	; () banked
  5491  0009C2  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5492  0009C4  0100               	movlb	0	; () banked
  5493  0009C6  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5494  0009C8  0E00               	movlw	0
  5495  0009CA  0100               	movlb	0	; () banked
  5496  0009CC  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5497  0009CE  0100               	movlb	0	; () banked
  5498  0009D0  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5502  0009D2  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5503  0009D6  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5504  0009DA  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5505  0009DE  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5506  0009E2  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5507  0009E6  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5508  0009EA  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5509  0009EE  0100               	movlb	0	; () banked
  5510  0009F0  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5511  0009F2  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5512  0009F6  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5513  0009FA  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5514  0009FE  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5518  000A02  C07C  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5522  000A06  0100               	movlb	0	; () banked
  5523  000A08  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5524  000A0A  D003               	goto	l482
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5528  000A0C  010F               	movlb	15	; () banked
  5529  000A0E  810D               	bsf	13,0,b	;volatile
  5530  000A10  D002               	goto	l483
  5531  000A12                     l482:
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;inc\CANlib.h: 968: else
  5535                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5536  000A12  010F               	movlb	15	; () banked
  5537  000A14  910D               	bcf	13,0,b	;volatile
  5538  000A16                     l483:
  5539                           
  5540                           ; BSR set to: 15
  5541                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5542  000A16  0100               	movlb	0	; () banked
  5543  000A18  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5544  000A1A  D003               	goto	l484
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5548  000A1C  010F               	movlb	15	; () banked
  5549  000A1E  830D               	bsf	13,1,b	;volatile
  5550  000A20  D002               	goto	l485
  5551  000A22                     l484:
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;inc\CANlib.h: 973: else
  5555                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5556  000A22  010F               	movlb	15	; () banked
  5557  000A24  930D               	bcf	13,1,b	;volatile
  5558  000A26                     l485:
  5559                           
  5560                           ; BSR set to: 15
  5561                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5562  000A26  0100               	movlb	0	; () banked
  5563  000A28  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5564  000A2A  D003               	goto	l486
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5568  000A2C  010F               	movlb	15	; () banked
  5569  000A2E  8B0D               	bsf	13,5,b	;volatile
  5570  000A30  D002               	goto	l487
  5571  000A32                     l486:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;inc\CANlib.h: 978: else
  5575                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5576  000A32  010F               	movlb	15	; () banked
  5577  000A34  9B0D               	bcf	13,5,b	;volatile
  5578  000A36                     l487:
  5579                           
  5580                           ; BSR set to: 15
  5581                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5582  000A36  0100               	movlb	0	; () banked
  5583  000A38  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5584  000A3A  D003               	goto	l488
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5588  000A3C  010F               	movlb	15	; () banked
  5589  000A3E  8D0D               	bsf	13,6,b	;volatile
  5590  000A40  D002               	goto	l489
  5591  000A42                     l488:
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;inc\CANlib.h: 983: else
  5595                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5596  000A42  010F               	movlb	15	; () banked
  5597  000A44  9D0D               	bcf	13,6,b	;volatile
  5598  000A46                     l489:
  5599                           
  5600                           ; BSR set to: 15
  5601                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5602  000A46  0100               	movlb	0	; () banked
  5603  000A48  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5604  000A4A  D003               	goto	l490
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5608  000A4C  010F               	movlb	15	; () banked
  5609  000A4E  8F0D               	bsf	13,7,b	;volatile
  5610  000A50  D003               	goto	l3043
  5611  000A52                     l490:
  5612                           
  5613                           ; BSR set to: 0
  5614                           ;inc\CANlib.h: 988: else
  5615                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5616  000A52  010F               	movlb	15	; () banked
  5617  000A54  9F0D               	bcf	13,7,b	;volatile
  5618  000A56  D000               	goto	l3043
  5619  000A58                     l3043:
  5620                           
  5621                           ; BSR set to: 15
  5622                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5623  000A58  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5624  000A5C  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5625  000A60  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5626  000A64  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5627  000A68  0E16               	movlw	22
  5628  000A6A  D006               	goto	u3260
  5629  000A6C                     u3265:
  5630  000A6C  0100               	movlb	0	; () banked
  5631  000A6E  90D8               	bcf	status,0,c
  5632  000A70  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5633  000A72  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5634  000A74  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5635  000A76  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5636  000A78                     u3260:
  5637  000A78  2EE8               	decfsz	wreg,f,c
  5638  000A7A  D7F8               	goto	u3265
  5639  000A7C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5640  000A80  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5641  000A84  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5642  000A88  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5646  000A8C  0100               	movlb	0	; () banked
  5647  000A8E  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5648  000A90  0100               	movlb	0	; () banked
  5649  000A92  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5650  000A94  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5651  000A96  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5652  000A98  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5656  000A9A  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5657  000A9E  D000               	goto	l3049
  5658  000AA0                     l3049:
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;inc\CANlib.h: 994: }
  5662                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5663  000AA0  0E04               	movlw	4
  5664  000AA2  0100               	movlb	0	; () banked
  5665  000AA4  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5666  000AA6  A4D8               	btfss	status,2,c
  5667  000AA8  D08B               	goto	l3083
  5668                           
  5669                           ; BSR set to: 0
  5670  000AAA  0EF7               	movlw	247
  5671  000AAC  0100               	movlb	0	; () banked
  5672  000AAE  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5673  000AB0  A4D8               	btfss	status,2,c
  5674  000AB2  D086               	goto	l3083
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;inc\CANlib.h: 997: {
  5678                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5679  000AB4  010F               	movlb	15	; () banked
  5680  000AB6  8711               	bsf	17,3,b	;volatile
  5681                           
  5682                           ; BSR set to: 15
  5683                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5684  000AB8  0100               	movlb	0	; () banked
  5685  000ABA  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5686  000ABC  0100               	movlb	0	; () banked
  5687  000ABE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5688  000AC0  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5689  000AC2  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5690  000AC4  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5694  000AC6  C07C  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5698  000ACA  0E00               	movlw	0
  5699  000ACC  0100               	movlb	0	; () banked
  5700  000ACE  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5701  000AD0  0100               	movlb	0	; () banked
  5702  000AD2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5703  000AD4  0EFF               	movlw	255
  5704  000AD6  0100               	movlb	0	; () banked
  5705  000AD8  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5706  000ADA  0100               	movlb	0	; () banked
  5707  000ADC  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5708  000ADE  0E00               	movlw	0
  5709  000AE0  0100               	movlb	0	; () banked
  5710  000AE2  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5711  000AE4  0100               	movlb	0	; () banked
  5712  000AE6  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5713  000AE8  0E00               	movlw	0
  5714  000AEA  0100               	movlb	0	; () banked
  5715  000AEC  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5716  000AEE  0100               	movlb	0	; () banked
  5717  000AF0  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5721  000AF2  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5722  000AF6  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5723  000AFA  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5724  000AFE  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5725  000B02  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5726  000B06  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5727  000B0A  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5728  000B0E  0100               	movlb	0	; () banked
  5729  000B10  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5730  000B12  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5731  000B16  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5732  000B1A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5733  000B1E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5734                           
  5735                           ; BSR set to: 0
  5736                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5737  000B22  C07C  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5741  000B26  0100               	movlb	0	; () banked
  5742  000B28  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5743  000B2A  D003               	goto	l493
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5747  000B2C  010F               	movlb	15	; () banked
  5748  000B2E  8111               	bsf	17,0,b	;volatile
  5749  000B30  D002               	goto	l494
  5750  000B32                     l493:
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;inc\CANlib.h: 1009: else
  5754                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5755  000B32  010F               	movlb	15	; () banked
  5756  000B34  9111               	bcf	17,0,b	;volatile
  5757  000B36                     l494:
  5758                           
  5759                           ; BSR set to: 15
  5760                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5761  000B36  0100               	movlb	0	; () banked
  5762  000B38  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5763  000B3A  D003               	goto	l495
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5767  000B3C  010F               	movlb	15	; () banked
  5768  000B3E  8311               	bsf	17,1,b	;volatile
  5769  000B40  D002               	goto	l496
  5770  000B42                     l495:
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;inc\CANlib.h: 1014: else
  5774                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5775  000B42  010F               	movlb	15	; () banked
  5776  000B44  9311               	bcf	17,1,b	;volatile
  5777  000B46                     l496:
  5778                           
  5779                           ; BSR set to: 15
  5780                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5781  000B46  0100               	movlb	0	; () banked
  5782  000B48  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5783  000B4A  D003               	goto	l497
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5787  000B4C  010F               	movlb	15	; () banked
  5788  000B4E  8B11               	bsf	17,5,b	;volatile
  5789  000B50  D002               	goto	l498
  5790  000B52                     l497:
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;inc\CANlib.h: 1019: else
  5794                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5795  000B52  010F               	movlb	15	; () banked
  5796  000B54  9B11               	bcf	17,5,b	;volatile
  5797  000B56                     l498:
  5798                           
  5799                           ; BSR set to: 15
  5800                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5801  000B56  0100               	movlb	0	; () banked
  5802  000B58  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5803  000B5A  D003               	goto	l499
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5807  000B5C  010F               	movlb	15	; () banked
  5808  000B5E  8D11               	bsf	17,6,b	;volatile
  5809  000B60  D002               	goto	l500
  5810  000B62                     l499:
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;inc\CANlib.h: 1024: else
  5814                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5815  000B62  010F               	movlb	15	; () banked
  5816  000B64  9D11               	bcf	17,6,b	;volatile
  5817  000B66                     l500:
  5818                           
  5819                           ; BSR set to: 15
  5820                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5821  000B66  0100               	movlb	0	; () banked
  5822  000B68  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5823  000B6A  D003               	goto	l501
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5827  000B6C  010F               	movlb	15	; () banked
  5828  000B6E  8F11               	bsf	17,7,b	;volatile
  5829  000B70  D003               	goto	l3077
  5830  000B72                     l501:
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;inc\CANlib.h: 1029: else
  5834                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5835  000B72  010F               	movlb	15	; () banked
  5836  000B74  9F11               	bcf	17,7,b	;volatile
  5837  000B76  D000               	goto	l3077
  5838  000B78                     l3077:
  5839                           
  5840                           ; BSR set to: 15
  5841                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5842  000B78  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  5843  000B7C  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5844  000B80  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5845  000B84  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5846  000B88  0E16               	movlw	22
  5847  000B8A  D006               	goto	u3340
  5848  000B8C                     u3345:
  5849  000B8C  0100               	movlb	0	; () banked
  5850  000B8E  90D8               	bcf	status,0,c
  5851  000B90  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5852  000B92  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5853  000B94  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5854  000B96  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  5855  000B98                     u3340:
  5856  000B98  2EE8               	decfsz	wreg,f,c
  5857  000B9A  D7F8               	goto	u3345
  5858  000B9C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5859  000BA0  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5860  000BA4  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5861  000BA8  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5865  000BAC  0100               	movlb	0	; () banked
  5866  000BAE  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  5867  000BB0  0100               	movlb	0	; () banked
  5868  000BB2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5869  000BB4  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5870  000BB6  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5871  000BB8  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5872                           
  5873                           ; BSR set to: 0
  5874                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5875  000BBA  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5876  000BBE  D000               	goto	l3083
  5877  000BC0                     l3083:
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;inc\CANlib.h: 1035: }
  5881                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5882  000BC0  0E05               	movlw	5
  5883  000BC2  0100               	movlb	0	; () banked
  5884  000BC4  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5885  000BC6  A4D8               	btfss	status,2,c
  5886  000BC8  D08B               	goto	l514
  5887                           
  5888                           ; BSR set to: 0
  5889  000BCA  0EF7               	movlw	247
  5890  000BCC  0100               	movlb	0	; () banked
  5891  000BCE  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  5892  000BD0  A4D8               	btfss	status,2,c
  5893  000BD2  D086               	goto	l514
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;inc\CANlib.h: 1038: {
  5897                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5898  000BD4  010F               	movlb	15	; () banked
  5899  000BD6  8715               	bsf	21,3,b	;volatile
  5900                           
  5901                           ; BSR set to: 15
  5902                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5903  000BD8  0100               	movlb	0	; () banked
  5904  000BDA  5172               	movf	CANSetFilter@filter& (0+255),w,b
  5905  000BDC  0100               	movlb	0	; () banked
  5906  000BDE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5907  000BE0  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5908  000BE2  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5909  000BE4  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5913  000BE6  C07C  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5914                           
  5915                           ; BSR set to: 0
  5916                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5917  000BEA  0E00               	movlw	0
  5918  000BEC  0100               	movlb	0	; () banked
  5919  000BEE  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  5920  000BF0  0100               	movlb	0	; () banked
  5921  000BF2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  5922  000BF4  0EFF               	movlw	255
  5923  000BF6  0100               	movlb	0	; () banked
  5924  000BF8  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5925  000BFA  0100               	movlb	0	; () banked
  5926  000BFC  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5927  000BFE  0E00               	movlw	0
  5928  000C00  0100               	movlb	0	; () banked
  5929  000C02  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5930  000C04  0100               	movlb	0	; () banked
  5931  000C06  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5932  000C08  0E00               	movlw	0
  5933  000C0A  0100               	movlb	0	; () banked
  5934  000C0C  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5935  000C0E  0100               	movlb	0	; () banked
  5936  000C10  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5940  000C12  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  5941  000C16  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5942  000C1A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5943  000C1E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5944  000C22  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  5945  000C26  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5946  000C2A  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5947  000C2E  0100               	movlb	0	; () banked
  5948  000C30  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  5949  000C32  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  5950  000C36  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5951  000C3A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5952  000C3E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5956  000C42  C07C  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5960  000C46  0100               	movlb	0	; () banked
  5961  000C48  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5962  000C4A  D003               	goto	l504
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5966  000C4C  010F               	movlb	15	; () banked
  5967  000C4E  8115               	bsf	21,0,b	;volatile
  5968  000C50  D002               	goto	l505
  5969  000C52                     l504:
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;inc\CANlib.h: 1050: else
  5973                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5974  000C52  010F               	movlb	15	; () banked
  5975  000C54  9115               	bcf	21,0,b	;volatile
  5976  000C56                     l505:
  5977                           
  5978                           ; BSR set to: 15
  5979                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5980  000C56  0100               	movlb	0	; () banked
  5981  000C58  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5982  000C5A  D003               	goto	l506
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5986  000C5C  010F               	movlb	15	; () banked
  5987  000C5E  8315               	bsf	21,1,b	;volatile
  5988  000C60  D002               	goto	l507
  5989  000C62                     l506:
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;inc\CANlib.h: 1055: else
  5993                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5994  000C62  010F               	movlb	15	; () banked
  5995  000C64  9315               	bcf	21,1,b	;volatile
  5996  000C66                     l507:
  5997                           
  5998                           ; BSR set to: 15
  5999                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6000  000C66  0100               	movlb	0	; () banked
  6001  000C68  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6002  000C6A  D003               	goto	l508
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6006  000C6C  010F               	movlb	15	; () banked
  6007  000C6E  8B15               	bsf	21,5,b	;volatile
  6008  000C70  D002               	goto	l509
  6009  000C72                     l508:
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;inc\CANlib.h: 1060: else
  6013                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6014  000C72  010F               	movlb	15	; () banked
  6015  000C74  9B15               	bcf	21,5,b	;volatile
  6016  000C76                     l509:
  6017                           
  6018                           ; BSR set to: 15
  6019                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6020  000C76  0100               	movlb	0	; () banked
  6021  000C78  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6022  000C7A  D003               	goto	l510
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6026  000C7C  010F               	movlb	15	; () banked
  6027  000C7E  8D15               	bsf	21,6,b	;volatile
  6028  000C80  D002               	goto	l511
  6029  000C82                     l510:
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;inc\CANlib.h: 1065: else
  6033                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6034  000C82  010F               	movlb	15	; () banked
  6035  000C84  9D15               	bcf	21,6,b	;volatile
  6036  000C86                     l511:
  6037                           
  6038                           ; BSR set to: 15
  6039                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6040  000C86  0100               	movlb	0	; () banked
  6041  000C88  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6042  000C8A  D003               	goto	l512
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6046  000C8C  010F               	movlb	15	; () banked
  6047  000C8E  8F15               	bsf	21,7,b	;volatile
  6048  000C90  D003               	goto	l3111
  6049  000C92                     l512:
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;inc\CANlib.h: 1070: else
  6053                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6054  000C92  010F               	movlb	15	; () banked
  6055  000C94  9F15               	bcf	21,7,b	;volatile
  6056  000C96  D000               	goto	l3111
  6057  000C98                     l3111:
  6058                           
  6059                           ; BSR set to: 15
  6060                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6061  000C98  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  6062  000C9C  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6063  000CA0  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6064  000CA4  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6065  000CA8  0E16               	movlw	22
  6066  000CAA  D006               	goto	u3420
  6067  000CAC                     u3425:
  6068  000CAC  0100               	movlb	0	; () banked
  6069  000CAE  90D8               	bcf	status,0,c
  6070  000CB0  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6071  000CB2  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6072  000CB4  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6073  000CB6  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  6074  000CB8                     u3420:
  6075  000CB8  2EE8               	decfsz	wreg,f,c
  6076  000CBA  D7F8               	goto	u3425
  6077  000CBC  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  6078  000CC0  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6079  000CC4  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6080  000CC8  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6084  000CCC  0100               	movlb	0	; () banked
  6085  000CCE  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  6086  000CD0  0100               	movlb	0	; () banked
  6087  000CD2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  6088  000CD4  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6089  000CD6  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6090  000CD8  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6094  000CDA  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6095  000CDE  D000               	goto	l514
  6096  000CE0                     l514:
  6097                           
  6098                           ; BSR set to: 0
  6099  000CE0  0012               	return		;funcret
  6100  000CE2                     __end_of_CANSetFilter:
  6101                           	opt stack 0
  6102                           tblptru	equ	0xFF8
  6103                           tblptrh	equ	0xFF7
  6104                           tblptrl	equ	0xFF6
  6105                           tablat	equ	0xFF5
  6106                           prodh	equ	0xFF4
  6107                           prodl	equ	0xFF3
  6108                           intcon	equ	0xFF2
  6109                           intcon2	equ	0xFF1
  6110                           postinc0	equ	0xFEE
  6111                           wreg	equ	0xFE8
  6112                           postdec1	equ	0xFE5
  6113                           fsr1l	equ	0xFE1
  6114                           indf2	equ	0xFDF
  6115                           fsr2h	equ	0xFDA
  6116                           fsr2l	equ	0xFD9
  6117                           status	equ	0xFD8
  6118                           
  6119 ;; *************** function _CANOperationMode *****************
  6120 ;; Defined at:
  6121 ;;		line 206 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  mode            1    wreg     enum E16879
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;  mode            1   18[BANK0 ] enum E16879
  6126 ;; Return value:  Size  Location     Type
  6127 ;;		None               void
  6128 ;; Registers used:
  6129 ;;		wreg, status,2, status,0
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6135 ;;      Params:         0       0       0       0
  6136 ;;      Locals:         0       1       0       0
  6137 ;;      Temps:          0       0       0       0
  6138 ;;      Totals:         0       1       0       0
  6139 ;;Total ram usage:        1 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    4
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_CANInitialize
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text11
  6150  002D56                     __ptext11:
  6151                           	opt stack 0
  6152  002D56                     _CANOperationMode:
  6153                           	opt stack 24
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;incstack = 0
  6157                           ;CANOperationMode@mode stored from wreg
  6158  002D56  0100               	movlb	0	; () banked
  6159  002D58  6F72               	movwf	CANOperationMode@mode& (0+255),b
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;inc\CANlib.h: 208: CANCON = mode;
  6163  002D5A  C072  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6164                           
  6165                           ; BSR set to: 0
  6166                           
  6167                           ;inc\CANlib.h: 210: while((CANSTAT & 0b11100000) != mode );
  6168  002D5E  D000               	goto	l2707
  6169  002D60                     l2707:
  6170                           
  6171                           ; BSR set to: 0
  6172  002D60  506E               	movf	3950,w,c	;volatile
  6173  002D62  0BE0               	andlw	224
  6174  002D64  0100               	movlb	0	; () banked
  6175  002D66  1972               	xorwf	CANOperationMode@mode& (0+255),w,b
  6176  002D68  A4D8               	btfss	status,2,c
  6177  002D6A  D7FA               	goto	l2707
  6178                           
  6179                           ; BSR set to: 0
  6180                           
  6181                           ; BSR set to: 0
  6182  002D6C  0012               	return		;funcret
  6183  002D6E                     __end_of_CANOperationMode:
  6184                           	opt stack 0
  6185                           tblptru	equ	0xFF8
  6186                           tblptrh	equ	0xFF7
  6187                           tblptrl	equ	0xFF6
  6188                           tablat	equ	0xFF5
  6189                           prodh	equ	0xFF4
  6190                           prodl	equ	0xFF3
  6191                           intcon	equ	0xFF2
  6192                           intcon2	equ	0xFF1
  6193                           postinc0	equ	0xFEE
  6194                           wreg	equ	0xFE8
  6195                           postdec1	equ	0xFE5
  6196                           fsr1l	equ	0xFE1
  6197                           indf2	equ	0xFDF
  6198                           fsr2h	equ	0xFDA
  6199                           fsr2l	equ	0xFD9
  6200                           status	equ	0xFD8
  6201                           
  6202 ;; *************** function _calibrazione *****************
  6203 ;; Defined at:
  6204 ;;		line 170 in file "sterzo.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;		None               void
  6211 ;; Registers used:
  6212 ;;		wreg, status,2, status,0, cstack
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6218 ;;      Params:         0       0       0       0
  6219 ;;      Locals:         0       0       0       0
  6220 ;;      Temps:          0       0       0       0
  6221 ;;      Totals:         0       0       0       0
  6222 ;;Total ram usage:        0 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; Hardware stack levels required when called:    5
  6225 ;; This function calls:
  6226 ;;		_BusyADC
  6227 ;;		_ConvertADC
  6228 ;;		_ReadADC
  6229 ;;		___aldiv
  6230 ;; This function is called by:
  6231 ;;		_main
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           	psect	text12
  6236  002B2E                     __ptext12:
  6237                           	opt stack 0
  6238  002B2E                     _calibrazione:
  6239                           	opt stack 25
  6240                           
  6241                           ;sterzo.c: 171: ConvertADC();
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;incstack = 0
  6245  002B2E  ECED  F016         	call	_ConvertADC	;wreg free
  6246                           
  6247                           ;sterzo.c: 172: while (BusyADC());
  6248  002B32  D000               	goto	l3701
  6249  002B34                     l3701:
  6250  002B34  ECD6  F016         	call	_BusyADC	;wreg free
  6251  002B38  0900               	iorlw	0
  6252  002B3A  A4D8               	btfss	status,2,c
  6253  002B3C  D7FB               	goto	l3701
  6254                           
  6255                           ;sterzo.c: 173: ADCResult = ReadADC();
  6256  002B3E  ECC3  F016         	call	_ReadADC	;wreg free
  6257  002B42  0100               	movlb	0	; () banked
  6258  002B44  C072  F090         	movff	?_ReadADC,_ADCResult
  6259  002B48  0100               	movlb	0	; () banked
  6260  002B4A  C073  F091         	movff	?_ReadADC+1,_ADCResult+1
  6261  002B4E  0100               	movlb	0	; () banked
  6262  002B50  0E00               	movlw	0
  6263  002B52  BF91               	btfsc	(_ADCResult+1)& (0+255),7,b
  6264  002B54  0EFF               	movlw	-1
  6265  002B56  6F92               	movwf	(_ADCResult+2)& (0+255),b
  6266  002B58  6F93               	movwf	(_ADCResult+3)& (0+255),b
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;sterzo.c: 174: calibration = (ADCResult - 511) / 30;
  6270  002B5A  0E01               	movlw	1
  6271  002B5C  0100               	movlb	0	; () banked
  6272  002B5E  2590               	addwf	_ADCResult& (0+255),w,b
  6273  002B60  0100               	movlb	0	; () banked
  6274  002B62  6F72               	movwf	___aldiv@dividend& (0+255),b
  6275  002B64  0EFE               	movlw	254
  6276  002B66  0100               	movlb	0	; () banked
  6277  002B68  2191               	addwfc	(_ADCResult+1)& (0+255),w,b
  6278  002B6A  0100               	movlb	0	; () banked
  6279  002B6C  6F73               	movwf	(___aldiv@dividend+1)& (0+255),b
  6280  002B6E  0EFF               	movlw	255
  6281  002B70  0100               	movlb	0	; () banked
  6282  002B72  2192               	addwfc	(_ADCResult+2)& (0+255),w,b
  6283  002B74  0100               	movlb	0	; () banked
  6284  002B76  6F74               	movwf	(___aldiv@dividend+2)& (0+255),b
  6285  002B78  0EFF               	movlw	255
  6286  002B7A  0100               	movlb	0	; () banked
  6287  002B7C  2193               	addwfc	(_ADCResult+3)& (0+255),w,b
  6288  002B7E  0100               	movlb	0	; () banked
  6289  002B80  6F75               	movwf	(___aldiv@dividend+3)& (0+255),b
  6290  002B82  0E1E               	movlw	30
  6291  002B84  0100               	movlb	0	; () banked
  6292  002B86  6F76               	movwf	___aldiv@divisor& (0+255),b
  6293  002B88  0E00               	movlw	0
  6294  002B8A  6F77               	movwf	(___aldiv@divisor+1)& (0+255),b
  6295  002B8C  0E00               	movlw	0
  6296  002B8E  6F78               	movwf	(___aldiv@divisor+2)& (0+255),b
  6297  002B90  0E00               	movlw	0
  6298  002B92  6F79               	movwf	(___aldiv@divisor+3)& (0+255),b
  6299  002B94  EC96  F013         	call	___aldiv	;wreg free
  6300  002B98  C072  F029         	movff	?___aldiv,_calibration
  6301  002B9C  C073  F02A         	movff	?___aldiv+1,_calibration+1
  6302  002BA0  0012               	return		;funcret
  6303  002BA2                     __end_of_calibrazione:
  6304                           	opt stack 0
  6305                           tblptru	equ	0xFF8
  6306                           tblptrh	equ	0xFF7
  6307                           tblptrl	equ	0xFF6
  6308                           tablat	equ	0xFF5
  6309                           prodh	equ	0xFF4
  6310                           prodl	equ	0xFF3
  6311                           intcon	equ	0xFF2
  6312                           intcon2	equ	0xFF1
  6313                           postinc0	equ	0xFEE
  6314                           wreg	equ	0xFE8
  6315                           postdec1	equ	0xFE5
  6316                           fsr1l	equ	0xFE1
  6317                           indf2	equ	0xFDF
  6318                           fsr2h	equ	0xFDA
  6319                           fsr2l	equ	0xFD9
  6320                           status	equ	0xFD8
  6321                           
  6322 ;; *************** function ___aldiv *****************
  6323 ;; Defined at:
  6324 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  dividend        4   18[BANK0 ] long 
  6327 ;;  divisor         4   22[BANK0 ] long 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  quotient        4   28[BANK0 ] long 
  6330 ;;  sign            1   27[BANK0 ] unsigned char 
  6331 ;;  counter         1   26[BANK0 ] unsigned char 
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  4   18[BANK0 ] long 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2, status,0
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6341 ;;      Params:         0       8       0       0
  6342 ;;      Locals:         0       6       0       0
  6343 ;;      Temps:          0       0       0       0
  6344 ;;      Totals:         0      14       0       0
  6345 ;;Total ram usage:       14 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; Hardware stack levels required when called:    4
  6348 ;; This function calls:
  6349 ;;		Nothing
  6350 ;; This function is called by:
  6351 ;;		_calibrazione
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text13
  6356  00272C                     __ptext13:
  6357                           	opt stack 0
  6358  00272C                     ___aldiv:
  6359                           	opt stack 25
  6360                           
  6361                           ;incstack = 0
  6362  00272C  0E00               	movlw	0
  6363  00272E  0100               	movlb	0	; () banked
  6364  002730  6F7B               	movwf	___aldiv@sign& (0+255),b
  6365                           
  6366                           ; BSR set to: 0
  6367  002732  0100               	movlb	0	; () banked
  6368  002734  AF79               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6369  002736  D00D               	goto	l3447
  6370                           
  6371                           ; BSR set to: 0
  6372  002738  0100               	movlb	0	; () banked
  6373  00273A  1F79               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6374  00273C  1F78               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6375  00273E  1F77               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6376  002740  6D76               	negf	___aldiv@divisor& (0+255),b
  6377  002742  0E00               	movlw	0
  6378  002744  2377               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6379  002746  2378               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6380  002748  2379               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6381                           
  6382                           ; BSR set to: 0
  6383  00274A  0E01               	movlw	1
  6384  00274C  0100               	movlb	0	; () banked
  6385  00274E  6F7B               	movwf	___aldiv@sign& (0+255),b
  6386  002750  D000               	goto	l3447
  6387  002752                     l3447:
  6388                           
  6389                           ; BSR set to: 0
  6390  002752  0100               	movlb	0	; () banked
  6391  002754  AF75               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  6392  002756  D00D               	goto	l3453
  6393                           
  6394                           ; BSR set to: 0
  6395  002758  0100               	movlb	0	; () banked
  6396  00275A  1F75               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6397  00275C  1F74               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6398  00275E  1F73               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6399  002760  6D72               	negf	___aldiv@dividend& (0+255),b
  6400  002762  0E00               	movlw	0
  6401  002764  2373               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6402  002766  2374               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6403  002768  2375               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6404                           
  6405                           ; BSR set to: 0
  6406  00276A  0E01               	movlw	1
  6407  00276C  0100               	movlb	0	; () banked
  6408  00276E  1B7B               	xorwf	___aldiv@sign& (0+255),f,b
  6409  002770  D000               	goto	l3453
  6410  002772                     l3453:
  6411                           
  6412                           ; BSR set to: 0
  6413  002772  0E00               	movlw	0
  6414  002774  0100               	movlb	0	; () banked
  6415  002776  6F7C               	movwf	___aldiv@quotient& (0+255),b
  6416  002778  0E00               	movlw	0
  6417  00277A  6F7D               	movwf	(___aldiv@quotient+1)& (0+255),b
  6418  00277C  0E00               	movlw	0
  6419  00277E  6F7E               	movwf	(___aldiv@quotient+2)& (0+255),b
  6420  002780  0E00               	movlw	0
  6421  002782  6F7F               	movwf	(___aldiv@quotient+3)& (0+255),b
  6422                           
  6423                           ; BSR set to: 0
  6424  002784  0100               	movlb	0	; () banked
  6425  002786  5176               	movf	___aldiv@divisor& (0+255),w,b
  6426  002788  0100               	movlb	0	; () banked
  6427  00278A  1177               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6428  00278C  0100               	movlb	0	; () banked
  6429  00278E  1178               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6430  002790  0100               	movlb	0	; () banked
  6431  002792  1179               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6432  002794  B4D8               	btfsc	status,2,c
  6433  002796  D047               	goto	l3475
  6434                           
  6435                           ; BSR set to: 0
  6436  002798  0E01               	movlw	1
  6437  00279A  0100               	movlb	0	; () banked
  6438  00279C  6F7A               	movwf	___aldiv@counter& (0+255),b
  6439  00279E  D009               	goto	l3461
  6440  0027A0                     l3459:
  6441                           
  6442                           ; BSR set to: 0
  6443  0027A0  0100               	movlb	0	; () banked
  6444  0027A2  90D8               	bcf	status,0,c
  6445  0027A4  3776               	rlcf	___aldiv@divisor& (0+255),f,b
  6446  0027A6  3777               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6447  0027A8  3778               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6448  0027AA  3779               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6449  0027AC  0100               	movlb	0	; () banked
  6450  0027AE  2B7A               	incf	___aldiv@counter& (0+255),f,b
  6451  0027B0  D000               	goto	l3461
  6452  0027B2                     l3461:
  6453                           
  6454                           ; BSR set to: 0
  6455  0027B2  0100               	movlb	0	; () banked
  6456  0027B4  BF79               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  6457  0027B6  D002               	goto	l3463
  6458  0027B8  D7F3               	goto	l3459
  6459                           
  6460                           ; BSR set to: 0
  6461  0027BA  D000               	goto	l3463
  6462  0027BC                     l3463:
  6463                           
  6464                           ; BSR set to: 0
  6465  0027BC  0100               	movlb	0	; () banked
  6466  0027BE  90D8               	bcf	status,0,c
  6467  0027C0  377C               	rlcf	___aldiv@quotient& (0+255),f,b
  6468  0027C2  377D               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6469  0027C4  377E               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6470  0027C6  377F               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6471                           
  6472                           ; BSR set to: 0
  6473  0027C8  0100               	movlb	0	; () banked
  6474  0027CA  5176               	movf	___aldiv@divisor& (0+255),w,b
  6475  0027CC  0100               	movlb	0	; () banked
  6476  0027CE  5D72               	subwf	___aldiv@dividend& (0+255),w,b
  6477  0027D0  0100               	movlb	0	; () banked
  6478  0027D2  5177               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6479  0027D4  0100               	movlb	0	; () banked
  6480  0027D6  5973               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6481  0027D8  0100               	movlb	0	; () banked
  6482  0027DA  5178               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6483  0027DC  0100               	movlb	0	; () banked
  6484  0027DE  5974               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6485  0027E0  0100               	movlb	0	; () banked
  6486  0027E2  5179               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6487  0027E4  0100               	movlb	0	; () banked
  6488  0027E6  5975               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6489  0027E8  A0D8               	btfss	status,0,c
  6490  0027EA  D013               	goto	l3471
  6491                           
  6492                           ; BSR set to: 0
  6493  0027EC  0100               	movlb	0	; () banked
  6494  0027EE  5176               	movf	___aldiv@divisor& (0+255),w,b
  6495  0027F0  0100               	movlb	0	; () banked
  6496  0027F2  5F72               	subwf	___aldiv@dividend& (0+255),f,b
  6497  0027F4  0100               	movlb	0	; () banked
  6498  0027F6  5177               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6499  0027F8  0100               	movlb	0	; () banked
  6500  0027FA  5B73               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  6501  0027FC  0100               	movlb	0	; () banked
  6502  0027FE  5178               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6503  002800  0100               	movlb	0	; () banked
  6504  002802  5B74               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  6505  002804  0100               	movlb	0	; () banked
  6506  002806  5179               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6507  002808  0100               	movlb	0	; () banked
  6508  00280A  5B75               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  6509                           
  6510                           ; BSR set to: 0
  6511  00280C  0100               	movlb	0	; () banked
  6512  00280E  817C               	bsf	___aldiv@quotient& (0+255),0,b
  6513  002810  D000               	goto	l3471
  6514  002812                     l3471:
  6515                           
  6516                           ; BSR set to: 0
  6517  002812  0100               	movlb	0	; () banked
  6518  002814  90D8               	bcf	status,0,c
  6519  002816  3379               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  6520  002818  3378               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  6521  00281A  3377               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  6522  00281C  3376               	rrcf	___aldiv@divisor& (0+255),f,b
  6523                           
  6524                           ; BSR set to: 0
  6525  00281E  0100               	movlb	0	; () banked
  6526  002820  2F7A               	decfsz	___aldiv@counter& (0+255),f,b
  6527  002822  D7CC               	goto	l3463
  6528                           
  6529                           ; BSR set to: 0
  6530  002824  D000               	goto	l3475
  6531  002826                     l3475:
  6532                           
  6533                           ; BSR set to: 0
  6534  002826  0100               	movlb	0	; () banked
  6535  002828  517B               	movf	___aldiv@sign& (0+255),w,b
  6536  00282A  0100               	movlb	0	; () banked
  6537  00282C  B4D8               	btfsc	status,2,c
  6538  00282E  D00A               	goto	l3479
  6539                           
  6540                           ; BSR set to: 0
  6541  002830  0100               	movlb	0	; () banked
  6542  002832  1F7F               	comf	(___aldiv@quotient+3)& (0+255),f,b
  6543  002834  1F7E               	comf	(___aldiv@quotient+2)& (0+255),f,b
  6544  002836  1F7D               	comf	(___aldiv@quotient+1)& (0+255),f,b
  6545  002838  6D7C               	negf	___aldiv@quotient& (0+255),b
  6546  00283A  0E00               	movlw	0
  6547  00283C  237D               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  6548  00283E  237E               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  6549  002840  237F               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  6550  002842  D000               	goto	l3479
  6551  002844                     l3479:
  6552                           
  6553                           ; BSR set to: 0
  6554  002844  C07C  F072         	movff	___aldiv@quotient,?___aldiv
  6555  002848  C07D  F073         	movff	___aldiv@quotient+1,?___aldiv+1
  6556  00284C  C07E  F074         	movff	___aldiv@quotient+2,?___aldiv+2
  6557  002850  C07F  F075         	movff	___aldiv@quotient+3,?___aldiv+3
  6558  002854  D000               	goto	l749
  6559  002856                     l749:
  6560                           
  6561                           ; BSR set to: 0
  6562  002856  0012               	return		;funcret
  6563  002858                     __end_of___aldiv:
  6564                           	opt stack 0
  6565                           tblptru	equ	0xFF8
  6566                           tblptrh	equ	0xFF7
  6567                           tblptrl	equ	0xFF6
  6568                           tablat	equ	0xFF5
  6569                           prodh	equ	0xFF4
  6570                           prodl	equ	0xFF3
  6571                           intcon	equ	0xFF2
  6572                           intcon2	equ	0xFF1
  6573                           postinc0	equ	0xFEE
  6574                           wreg	equ	0xFE8
  6575                           postdec1	equ	0xFE5
  6576                           fsr1l	equ	0xFE1
  6577                           indf2	equ	0xFDF
  6578                           fsr2h	equ	0xFDA
  6579                           fsr2l	equ	0xFD9
  6580                           status	equ	0xFD8
  6581                           
  6582 ;; *************** function _ReadADC *****************
  6583 ;; Defined at:
  6584 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;		None
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;		None
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  2   18[BANK0 ] int 
  6591 ;; Registers used:
  6592 ;;		wreg, status,2
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 0/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6598 ;;      Params:         0       2       0       0
  6599 ;;      Locals:         0       0       0       0
  6600 ;;      Temps:          0       2       0       0
  6601 ;;      Totals:         0       4       0       0
  6602 ;;Total ram usage:        4 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    4
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_calibrazione
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           	psect	text14
  6613  002D86                     __ptext14:
  6614                           	opt stack 0
  6615  002D86                     _ReadADC:
  6616                           	opt stack 25
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;incstack = 0
  6620  002D86  50C4               	movf	4036,w,c	;volatile
  6621  002D88  0100               	movlb	0	; () banked
  6622  002D8A  6F74               	movwf	??_ReadADC& (0+255),b
  6623  002D8C  50C3               	movf	4035,w,c	;volatile
  6624  002D8E  0100               	movlb	0	; () banked
  6625  002D90  6F72               	movwf	?_ReadADC& (0+255),b
  6626  002D92  C074  F073         	movff	??_ReadADC,?_ReadADC+1
  6627  002D96  D000               	goto	l670
  6628  002D98                     l670:
  6629                           
  6630                           ; BSR set to: 0
  6631  002D98  0012               	return		;funcret
  6632  002D9A                     __end_of_ReadADC:
  6633                           	opt stack 0
  6634                           tblptru	equ	0xFF8
  6635                           tblptrh	equ	0xFF7
  6636                           tblptrl	equ	0xFF6
  6637                           tablat	equ	0xFF5
  6638                           prodh	equ	0xFF4
  6639                           prodl	equ	0xFF3
  6640                           intcon	equ	0xFF2
  6641                           intcon2	equ	0xFF1
  6642                           postinc0	equ	0xFEE
  6643                           wreg	equ	0xFE8
  6644                           postdec1	equ	0xFE5
  6645                           fsr1l	equ	0xFE1
  6646                           indf2	equ	0xFDF
  6647                           fsr2h	equ	0xFDA
  6648                           fsr2l	equ	0xFD9
  6649                           status	equ	0xFD8
  6650                           
  6651 ;; *************** function _ConvertADC *****************
  6652 ;; Defined at:
  6653 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;		None
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;		None
  6658 ;; Return value:  Size  Location     Type
  6659 ;;		None               void
  6660 ;; Registers used:
  6661 ;;		None
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6667 ;;      Params:         0       0       0       0
  6668 ;;      Locals:         0       0       0       0
  6669 ;;      Temps:          0       0       0       0
  6670 ;;      Totals:         0       0       0       0
  6671 ;;Total ram usage:        0 bytes
  6672 ;; Hardware stack levels used:    1
  6673 ;; Hardware stack levels required when called:    4
  6674 ;; This function calls:
  6675 ;;		Nothing
  6676 ;; This function is called by:
  6677 ;;		_calibrazione
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           	psect	text15
  6682  002DDA                     __ptext15:
  6683                           	opt stack 0
  6684  002DDA                     _ConvertADC:
  6685                           	opt stack 25
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;incstack = 0
  6689  002DDA  82C2               	bsf	4034,1,c	;volatile
  6690  002DDC  0012               	return		;funcret
  6691  002DDE                     __end_of_ConvertADC:
  6692                           	opt stack 0
  6693                           tblptru	equ	0xFF8
  6694                           tblptrh	equ	0xFF7
  6695                           tblptrl	equ	0xFF6
  6696                           tablat	equ	0xFF5
  6697                           prodh	equ	0xFF4
  6698                           prodl	equ	0xFF3
  6699                           intcon	equ	0xFF2
  6700                           intcon2	equ	0xFF1
  6701                           postinc0	equ	0xFEE
  6702                           wreg	equ	0xFE8
  6703                           postdec1	equ	0xFE5
  6704                           fsr1l	equ	0xFE1
  6705                           indf2	equ	0xFDF
  6706                           fsr2h	equ	0xFDA
  6707                           fsr2l	equ	0xFD9
  6708                           status	equ	0xFD8
  6709                           
  6710 ;; *************** function _BusyADC *****************
  6711 ;; Defined at:
  6712 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;		None
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;		None
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  1    wreg      unsigned char 
  6719 ;; Registers used:
  6720 ;;		wreg
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6726 ;;      Params:         0       0       0       0
  6727 ;;      Locals:         0       0       0       0
  6728 ;;      Temps:          0       0       0       0
  6729 ;;      Totals:         0       0       0       0
  6730 ;;Total ram usage:        0 bytes
  6731 ;; Hardware stack levels used:    1
  6732 ;; Hardware stack levels required when called:    4
  6733 ;; This function calls:
  6734 ;;		Nothing
  6735 ;; This function is called by:
  6736 ;;		_calibrazione
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text16
  6741  002DAC                     __ptext16:
  6742                           	opt stack 0
  6743  002DAC                     _BusyADC:
  6744                           	opt stack 25
  6745                           
  6746                           ;incstack = 0
  6747  002DAC  A2C2               	btfss	4034,1,c	;volatile
  6748  002DAE  D002               	goto	u3890
  6749  002DB0  0E01               	movlw	1
  6750  002DB2  D002               	goto	l640
  6751  002DB4                     u3890:
  6752  002DB4  0E00               	movlw	0
  6753  002DB6  D000               	goto	l640
  6754  002DB8                     l640:
  6755  002DB8  0012               	return		;funcret
  6756  002DBA                     __end_of_BusyADC:
  6757                           	opt stack 0
  6758                           tblptru	equ	0xFF8
  6759                           tblptrh	equ	0xFF7
  6760                           tblptrl	equ	0xFF6
  6761                           tablat	equ	0xFF5
  6762                           prodh	equ	0xFF4
  6763                           prodl	equ	0xFF3
  6764                           intcon	equ	0xFF2
  6765                           intcon2	equ	0xFF1
  6766                           postinc0	equ	0xFEE
  6767                           wreg	equ	0xFE8
  6768                           postdec1	equ	0xFE5
  6769                           fsr1l	equ	0xFE1
  6770                           indf2	equ	0xFDF
  6771                           fsr2h	equ	0xFDA
  6772                           fsr2l	equ	0xFD9
  6773                           status	equ	0xFD8
  6774                           
  6775 ;; *************** function ___lmul *****************
  6776 ;; Defined at:
  6777 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;  multiplier      4   18[BANK0 ] unsigned long 
  6780 ;;  multiplicand    4   22[BANK0 ] unsigned long 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;  product         4   26[BANK0 ] unsigned long 
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  4   18[BANK0 ] unsigned long 
  6785 ;; Registers used:
  6786 ;;		wreg, status,2, status,0
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6792 ;;      Params:         0       8       0       0
  6793 ;;      Locals:         0       4       0       0
  6794 ;;      Temps:          0       0       0       0
  6795 ;;      Totals:         0      12       0       0
  6796 ;;Total ram usage:       12 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; Hardware stack levels required when called:    4
  6799 ;; This function calls:
  6800 ;;		Nothing
  6801 ;; This function is called by:
  6802 ;;		_main
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           	psect	text17
  6807  002AB4                     __ptext17:
  6808                           	opt stack 0
  6809  002AB4                     ___lmul:
  6810                           	opt stack 26
  6811                           
  6812                           ;incstack = 0
  6813  002AB4  0E00               	movlw	0
  6814  002AB6  0100               	movlb	0	; () banked
  6815  002AB8  6F7A               	movwf	___lmul@product& (0+255),b
  6816  002ABA  0E00               	movlw	0
  6817  002ABC  6F7B               	movwf	(___lmul@product+1)& (0+255),b
  6818  002ABE  0E00               	movlw	0
  6819  002AC0  6F7C               	movwf	(___lmul@product+2)& (0+255),b
  6820  002AC2  0E00               	movlw	0
  6821  002AC4  6F7D               	movwf	(___lmul@product+3)& (0+255),b
  6822  002AC6  D000               	goto	l3717
  6823  002AC8                     l3717:
  6824                           
  6825                           ; BSR set to: 0
  6826  002AC8  0100               	movlb	0	; () banked
  6827  002ACA  A172               	btfss	___lmul@multiplier& (0+255),0,b
  6828  002ACC  D011               	goto	l3721
  6829                           
  6830                           ; BSR set to: 0
  6831  002ACE  0100               	movlb	0	; () banked
  6832  002AD0  5176               	movf	___lmul@multiplicand& (0+255),w,b
  6833  002AD2  0100               	movlb	0	; () banked
  6834  002AD4  277A               	addwf	___lmul@product& (0+255),f,b
  6835  002AD6  0100               	movlb	0	; () banked
  6836  002AD8  5177               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6837  002ADA  0100               	movlb	0	; () banked
  6838  002ADC  237B               	addwfc	(___lmul@product+1)& (0+255),f,b
  6839  002ADE  0100               	movlb	0	; () banked
  6840  002AE0  5178               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6841  002AE2  0100               	movlb	0	; () banked
  6842  002AE4  237C               	addwfc	(___lmul@product+2)& (0+255),f,b
  6843  002AE6  0100               	movlb	0	; () banked
  6844  002AE8  5179               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6845  002AEA  0100               	movlb	0	; () banked
  6846  002AEC  237D               	addwfc	(___lmul@product+3)& (0+255),f,b
  6847  002AEE  D000               	goto	l3721
  6848  002AF0                     l3721:
  6849                           
  6850                           ; BSR set to: 0
  6851  002AF0  0100               	movlb	0	; () banked
  6852  002AF2  90D8               	bcf	status,0,c
  6853  002AF4  3776               	rlcf	___lmul@multiplicand& (0+255),f,b
  6854  002AF6  3777               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6855  002AF8  3778               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6856  002AFA  3779               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6857                           
  6858                           ; BSR set to: 0
  6859  002AFC  0100               	movlb	0	; () banked
  6860  002AFE  90D8               	bcf	status,0,c
  6861  002B00  3375               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6862  002B02  3374               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6863  002B04  3373               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6864  002B06  3372               	rrcf	___lmul@multiplier& (0+255),f,b
  6865  002B08  0100               	movlb	0	; () banked
  6866  002B0A  5172               	movf	___lmul@multiplier& (0+255),w,b
  6867  002B0C  0100               	movlb	0	; () banked
  6868  002B0E  1173               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6869  002B10  0100               	movlb	0	; () banked
  6870  002B12  1174               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6871  002B14  0100               	movlb	0	; () banked
  6872  002B16  1175               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6873  002B18  A4D8               	btfss	status,2,c
  6874  002B1A  D7D6               	goto	l3717
  6875                           
  6876                           ; BSR set to: 0
  6877  002B1C  C07A  F072         	movff	___lmul@product,?___lmul
  6878  002B20  C07B  F073         	movff	___lmul@product+1,?___lmul+1
  6879  002B24  C07C  F074         	movff	___lmul@product+2,?___lmul+2
  6880  002B28  C07D  F075         	movff	___lmul@product+3,?___lmul+3
  6881                           
  6882                           ; BSR set to: 0
  6883  002B2C  0012               	return		;funcret
  6884  002B2E                     __end_of___lmul:
  6885                           	opt stack 0
  6886                           tblptru	equ	0xFF8
  6887                           tblptrh	equ	0xFF7
  6888                           tblptrl	equ	0xFF6
  6889                           tablat	equ	0xFF5
  6890                           prodh	equ	0xFF4
  6891                           prodl	equ	0xFF3
  6892                           intcon	equ	0xFF2
  6893                           intcon2	equ	0xFF1
  6894                           postinc0	equ	0xFEE
  6895                           wreg	equ	0xFE8
  6896                           postdec1	equ	0xFE5
  6897                           fsr1l	equ	0xFE1
  6898                           indf2	equ	0xFDF
  6899                           fsr2h	equ	0xFDA
  6900                           fsr2l	equ	0xFD9
  6901                           status	equ	0xFD8
  6902                           
  6903 ;; *************** function ___lldiv *****************
  6904 ;; Defined at:
  6905 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  6906 ;; Parameters:    Size  Location     Type
  6907 ;;  dividend        4   30[BANK0 ] unsigned long 
  6908 ;;  divisor         4   34[BANK0 ] unsigned long 
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;  quotient        4   38[BANK0 ] unsigned long 
  6911 ;;  counter         1   42[BANK0 ] unsigned char 
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  4   30[BANK0 ] unsigned long 
  6914 ;; Registers used:
  6915 ;;		wreg, status,2, status,0
  6916 ;; Tracked objects:
  6917 ;;		On entry : 0/0
  6918 ;;		On exit  : 0/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6921 ;;      Params:         0       8       0       0
  6922 ;;      Locals:         0       5       0       0
  6923 ;;      Temps:          0       0       0       0
  6924 ;;      Totals:         0      13       0       0
  6925 ;;Total ram usage:       13 bytes
  6926 ;; Hardware stack levels used:    1
  6927 ;; Hardware stack levels required when called:    4
  6928 ;; This function calls:
  6929 ;;		Nothing
  6930 ;; This function is called by:
  6931 ;;		_main
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           	psect	text18
  6936  002858                     __ptext18:
  6937                           	opt stack 0
  6938  002858                     ___lldiv:
  6939                           	opt stack 26
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;incstack = 0
  6943  002858  0E00               	movlw	0
  6944  00285A  0100               	movlb	0	; () banked
  6945  00285C  6F86               	movwf	___lldiv@quotient& (0+255),b
  6946  00285E  0E00               	movlw	0
  6947  002860  6F87               	movwf	(___lldiv@quotient+1)& (0+255),b
  6948  002862  0E00               	movlw	0
  6949  002864  6F88               	movwf	(___lldiv@quotient+2)& (0+255),b
  6950  002866  0E00               	movlw	0
  6951  002868  6F89               	movwf	(___lldiv@quotient+3)& (0+255),b
  6952                           
  6953                           ; BSR set to: 0
  6954  00286A  0100               	movlb	0	; () banked
  6955  00286C  5182               	movf	___lldiv@divisor& (0+255),w,b
  6956  00286E  0100               	movlb	0	; () banked
  6957  002870  1183               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6958  002872  0100               	movlb	0	; () banked
  6959  002874  1184               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6960  002876  0100               	movlb	0	; () banked
  6961  002878  1185               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6962  00287A  B4D8               	btfsc	status,2,c
  6963  00287C  D047               	goto	l1135
  6964                           
  6965                           ; BSR set to: 0
  6966  00287E  0E01               	movlw	1
  6967  002880  0100               	movlb	0	; () banked
  6968  002882  6F8A               	movwf	___lldiv@counter& (0+255),b
  6969  002884  D009               	goto	l3733
  6970  002886                     l3731:
  6971                           
  6972                           ; BSR set to: 0
  6973  002886  0100               	movlb	0	; () banked
  6974  002888  90D8               	bcf	status,0,c
  6975  00288A  3782               	rlcf	___lldiv@divisor& (0+255),f,b
  6976  00288C  3783               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6977  00288E  3784               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6978  002890  3785               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6979  002892  0100               	movlb	0	; () banked
  6980  002894  2B8A               	incf	___lldiv@counter& (0+255),f,b
  6981  002896  D000               	goto	l3733
  6982  002898                     l3733:
  6983                           
  6984                           ; BSR set to: 0
  6985  002898  0100               	movlb	0	; () banked
  6986  00289A  BF85               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  6987  00289C  D002               	goto	l3735
  6988  00289E  D7F3               	goto	l3731
  6989                           
  6990                           ; BSR set to: 0
  6991  0028A0  D000               	goto	l3735
  6992  0028A2                     l3735:
  6993                           
  6994                           ; BSR set to: 0
  6995  0028A2  0100               	movlb	0	; () banked
  6996  0028A4  90D8               	bcf	status,0,c
  6997  0028A6  3786               	rlcf	___lldiv@quotient& (0+255),f,b
  6998  0028A8  3787               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6999  0028AA  3788               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7000  0028AC  3789               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7001                           
  7002                           ; BSR set to: 0
  7003  0028AE  0100               	movlb	0	; () banked
  7004  0028B0  5182               	movf	___lldiv@divisor& (0+255),w,b
  7005  0028B2  0100               	movlb	0	; () banked
  7006  0028B4  5D7E               	subwf	___lldiv@dividend& (0+255),w,b
  7007  0028B6  0100               	movlb	0	; () banked
  7008  0028B8  5183               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7009  0028BA  0100               	movlb	0	; () banked
  7010  0028BC  597F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7011  0028BE  0100               	movlb	0	; () banked
  7012  0028C0  5184               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7013  0028C2  0100               	movlb	0	; () banked
  7014  0028C4  5980               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7015  0028C6  0100               	movlb	0	; () banked
  7016  0028C8  5185               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7017  0028CA  0100               	movlb	0	; () banked
  7018  0028CC  5981               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7019  0028CE  A0D8               	btfss	status,0,c
  7020  0028D0  D013               	goto	l3743
  7021                           
  7022                           ; BSR set to: 0
  7023  0028D2  0100               	movlb	0	; () banked
  7024  0028D4  5182               	movf	___lldiv@divisor& (0+255),w,b
  7025  0028D6  0100               	movlb	0	; () banked
  7026  0028D8  5F7E               	subwf	___lldiv@dividend& (0+255),f,b
  7027  0028DA  0100               	movlb	0	; () banked
  7028  0028DC  5183               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7029  0028DE  0100               	movlb	0	; () banked
  7030  0028E0  5B7F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7031  0028E2  0100               	movlb	0	; () banked
  7032  0028E4  5184               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7033  0028E6  0100               	movlb	0	; () banked
  7034  0028E8  5B80               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7035  0028EA  0100               	movlb	0	; () banked
  7036  0028EC  5185               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7037  0028EE  0100               	movlb	0	; () banked
  7038  0028F0  5B81               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7039                           
  7040                           ; BSR set to: 0
  7041  0028F2  0100               	movlb	0	; () banked
  7042  0028F4  8186               	bsf	___lldiv@quotient& (0+255),0,b
  7043  0028F6  D000               	goto	l3743
  7044  0028F8                     l3743:
  7045                           
  7046                           ; BSR set to: 0
  7047  0028F8  0100               	movlb	0	; () banked
  7048  0028FA  90D8               	bcf	status,0,c
  7049  0028FC  3385               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7050  0028FE  3384               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7051  002900  3383               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7052  002902  3382               	rrcf	___lldiv@divisor& (0+255),f,b
  7053                           
  7054                           ; BSR set to: 0
  7055  002904  0100               	movlb	0	; () banked
  7056  002906  2F8A               	decfsz	___lldiv@counter& (0+255),f,b
  7057  002908  D7CC               	goto	l3735
  7058  00290A  D000               	goto	l1135
  7059  00290C                     l1135:
  7060                           
  7061                           ; BSR set to: 0
  7062  00290C  C086  F07E         	movff	___lldiv@quotient,?___lldiv
  7063  002910  C087  F07F         	movff	___lldiv@quotient+1,?___lldiv+1
  7064  002914  C088  F080         	movff	___lldiv@quotient+2,?___lldiv+2
  7065  002918  C089  F081         	movff	___lldiv@quotient+3,?___lldiv+3
  7066                           
  7067                           ; BSR set to: 0
  7068  00291C  0012               	return		;funcret
  7069  00291E                     __end_of___lldiv:
  7070                           	opt stack 0
  7071                           tblptru	equ	0xFF8
  7072                           tblptrh	equ	0xFF7
  7073                           tblptrl	equ	0xFF6
  7074                           tablat	equ	0xFF5
  7075                           prodh	equ	0xFF4
  7076                           prodl	equ	0xFF3
  7077                           intcon	equ	0xFF2
  7078                           intcon2	equ	0xFF1
  7079                           postinc0	equ	0xFEE
  7080                           wreg	equ	0xFE8
  7081                           postdec1	equ	0xFE5
  7082                           fsr1l	equ	0xFE1
  7083                           indf2	equ	0xFDF
  7084                           fsr2h	equ	0xFDA
  7085                           fsr2l	equ	0xFD9
  7086                           status	equ	0xFD8
  7087                           
  7088 ;; *************** function _CANisTXwarningON *****************
  7089 ;; Defined at:
  7090 ;;		line 1119 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7091 ;; Parameters:    Size  Location     Type
  7092 ;;		None
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;		None
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  1    wreg      unsigned char 
  7097 ;; Registers used:
  7098 ;;		wreg
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7104 ;;      Params:         0       0       0       0
  7105 ;;      Locals:         0       0       0       0
  7106 ;;      Temps:          0       0       0       0
  7107 ;;      Totals:         0       0       0       0
  7108 ;;Total ram usage:        0 bytes
  7109 ;; Hardware stack levels used:    1
  7110 ;; Hardware stack levels required when called:    4
  7111 ;; This function calls:
  7112 ;;		Nothing
  7113 ;; This function is called by:
  7114 ;;		_main
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           	psect	text19
  7119  002DBA                     __ptext19:
  7120                           	opt stack 0
  7121  002DBA                     _CANisTXwarningON:
  7122                           	opt stack 26
  7123                           
  7124                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;incstack = 0
  7128  002DBA  A474               	btfss	3956,2,c	;volatile
  7129  002DBC  D002               	goto	u4210
  7130  002DBE  0E01               	movlw	1
  7131  002DC0  D002               	goto	l529
  7132  002DC2                     u4210:
  7133  002DC2  0E00               	movlw	0
  7134  002DC4  D000               	goto	l529
  7135  002DC6                     l529:
  7136  002DC6  0012               	return		;funcret
  7137  002DC8                     __end_of_CANisTXwarningON:
  7138                           	opt stack 0
  7139                           tblptru	equ	0xFF8
  7140                           tblptrh	equ	0xFF7
  7141                           tblptrl	equ	0xFF6
  7142                           tablat	equ	0xFF5
  7143                           prodh	equ	0xFF4
  7144                           prodl	equ	0xFF3
  7145                           intcon	equ	0xFF2
  7146                           intcon2	equ	0xFF1
  7147                           postinc0	equ	0xFEE
  7148                           wreg	equ	0xFE8
  7149                           postdec1	equ	0xFE5
  7150                           fsr1l	equ	0xFE1
  7151                           indf2	equ	0xFDF
  7152                           fsr2h	equ	0xFDA
  7153                           fsr2l	equ	0xFD9
  7154                           status	equ	0xFD8
  7155                           
  7156 ;; *************** function _CANisRXwarningON *****************
  7157 ;; Defined at:
  7158 ;;		line 1127 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7159 ;; Parameters:    Size  Location     Type
  7160 ;;		None
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;		None
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  1    wreg      unsigned char 
  7165 ;; Registers used:
  7166 ;;		wreg
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7172 ;;      Params:         0       0       0       0
  7173 ;;      Locals:         0       0       0       0
  7174 ;;      Temps:          0       0       0       0
  7175 ;;      Totals:         0       0       0       0
  7176 ;;Total ram usage:        0 bytes
  7177 ;; Hardware stack levels used:    1
  7178 ;; Hardware stack levels required when called:    4
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_main
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           	psect	text20
  7187  002DC8                     __ptext20:
  7188                           	opt stack 0
  7189  002DC8                     _CANisRXwarningON:
  7190                           	opt stack 26
  7191                           
  7192                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7193                           
  7194                           ;incstack = 0
  7195  002DC8  A274               	btfss	3956,1,c	;volatile
  7196  002DCA  D002               	goto	u4220
  7197  002DCC  0E01               	movlw	1
  7198  002DCE  D002               	goto	l532
  7199  002DD0                     u4220:
  7200  002DD0  0E00               	movlw	0
  7201  002DD2  D000               	goto	l532
  7202  002DD4                     l532:
  7203  002DD4  0012               	return		;funcret
  7204  002DD6                     __end_of_CANisRXwarningON:
  7205                           	opt stack 0
  7206                           tblptru	equ	0xFF8
  7207                           tblptrh	equ	0xFF7
  7208                           tblptrl	equ	0xFF6
  7209                           tablat	equ	0xFF5
  7210                           prodh	equ	0xFF4
  7211                           prodl	equ	0xFF3
  7212                           intcon	equ	0xFF2
  7213                           intcon2	equ	0xFF1
  7214                           postinc0	equ	0xFEE
  7215                           wreg	equ	0xFE8
  7216                           postdec1	equ	0xFE5
  7217                           fsr1l	equ	0xFE1
  7218                           indf2	equ	0xFDF
  7219                           fsr2h	equ	0xFDA
  7220                           fsr2l	equ	0xFD9
  7221                           status	equ	0xFD8
  7222                           
  7223 ;; *************** function _ISR_bassa *****************
  7224 ;; Defined at:
  7225 ;;		line 85 in file "sterzo.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;		None
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;		None
  7230 ;; Return value:  Size  Location     Type
  7231 ;;		None               void
  7232 ;; Registers used:
  7233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7239 ;;      Params:         0       0       0       0
  7240 ;;      Locals:         0       0       0       0
  7241 ;;      Temps:         20       0       0       0
  7242 ;;      Totals:        20       0       0       0
  7243 ;;Total ram usage:       20 bytes
  7244 ;; Hardware stack levels used:    1
  7245 ;; Hardware stack levels required when called:    3
  7246 ;; This function calls:
  7247 ;;		_CANisRxReady
  7248 ;;		_CANreceiveMessage
  7249 ;;		___lwdiv
  7250 ;;		i1_CANsendMessage
  7251 ;;		i1___wmul
  7252 ;; This function is called by:
  7253 ;;		Interrupt level 1
  7254 ;; This function uses a non-reentrant model
  7255 ;;
  7256                           
  7257                           	psect	intcodelo
  7258  000018                     __pintcodelo:
  7259                           	opt stack 0
  7260  000018                     _ISR_bassa:
  7261                           	opt stack 24
  7262                           
  7263                           ;incstack = 0
  7264  000018  CFD8 F014          	movff	status,??_ISR_bassa+3
  7265  00001C  CFE8 F015          	movff	wreg,??_ISR_bassa+4
  7266  000020  CFE0 F016          	movff	bsr,??_ISR_bassa+5
  7267  000024  CFFA F017          	movff	pclath,??_ISR_bassa+6
  7268  000028  CFFB F018          	movff	pclatu,??_ISR_bassa+7
  7269  00002C  CFE9 F019          	movff	fsr0l,??_ISR_bassa+8
  7270  000030  CFEA F01A          	movff	fsr0h,??_ISR_bassa+9
  7271  000034  CFE1 F01B          	movff	fsr1l,??_ISR_bassa+10
  7272  000038  CFE2 F01C          	movff	fsr1h,??_ISR_bassa+11
  7273  00003C  CFD9 F01D          	movff	fsr2l,??_ISR_bassa+12
  7274  000040  CFDA F01E          	movff	fsr2h,??_ISR_bassa+13
  7275  000044  CFF3 F01F          	movff	prodl,??_ISR_bassa+14
  7276  000048  CFF4 F020          	movff	prodh,??_ISR_bassa+15
  7277  00004C  CFF6 F021          	movff	tblptrl,??_ISR_bassa+16
  7278  000050  CFF7 F022          	movff	tblptrh,??_ISR_bassa+17
  7279  000054  CFF8 F023          	movff	tblptru,??_ISR_bassa+18
  7280  000058  CFF5 F024          	movff	tablat,??_ISR_bassa+19
  7281                           
  7282                           ;sterzo.c: 86: if (CANisRxReady()) {
  7283  00005C  ECB7  F016         	call	_CANisRxReady	;wreg free
  7284  000060  0900               	iorlw	0
  7285  000062  B4D8               	btfsc	status,2,c
  7286  000064  D084               	goto	i1l610
  7287                           
  7288                           ;sterzo.c: 87: CANreceiveMessage(&msg);
  7289  000066  0E2C               	movlw	low _msg
  7290  000068  6E01               	movwf	CANreceiveMessage@msg,c
  7291  00006A  0E00               	movlw	high _msg
  7292  00006C  6E02               	movwf	CANreceiveMessage@msg+1,c
  7293  00006E  EC93  F00D         	call	_CANreceiveMessage	;wreg free
  7294                           
  7295                           ;sterzo.c: 88: if (msg.identifier == 0b00000000111) {
  7296  000072  0E07               	movlw	7
  7297  000074  182C               	xorwf	_msg,w,c
  7298  000076  102D               	iorwf	_msg+1,w,c
  7299  000078  102E               	iorwf	_msg+2,w,c
  7300  00007A  102F               	iorwf	_msg+3,w,c
  7301  00007C  A4D8               	btfss	status,2,c
  7302  00007E  D057               	goto	i1l4057
  7303                           
  7304                           ;sterzo.c: 89: id = msg.identifier;
  7305  000080  C02C  F098         	movff	_msg,_id
  7306  000084  C02D  F099         	movff	_msg+1,_id+1
  7307  000088  C02E  F09A         	movff	_msg+2,_id+2
  7308  00008C  C02F  F09B         	movff	_msg+3,_id+3
  7309                           
  7310                           ;sterzo.c: 90: remote_frame = msg.RTR;
  7311  000090  9247               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7312  000092  B03A               	btfsc	_msg+14,0,c
  7313  000094  8247               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7314                           
  7315                           ;sterzo.c: 91: theorySteering = msg.data[0];
  7316  000096  C030  F02B         	movff	_msg+4,_theorySteering
  7317                           
  7318                           ;sterzo.c: 92: if (theorySteering < calibration) {
  7319  00009A  502B               	movf	_theorySteering,w,c
  7320  00009C  6E11               	movwf	??_ISR_bassa& (0+255),c
  7321  00009E  6A12               	clrf	(??_ISR_bassa+1)& (0+255),c
  7322  0000A0  5029               	movf	_calibration,w,c
  7323  0000A2  5C11               	subwf	??_ISR_bassa,w,c
  7324  0000A4  5012               	movf	??_ISR_bassa+1,w,c
  7325  0000A6  0A80               	xorlw	128
  7326  0000A8  6E13               	movwf	(??_ISR_bassa+2)& (0+255),c
  7327  0000AA  502A               	movf	_calibration+1,w,c
  7328  0000AC  0A80               	xorlw	128
  7329  0000AE  5813               	subwfb	(??_ISR_bassa+2)& (0+255),w,c
  7330  0000B0  B0D8               	btfsc	status,0,c
  7331  0000B2  D005               	goto	i1l4043
  7332                           
  7333                           ;sterzo.c: 93: currentSteering = 0;
  7334  0000B4  0E00               	movlw	0
  7335  0000B6  6E44               	movwf	_currentSteering+1,c
  7336  0000B8  0E00               	movlw	0
  7337  0000BA  6E43               	movwf	_currentSteering,c
  7338  0000BC  D000               	goto	i1l4043
  7339  0000BE                     i1l4043:
  7340                           
  7341                           ;sterzo.c: 94: }
  7342                           ;sterzo.c: 95: currentSteering = theorySteering;
  7343  0000BE  C02B  F043         	movff	_theorySteering,_currentSteering
  7344  0000C2  6A44               	clrf	_currentSteering+1,c
  7345                           
  7346                           ;sterzo.c: 97: currentSteering = ((limiteDx * currentSteering) / 180)+calibration;
  7347  0000C4  C043  F001         	movff	_currentSteering,i1___wmul@multiplier
  7348  0000C8  C044  F002         	movff	_currentSteering+1,i1___wmul@multiplier+1
  7349  0000CC  C045  F003         	movff	_limiteDx,i1___wmul@multiplicand
  7350  0000D0  C046  F004         	movff	_limiteDx+1,i1___wmul@multiplicand+1
  7351  0000D4  EC84  F016         	call	i1___wmul	;wreg free
  7352  0000D8  C001  F007         	movff	?i1___wmul,___lwdiv@dividend
  7353  0000DC  C002  F008         	movff	?i1___wmul+1,___lwdiv@dividend+1
  7354  0000E0  0E00               	movlw	0
  7355  0000E2  6E0A               	movwf	___lwdiv@divisor+1,c
  7356  0000E4  0EB4               	movlw	180
  7357  0000E6  6E09               	movwf	___lwdiv@divisor,c
  7358  0000E8  ECD1  F015         	call	___lwdiv	;wreg free
  7359  0000EC  5029               	movf	_calibration,w,c
  7360  0000EE  2407               	addwf	?___lwdiv,w,c
  7361  0000F0  6E43               	movwf	_currentSteering,c
  7362  0000F2  502A               	movf	_calibration+1,w,c
  7363  0000F4  2008               	addwfc	?___lwdiv+1,w,c
  7364  0000F6  6E44               	movwf	_currentSteering+1,c
  7365                           
  7366                           ;sterzo.c: 98: if (currentSteering > 180) {
  7367  0000F8  BE44               	btfsc	_currentSteering+1,7,c
  7368  0000FA  D00B               	goto	i1l4051
  7369  0000FC  5044               	movf	_currentSteering+1,w,c
  7370  0000FE  E104               	bnz	i1u484_20
  7371  000100  0EB5               	movlw	181
  7372  000102  5C43               	subwf	_currentSteering,w,c
  7373  000104  A0D8               	btfss	status,0,c
  7374  000106  D005               	goto	i1l4051
  7375  000108                     i1u484_20:
  7376                           
  7377                           ;sterzo.c: 99: currentSteering = 180;
  7378  000108  0E00               	movlw	0
  7379  00010A  6E44               	movwf	_currentSteering+1,c
  7380  00010C  0EB4               	movlw	180
  7381  00010E  6E43               	movwf	_currentSteering,c
  7382  000110  D000               	goto	i1l4051
  7383  000112                     i1l4051:
  7384                           
  7385                           ;sterzo.c: 100: }
  7386                           ;sterzo.c: 101: if (currentSteering < 1) {
  7387  000112  BE44               	btfsc	_currentSteering+1,7,c
  7388  000114  D005               	goto	i1l4053
  7389  000116  5044               	movf	_currentSteering+1,w,c
  7390  000118  E108               	bnz	i1l4055
  7391  00011A  0443               	decf	_currentSteering,w,c
  7392  00011C  B0D8               	btfsc	status,0,c
  7393  00011E  D005               	goto	i1l4055
  7394  000120                     i1l4053:
  7395                           
  7396                           ;sterzo.c: 102: currentSteering = 0;
  7397  000120  0E00               	movlw	0
  7398  000122  6E44               	movwf	_currentSteering+1,c
  7399  000124  0E00               	movlw	0
  7400  000126  6E43               	movwf	_currentSteering,c
  7401  000128  D000               	goto	i1l4055
  7402  00012A                     i1l4055:
  7403                           
  7404                           ;sterzo.c: 103: }
  7405                           ;sterzo.c: 106: noChange = 1;
  7406  00012A  8047               	bsf	_noChange/(0+8),_noChange& (0+7),c
  7407  00012C  D000               	goto	i1l4057
  7408  00012E                     i1l4057:
  7409                           
  7410                           ;sterzo.c: 107: }
  7411                           ;sterzo.c: 108: if (msg.identifier == 0b00000000011) {
  7412  00012E  0E03               	movlw	3
  7413  000130  182C               	xorwf	_msg,w,c
  7414  000132  102D               	iorwf	_msg+1,w,c
  7415  000134  102E               	iorwf	_msg+2,w,c
  7416  000136  102F               	iorwf	_msg+3,w,c
  7417  000138  A4D8               	btfss	status,2,c
  7418  00013A  D016               	goto	i1l4065
  7419                           
  7420                           ;sterzo.c: 109: PORTCbits.RC1 = ~PORTCbits.RC1;
  7421  00013C  7282               	btg	3970,1,c	;volatile
  7422                           
  7423                           ;sterzo.c: 110: data_array [0] = 0x02;
  7424  00013E  0E02               	movlw	2
  7425  000140  6E3B               	movwf	_data_array,c
  7426                           
  7427                           ;sterzo.c: 111: CANsendMessage(0b00000000011, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NO
      +                          RMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  7428  000142  0E03               	movlw	3
  7429  000144  6E01               	movwf	i1CANsendMessage@identifier,c
  7430  000146  0E00               	movlw	0
  7431  000148  6E02               	movwf	i1CANsendMessage@identifier+1,c
  7432  00014A  0E00               	movlw	0
  7433  00014C  6E03               	movwf	i1CANsendMessage@identifier+2,c
  7434  00014E  0E00               	movlw	0
  7435  000150  6E04               	movwf	i1CANsendMessage@identifier+3,c
  7436  000152  0E3B               	movlw	low _data_array
  7437  000154  6E05               	movwf	i1CANsendMessage@data,c
  7438  000156  0E00               	movlw	high _data_array
  7439  000158  6E06               	movwf	i1CANsendMessage@data+1,c
  7440  00015A  0E08               	movlw	8
  7441  00015C  6E07               	movwf	i1CANsendMessage@dataLength,c
  7442  00015E  0EBC               	movlw	188
  7443  000160  6E08               	movwf	i1CANsendMessage@flags,c
  7444  000162  EC41  F00A         	call	i1_CANsendMessage	;wreg free
  7445  000166  D000               	goto	i1l4065
  7446  000168                     i1l4065:
  7447                           
  7448                           ;sterzo.c: 112: }
  7449                           ;sterzo.c: 113: PIR3bits.RXB0IF = 0;
  7450  000168  90A4               	bcf	4004,0,c	;volatile
  7451                           
  7452                           ;sterzo.c: 114: PIR3bits.RXB1IF = 0;
  7453  00016A  92A4               	bcf	4004,1,c	;volatile
  7454  00016C  D000               	goto	i1l610
  7455  00016E                     i1l610:
  7456  00016E  C024  FFF5         	movff	??_ISR_bassa+19,tablat
  7457  000172  C023  FFF8         	movff	??_ISR_bassa+18,tblptru
  7458  000176  C022  FFF7         	movff	??_ISR_bassa+17,tblptrh
  7459  00017A  C021  FFF6         	movff	??_ISR_bassa+16,tblptrl
  7460  00017E  C020  FFF4         	movff	??_ISR_bassa+15,prodh
  7461  000182  C01F  FFF3         	movff	??_ISR_bassa+14,prodl
  7462  000186  C01E  FFDA         	movff	??_ISR_bassa+13,fsr2h
  7463  00018A  C01D  FFD9         	movff	??_ISR_bassa+12,fsr2l
  7464  00018E  C01C  FFE2         	movff	??_ISR_bassa+11,fsr1h
  7465  000192  C01B  FFE1         	movff	??_ISR_bassa+10,fsr1l
  7466  000196  C01A  FFEA         	movff	??_ISR_bassa+9,fsr0h
  7467  00019A  C019  FFE9         	movff	??_ISR_bassa+8,fsr0l
  7468  00019E  C018  FFFB         	movff	??_ISR_bassa+7,pclatu
  7469  0001A2  C017  FFFA         	movff	??_ISR_bassa+6,pclath
  7470  0001A6  C016  FFE0         	movff	??_ISR_bassa+5,bsr
  7471  0001AA  C015  FFE8         	movff	??_ISR_bassa+4,wreg
  7472  0001AE  C014  FFD8         	movff	??_ISR_bassa+3,status
  7473  0001B2  0010               	retfie	
  7474  0001B4                     __end_of_ISR_bassa:
  7475                           	opt stack 0
  7476                           pclatu	equ	0xFFB
  7477                           pclath	equ	0xFFA
  7478                           tblptru	equ	0xFF8
  7479                           tblptrh	equ	0xFF7
  7480                           tblptrl	equ	0xFF6
  7481                           tablat	equ	0xFF5
  7482                           prodh	equ	0xFF4
  7483                           prodl	equ	0xFF3
  7484                           intcon	equ	0xFF2
  7485                           intcon2	equ	0xFF1
  7486                           postinc0	equ	0xFEE
  7487                           fsr0h	equ	0xFEA
  7488                           fsr0l	equ	0xFE9
  7489                           wreg	equ	0xFE8
  7490                           postdec1	equ	0xFE5
  7491                           fsr1h	equ	0xFE2
  7492                           fsr1l	equ	0xFE1
  7493                           bsr	equ	0xFE0
  7494                           indf2	equ	0xFDF
  7495                           fsr2h	equ	0xFDA
  7496                           fsr2l	equ	0xFD9
  7497                           status	equ	0xFD8
  7498                           
  7499 ;; *************** function i1___wmul *****************
  7500 ;; Defined at:
  7501 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;  multiplier      2    0[COMRAM] unsigned int 
  7504 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;  __wmul          2    4[COMRAM] unsigned int 
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  2    0[COMRAM] unsigned int 
  7509 ;; Registers used:
  7510 ;;		wreg, status,2, status,0, prodl, prodh
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7516 ;;      Params:         4       0       0       0
  7517 ;;      Locals:         2       0       0       0
  7518 ;;      Temps:          0       0       0       0
  7519 ;;      Totals:         6       0       0       0
  7520 ;;Total ram usage:        6 bytes
  7521 ;; Hardware stack levels used:    1
  7522 ;; Hardware stack levels required when called:    2
  7523 ;; This function calls:
  7524 ;;		Nothing
  7525 ;; This function is called by:
  7526 ;;		_ISR_bassa
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           	psect	text22
  7531  002D08                     __ptext22:
  7532                           	opt stack 0
  7533  002D08                     i1___wmul:
  7534                           	opt stack 24
  7535                           
  7536                           ;incstack = 0
  7537  002D08  5001               	movf	i1___wmul@multiplier,w,c
  7538  002D0A  0203               	mulwf	i1___wmul@multiplicand,c
  7539  002D0C  CFF3 F005          	movff	prodl,i1___wmul@product
  7540  002D10  CFF4 F006          	movff	prodh,i1___wmul@product+1
  7541  002D14  5001               	movf	i1___wmul@multiplier,w,c
  7542  002D16  0204               	mulwf	i1___wmul@multiplicand+1,c
  7543  002D18  50F3               	movf	prodl,w,c
  7544  002D1A  2606               	addwf	i1___wmul@product+1,f,c
  7545  002D1C  5002               	movf	i1___wmul@multiplier+1,w,c
  7546  002D1E  0203               	mulwf	i1___wmul@multiplicand,c
  7547  002D20  50F3               	movf	prodl,w,c
  7548  002D22  2606               	addwf	i1___wmul@product+1,f,c
  7549  002D24  C005  F001         	movff	i1___wmul@product,?i1___wmul
  7550  002D28  C006  F002         	movff	i1___wmul@product+1,?i1___wmul+1
  7551  002D2C  D000               	goto	i1l680
  7552  002D2E                     i1l680:
  7553  002D2E  0012               	return		;funcret
  7554  002D30                     __end_ofi1___wmul:
  7555                           	opt stack 0
  7556                           pclatu	equ	0xFFB
  7557                           pclath	equ	0xFFA
  7558                           tblptru	equ	0xFF8
  7559                           tblptrh	equ	0xFF7
  7560                           tblptrl	equ	0xFF6
  7561                           tablat	equ	0xFF5
  7562                           prodh	equ	0xFF4
  7563                           prodl	equ	0xFF3
  7564                           intcon	equ	0xFF2
  7565                           intcon2	equ	0xFF1
  7566                           postinc0	equ	0xFEE
  7567                           fsr0h	equ	0xFEA
  7568                           fsr0l	equ	0xFE9
  7569                           wreg	equ	0xFE8
  7570                           postdec1	equ	0xFE5
  7571                           fsr1h	equ	0xFE2
  7572                           fsr1l	equ	0xFE1
  7573                           bsr	equ	0xFE0
  7574                           indf2	equ	0xFDF
  7575                           fsr2h	equ	0xFDA
  7576                           fsr2l	equ	0xFD9
  7577                           status	equ	0xFD8
  7578                           
  7579 ;; *************** function i1_CANsendMessage *****************
  7580 ;; Defined at:
  7581 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;  identifier      4    0[COMRAM] unsigned long 
  7584 ;;  data            2    4[COMRAM] PTR unsigned char 
  7585 ;;		 -> data_array(8), 
  7586 ;;  dataLength      1    6[COMRAM] unsigned char 
  7587 ;;  flags           1    7[COMRAM] enum E16907
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;  CANsendMessa    4   12[COMRAM] unsigned long 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;		None               void
  7592 ;; Registers used:
  7593 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7599 ;;      Params:         8       0       0       0
  7600 ;;      Locals:         4       0       0       0
  7601 ;;      Temps:          4       0       0       0
  7602 ;;      Totals:        16       0       0       0
  7603 ;;Total ram usage:       16 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; Hardware stack levels required when called:    2
  7606 ;; This function calls:
  7607 ;;		Nothing
  7608 ;; This function is called by:
  7609 ;;		_ISR_bassa
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           	psect	text23
  7614  001482                     __ptext23:
  7615                           	opt stack 0
  7616  001482                     i1_CANsendMessage:
  7617                           	opt stack 24
  7618                           
  7619                           ;inc\CANlib.h: 296: unsigned long tamp;
  7620                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  7621                           
  7622                           ;incstack = 0
  7623  001482  010F               	movlb	15	; () banked
  7624  001484  B740               	btfsc	64,3,b	;volatile
  7625  001486  D118               	goto	i1l349
  7626                           
  7627                           ; BSR set to: 15
  7628                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  7629  001488  C007  FF45         	movff	i1CANsendMessage@dataLength,3909	;volatile
  7630                           
  7631                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  7632  00148C  AC08               	btfss	i1CANsendMessage@flags,6,c
  7633  00148E  D003               	goto	i1l350
  7634                           
  7635                           ; BSR set to: 15
  7636                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  7637  001490  010F               	movlb	15	; () banked
  7638  001492  8D45               	bsf	69,6,b	;volatile
  7639  001494  D002               	goto	i1l351
  7640  001496                     i1l350:
  7641                           
  7642                           ; BSR set to: 15
  7643                           ;inc\CANlib.h: 302: else
  7644                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  7645  001496  010F               	movlb	15	; () banked
  7646  001498  9D45               	bcf	69,6,b	;volatile
  7647  00149A                     i1l351:
  7648                           
  7649                           ; BSR set to: 15
  7650                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  7651  00149A  A608               	btfss	i1CANsendMessage@flags,3,c
  7652  00149C  D067               	goto	i1l352
  7653                           
  7654                           ; BSR set to: 15
  7655                           ;inc\CANlib.h: 306: {
  7656                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  7657  00149E  5001               	movf	i1CANsendMessage@identifier,w,c
  7658  0014A0  6E0D               	movwf	i1CANsendMessage@tamp,c
  7659  0014A2  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  7660  0014A4  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  7661  0014A6  6A10               	clrf	i1CANsendMessage@tamp+3,c
  7662                           
  7663                           ; BSR set to: 15
  7664                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  7665  0014A8  C00D  FF44         	movff	i1CANsendMessage@tamp,3908	;volatile
  7666                           
  7667                           ; BSR set to: 15
  7668                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  7669  0014AC  0E00               	movlw	0
  7670  0014AE  1401               	andwf	i1CANsendMessage@identifier,w,c
  7671  0014B0  6E0D               	movwf	i1CANsendMessage@tamp,c
  7672  0014B2  0EFF               	movlw	255
  7673  0014B4  1402               	andwf	i1CANsendMessage@identifier+1,w,c
  7674  0014B6  6E0E               	movwf	i1CANsendMessage@tamp+1,c
  7675  0014B8  0E00               	movlw	0
  7676  0014BA  1403               	andwf	i1CANsendMessage@identifier+2,w,c
  7677  0014BC  6E0F               	movwf	i1CANsendMessage@tamp+2,c
  7678  0014BE  0E00               	movlw	0
  7679  0014C0  1404               	andwf	i1CANsendMessage@identifier+3,w,c
  7680  0014C2  6E10               	movwf	i1CANsendMessage@tamp+3,c
  7681                           
  7682                           ; BSR set to: 15
  7683                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  7684  0014C4  C00D  F009         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  7685  0014C8  C00E  F00A         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  7686  0014CC  C00F  F00B         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  7687  0014D0  C010  F00C         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  7688  0014D4  C00A  F009         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
  7689  0014D8  C00B  F00A         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
  7690  0014DC  C00C  F00B         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
  7691  0014E0  6A0C               	clrf	??i1_CANsendMessage+3,c
  7692  0014E2  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  7693  0014E6  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  7694  0014EA  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  7695  0014EE  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  7696                           
  7697                           ; BSR set to: 15
  7698                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  7699  0014F2  C00D  FF43         	movff	i1CANsendMessage@tamp,3907	;volatile
  7700                           
  7701                           ; BSR set to: 15
  7702                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  7703  0014F6  0E00               	movlw	0
  7704  0014F8  010F               	movlb	15	; () banked
  7705  0014FA  6F42               	movwf	66,b	;volatile
  7706                           
  7707                           ; BSR set to: 15
  7708                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  7709  0014FC  010F               	movlb	15	; () banked
  7710  0014FE  8742               	bsf	66,3,b	;volatile
  7711                           
  7712                           ; BSR set to: 15
  7713                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  7714  001500  A003               	btfss	i1CANsendMessage@identifier+2,0,c
  7715  001502  D002               	goto	i1l353
  7716                           
  7717                           ; BSR set to: 15
  7718                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  7719  001504  010F               	movlb	15	; () banked
  7720  001506  8142               	bsf	66,0,b	;volatile
  7721  001508                     i1l353:
  7722                           
  7723                           ; BSR set to: 15
  7724                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  7725  001508  A203               	btfss	i1CANsendMessage@identifier+2,1,c
  7726  00150A  D002               	goto	i1l354
  7727                           
  7728                           ; BSR set to: 15
  7729                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  7730  00150C  010F               	movlb	15	; () banked
  7731  00150E  8342               	bsf	66,1,b	;volatile
  7732  001510                     i1l354:
  7733                           
  7734                           ; BSR set to: 15
  7735                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  7736  001510  A403               	btfss	i1CANsendMessage@identifier+2,2,c
  7737  001512  D002               	goto	i1l355
  7738                           
  7739                           ; BSR set to: 15
  7740                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  7741  001514  010F               	movlb	15	; () banked
  7742  001516  8B42               	bsf	66,5,b	;volatile
  7743  001518                     i1l355:
  7744                           
  7745                           ; BSR set to: 15
  7746                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  7747  001518  A603               	btfss	i1CANsendMessage@identifier+2,3,c
  7748  00151A  D002               	goto	i1l356
  7749                           
  7750                           ; BSR set to: 15
  7751                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  7752  00151C  010F               	movlb	15	; () banked
  7753  00151E  8D42               	bsf	66,6,b	;volatile
  7754  001520                     i1l356:
  7755                           
  7756                           ; BSR set to: 15
  7757                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  7758  001520  A803               	btfss	i1CANsendMessage@identifier+2,4,c
  7759  001522  D003               	goto	i1l3801
  7760                           
  7761                           ; BSR set to: 15
  7762                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  7763  001524  010F               	movlb	15	; () banked
  7764  001526  8F42               	bsf	66,7,b	;volatile
  7765  001528  D000               	goto	i1l3801
  7766  00152A                     i1l3801:
  7767                           
  7768                           ; BSR set to: 15
  7769                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  7770  00152A  C001  F009         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  7771  00152E  C002  F00A         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  7772  001532  C003  F00B         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  7773  001536  C004  F00C         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  7774  00153A  0E16               	movlw	22
  7775  00153C  D005               	goto	i1u445_20
  7776  00153E                     i1u445_25:
  7777  00153E  90D8               	bcf	status,0,c
  7778  001540  320C               	rrcf	??i1_CANsendMessage+3,f,c
  7779  001542  320B               	rrcf	??i1_CANsendMessage+2,f,c
  7780  001544  320A               	rrcf	??i1_CANsendMessage+1,f,c
  7781  001546  3209               	rrcf	??i1_CANsendMessage,f,c
  7782  001548                     i1u445_20:
  7783  001548  2EE8               	decfsz	wreg,f,c
  7784  00154A  D7F9               	goto	i1u445_25
  7785  00154C  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  7786  001550  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  7787  001554  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  7788  001558  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  7789                           
  7790                           ; BSR set to: 15
  7791                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  7792  00155C  500D               	movf	i1CANsendMessage@tamp,w,c
  7793  00155E  6E0D               	movwf	i1CANsendMessage@tamp,c
  7794  001560  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  7795  001562  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  7796  001564  6A10               	clrf	i1CANsendMessage@tamp+3,c
  7797                           
  7798                           ; BSR set to: 15
  7799                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  7800  001566  C00D  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
  7801                           
  7802                           ;inc\CANlib.h: 332: }
  7803  00156A  D04E               	goto	i1l3821
  7804  00156C                     i1l352:
  7805                           
  7806                           ; BSR set to: 15
  7807                           ;inc\CANlib.h: 334: else
  7808                           ;inc\CANlib.h: 336: {
  7809                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  7810  00156C  010F               	movlb	15	; () banked
  7811  00156E  9742               	bcf	66,3,b	;volatile
  7812                           
  7813                           ; BSR set to: 15
  7814                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  7815  001570  C001  F009         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  7816  001574  C002  F00A         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  7817  001578  C003  F00B         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  7818  00157C  C004  F00C         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  7819  001580  0E04               	movlw	4
  7820  001582  D005               	goto	i1u446_20
  7821  001584                     i1u446_25:
  7822  001584  90D8               	bcf	status,0,c
  7823  001586  320C               	rrcf	??i1_CANsendMessage+3,f,c
  7824  001588  320B               	rrcf	??i1_CANsendMessage+2,f,c
  7825  00158A  320A               	rrcf	??i1_CANsendMessage+1,f,c
  7826  00158C  3209               	rrcf	??i1_CANsendMessage,f,c
  7827  00158E                     i1u446_20:
  7828  00158E  2EE8               	decfsz	wreg,f,c
  7829  001590  D7F9               	goto	i1u446_25
  7830  001592  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  7831  001596  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  7832  00159A  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  7833  00159E  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  7834                           
  7835                           ; BSR set to: 15
  7836                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  7837  0015A2  500D               	movf	i1CANsendMessage@tamp,w,c
  7838  0015A4  6E0D               	movwf	i1CANsendMessage@tamp,c
  7839  0015A6  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  7840  0015A8  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  7841  0015AA  6A10               	clrf	i1CANsendMessage@tamp+3,c
  7842                           
  7843                           ; BSR set to: 15
  7844                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  7845  0015AC  C00D  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
  7846                           
  7847                           ; BSR set to: 15
  7848                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  7849  0015B0  0E07               	movlw	7
  7850  0015B2  1401               	andwf	i1CANsendMessage@identifier,w,c
  7851  0015B4  6E0D               	movwf	i1CANsendMessage@tamp,c
  7852  0015B6  0E00               	movlw	0
  7853  0015B8  1402               	andwf	i1CANsendMessage@identifier+1,w,c
  7854  0015BA  6E0E               	movwf	i1CANsendMessage@tamp+1,c
  7855  0015BC  0E00               	movlw	0
  7856  0015BE  1403               	andwf	i1CANsendMessage@identifier+2,w,c
  7857  0015C0  6E0F               	movwf	i1CANsendMessage@tamp+2,c
  7858  0015C2  0E00               	movlw	0
  7859  0015C4  1404               	andwf	i1CANsendMessage@identifier+3,w,c
  7860  0015C6  6E10               	movwf	i1CANsendMessage@tamp+3,c
  7861                           
  7862                           ; BSR set to: 15
  7863                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  7864  0015C8  C00D  F009         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  7865  0015CC  C00E  F00A         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  7866  0015D0  C00F  F00B         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  7867  0015D4  C010  F00C         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  7868  0015D8  0E05               	movlw	5
  7869  0015DA                     i1u447_25:
  7870  0015DA  90D8               	bcf	status,0,c
  7871  0015DC  3609               	rlcf	??i1_CANsendMessage,f,c
  7872  0015DE  360A               	rlcf	??i1_CANsendMessage+1,f,c
  7873  0015E0  360B               	rlcf	??i1_CANsendMessage+2,f,c
  7874  0015E2  360C               	rlcf	??i1_CANsendMessage+3,f,c
  7875  0015E4  2EE8               	decfsz	wreg,f,c
  7876  0015E6  D7F9               	goto	i1u447_25
  7877  0015E8  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  7878  0015EC  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  7879  0015F0  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  7880  0015F4  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  7881                           
  7882                           ; BSR set to: 15
  7883                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  7884  0015F8  010F               	movlb	15	; () banked
  7885  0015FA  5142               	movf	66,w,b	;volatile
  7886  0015FC  0B1F               	andlw	31
  7887  0015FE  010F               	movlb	15	; () banked
  7888  001600  6F42               	movwf	66,b	;volatile
  7889                           
  7890                           ; BSR set to: 15
  7891                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  7892  001602  C00D  FF42         	movff	i1CANsendMessage@tamp,3906	;volatile
  7893  001606  D000               	goto	i1l3821
  7894  001608                     i1l3821:
  7895                           
  7896                           ; BSR set to: 15
  7897                           ;inc\CANlib.h: 347: }
  7898                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  7899  001608  A008               	btfss	i1CANsendMessage@flags,0,c
  7900  00160A  D003               	goto	i1l359
  7901                           
  7902                           ; BSR set to: 15
  7903                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  7904  00160C  010F               	movlb	15	; () banked
  7905  00160E  8140               	bsf	64,0,b	;volatile
  7906  001610  D002               	goto	i1l360
  7907  001612                     i1l359:
  7908                           
  7909                           ; BSR set to: 15
  7910                           ;inc\CANlib.h: 351: else
  7911                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  7912  001612  010F               	movlb	15	; () banked
  7913  001614  9140               	bcf	64,0,b	;volatile
  7914  001616                     i1l360:
  7915                           
  7916                           ; BSR set to: 15
  7917                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  7918  001616  A208               	btfss	i1CANsendMessage@flags,1,c
  7919  001618  D003               	goto	i1l361
  7920                           
  7921                           ; BSR set to: 15
  7922                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  7923  00161A  010F               	movlb	15	; () banked
  7924  00161C  8340               	bsf	64,1,b	;volatile
  7925  00161E  D003               	goto	i1l3827
  7926  001620                     i1l361:
  7927                           
  7928                           ; BSR set to: 15
  7929                           ;inc\CANlib.h: 355: else
  7930                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  7931  001620  010F               	movlb	15	; () banked
  7932  001622  9340               	bcf	64,1,b	;volatile
  7933  001624  D000               	goto	i1l3827
  7934  001626                     i1l3827:
  7935                           
  7936                           ; BSR set to: 15
  7937                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  7938  001626  C005  FFD9         	movff	i1CANsendMessage@data,fsr2l
  7939  00162A  C006  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
  7940  00162E  50DF               	movf	indf2,w,c
  7941  001630  010F               	movlb	15	; () banked
  7942  001632  6F46               	movwf	70,b	;volatile
  7943                           
  7944                           ; BSR set to: 15
  7945                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  7946  001634  EE20 F001          	lfsr	2,1
  7947  001638  5005               	movf	i1CANsendMessage@data,w,c
  7948  00163A  26D9               	addwf	fsr2l,f,c
  7949  00163C  5006               	movf	i1CANsendMessage@data+1,w,c
  7950  00163E  22DA               	addwfc	fsr2h,f,c
  7951  001640  50DF               	movf	indf2,w,c
  7952  001642  010F               	movlb	15	; () banked
  7953  001644  6F47               	movwf	71,b	;volatile
  7954                           
  7955                           ; BSR set to: 15
  7956                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  7957  001646  EE20 F002          	lfsr	2,2
  7958  00164A  5005               	movf	i1CANsendMessage@data,w,c
  7959  00164C  26D9               	addwf	fsr2l,f,c
  7960  00164E  5006               	movf	i1CANsendMessage@data+1,w,c
  7961  001650  22DA               	addwfc	fsr2h,f,c
  7962  001652  50DF               	movf	indf2,w,c
  7963  001654  010F               	movlb	15	; () banked
  7964  001656  6F48               	movwf	72,b	;volatile
  7965                           
  7966                           ; BSR set to: 15
  7967                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  7968  001658  EE20 F003          	lfsr	2,3
  7969  00165C  5005               	movf	i1CANsendMessage@data,w,c
  7970  00165E  26D9               	addwf	fsr2l,f,c
  7971  001660  5006               	movf	i1CANsendMessage@data+1,w,c
  7972  001662  22DA               	addwfc	fsr2h,f,c
  7973  001664  50DF               	movf	indf2,w,c
  7974  001666  010F               	movlb	15	; () banked
  7975  001668  6F49               	movwf	73,b	;volatile
  7976                           
  7977                           ; BSR set to: 15
  7978                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  7979  00166A  EE20 F004          	lfsr	2,4
  7980  00166E  5005               	movf	i1CANsendMessage@data,w,c
  7981  001670  26D9               	addwf	fsr2l,f,c
  7982  001672  5006               	movf	i1CANsendMessage@data+1,w,c
  7983  001674  22DA               	addwfc	fsr2h,f,c
  7984  001676  50DF               	movf	indf2,w,c
  7985  001678  010F               	movlb	15	; () banked
  7986  00167A  6F4A               	movwf	74,b	;volatile
  7987                           
  7988                           ; BSR set to: 15
  7989                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  7990  00167C  EE20 F005          	lfsr	2,5
  7991  001680  5005               	movf	i1CANsendMessage@data,w,c
  7992  001682  26D9               	addwf	fsr2l,f,c
  7993  001684  5006               	movf	i1CANsendMessage@data+1,w,c
  7994  001686  22DA               	addwfc	fsr2h,f,c
  7995  001688  50DF               	movf	indf2,w,c
  7996  00168A  010F               	movlb	15	; () banked
  7997  00168C  6F4B               	movwf	75,b	;volatile
  7998                           
  7999                           ; BSR set to: 15
  8000                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  8001  00168E  EE20 F006          	lfsr	2,6
  8002  001692  5005               	movf	i1CANsendMessage@data,w,c
  8003  001694  26D9               	addwf	fsr2l,f,c
  8004  001696  5006               	movf	i1CANsendMessage@data+1,w,c
  8005  001698  22DA               	addwfc	fsr2h,f,c
  8006  00169A  50DF               	movf	indf2,w,c
  8007  00169C  010F               	movlb	15	; () banked
  8008  00169E  6F4C               	movwf	76,b	;volatile
  8009                           
  8010                           ; BSR set to: 15
  8011                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  8012  0016A0  EE20 F007          	lfsr	2,7
  8013  0016A4  5005               	movf	i1CANsendMessage@data,w,c
  8014  0016A6  26D9               	addwf	fsr2l,f,c
  8015  0016A8  5006               	movf	i1CANsendMessage@data+1,w,c
  8016  0016AA  22DA               	addwfc	fsr2h,f,c
  8017  0016AC  50DF               	movf	indf2,w,c
  8018  0016AE  010F               	movlb	15	; () banked
  8019  0016B0  6F4D               	movwf	77,b	;volatile
  8020                           
  8021                           ; BSR set to: 15
  8022                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  8023  0016B2  010F               	movlb	15	; () banked
  8024  0016B4  8740               	bsf	64,3,b	;volatile
  8025                           
  8026                           ; BSR set to: 15
  8027                           ;inc\CANlib.h: 368: return;
  8028  0016B6  D236               	goto	i1l363
  8029  0016B8                     i1l349:
  8030                           
  8031                           ; BSR set to: 15
  8032                           ;inc\CANlib.h: 369: }
  8033                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  8034  0016B8  010F               	movlb	15	; () banked
  8035  0016BA  B730               	btfsc	48,3,b	;volatile
  8036  0016BC  D118               	goto	i1l364
  8037                           
  8038                           ; BSR set to: 15
  8039                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  8040  0016BE  C007  FF35         	movff	i1CANsendMessage@dataLength,3893	;volatile
  8041                           
  8042                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  8043  0016C2  AC08               	btfss	i1CANsendMessage@flags,6,c
  8044  0016C4  D003               	goto	i1l365
  8045                           
  8046                           ; BSR set to: 15
  8047                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  8048  0016C6  010F               	movlb	15	; () banked
  8049  0016C8  8D35               	bsf	53,6,b	;volatile
  8050  0016CA  D002               	goto	i1l366
  8051  0016CC                     i1l365:
  8052                           
  8053                           ; BSR set to: 15
  8054                           ;inc\CANlib.h: 378: else
  8055                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  8056  0016CC  010F               	movlb	15	; () banked
  8057  0016CE  9D35               	bcf	53,6,b	;volatile
  8058  0016D0                     i1l366:
  8059                           
  8060                           ; BSR set to: 15
  8061                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  8062  0016D0  A608               	btfss	i1CANsendMessage@flags,3,c
  8063  0016D2  D067               	goto	i1l367
  8064                           
  8065                           ; BSR set to: 15
  8066                           ;inc\CANlib.h: 382: {
  8067                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  8068  0016D4  5001               	movf	i1CANsendMessage@identifier,w,c
  8069  0016D6  6E0D               	movwf	i1CANsendMessage@tamp,c
  8070  0016D8  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  8071  0016DA  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  8072  0016DC  6A10               	clrf	i1CANsendMessage@tamp+3,c
  8073                           
  8074                           ; BSR set to: 15
  8075                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  8076  0016DE  C00D  FF34         	movff	i1CANsendMessage@tamp,3892	;volatile
  8077                           
  8078                           ; BSR set to: 15
  8079                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  8080  0016E2  0E00               	movlw	0
  8081  0016E4  1401               	andwf	i1CANsendMessage@identifier,w,c
  8082  0016E6  6E0D               	movwf	i1CANsendMessage@tamp,c
  8083  0016E8  0EFF               	movlw	255
  8084  0016EA  1402               	andwf	i1CANsendMessage@identifier+1,w,c
  8085  0016EC  6E0E               	movwf	i1CANsendMessage@tamp+1,c
  8086  0016EE  0E00               	movlw	0
  8087  0016F0  1403               	andwf	i1CANsendMessage@identifier+2,w,c
  8088  0016F2  6E0F               	movwf	i1CANsendMessage@tamp+2,c
  8089  0016F4  0E00               	movlw	0
  8090  0016F6  1404               	andwf	i1CANsendMessage@identifier+3,w,c
  8091  0016F8  6E10               	movwf	i1CANsendMessage@tamp+3,c
  8092                           
  8093                           ; BSR set to: 15
  8094                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  8095  0016FA  C00D  F009         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  8096  0016FE  C00E  F00A         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  8097  001702  C00F  F00B         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  8098  001706  C010  F00C         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  8099  00170A  C00A  F009         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
  8100  00170E  C00B  F00A         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
  8101  001712  C00C  F00B         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
  8102  001716  6A0C               	clrf	??i1_CANsendMessage+3,c
  8103  001718  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8104  00171C  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8105  001720  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8106  001724  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8107                           
  8108                           ; BSR set to: 15
  8109                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  8110  001728  C00D  FF33         	movff	i1CANsendMessage@tamp,3891	;volatile
  8111                           
  8112                           ; BSR set to: 15
  8113                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  8114  00172C  0E00               	movlw	0
  8115  00172E  010F               	movlb	15	; () banked
  8116  001730  6F32               	movwf	50,b	;volatile
  8117                           
  8118                           ; BSR set to: 15
  8119                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  8120  001732  010F               	movlb	15	; () banked
  8121  001734  8732               	bsf	50,3,b	;volatile
  8122                           
  8123                           ; BSR set to: 15
  8124                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  8125  001736  A003               	btfss	i1CANsendMessage@identifier+2,0,c
  8126  001738  D002               	goto	i1l368
  8127                           
  8128                           ; BSR set to: 15
  8129                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  8130  00173A  010F               	movlb	15	; () banked
  8131  00173C  8132               	bsf	50,0,b	;volatile
  8132  00173E                     i1l368:
  8133                           
  8134                           ; BSR set to: 15
  8135                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  8136  00173E  A203               	btfss	i1CANsendMessage@identifier+2,1,c
  8137  001740  D002               	goto	i1l369
  8138                           
  8139                           ; BSR set to: 15
  8140                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  8141  001742  010F               	movlb	15	; () banked
  8142  001744  8332               	bsf	50,1,b	;volatile
  8143  001746                     i1l369:
  8144                           
  8145                           ; BSR set to: 15
  8146                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  8147  001746  A403               	btfss	i1CANsendMessage@identifier+2,2,c
  8148  001748  D002               	goto	i1l370
  8149                           
  8150                           ; BSR set to: 15
  8151                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  8152  00174A  010F               	movlb	15	; () banked
  8153  00174C  8B32               	bsf	50,5,b	;volatile
  8154  00174E                     i1l370:
  8155                           
  8156                           ; BSR set to: 15
  8157                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  8158  00174E  A603               	btfss	i1CANsendMessage@identifier+2,3,c
  8159  001750  D002               	goto	i1l371
  8160                           
  8161                           ; BSR set to: 15
  8162                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  8163  001752  010F               	movlb	15	; () banked
  8164  001754  8D32               	bsf	50,6,b	;volatile
  8165  001756                     i1l371:
  8166                           
  8167                           ; BSR set to: 15
  8168                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  8169  001756  A803               	btfss	i1CANsendMessage@identifier+2,4,c
  8170  001758  D003               	goto	i1l3877
  8171                           
  8172                           ; BSR set to: 15
  8173                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  8174  00175A  010F               	movlb	15	; () banked
  8175  00175C  8F32               	bsf	50,7,b	;volatile
  8176  00175E  D000               	goto	i1l3877
  8177  001760                     i1l3877:
  8178                           
  8179                           ; BSR set to: 15
  8180                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  8181  001760  C001  F009         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  8182  001764  C002  F00A         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  8183  001768  C003  F00B         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  8184  00176C  C004  F00C         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  8185  001770  0E16               	movlw	22
  8186  001772  D005               	goto	i1u458_20
  8187  001774                     i1u458_25:
  8188  001774  90D8               	bcf	status,0,c
  8189  001776  320C               	rrcf	??i1_CANsendMessage+3,f,c
  8190  001778  320B               	rrcf	??i1_CANsendMessage+2,f,c
  8191  00177A  320A               	rrcf	??i1_CANsendMessage+1,f,c
  8192  00177C  3209               	rrcf	??i1_CANsendMessage,f,c
  8193  00177E                     i1u458_20:
  8194  00177E  2EE8               	decfsz	wreg,f,c
  8195  001780  D7F9               	goto	i1u458_25
  8196  001782  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8197  001786  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8198  00178A  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8199  00178E  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8200                           
  8201                           ; BSR set to: 15
  8202                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  8203  001792  500D               	movf	i1CANsendMessage@tamp,w,c
  8204  001794  6E0D               	movwf	i1CANsendMessage@tamp,c
  8205  001796  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  8206  001798  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  8207  00179A  6A10               	clrf	i1CANsendMessage@tamp+3,c
  8208                           
  8209                           ; BSR set to: 15
  8210                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  8211  00179C  C00D  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
  8212                           
  8213                           ;inc\CANlib.h: 407: }
  8214  0017A0  D04E               	goto	i1l3897
  8215  0017A2                     i1l367:
  8216                           
  8217                           ; BSR set to: 15
  8218                           ;inc\CANlib.h: 409: else
  8219                           ;inc\CANlib.h: 411: {
  8220                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  8221  0017A2  010F               	movlb	15	; () banked
  8222  0017A4  9732               	bcf	50,3,b	;volatile
  8223                           
  8224                           ; BSR set to: 15
  8225                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  8226  0017A6  C001  F009         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  8227  0017AA  C002  F00A         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  8228  0017AE  C003  F00B         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  8229  0017B2  C004  F00C         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  8230  0017B6  0E04               	movlw	4
  8231  0017B8  D005               	goto	i1u459_20
  8232  0017BA                     i1u459_25:
  8233  0017BA  90D8               	bcf	status,0,c
  8234  0017BC  320C               	rrcf	??i1_CANsendMessage+3,f,c
  8235  0017BE  320B               	rrcf	??i1_CANsendMessage+2,f,c
  8236  0017C0  320A               	rrcf	??i1_CANsendMessage+1,f,c
  8237  0017C2  3209               	rrcf	??i1_CANsendMessage,f,c
  8238  0017C4                     i1u459_20:
  8239  0017C4  2EE8               	decfsz	wreg,f,c
  8240  0017C6  D7F9               	goto	i1u459_25
  8241  0017C8  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8242  0017CC  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8243  0017D0  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8244  0017D4  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8245                           
  8246                           ; BSR set to: 15
  8247                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  8248  0017D8  500D               	movf	i1CANsendMessage@tamp,w,c
  8249  0017DA  6E0D               	movwf	i1CANsendMessage@tamp,c
  8250  0017DC  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  8251  0017DE  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  8252  0017E0  6A10               	clrf	i1CANsendMessage@tamp+3,c
  8253                           
  8254                           ; BSR set to: 15
  8255                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  8256  0017E2  C00D  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
  8257                           
  8258                           ; BSR set to: 15
  8259                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  8260  0017E6  0E07               	movlw	7
  8261  0017E8  1401               	andwf	i1CANsendMessage@identifier,w,c
  8262  0017EA  6E0D               	movwf	i1CANsendMessage@tamp,c
  8263  0017EC  0E00               	movlw	0
  8264  0017EE  1402               	andwf	i1CANsendMessage@identifier+1,w,c
  8265  0017F0  6E0E               	movwf	i1CANsendMessage@tamp+1,c
  8266  0017F2  0E00               	movlw	0
  8267  0017F4  1403               	andwf	i1CANsendMessage@identifier+2,w,c
  8268  0017F6  6E0F               	movwf	i1CANsendMessage@tamp+2,c
  8269  0017F8  0E00               	movlw	0
  8270  0017FA  1404               	andwf	i1CANsendMessage@identifier+3,w,c
  8271  0017FC  6E10               	movwf	i1CANsendMessage@tamp+3,c
  8272                           
  8273                           ; BSR set to: 15
  8274                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  8275  0017FE  C00D  F009         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  8276  001802  C00E  F00A         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  8277  001806  C00F  F00B         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  8278  00180A  C010  F00C         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  8279  00180E  0E05               	movlw	5
  8280  001810                     i1u460_25:
  8281  001810  90D8               	bcf	status,0,c
  8282  001812  3609               	rlcf	??i1_CANsendMessage,f,c
  8283  001814  360A               	rlcf	??i1_CANsendMessage+1,f,c
  8284  001816  360B               	rlcf	??i1_CANsendMessage+2,f,c
  8285  001818  360C               	rlcf	??i1_CANsendMessage+3,f,c
  8286  00181A  2EE8               	decfsz	wreg,f,c
  8287  00181C  D7F9               	goto	i1u460_25
  8288  00181E  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8289  001822  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8290  001826  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8291  00182A  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8292                           
  8293                           ; BSR set to: 15
  8294                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  8295  00182E  010F               	movlb	15	; () banked
  8296  001830  5132               	movf	50,w,b	;volatile
  8297  001832  0B1F               	andlw	31
  8298  001834  010F               	movlb	15	; () banked
  8299  001836  6F32               	movwf	50,b	;volatile
  8300                           
  8301                           ; BSR set to: 15
  8302                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  8303  001838  C00D  FF32         	movff	i1CANsendMessage@tamp,3890	;volatile
  8304  00183C  D000               	goto	i1l3897
  8305  00183E                     i1l3897:
  8306                           
  8307                           ; BSR set to: 15
  8308                           ;inc\CANlib.h: 422: }
  8309                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  8310  00183E  A008               	btfss	i1CANsendMessage@flags,0,c
  8311  001840  D003               	goto	i1l374
  8312                           
  8313                           ; BSR set to: 15
  8314                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  8315  001842  010F               	movlb	15	; () banked
  8316  001844  8130               	bsf	48,0,b	;volatile
  8317  001846  D002               	goto	i1l375
  8318  001848                     i1l374:
  8319                           
  8320                           ; BSR set to: 15
  8321                           ;inc\CANlib.h: 426: else
  8322                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  8323  001848  010F               	movlb	15	; () banked
  8324  00184A  9130               	bcf	48,0,b	;volatile
  8325  00184C                     i1l375:
  8326                           
  8327                           ; BSR set to: 15
  8328                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  8329  00184C  A208               	btfss	i1CANsendMessage@flags,1,c
  8330  00184E  D003               	goto	i1l376
  8331                           
  8332                           ; BSR set to: 15
  8333                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  8334  001850  010F               	movlb	15	; () banked
  8335  001852  8330               	bsf	48,1,b	;volatile
  8336  001854  D003               	goto	i1l3903
  8337  001856                     i1l376:
  8338                           
  8339                           ; BSR set to: 15
  8340                           ;inc\CANlib.h: 430: else
  8341                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  8342  001856  010F               	movlb	15	; () banked
  8343  001858  9330               	bcf	48,1,b	;volatile
  8344  00185A  D000               	goto	i1l3903
  8345  00185C                     i1l3903:
  8346                           
  8347                           ; BSR set to: 15
  8348                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  8349  00185C  C005  FFD9         	movff	i1CANsendMessage@data,fsr2l
  8350  001860  C006  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
  8351  001864  50DF               	movf	indf2,w,c
  8352  001866  010F               	movlb	15	; () banked
  8353  001868  6F36               	movwf	54,b	;volatile
  8354                           
  8355                           ; BSR set to: 15
  8356                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  8357  00186A  EE20 F001          	lfsr	2,1
  8358  00186E  5005               	movf	i1CANsendMessage@data,w,c
  8359  001870  26D9               	addwf	fsr2l,f,c
  8360  001872  5006               	movf	i1CANsendMessage@data+1,w,c
  8361  001874  22DA               	addwfc	fsr2h,f,c
  8362  001876  50DF               	movf	indf2,w,c
  8363  001878  010F               	movlb	15	; () banked
  8364  00187A  6F37               	movwf	55,b	;volatile
  8365                           
  8366                           ; BSR set to: 15
  8367                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  8368  00187C  EE20 F002          	lfsr	2,2
  8369  001880  5005               	movf	i1CANsendMessage@data,w,c
  8370  001882  26D9               	addwf	fsr2l,f,c
  8371  001884  5006               	movf	i1CANsendMessage@data+1,w,c
  8372  001886  22DA               	addwfc	fsr2h,f,c
  8373  001888  50DF               	movf	indf2,w,c
  8374  00188A  010F               	movlb	15	; () banked
  8375  00188C  6F38               	movwf	56,b	;volatile
  8376                           
  8377                           ; BSR set to: 15
  8378                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  8379  00188E  EE20 F003          	lfsr	2,3
  8380  001892  5005               	movf	i1CANsendMessage@data,w,c
  8381  001894  26D9               	addwf	fsr2l,f,c
  8382  001896  5006               	movf	i1CANsendMessage@data+1,w,c
  8383  001898  22DA               	addwfc	fsr2h,f,c
  8384  00189A  50DF               	movf	indf2,w,c
  8385  00189C  010F               	movlb	15	; () banked
  8386  00189E  6F39               	movwf	57,b	;volatile
  8387                           
  8388                           ; BSR set to: 15
  8389                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  8390  0018A0  EE20 F004          	lfsr	2,4
  8391  0018A4  5005               	movf	i1CANsendMessage@data,w,c
  8392  0018A6  26D9               	addwf	fsr2l,f,c
  8393  0018A8  5006               	movf	i1CANsendMessage@data+1,w,c
  8394  0018AA  22DA               	addwfc	fsr2h,f,c
  8395  0018AC  50DF               	movf	indf2,w,c
  8396  0018AE  010F               	movlb	15	; () banked
  8397  0018B0  6F3A               	movwf	58,b	;volatile
  8398                           
  8399                           ; BSR set to: 15
  8400                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  8401  0018B2  EE20 F005          	lfsr	2,5
  8402  0018B6  5005               	movf	i1CANsendMessage@data,w,c
  8403  0018B8  26D9               	addwf	fsr2l,f,c
  8404  0018BA  5006               	movf	i1CANsendMessage@data+1,w,c
  8405  0018BC  22DA               	addwfc	fsr2h,f,c
  8406  0018BE  50DF               	movf	indf2,w,c
  8407  0018C0  010F               	movlb	15	; () banked
  8408  0018C2  6F3B               	movwf	59,b	;volatile
  8409                           
  8410                           ; BSR set to: 15
  8411                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  8412  0018C4  EE20 F006          	lfsr	2,6
  8413  0018C8  5005               	movf	i1CANsendMessage@data,w,c
  8414  0018CA  26D9               	addwf	fsr2l,f,c
  8415  0018CC  5006               	movf	i1CANsendMessage@data+1,w,c
  8416  0018CE  22DA               	addwfc	fsr2h,f,c
  8417  0018D0  50DF               	movf	indf2,w,c
  8418  0018D2  010F               	movlb	15	; () banked
  8419  0018D4  6F3C               	movwf	60,b	;volatile
  8420                           
  8421                           ; BSR set to: 15
  8422                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  8423  0018D6  EE20 F007          	lfsr	2,7
  8424  0018DA  5005               	movf	i1CANsendMessage@data,w,c
  8425  0018DC  26D9               	addwf	fsr2l,f,c
  8426  0018DE  5006               	movf	i1CANsendMessage@data+1,w,c
  8427  0018E0  22DA               	addwfc	fsr2h,f,c
  8428  0018E2  50DF               	movf	indf2,w,c
  8429  0018E4  010F               	movlb	15	; () banked
  8430  0018E6  6F3D               	movwf	61,b	;volatile
  8431                           
  8432                           ; BSR set to: 15
  8433                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  8434  0018E8  010F               	movlb	15	; () banked
  8435  0018EA  8730               	bsf	48,3,b	;volatile
  8436                           
  8437                           ; BSR set to: 15
  8438                           ;inc\CANlib.h: 444: return;
  8439  0018EC  D11B               	goto	i1l363
  8440  0018EE                     i1l364:
  8441                           
  8442                           ; BSR set to: 15
  8443                           ;inc\CANlib.h: 445: }
  8444                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  8445  0018EE  010F               	movlb	15	; () banked
  8446  0018F0  B720               	btfsc	32,3,b	;volatile
  8447  0018F2  D118               	goto	i1l363
  8448                           
  8449                           ; BSR set to: 15
  8450                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  8451  0018F4  C007  FF25         	movff	i1CANsendMessage@dataLength,3877	;volatile
  8452                           
  8453                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  8454  0018F8  AC08               	btfss	i1CANsendMessage@flags,6,c
  8455  0018FA  D003               	goto	i1l379
  8456                           
  8457                           ; BSR set to: 15
  8458                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  8459  0018FC  010F               	movlb	15	; () banked
  8460  0018FE  8D25               	bsf	37,6,b	;volatile
  8461  001900  D002               	goto	i1l380
  8462  001902                     i1l379:
  8463                           
  8464                           ; BSR set to: 15
  8465                           ;inc\CANlib.h: 454: else
  8466                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  8467  001902  010F               	movlb	15	; () banked
  8468  001904  9D25               	bcf	37,6,b	;volatile
  8469  001906                     i1l380:
  8470                           
  8471                           ; BSR set to: 15
  8472                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  8473  001906  A608               	btfss	i1CANsendMessage@flags,3,c
  8474  001908  D067               	goto	i1l381
  8475                           
  8476                           ; BSR set to: 15
  8477                           ;inc\CANlib.h: 458: {
  8478                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  8479  00190A  5001               	movf	i1CANsendMessage@identifier,w,c
  8480  00190C  6E0D               	movwf	i1CANsendMessage@tamp,c
  8481  00190E  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  8482  001910  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  8483  001912  6A10               	clrf	i1CANsendMessage@tamp+3,c
  8484                           
  8485                           ; BSR set to: 15
  8486                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  8487  001914  C00D  FF24         	movff	i1CANsendMessage@tamp,3876	;volatile
  8488                           
  8489                           ; BSR set to: 15
  8490                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  8491  001918  0E00               	movlw	0
  8492  00191A  1401               	andwf	i1CANsendMessage@identifier,w,c
  8493  00191C  6E0D               	movwf	i1CANsendMessage@tamp,c
  8494  00191E  0EFF               	movlw	255
  8495  001920  1402               	andwf	i1CANsendMessage@identifier+1,w,c
  8496  001922  6E0E               	movwf	i1CANsendMessage@tamp+1,c
  8497  001924  0E00               	movlw	0
  8498  001926  1403               	andwf	i1CANsendMessage@identifier+2,w,c
  8499  001928  6E0F               	movwf	i1CANsendMessage@tamp+2,c
  8500  00192A  0E00               	movlw	0
  8501  00192C  1404               	andwf	i1CANsendMessage@identifier+3,w,c
  8502  00192E  6E10               	movwf	i1CANsendMessage@tamp+3,c
  8503                           
  8504                           ; BSR set to: 15
  8505                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  8506  001930  C00D  F009         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  8507  001934  C00E  F00A         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  8508  001938  C00F  F00B         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  8509  00193C  C010  F00C         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  8510  001940  C00A  F009         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
  8511  001944  C00B  F00A         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
  8512  001948  C00C  F00B         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
  8513  00194C  6A0C               	clrf	??i1_CANsendMessage+3,c
  8514  00194E  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8515  001952  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8516  001956  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8517  00195A  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8518                           
  8519                           ; BSR set to: 15
  8520                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  8521  00195E  C00D  FF23         	movff	i1CANsendMessage@tamp,3875	;volatile
  8522                           
  8523                           ; BSR set to: 15
  8524                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  8525  001962  0E00               	movlw	0
  8526  001964  010F               	movlb	15	; () banked
  8527  001966  6F22               	movwf	34,b	;volatile
  8528                           
  8529                           ; BSR set to: 15
  8530                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  8531  001968  010F               	movlb	15	; () banked
  8532  00196A  8722               	bsf	34,3,b	;volatile
  8533                           
  8534                           ; BSR set to: 15
  8535                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  8536  00196C  A003               	btfss	i1CANsendMessage@identifier+2,0,c
  8537  00196E  D002               	goto	i1l382
  8538                           
  8539                           ; BSR set to: 15
  8540                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  8541  001970  010F               	movlb	15	; () banked
  8542  001972  8122               	bsf	34,0,b	;volatile
  8543  001974                     i1l382:
  8544                           
  8545                           ; BSR set to: 15
  8546                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  8547  001974  A203               	btfss	i1CANsendMessage@identifier+2,1,c
  8548  001976  D002               	goto	i1l383
  8549                           
  8550                           ; BSR set to: 15
  8551                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  8552  001978  010F               	movlb	15	; () banked
  8553  00197A  8322               	bsf	34,1,b	;volatile
  8554  00197C                     i1l383:
  8555                           
  8556                           ; BSR set to: 15
  8557                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  8558  00197C  A403               	btfss	i1CANsendMessage@identifier+2,2,c
  8559  00197E  D002               	goto	i1l384
  8560                           
  8561                           ; BSR set to: 15
  8562                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  8563  001980  010F               	movlb	15	; () banked
  8564  001982  8B22               	bsf	34,5,b	;volatile
  8565  001984                     i1l384:
  8566                           
  8567                           ; BSR set to: 15
  8568                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  8569  001984  A603               	btfss	i1CANsendMessage@identifier+2,3,c
  8570  001986  D002               	goto	i1l385
  8571                           
  8572                           ; BSR set to: 15
  8573                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  8574  001988  010F               	movlb	15	; () banked
  8575  00198A  8D22               	bsf	34,6,b	;volatile
  8576  00198C                     i1l385:
  8577                           
  8578                           ; BSR set to: 15
  8579                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  8580  00198C  A803               	btfss	i1CANsendMessage@identifier+2,4,c
  8581  00198E  D003               	goto	i1l3953
  8582                           
  8583                           ; BSR set to: 15
  8584                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  8585  001990  010F               	movlb	15	; () banked
  8586  001992  8F22               	bsf	34,7,b	;volatile
  8587  001994  D000               	goto	i1l3953
  8588  001996                     i1l3953:
  8589                           
  8590                           ; BSR set to: 15
  8591                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  8592  001996  C001  F009         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  8593  00199A  C002  F00A         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  8594  00199E  C003  F00B         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  8595  0019A2  C004  F00C         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  8596  0019A6  0E16               	movlw	22
  8597  0019A8  D005               	goto	i1u471_20
  8598  0019AA                     i1u471_25:
  8599  0019AA  90D8               	bcf	status,0,c
  8600  0019AC  320C               	rrcf	??i1_CANsendMessage+3,f,c
  8601  0019AE  320B               	rrcf	??i1_CANsendMessage+2,f,c
  8602  0019B0  320A               	rrcf	??i1_CANsendMessage+1,f,c
  8603  0019B2  3209               	rrcf	??i1_CANsendMessage,f,c
  8604  0019B4                     i1u471_20:
  8605  0019B4  2EE8               	decfsz	wreg,f,c
  8606  0019B6  D7F9               	goto	i1u471_25
  8607  0019B8  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8608  0019BC  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8609  0019C0  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8610  0019C4  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8611                           
  8612                           ; BSR set to: 15
  8613                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  8614  0019C8  500D               	movf	i1CANsendMessage@tamp,w,c
  8615  0019CA  6E0D               	movwf	i1CANsendMessage@tamp,c
  8616  0019CC  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  8617  0019CE  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  8618  0019D0  6A10               	clrf	i1CANsendMessage@tamp+3,c
  8619                           
  8620                           ; BSR set to: 15
  8621                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  8622  0019D2  C00D  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
  8623                           
  8624                           ;inc\CANlib.h: 483: }
  8625  0019D6  D04E               	goto	i1l3973
  8626  0019D8                     i1l381:
  8627                           
  8628                           ; BSR set to: 15
  8629                           ;inc\CANlib.h: 485: else
  8630                           ;inc\CANlib.h: 487: {
  8631                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  8632  0019D8  010F               	movlb	15	; () banked
  8633  0019DA  9722               	bcf	34,3,b	;volatile
  8634                           
  8635                           ; BSR set to: 15
  8636                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  8637  0019DC  C001  F009         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  8638  0019E0  C002  F00A         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  8639  0019E4  C003  F00B         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  8640  0019E8  C004  F00C         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  8641  0019EC  0E04               	movlw	4
  8642  0019EE  D005               	goto	i1u472_20
  8643  0019F0                     i1u472_25:
  8644  0019F0  90D8               	bcf	status,0,c
  8645  0019F2  320C               	rrcf	??i1_CANsendMessage+3,f,c
  8646  0019F4  320B               	rrcf	??i1_CANsendMessage+2,f,c
  8647  0019F6  320A               	rrcf	??i1_CANsendMessage+1,f,c
  8648  0019F8  3209               	rrcf	??i1_CANsendMessage,f,c
  8649  0019FA                     i1u472_20:
  8650  0019FA  2EE8               	decfsz	wreg,f,c
  8651  0019FC  D7F9               	goto	i1u472_25
  8652  0019FE  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8653  001A02  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8654  001A06  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8655  001A0A  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8656                           
  8657                           ; BSR set to: 15
  8658                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  8659  001A0E  500D               	movf	i1CANsendMessage@tamp,w,c
  8660  001A10  6E0D               	movwf	i1CANsendMessage@tamp,c
  8661  001A12  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  8662  001A14  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  8663  001A16  6A10               	clrf	i1CANsendMessage@tamp+3,c
  8664                           
  8665                           ; BSR set to: 15
  8666                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  8667  001A18  C00D  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
  8668                           
  8669                           ; BSR set to: 15
  8670                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  8671  001A1C  0E07               	movlw	7
  8672  001A1E  1401               	andwf	i1CANsendMessage@identifier,w,c
  8673  001A20  6E0D               	movwf	i1CANsendMessage@tamp,c
  8674  001A22  0E00               	movlw	0
  8675  001A24  1402               	andwf	i1CANsendMessage@identifier+1,w,c
  8676  001A26  6E0E               	movwf	i1CANsendMessage@tamp+1,c
  8677  001A28  0E00               	movlw	0
  8678  001A2A  1403               	andwf	i1CANsendMessage@identifier+2,w,c
  8679  001A2C  6E0F               	movwf	i1CANsendMessage@tamp+2,c
  8680  001A2E  0E00               	movlw	0
  8681  001A30  1404               	andwf	i1CANsendMessage@identifier+3,w,c
  8682  001A32  6E10               	movwf	i1CANsendMessage@tamp+3,c
  8683                           
  8684                           ; BSR set to: 15
  8685                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  8686  001A34  C00D  F009         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  8687  001A38  C00E  F00A         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  8688  001A3C  C00F  F00B         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  8689  001A40  C010  F00C         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  8690  001A44  0E05               	movlw	5
  8691  001A46                     i1u473_25:
  8692  001A46  90D8               	bcf	status,0,c
  8693  001A48  3609               	rlcf	??i1_CANsendMessage,f,c
  8694  001A4A  360A               	rlcf	??i1_CANsendMessage+1,f,c
  8695  001A4C  360B               	rlcf	??i1_CANsendMessage+2,f,c
  8696  001A4E  360C               	rlcf	??i1_CANsendMessage+3,f,c
  8697  001A50  2EE8               	decfsz	wreg,f,c
  8698  001A52  D7F9               	goto	i1u473_25
  8699  001A54  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8700  001A58  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8701  001A5C  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8702  001A60  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8703                           
  8704                           ; BSR set to: 15
  8705                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  8706  001A64  010F               	movlb	15	; () banked
  8707  001A66  5122               	movf	34,w,b	;volatile
  8708  001A68  0B1F               	andlw	31
  8709  001A6A  010F               	movlb	15	; () banked
  8710  001A6C  6F22               	movwf	34,b	;volatile
  8711                           
  8712                           ; BSR set to: 15
  8713                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  8714  001A6E  C00D  FF22         	movff	i1CANsendMessage@tamp,3874	;volatile
  8715  001A72  D000               	goto	i1l3973
  8716  001A74                     i1l3973:
  8717                           
  8718                           ; BSR set to: 15
  8719                           ;inc\CANlib.h: 498: }
  8720                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  8721  001A74  A008               	btfss	i1CANsendMessage@flags,0,c
  8722  001A76  D003               	goto	i1l388
  8723                           
  8724                           ; BSR set to: 15
  8725                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  8726  001A78  010F               	movlb	15	; () banked
  8727  001A7A  8120               	bsf	32,0,b	;volatile
  8728  001A7C  D002               	goto	i1l389
  8729  001A7E                     i1l388:
  8730                           
  8731                           ; BSR set to: 15
  8732                           ;inc\CANlib.h: 502: else
  8733                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  8734  001A7E  010F               	movlb	15	; () banked
  8735  001A80  9120               	bcf	32,0,b	;volatile
  8736  001A82                     i1l389:
  8737                           
  8738                           ; BSR set to: 15
  8739                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  8740  001A82  A208               	btfss	i1CANsendMessage@flags,1,c
  8741  001A84  D003               	goto	i1l390
  8742                           
  8743                           ; BSR set to: 15
  8744                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  8745  001A86  010F               	movlb	15	; () banked
  8746  001A88  8320               	bsf	32,1,b	;volatile
  8747  001A8A  D003               	goto	i1l3979
  8748  001A8C                     i1l390:
  8749                           
  8750                           ; BSR set to: 15
  8751                           ;inc\CANlib.h: 506: else
  8752                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  8753  001A8C  010F               	movlb	15	; () banked
  8754  001A8E  9320               	bcf	32,1,b	;volatile
  8755  001A90  D000               	goto	i1l3979
  8756  001A92                     i1l3979:
  8757                           
  8758                           ; BSR set to: 15
  8759                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  8760  001A92  C005  FFD9         	movff	i1CANsendMessage@data,fsr2l
  8761  001A96  C006  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
  8762  001A9A  50DF               	movf	indf2,w,c
  8763  001A9C  010F               	movlb	15	; () banked
  8764  001A9E  6F26               	movwf	38,b	;volatile
  8765                           
  8766                           ; BSR set to: 15
  8767                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  8768  001AA0  EE20 F001          	lfsr	2,1
  8769  001AA4  5005               	movf	i1CANsendMessage@data,w,c
  8770  001AA6  26D9               	addwf	fsr2l,f,c
  8771  001AA8  5006               	movf	i1CANsendMessage@data+1,w,c
  8772  001AAA  22DA               	addwfc	fsr2h,f,c
  8773  001AAC  50DF               	movf	indf2,w,c
  8774  001AAE  010F               	movlb	15	; () banked
  8775  001AB0  6F27               	movwf	39,b	;volatile
  8776                           
  8777                           ; BSR set to: 15
  8778                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  8779  001AB2  EE20 F002          	lfsr	2,2
  8780  001AB6  5005               	movf	i1CANsendMessage@data,w,c
  8781  001AB8  26D9               	addwf	fsr2l,f,c
  8782  001ABA  5006               	movf	i1CANsendMessage@data+1,w,c
  8783  001ABC  22DA               	addwfc	fsr2h,f,c
  8784  001ABE  50DF               	movf	indf2,w,c
  8785  001AC0  010F               	movlb	15	; () banked
  8786  001AC2  6F28               	movwf	40,b	;volatile
  8787                           
  8788                           ; BSR set to: 15
  8789                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  8790  001AC4  EE20 F003          	lfsr	2,3
  8791  001AC8  5005               	movf	i1CANsendMessage@data,w,c
  8792  001ACA  26D9               	addwf	fsr2l,f,c
  8793  001ACC  5006               	movf	i1CANsendMessage@data+1,w,c
  8794  001ACE  22DA               	addwfc	fsr2h,f,c
  8795  001AD0  50DF               	movf	indf2,w,c
  8796  001AD2  010F               	movlb	15	; () banked
  8797  001AD4  6F29               	movwf	41,b	;volatile
  8798                           
  8799                           ; BSR set to: 15
  8800                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  8801  001AD6  EE20 F004          	lfsr	2,4
  8802  001ADA  5005               	movf	i1CANsendMessage@data,w,c
  8803  001ADC  26D9               	addwf	fsr2l,f,c
  8804  001ADE  5006               	movf	i1CANsendMessage@data+1,w,c
  8805  001AE0  22DA               	addwfc	fsr2h,f,c
  8806  001AE2  50DF               	movf	indf2,w,c
  8807  001AE4  010F               	movlb	15	; () banked
  8808  001AE6  6F2A               	movwf	42,b	;volatile
  8809                           
  8810                           ; BSR set to: 15
  8811                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  8812  001AE8  EE20 F005          	lfsr	2,5
  8813  001AEC  5005               	movf	i1CANsendMessage@data,w,c
  8814  001AEE  26D9               	addwf	fsr2l,f,c
  8815  001AF0  5006               	movf	i1CANsendMessage@data+1,w,c
  8816  001AF2  22DA               	addwfc	fsr2h,f,c
  8817  001AF4  50DF               	movf	indf2,w,c
  8818  001AF6  010F               	movlb	15	; () banked
  8819  001AF8  6F2B               	movwf	43,b	;volatile
  8820                           
  8821                           ; BSR set to: 15
  8822                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  8823  001AFA  EE20 F006          	lfsr	2,6
  8824  001AFE  5005               	movf	i1CANsendMessage@data,w,c
  8825  001B00  26D9               	addwf	fsr2l,f,c
  8826  001B02  5006               	movf	i1CANsendMessage@data+1,w,c
  8827  001B04  22DA               	addwfc	fsr2h,f,c
  8828  001B06  50DF               	movf	indf2,w,c
  8829  001B08  010F               	movlb	15	; () banked
  8830  001B0A  6F2C               	movwf	44,b	;volatile
  8831                           
  8832                           ; BSR set to: 15
  8833                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  8834  001B0C  EE20 F007          	lfsr	2,7
  8835  001B10  5005               	movf	i1CANsendMessage@data,w,c
  8836  001B12  26D9               	addwf	fsr2l,f,c
  8837  001B14  5006               	movf	i1CANsendMessage@data+1,w,c
  8838  001B16  22DA               	addwfc	fsr2h,f,c
  8839  001B18  50DF               	movf	indf2,w,c
  8840  001B1A  010F               	movlb	15	; () banked
  8841  001B1C  6F2D               	movwf	45,b	;volatile
  8842                           
  8843                           ; BSR set to: 15
  8844                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  8845  001B1E  010F               	movlb	15	; () banked
  8846  001B20  8720               	bsf	32,3,b	;volatile
  8847                           
  8848                           ; BSR set to: 15
  8849                           ;inc\CANlib.h: 520: return;
  8850  001B22  D000               	goto	i1l363
  8851  001B24                     i1l363:
  8852                           
  8853                           ; BSR set to: 15
  8854  001B24  0012               	return		;funcret
  8855  001B26                     __end_ofi1_CANsendMessage:
  8856                           	opt stack 0
  8857                           pclatu	equ	0xFFB
  8858                           pclath	equ	0xFFA
  8859                           tblptru	equ	0xFF8
  8860                           tblptrh	equ	0xFF7
  8861                           tblptrl	equ	0xFF6
  8862                           tablat	equ	0xFF5
  8863                           prodh	equ	0xFF4
  8864                           prodl	equ	0xFF3
  8865                           intcon	equ	0xFF2
  8866                           intcon2	equ	0xFF1
  8867                           postinc0	equ	0xFEE
  8868                           fsr0h	equ	0xFEA
  8869                           fsr0l	equ	0xFE9
  8870                           wreg	equ	0xFE8
  8871                           postdec1	equ	0xFE5
  8872                           fsr1h	equ	0xFE2
  8873                           fsr1l	equ	0xFE1
  8874                           bsr	equ	0xFE0
  8875                           indf2	equ	0xFDF
  8876                           fsr2h	equ	0xFDA
  8877                           fsr2l	equ	0xFD9
  8878                           status	equ	0xFD8
  8879                           
  8880 ;; *************** function ___lwdiv *****************
  8881 ;; Defined at:
  8882 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;  dividend        2    6[COMRAM] unsigned int 
  8885 ;;  divisor         2    8[COMRAM] unsigned int 
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;  quotient        2   10[COMRAM] unsigned int 
  8888 ;;  counter         1   12[COMRAM] unsigned char 
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  2    6[COMRAM] unsigned int 
  8891 ;; Registers used:
  8892 ;;		wreg, status,2, status,0
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8898 ;;      Params:         4       0       0       0
  8899 ;;      Locals:         3       0       0       0
  8900 ;;      Temps:          0       0       0       0
  8901 ;;      Totals:         7       0       0       0
  8902 ;;Total ram usage:        7 bytes
  8903 ;; Hardware stack levels used:    1
  8904 ;; Hardware stack levels required when called:    2
  8905 ;; This function calls:
  8906 ;;		Nothing
  8907 ;; This function is called by:
  8908 ;;		_ISR_bassa
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           	psect	text24
  8913  002BA2                     __ptext24:
  8914                           	opt stack 0
  8915  002BA2                     ___lwdiv:
  8916                           	opt stack 24
  8917                           
  8918                           ; BSR set to: 15
  8919                           ;incstack = 0
  8920  002BA2  0E00               	movlw	0
  8921  002BA4  6E0C               	movwf	___lwdiv@quotient+1,c
  8922  002BA6  0E00               	movlw	0
  8923  002BA8  6E0B               	movwf	___lwdiv@quotient,c
  8924  002BAA  5009               	movf	___lwdiv@divisor,w,c
  8925  002BAC  100A               	iorwf	___lwdiv@divisor+1,w,c
  8926  002BAE  B4D8               	btfsc	status,2,c
  8927  002BB0  D021               	goto	i1l1198
  8928  002BB2  0E01               	movlw	1
  8929  002BB4  6E0D               	movwf	___lwdiv@counter,c
  8930  002BB6  D005               	goto	i1l3755
  8931  002BB8                     i1l3753:
  8932  002BB8  90D8               	bcf	status,0,c
  8933  002BBA  3609               	rlcf	___lwdiv@divisor,f,c
  8934  002BBC  360A               	rlcf	___lwdiv@divisor+1,f,c
  8935  002BBE  2A0D               	incf	___lwdiv@counter,f,c
  8936  002BC0  D000               	goto	i1l3755
  8937  002BC2                     i1l3755:
  8938  002BC2  BE0A               	btfsc	___lwdiv@divisor+1,7,c
  8939  002BC4  D002               	goto	i1l3757
  8940  002BC6  D7F8               	goto	i1l3753
  8941  002BC8  D000               	goto	i1l3757
  8942  002BCA                     i1l3757:
  8943  002BCA  90D8               	bcf	status,0,c
  8944  002BCC  360B               	rlcf	___lwdiv@quotient,f,c
  8945  002BCE  360C               	rlcf	___lwdiv@quotient+1,f,c
  8946  002BD0  5009               	movf	___lwdiv@divisor,w,c
  8947  002BD2  5C07               	subwf	___lwdiv@dividend,w,c
  8948  002BD4  500A               	movf	___lwdiv@divisor+1,w,c
  8949  002BD6  5808               	subwfb	___lwdiv@dividend+1,w,c
  8950  002BD8  A0D8               	btfss	status,0,c
  8951  002BDA  D006               	goto	i1l3765
  8952  002BDC  5009               	movf	___lwdiv@divisor,w,c
  8953  002BDE  5E07               	subwf	___lwdiv@dividend,f,c
  8954  002BE0  500A               	movf	___lwdiv@divisor+1,w,c
  8955  002BE2  5A08               	subwfb	___lwdiv@dividend+1,f,c
  8956  002BE4  800B               	bsf	___lwdiv@quotient,0,c
  8957  002BE6  D000               	goto	i1l3765
  8958  002BE8                     i1l3765:
  8959  002BE8  90D8               	bcf	status,0,c
  8960  002BEA  320A               	rrcf	___lwdiv@divisor+1,f,c
  8961  002BEC  3209               	rrcf	___lwdiv@divisor,f,c
  8962  002BEE  2E0D               	decfsz	___lwdiv@counter,f,c
  8963  002BF0  D7EC               	goto	i1l3757
  8964  002BF2  D000               	goto	i1l1198
  8965  002BF4                     i1l1198:
  8966  002BF4  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8967  002BF8  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8968  002BFC  0012               	return		;funcret
  8969  002BFE                     __end_of___lwdiv:
  8970                           	opt stack 0
  8971                           pclatu	equ	0xFFB
  8972                           pclath	equ	0xFFA
  8973                           tblptru	equ	0xFF8
  8974                           tblptrh	equ	0xFF7
  8975                           tblptrl	equ	0xFF6
  8976                           tablat	equ	0xFF5
  8977                           prodh	equ	0xFF4
  8978                           prodl	equ	0xFF3
  8979                           intcon	equ	0xFF2
  8980                           intcon2	equ	0xFF1
  8981                           postinc0	equ	0xFEE
  8982                           fsr0h	equ	0xFEA
  8983                           fsr0l	equ	0xFE9
  8984                           wreg	equ	0xFE8
  8985                           postdec1	equ	0xFE5
  8986                           fsr1h	equ	0xFE2
  8987                           fsr1l	equ	0xFE1
  8988                           bsr	equ	0xFE0
  8989                           indf2	equ	0xFDF
  8990                           fsr2h	equ	0xFDA
  8991                           fsr2l	equ	0xFD9
  8992                           status	equ	0xFD8
  8993                           
  8994 ;; *************** function _CANreceiveMessage *****************
  8995 ;; Defined at:
  8996 ;;		line 528 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  8997 ;; Parameters:    Size  Location     Type
  8998 ;;  msg             2    0[COMRAM] PTR struct .
  8999 ;;		 -> msg(15), 
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;  tamp            1   11[COMRAM] unsigned char 
  9002 ;;  error           1   10[COMRAM] unsigned char 
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  1    wreg      unsigned char 
  9005 ;; Registers used:
  9006 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9012 ;;      Params:         2       0       0       0
  9013 ;;      Locals:         2       0       0       0
  9014 ;;      Temps:          8       0       0       0
  9015 ;;      Totals:        12       0       0       0
  9016 ;;Total ram usage:       12 bytes
  9017 ;; Hardware stack levels used:    1
  9018 ;; Hardware stack levels required when called:    2
  9019 ;; This function calls:
  9020 ;;		Nothing
  9021 ;; This function is called by:
  9022 ;;		_ISR_bassa
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           	psect	text25
  9027  001B26                     __ptext25:
  9028                           	opt stack 0
  9029  001B26                     _CANreceiveMessage:
  9030                           	opt stack 24
  9031                           
  9032                           ;inc\CANlib.h: 530: BYTE tamp;
  9033                           ;inc\CANlib.h: 531: BYTE error = 0;
  9034                           
  9035                           ;incstack = 0
  9036  001B26  0E00               	movlw	0
  9037  001B28  6E0B               	movwf	CANreceiveMessage@error,c
  9038                           
  9039                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  9040  001B2A  AE74               	btfss	3956,7,c	;volatile
  9041  001B2C  D002               	goto	i1l3489
  9042                           
  9043                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  9044  001B2E  800B               	bsf	CANreceiveMessage@error,0,c
  9045  001B30  D000               	goto	i1l3489
  9046  001B32                     i1l3489:
  9047                           
  9048                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  9049  001B32  AC74               	btfss	3956,6,c	;volatile
  9050  001B34  D002               	goto	i1l3493
  9051                           
  9052                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  9053  001B36  820B               	bsf	CANreceiveMessage@error,1,c
  9054  001B38  D000               	goto	i1l3493
  9055  001B3A                     i1l3493:
  9056                           
  9057                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  9058  001B3A  010F               	movlb	15	; () banked
  9059  001B3C  AF50               	btfss	80,7,b	;volatile
  9060  001B3E  D149               	goto	i1l396
  9061                           
  9062                           ; BSR set to: 15
  9063                           ;inc\CANlib.h: 541: {
  9064                           ;inc\CANlib.h: 542: msg->identifier = 0;
  9065  001B40  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9066  001B44  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9067  001B48  6ADE               	clrf	postinc2,c
  9068  001B4A  6ADE               	clrf	postinc2,c
  9069  001B4C  6ADE               	clrf	postinc2,c
  9070  001B4E  6ADD               	clrf	postdec2,c
  9071                           
  9072                           ; BSR set to: 15
  9073                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  9074  001B50  EE20 F004          	lfsr	2,4
  9075  001B54  5001               	movf	CANreceiveMessage@msg,w,c
  9076  001B56  26D9               	addwf	fsr2l,f,c
  9077  001B58  5002               	movf	CANreceiveMessage@msg+1,w,c
  9078  001B5A  22DA               	addwfc	fsr2h,f,c
  9079  001B5C  CF56 FFDF          	movff	3926,indf2	;volatile
  9080                           
  9081                           ; BSR set to: 15
  9082                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  9083  001B60  EE20 F005          	lfsr	2,5
  9084  001B64  5001               	movf	CANreceiveMessage@msg,w,c
  9085  001B66  26D9               	addwf	fsr2l,f,c
  9086  001B68  5002               	movf	CANreceiveMessage@msg+1,w,c
  9087  001B6A  22DA               	addwfc	fsr2h,f,c
  9088  001B6C  CF57 FFDF          	movff	3927,indf2	;volatile
  9089                           
  9090                           ; BSR set to: 15
  9091                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  9092  001B70  EE20 F006          	lfsr	2,6
  9093  001B74  5001               	movf	CANreceiveMessage@msg,w,c
  9094  001B76  26D9               	addwf	fsr2l,f,c
  9095  001B78  5002               	movf	CANreceiveMessage@msg+1,w,c
  9096  001B7A  22DA               	addwfc	fsr2h,f,c
  9097  001B7C  CF58 FFDF          	movff	3928,indf2	;volatile
  9098                           
  9099                           ; BSR set to: 15
  9100                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  9101  001B80  EE20 F007          	lfsr	2,7
  9102  001B84  5001               	movf	CANreceiveMessage@msg,w,c
  9103  001B86  26D9               	addwf	fsr2l,f,c
  9104  001B88  5002               	movf	CANreceiveMessage@msg+1,w,c
  9105  001B8A  22DA               	addwfc	fsr2h,f,c
  9106  001B8C  CF59 FFDF          	movff	3929,indf2	;volatile
  9107                           
  9108                           ; BSR set to: 15
  9109                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  9110  001B90  EE20 F008          	lfsr	2,8
  9111  001B94  5001               	movf	CANreceiveMessage@msg,w,c
  9112  001B96  26D9               	addwf	fsr2l,f,c
  9113  001B98  5002               	movf	CANreceiveMessage@msg+1,w,c
  9114  001B9A  22DA               	addwfc	fsr2h,f,c
  9115  001B9C  CF5A FFDF          	movff	3930,indf2	;volatile
  9116                           
  9117                           ; BSR set to: 15
  9118                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  9119  001BA0  EE20 F009          	lfsr	2,9
  9120  001BA4  5001               	movf	CANreceiveMessage@msg,w,c
  9121  001BA6  26D9               	addwf	fsr2l,f,c
  9122  001BA8  5002               	movf	CANreceiveMessage@msg+1,w,c
  9123  001BAA  22DA               	addwfc	fsr2h,f,c
  9124  001BAC  CF5B FFDF          	movff	3931,indf2	;volatile
  9125                           
  9126                           ; BSR set to: 15
  9127                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  9128  001BB0  EE20 F00A          	lfsr	2,10
  9129  001BB4  5001               	movf	CANreceiveMessage@msg,w,c
  9130  001BB6  26D9               	addwf	fsr2l,f,c
  9131  001BB8  5002               	movf	CANreceiveMessage@msg+1,w,c
  9132  001BBA  22DA               	addwfc	fsr2h,f,c
  9133  001BBC  CF5C FFDF          	movff	3932,indf2	;volatile
  9134                           
  9135                           ; BSR set to: 15
  9136                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  9137  001BC0  EE20 F00B          	lfsr	2,11
  9138  001BC4  5001               	movf	CANreceiveMessage@msg,w,c
  9139  001BC6  26D9               	addwf	fsr2l,f,c
  9140  001BC8  5002               	movf	CANreceiveMessage@msg+1,w,c
  9141  001BCA  22DA               	addwfc	fsr2h,f,c
  9142  001BCC  CF5D FFDF          	movff	3933,indf2	;volatile
  9143                           
  9144                           ; BSR set to: 15
  9145                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  9146  001BD0  EE20 F00E          	lfsr	2,14
  9147  001BD4  5001               	movf	CANreceiveMessage@msg,w,c
  9148  001BD6  26D9               	addwf	fsr2l,f,c
  9149  001BD8  5002               	movf	CANreceiveMessage@msg+1,w,c
  9150  001BDA  22DA               	addwfc	fsr2h,f,c
  9151  001BDC  010F               	movlb	15	; () banked
  9152  001BDE  AD55               	btfss	85,6,b	;volatile
  9153  001BE0  D002               	goto	i1u400_20
  9154  001BE2  0E01               	movlw	1
  9155  001BE4  D001               	goto	i1u400_26
  9156  001BE6                     i1u400_20:
  9157  001BE6  0E00               	movlw	0
  9158  001BE8                     i1u400_26:
  9159  001BE8  6EDF               	movwf	indf2,c
  9160                           
  9161                           ; BSR set to: 15
  9162                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  9163  001BEA  EE20 F00D          	lfsr	2,13
  9164  001BEE  5001               	movf	CANreceiveMessage@msg,w,c
  9165  001BF0  26D9               	addwf	fsr2l,f,c
  9166  001BF2  5002               	movf	CANreceiveMessage@msg+1,w,c
  9167  001BF4  22DA               	addwfc	fsr2h,f,c
  9168  001BF6  010F               	movlb	15	; () banked
  9169  001BF8  5155               	movf	85,w,b	;volatile
  9170  001BFA  0B0F               	andlw	15
  9171  001BFC  6EDF               	movwf	indf2,c
  9172                           
  9173                           ; BSR set to: 15
  9174                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  9175  001BFE  EE20 F00C          	lfsr	2,12
  9176  001C02  5001               	movf	CANreceiveMessage@msg,w,c
  9177  001C04  26D9               	addwf	fsr2l,f,c
  9178  001C06  5002               	movf	CANreceiveMessage@msg+1,w,c
  9179  001C08  22DA               	addwfc	fsr2h,f,c
  9180  001C0A  010F               	movlb	15	; () banked
  9181  001C0C  A752               	btfss	82,3,b	;volatile
  9182  001C0E  D002               	goto	i1u401_20
  9183  001C10  0E01               	movlw	1
  9184  001C12  D001               	goto	i1u401_26
  9185  001C14                     i1u401_20:
  9186  001C14  0E00               	movlw	0
  9187  001C16                     i1u401_26:
  9188  001C16  6EDF               	movwf	indf2,c
  9189                           
  9190                           ; BSR set to: 15
  9191                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  9192  001C18  010F               	movlb	15	; () banked
  9193  001C1A  B752               	btfsc	82,3,b	;volatile
  9194  001C1C  D044               	goto	i1l3527
  9195                           
  9196                           ; BSR set to: 15
  9197                           ;inc\CANlib.h: 559: {
  9198                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  9199  001C1E  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  9200  001C22  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9201  001C24  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9202  001C26  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9203  001C28  0E03               	movlw	3
  9204  001C2A                     i1u403_25:
  9205  001C2A  90D8               	bcf	status,0,c
  9206  001C2C  3603               	rlcf	??_CANreceiveMessage,f,c
  9207  001C2E  3604               	rlcf	??_CANreceiveMessage+1,f,c
  9208  001C30  3605               	rlcf	??_CANreceiveMessage+2,f,c
  9209  001C32  3606               	rlcf	??_CANreceiveMessage+3,f,c
  9210  001C34  2EE8               	decfsz	wreg,f,c
  9211  001C36  D7F9               	goto	i1u403_25
  9212  001C38  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9213  001C3C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9214  001C40  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  9215  001C44  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9216  001C48  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9217  001C4C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9218                           
  9219                           ; BSR set to: 15
  9220                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  9221  001C50  010F               	movlb	15	; () banked
  9222  001C52  3952               	swapf	82,w,b	;volatile
  9223  001C54  42E8               	rrncf	wreg,f,c
  9224  001C56  0B07               	andlw	7
  9225  001C58  0B07               	andlw	7
  9226  001C5A  6E0C               	movwf	CANreceiveMessage@tamp,c
  9227                           
  9228                           ; BSR set to: 15
  9229                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  9230  001C5C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9231  001C60  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9232  001C64  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  9233  001C68  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  9234  001C6C  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  9235  001C70  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  9236  001C74  500C               	movf	CANreceiveMessage@tamp,w,c
  9237  001C76  2403               	addwf	??_CANreceiveMessage,w,c
  9238  001C78  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  9239  001C7A  0E00               	movlw	0
  9240  001C7C  2004               	addwfc	??_CANreceiveMessage+1,w,c
  9241  001C7E  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  9242  001C80  0E00               	movlw	0
  9243  001C82  2005               	addwfc	??_CANreceiveMessage+2,w,c
  9244  001C84  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  9245  001C86  0E00               	movlw	0
  9246  001C88  2006               	addwfc	??_CANreceiveMessage+3,w,c
  9247  001C8A  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  9248  001C8C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9249  001C90  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9250  001C94  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  9251  001C98  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  9252  001C9C  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  9253  001CA0  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  9254                           
  9255                           ;inc\CANlib.h: 563: }
  9256  001CA4  D093               	goto	i1l3553
  9257  001CA6                     i1l3527:
  9258                           
  9259                           ; BSR set to: 15
  9260                           ;inc\CANlib.h: 564: else
  9261                           ;inc\CANlib.h: 565: {
  9262                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  9263  001CA6  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  9264  001CAA  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9265  001CAC  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9266  001CAE  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9267  001CB0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9268  001CB4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9269  001CB8  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  9270  001CBC  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9271  001CC0  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9272  001CC4  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9273                           
  9274                           ; BSR set to: 15
  9275                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  9276  001CC8  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  9277  001CCC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9278  001CCE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9279  001CD0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9280  001CD2  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  9281  001CD6  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  9282  001CDA  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  9283  001CDE  6A03               	clrf	??_CANreceiveMessage,c
  9284  001CE0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9285  001CE4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9286  001CE8  5003               	movf	??_CANreceiveMessage,w,c
  9287  001CEA  26DE               	addwf	postinc2,f,c
  9288  001CEC  5004               	movf	??_CANreceiveMessage+1,w,c
  9289  001CEE  22DE               	addwfc	postinc2,f,c
  9290  001CF0  5005               	movf	??_CANreceiveMessage+2,w,c
  9291  001CF2  22DE               	addwfc	postinc2,f,c
  9292  001CF4  5006               	movf	??_CANreceiveMessage+3,w,c
  9293  001CF6  22DE               	addwfc	postinc2,f,c
  9294                           
  9295                           ; BSR set to: 15
  9296                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  9297  001CF8  010F               	movlb	15	; () banked
  9298  001CFA  A152               	btfss	82,0,b	;volatile
  9299  001CFC  D00D               	goto	i1l3535
  9300                           
  9301                           ; BSR set to: 15
  9302                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  9303  001CFE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9304  001D02  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9305  001D06  0E00               	movlw	0
  9306  001D08  12DE               	iorwf	postinc2,f,c
  9307  001D0A  0E00               	movlw	0
  9308  001D0C  12DE               	iorwf	postinc2,f,c
  9309  001D0E  0E01               	movlw	1
  9310  001D10  12DE               	iorwf	postinc2,f,c
  9311  001D12  0E00               	movlw	0
  9312  001D14  12DE               	iorwf	postinc2,f,c
  9313  001D16  D000               	goto	i1l3535
  9314  001D18                     i1l3535:
  9315                           
  9316                           ; BSR set to: 15
  9317                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  9318  001D18  010F               	movlb	15	; () banked
  9319  001D1A  A352               	btfss	82,1,b	;volatile
  9320  001D1C  D00D               	goto	i1l3539
  9321                           
  9322                           ; BSR set to: 15
  9323                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  9324  001D1E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9325  001D22  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9326  001D26  0E00               	movlw	0
  9327  001D28  12DE               	iorwf	postinc2,f,c
  9328  001D2A  0E00               	movlw	0
  9329  001D2C  12DE               	iorwf	postinc2,f,c
  9330  001D2E  0E02               	movlw	2
  9331  001D30  12DE               	iorwf	postinc2,f,c
  9332  001D32  0E00               	movlw	0
  9333  001D34  12DE               	iorwf	postinc2,f,c
  9334  001D36  D000               	goto	i1l3539
  9335  001D38                     i1l3539:
  9336                           
  9337                           ; BSR set to: 15
  9338                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  9339  001D38  010F               	movlb	15	; () banked
  9340  001D3A  AB52               	btfss	82,5,b	;volatile
  9341  001D3C  D00D               	goto	i1l3543
  9342                           
  9343                           ; BSR set to: 15
  9344                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  9345  001D3E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9346  001D42  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9347  001D46  0E00               	movlw	0
  9348  001D48  12DE               	iorwf	postinc2,f,c
  9349  001D4A  0E00               	movlw	0
  9350  001D4C  12DE               	iorwf	postinc2,f,c
  9351  001D4E  0E04               	movlw	4
  9352  001D50  12DE               	iorwf	postinc2,f,c
  9353  001D52  0E00               	movlw	0
  9354  001D54  12DE               	iorwf	postinc2,f,c
  9355  001D56  D000               	goto	i1l3543
  9356  001D58                     i1l3543:
  9357                           
  9358                           ; BSR set to: 15
  9359                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  9360  001D58  010F               	movlb	15	; () banked
  9361  001D5A  AD52               	btfss	82,6,b	;volatile
  9362  001D5C  D00D               	goto	i1l3547
  9363                           
  9364                           ; BSR set to: 15
  9365                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  9366  001D5E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9367  001D62  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9368  001D66  0E00               	movlw	0
  9369  001D68  12DE               	iorwf	postinc2,f,c
  9370  001D6A  0E00               	movlw	0
  9371  001D6C  12DE               	iorwf	postinc2,f,c
  9372  001D6E  0E08               	movlw	8
  9373  001D70  12DE               	iorwf	postinc2,f,c
  9374  001D72  0E00               	movlw	0
  9375  001D74  12DE               	iorwf	postinc2,f,c
  9376  001D76  D000               	goto	i1l3547
  9377  001D78                     i1l3547:
  9378                           
  9379                           ; BSR set to: 15
  9380                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  9381  001D78  010F               	movlb	15	; () banked
  9382  001D7A  AF52               	btfss	82,7,b	;volatile
  9383  001D7C  D00D               	goto	i1l3551
  9384                           
  9385                           ; BSR set to: 15
  9386                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  9387  001D7E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9388  001D82  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9389  001D86  0E00               	movlw	0
  9390  001D88  12DE               	iorwf	postinc2,f,c
  9391  001D8A  0E00               	movlw	0
  9392  001D8C  12DE               	iorwf	postinc2,f,c
  9393  001D8E  0E10               	movlw	16
  9394  001D90  12DE               	iorwf	postinc2,f,c
  9395  001D92  0E00               	movlw	0
  9396  001D94  12DE               	iorwf	postinc2,f,c
  9397  001D96  D000               	goto	i1l3551
  9398  001D98                     i1l3551:
  9399                           
  9400                           ; BSR set to: 15
  9401                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  9402  001D98  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  9403  001D9C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9404  001D9E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9405  001DA0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9406  001DA2  0E15               	movlw	21
  9407  001DA4                     i1u409_25:
  9408  001DA4  90D8               	bcf	status,0,c
  9409  001DA6  3603               	rlcf	??_CANreceiveMessage,f,c
  9410  001DA8  3604               	rlcf	??_CANreceiveMessage+1,f,c
  9411  001DAA  3605               	rlcf	??_CANreceiveMessage+2,f,c
  9412  001DAC  3606               	rlcf	??_CANreceiveMessage+3,f,c
  9413  001DAE  2EE8               	decfsz	wreg,f,c
  9414  001DB0  D7F9               	goto	i1u409_25
  9415  001DB2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9416  001DB6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9417  001DBA  5003               	movf	??_CANreceiveMessage,w,c
  9418  001DBC  12DE               	iorwf	postinc2,f,c
  9419  001DBE  5004               	movf	??_CANreceiveMessage+1,w,c
  9420  001DC0  12DE               	iorwf	postinc2,f,c
  9421  001DC2  5005               	movf	??_CANreceiveMessage+2,w,c
  9422  001DC4  12DE               	iorwf	postinc2,f,c
  9423  001DC6  5006               	movf	??_CANreceiveMessage+3,w,c
  9424  001DC8  12DE               	iorwf	postinc2,f,c
  9425  001DCA  D000               	goto	i1l3553
  9426  001DCC                     i1l3553:
  9427                           
  9428                           ; BSR set to: 15
  9429                           ;inc\CANlib.h: 581: }
  9430                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  9431  001DCC  010F               	movlb	15	; () banked
  9432  001DCE  9F50               	bcf	80,7,b	;volatile
  9433                           
  9434                           ; BSR set to: 15
  9435                           ;inc\CANlib.h: 584: return (error);
  9436                           ;	Return value of _CANreceiveMessage is never used
  9437  001DD0  D140               	goto	i1l404
  9438  001DD2                     i1l396:
  9439                           
  9440                           ; BSR set to: 15
  9441                           ;inc\CANlib.h: 585: }
  9442                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  9443  001DD2  AE60               	btfss	3936,7,c	;volatile
  9444  001DD4  D13E               	goto	i1l404
  9445                           
  9446                           ; BSR set to: 15
  9447                           ;inc\CANlib.h: 588: {
  9448                           ;inc\CANlib.h: 589: msg->identifier = 0;
  9449  001DD6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9450  001DDA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9451  001DDE  6ADE               	clrf	postinc2,c
  9452  001DE0  6ADE               	clrf	postinc2,c
  9453  001DE2  6ADE               	clrf	postinc2,c
  9454  001DE4  6ADD               	clrf	postdec2,c
  9455                           
  9456                           ; BSR set to: 15
  9457                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  9458  001DE6  EE20 F004          	lfsr	2,4
  9459  001DEA  5001               	movf	CANreceiveMessage@msg,w,c
  9460  001DEC  26D9               	addwf	fsr2l,f,c
  9461  001DEE  5002               	movf	CANreceiveMessage@msg+1,w,c
  9462  001DF0  22DA               	addwfc	fsr2h,f,c
  9463  001DF2  CF66 FFDF          	movff	3942,indf2	;volatile
  9464                           
  9465                           ; BSR set to: 15
  9466                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  9467  001DF6  EE20 F005          	lfsr	2,5
  9468  001DFA  5001               	movf	CANreceiveMessage@msg,w,c
  9469  001DFC  26D9               	addwf	fsr2l,f,c
  9470  001DFE  5002               	movf	CANreceiveMessage@msg+1,w,c
  9471  001E00  22DA               	addwfc	fsr2h,f,c
  9472  001E02  CF67 FFDF          	movff	3943,indf2	;volatile
  9473                           
  9474                           ; BSR set to: 15
  9475                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  9476  001E06  EE20 F006          	lfsr	2,6
  9477  001E0A  5001               	movf	CANreceiveMessage@msg,w,c
  9478  001E0C  26D9               	addwf	fsr2l,f,c
  9479  001E0E  5002               	movf	CANreceiveMessage@msg+1,w,c
  9480  001E10  22DA               	addwfc	fsr2h,f,c
  9481  001E12  CF68 FFDF          	movff	3944,indf2	;volatile
  9482                           
  9483                           ; BSR set to: 15
  9484                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  9485  001E16  EE20 F007          	lfsr	2,7
  9486  001E1A  5001               	movf	CANreceiveMessage@msg,w,c
  9487  001E1C  26D9               	addwf	fsr2l,f,c
  9488  001E1E  5002               	movf	CANreceiveMessage@msg+1,w,c
  9489  001E20  22DA               	addwfc	fsr2h,f,c
  9490  001E22  CF69 FFDF          	movff	3945,indf2	;volatile
  9491                           
  9492                           ; BSR set to: 15
  9493                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  9494  001E26  EE20 F008          	lfsr	2,8
  9495  001E2A  5001               	movf	CANreceiveMessage@msg,w,c
  9496  001E2C  26D9               	addwf	fsr2l,f,c
  9497  001E2E  5002               	movf	CANreceiveMessage@msg+1,w,c
  9498  001E30  22DA               	addwfc	fsr2h,f,c
  9499  001E32  CF6A FFDF          	movff	3946,indf2	;volatile
  9500                           
  9501                           ; BSR set to: 15
  9502                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  9503  001E36  EE20 F009          	lfsr	2,9
  9504  001E3A  5001               	movf	CANreceiveMessage@msg,w,c
  9505  001E3C  26D9               	addwf	fsr2l,f,c
  9506  001E3E  5002               	movf	CANreceiveMessage@msg+1,w,c
  9507  001E40  22DA               	addwfc	fsr2h,f,c
  9508  001E42  CF6B FFDF          	movff	3947,indf2	;volatile
  9509                           
  9510                           ; BSR set to: 15
  9511                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  9512  001E46  EE20 F00A          	lfsr	2,10
  9513  001E4A  5001               	movf	CANreceiveMessage@msg,w,c
  9514  001E4C  26D9               	addwf	fsr2l,f,c
  9515  001E4E  5002               	movf	CANreceiveMessage@msg+1,w,c
  9516  001E50  22DA               	addwfc	fsr2h,f,c
  9517  001E52  CF6C FFDF          	movff	3948,indf2	;volatile
  9518                           
  9519                           ; BSR set to: 15
  9520                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  9521  001E56  EE20 F00B          	lfsr	2,11
  9522  001E5A  5001               	movf	CANreceiveMessage@msg,w,c
  9523  001E5C  26D9               	addwf	fsr2l,f,c
  9524  001E5E  5002               	movf	CANreceiveMessage@msg+1,w,c
  9525  001E60  22DA               	addwfc	fsr2h,f,c
  9526  001E62  CF6D FFDF          	movff	3949,indf2	;volatile
  9527                           
  9528                           ; BSR set to: 15
  9529                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  9530  001E66  EE20 F00E          	lfsr	2,14
  9531  001E6A  5001               	movf	CANreceiveMessage@msg,w,c
  9532  001E6C  26D9               	addwf	fsr2l,f,c
  9533  001E6E  5002               	movf	CANreceiveMessage@msg+1,w,c
  9534  001E70  22DA               	addwfc	fsr2h,f,c
  9535  001E72  AC65               	btfss	3941,6,c	;volatile
  9536  001E74  D002               	goto	i1u411_20
  9537  001E76  0E01               	movlw	1
  9538  001E78  D001               	goto	i1u411_26
  9539  001E7A                     i1u411_20:
  9540  001E7A  0E00               	movlw	0
  9541  001E7C                     i1u411_26:
  9542  001E7C  6EDF               	movwf	indf2,c
  9543                           
  9544                           ; BSR set to: 15
  9545                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  9546  001E7E  EE20 F00D          	lfsr	2,13
  9547  001E82  5001               	movf	CANreceiveMessage@msg,w,c
  9548  001E84  26D9               	addwf	fsr2l,f,c
  9549  001E86  5002               	movf	CANreceiveMessage@msg+1,w,c
  9550  001E88  22DA               	addwfc	fsr2h,f,c
  9551  001E8A  5065               	movf	3941,w,c	;volatile
  9552  001E8C  0B0F               	andlw	15
  9553  001E8E  6EDF               	movwf	indf2,c
  9554                           
  9555                           ; BSR set to: 15
  9556                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  9557  001E90  EE20 F00C          	lfsr	2,12
  9558  001E94  5001               	movf	CANreceiveMessage@msg,w,c
  9559  001E96  26D9               	addwf	fsr2l,f,c
  9560  001E98  5002               	movf	CANreceiveMessage@msg+1,w,c
  9561  001E9A  22DA               	addwfc	fsr2h,f,c
  9562  001E9C  A662               	btfss	3938,3,c	;volatile
  9563  001E9E  D002               	goto	i1u412_20
  9564  001EA0  0E01               	movlw	1
  9565  001EA2  D001               	goto	i1u412_26
  9566  001EA4                     i1u412_20:
  9567  001EA4  0E00               	movlw	0
  9568  001EA6                     i1u412_26:
  9569  001EA6  6EDF               	movwf	indf2,c
  9570                           
  9571                           ; BSR set to: 15
  9572                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  9573  001EA8  B662               	btfsc	3938,3,c	;volatile
  9574  001EAA  D043               	goto	i1l3589
  9575                           
  9576                           ; BSR set to: 15
  9577                           ;inc\CANlib.h: 606: {
  9578                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  9579  001EAC  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  9580  001EB0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9581  001EB2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9582  001EB4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9583  001EB6  0E03               	movlw	3
  9584  001EB8                     i1u414_25:
  9585  001EB8  90D8               	bcf	status,0,c
  9586  001EBA  3603               	rlcf	??_CANreceiveMessage,f,c
  9587  001EBC  3604               	rlcf	??_CANreceiveMessage+1,f,c
  9588  001EBE  3605               	rlcf	??_CANreceiveMessage+2,f,c
  9589  001EC0  3606               	rlcf	??_CANreceiveMessage+3,f,c
  9590  001EC2  2EE8               	decfsz	wreg,f,c
  9591  001EC4  D7F9               	goto	i1u414_25
  9592  001EC6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9593  001ECA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9594  001ECE  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  9595  001ED2  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9596  001ED6  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9597  001EDA  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9598                           
  9599                           ; BSR set to: 15
  9600                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  9601  001EDE  3862               	swapf	3938,w,c	;volatile
  9602  001EE0  42E8               	rrncf	wreg,f,c
  9603  001EE2  0B07               	andlw	7
  9604  001EE4  0B07               	andlw	7
  9605  001EE6  6E0C               	movwf	CANreceiveMessage@tamp,c
  9606                           
  9607                           ; BSR set to: 15
  9608                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  9609  001EE8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9610  001EEC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9611  001EF0  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  9612  001EF4  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  9613  001EF8  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  9614  001EFC  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  9615  001F00  500C               	movf	CANreceiveMessage@tamp,w,c
  9616  001F02  2403               	addwf	??_CANreceiveMessage,w,c
  9617  001F04  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  9618  001F06  0E00               	movlw	0
  9619  001F08  2004               	addwfc	??_CANreceiveMessage+1,w,c
  9620  001F0A  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  9621  001F0C  0E00               	movlw	0
  9622  001F0E  2005               	addwfc	??_CANreceiveMessage+2,w,c
  9623  001F10  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  9624  001F12  0E00               	movlw	0
  9625  001F14  2006               	addwfc	??_CANreceiveMessage+3,w,c
  9626  001F16  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  9627  001F18  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9628  001F1C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9629  001F20  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  9630  001F24  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  9631  001F28  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  9632  001F2C  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  9633                           
  9634                           ;inc\CANlib.h: 610: }
  9635  001F30  D08E               	goto	i1l3615
  9636  001F32                     i1l3589:
  9637                           
  9638                           ; BSR set to: 15
  9639                           ;inc\CANlib.h: 611: else
  9640                           ;inc\CANlib.h: 612: {
  9641                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  9642  001F32  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  9643  001F36  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9644  001F38  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9645  001F3A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9646  001F3C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9647  001F40  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9648  001F44  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  9649  001F48  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9650  001F4C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9651  001F50  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9652                           
  9653                           ; BSR set to: 15
  9654                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  9655  001F54  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  9656  001F58  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9657  001F5A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9658  001F5C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9659  001F5E  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  9660  001F62  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  9661  001F66  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  9662  001F6A  6A03               	clrf	??_CANreceiveMessage,c
  9663  001F6C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9664  001F70  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9665  001F74  5003               	movf	??_CANreceiveMessage,w,c
  9666  001F76  26DE               	addwf	postinc2,f,c
  9667  001F78  5004               	movf	??_CANreceiveMessage+1,w,c
  9668  001F7A  22DE               	addwfc	postinc2,f,c
  9669  001F7C  5005               	movf	??_CANreceiveMessage+2,w,c
  9670  001F7E  22DE               	addwfc	postinc2,f,c
  9671  001F80  5006               	movf	??_CANreceiveMessage+3,w,c
  9672  001F82  22DE               	addwfc	postinc2,f,c
  9673                           
  9674                           ; BSR set to: 15
  9675                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  9676  001F84  A062               	btfss	3938,0,c	;volatile
  9677  001F86  D00D               	goto	i1l3597
  9678                           
  9679                           ; BSR set to: 15
  9680                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  9681  001F88  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9682  001F8C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9683  001F90  0E00               	movlw	0
  9684  001F92  12DE               	iorwf	postinc2,f,c
  9685  001F94  0E00               	movlw	0
  9686  001F96  12DE               	iorwf	postinc2,f,c
  9687  001F98  0E01               	movlw	1
  9688  001F9A  12DE               	iorwf	postinc2,f,c
  9689  001F9C  0E00               	movlw	0
  9690  001F9E  12DE               	iorwf	postinc2,f,c
  9691  001FA0  D000               	goto	i1l3597
  9692  001FA2                     i1l3597:
  9693                           
  9694                           ; BSR set to: 15
  9695                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  9696  001FA2  A262               	btfss	3938,1,c	;volatile
  9697  001FA4  D00D               	goto	i1l3601
  9698                           
  9699                           ; BSR set to: 15
  9700                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  9701  001FA6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9702  001FAA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9703  001FAE  0E00               	movlw	0
  9704  001FB0  12DE               	iorwf	postinc2,f,c
  9705  001FB2  0E00               	movlw	0
  9706  001FB4  12DE               	iorwf	postinc2,f,c
  9707  001FB6  0E02               	movlw	2
  9708  001FB8  12DE               	iorwf	postinc2,f,c
  9709  001FBA  0E00               	movlw	0
  9710  001FBC  12DE               	iorwf	postinc2,f,c
  9711  001FBE  D000               	goto	i1l3601
  9712  001FC0                     i1l3601:
  9713                           
  9714                           ; BSR set to: 15
  9715                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  9716  001FC0  AA62               	btfss	3938,5,c	;volatile
  9717  001FC2  D00D               	goto	i1l3605
  9718                           
  9719                           ; BSR set to: 15
  9720                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  9721  001FC4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9722  001FC8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9723  001FCC  0E00               	movlw	0
  9724  001FCE  12DE               	iorwf	postinc2,f,c
  9725  001FD0  0E00               	movlw	0
  9726  001FD2  12DE               	iorwf	postinc2,f,c
  9727  001FD4  0E04               	movlw	4
  9728  001FD6  12DE               	iorwf	postinc2,f,c
  9729  001FD8  0E00               	movlw	0
  9730  001FDA  12DE               	iorwf	postinc2,f,c
  9731  001FDC  D000               	goto	i1l3605
  9732  001FDE                     i1l3605:
  9733                           
  9734                           ; BSR set to: 15
  9735                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  9736  001FDE  AC62               	btfss	3938,6,c	;volatile
  9737  001FE0  D00D               	goto	i1l3609
  9738                           
  9739                           ; BSR set to: 15
  9740                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  9741  001FE2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9742  001FE6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9743  001FEA  0E00               	movlw	0
  9744  001FEC  12DE               	iorwf	postinc2,f,c
  9745  001FEE  0E00               	movlw	0
  9746  001FF0  12DE               	iorwf	postinc2,f,c
  9747  001FF2  0E08               	movlw	8
  9748  001FF4  12DE               	iorwf	postinc2,f,c
  9749  001FF6  0E00               	movlw	0
  9750  001FF8  12DE               	iorwf	postinc2,f,c
  9751  001FFA  D000               	goto	i1l3609
  9752  001FFC                     i1l3609:
  9753                           
  9754                           ; BSR set to: 15
  9755                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  9756  001FFC  AE62               	btfss	3938,7,c	;volatile
  9757  001FFE  D00D               	goto	i1l3613
  9758                           
  9759                           ; BSR set to: 15
  9760                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  9761  002000  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9762  002004  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9763  002008  0E00               	movlw	0
  9764  00200A  12DE               	iorwf	postinc2,f,c
  9765  00200C  0E00               	movlw	0
  9766  00200E  12DE               	iorwf	postinc2,f,c
  9767  002010  0E10               	movlw	16
  9768  002012  12DE               	iorwf	postinc2,f,c
  9769  002014  0E00               	movlw	0
  9770  002016  12DE               	iorwf	postinc2,f,c
  9771  002018  D000               	goto	i1l3613
  9772  00201A                     i1l3613:
  9773                           
  9774                           ; BSR set to: 15
  9775                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  9776  00201A  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  9777  00201E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9778  002020  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9779  002022  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9780  002024  0E15               	movlw	21
  9781  002026                     i1u420_25:
  9782  002026  90D8               	bcf	status,0,c
  9783  002028  3603               	rlcf	??_CANreceiveMessage,f,c
  9784  00202A  3604               	rlcf	??_CANreceiveMessage+1,f,c
  9785  00202C  3605               	rlcf	??_CANreceiveMessage+2,f,c
  9786  00202E  3606               	rlcf	??_CANreceiveMessage+3,f,c
  9787  002030  2EE8               	decfsz	wreg,f,c
  9788  002032  D7F9               	goto	i1u420_25
  9789  002034  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9790  002038  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9791  00203C  5003               	movf	??_CANreceiveMessage,w,c
  9792  00203E  12DE               	iorwf	postinc2,f,c
  9793  002040  5004               	movf	??_CANreceiveMessage+1,w,c
  9794  002042  12DE               	iorwf	postinc2,f,c
  9795  002044  5005               	movf	??_CANreceiveMessage+2,w,c
  9796  002046  12DE               	iorwf	postinc2,f,c
  9797  002048  5006               	movf	??_CANreceiveMessage+3,w,c
  9798  00204A  12DE               	iorwf	postinc2,f,c
  9799  00204C  D000               	goto	i1l3615
  9800  00204E                     i1l3615:
  9801                           
  9802                           ; BSR set to: 15
  9803                           ;inc\CANlib.h: 629: }
  9804                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  9805  00204E  9E60               	bcf	3936,7,c	;volatile
  9806                           
  9807                           ; BSR set to: 15
  9808                           ;inc\CANlib.h: 632: return (error);
  9809                           ;	Return value of _CANreceiveMessage is never used
  9810  002050  D000               	goto	i1l404
  9811  002052                     i1l404:
  9812                           
  9813                           ; BSR set to: 15
  9814  002052  0012               	return		;funcret
  9815  002054                     __end_of_CANreceiveMessage:
  9816                           	opt stack 0
  9817                           pclatu	equ	0xFFB
  9818                           pclath	equ	0xFFA
  9819                           tblptru	equ	0xFF8
  9820                           tblptrh	equ	0xFF7
  9821                           tblptrl	equ	0xFF6
  9822                           tablat	equ	0xFF5
  9823                           prodh	equ	0xFF4
  9824                           prodl	equ	0xFF3
  9825                           intcon	equ	0xFF2
  9826                           intcon2	equ	0xFF1
  9827                           postinc0	equ	0xFEE
  9828                           fsr0h	equ	0xFEA
  9829                           fsr0l	equ	0xFE9
  9830                           wreg	equ	0xFE8
  9831                           postdec1	equ	0xFE5
  9832                           fsr1h	equ	0xFE2
  9833                           fsr1l	equ	0xFE1
  9834                           bsr	equ	0xFE0
  9835                           indf2	equ	0xFDF
  9836                           postinc2	equ	0xFDE
  9837                           postdec2	equ	0xFDD
  9838                           fsr2h	equ	0xFDA
  9839                           fsr2l	equ	0xFD9
  9840                           status	equ	0xFD8
  9841                           
  9842 ;; *************** function _CANisRxReady *****************
  9843 ;; Defined at:
  9844 ;;		line 1163 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;		None
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;		None
  9849 ;; Return value:  Size  Location     Type
  9850 ;;                  1    wreg      unsigned char 
  9851 ;; Registers used:
  9852 ;;		wreg, status,2
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/0
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9858 ;;      Params:         0       0       0       0
  9859 ;;      Locals:         1       0       0       0
  9860 ;;      Temps:          0       0       0       0
  9861 ;;      Totals:         1       0       0       0
  9862 ;;Total ram usage:        1 bytes
  9863 ;; Hardware stack levels used:    1
  9864 ;; Hardware stack levels required when called:    2
  9865 ;; This function calls:
  9866 ;;		Nothing
  9867 ;; This function is called by:
  9868 ;;		_ISR_bassa
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           	psect	text26
  9873  002D6E                     __ptext26:
  9874                           	opt stack 0
  9875  002D6E                     _CANisRxReady:
  9876                           	opt stack 24
  9877                           
  9878                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  9879                           
  9880                           ; BSR set to: 15
  9881                           ;incstack = 0
  9882  002D6E  0E01               	movlw	1
  9883  002D70  6E01               	movwf	_CANisRxReady$2825,c
  9884  002D72  BE60               	btfsc	3936,7,c	;volatile
  9885  002D74  D005               	goto	i1l547
  9886  002D76  010F               	movlb	15	; () banked
  9887  002D78  BF50               	btfsc	80,7,b	;volatile
  9888  002D7A  D002               	goto	i1l547
  9889                           
  9890                           ; BSR set to: 15
  9891  002D7C  0E00               	movlw	0
  9892  002D7E  6E01               	movwf	_CANisRxReady$2825,c
  9893  002D80                     i1l547:
  9894  002D80  5001               	movf	_CANisRxReady$2825,w,c
  9895  002D82  D000               	goto	i1l548
  9896  002D84                     i1l548:
  9897  002D84  0012               	return		;funcret
  9898  002D86                     __end_of_CANisRxReady:
  9899                           	opt stack 0
  9900                           pclatu	equ	0xFFB
  9901                           pclath	equ	0xFFA
  9902                           tblptru	equ	0xFF8
  9903                           tblptrh	equ	0xFF7
  9904                           tblptrl	equ	0xFF6
  9905                           tablat	equ	0xFF5
  9906                           prodh	equ	0xFF4
  9907                           prodl	equ	0xFF3
  9908                           intcon	equ	0xFF2
  9909                           intcon2	equ	0xFF1
  9910                           postinc0	equ	0xFEE
  9911                           fsr0h	equ	0xFEA
  9912                           fsr0l	equ	0xFE9
  9913                           wreg	equ	0xFE8
  9914                           postdec1	equ	0xFE5
  9915                           fsr1h	equ	0xFE2
  9916                           fsr1l	equ	0xFE1
  9917                           bsr	equ	0xFE0
  9918                           indf2	equ	0xFDF
  9919                           postinc2	equ	0xFDE
  9920                           postdec2	equ	0xFDD
  9921                           fsr2h	equ	0xFDA
  9922                           fsr2l	equ	0xFD9
  9923                           status	equ	0xFD8
  9924                           
  9925 ;; *************** function _ISR_alta *****************
  9926 ;; Defined at:
  9927 ;;		line 65 in file "sterzo.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;		None
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;		None
  9932 ;; Return value:  Size  Location     Type
  9933 ;;		None               void
  9934 ;; Registers used:
  9935 ;;		cstack
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9941 ;;      Params:         0       0       0       0
  9942 ;;      Locals:         0       0       0       0
  9943 ;;      Temps:          0      14       0       0
  9944 ;;      Totals:         0      14       0       0
  9945 ;;Total ram usage:       14 bytes
  9946 ;; Hardware stack levels used:    1
  9947 ;; Hardware stack levels required when called:    1
  9948 ;; This function calls:
  9949 ;;		_WriteTimer0
  9950 ;; This function is called by:
  9951 ;;		Interrupt level 2
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           	psect	intcode
  9956  000008                     __pintcode:
  9957                           	opt stack 0
  9958  000008                     _ISR_alta:
  9959                           	opt stack 24
  9960                           
  9961                           ;incstack = 0
  9962  000008  CFFA F064          	movff	pclath,??_ISR_alta
  9963  00000C  CFFB F065          	movff	pclatu,??_ISR_alta+1
  9964  000010  CFE9 F066          	movff	fsr0l,??_ISR_alta+2
  9965  000014  ED8F  F014         	call	int_func,f	;refresh shadow registers
  9966                           pclatu	equ	0xFFB
  9967                           pclath	equ	0xFFA
  9968                           tblptru	equ	0xFF8
  9969                           tblptrh	equ	0xFF7
  9970                           tblptrl	equ	0xFF6
  9971                           tablat	equ	0xFF5
  9972                           prodh	equ	0xFF4
  9973                           prodl	equ	0xFF3
  9974                           intcon	equ	0xFF2
  9975                           intcon2	equ	0xFF1
  9976                           postinc0	equ	0xFEE
  9977                           fsr0h	equ	0xFEA
  9978                           fsr0l	equ	0xFE9
  9979                           wreg	equ	0xFE8
  9980                           postdec1	equ	0xFE5
  9981                           fsr1h	equ	0xFE2
  9982                           fsr1l	equ	0xFE1
  9983                           bsr	equ	0xFE0
  9984                           indf2	equ	0xFDF
  9985                           postinc2	equ	0xFDE
  9986                           postdec2	equ	0xFDD
  9987                           fsr2h	equ	0xFDA
  9988                           fsr2l	equ	0xFD9
  9989                           status	equ	0xFD8
  9990                           
  9991                           	psect	intcode_body
  9992  00291E                     __pintcode_body:
  9993                           	opt stack 24
  9994  00291E                     int_func:
  9995                           	opt stack 24
  9996  00291E  0006               	pop		; remove dummy address from shadow register refresh
  9997  002920  CFEA F067          	movff	fsr0h,??_ISR_alta+3
  9998  002924  CFE1 F068          	movff	fsr1l,??_ISR_alta+4
  9999  002928  CFE2 F069          	movff	fsr1h,??_ISR_alta+5
 10000  00292C  CFD9 F06A          	movff	fsr2l,??_ISR_alta+6
 10001  002930  CFDA F06B          	movff	fsr2h,??_ISR_alta+7
 10002  002934  CFF3 F06C          	movff	prodl,??_ISR_alta+8
 10003  002938  CFF4 F06D          	movff	prodh,??_ISR_alta+9
 10004  00293C  CFF6 F06E          	movff	tblptrl,??_ISR_alta+10
 10005  002940  CFF7 F06F          	movff	tblptrh,??_ISR_alta+11
 10006  002944  CFF8 F070          	movff	tblptru,??_ISR_alta+12
 10007  002948  CFF5 F071          	movff	tablat,??_ISR_alta+13
 10008                           
 10009                           ;sterzo.c: 66: if (noChange == 1) {
 10010  00294C  A047               	btfss	_noChange/(0+8),_noChange& (0+7),c
 10011  00294E  D016               	goto	i2l4129
 10012                           
 10013                           ;sterzo.c: 67: PORTCbits.RC0 = ~PORTCbits.RC0;
 10014  002950  7082               	btg	3970,0,c	;volatile
 10015                           
 10016                           ;sterzo.c: 68: T0CONbits.TMR0ON = 0;
 10017  002952  9ED5               	bcf	4053,7,c	;volatile
 10018                           
 10019                           ;sterzo.c: 69: if (PORTCbits.RC0 == 1) {
 10020  002954  A082               	btfss	3970,0,c	;volatile
 10021  002956  D008               	goto	i2l4123
 10022                           
 10023                           ;sterzo.c: 70: WriteTimer0(Ton);
 10024  002958  C027  F060         	movff	_Ton,WriteTimer0@timer0
 10025  00295C  C028  F061         	movff	_Ton+1,WriteTimer0@timer0+1
 10026  002960  ECCD  F016         	call	_WriteTimer0	;wreg free
 10027                           
 10028                           ;sterzo.c: 71: T0CONbits.TMR0ON = 1;
 10029  002964  8ED5               	bsf	4053,7,c	;volatile
 10030  002966  D000               	goto	i2l4123
 10031  002968                     i2l4123:
 10032                           
 10033                           ;sterzo.c: 72: }
 10034                           ;sterzo.c: 73: if (PORTCbits.RC0 == 0) {
 10035  002968  B082               	btfsc	3970,0,c	;volatile
 10036  00296A  D008               	goto	i2l4129
 10037                           
 10038                           ;sterzo.c: 74: WriteTimer0(Toff);
 10039  00296C  C025  F060         	movff	_Toff,WriteTimer0@timer0
 10040  002970  C026  F061         	movff	_Toff+1,WriteTimer0@timer0+1
 10041  002974  ECCD  F016         	call	_WriteTimer0	;wreg free
 10042                           
 10043                           ;sterzo.c: 75: T0CONbits.TMR0ON = 1;
 10044  002978  8ED5               	bsf	4053,7,c	;volatile
 10045  00297A  D000               	goto	i2l4129
 10046  00297C                     i2l4129:
 10047                           
 10048                           ;sterzo.c: 76: }
 10049                           ;sterzo.c: 77: }
 10050                           ;sterzo.c: 78: INTCONbits.TMR0IF = 0;
 10051  00297C  94F2               	bcf	intcon,2,c	;volatile
 10052  00297E  C071  FFF5         	movff	??_ISR_alta+13,tablat
 10053  002982  C070  FFF8         	movff	??_ISR_alta+12,tblptru
 10054  002986  C06F  FFF7         	movff	??_ISR_alta+11,tblptrh
 10055  00298A  C06E  FFF6         	movff	??_ISR_alta+10,tblptrl
 10056  00298E  C06D  FFF4         	movff	??_ISR_alta+9,prodh
 10057  002992  C06C  FFF3         	movff	??_ISR_alta+8,prodl
 10058  002996  C06B  FFDA         	movff	??_ISR_alta+7,fsr2h
 10059  00299A  C06A  FFD9         	movff	??_ISR_alta+6,fsr2l
 10060  00299E  C069  FFE2         	movff	??_ISR_alta+5,fsr1h
 10061  0029A2  C068  FFE1         	movff	??_ISR_alta+4,fsr1l
 10062  0029A6  C067  FFEA         	movff	??_ISR_alta+3,fsr0h
 10063  0029AA  C066  FFE9         	movff	??_ISR_alta+2,fsr0l
 10064  0029AE  C065  FFFB         	movff	??_ISR_alta+1,pclatu
 10065  0029B2  C064  FFFA         	movff	??_ISR_alta,pclath
 10066  0029B6  0011               	retfie		f
 10067  0029B8                     __end_of_ISR_alta:
 10068                           	opt stack 0
 10069                           pclatu	equ	0xFFB
 10070                           pclath	equ	0xFFA
 10071                           tblptru	equ	0xFF8
 10072                           tblptrh	equ	0xFF7
 10073                           tblptrl	equ	0xFF6
 10074                           tablat	equ	0xFF5
 10075                           prodh	equ	0xFF4
 10076                           prodl	equ	0xFF3
 10077                           intcon	equ	0xFF2
 10078                           intcon2	equ	0xFF1
 10079                           postinc0	equ	0xFEE
 10080                           fsr0h	equ	0xFEA
 10081                           fsr0l	equ	0xFE9
 10082                           wreg	equ	0xFE8
 10083                           postdec1	equ	0xFE5
 10084                           fsr1h	equ	0xFE2
 10085                           fsr1l	equ	0xFE1
 10086                           bsr	equ	0xFE0
 10087                           indf2	equ	0xFDF
 10088                           postinc2	equ	0xFDE
 10089                           postdec2	equ	0xFDD
 10090                           fsr2h	equ	0xFDA
 10091                           fsr2l	equ	0xFD9
 10092                           status	equ	0xFD8
 10093                           
 10094 ;; *************** function _WriteTimer0 *****************
 10095 ;; Defined at:
 10096 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;  timer0          2    0[BANK0 ] unsigned int 
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;  timer           2    2[BANK0 ] struct Timers
 10101 ;; Return value:  Size  Location     Type
 10102 ;;		None               void
 10103 ;; Registers used:
 10104 ;;		None
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10110 ;;      Params:         0       2       0       0
 10111 ;;      Locals:         0       2       0       0
 10112 ;;      Temps:          0       0       0       0
 10113 ;;      Totals:         0       4       0       0
 10114 ;;Total ram usage:        4 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; This function calls:
 10117 ;;		Nothing
 10118 ;; This function is called by:
 10119 ;;		_ISR_alta
 10120 ;; This function uses a non-reentrant model
 10121 ;;
 10122                           
 10123                           	psect	text28
 10124  002D9A                     __ptext28:
 10125                           	opt stack 0
 10126  002D9A                     _WriteTimer0:
 10127                           	opt stack 24
 10128                           
 10129                           ;incstack = 0
 10130  002D9A  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
 10131  002D9E  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 10132  002DA2  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 10133  002DA6  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 10134  002DAA  0012               	return		;funcret
 10135  002DAC                     __end_of_WriteTimer0:
 10136                           	opt stack 0
 10137  0000                     pclatu	equ	0xFFB
 10138                           pclath	equ	0xFFA
 10139                           tblptru	equ	0xFF8
 10140                           tblptrh	equ	0xFF7
 10141                           tblptrl	equ	0xFF6
 10142                           tablat	equ	0xFF5
 10143                           prodh	equ	0xFF4
 10144                           prodl	equ	0xFF3
 10145                           intcon	equ	0xFF2
 10146                           intcon2	equ	0xFF1
 10147                           postinc0	equ	0xFEE
 10148                           fsr0h	equ	0xFEA
 10149                           fsr0l	equ	0xFE9
 10150                           wreg	equ	0xFE8
 10151                           postdec1	equ	0xFE5
 10152                           fsr1h	equ	0xFE2
 10153                           fsr1l	equ	0xFE1
 10154                           bsr	equ	0xFE0
 10155                           indf2	equ	0xFDF
 10156                           postinc2	equ	0xFDE
 10157                           postdec2	equ	0xFDD
 10158                           fsr2h	equ	0xFDA
 10159                           fsr2l	equ	0xFD9
 10160                           status	equ	0xFD8
 10161                           pclatu	equ	0xFFB
 10162                           pclath	equ	0xFFA
 10163                           tblptru	equ	0xFF8
 10164                           tblptrh	equ	0xFF7
 10165                           tblptrl	equ	0xFF6
 10166                           tablat	equ	0xFF5
 10167                           prodh	equ	0xFF4
 10168                           prodl	equ	0xFF3
 10169                           intcon	equ	0xFF2
 10170                           intcon2	equ	0xFF1
 10171                           postinc0	equ	0xFEE
 10172                           fsr0h	equ	0xFEA
 10173                           fsr0l	equ	0xFE9
 10174                           wreg	equ	0xFE8
 10175                           postdec1	equ	0xFE5
 10176                           fsr1h	equ	0xFE2
 10177                           fsr1l	equ	0xFE1
 10178                           bsr	equ	0xFE0
 10179                           indf2	equ	0xFDF
 10180                           postinc2	equ	0xFDE
 10181                           postdec2	equ	0xFDD
 10182                           fsr2h	equ	0xFDA
 10183                           fsr2l	equ	0xFD9
 10184                           status	equ	0xFD8
 10185                           
 10186                           	psect	param0
 10187  0000                     pclatu	equ	0xFFB
 10188                           pclath	equ	0xFFA
 10189                           tblptru	equ	0xFF8
 10190                           tblptrh	equ	0xFF7
 10191                           tblptrl	equ	0xFF6
 10192                           tablat	equ	0xFF5
 10193                           prodh	equ	0xFF4
 10194                           prodl	equ	0xFF3
 10195                           intcon	equ	0xFF2
 10196                           intcon2	equ	0xFF1
 10197                           postinc0	equ	0xFEE
 10198                           fsr0h	equ	0xFEA
 10199                           fsr0l	equ	0xFE9
 10200                           wreg	equ	0xFE8
 10201                           postdec1	equ	0xFE5
 10202                           fsr1h	equ	0xFE2
 10203                           fsr1l	equ	0xFE1
 10204                           bsr	equ	0xFE0
 10205                           indf2	equ	0xFDF
 10206                           postinc2	equ	0xFDE
 10207                           postdec2	equ	0xFDD
 10208                           fsr2h	equ	0xFDA
 10209                           fsr2l	equ	0xFD9
 10210                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      71
    BANK0           160     48      67
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->i1_CANsendMessage
    ___lwdiv->i1___wmul

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _delay_ms->___wmul
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _calibrazione->___aldiv
    ___lldiv->___lmul

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->_WriteTimer0

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10342
                                             44 BANK0      4     4      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___lldiv
                             ___lmul
                       _calibrazione
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    2571
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2547
                                             18 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     515
                                             24 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     365
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    6216
                      _CANInitialize
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             18 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             32 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibrazione                                         0     0      0     428
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                             18 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             18 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     322
                                             18 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     290
                                             30 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           20    20      0    3903
                                             16 COMRAM    20    20      0
                       _CANisRxReady
                  _CANreceiveMessage
                            ___lwdiv
                   i1_CANsendMessage
                           i1___wmul
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) i1_CANsendMessage                                    16     8      8    2243
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     290
                                              6 COMRAM     7     3      4
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            14    14      0     253
                                              4 BANK0     14    14      0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     253
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _calibrazione
     _BusyADC
     _ConvertADC
     _ReadADC
     ___aldiv
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenADC
   _delay_ms
     ___wmul
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   ___lwdiv
     i1___wmul (ARG)
   i1_CANsendMessage
   i1___wmul

 _ISR_alta (ROOT)
   _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     30      43       4       41.9%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     24      47       1       74.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8A       9        0.0%
DATA                 0      0      8A      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jun 04 15:28:00 2016

              ??_CANisTXwarningON 0072              __end_of_CANSetFilter 0CE2  
                              _id 0098                                bsr 000FE0  
             ___wmul@multiplicand 0074                       __CFG_BORV$3 000000  
                i1___wmul@product 0005                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                       __CFG_OSC$HS 000000  
                             l500 0B66                               l420 2262  
                             l501 0B72                               l421 2266  
                             l510 0C82                               l430 2372  
                             l422 2272                               l350 0CF8  
                             l511 0C86                               l431 237E  
                             l423 2276                               l351 0CFC  
                             l512 0C92                               l504 0C52  
                             l432 2382                               l424 2282  
                             l344 24C2                               l360 0EBA  
                             l352 0DF6                               l505 0C56  
                             l433 238E                               l425 2286  
                             l345 24CC                               l361 0EC6  
                             l353 0D84                               l506 0C62  
                             l514 0CE0                               l450 06B8  
                             l434 2392                               l426 2292  
                             l418 2252                               l370 1022  
                             l354 0D8E                               l507 0C66  
                             l451 06C4                               l435 239E  
                             l419 2256                               l371 102C  
                             l363 1480                               l355 0D98  
                             l532 2DD4                               l508 0C72  
                             l460 07D2                               l452 06C8  
                             l436 23A2                               l380 1210  
                             l364 11F6                               l356 0DA2  
                             l620 2726                               l509 0C76  
                             l461 07D6                               l453 06D4  
                             l437 23AE                               l429 236E  
                             l381 130A                               l365 0F82  
                             l349 0F6C                               l462 07E2  
                             l454 06D8                               l542 2D4E  
                             l390 13DA                               l382 1298  
                             l374 1140                               l366 0F86  
                             l471 08F2                               l463 07E6  
                             l455 06E4                               l439 23FC  
                             l543 2D54                               l383 12A2  
                             l375 1144                               l367 1080  
                             l359 0EB6                               l640 2DB8  
                             l472 08F6                               l464 07F2  
                             l456 06E8                               l384 12AC  
                             l376 1150                               l368 100E  
                             l529 2DC6                               l473 0902  
                             l465 07F6                               l457 06F4  
                             l449 06B4                               l385 12B6  
                             l369 1018                               l490 0A52  
                             l482 0A12                               l474 0906  
                             l466 0802                               l626 2C94  
                             l483 0A16                               l475 0912  
                             l467 0806                               l555 2CC2  
                             l379 120C                               l484 0A22  
                             l476 0916                               l468 0812  
                             l388 13CA                               l493 0B32  
                             l485 0A26                               l477 0922  
                             l389 13CE                               l670 2D98  
                             l494 0B36                               l486 0A32  
                             l478 0926                               l662 2AB0  
                             l495 0B42                               l487 0A36  
                             l479 0932                               l496 0B46  
                             l488 0A42                               l680 2D06  
                             l497 0B52                               l489 0A46  
                             l498 0B56                               l499 0B62  
                             l749 2856                      __CFG_CPB$OFF 000000  
                    __CFG_CPD$OFF 000000                               _Ton 0027  
            __size_of_WriteTimer0 0012                               _msg 002C  
                             wreg 000FE8                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              l1135 290C  
                            l3111 0C98                              l3015 0980  
                            l3009 0938                              l3201 0DAE  
                            l3043 0A58                              l3221 0EAA  
                            l3143 2454                              l3303 1156  
                            l3049 0AA0                              l3161 24D8  
                            l3083 0BC0                              l3163 251C  
                            l3155 24BA                              l3227 0ECC  
                            l3077 0B78                              l3157 24D0  
                            l3149 2464                              l4071 25D2  
                            l3353 12C2                              l2707 2D60  
                            l3461 27B2                              l3453 2772  
                            l3701 2B34                              l2741 21C6  
                            l2725 210E                              l3373 13BE  
                            l3277 1038                              l3471 2812  
                            l3463 27BC                              l3447 2752  
                            l2823 0278                              l3721 2AF0  
                            l2913 0622                              l2841 0332  
                            l3297 1134                              l3713 2C90  
                            l4089 2710                              l3731 2886  
                            l3459 27A0                              l3475 2826  
                            l3379 13E0                              l3733 2898  
                            l3717 2AC8                              l2941 06FA  
                            l2773 22E0                              l3743 28F8  
                            l3735 28A2                              l3479 2844  
                            l2767 2298                              l3639 2CB4  
                            l2947 0742                              l2859 03EE  
                            l2981 0860                              l2877 04AA  
                            l2975 0818                              l2895 0566  
                            l2799 23B4                              u3100 0838  
                            u3020 071A                              _LATA 000F89  
                            _LATB 000F8A                              _LATC 000F8B  
                            _LATD 000F8C                              u3105 082C  
                            u3025 070E                              _LATE 000F8D  
                            u2505 20E8                              u4210 2DC2  
                            u2530 2140                              u4220 2DD0  
                            u3420 0CB8                              u3340 0B98  
                            u3260 0A78                              u3180 0958  
                            u2700 23D4                              u2620 22B8  
                            u2535 2134                              u3425 0CAC  
                            u3345 0B8C                              u3265 0A6C  
                            u3185 094C                              u2705 23C8  
                            u2625 22AC                              u2545 21A0  
                            u2810 0368                              u2730 01F2  
                            u2490 2088                              u3550 0DCE  
                            u2815 035C                              u2735 01E6  
                            u2495 207C                              u3560 0E1A  
                            u2905 0540                              u2825 03C8  
                            u2745 0252                              u3705 1104  
                            u2930 059C                              u2850 0424  
                            u2770 02AC                              u3810 12E2  
                            u3555 0DC2                              u3820 132E  
                            u3565 0E0E                              u2935 0590  
                            u2855 0418                              u2775 02A0  
                            u3815 12D6                              u3575 0E7A  
                            u3680 1058                              u2945 05FC  
                            u2865 0484                              u2785 030C  
                            u3825 1322                              u2890 04E0  
                            u3690 10A4                              u3835 138E  
                            u3685 104C                              u2895 04D4  
                            u3695 1098                              u3890 2DB4  
                            u4947 2CB6          __end_ofi1_CANsendMessage 1B26  
             __size_of_CANSetMask 03AA                              _Toff 0025  
                            _main 25CC                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 01B4  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                   __end_of_BusyADC 2DBA  
                 __end_of_ReadADC 2D9A                  _CANOperationMode 2D56  
                 __end_of_OpenADC 2AB4        __size_of_CANreceiveMessage 052E  
                 __end_of___aldiv 2858                             ?_main 0001  
                 __end_of___lldiv 291E                             _T0CON 000FD5  
                 __end_of___lwdiv 2BFE                             i1l404 2052  
                           i1l350 1496                             i1l351 149A  
                           i1l360 1616                             i1l352 156C  
                           i1l361 1620                             i1l353 1508  
                           i1l370 174E                             i1l354 1510  
                           i1l610 016E                             i1l371 1756  
                           i1l363 1B24                             i1l355 1518  
                           i1l380 1906                             i1l364 18EE  
                           i1l356 1520                             i1l381 19D8  
                           i1l365 16CC                             i1l349 16B8  
                           i1l390 1A8C                             i1l382 1974  
                           i1l374 1848                             i1l366 16D0  
                           i1l383 197C                             i1l375 184C  
                           i1l367 17A2                             i1l359 1612  
                           i1l384 1984                             i1l376 1856  
                           i1l368 173E                             i1l385 198C  
                           i1l369 1746                             i1l547 2D80  
                           i1l379 1902                             i1l548 2D84  
                           i1l396 1DD2                             i1l388 1A7E  
                           i1l389 1A82                             i1l680 2D2E  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
               _CANisRxReady$2825 0001                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000               ___lmul@multiplicand 0076  
              __size_of_ISR_bassa 019C                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 0084                  __end_of_ISR_alta 29B8  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _timer 009C                        _ConvertADC 2DDA  
                  __pbitbssCOMRAM 0238              __end_of_CANisRxReady 2D86  
                           tablat 000FF5              __end_of_CANisTxReady 2D56  
                __end_ofi1___wmul 2D30                             status 000FD8  
             i1___wmul@multiplier 0001                    __CFG_PBADEN$ON 000000  
                 __initialization 2BFE                      __end_of_main 272C  
                          ??_main 008C                     __activetblptr 000002  
               _CANisTxReady$2823 0072                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                          _ADRESL 000FC3             __size_of_calibrazione 0074  
                 __CFG_BBSIZ$1024 000000                            i1l1198 2BF4  
                          i1l4051 0112                            i1l4043 00BE  
                          i1l4053 0120                            i1l4055 012A  
                          i1l3601 1FC0                            i1l4065 0168  
                          i1l4057 012E                            i1l3613 201A  
                          i1l3605 1FDE                            i1l3615 204E  
                          i1l3551 1D98                            i1l3543 1D58  
                          i1l3535 1D18                            i1l3527 1CA6  
                          i1l3609 1FFC                            i1l3553 1DCC  
                          i1l3801 152A                            i1l3547 1D78  
                          i1l3539 1D38                            i1l3493 1B3A  
                          i1l3821 1608                            i1l3903 185C  
                          i1l3489 1B32                            i1l3753 2BB8  
                          i1l3755 2BC2                            i1l3827 1626  
                          i1l3597 1FA2                            i1l3589 1F32  
                          i1l3765 2BE8                            i1l3757 2BCA  
                          i1l3953 1996                            i2l4123 2968  
                          i1l3973 1A74                            i1l3877 1760  
                          i2l4129 297C                            i1l3897 183E  
                          i1l3979 1A92                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F56                            _RXB0D5 000F6B  
                          _RXB1D1 000F57                            _RXB0D6 000F6C  
                          _RXB1D2 000F58                            _RXB0D7 000F6D  
                          _RXB1D3 000F59                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _TXB1D2 000F38  
                          _TXB0D6 000F4C                            _TXB1D3 000F39  
                          _TXB0D7 000F4D                            _TXB2D0 000F26  
                          _TXB1D4 000F3A                            _TXB2D1 000F27  
                          _TXB1D5 000F3B                            _TXB2D2 000F28  
                          _TXB1D6 000F3C                            _TXB2D3 000F29  
                          _TXB1D7 000F3D                            _TXB2D4 000F2A  
                          _TXB2D5 000F2B                            _TXB2D6 000F2C  
                          _TXB2D7 000F2D                CANsendMessage@data 0076  
              CANsendMessage@tamp 007E                         ??_BusyADC 0072  
                       ??_ReadADC 0074                  __end_of_delay_ms 2CD0  
           __size_of_CANSetFilter 0B2A                         ??_OpenADC 0074  
                  __CFG_XINST$OFF 000000                 __end_of_ISR_bassa 01B4  
                          ___lmul 2AB4                         ??___aldiv 007A  
                          ___wmul 2CD0                    __CFG_STVREN$ON 000000  
                       ??___lldiv 0086                         ??___lwdiv 000B  
                    ??_CANSetMask 0077                            clear_0 2C04  
                          clear_1 2C12          ?_configurazione_iniziale 0001  
                 __CFG_BOREN$BOHW 000000                      _calibrazione 2B2E  
                    __pdataCOMRAM 0043                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                 _currentSteering 0043                      _CANSetFilter 01B8  
                     ?_ConvertADC 0001                        __accesstop 0060  
         __end_of__initialization 2C4A                __end_of_CANSetMask 23FE  
                   ___rparam_used 000000         __size_of_CANisRXwarningON 000E  
                  __pcstackCOMRAM 0001                      __pidataBANK0 2DDE  
                       ?_ISR_alta 0001                         ?i1___wmul 0001  
           CANSetFilter@numBuffer 007B         __size_of_CANisTXwarningON 000E  
           __size_of_CANisRxReady 0018             __size_of_CANisTxReady 0026  
        __end_of_CANOperationMode 2D6E                        __pbssBANK0 0090  
               ?i1_CANsendMessage 0001                        _data_array 003B  
         __size_of_CANsendMessage 07A0                ??i1_CANsendMessage 0009  
                         ?___lmul 0072                           ?___wmul 0072  
                      ??_ISR_alta 0064                __size_of_send_data 0042  
                WriteTimer0@timer 0062                     ??_WriteTimer0 0062  
                  ___lmul@product 007A                      _CANisRxReady 2D6E  
             __size_of_ConvertADC 0004                           _CANSTAT 000F6E  
                    _CANisTxReady 2D30                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
                      ??i1___wmul 0005            __size_of_CANInitialize 01CE  
                       ?_delay_ms 0078                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 0079                           _BusyADC 2DAC  
                         _ReadADC 2D86                         _ADCResult 0090  
                         _OpenADC 2A38                           __Hparam 0000  
                         __Lparam 0000                  delay_ms@value_ms 0078  
                         ___aldiv 272C                   __size_of___lmul 007A  
                         ___lldiv 2858                   __size_of___wmul 0038  
                         ___lwdiv 2BA2              CANInitialize@propSeg 0089  
                         __pcinit 2BFE                           __ramtop 0300  
                         __ptext0 25CC                           __ptext1 2C54  
                         __ptext2 0CE2                           __ptext3 2D30  
                         __ptext4 2C96                           __ptext5 2CD0  
                         __ptext6 29B8                           __ptext7 2A38  
                         __ptext8 23FE                           __ptext9 2054  
                       _T0CONbits 000FD5                        _duty_cycle 0094  
                ___aldiv@dividend 0072               __end_of_WriteTimer0 2DAC  
                      ??_delay_ms 007A            CANreceiveMessage@error 000B  
                  OpenADC@config2 0072                    __pintcode_body 291E  
            end_of_initialization 2C4A                 __end_of_send_data 2C96  
                   __Lmediumconst 0000                           int_func 291E  
                _CANisRXwarningON 2DC8                     _CANInitialize 23FE  
                 ___lldiv@divisor 0082                   ___lldiv@counter 008A  
                ___aldiv@quotient 007C                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE             i1___wmul@multiplicand 0003  
                       _ISR_bassa 0018                         _PORTAbits 000F80  
                  CANSetMask@mask 0072                         _PORTCbits 000F82  
                  CANSetMask@tamp 007C                    CANSetMask@type 0076  
                _CANisTXwarningON 2DBA                      ??_ConvertADC 0072  
__size_of_configurazione_iniziale 0080           _clock_counter_reference 00A0  
                  _CANsendMessage 0CE2                  CANInitialize@BRP 0083  
                CANInitialize@SJW 0082                    ?_CANInitialize 0080  
                  __end_of___lmul 2B2E                        ?_ISR_bassa 0001  
                  __end_of___wmul 2D08                     __pidataCOMRAM 2DD6  
               __size_of_ISR_alta 29B0                       _WriteTimer0 2D9A  
              __end_of_ConvertADC 2DDE               start_initialization 2BFE  
               __size_ofi1___wmul 0028               CANSetMask@numBuffer 007B  
          __end_of_CANsendMessage 1482                 ?_CANOperationMode 0001  
              ??_CANOperationMode 0072        CANInitialize@FilterConfig1 008A  
      CANInitialize@FilterConfig2 008B                          ??___lmul 007A  
                        ??___wmul 0076                       __pdataBANK0 00A2  
                     _calibration 0029                  __CFG_LPT1OSC$OFF 000000  
       __size_ofi1_CANsendMessage 06A4            CANInitialize@phaseSeg1 0080  
          CANInitialize@phaseSeg2 0081                       __pbssCOMRAM 0025  
                   __pcstackBANK0 0060                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72                 __size_of_delay_ms 003A  
                 ?_CANsendMessage 0072                   ??_CANInitialize 0085  
                        ?_BusyADC 0001                          ?_ReadADC 0072  
              CANSetFilter@filter 0072                 OpenADC@portconfig 0073  
                        ?_OpenADC 0072                    _theorySteering 002B  
                ___lwdiv@dividend 0007                         __pintcode 0008  
                        ?___aldiv 0072                          ?___lldiv 007E  
                        ?___lwdiv 0007                       ??_ISR_bassa 0011  
                     __pintcodelo 0018                 WriteTimer0@timer0 0060  
        __end_of_CANisRXwarningON 2DD6                       _COMSTATbits 000F74  
                ___lwdiv@quotient 000B           _configurazione_iniziale 29B8  
                 ___aldiv@divisor 0076             CANreceiveMessage@tamp 000C  
                 ___aldiv@counter 007A                    ___wmul@product 0076  
                   OpenADC@config 0076      _delay_quartz_frequency_value 00A2  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                       _send_data 2C54                          _PIE3bits 000FA3  
        __end_of_CANisTXwarningON 2DC8                          i1u400_20 1BE6  
                        i1u400_26 1BE8                          i1u401_20 1C14  
                        i1u401_26 1C16                          i1u411_20 1E7A  
                        i1u403_25 1C2A                          i1u411_26 1E7C  
                        i1u412_20 1EA4                          i1u420_25 2026  
                        i1u412_26 1EA6                          i1u414_25 1EB8  
                        i1u409_25 1DA4                          i1u460_25 1810  
                        i1u445_20 1548                          i1u445_25 153E  
                        i1u446_20 158E                          i1u446_25 1584  
                        i1u471_20 19B4                          i1u471_25 19AA  
                        i1u447_25 15DA                          i1u472_20 19FA  
                        i1u472_25 19F0                          i1u473_25 1A46  
                        i1u458_20 177E                          i1u458_25 1774  
                        i1u459_20 17C4                          i1u459_25 17BA  
                        i1u484_20 0108                          _PIR1bits 000F9E  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _ISR_alta 0008  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                 ___wmul@multiplier 0072  
                        i1___wmul 2D08                     ?_calibrazione 0001  
                   ?_CANSetFilter 0072                 ___lmul@multiplier 0072  
                     _INTCON2bits 000FF1                         copy_data0 2C3E  
                      _CANCONbits 000F6F                          __Hparam0 0000  
                      ?_send_data 0001                  __size_of_BusyADC 000E  
                __size_of_ReadADC 0014                          __Lparam0 0000  
                    _RXB0SIDLbits 000F62                  __size_of_OpenADC 007C  
                    _RXB1SIDLbits 000F52                  __size_of___aldiv 012C  
                      _CANSetMask 2054                  __size_of___lldiv 00C6  
                i1_CANsendMessage 1482                  __size_of___lwdiv 005C  
                    ?_WriteTimer0 0060                    ??_calibrazione 0080  
       ??_configurazione_iniziale 008C                      _RXF0SIDLbits 000F01  
                        _delay_ms 2C96                   ___lwdiv@divisor 0009  
                    _RXF1SIDLbits 000F05                   ___lwdiv@counter 000D  
           i1CANsendMessage@flags 0008                    ??_CANSetFilter 0077  
                        __ptext10 01B8                          __ptext11 2D56  
                        __ptext20 2DC8                          __ptext12 2B2E  
                        __ptext13 272C                          __ptext22 2D08  
                        __ptext14 2D86                          __ptext23 1482  
                        __ptext15 2DDA                          __ptext24 2BA2  
                        __ptext16 2DAC                          __ptext25 1B26  
                        __ptext17 2AB4                          __ptext26 2D6E  
                        __ptext18 2858                          __ptext19 2DBA  
                        __ptext28 2D9A                      _RXF2SIDLbits 000F09  
                        _noChange 0238                      _RXF3SIDLbits 000F0D  
                    _RXF4SIDLbits 000F11                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 0078                      _remote_frame 0239  
                   __size_of_main 0160                          _limiteDx 0045  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
       __size_of_CANOperationMode 0018                     ?_CANisRxReady 0001  
                   ?_CANisTxReady 0001                       _RXB0DLCbits 000F65  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 1B26                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                  ??_CANsendMessage 007A  
      i1CANsendMessage@dataLength 0007                ?_CANreceiveMessage 0001  
        CANsendMessage@identifier 0072                          intlevel1 0000  
                        intlevel2 0000                  CANSetFilter@tamp 007C  
                CANSetFilter@type 0076               ??_CANreceiveMessage 0003  
            i1CANsendMessage@data 0005                  ___lldiv@dividend 007E  
            i1CANsendMessage@tamp 000D                       _TXB0DLCbits 000F45  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 0082                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 2A38                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20              CANOperationMode@mode 0072  
                  ??_CANisRxReady 0001                       ?_CANSetMask 0072  
                  ??_CANisTxReady 0072         __end_of_CANreceiveMessage 2054  
      i1CANsendMessage@identifier 0001                  ___lldiv@quotient 0086  
               ?_CANisRXwarningON 0001                      ___aldiv@sign 007B  
              ??_CANisRXwarningON 0072              __end_of_calibrazione 2BA2  
           __end_of_CANInitialize 25CC                 ?_CANisTXwarningON 0001  
