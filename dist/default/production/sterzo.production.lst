

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Dec 06 20:19:36 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	param0,global,class=BANK0,space=1,delta=1
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	idataCOMRAM
    50  00289C                     __pidataCOMRAM:
    51                           	opt stack 0
    52                           
    53                           ;initializer for _limiteSx
    54  00289C  00B4               	dw	180
    55                           
    56                           ;initializer for _potenza
    57  00289E  0002               	dw	2
    58                           
    59                           	psect	idataBANK0
    60  0028A4                     __pidataBANK0:
    61                           	opt stack 0
    62                           
    63                           ;initializer for _currentSteering
    64  0028A4  B4                 	db	180
    65                           
    66                           ;initializer for _delay_quartz_frequency_value
    67  0028A5  14                 	db	20
    68                           
    69                           ;initializer for _pastSteering
    70  0028A6  01                 	db	1
    71                           
    72                           	psect	nvBANK0
    73  0000C6                     __pnvBANK0:
    74                           	opt stack 0
    75  0000C6                     _clock_counter_reference:
    76                           	opt stack 0
    77  0000C6                     	ds	2
    78  0000                     _RXB1CON	set	3920
    79  0000                     _RXB1CONbits	set	3920
    80  0000                     _RXB1D0	set	3926
    81  0000                     _RXB1D1	set	3927
    82  0000                     _RXB1D2	set	3928
    83  0000                     _RXB1D3	set	3929
    84  0000                     _RXB1D4	set	3930
    85  0000                     _RXB1D5	set	3931
    86  0000                     _RXB1D6	set	3932
    87  0000                     _RXB1D7	set	3933
    88  0000                     _RXB1DLC	set	3925
    89  0000                     _RXB1DLCbits	set	3925
    90  0000                     _RXB1EIDH	set	3923
    91  0000                     _RXB1EIDL	set	3924
    92  0000                     _RXB1SIDH	set	3921
    93  0000                     _RXB1SIDL	set	3922
    94  0000                     _RXB1SIDLbits	set	3922
    95  0000                     _RXF0EIDH	set	3842
    96  0000                     _RXF0EIDL	set	3843
    97  0000                     _RXF0SIDH	set	3840
    98  0000                     _RXF0SIDL	set	3841
    99  0000                     _RXF0SIDLbits	set	3841
   100  0000                     _RXF1EIDH	set	3846
   101  0000                     _RXF1EIDL	set	3847
   102  0000                     _RXF1SIDH	set	3844
   103  0000                     _RXF1SIDL	set	3845
   104  0000                     _RXF1SIDLbits	set	3845
   105  0000                     _RXF2EIDH	set	3850
   106  0000                     _RXF2EIDL	set	3851
   107  0000                     _RXF2SIDH	set	3848
   108  0000                     _RXF2SIDL	set	3849
   109  0000                     _RXF2SIDLbits	set	3849
   110  0000                     _RXF3EIDH	set	3854
   111  0000                     _RXF3EIDL	set	3855
   112  0000                     _RXF3SIDH	set	3852
   113  0000                     _RXF3SIDL	set	3853
   114  0000                     _RXF3SIDLbits	set	3853
   115  0000                     _RXF4EIDH	set	3858
   116  0000                     _RXF4EIDL	set	3859
   117  0000                     _RXF4SIDH	set	3856
   118  0000                     _RXF4SIDL	set	3857
   119  0000                     _RXF4SIDLbits	set	3857
   120  0000                     _RXF5EIDH	set	3862
   121  0000                     _RXF5EIDL	set	3863
   122  0000                     _RXF5SIDH	set	3860
   123  0000                     _RXF5SIDL	set	3861
   124  0000                     _RXF5SIDLbits	set	3861
   125  0000                     _RXM0EIDH	set	3866
   126  0000                     _RXM0EIDL	set	3867
   127  0000                     _RXM0SIDH	set	3864
   128  0000                     _RXM0SIDL	set	3865
   129  0000                     _RXM0SIDLbits	set	3865
   130  0000                     _RXM1EIDH	set	3870
   131  0000                     _RXM1EIDL	set	3871
   132  0000                     _RXM1SIDH	set	3868
   133  0000                     _RXM1SIDL	set	3869
   134  0000                     _RXM1SIDLbits	set	3869
   135  0000                     _TXB0CONbits	set	3904
   136  0000                     _TXB0D0	set	3910
   137  0000                     _TXB0D1	set	3911
   138  0000                     _TXB0D2	set	3912
   139  0000                     _TXB0D3	set	3913
   140  0000                     _TXB0D4	set	3914
   141  0000                     _TXB0D5	set	3915
   142  0000                     _TXB0D6	set	3916
   143  0000                     _TXB0D7	set	3917
   144  0000                     _TXB0DLC	set	3909
   145  0000                     _TXB0DLCbits	set	3909
   146  0000                     _TXB0EIDH	set	3907
   147  0000                     _TXB0EIDL	set	3908
   148  0000                     _TXB0SIDH	set	3905
   149  0000                     _TXB0SIDL	set	3906
   150  0000                     _TXB0SIDLbits	set	3906
   151  0000                     _TXB1CONbits	set	3888
   152  0000                     _TXB1D0	set	3894
   153  0000                     _TXB1D1	set	3895
   154  0000                     _TXB1D2	set	3896
   155  0000                     _TXB1D3	set	3897
   156  0000                     _TXB1D4	set	3898
   157  0000                     _TXB1D5	set	3899
   158  0000                     _TXB1D6	set	3900
   159  0000                     _TXB1D7	set	3901
   160  0000                     _TXB1DLC	set	3893
   161  0000                     _TXB1DLCbits	set	3893
   162  0000                     _TXB1EIDH	set	3891
   163  0000                     _TXB1EIDL	set	3892
   164  0000                     _TXB1SIDH	set	3889
   165  0000                     _TXB1SIDL	set	3890
   166  0000                     _TXB1SIDLbits	set	3890
   167  0000                     _TXB2CONbits	set	3872
   168  0000                     _TXB2D0	set	3878
   169  0000                     _TXB2D1	set	3879
   170  0000                     _TXB2D2	set	3880
   171  0000                     _TXB2D3	set	3881
   172  0000                     _TXB2D4	set	3882
   173  0000                     _TXB2D5	set	3883
   174  0000                     _TXB2D6	set	3884
   175  0000                     _TXB2D7	set	3885
   176  0000                     _TXB2DLC	set	3877
   177  0000                     _TXB2DLCbits	set	3877
   178  0000                     _TXB2EIDH	set	3875
   179  0000                     _TXB2EIDL	set	3876
   180  0000                     _TXB2SIDH	set	3873
   181  0000                     _TXB2SIDL	set	3874
   182  0000                     _TXB2SIDLbits	set	3874
   183  0000                     _ADCON0	set	4034
   184  0000                     _ADCON0bits	set	4034
   185  0000                     _ADCON1	set	4033
   186  0000                     _ADCON2	set	4032
   187  0000                     _ADRESH	set	4036
   188  0000                     _ADRESL	set	4035
   189  0000                     _BRGCON1	set	3952
   190  0000                     _BRGCON2	set	3953
   191  0000                     _BRGCON2bits	set	3953
   192  0000                     _BRGCON3	set	3954
   193  0000                     _BRGCON3bits	set	3954
   194  0000                     _CANCON	set	3951
   195  0000                     _CANCONbits	set	3951
   196  0000                     _CANSTAT	set	3950
   197  0000                     _COMSTATbits	set	3956
   198  0000                     _INTCON2bits	set	4081
   199  0000                     _INTCONbits	set	4082
   200  0000                     _IPR2bits	set	4002
   201  0000                     _IPR3bits	set	4005
   202  0000                     _LATA	set	3977
   203  0000                     _LATB	set	3978
   204  0000                     _LATC	set	3979
   205  0000                     _LATD	set	3980
   206  0000                     _LATE	set	3981
   207  0000                     _PIE1bits	set	3997
   208  0000                     _PIE2bits	set	4000
   209  0000                     _PIE3bits	set	4003
   210  0000                     _PIR1bits	set	3998
   211  0000                     _PIR2bits	set	4001
   212  0000                     _PIR3bits	set	4004
   213  0000                     _PORTAbits	set	3968
   214  0000                     _PORTC	set	3970
   215  0000                     _PORTCbits	set	3970
   216  0000                     _RCONbits	set	4048
   217  0000                     _RXB0CON	set	3936
   218  0000                     _RXB0CONbits	set	3936
   219  0000                     _RXB0D0	set	3942
   220  0000                     _RXB0D1	set	3943
   221  0000                     _RXB0D2	set	3944
   222  0000                     _RXB0D3	set	3945
   223  0000                     _RXB0D4	set	3946
   224  0000                     _RXB0D5	set	3947
   225  0000                     _RXB0D6	set	3948
   226  0000                     _RXB0D7	set	3949
   227  0000                     _RXB0DLC	set	3941
   228  0000                     _RXB0DLCbits	set	3941
   229  0000                     _RXB0EIDH	set	3939
   230  0000                     _RXB0EIDL	set	3940
   231  0000                     _RXB0SIDH	set	3937
   232  0000                     _RXB0SIDL	set	3938
   233  0000                     _RXB0SIDLbits	set	3938
   234  0000                     _RXERRCNT	set	3957
   235  0000                     _T0CON	set	4053
   236  0000                     _T0CONbits	set	4053
   237  0000                     _T3CON	set	4017
   238  0000                     _TMR0H	set	4055
   239  0000                     _TMR0L	set	4054
   240  0000                     _TMR3H	set	4019
   241  0000                     _TMR3L	set	4018
   242  0000                     _TRISA	set	3986
   243  0000                     _TRISB	set	3987
   244  0000                     _TRISC	set	3988
   245  0000                     _TRISD	set	3989
   246  0000                     _TRISE	set	3990
   247  0000                     _TXERRCNT	set	3958
   248                           
   249                           ; #config settings
   250  0000                     
   251                           	psect	cinit
   252  00267E                     __pcinit:
   253                           	opt stack 0
   254  00267E                     start_initialization:
   255                           	opt stack 0
   256  00267E                     __initialization:
   257                           	opt stack 0
   258                           
   259                           ; Clear objects allocated to BANK0 (46 bytes)
   260  00267E  EE00  F095         	lfsr	0,__pbssBANK0
   261  002682  0E2E               	movlw	46
   262  002684                     clear_0:
   263  002684  6AEE               	clrf	postinc0,c
   264  002686  06E8               	decf	wreg,f,c
   265  002688  E1FD               	bnz	clear_0
   266                           
   267                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   268  00268A  6A44               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   269                           
   270                           ; Clear objects allocated to COMRAM (32 bytes)
   271  00268C  EE00  F001         	lfsr	0,__pbssCOMRAM
   272  002690  0E20               	movlw	32
   273  002692                     clear_1:
   274  002692  6AEE               	clrf	postinc0,c
   275  002694  06E8               	decf	wreg,f,c
   276  002696  E1FD               	bnz	clear_1
   277                           
   278                           ; Initialize objects allocated to BANK0 (3 bytes)
   279                           ; load TBLPTR registers with __pidataBANK0
   280  002698  0EA4               	movlw	low __pidataBANK0
   281  00269A  6EF6               	movwf	tblptrl,c
   282  00269C  0E28               	movlw	high __pidataBANK0
   283  00269E  6EF7               	movwf	tblptrh,c
   284  0026A0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   285  0026A2  6EF8               	movwf	tblptru,c
   286  0026A4  0009               	tblrd		*+	;fetch initializer
   287  0026A6  CFF5 F0C3          	movff	tablat,__pdataBANK0
   288  0026AA  0009               	tblrd		*+	;fetch initializer
   289  0026AC  CFF5 F0C4          	movff	tablat,__pdataBANK0+1
   290  0026B0  0009               	tblrd		*+	;fetch initializer
   291  0026B2  CFF5 F0C5          	movff	tablat,__pdataBANK0+2
   292                           
   293                           ; Initialize objects allocated to COMRAM (4 bytes)
   294                           ; load TBLPTR registers with __pidataCOMRAM
   295  0026B6  0E9C               	movlw	low __pidataCOMRAM
   296  0026B8  6EF6               	movwf	tblptrl,c
   297  0026BA  0E28               	movlw	high __pidataCOMRAM
   298  0026BC  6EF7               	movwf	tblptrh,c
   299  0026BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   300  0026C0  6EF8               	movwf	tblptru,c
   301  0026C2  EE00  F040         	lfsr	0,__pdataCOMRAM
   302  0026C6  EE10 F004          	lfsr	1,4
   303  0026CA                     copy_data0:
   304  0026CA  0009               	tblrd		*+
   305  0026CC  CFF5 FFEE          	movff	tablat,postinc0
   306  0026D0  50E5               	movf	postdec1,w,c
   307  0026D2  50E1               	movf	fsr1l,w,c
   308  0026D4  E1FA               	bnz	copy_data0
   309  0026D6                     end_of_initialization:
   310                           	opt stack 0
   311  0026D6                     __end_of__initialization:
   312                           	opt stack 0
   313  0026D6  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   314  0026D8  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   315  0026DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   316  0026DC  6EF8               	movwf	tblptru,c
   317  0026DE  0100               	movlb	0
   318  0026E0  EF53  F00E         	goto	_main	;jump to C main() function
   319                           tblptru	equ	0xFF8
   320                           tblptrh	equ	0xFF7
   321                           tblptrl	equ	0xFF6
   322                           tablat	equ	0xFF5
   323                           postinc0	equ	0xFEE
   324                           wreg	equ	0xFE8
   325                           postdec1	equ	0xFE5
   326                           fsr1l	equ	0xFE1
   327                           
   328                           	psect	bitbssCOMRAM
   329  000220                     __pbitbssCOMRAM:
   330                           	opt stack 0
   331  000220                     _remote_frame:
   332                           	opt stack 0
   333  000220                     	ds	1
   334                           tblptru	equ	0xFF8
   335                           tblptrh	equ	0xFF7
   336                           tblptrl	equ	0xFF6
   337                           tablat	equ	0xFF5
   338                           postinc0	equ	0xFEE
   339                           wreg	equ	0xFE8
   340                           postdec1	equ	0xFE5
   341                           fsr1l	equ	0xFE1
   342                           
   343                           	psect	bssCOMRAM
   344  000001                     __pbssCOMRAM:
   345                           	opt stack 0
   346  000001                     _counter:
   347                           	opt stack 0
   348  000001                     	ds	4
   349  000005                     _timeCounter:
   350                           	opt stack 0
   351  000005                     	ds	4
   352  000009                     _Toff:
   353                           	opt stack 0
   354  000009                     	ds	2
   355  00000B                     _Ton:
   356                           	opt stack 0
   357  00000B                     	ds	2
   358  00000D                     _calibration:
   359                           	opt stack 0
   360  00000D                     	ds	2
   361  00000F                     _limiteDx:
   362                           	opt stack 0
   363  00000F                     	ds	2
   364  000011                     _theorySteering:
   365                           	opt stack 0
   366  000011                     	ds	1
   367  000012                     _msg:
   368                           	opt stack 0
   369  000012                     	ds	15
   370                           tblptru	equ	0xFF8
   371                           tblptrh	equ	0xFF7
   372                           tblptrl	equ	0xFF6
   373                           tablat	equ	0xFF5
   374                           postinc0	equ	0xFEE
   375                           wreg	equ	0xFE8
   376                           postdec1	equ	0xFE5
   377                           fsr1l	equ	0xFE1
   378                           
   379                           	psect	dataCOMRAM
   380  000040                     __pdataCOMRAM:
   381                           	opt stack 0
   382  000040                     _limiteSx:
   383                           	opt stack 0
   384  000040                     	ds	2
   385  000042                     _potenza:
   386                           	opt stack 0
   387  000042                     	ds	2
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           postinc0	equ	0xFEE
   393                           wreg	equ	0xFE8
   394                           postdec1	equ	0xFE5
   395                           fsr1l	equ	0xFE1
   396                           
   397                           	psect	bssBANK0
   398  000095                     __pbssBANK0:
   399                           	opt stack 0
   400  000095                     _counter_array:
   401                           	opt stack 0
   402  000095                     	ds	8
   403  00009D                     _currentSteering_array:
   404                           	opt stack 0
   405  00009D                     	ds	8
   406  0000A5                     _duty_cycle:
   407                           	opt stack 0
   408  0000A5                     	ds	4
   409  0000A9                     _id:
   410                           	opt stack 0
   411  0000A9                     	ds	4
   412  0000AD                     _previousTimeCounter:
   413                           	opt stack 0
   414  0000AD                     	ds	4
   415  0000B1                     _timer:
   416                           	opt stack 0
   417  0000B1                     	ds	4
   418  0000B5                     _ADCResult:
   419                           	opt stack 0
   420  0000B5                     	ds	2
   421  0000B7                     _correzione:
   422                           	opt stack 0
   423  0000B7                     	ds	2
   424  0000B9                     _errore:
   425                           	opt stack 0
   426  0000B9                     	ds	2
   427  0000BB                     _data_array:
   428                           	opt stack 0
   429  0000BB                     	ds	8
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           postdec1	equ	0xFE5
   437                           fsr1l	equ	0xFE1
   438                           
   439                           	psect	dataBANK0
   440  0000C3                     __pdataBANK0:
   441                           	opt stack 0
   442  0000C3                     _currentSteering:
   443                           	opt stack 0
   444  0000C3                     	ds	1
   445  0000C4                     _delay_quartz_frequency_value:
   446                           	opt stack 0
   447  0000C4                     	ds	1
   448  0000C5                     _pastSteering:
   449                           	opt stack 0
   450  0000C5                     	ds	1
   451                           tblptru	equ	0xFF8
   452                           tblptrh	equ	0xFF7
   453                           tblptrl	equ	0xFF6
   454                           tablat	equ	0xFF5
   455                           postinc0	equ	0xFEE
   456                           wreg	equ	0xFE8
   457                           postdec1	equ	0xFE5
   458                           fsr1l	equ	0xFE1
   459                           
   460                           	psect	cstackBANK0
   461  000060                     __pcstackBANK0:
   462                           	opt stack 0
   463  000060                     WriteTimer0@timer0:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x0
   467  000060                     	ds	2
   468  000062                     WriteTimer0@timer:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x2
   472  000062                     	ds	2
   473  000064                     ??_ISR_alta:
   474                           
   475                           ; 0 bytes @ 0x4
   476  000064                     	ds	15
   477  000073                     ?_abs:
   478                           	opt stack 0
   479  000073                     ?_ReadADC:
   480                           	opt stack 0
   481  000073                     ?___awdiv:
   482                           	opt stack 0
   483  000073                     ?___lwdiv:
   484                           	opt stack 0
   485  000073                     ?___lmul:
   486                           	opt stack 0
   487  000073                     CANOperationMode@mode:
   488                           	opt stack 0
   489  000073                     _CANisTxReady$2918:
   490                           	opt stack 0
   491  000073                     OpenADC@config2:
   492                           	opt stack 0
   493  000073                     abs@a:
   494                           	opt stack 0
   495  000073                     ___awdiv@dividend:
   496                           	opt stack 0
   497  000073                     ___lwdiv@dividend:
   498                           	opt stack 0
   499  000073                     CANsendMessage@identifier:
   500                           	opt stack 0
   501  000073                     CANSetMask@mask:
   502                           	opt stack 0
   503  000073                     CANSetFilter@filter:
   504                           	opt stack 0
   505  000073                     ___lmul@multiplier:
   506                           	opt stack 0
   507                           
   508                           ; 4 bytes @ 0x13
   509  000073                     	ds	1
   510  000074                     OpenADC@portconfig:
   511                           	opt stack 0
   512                           
   513                           ; 1 bytes @ 0x14
   514  000074                     	ds	1
   515  000075                     ??_abs:
   516  000075                     ??_ReadADC:
   517  000075                     ??_OpenADC:
   518  000075                     ___awdiv@divisor:
   519                           	opt stack 0
   520  000075                     ___lwdiv@divisor:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x15
   524  000075                     	ds	2
   525  000077                     CANSetMask@type:
   526                           	opt stack 0
   527  000077                     CANSetFilter@type:
   528                           	opt stack 0
   529  000077                     OpenADC@config:
   530                           	opt stack 0
   531  000077                     ___awdiv@counter:
   532                           	opt stack 0
   533  000077                     CANsendMessage@data:
   534                           	opt stack 0
   535  000077                     ___lwdiv@quotient:
   536                           	opt stack 0
   537  000077                     ___lmul@multiplicand:
   538                           	opt stack 0
   539                           
   540                           ; 4 bytes @ 0x17
   541  000077                     	ds	1
   542  000078                     ??_CANSetMask:
   543  000078                     ??_CANSetFilter:
   544  000078                     ___awdiv@sign:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x18
   548  000078                     	ds	1
   549  000079                     CANsendMessage@dataLength:
   550                           	opt stack 0
   551  000079                     ___lwdiv@counter:
   552                           	opt stack 0
   553  000079                     ___awdiv@quotient:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x19
   557  000079                     	ds	1
   558  00007A                     CANsendMessage@flags:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x1A
   562  00007A                     	ds	1
   563  00007B                     ??_CANsendMessage:
   564  00007B                     ?___wmul:
   565                           	opt stack 0
   566  00007B                     ___wmul@multiplier:
   567                           	opt stack 0
   568  00007B                     ___lmul@product:
   569                           	opt stack 0
   570                           
   571                           ; 4 bytes @ 0x1B
   572  00007B                     	ds	1
   573  00007C                     CANSetMask@numBuffer:
   574                           	opt stack 0
   575  00007C                     CANSetFilter@numBuffer:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x1C
   579  00007C                     	ds	1
   580  00007D                     ___wmul@multiplicand:
   581                           	opt stack 0
   582  00007D                     CANSetMask@tamp:
   583                           	opt stack 0
   584  00007D                     CANSetFilter@tamp:
   585                           	opt stack 0
   586                           
   587                           ; 4 bytes @ 0x1D
   588  00007D                     	ds	2
   589  00007F                     ?___lldiv:
   590                           	opt stack 0
   591  00007F                     ___wmul@product:
   592                           	opt stack 0
   593  00007F                     CANsendMessage@tamp:
   594                           	opt stack 0
   595  00007F                     ___lldiv@dividend:
   596                           	opt stack 0
   597                           
   598                           ; 4 bytes @ 0x1F
   599  00007F                     	ds	2
   600  000081                     CANInitialize@phaseSeg1:
   601                           	opt stack 0
   602  000081                     delay_ms@value_ms:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x21
   606  000081                     	ds	1
   607  000082                     CANInitialize@phaseSeg2:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x22
   611  000082                     	ds	1
   612  000083                     CANInitialize@SJW:
   613                           	opt stack 0
   614  000083                     ___lldiv@divisor:
   615                           	opt stack 0
   616                           
   617                           ; 4 bytes @ 0x23
   618  000083                     	ds	1
   619  000084                     CANInitialize@BRP:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x24
   623  000084                     	ds	1
   624  000085                     CANInitialize@flags:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x25
   628  000085                     	ds	1
   629  000086                     ??_CANInitialize:
   630                           
   631                           ; 0 bytes @ 0x26
   632  000086                     	ds	1
   633  000087                     ___lldiv@quotient:
   634                           	opt stack 0
   635                           
   636                           ; 4 bytes @ 0x27
   637  000087                     	ds	3
   638  00008A                     CANInitialize@propSeg:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x2A
   642  00008A                     	ds	1
   643  00008B                     CANInitialize@FilterConfig1:
   644                           	opt stack 0
   645  00008B                     ___lldiv@counter:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x2B
   649  00008B                     	ds	1
   650  00008C                     CANInitialize@FilterConfig2:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x2C
   654  00008C                     	ds	1
   655  00008D                     ??_main:
   656                           
   657                           ; 0 bytes @ 0x2D
   658  00008D                     	ds	8
   659                           tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           postinc0	equ	0xFEE
   664                           wreg	equ	0xFE8
   665                           postdec1	equ	0xFE5
   666                           fsr1l	equ	0xFE1
   667                           
   668                           	psect	cstackCOMRAM
   669  000021                     __pcstackCOMRAM:
   670                           	opt stack 0
   671  000021                     _CANisRxReady$2920:
   672                           	opt stack 0
   673  000021                     CANreceiveMessage@msg:
   674                           	opt stack 0
   675                           
   676                           ; 2 bytes @ 0x0
   677  000021                     	ds	2
   678  000023                     ??_CANreceiveMessage:
   679                           
   680                           ; 0 bytes @ 0x2
   681  000023                     	ds	8
   682  00002B                     CANreceiveMessage@error:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0xA
   686  00002B                     	ds	1
   687  00002C                     CANreceiveMessage@tamp:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0xB
   691  00002C                     	ds	1
   692  00002D                     ??_ISR_bassa:
   693                           
   694                           ; 0 bytes @ 0xC
   695  00002D                     	ds	19
   696                           tblptru	equ	0xFF8
   697                           tblptrh	equ	0xFF7
   698                           tblptrl	equ	0xFF6
   699                           tablat	equ	0xFF5
   700                           postinc0	equ	0xFEE
   701                           wreg	equ	0xFE8
   702                           postdec1	equ	0xFE5
   703                           fsr1l	equ	0xFE1
   704                           
   705 ;;
   706 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   707 ;;
   708 ;; *************** function _main *****************
   709 ;; Defined at:
   710 ;;		line 110 in file "newmain.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  2  653[None  ] int 
   717 ;; Registers used:
   718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   724 ;;      Params:         0       0       0       0
   725 ;;      Locals:         0       0       0       0
   726 ;;      Temps:          0       8       0       0
   727 ;;      Totals:         0       8       0       0
   728 ;;Total ram usage:        8 bytes
   729 ;; Hardware stack levels required when called:    7
   730 ;; This function calls:
   731 ;;		_CANisRXwarningON
   732 ;;		_CANisTXwarningON
   733 ;;		___awdiv
   734 ;;		___lldiv
   735 ;;		___lmul
   736 ;;		___wmul
   737 ;;		_abs
   738 ;;		_calibrazione
   739 ;;		_configurazione_iniziale
   740 ;;		_delay_ms
   741 ;;		_send_data
   742 ;; This function is called by:
   743 ;;		Startup code after reset
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text0
   748  001CA6                     __ptext0:
   749                           	opt stack 0
   750  001CA6                     _main:
   751                           	opt stack 24
   752                           
   753                           ;newmain.c: 111: configurazione_iniziale();
   754                           
   755                           ;incstack = 0
   756  001CA6  EC02  F011         	call	_configurazione_iniziale	;wreg free
   757                           
   758                           ;newmain.c: 113: PORTC = 0xFF;
   759  001CAA  6882               	setf	3970,c	;volatile
   760                           
   761                           ;newmain.c: 114: delay_ms(100);
   762  001CAC  0E00               	movlw	0
   763  001CAE  0100               	movlb	0	; () banked
   764  001CB0  6F82               	movwf	(delay_ms@value_ms+1)& (0+255),b
   765  001CB2  0E64               	movlw	100
   766  001CB4  6F81               	movwf	delay_ms@value_ms& (0+255),b
   767  001CB6  ECB4  F013         	call	_delay_ms	;wreg free
   768                           
   769                           ;newmain.c: 115: PORTC = 0x00;
   770  001CBA  0E00               	movlw	0
   771  001CBC  6E82               	movwf	3970,c	;volatile
   772                           
   773                           ;newmain.c: 116: delay_ms(100);
   774  001CBE  0E00               	movlw	0
   775  001CC0  0100               	movlb	0	; () banked
   776  001CC2  6F82               	movwf	(delay_ms@value_ms+1)& (0+255),b
   777  001CC4  0E64               	movlw	100
   778  001CC6  6F81               	movwf	delay_ms@value_ms& (0+255),b
   779  001CC8  ECB4  F013         	call	_delay_ms	;wreg free
   780                           
   781                           ;newmain.c: 118: TMR0H = 0xdd;
   782  001CCC  0EDD               	movlw	221
   783  001CCE  6ED7               	movwf	4055,c	;volatile
   784                           
   785                           ;newmain.c: 119: TMR0L = 0xa0;
   786  001CD0  0EA0               	movlw	160
   787  001CD2  6ED6               	movwf	4054,c	;volatile
   788                           
   789                           ;newmain.c: 120: T0CONbits.TMR0ON = 1;
   790  001CD4  8ED5               	bsf	4053,7,c	;volatile
   791                           
   792                           ;newmain.c: 121: Toff = 0x4588;
   793  001CD6  0E45               	movlw	69
   794  001CD8  6E0A               	movwf	_Toff+1,c
   795  001CDA  0E88               	movlw	136
   796  001CDC  6E09               	movwf	_Toff,c
   797  001CDE                     l3748:
   798                           
   799                           ;newmain.c: 123: calibrazione();
   800  001CDE  EC72  F013         	call	_calibrazione	;wreg free
   801                           
   802                           ;newmain.c: 124: if (timeCounter - previousTimeCounter > 2) {
   803  001CE2  C0AD  F08D         	movff	_previousTimeCounter,??_main
   804  001CE6  C0AE  F08E         	movff	_previousTimeCounter+1,??_main+1
   805  001CEA  C0AF  F08F         	movff	_previousTimeCounter+2,??_main+2
   806  001CEE  C0B0  F090         	movff	_previousTimeCounter+3,??_main+3
   807  001CF2  0100               	movlb	0	; () banked
   808  001CF4  1F8D               	comf	??_main& (0+255),f,b
   809  001CF6  1F8E               	comf	(??_main+1)& (0+255),f,b
   810  001CF8  1F8F               	comf	(??_main+2)& (0+255),f,b
   811  001CFA  1F90               	comf	(??_main+3)& (0+255),f,b
   812  001CFC  2B8D               	incf	??_main& (0+255),f,b
   813  001CFE  0E00               	movlw	0
   814  001D00  238E               	addwfc	(??_main+1)& (0+255),f,b
   815  001D02  238F               	addwfc	(??_main+2)& (0+255),f,b
   816  001D04  2390               	addwfc	(??_main+3)& (0+255),f,b
   817  001D06  5005               	movf	_timeCounter,w,c
   818  001D08  0100               	movlb	0	; () banked
   819  001D0A  258D               	addwf	??_main& (0+255),w,b
   820  001D0C  0100               	movlb	0	; () banked
   821  001D0E  6F91               	movwf	(??_main+4)& (0+255),b
   822  001D10  5006               	movf	_timeCounter+1,w,c
   823  001D12  0100               	movlb	0	; () banked
   824  001D14  218E               	addwfc	(??_main+1)& (0+255),w,b
   825  001D16  0100               	movlb	0	; () banked
   826  001D18  6F92               	movwf	(??_main+5)& (0+255),b
   827  001D1A  5007               	movf	_timeCounter+2,w,c
   828  001D1C  0100               	movlb	0	; () banked
   829  001D1E  218F               	addwfc	(??_main+2)& (0+255),w,b
   830  001D20  0100               	movlb	0	; () banked
   831  001D22  6F93               	movwf	(??_main+6)& (0+255),b
   832  001D24  5008               	movf	_timeCounter+3,w,c
   833  001D26  0100               	movlb	0	; () banked
   834  001D28  2190               	addwfc	(??_main+3)& (0+255),w,b
   835  001D2A  0100               	movlb	0	; () banked
   836  001D2C  6F94               	movwf	(??_main+7)& (0+255),b
   837  001D2E  0100               	movlb	0	; () banked
   838  001D30  5194               	movf	(??_main+7)& (0+255),w,b
   839  001D32  0100               	movlb	0	; () banked
   840  001D34  1193               	iorwf	(??_main+6)& (0+255),w,b
   841  001D36  0100               	movlb	0	; () banked
   842  001D38  1192               	iorwf	(??_main+5)& (0+255),w,b
   843  001D3A  E105               	bnz	u4230
   844  001D3C  0E03               	movlw	3
   845  001D3E  0100               	movlb	0	; () banked
   846  001D40  5D91               	subwf	(??_main+4)& (0+255),w,b
   847  001D42  A0D8               	btfss	status,0,c
   848  001D44  D0E7               	goto	l3772
   849  001D46                     u4230:
   850                           
   851                           ; BSR set to: 0
   852                           ;newmain.c: 125: errore = pastSteering - currentSteering;
   853  001D46  0100               	movlb	0	; () banked
   854  001D48  51C3               	movf	_currentSteering& (0+255),w,b
   855  001D4A  0100               	movlb	0	; () banked
   856  001D4C  6F8D               	movwf	??_main& (0+255),b
   857  001D4E  6B8E               	clrf	(??_main+1)& (0+255),b
   858  001D50  0100               	movlb	0	; () banked
   859  001D52  1F8D               	comf	??_main& (0+255),f,b
   860  001D54  1F8E               	comf	(??_main+1)& (0+255),f,b
   861  001D56  4B8D               	infsnz	??_main& (0+255),f,b
   862  001D58  2B8E               	incf	(??_main+1)& (0+255),f,b
   863  001D5A  0100               	movlb	0	; () banked
   864  001D5C  51C5               	movf	_pastSteering& (0+255),w,b
   865  001D5E  0100               	movlb	0	; () banked
   866  001D60  258D               	addwf	??_main& (0+255),w,b
   867  001D62  0100               	movlb	0	; () banked
   868  001D64  6FB9               	movwf	_errore& (0+255),b
   869  001D66  0E00               	movlw	0
   870  001D68  0100               	movlb	0	; () banked
   871  001D6A  218E               	addwfc	(??_main+1)& (0+255),w,b
   872  001D6C  0100               	movlb	0	; () banked
   873  001D6E  6FBA               	movwf	(_errore+1)& (0+255),b
   874                           
   875                           ; BSR set to: 0
   876                           ;newmain.c: 126: errore = abs(errore);
   877  001D70  C0B9  F073         	movff	_errore,abs@a
   878  001D74  C0BA  F074         	movff	_errore+1,abs@a+1
   879  001D78  ECEC  F013         	call	_abs	;wreg free
   880  001D7C  C073  F0B9         	movff	?_abs,_errore
   881  001D80  C074  F0BA         	movff	?_abs+1,_errore+1
   882                           
   883                           ;newmain.c: 127: correzione = ((errore / 15)*(errore / 15));
   884  001D84  0E00               	movlw	0
   885  001D86  0100               	movlb	0	; () banked
   886  001D88  6F76               	movwf	(___awdiv@divisor+1)& (0+255),b
   887  001D8A  0E0F               	movlw	15
   888  001D8C  6F75               	movwf	___awdiv@divisor& (0+255),b
   889  001D8E  C0B9  F073         	movff	_errore,___awdiv@dividend
   890  001D92  C0BA  F074         	movff	_errore+1,___awdiv@dividend+1
   891  001D96  EC74  F011         	call	___awdiv	;wreg free
   892  001D9A  C073  F07B         	movff	?___awdiv,___wmul@multiplier
   893  001D9E  C074  F07C         	movff	?___awdiv+1,___wmul@multiplier+1
   894  001DA2  0E00               	movlw	0
   895  001DA4  0100               	movlb	0	; () banked
   896  001DA6  6F76               	movwf	(___awdiv@divisor+1)& (0+255),b
   897  001DA8  0E0F               	movlw	15
   898  001DAA  6F75               	movwf	___awdiv@divisor& (0+255),b
   899  001DAC  C0B9  F073         	movff	_errore,___awdiv@dividend
   900  001DB0  C0BA  F074         	movff	_errore+1,___awdiv@dividend+1
   901  001DB4  EC74  F011         	call	___awdiv	;wreg free
   902  001DB8  C073  F07D         	movff	?___awdiv,___wmul@multiplicand
   903  001DBC  C074  F07E         	movff	?___awdiv+1,___wmul@multiplicand+1
   904  001DC0  ECD1  F013         	call	___wmul	;wreg free
   905  001DC4  C07B  F0B7         	movff	?___wmul,_correzione
   906  001DC8  C07C  F0B8         	movff	?___wmul+1,_correzione+1
   907                           
   908                           ;newmain.c: 128: if (correzione < 1) {
   909  001DCC  0100               	movlb	0	; () banked
   910  001DCE  BFB8               	btfsc	(_correzione+1)& (0+255),7,b
   911  001DD0  D007               	goto	l3760
   912  001DD2  0100               	movlb	0	; () banked
   913  001DD4  51B8               	movf	(_correzione+1)& (0+255),w,b
   914  001DD6  E10B               	bnz	l3762
   915  001DD8  0100               	movlb	0	; () banked
   916  001DDA  05B7               	decf	_correzione& (0+255),w,b
   917  001DDC  B0D8               	btfsc	status,0,c
   918  001DDE  D007               	goto	l3762
   919  001DE0                     l3760:
   920                           
   921                           ; BSR set to: 0
   922                           ;newmain.c: 129: duty_cycle = currentSteering;
   923  001DE0  0100               	movlb	0	; () banked
   924  001DE2  51C3               	movf	_currentSteering& (0+255),w,b
   925  001DE4  0100               	movlb	0	; () banked
   926  001DE6  6FA5               	movwf	_duty_cycle& (0+255),b
   927  001DE8  6BA6               	clrf	(_duty_cycle+1)& (0+255),b
   928  001DEA  6BA7               	clrf	(_duty_cycle+2)& (0+255),b
   929  001DEC  6BA8               	clrf	(_duty_cycle+3)& (0+255),b
   930  001DEE                     l3762:
   931                           
   932                           ; BSR set to: 0
   933                           ;newmain.c: 130: }
   934                           ;newmain.c: 131: if ((pastSteering - currentSteering) < 0) {
   935  001DEE  0100               	movlb	0	; () banked
   936  001DF0  51C3               	movf	_currentSteering& (0+255),w,b
   937  001DF2  0100               	movlb	0	; () banked
   938  001DF4  6F8D               	movwf	??_main& (0+255),b
   939  001DF6  6B8E               	clrf	(??_main+1)& (0+255),b
   940  001DF8  0100               	movlb	0	; () banked
   941  001DFA  1F8D               	comf	??_main& (0+255),f,b
   942  001DFC  1F8E               	comf	(??_main+1)& (0+255),f,b
   943  001DFE  4B8D               	infsnz	??_main& (0+255),f,b
   944  001E00  2B8E               	incf	(??_main+1)& (0+255),f,b
   945  001E02  0100               	movlb	0	; () banked
   946  001E04  51C5               	movf	_pastSteering& (0+255),w,b
   947  001E06  0100               	movlb	0	; () banked
   948  001E08  6F8F               	movwf	(??_main+2)& (0+255),b
   949  001E0A  6B90               	clrf	(??_main+3)& (0+255),b
   950  001E0C  0100               	movlb	0	; () banked
   951  001E0E  518D               	movf	??_main& (0+255),w,b
   952  001E10  0100               	movlb	0	; () banked
   953  001E12  278F               	addwf	(??_main+2)& (0+255),f,b
   954  001E14  0100               	movlb	0	; () banked
   955  001E16  518E               	movf	(??_main+1)& (0+255),w,b
   956  001E18  0100               	movlb	0	; () banked
   957  001E1A  2390               	addwfc	(??_main+3)& (0+255),f,b
   958  001E1C  0100               	movlb	0	; () banked
   959  001E1E  AF90               	btfss	(??_main+3)& (0+255),7,b
   960  001E20  D022               	goto	l657
   961                           
   962                           ; BSR set to: 0
   963                           ;newmain.c: 132: duty_cycle = duty_cycle + correzione;
   964  001E22  C0B7  F08D         	movff	_correzione,??_main
   965  001E26  C0B8  F08E         	movff	_correzione+1,??_main+1
   966  001E2A  0E00               	movlw	0
   967  001E2C  0100               	movlb	0	; () banked
   968  001E2E  BF8E               	btfsc	(??_main+1)& (0+255),7,b
   969  001E30  0EFF               	movlw	255
   970  001E32  6F8F               	movwf	(??_main+2)& (0+255),b
   971  001E34  6F90               	movwf	(??_main+3)& (0+255),b
   972  001E36  0100               	movlb	0	; () banked
   973  001E38  51A5               	movf	_duty_cycle& (0+255),w,b
   974  001E3A  0100               	movlb	0	; () banked
   975  001E3C  258D               	addwf	??_main& (0+255),w,b
   976  001E3E  0100               	movlb	0	; () banked
   977  001E40  6FA5               	movwf	_duty_cycle& (0+255),b
   978  001E42  0100               	movlb	0	; () banked
   979  001E44  51A6               	movf	(_duty_cycle+1)& (0+255),w,b
   980  001E46  0100               	movlb	0	; () banked
   981  001E48  218E               	addwfc	(??_main+1)& (0+255),w,b
   982  001E4A  0100               	movlb	0	; () banked
   983  001E4C  6FA6               	movwf	(_duty_cycle+1)& (0+255),b
   984  001E4E  0100               	movlb	0	; () banked
   985  001E50  51A7               	movf	(_duty_cycle+2)& (0+255),w,b
   986  001E52  0100               	movlb	0	; () banked
   987  001E54  218F               	addwfc	(??_main+2)& (0+255),w,b
   988  001E56  0100               	movlb	0	; () banked
   989  001E58  6FA7               	movwf	(_duty_cycle+2)& (0+255),b
   990  001E5A  0100               	movlb	0	; () banked
   991  001E5C  51A8               	movf	(_duty_cycle+3)& (0+255),w,b
   992  001E5E  0100               	movlb	0	; () banked
   993  001E60  2190               	addwfc	(??_main+3)& (0+255),w,b
   994  001E62  0100               	movlb	0	; () banked
   995  001E64  6FA8               	movwf	(_duty_cycle+3)& (0+255),b
   996  001E66                     l657:
   997                           
   998                           ; BSR set to: 0
   999                           ;newmain.c: 133: }
  1000                           ;newmain.c: 134: if ((pastSteering - currentSteering) > 0) {
  1001  001E66  0100               	movlb	0	; () banked
  1002  001E68  51C3               	movf	_currentSteering& (0+255),w,b
  1003  001E6A  0100               	movlb	0	; () banked
  1004  001E6C  6F8D               	movwf	??_main& (0+255),b
  1005  001E6E  6B8E               	clrf	(??_main+1)& (0+255),b
  1006  001E70  0100               	movlb	0	; () banked
  1007  001E72  1F8D               	comf	??_main& (0+255),f,b
  1008  001E74  1F8E               	comf	(??_main+1)& (0+255),f,b
  1009  001E76  4B8D               	infsnz	??_main& (0+255),f,b
  1010  001E78  2B8E               	incf	(??_main+1)& (0+255),f,b
  1011  001E7A  0100               	movlb	0	; () banked
  1012  001E7C  51C5               	movf	_pastSteering& (0+255),w,b
  1013  001E7E  0100               	movlb	0	; () banked
  1014  001E80  6F8F               	movwf	(??_main+2)& (0+255),b
  1015  001E82  6B90               	clrf	(??_main+3)& (0+255),b
  1016  001E84  0100               	movlb	0	; () banked
  1017  001E86  518D               	movf	??_main& (0+255),w,b
  1018  001E88  0100               	movlb	0	; () banked
  1019  001E8A  278F               	addwf	(??_main+2)& (0+255),f,b
  1020  001E8C  0100               	movlb	0	; () banked
  1021  001E8E  518E               	movf	(??_main+1)& (0+255),w,b
  1022  001E90  0100               	movlb	0	; () banked
  1023  001E92  2390               	addwfc	(??_main+3)& (0+255),f,b
  1024  001E94  0100               	movlb	0	; () banked
  1025  001E96  BF90               	btfsc	(??_main+3)& (0+255),7,b
  1026  001E98  D033               	goto	l3768
  1027  001E9A  0100               	movlb	0	; () banked
  1028  001E9C  5190               	movf	(??_main+3)& (0+255),w,b
  1029  001E9E  E104               	bnz	u4260
  1030  001EA0  0100               	movlb	0	; () banked
  1031  001EA2  058F               	decf	(??_main+2)& (0+255),w,b
  1032  001EA4  A0D8               	btfss	status,0,c
  1033  001EA6  D02C               	goto	l3768
  1034  001EA8                     u4260:
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;newmain.c: 135: duty_cycle = duty_cycle - correzione;
  1038  001EA8  C0B7  F08D         	movff	_correzione,??_main
  1039  001EAC  C0B8  F08E         	movff	_correzione+1,??_main+1
  1040  001EB0  0E00               	movlw	0
  1041  001EB2  0100               	movlb	0	; () banked
  1042  001EB4  BF8E               	btfsc	(??_main+1)& (0+255),7,b
  1043  001EB6  0EFF               	movlw	255
  1044  001EB8  6F8F               	movwf	(??_main+2)& (0+255),b
  1045  001EBA  6F90               	movwf	(??_main+3)& (0+255),b
  1046  001EBC  0100               	movlb	0	; () banked
  1047  001EBE  1F8D               	comf	??_main& (0+255),f,b
  1048  001EC0  1F8E               	comf	(??_main+1)& (0+255),f,b
  1049  001EC2  1F8F               	comf	(??_main+2)& (0+255),f,b
  1050  001EC4  1F90               	comf	(??_main+3)& (0+255),f,b
  1051  001EC6  2B8D               	incf	??_main& (0+255),f,b
  1052  001EC8  0E00               	movlw	0
  1053  001ECA  238E               	addwfc	(??_main+1)& (0+255),f,b
  1054  001ECC  238F               	addwfc	(??_main+2)& (0+255),f,b
  1055  001ECE  2390               	addwfc	(??_main+3)& (0+255),f,b
  1056  001ED0  0100               	movlb	0	; () banked
  1057  001ED2  51A5               	movf	_duty_cycle& (0+255),w,b
  1058  001ED4  0100               	movlb	0	; () banked
  1059  001ED6  258D               	addwf	??_main& (0+255),w,b
  1060  001ED8  0100               	movlb	0	; () banked
  1061  001EDA  6FA5               	movwf	_duty_cycle& (0+255),b
  1062  001EDC  0100               	movlb	0	; () banked
  1063  001EDE  51A6               	movf	(_duty_cycle+1)& (0+255),w,b
  1064  001EE0  0100               	movlb	0	; () banked
  1065  001EE2  218E               	addwfc	(??_main+1)& (0+255),w,b
  1066  001EE4  0100               	movlb	0	; () banked
  1067  001EE6  6FA6               	movwf	(_duty_cycle+1)& (0+255),b
  1068  001EE8  0100               	movlb	0	; () banked
  1069  001EEA  51A7               	movf	(_duty_cycle+2)& (0+255),w,b
  1070  001EEC  0100               	movlb	0	; () banked
  1071  001EEE  218F               	addwfc	(??_main+2)& (0+255),w,b
  1072  001EF0  0100               	movlb	0	; () banked
  1073  001EF2  6FA7               	movwf	(_duty_cycle+2)& (0+255),b
  1074  001EF4  0100               	movlb	0	; () banked
  1075  001EF6  51A8               	movf	(_duty_cycle+3)& (0+255),w,b
  1076  001EF8  0100               	movlb	0	; () banked
  1077  001EFA  2190               	addwfc	(??_main+3)& (0+255),w,b
  1078  001EFC  0100               	movlb	0	; () banked
  1079  001EFE  6FA8               	movwf	(_duty_cycle+3)& (0+255),b
  1080  001F00                     l3768:
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;newmain.c: 136: }
  1084                           ;newmain.c: 137: pastSteering = duty_cycle;
  1085  001F00  C0A5  F0C5         	movff	_duty_cycle,_pastSteering
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;newmain.c: 138: previousTimeCounter = timeCounter;
  1089  001F04  C005  F0AD         	movff	_timeCounter,_previousTimeCounter
  1090  001F08  C006  F0AE         	movff	_timeCounter+1,_previousTimeCounter+1
  1091  001F0C  C007  F0AF         	movff	_timeCounter+2,_previousTimeCounter+2
  1092  001F10  C008  F0B0         	movff	_timeCounter+3,_previousTimeCounter+3
  1093  001F14                     l3772:
  1094                           
  1095                           ; BSR set to: 0
  1096                           ;newmain.c: 139: }
  1097                           ;newmain.c: 140: if (PORTCbits.RC0 == 0) {
  1098  001F14  B082               	btfsc	3970,0,c	;volatile
  1099  001F16  D084               	goto	l3782
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;newmain.c: 141: timer = (((duty_cycle * 700) / 90) + 800) *2;
  1103  001F18  C0A5  F073         	movff	_duty_cycle,___lmul@multiplier
  1104  001F1C  C0A6  F074         	movff	_duty_cycle+1,___lmul@multiplier+1
  1105  001F20  C0A7  F075         	movff	_duty_cycle+2,___lmul@multiplier+2
  1106  001F24  C0A8  F076         	movff	_duty_cycle+3,___lmul@multiplier+3
  1107  001F28  0EBC               	movlw	188
  1108  001F2A  0100               	movlb	0	; () banked
  1109  001F2C  6F77               	movwf	___lmul@multiplicand& (0+255),b
  1110  001F2E  0E02               	movlw	2
  1111  001F30  6F78               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1112  001F32  0E00               	movlw	0
  1113  001F34  6F79               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1114  001F36  0E00               	movlw	0
  1115  001F38  6F7A               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1116  001F3A  EC04  F013         	call	___lmul	;wreg free
  1117  001F3E  C073  F07F         	movff	?___lmul,___lldiv@dividend
  1118  001F42  C074  F080         	movff	?___lmul+1,___lldiv@dividend+1
  1119  001F46  C075  F081         	movff	?___lmul+2,___lldiv@dividend+2
  1120  001F4A  C076  F082         	movff	?___lmul+3,___lldiv@dividend+3
  1121  001F4E  0E5A               	movlw	90
  1122  001F50  0100               	movlb	0	; () banked
  1123  001F52  6F83               	movwf	___lldiv@divisor& (0+255),b
  1124  001F54  0E00               	movlw	0
  1125  001F56  6F84               	movwf	(___lldiv@divisor+1)& (0+255),b
  1126  001F58  0E00               	movlw	0
  1127  001F5A  6F85               	movwf	(___lldiv@divisor+2)& (0+255),b
  1128  001F5C  0E00               	movlw	0
  1129  001F5E  6F86               	movwf	(___lldiv@divisor+3)& (0+255),b
  1130  001F60  ECD3  F011         	call	___lldiv	;wreg free
  1131  001F64  90D8               	bcf	status,0,c
  1132  001F66  0100               	movlb	0	; () banked
  1133  001F68  357F               	rlcf	?___lldiv& (0+255),w,b
  1134  001F6A  0100               	movlb	0	; () banked
  1135  001F6C  6F8D               	movwf	??_main& (0+255),b
  1136  001F6E  0100               	movlb	0	; () banked
  1137  001F70  3580               	rlcf	(?___lldiv+1)& (0+255),w,b
  1138  001F72  0100               	movlb	0	; () banked
  1139  001F74  6F8E               	movwf	(??_main+1)& (0+255),b
  1140  001F76  0100               	movlb	0	; () banked
  1141  001F78  3581               	rlcf	(?___lldiv+2)& (0+255),w,b
  1142  001F7A  0100               	movlb	0	; () banked
  1143  001F7C  6F8F               	movwf	(??_main+2)& (0+255),b
  1144  001F7E  0100               	movlb	0	; () banked
  1145  001F80  3582               	rlcf	(?___lldiv+3)& (0+255),w,b
  1146  001F82  0100               	movlb	0	; () banked
  1147  001F84  6F90               	movwf	(??_main+3)& (0+255),b
  1148  001F86  0E40               	movlw	64
  1149  001F88  0100               	movlb	0	; () banked
  1150  001F8A  258D               	addwf	??_main& (0+255),w,b
  1151  001F8C  0100               	movlb	0	; () banked
  1152  001F8E  6FB1               	movwf	_timer& (0+255),b
  1153  001F90  0E06               	movlw	6
  1154  001F92  0100               	movlb	0	; () banked
  1155  001F94  218E               	addwfc	(??_main+1)& (0+255),w,b
  1156  001F96  0100               	movlb	0	; () banked
  1157  001F98  6FB2               	movwf	(_timer+1)& (0+255),b
  1158  001F9A  0E00               	movlw	0
  1159  001F9C  0100               	movlb	0	; () banked
  1160  001F9E  218F               	addwfc	(??_main+2)& (0+255),w,b
  1161  001FA0  0100               	movlb	0	; () banked
  1162  001FA2  6FB3               	movwf	(_timer+2)& (0+255),b
  1163  001FA4  0E00               	movlw	0
  1164  001FA6  0100               	movlb	0	; () banked
  1165  001FA8  2190               	addwfc	(??_main+3)& (0+255),w,b
  1166  001FAA  0100               	movlb	0	; () banked
  1167  001FAC  6FB4               	movwf	(_timer+3)& (0+255),b
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;newmain.c: 142: Ton = 65536 - timer;
  1171  001FAE  C0B1  F08D         	movff	_timer,??_main
  1172  001FB2  C0B2  F08E         	movff	_timer+1,??_main+1
  1173  001FB6  0100               	movlb	0	; () banked
  1174  001FB8  1F8D               	comf	??_main& (0+255),f,b
  1175  001FBA  1F8E               	comf	(??_main+1)& (0+255),f,b
  1176  001FBC  4B8D               	infsnz	??_main& (0+255),f,b
  1177  001FBE  2B8E               	incf	(??_main+1)& (0+255),f,b
  1178  001FC0  C08D  F00B         	movff	??_main,_Ton
  1179  001FC4  C08E  F00C         	movff	??_main+1,_Ton+1
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;newmain.c: 143: Toff = 20000 - (timer / 2);
  1183  001FC8  C0B1  F08D         	movff	_timer,??_main
  1184  001FCC  C0B2  F08E         	movff	_timer+1,??_main+1
  1185  001FD0  C0B3  F08F         	movff	_timer+2,??_main+2
  1186  001FD4  C0B4  F090         	movff	_timer+3,??_main+3
  1187  001FD8  0100               	movlb	0	; () banked
  1188  001FDA  90D8               	bcf	status,0,c
  1189  001FDC  3390               	rrcf	(??_main+3)& (0+255),f,b
  1190  001FDE  338F               	rrcf	(??_main+2)& (0+255),f,b
  1191  001FE0  338E               	rrcf	(??_main+1)& (0+255),f,b
  1192  001FE2  338D               	rrcf	??_main& (0+255),f,b
  1193  001FE4  0100               	movlb	0	; () banked
  1194  001FE6  1F8D               	comf	??_main& (0+255),f,b
  1195  001FE8  1F8E               	comf	(??_main+1)& (0+255),f,b
  1196  001FEA  4B8D               	infsnz	??_main& (0+255),f,b
  1197  001FEC  2B8E               	incf	(??_main+1)& (0+255),f,b
  1198  001FEE  0E20               	movlw	32
  1199  001FF0  0100               	movlb	0	; () banked
  1200  001FF2  258D               	addwf	??_main& (0+255),w,b
  1201  001FF4  6E09               	movwf	_Toff,c
  1202  001FF6  0E4E               	movlw	78
  1203  001FF8  0100               	movlb	0	; () banked
  1204  001FFA  218E               	addwfc	(??_main+1)& (0+255),w,b
  1205  001FFC  6E0A               	movwf	_Toff+1,c
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;newmain.c: 144: Toff = (65536 - (Toff * 2));
  1209  001FFE  C009  F08D         	movff	_Toff,??_main
  1210  002002  C00A  F08E         	movff	_Toff+1,??_main+1
  1211  002006  90D8               	bcf	status,0,c
  1212  002008  0100               	movlb	0	; () banked
  1213  00200A  378D               	rlcf	??_main& (0+255),f,b
  1214  00200C  378E               	rlcf	(??_main+1)& (0+255),f,b
  1215  00200E  0100               	movlb	0	; () banked
  1216  002010  1F8D               	comf	??_main& (0+255),f,b
  1217  002012  1F8E               	comf	(??_main+1)& (0+255),f,b
  1218  002014  4B8D               	infsnz	??_main& (0+255),f,b
  1219  002016  2B8E               	incf	(??_main+1)& (0+255),f,b
  1220  002018  C08D  F009         	movff	??_main,_Toff
  1221  00201C  C08E  F00A         	movff	??_main+1,_Toff+1
  1222  002020                     l3782:
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;newmain.c: 145: }
  1226                           ;newmain.c: 146: if (remote_frame == 1) {
  1227  002020  B044               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;newmain.c: 147: send_data();
  1231  002022  EC95  F013         	call	_send_data	;wreg free
  1232                           
  1233                           ;newmain.c: 148: }
  1234                           ;newmain.c: 149: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
  1235  002026  EC42  F014         	call	_CANisTXwarningON	;wreg free
  1236  00202A  06E8               	decf	wreg,f,c
  1237  00202C  B4D8               	btfsc	status,2,c
  1238  00202E  D005               	goto	l663
  1239  002030  EC48  F014         	call	_CANisRXwarningON	;wreg free
  1240  002034  06E8               	decf	wreg,f,c
  1241  002036  A4D8               	btfss	status,2,c
  1242  002038  D652               	goto	l3748
  1243  00203A                     l663:
  1244                           
  1245                           ;newmain.c: 150: PORTAbits.RA5 = 1;
  1246  00203A  8A80               	bsf	3968,5,c	;volatile
  1247  00203C  D650               	goto	l3748
  1248  00203E                     __end_of_main:
  1249                           	opt stack 0
  1250                           tblptru	equ	0xFF8
  1251                           tblptrh	equ	0xFF7
  1252                           tblptrl	equ	0xFF6
  1253                           tablat	equ	0xFF5
  1254                           postinc0	equ	0xFEE
  1255                           wreg	equ	0xFE8
  1256                           postdec1	equ	0xFE5
  1257                           fsr1l	equ	0xFE1
  1258                           status	equ	0xFD8
  1259                           
  1260 ;; *************** function _send_data *****************
  1261 ;; Defined at:
  1262 ;;		line 158 in file "newmain.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;		None               void
  1269 ;; Registers used:
  1270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1276 ;;      Params:         0       0       0       0
  1277 ;;      Locals:         0       0       0       0
  1278 ;;      Temps:          0       0       0       0
  1279 ;;      Totals:         0       0       0       0
  1280 ;;Total ram usage:        0 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    5
  1283 ;; This function calls:
  1284 ;;		_CANisTxReady
  1285 ;;		_CANsendMessage
  1286 ;; This function is called by:
  1287 ;;		_main
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text1
  1292  00272A                     __ptext1:
  1293                           	opt stack 0
  1294  00272A                     _send_data:
  1295                           	opt stack 25
  1296                           
  1297                           ;newmain.c: 159: if (CANisTxReady()) {
  1298                           
  1299                           ;incstack = 0
  1300  00272A  EC02  F014         	call	_CANisTxReady	;wreg free
  1301  00272E  0900               	iorlw	0
  1302  002730  B4D8               	btfsc	status,2,c
  1303  002732  0012               	return	
  1304                           
  1305                           ;newmain.c: 160: if (remote_frame == 1) {
  1306  002734  A044               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1307  002736  D016               	goto	l3586
  1308                           
  1309                           ;newmain.c: 162: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG &
  1310                           ;newmain.c: 163: CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1311  002738  C0A9  F073         	movff	_id,CANsendMessage@identifier
  1312  00273C  C0AA  F074         	movff	_id+1,CANsendMessage@identifier+1
  1313  002740  C0AB  F075         	movff	_id+2,CANsendMessage@identifier+2
  1314  002744  C0AC  F076         	movff	_id+3,CANsendMessage@identifier+3
  1315  002748  0EBB               	movlw	low _data_array
  1316  00274A  0100               	movlb	0	; () banked
  1317  00274C  6F77               	movwf	CANsendMessage@data& (0+255),b
  1318  00274E  0E00               	movlw	high _data_array
  1319  002750  0100               	movlb	0	; () banked
  1320  002752  6F78               	movwf	(CANsendMessage@data+1)& (0+255),b
  1321  002754  0E08               	movlw	8
  1322  002756  0100               	movlb	0	; () banked
  1323  002758  6F79               	movwf	CANsendMessage@dataLength& (0+255),b
  1324  00275A  0EBC               	movlw	188
  1325  00275C  0100               	movlb	0	; () banked
  1326  00275E  6F7A               	movwf	CANsendMessage@flags& (0+255),b
  1327  002760  EC38  F006         	call	_CANsendMessage	;wreg free
  1328  002764                     l3586:
  1329                           
  1330                           ;newmain.c: 168: }
  1331                           ;newmain.c: 169: remote_frame = 0;
  1332  002764  9044               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1333  002766  0012               	return	
  1334  002768                     __end_of_send_data:
  1335                           	opt stack 0
  1336                           tblptru	equ	0xFF8
  1337                           tblptrh	equ	0xFF7
  1338                           tblptrl	equ	0xFF6
  1339                           tablat	equ	0xFF5
  1340                           postinc0	equ	0xFEE
  1341                           wreg	equ	0xFE8
  1342                           postdec1	equ	0xFE5
  1343                           fsr1l	equ	0xFE1
  1344                           status	equ	0xFD8
  1345                           
  1346 ;; *************** function _CANsendMessage *****************
  1347 ;; Defined at:
  1348 ;;		line 294 in file "C:/Asus WebStorage/simone.righetti97@gmail.com/MySyncFolder/Tesina/LaurTec_PIC_libraries_v_3.3.0/i
      +nc\CANlib.h"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  identifier      4   19[BANK0 ] unsigned long 
  1351 ;;  data            2   23[BANK0 ] PTR unsigned char 
  1352 ;;		 -> data_array(8), 
  1353 ;;  dataLength      1   25[BANK0 ] unsigned char 
  1354 ;;  flags           1   26[BANK0 ] enum E16866
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  tamp            4   31[BANK0 ] unsigned long 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;		None               void
  1359 ;; Registers used:
  1360 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1366 ;;      Params:         0       8       0       0
  1367 ;;      Locals:         0       4       0       0
  1368 ;;      Temps:          0       4       0       0
  1369 ;;      Totals:         0      16       0       0
  1370 ;;Total ram usage:       16 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; Hardware stack levels required when called:    4
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_send_data
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text2
  1381  000C70                     __ptext2:
  1382                           	opt stack 0
  1383  000C70                     _CANsendMessage:
  1384                           	opt stack 25
  1385                           
  1386                           ;inc\CANlib.h: 296: unsigned long tamp;
  1387                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1388                           
  1389                           ;incstack = 0
  1390  000C70  010F               	movlb	15	; () banked
  1391  000C72  B740               	btfsc	64,3,b	;volatile
  1392  000C74  D13F               	goto	l369
  1393                           
  1394                           ; BSR set to: 15
  1395                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1396  000C76  C079  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1397                           
  1398                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1399  000C7A  0100               	movlb	0	; () banked
  1400  000C7C  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1401  000C7E  D003               	goto	l370
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1405  000C80  010F               	movlb	15	; () banked
  1406  000C82  8D45               	bsf	69,6,b	;volatile
  1407  000C84  D002               	goto	l371
  1408  000C86                     l370:
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;inc\CANlib.h: 302: else
  1412                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1413  000C86  010F               	movlb	15	; () banked
  1414  000C88  9D45               	bcf	69,6,b	;volatile
  1415  000C8A                     l371:
  1416                           
  1417                           ; BSR set to: 15
  1418                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1419  000C8A  0100               	movlb	0	; () banked
  1420  000C8C  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1421  000C8E  D079               	goto	l372
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;inc\CANlib.h: 306: {
  1425                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1426  000C90  0100               	movlb	0	; () banked
  1427  000C92  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1428  000C94  0100               	movlb	0	; () banked
  1429  000C96  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1430  000C98  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1431  000C9A  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1432  000C9C  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1436  000C9E  C07F  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1440  000CA2  0E00               	movlw	0
  1441  000CA4  0100               	movlb	0	; () banked
  1442  000CA6  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1443  000CA8  0100               	movlb	0	; () banked
  1444  000CAA  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1445  000CAC  0EFF               	movlw	255
  1446  000CAE  0100               	movlb	0	; () banked
  1447  000CB0  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1448  000CB2  0100               	movlb	0	; () banked
  1449  000CB4  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1450  000CB6  0E00               	movlw	0
  1451  000CB8  0100               	movlb	0	; () banked
  1452  000CBA  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1453  000CBC  0100               	movlb	0	; () banked
  1454  000CBE  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1455  000CC0  0E00               	movlw	0
  1456  000CC2  0100               	movlb	0	; () banked
  1457  000CC4  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1458  000CC6  0100               	movlb	0	; () banked
  1459  000CC8  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1463  000CCA  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1464  000CCE  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1465  000CD2  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1466  000CD6  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1467  000CDA  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1468  000CDE  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1469  000CE2  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1470  000CE6  0100               	movlb	0	; () banked
  1471  000CE8  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1472  000CEA  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1473  000CEE  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1474  000CF2  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1475  000CF6  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1479  000CFA  C07F  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1483  000CFE  0E00               	movlw	0
  1484  000D00  010F               	movlb	15	; () banked
  1485  000D02  6F42               	movwf	66,b	;volatile
  1486                           
  1487                           ; BSR set to: 15
  1488                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1489  000D04  010F               	movlb	15	; () banked
  1490  000D06  8742               	bsf	66,3,b	;volatile
  1491                           
  1492                           ; BSR set to: 15
  1493                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1494  000D08  0100               	movlb	0	; () banked
  1495  000D0A  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1496  000D0C  D002               	goto	l373
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1500  000D0E  010F               	movlb	15	; () banked
  1501  000D10  8142               	bsf	66,0,b	;volatile
  1502  000D12                     l373:
  1503                           
  1504                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1505  000D12  0100               	movlb	0	; () banked
  1506  000D14  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1507  000D16  D002               	goto	l374
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1511  000D18  010F               	movlb	15	; () banked
  1512  000D1A  8342               	bsf	66,1,b	;volatile
  1513  000D1C                     l374:
  1514                           
  1515                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1516  000D1C  0100               	movlb	0	; () banked
  1517  000D1E  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1518  000D20  D002               	goto	l375
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1522  000D22  010F               	movlb	15	; () banked
  1523  000D24  8B42               	bsf	66,5,b	;volatile
  1524  000D26                     l375:
  1525                           
  1526                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1527  000D26  0100               	movlb	0	; () banked
  1528  000D28  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1529  000D2A  D002               	goto	l376
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1533  000D2C  010F               	movlb	15	; () banked
  1534  000D2E  8D42               	bsf	66,6,b	;volatile
  1535  000D30                     l376:
  1536                           
  1537                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1538  000D30  0100               	movlb	0	; () banked
  1539  000D32  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1540  000D34  D002               	goto	l3088
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1544  000D36  010F               	movlb	15	; () banked
  1545  000D38  8F42               	bsf	66,7,b	;volatile
  1546  000D3A                     l3088:
  1547                           
  1548                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1549  000D3A  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1550  000D3E  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1551  000D42  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1552  000D46  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1553  000D4A  0E16               	movlw	22
  1554  000D4C  D006               	goto	u3250
  1555  000D4E                     u3255:
  1556  000D4E  0100               	movlb	0	; () banked
  1557  000D50  90D8               	bcf	status,0,c
  1558  000D52  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1559  000D54  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1560  000D56  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1561  000D58  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1562  000D5A                     u3250:
  1563  000D5A  2EE8               	decfsz	wreg,f,c
  1564  000D5C  D7F8               	goto	u3255
  1565  000D5E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1566  000D62  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1567  000D66  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1568  000D6A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1572  000D6E  0100               	movlb	0	; () banked
  1573  000D70  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1574  000D72  0100               	movlb	0	; () banked
  1575  000D74  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1576  000D76  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1577  000D78  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1578  000D7A  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1582  000D7C  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1583                           
  1584                           ;inc\CANlib.h: 332: }
  1585  000D80  D059               	goto	l3108
  1586  000D82                     l372:
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;inc\CANlib.h: 334: else
  1590                           ;inc\CANlib.h: 336: {
  1591                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1592  000D82  010F               	movlb	15	; () banked
  1593  000D84  9742               	bcf	66,3,b	;volatile
  1594                           
  1595                           ; BSR set to: 15
  1596                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1597  000D86  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1598  000D8A  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1599  000D8E  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1600  000D92  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1601  000D96  0E04               	movlw	4
  1602  000D98  D006               	goto	u3260
  1603  000D9A                     u3265:
  1604  000D9A  0100               	movlb	0	; () banked
  1605  000D9C  90D8               	bcf	status,0,c
  1606  000D9E  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1607  000DA0  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1608  000DA2  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1609  000DA4  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1610  000DA6                     u3260:
  1611  000DA6  2EE8               	decfsz	wreg,f,c
  1612  000DA8  D7F8               	goto	u3265
  1613  000DAA  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1614  000DAE  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1615  000DB2  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1616  000DB6  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1620  000DBA  0100               	movlb	0	; () banked
  1621  000DBC  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1622  000DBE  0100               	movlb	0	; () banked
  1623  000DC0  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1624  000DC2  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1625  000DC4  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1626  000DC6  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1630  000DC8  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1634  000DCC  0E07               	movlw	7
  1635  000DCE  0100               	movlb	0	; () banked
  1636  000DD0  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1637  000DD2  0100               	movlb	0	; () banked
  1638  000DD4  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1639  000DD6  0E00               	movlw	0
  1640  000DD8  0100               	movlb	0	; () banked
  1641  000DDA  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1642  000DDC  0100               	movlb	0	; () banked
  1643  000DDE  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1644  000DE0  0E00               	movlw	0
  1645  000DE2  0100               	movlb	0	; () banked
  1646  000DE4  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1647  000DE6  0100               	movlb	0	; () banked
  1648  000DE8  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1649  000DEA  0E00               	movlw	0
  1650  000DEC  0100               	movlb	0	; () banked
  1651  000DEE  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1652  000DF0  0100               	movlb	0	; () banked
  1653  000DF2  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1657  000DF4  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1658  000DF8  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1659  000DFC  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1660  000E00  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1661  000E04  0E05               	movlw	5
  1662  000E06                     u3275:
  1663  000E06  90D8               	bcf	status,0,c
  1664  000E08  0100               	movlb	0	; () banked
  1665  000E0A  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1666  000E0C  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1667  000E0E  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1668  000E10  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1669  000E12  2EE8               	decfsz	wreg,f,c
  1670  000E14  D7F8               	goto	u3275
  1671  000E16  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1672  000E1A  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1673  000E1E  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1674  000E22  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1678  000E26  010F               	movlb	15	; () banked
  1679  000E28  5142               	movf	66,w,b	;volatile
  1680  000E2A  0B1F               	andlw	31
  1681  000E2C  010F               	movlb	15	; () banked
  1682  000E2E  6F42               	movwf	66,b	;volatile
  1683                           
  1684                           ; BSR set to: 15
  1685                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1686  000E30  C07F  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1687  000E34                     l3108:
  1688                           
  1689                           ;inc\CANlib.h: 347: }
  1690                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1691  000E34  0100               	movlb	0	; () banked
  1692  000E36  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1693  000E38  D003               	goto	l379
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1697  000E3A  010F               	movlb	15	; () banked
  1698  000E3C  8140               	bsf	64,0,b	;volatile
  1699  000E3E  D002               	goto	l380
  1700  000E40                     l379:
  1701                           
  1702                           ; BSR set to: 0
  1703                           ;inc\CANlib.h: 351: else
  1704                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1705  000E40  010F               	movlb	15	; () banked
  1706  000E42  9140               	bcf	64,0,b	;volatile
  1707  000E44                     l380:
  1708                           
  1709                           ; BSR set to: 15
  1710                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1711  000E44  0100               	movlb	0	; () banked
  1712  000E46  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1713  000E48  D003               	goto	l381
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1717  000E4A  010F               	movlb	15	; () banked
  1718  000E4C  8340               	bsf	64,1,b	;volatile
  1719  000E4E  D002               	goto	l3114
  1720  000E50                     l381:
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;inc\CANlib.h: 355: else
  1724                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1725  000E50  010F               	movlb	15	; () banked
  1726  000E52  9340               	bcf	64,1,b	;volatile
  1727  000E54                     l3114:
  1728                           
  1729                           ; BSR set to: 15
  1730                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1731  000E54  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1732  000E58  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1733  000E5C  50DF               	movf	indf2,w,c
  1734  000E5E  010F               	movlb	15	; () banked
  1735  000E60  6F46               	movwf	70,b	;volatile
  1736                           
  1737                           ; BSR set to: 15
  1738                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1739  000E62  0100               	movlb	0	; () banked
  1740  000E64  EE20 F001          	lfsr	2,1
  1741  000E68  5177               	movf	CANsendMessage@data& (0+255),w,b
  1742  000E6A  26D9               	addwf	fsr2l,f,c
  1743  000E6C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1744  000E6E  22DA               	addwfc	fsr2h,f,c
  1745  000E70  50DF               	movf	indf2,w,c
  1746  000E72  010F               	movlb	15	; () banked
  1747  000E74  6F47               	movwf	71,b	;volatile
  1748                           
  1749                           ; BSR set to: 15
  1750                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1751  000E76  0100               	movlb	0	; () banked
  1752  000E78  EE20 F002          	lfsr	2,2
  1753  000E7C  5177               	movf	CANsendMessage@data& (0+255),w,b
  1754  000E7E  26D9               	addwf	fsr2l,f,c
  1755  000E80  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1756  000E82  22DA               	addwfc	fsr2h,f,c
  1757  000E84  50DF               	movf	indf2,w,c
  1758  000E86  010F               	movlb	15	; () banked
  1759  000E88  6F48               	movwf	72,b	;volatile
  1760                           
  1761                           ; BSR set to: 15
  1762                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1763  000E8A  0100               	movlb	0	; () banked
  1764  000E8C  EE20 F003          	lfsr	2,3
  1765  000E90  5177               	movf	CANsendMessage@data& (0+255),w,b
  1766  000E92  26D9               	addwf	fsr2l,f,c
  1767  000E94  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1768  000E96  22DA               	addwfc	fsr2h,f,c
  1769  000E98  50DF               	movf	indf2,w,c
  1770  000E9A  010F               	movlb	15	; () banked
  1771  000E9C  6F49               	movwf	73,b	;volatile
  1772                           
  1773                           ; BSR set to: 15
  1774                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1775  000E9E  0100               	movlb	0	; () banked
  1776  000EA0  EE20 F004          	lfsr	2,4
  1777  000EA4  5177               	movf	CANsendMessage@data& (0+255),w,b
  1778  000EA6  26D9               	addwf	fsr2l,f,c
  1779  000EA8  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1780  000EAA  22DA               	addwfc	fsr2h,f,c
  1781  000EAC  50DF               	movf	indf2,w,c
  1782  000EAE  010F               	movlb	15	; () banked
  1783  000EB0  6F4A               	movwf	74,b	;volatile
  1784                           
  1785                           ; BSR set to: 15
  1786                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1787  000EB2  0100               	movlb	0	; () banked
  1788  000EB4  EE20 F005          	lfsr	2,5
  1789  000EB8  5177               	movf	CANsendMessage@data& (0+255),w,b
  1790  000EBA  26D9               	addwf	fsr2l,f,c
  1791  000EBC  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1792  000EBE  22DA               	addwfc	fsr2h,f,c
  1793  000EC0  50DF               	movf	indf2,w,c
  1794  000EC2  010F               	movlb	15	; () banked
  1795  000EC4  6F4B               	movwf	75,b	;volatile
  1796                           
  1797                           ; BSR set to: 15
  1798                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1799  000EC6  0100               	movlb	0	; () banked
  1800  000EC8  EE20 F006          	lfsr	2,6
  1801  000ECC  5177               	movf	CANsendMessage@data& (0+255),w,b
  1802  000ECE  26D9               	addwf	fsr2l,f,c
  1803  000ED0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1804  000ED2  22DA               	addwfc	fsr2h,f,c
  1805  000ED4  50DF               	movf	indf2,w,c
  1806  000ED6  010F               	movlb	15	; () banked
  1807  000ED8  6F4C               	movwf	76,b	;volatile
  1808                           
  1809                           ; BSR set to: 15
  1810                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1811  000EDA  0100               	movlb	0	; () banked
  1812  000EDC  EE20 F007          	lfsr	2,7
  1813  000EE0  5177               	movf	CANsendMessage@data& (0+255),w,b
  1814  000EE2  26D9               	addwf	fsr2l,f,c
  1815  000EE4  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1816  000EE6  22DA               	addwfc	fsr2h,f,c
  1817  000EE8  50DF               	movf	indf2,w,c
  1818  000EEA  010F               	movlb	15	; () banked
  1819  000EEC  6F4D               	movwf	77,b	;volatile
  1820                           
  1821                           ; BSR set to: 15
  1822                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1823  000EEE  010F               	movlb	15	; () banked
  1824  000EF0  8740               	bsf	64,3,b	;volatile
  1825                           
  1826                           ; BSR set to: 15
  1827                           ;inc\CANlib.h: 368: return;
  1828  000EF2  0012               	return	
  1829  000EF4                     l369:
  1830                           
  1831                           ; BSR set to: 15
  1832                           ;inc\CANlib.h: 369: }
  1833                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1834  000EF4  010F               	movlb	15	; () banked
  1835  000EF6  B730               	btfsc	48,3,b	;volatile
  1836  000EF8  D13F               	goto	l384
  1837                           
  1838                           ; BSR set to: 15
  1839                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1840  000EFA  C079  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1841                           
  1842                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1843  000EFE  0100               	movlb	0	; () banked
  1844  000F00  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1845  000F02  D003               	goto	l385
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1849  000F04  010F               	movlb	15	; () banked
  1850  000F06  8D35               	bsf	53,6,b	;volatile
  1851  000F08  D002               	goto	l386
  1852  000F0A                     l385:
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;inc\CANlib.h: 378: else
  1856                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1857  000F0A  010F               	movlb	15	; () banked
  1858  000F0C  9D35               	bcf	53,6,b	;volatile
  1859  000F0E                     l386:
  1860                           
  1861                           ; BSR set to: 15
  1862                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1863  000F0E  0100               	movlb	0	; () banked
  1864  000F10  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1865  000F12  D079               	goto	l387
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;inc\CANlib.h: 382: {
  1869                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1870  000F14  0100               	movlb	0	; () banked
  1871  000F16  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1872  000F18  0100               	movlb	0	; () banked
  1873  000F1A  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1874  000F1C  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1875  000F1E  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1876  000F20  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1880  000F22  C07F  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1884  000F26  0E00               	movlw	0
  1885  000F28  0100               	movlb	0	; () banked
  1886  000F2A  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1887  000F2C  0100               	movlb	0	; () banked
  1888  000F2E  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1889  000F30  0EFF               	movlw	255
  1890  000F32  0100               	movlb	0	; () banked
  1891  000F34  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1892  000F36  0100               	movlb	0	; () banked
  1893  000F38  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1894  000F3A  0E00               	movlw	0
  1895  000F3C  0100               	movlb	0	; () banked
  1896  000F3E  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1897  000F40  0100               	movlb	0	; () banked
  1898  000F42  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1899  000F44  0E00               	movlw	0
  1900  000F46  0100               	movlb	0	; () banked
  1901  000F48  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1902  000F4A  0100               	movlb	0	; () banked
  1903  000F4C  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1907  000F4E  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1908  000F52  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1909  000F56  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1910  000F5A  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1911  000F5E  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1912  000F62  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1913  000F66  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1914  000F6A  0100               	movlb	0	; () banked
  1915  000F6C  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1916  000F6E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1917  000F72  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1918  000F76  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1919  000F7A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1923  000F7E  C07F  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  1927  000F82  0E00               	movlw	0
  1928  000F84  010F               	movlb	15	; () banked
  1929  000F86  6F32               	movwf	50,b	;volatile
  1930                           
  1931                           ; BSR set to: 15
  1932                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1933  000F88  010F               	movlb	15	; () banked
  1934  000F8A  8732               	bsf	50,3,b	;volatile
  1935                           
  1936                           ; BSR set to: 15
  1937                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  1938  000F8C  0100               	movlb	0	; () banked
  1939  000F8E  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1940  000F90  D002               	goto	l388
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  1944  000F92  010F               	movlb	15	; () banked
  1945  000F94  8132               	bsf	50,0,b	;volatile
  1946  000F96                     l388:
  1947                           
  1948                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  1949  000F96  0100               	movlb	0	; () banked
  1950  000F98  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1951  000F9A  D002               	goto	l389
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  1955  000F9C  010F               	movlb	15	; () banked
  1956  000F9E  8332               	bsf	50,1,b	;volatile
  1957  000FA0                     l389:
  1958                           
  1959                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  1960  000FA0  0100               	movlb	0	; () banked
  1961  000FA2  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1962  000FA4  D002               	goto	l390
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  1966  000FA6  010F               	movlb	15	; () banked
  1967  000FA8  8B32               	bsf	50,5,b	;volatile
  1968  000FAA                     l390:
  1969                           
  1970                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  1971  000FAA  0100               	movlb	0	; () banked
  1972  000FAC  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1973  000FAE  D002               	goto	l391
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  1977  000FB0  010F               	movlb	15	; () banked
  1978  000FB2  8D32               	bsf	50,6,b	;volatile
  1979  000FB4                     l391:
  1980                           
  1981                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  1982  000FB4  0100               	movlb	0	; () banked
  1983  000FB6  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1984  000FB8  D002               	goto	l3164
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  1988  000FBA  010F               	movlb	15	; () banked
  1989  000FBC  8F32               	bsf	50,7,b	;volatile
  1990  000FBE                     l3164:
  1991                           
  1992                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  1993  000FBE  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1994  000FC2  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1995  000FC6  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1996  000FCA  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1997  000FCE  0E16               	movlw	22
  1998  000FD0  D006               	goto	u3380
  1999  000FD2                     u3385:
  2000  000FD2  0100               	movlb	0	; () banked
  2001  000FD4  90D8               	bcf	status,0,c
  2002  000FD6  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2003  000FD8  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2004  000FDA  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2005  000FDC  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2006  000FDE                     u3380:
  2007  000FDE  2EE8               	decfsz	wreg,f,c
  2008  000FE0  D7F8               	goto	u3385
  2009  000FE2  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2010  000FE6  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2011  000FEA  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2012  000FEE  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2016  000FF2  0100               	movlb	0	; () banked
  2017  000FF4  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2018  000FF6  0100               	movlb	0	; () banked
  2019  000FF8  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2020  000FFA  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2021  000FFC  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2022  000FFE  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2026  001000  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2027                           
  2028                           ;inc\CANlib.h: 407: }
  2029  001004  D059               	goto	l3184
  2030  001006                     l387:
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;inc\CANlib.h: 409: else
  2034                           ;inc\CANlib.h: 411: {
  2035                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2036  001006  010F               	movlb	15	; () banked
  2037  001008  9732               	bcf	50,3,b	;volatile
  2038                           
  2039                           ; BSR set to: 15
  2040                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2041  00100A  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2042  00100E  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2043  001012  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2044  001016  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2045  00101A  0E04               	movlw	4
  2046  00101C  D006               	goto	u3390
  2047  00101E                     u3395:
  2048  00101E  0100               	movlb	0	; () banked
  2049  001020  90D8               	bcf	status,0,c
  2050  001022  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2051  001024  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2052  001026  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2053  001028  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2054  00102A                     u3390:
  2055  00102A  2EE8               	decfsz	wreg,f,c
  2056  00102C  D7F8               	goto	u3395
  2057  00102E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2058  001032  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2059  001036  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2060  00103A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2064  00103E  0100               	movlb	0	; () banked
  2065  001040  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2066  001042  0100               	movlb	0	; () banked
  2067  001044  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2068  001046  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2069  001048  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2070  00104A  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2074  00104C  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2078  001050  0E07               	movlw	7
  2079  001052  0100               	movlb	0	; () banked
  2080  001054  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2081  001056  0100               	movlb	0	; () banked
  2082  001058  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2083  00105A  0E00               	movlw	0
  2084  00105C  0100               	movlb	0	; () banked
  2085  00105E  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2086  001060  0100               	movlb	0	; () banked
  2087  001062  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2088  001064  0E00               	movlw	0
  2089  001066  0100               	movlb	0	; () banked
  2090  001068  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2091  00106A  0100               	movlb	0	; () banked
  2092  00106C  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2093  00106E  0E00               	movlw	0
  2094  001070  0100               	movlb	0	; () banked
  2095  001072  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2096  001074  0100               	movlb	0	; () banked
  2097  001076  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2101  001078  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2102  00107C  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2103  001080  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2104  001084  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2105  001088  0E05               	movlw	5
  2106  00108A                     u3405:
  2107  00108A  90D8               	bcf	status,0,c
  2108  00108C  0100               	movlb	0	; () banked
  2109  00108E  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  2110  001090  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2111  001092  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2112  001094  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2113  001096  2EE8               	decfsz	wreg,f,c
  2114  001098  D7F8               	goto	u3405
  2115  00109A  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2116  00109E  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2117  0010A2  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2118  0010A6  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2122  0010AA  010F               	movlb	15	; () banked
  2123  0010AC  5132               	movf	50,w,b	;volatile
  2124  0010AE  0B1F               	andlw	31
  2125  0010B0  010F               	movlb	15	; () banked
  2126  0010B2  6F32               	movwf	50,b	;volatile
  2127                           
  2128                           ; BSR set to: 15
  2129                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2130  0010B4  C07F  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2131  0010B8                     l3184:
  2132                           
  2133                           ;inc\CANlib.h: 422: }
  2134                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2135  0010B8  0100               	movlb	0	; () banked
  2136  0010BA  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  2137  0010BC  D003               	goto	l394
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2141  0010BE  010F               	movlb	15	; () banked
  2142  0010C0  8130               	bsf	48,0,b	;volatile
  2143  0010C2  D002               	goto	l395
  2144  0010C4                     l394:
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;inc\CANlib.h: 426: else
  2148                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2149  0010C4  010F               	movlb	15	; () banked
  2150  0010C6  9130               	bcf	48,0,b	;volatile
  2151  0010C8                     l395:
  2152                           
  2153                           ; BSR set to: 15
  2154                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2155  0010C8  0100               	movlb	0	; () banked
  2156  0010CA  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  2157  0010CC  D003               	goto	l396
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2161  0010CE  010F               	movlb	15	; () banked
  2162  0010D0  8330               	bsf	48,1,b	;volatile
  2163  0010D2  D002               	goto	l3190
  2164  0010D4                     l396:
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;inc\CANlib.h: 430: else
  2168                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2169  0010D4  010F               	movlb	15	; () banked
  2170  0010D6  9330               	bcf	48,1,b	;volatile
  2171  0010D8                     l3190:
  2172                           
  2173                           ; BSR set to: 15
  2174                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2175  0010D8  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  2176  0010DC  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2177  0010E0  50DF               	movf	indf2,w,c
  2178  0010E2  010F               	movlb	15	; () banked
  2179  0010E4  6F36               	movwf	54,b	;volatile
  2180                           
  2181                           ; BSR set to: 15
  2182                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2183  0010E6  0100               	movlb	0	; () banked
  2184  0010E8  EE20 F001          	lfsr	2,1
  2185  0010EC  5177               	movf	CANsendMessage@data& (0+255),w,b
  2186  0010EE  26D9               	addwf	fsr2l,f,c
  2187  0010F0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2188  0010F2  22DA               	addwfc	fsr2h,f,c
  2189  0010F4  50DF               	movf	indf2,w,c
  2190  0010F6  010F               	movlb	15	; () banked
  2191  0010F8  6F37               	movwf	55,b	;volatile
  2192                           
  2193                           ; BSR set to: 15
  2194                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2195  0010FA  0100               	movlb	0	; () banked
  2196  0010FC  EE20 F002          	lfsr	2,2
  2197  001100  5177               	movf	CANsendMessage@data& (0+255),w,b
  2198  001102  26D9               	addwf	fsr2l,f,c
  2199  001104  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2200  001106  22DA               	addwfc	fsr2h,f,c
  2201  001108  50DF               	movf	indf2,w,c
  2202  00110A  010F               	movlb	15	; () banked
  2203  00110C  6F38               	movwf	56,b	;volatile
  2204                           
  2205                           ; BSR set to: 15
  2206                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2207  00110E  0100               	movlb	0	; () banked
  2208  001110  EE20 F003          	lfsr	2,3
  2209  001114  5177               	movf	CANsendMessage@data& (0+255),w,b
  2210  001116  26D9               	addwf	fsr2l,f,c
  2211  001118  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2212  00111A  22DA               	addwfc	fsr2h,f,c
  2213  00111C  50DF               	movf	indf2,w,c
  2214  00111E  010F               	movlb	15	; () banked
  2215  001120  6F39               	movwf	57,b	;volatile
  2216                           
  2217                           ; BSR set to: 15
  2218                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2219  001122  0100               	movlb	0	; () banked
  2220  001124  EE20 F004          	lfsr	2,4
  2221  001128  5177               	movf	CANsendMessage@data& (0+255),w,b
  2222  00112A  26D9               	addwf	fsr2l,f,c
  2223  00112C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2224  00112E  22DA               	addwfc	fsr2h,f,c
  2225  001130  50DF               	movf	indf2,w,c
  2226  001132  010F               	movlb	15	; () banked
  2227  001134  6F3A               	movwf	58,b	;volatile
  2228                           
  2229                           ; BSR set to: 15
  2230                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2231  001136  0100               	movlb	0	; () banked
  2232  001138  EE20 F005          	lfsr	2,5
  2233  00113C  5177               	movf	CANsendMessage@data& (0+255),w,b
  2234  00113E  26D9               	addwf	fsr2l,f,c
  2235  001140  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2236  001142  22DA               	addwfc	fsr2h,f,c
  2237  001144  50DF               	movf	indf2,w,c
  2238  001146  010F               	movlb	15	; () banked
  2239  001148  6F3B               	movwf	59,b	;volatile
  2240                           
  2241                           ; BSR set to: 15
  2242                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2243  00114A  0100               	movlb	0	; () banked
  2244  00114C  EE20 F006          	lfsr	2,6
  2245  001150  5177               	movf	CANsendMessage@data& (0+255),w,b
  2246  001152  26D9               	addwf	fsr2l,f,c
  2247  001154  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2248  001156  22DA               	addwfc	fsr2h,f,c
  2249  001158  50DF               	movf	indf2,w,c
  2250  00115A  010F               	movlb	15	; () banked
  2251  00115C  6F3C               	movwf	60,b	;volatile
  2252                           
  2253                           ; BSR set to: 15
  2254                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2255  00115E  0100               	movlb	0	; () banked
  2256  001160  EE20 F007          	lfsr	2,7
  2257  001164  5177               	movf	CANsendMessage@data& (0+255),w,b
  2258  001166  26D9               	addwf	fsr2l,f,c
  2259  001168  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2260  00116A  22DA               	addwfc	fsr2h,f,c
  2261  00116C  50DF               	movf	indf2,w,c
  2262  00116E  010F               	movlb	15	; () banked
  2263  001170  6F3D               	movwf	61,b	;volatile
  2264                           
  2265                           ; BSR set to: 15
  2266                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2267  001172  010F               	movlb	15	; () banked
  2268  001174  8730               	bsf	48,3,b	;volatile
  2269                           
  2270                           ; BSR set to: 15
  2271                           ;inc\CANlib.h: 444: return;
  2272  001176  0012               	return	
  2273  001178                     l384:
  2274                           
  2275                           ; BSR set to: 15
  2276                           ;inc\CANlib.h: 445: }
  2277                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2278  001178  010F               	movlb	15	; () banked
  2279  00117A  B720               	btfsc	32,3,b	;volatile
  2280  00117C  0012               	return	
  2281                           
  2282                           ; BSR set to: 15
  2283                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2284  00117E  C079  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2285                           
  2286                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2287  001182  0100               	movlb	0	; () banked
  2288  001184  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  2289  001186  D003               	goto	l399
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2293  001188  010F               	movlb	15	; () banked
  2294  00118A  8D25               	bsf	37,6,b	;volatile
  2295  00118C  D002               	goto	l400
  2296  00118E                     l399:
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;inc\CANlib.h: 454: else
  2300                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2301  00118E  010F               	movlb	15	; () banked
  2302  001190  9D25               	bcf	37,6,b	;volatile
  2303  001192                     l400:
  2304                           
  2305                           ; BSR set to: 15
  2306                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2307  001192  0100               	movlb	0	; () banked
  2308  001194  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  2309  001196  D079               	goto	l401
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;inc\CANlib.h: 458: {
  2313                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2314  001198  0100               	movlb	0	; () banked
  2315  00119A  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  2316  00119C  0100               	movlb	0	; () banked
  2317  00119E  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2318  0011A0  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2319  0011A2  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2320  0011A4  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2324  0011A6  C07F  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2328  0011AA  0E00               	movlw	0
  2329  0011AC  0100               	movlb	0	; () banked
  2330  0011AE  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2331  0011B0  0100               	movlb	0	; () banked
  2332  0011B2  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2333  0011B4  0EFF               	movlw	255
  2334  0011B6  0100               	movlb	0	; () banked
  2335  0011B8  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2336  0011BA  0100               	movlb	0	; () banked
  2337  0011BC  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2338  0011BE  0E00               	movlw	0
  2339  0011C0  0100               	movlb	0	; () banked
  2340  0011C2  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2341  0011C4  0100               	movlb	0	; () banked
  2342  0011C6  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2343  0011C8  0E00               	movlw	0
  2344  0011CA  0100               	movlb	0	; () banked
  2345  0011CC  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2346  0011CE  0100               	movlb	0	; () banked
  2347  0011D0  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2351  0011D2  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2352  0011D6  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2353  0011DA  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2354  0011DE  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2355  0011E2  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  2356  0011E6  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2357  0011EA  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2358  0011EE  0100               	movlb	0	; () banked
  2359  0011F0  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  2360  0011F2  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2361  0011F6  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2362  0011FA  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2363  0011FE  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2367  001202  C07F  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2371  001206  0E00               	movlw	0
  2372  001208  010F               	movlb	15	; () banked
  2373  00120A  6F22               	movwf	34,b	;volatile
  2374                           
  2375                           ; BSR set to: 15
  2376                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2377  00120C  010F               	movlb	15	; () banked
  2378  00120E  8722               	bsf	34,3,b	;volatile
  2379                           
  2380                           ; BSR set to: 15
  2381                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2382  001210  0100               	movlb	0	; () banked
  2383  001212  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2384  001214  D002               	goto	l402
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2388  001216  010F               	movlb	15	; () banked
  2389  001218  8122               	bsf	34,0,b	;volatile
  2390  00121A                     l402:
  2391                           
  2392                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2393  00121A  0100               	movlb	0	; () banked
  2394  00121C  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2395  00121E  D002               	goto	l403
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2399  001220  010F               	movlb	15	; () banked
  2400  001222  8322               	bsf	34,1,b	;volatile
  2401  001224                     l403:
  2402                           
  2403                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2404  001224  0100               	movlb	0	; () banked
  2405  001226  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2406  001228  D002               	goto	l404
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2410  00122A  010F               	movlb	15	; () banked
  2411  00122C  8B22               	bsf	34,5,b	;volatile
  2412  00122E                     l404:
  2413                           
  2414                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2415  00122E  0100               	movlb	0	; () banked
  2416  001230  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2417  001232  D002               	goto	l405
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2421  001234  010F               	movlb	15	; () banked
  2422  001236  8D22               	bsf	34,6,b	;volatile
  2423  001238                     l405:
  2424                           
  2425                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2426  001238  0100               	movlb	0	; () banked
  2427  00123A  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2428  00123C  D002               	goto	l3240
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2432  00123E  010F               	movlb	15	; () banked
  2433  001240  8F22               	bsf	34,7,b	;volatile
  2434  001242                     l3240:
  2435                           
  2436                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2437  001242  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2438  001246  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2439  00124A  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2440  00124E  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2441  001252  0E16               	movlw	22
  2442  001254  D006               	goto	u3510
  2443  001256                     u3515:
  2444  001256  0100               	movlb	0	; () banked
  2445  001258  90D8               	bcf	status,0,c
  2446  00125A  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2447  00125C  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2448  00125E  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2449  001260  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2450  001262                     u3510:
  2451  001262  2EE8               	decfsz	wreg,f,c
  2452  001264  D7F8               	goto	u3515
  2453  001266  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2454  00126A  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2455  00126E  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2456  001272  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2460  001276  0100               	movlb	0	; () banked
  2461  001278  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2462  00127A  0100               	movlb	0	; () banked
  2463  00127C  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2464  00127E  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2465  001280  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2466  001282  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2470  001284  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2471                           
  2472                           ;inc\CANlib.h: 483: }
  2473  001288  D059               	goto	l3260
  2474  00128A                     l401:
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;inc\CANlib.h: 485: else
  2478                           ;inc\CANlib.h: 487: {
  2479                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2480  00128A  010F               	movlb	15	; () banked
  2481  00128C  9722               	bcf	34,3,b	;volatile
  2482                           
  2483                           ; BSR set to: 15
  2484                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2485  00128E  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2486  001292  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2487  001296  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2488  00129A  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2489  00129E  0E04               	movlw	4
  2490  0012A0  D006               	goto	u3520
  2491  0012A2                     u3525:
  2492  0012A2  0100               	movlb	0	; () banked
  2493  0012A4  90D8               	bcf	status,0,c
  2494  0012A6  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2495  0012A8  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2496  0012AA  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2497  0012AC  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2498  0012AE                     u3520:
  2499  0012AE  2EE8               	decfsz	wreg,f,c
  2500  0012B0  D7F8               	goto	u3525
  2501  0012B2  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2502  0012B6  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2503  0012BA  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2504  0012BE  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2508  0012C2  0100               	movlb	0	; () banked
  2509  0012C4  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2510  0012C6  0100               	movlb	0	; () banked
  2511  0012C8  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2512  0012CA  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2513  0012CC  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2514  0012CE  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2518  0012D0  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2522  0012D4  0E07               	movlw	7
  2523  0012D6  0100               	movlb	0	; () banked
  2524  0012D8  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2525  0012DA  0100               	movlb	0	; () banked
  2526  0012DC  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2527  0012DE  0E00               	movlw	0
  2528  0012E0  0100               	movlb	0	; () banked
  2529  0012E2  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2530  0012E4  0100               	movlb	0	; () banked
  2531  0012E6  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2532  0012E8  0E00               	movlw	0
  2533  0012EA  0100               	movlb	0	; () banked
  2534  0012EC  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2535  0012EE  0100               	movlb	0	; () banked
  2536  0012F0  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2537  0012F2  0E00               	movlw	0
  2538  0012F4  0100               	movlb	0	; () banked
  2539  0012F6  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2540  0012F8  0100               	movlb	0	; () banked
  2541  0012FA  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2545  0012FC  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2546  001300  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2547  001304  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2548  001308  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2549  00130C  0E05               	movlw	5
  2550  00130E                     u3535:
  2551  00130E  90D8               	bcf	status,0,c
  2552  001310  0100               	movlb	0	; () banked
  2553  001312  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  2554  001314  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2555  001316  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2556  001318  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2557  00131A  2EE8               	decfsz	wreg,f,c
  2558  00131C  D7F8               	goto	u3535
  2559  00131E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2560  001322  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2561  001326  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2562  00132A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2566  00132E  010F               	movlb	15	; () banked
  2567  001330  5122               	movf	34,w,b	;volatile
  2568  001332  0B1F               	andlw	31
  2569  001334  010F               	movlb	15	; () banked
  2570  001336  6F22               	movwf	34,b	;volatile
  2571                           
  2572                           ; BSR set to: 15
  2573                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2574  001338  C07F  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2575  00133C                     l3260:
  2576                           
  2577                           ;inc\CANlib.h: 498: }
  2578                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2579  00133C  0100               	movlb	0	; () banked
  2580  00133E  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  2581  001340  D003               	goto	l408
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2585  001342  010F               	movlb	15	; () banked
  2586  001344  8120               	bsf	32,0,b	;volatile
  2587  001346  D002               	goto	l409
  2588  001348                     l408:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;inc\CANlib.h: 502: else
  2592                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2593  001348  010F               	movlb	15	; () banked
  2594  00134A  9120               	bcf	32,0,b	;volatile
  2595  00134C                     l409:
  2596                           
  2597                           ; BSR set to: 15
  2598                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2599  00134C  0100               	movlb	0	; () banked
  2600  00134E  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  2601  001350  D003               	goto	l410
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2605  001352  010F               	movlb	15	; () banked
  2606  001354  8320               	bsf	32,1,b	;volatile
  2607  001356  D002               	goto	l3266
  2608  001358                     l410:
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;inc\CANlib.h: 506: else
  2612                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2613  001358  010F               	movlb	15	; () banked
  2614  00135A  9320               	bcf	32,1,b	;volatile
  2615  00135C                     l3266:
  2616                           
  2617                           ; BSR set to: 15
  2618                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2619  00135C  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  2620  001360  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2621  001364  50DF               	movf	indf2,w,c
  2622  001366  010F               	movlb	15	; () banked
  2623  001368  6F26               	movwf	38,b	;volatile
  2624                           
  2625                           ; BSR set to: 15
  2626                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2627  00136A  0100               	movlb	0	; () banked
  2628  00136C  EE20 F001          	lfsr	2,1
  2629  001370  5177               	movf	CANsendMessage@data& (0+255),w,b
  2630  001372  26D9               	addwf	fsr2l,f,c
  2631  001374  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2632  001376  22DA               	addwfc	fsr2h,f,c
  2633  001378  50DF               	movf	indf2,w,c
  2634  00137A  010F               	movlb	15	; () banked
  2635  00137C  6F27               	movwf	39,b	;volatile
  2636                           
  2637                           ; BSR set to: 15
  2638                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2639  00137E  0100               	movlb	0	; () banked
  2640  001380  EE20 F002          	lfsr	2,2
  2641  001384  5177               	movf	CANsendMessage@data& (0+255),w,b
  2642  001386  26D9               	addwf	fsr2l,f,c
  2643  001388  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2644  00138A  22DA               	addwfc	fsr2h,f,c
  2645  00138C  50DF               	movf	indf2,w,c
  2646  00138E  010F               	movlb	15	; () banked
  2647  001390  6F28               	movwf	40,b	;volatile
  2648                           
  2649                           ; BSR set to: 15
  2650                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2651  001392  0100               	movlb	0	; () banked
  2652  001394  EE20 F003          	lfsr	2,3
  2653  001398  5177               	movf	CANsendMessage@data& (0+255),w,b
  2654  00139A  26D9               	addwf	fsr2l,f,c
  2655  00139C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2656  00139E  22DA               	addwfc	fsr2h,f,c
  2657  0013A0  50DF               	movf	indf2,w,c
  2658  0013A2  010F               	movlb	15	; () banked
  2659  0013A4  6F29               	movwf	41,b	;volatile
  2660                           
  2661                           ; BSR set to: 15
  2662                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2663  0013A6  0100               	movlb	0	; () banked
  2664  0013A8  EE20 F004          	lfsr	2,4
  2665  0013AC  5177               	movf	CANsendMessage@data& (0+255),w,b
  2666  0013AE  26D9               	addwf	fsr2l,f,c
  2667  0013B0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2668  0013B2  22DA               	addwfc	fsr2h,f,c
  2669  0013B4  50DF               	movf	indf2,w,c
  2670  0013B6  010F               	movlb	15	; () banked
  2671  0013B8  6F2A               	movwf	42,b	;volatile
  2672                           
  2673                           ; BSR set to: 15
  2674                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2675  0013BA  0100               	movlb	0	; () banked
  2676  0013BC  EE20 F005          	lfsr	2,5
  2677  0013C0  5177               	movf	CANsendMessage@data& (0+255),w,b
  2678  0013C2  26D9               	addwf	fsr2l,f,c
  2679  0013C4  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2680  0013C6  22DA               	addwfc	fsr2h,f,c
  2681  0013C8  50DF               	movf	indf2,w,c
  2682  0013CA  010F               	movlb	15	; () banked
  2683  0013CC  6F2B               	movwf	43,b	;volatile
  2684                           
  2685                           ; BSR set to: 15
  2686                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2687  0013CE  0100               	movlb	0	; () banked
  2688  0013D0  EE20 F006          	lfsr	2,6
  2689  0013D4  5177               	movf	CANsendMessage@data& (0+255),w,b
  2690  0013D6  26D9               	addwf	fsr2l,f,c
  2691  0013D8  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2692  0013DA  22DA               	addwfc	fsr2h,f,c
  2693  0013DC  50DF               	movf	indf2,w,c
  2694  0013DE  010F               	movlb	15	; () banked
  2695  0013E0  6F2C               	movwf	44,b	;volatile
  2696                           
  2697                           ; BSR set to: 15
  2698                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2699  0013E2  0100               	movlb	0	; () banked
  2700  0013E4  EE20 F007          	lfsr	2,7
  2701  0013E8  5177               	movf	CANsendMessage@data& (0+255),w,b
  2702  0013EA  26D9               	addwf	fsr2l,f,c
  2703  0013EC  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2704  0013EE  22DA               	addwfc	fsr2h,f,c
  2705  0013F0  50DF               	movf	indf2,w,c
  2706  0013F2  010F               	movlb	15	; () banked
  2707  0013F4  6F2D               	movwf	45,b	;volatile
  2708                           
  2709                           ; BSR set to: 15
  2710                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2711  0013F6  010F               	movlb	15	; () banked
  2712  0013F8  8720               	bsf	32,3,b	;volatile
  2713                           
  2714                           ; BSR set to: 15
  2715                           ;inc\CANlib.h: 520: return;
  2716  0013FA  0012               	return	
  2717  0013FC                     __end_of_CANsendMessage:
  2718                           	opt stack 0
  2719                           tblptru	equ	0xFF8
  2720                           tblptrh	equ	0xFF7
  2721                           tblptrl	equ	0xFF6
  2722                           tablat	equ	0xFF5
  2723                           postinc0	equ	0xFEE
  2724                           wreg	equ	0xFE8
  2725                           postdec1	equ	0xFE5
  2726                           fsr1l	equ	0xFE1
  2727                           indf2	equ	0xFDF
  2728                           fsr2h	equ	0xFDA
  2729                           fsr2l	equ	0xFD9
  2730                           status	equ	0xFD8
  2731                           
  2732 ;; *************** function _CANisTxReady *****************
  2733 ;; Defined at:
  2734 ;;		line 1154 in file "C:/Asus WebStorage/simone.righetti97@gmail.com/MySyncFolder/Tesina/LaurTec_PIC_libraries_v_3.3.0/
      +inc\CANlib.h"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;		None
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;		None
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      unsigned char 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2748 ;;      Params:         0       0       0       0
  2749 ;;      Locals:         0       1       0       0
  2750 ;;      Temps:          0       0       0       0
  2751 ;;      Totals:         0       1       0       0
  2752 ;;Total ram usage:        1 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    4
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_send_data
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text3
  2763  002804                     __ptext3:
  2764                           	opt stack 0
  2765  002804                     _CANisTxReady:
  2766                           	opt stack 25
  2767                           
  2768                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2769                           
  2770                           ; BSR set to: 15
  2771                           ;incstack = 0
  2772  002804  0E01               	movlw	1
  2773  002806  0100               	movlb	0	; () banked
  2774  002808  6F73               	movwf	_CANisTxReady$2918& (0+255),b
  2775                           
  2776                           ; BSR set to: 0
  2777  00280A  010F               	movlb	15	; () banked
  2778  00280C  A740               	btfss	64,3,b	;volatile
  2779  00280E  D009               	goto	l562
  2780                           
  2781                           ; BSR set to: 15
  2782  002810  010F               	movlb	15	; () banked
  2783  002812  A730               	btfss	48,3,b	;volatile
  2784  002814  D006               	goto	l562
  2785                           
  2786                           ; BSR set to: 15
  2787  002816  010F               	movlb	15	; () banked
  2788  002818  A720               	btfss	32,3,b	;volatile
  2789  00281A  D003               	goto	l562
  2790                           
  2791                           ; BSR set to: 15
  2792  00281C  0E00               	movlw	0
  2793  00281E  0100               	movlb	0	; () banked
  2794  002820  6F73               	movwf	_CANisTxReady$2918& (0+255),b
  2795  002822                     l562:
  2796  002822  0100               	movlb	0	; () banked
  2797  002824  5173               	movf	_CANisTxReady$2918& (0+255),w,b
  2798  002826  0012               	return	
  2799  002828                     __end_of_CANisTxReady:
  2800                           	opt stack 0
  2801                           tblptru	equ	0xFF8
  2802                           tblptrh	equ	0xFF7
  2803                           tblptrl	equ	0xFF6
  2804                           tablat	equ	0xFF5
  2805                           postinc0	equ	0xFEE
  2806                           wreg	equ	0xFE8
  2807                           postdec1	equ	0xFE5
  2808                           fsr1l	equ	0xFE1
  2809                           indf2	equ	0xFDF
  2810                           fsr2h	equ	0xFDA
  2811                           fsr2l	equ	0xFD9
  2812                           status	equ	0xFD8
  2813                           
  2814 ;; *************** function _configurazione_iniziale *****************
  2815 ;; Defined at:
  2816 ;;		line 180 in file "newmain.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;		None
  2821 ;; Return value:  Size  Location     Type
  2822 ;;		None               void
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2830 ;;      Params:         0       0       0       0
  2831 ;;      Locals:         0       0       0       0
  2832 ;;      Temps:          0       0       0       0
  2833 ;;      Totals:         0       0       0       0
  2834 ;;Total ram usage:        0 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    6
  2837 ;; This function calls:
  2838 ;;		_CANInitialize
  2839 ;;		_OpenADC
  2840 ;;		_delay_ms
  2841 ;; This function is called by:
  2842 ;;		_main
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text4
  2847  002204                     __ptext4:
  2848                           	opt stack 0
  2849  002204                     _configurazione_iniziale:
  2850                           	opt stack 24
  2851                           
  2852                           ;newmain.c: 181: LATA = 0x00;
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;incstack = 0
  2856  002204  0E00               	movlw	0
  2857  002206  6E89               	movwf	3977,c	;volatile
  2858                           
  2859                           ;newmain.c: 182: TRISA = 0b11111100;
  2860  002208  0EFC               	movlw	252
  2861  00220A  6E92               	movwf	3986,c	;volatile
  2862                           
  2863                           ;newmain.c: 184: LATB = 0x00;
  2864  00220C  0E00               	movlw	0
  2865  00220E  6E8A               	movwf	3978,c	;volatile
  2866                           
  2867                           ;newmain.c: 185: TRISB = 0b11111011;
  2868  002210  0EFB               	movlw	251
  2869  002212  6E93               	movwf	3987,c	;volatile
  2870                           
  2871                           ;newmain.c: 187: LATC = 0x00;
  2872  002214  0E00               	movlw	0
  2873  002216  6E8B               	movwf	3979,c	;volatile
  2874                           
  2875                           ;newmain.c: 188: TRISC = 0x00;
  2876  002218  0E00               	movlw	0
  2877  00221A  6E94               	movwf	3988,c	;volatile
  2878                           
  2879                           ;newmain.c: 190: LATD = 0x00;
  2880  00221C  0E00               	movlw	0
  2881  00221E  6E8C               	movwf	3980,c	;volatile
  2882                           
  2883                           ;newmain.c: 191: TRISD = 0x00;
  2884  002220  0E00               	movlw	0
  2885  002222  6E95               	movwf	3989,c	;volatile
  2886                           
  2887                           ;newmain.c: 193: LATE = 0x00;
  2888  002224  0E00               	movlw	0
  2889  002226  6E8D               	movwf	3981,c	;volatile
  2890                           
  2891                           ;newmain.c: 194: TRISE = 0xFF;
  2892  002228  6896               	setf	3990,c	;volatile
  2893                           
  2894                           ;newmain.c: 197: PORTC = 0xff;
  2895  00222A  6882               	setf	3970,c	;volatile
  2896                           
  2897                           ;newmain.c: 198: delay_ms(100);
  2898  00222C  0E00               	movlw	0
  2899  00222E  0100               	movlb	0	; () banked
  2900  002230  6F82               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2901  002232  0E64               	movlw	100
  2902  002234  6F81               	movwf	delay_ms@value_ms& (0+255),b
  2903  002236  ECB4  F013         	call	_delay_ms	;wreg free
  2904                           
  2905                           ;newmain.c: 199: PORTC = 0x00;
  2906  00223A  0E00               	movlw	0
  2907  00223C  6E82               	movwf	3970,c	;volatile
  2908                           
  2909                           ;newmain.c: 200: delay_ms(100);
  2910  00223E  0E00               	movlw	0
  2911  002240  0100               	movlb	0	; () banked
  2912  002242  6F82               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2913  002244  0E64               	movlw	100
  2914  002246  6F81               	movwf	delay_ms@value_ms& (0+255),b
  2915  002248  ECB4  F013         	call	_delay_ms	;wreg free
  2916                           
  2917                           ;newmain.c: 201: PORTC = 0xff;
  2918  00224C  6882               	setf	3970,c	;volatile
  2919                           
  2920                           ;newmain.c: 202: delay_ms(100);
  2921  00224E  0E00               	movlw	0
  2922  002250  0100               	movlb	0	; () banked
  2923  002252  6F82               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2924  002254  0E64               	movlw	100
  2925  002256  6F81               	movwf	delay_ms@value_ms& (0+255),b
  2926  002258  ECB4  F013         	call	_delay_ms	;wreg free
  2927                           
  2928                           ;newmain.c: 203: PORTC = 0x00;
  2929  00225C  0E00               	movlw	0
  2930  00225E  6E82               	movwf	3970,c	;volatile
  2931                           
  2932                           ;newmain.c: 204: delay_ms(100);
  2933  002260  0E00               	movlw	0
  2934  002262  0100               	movlb	0	; () banked
  2935  002264  6F82               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2936  002266  0E64               	movlw	100
  2937  002268  6F81               	movwf	delay_ms@value_ms& (0+255),b
  2938  00226A  ECB4  F013         	call	_delay_ms	;wreg free
  2939                           
  2940                           ;newmain.c: 206: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SA
      +                          MPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2941  00226E  0E06               	movlw	6
  2942  002270  0100               	movlb	0	; () banked
  2943  002272  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2944  002274  0E05               	movlw	5
  2945  002276  0100               	movlb	0	; () banked
  2946  002278  6F82               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2947  00227A  0E01               	movlw	1
  2948  00227C  0100               	movlb	0	; () banked
  2949  00227E  6F83               	movwf	CANInitialize@SJW& (0+255),b
  2950  002280  0E03               	movlw	3
  2951  002282  0100               	movlb	0	; () banked
  2952  002284  6F84               	movwf	CANInitialize@BRP& (0+255),b
  2953  002286  0E9D               	movlw	157
  2954  002288  0100               	movlb	0	; () banked
  2955  00228A  6F85               	movwf	CANInitialize@flags& (0+255),b
  2956  00228C  0E04               	movlw	4
  2957  00228E  EC1F  F010         	call	_CANInitialize
  2958                           
  2959                           ;newmain.c: 207: RCONbits.IPEN = 1;
  2960  002292  8ED0               	bsf	4048,7,c	;volatile
  2961                           
  2962                           ;newmain.c: 210: PIR3bits.RXB1IF = 0;
  2963  002294  92A4               	bcf	4004,1,c	;volatile
  2964                           
  2965                           ;newmain.c: 211: PIR3bits.RXB0IF = 0;
  2966  002296  90A4               	bcf	4004,0,c	;volatile
  2967                           
  2968                           ;newmain.c: 212: INTCONbits.TMR0IF = 0;
  2969  002298  94F2               	bcf	intcon,2,c	;volatile
  2970                           
  2971                           ;newmain.c: 213: PIR2bits.TMR3IF = 0;
  2972  00229A  92A1               	bcf	4001,1,c	;volatile
  2973                           
  2974                           ;newmain.c: 216: IPR3bits.RXB1IP = 0;
  2975  00229C  92A5               	bcf	4005,1,c	;volatile
  2976                           
  2977                           ;newmain.c: 217: IPR3bits.RXB0IP = 0;
  2978  00229E  90A5               	bcf	4005,0,c	;volatile
  2979                           
  2980                           ;newmain.c: 218: INTCON2bits.TMR0IP = 1;
  2981  0022A0  84F1               	bsf	intcon2,2,c	;volatile
  2982                           
  2983                           ;newmain.c: 219: IPR2bits.TMR3IP = 0;
  2984  0022A2  92A2               	bcf	4002,1,c	;volatile
  2985                           
  2986                           ;newmain.c: 222: PIE3bits.RXB1IE = 1;
  2987  0022A4  82A3               	bsf	4003,1,c	;volatile
  2988                           
  2989                           ;newmain.c: 223: PIE3bits.RXB0IE = 1;
  2990  0022A6  80A3               	bsf	4003,0,c	;volatile
  2991                           
  2992                           ;newmain.c: 224: INTCONbits.TMR0IE = 1;
  2993  0022A8  8AF2               	bsf	intcon,5,c	;volatile
  2994                           
  2995                           ;newmain.c: 225: PIE2bits.TMR3IE = 1;
  2996  0022AA  82A0               	bsf	4000,1,c	;volatile
  2997                           
  2998                           ;newmain.c: 226: INTCONbits.GIEH = 1;
  2999  0022AC  8EF2               	bsf	intcon,7,c	;volatile
  3000                           
  3001                           ;newmain.c: 227: INTCONbits.GIEL = 1;
  3002  0022AE  8CF2               	bsf	intcon,6,c	;volatile
  3003                           
  3004                           ;newmain.c: 230: PORTC = 0xff;
  3005  0022B0  6882               	setf	3970,c	;volatile
  3006                           
  3007                           ;newmain.c: 231: delay_ms(100);
  3008  0022B2  0E00               	movlw	0
  3009  0022B4  0100               	movlb	0	; () banked
  3010  0022B6  6F82               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3011  0022B8  0E64               	movlw	100
  3012  0022BA  6F81               	movwf	delay_ms@value_ms& (0+255),b
  3013  0022BC  ECB4  F013         	call	_delay_ms	;wreg free
  3014                           
  3015                           ;newmain.c: 232: PORTC = 0x00;
  3016  0022C0  0E00               	movlw	0
  3017  0022C2  6E82               	movwf	3970,c	;volatile
  3018                           
  3019                           ;newmain.c: 235: T0CON = 0x80;
  3020  0022C4  0E80               	movlw	128
  3021  0022C6  6ED5               	movwf	4053,c	;volatile
  3022                           
  3023                           ;newmain.c: 238: TMR3H = 0x63;
  3024  0022C8  0E63               	movlw	99
  3025  0022CA  6EB3               	movwf	4019,c	;volatile
  3026                           
  3027                           ;newmain.c: 239: TMR3L = 0xC0;
  3028  0022CC  0EC0               	movlw	192
  3029  0022CE  6EB2               	movwf	4018,c	;volatile
  3030                           
  3031                           ;newmain.c: 240: T3CON = 0x01;
  3032  0022D0  0E01               	movlw	1
  3033  0022D2  6EB1               	movwf	4017,c	;volatile
  3034                           
  3035                           ;newmain.c: 241: OpenADC(0b11011111 & 0b11111111 & 0b11111101, 0b10001111 & 0b11111100 &
      +                           0b01111111, 0b11111101);
  3036  0022D4  0E0C               	movlw	12
  3037  0022D6  0100               	movlb	0	; () banked
  3038  0022D8  6F73               	movwf	OpenADC@config2& (0+255),b
  3039  0022DA  0EFD               	movlw	253
  3040  0022DC  0100               	movlb	0	; () banked
  3041  0022DE  6F74               	movwf	OpenADC@portconfig& (0+255),b
  3042  0022E0  0EDD               	movlw	221
  3043  0022E2  EC8A  F012         	call	_OpenADC
  3044  0022E6  0012               	return		;funcret
  3045  0022E8                     __end_of_configurazione_iniziale:
  3046                           	opt stack 0
  3047                           tblptru	equ	0xFF8
  3048                           tblptrh	equ	0xFF7
  3049                           tblptrl	equ	0xFF6
  3050                           tablat	equ	0xFF5
  3051                           intcon	equ	0xFF2
  3052                           intcon2	equ	0xFF1
  3053                           postinc0	equ	0xFEE
  3054                           wreg	equ	0xFE8
  3055                           postdec1	equ	0xFE5
  3056                           fsr1l	equ	0xFE1
  3057                           indf2	equ	0xFDF
  3058                           fsr2h	equ	0xFDA
  3059                           fsr2l	equ	0xFD9
  3060                           status	equ	0xFD8
  3061                           
  3062 ;; *************** function _delay_ms *****************
  3063 ;; Defined at:
  3064 ;;		line 61 in file "C:/Asus WebStorage/simone.righetti97@gmail.com/MySyncFolder/Tesina/LaurTec_PIC_libraries_v_3.3.0/sr
      +c\delay.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  value_ms        2   33[BANK0 ] unsigned int 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;		None               void
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3078 ;;      Params:         0       2       0       0
  3079 ;;      Locals:         0       0       0       0
  3080 ;;      Temps:          0       0       0       0
  3081 ;;      Totals:         0       2       0       0
  3082 ;;Total ram usage:        2 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    5
  3085 ;; This function calls:
  3086 ;;		___wmul
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;;		_configurazione_iniziale
  3090 ;;		_delay_s
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text5
  3095  002768                     __ptext5:
  3096                           	opt stack 0
  3097  002768                     _delay_ms:
  3098                           	opt stack 25
  3099                           
  3100                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3101                           
  3102                           ;incstack = 0
  3103  002768  C0C4  F07B         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3104  00276C  0100               	movlb	0	; () banked
  3105  00276E  6B7C               	clrf	(___wmul@multiplier+1)& (0+255),b
  3106  002770  C081  F07D         	movff	delay_ms@value_ms,___wmul@multiplicand
  3107  002774  C082  F07E         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3108  002778  ECD1  F013         	call	___wmul	;wreg free
  3109  00277C  C07B  F0C6         	movff	?___wmul,_clock_counter_reference	;volatile
  3110  002780  C07C  F0C7         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3111                           
  3112                           ;src\delay.c: 75: while (clock_counter_reference) {
  3113  002784  D007               	goto	l575
  3114  002786                     l3300:
  3115                           
  3116                           ;src\delay.c: 85: _delay(240);
  3117  002786  0E50               	movlw	80
  3118  002788                     u4347:
  3119  002788  2EE8               	decfsz	wreg,f,c
  3120  00278A  D7FE               	goto	u4347
  3121                           
  3122                           ;src\delay.c: 88: clock_counter_reference--;
  3123  00278C  0100               	movlb	0	; () banked
  3124  00278E  07C6               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3125  002790  A0D8               	btfss	status,0,c
  3126  002792  07C7               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3127  002794                     l575:
  3128  002794  0100               	movlb	0	; () banked
  3129  002796  51C6               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3130  002798  0100               	movlb	0	; () banked
  3131  00279A  11C7               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3132  00279C  B4D8               	btfsc	status,2,c
  3133  00279E  0012               	return	
  3134  0027A0  D7F2               	goto	l3300
  3135  0027A2                     __end_of_delay_ms:
  3136                           	opt stack 0
  3137                           tblptru	equ	0xFF8
  3138                           tblptrh	equ	0xFF7
  3139                           tblptrl	equ	0xFF6
  3140                           tablat	equ	0xFF5
  3141                           intcon	equ	0xFF2
  3142                           intcon2	equ	0xFF1
  3143                           postinc0	equ	0xFEE
  3144                           wreg	equ	0xFE8
  3145                           postdec1	equ	0xFE5
  3146                           fsr1l	equ	0xFE1
  3147                           indf2	equ	0xFDF
  3148                           fsr2h	equ	0xFDA
  3149                           fsr2l	equ	0xFD9
  3150                           status	equ	0xFD8
  3151                           
  3152 ;; *************** function ___wmul *****************
  3153 ;; Defined at:
  3154 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  multiplier      2   27[BANK0 ] unsigned int 
  3157 ;;  multiplicand    2   29[BANK0 ] unsigned int 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  product         2   31[BANK0 ] unsigned int 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  2   27[BANK0 ] unsigned int 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0, prodl, prodh
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3169 ;;      Params:         0       4       0       0
  3170 ;;      Locals:         0       2       0       0
  3171 ;;      Temps:          0       0       0       0
  3172 ;;      Totals:         0       6       0       0
  3173 ;;Total ram usage:        6 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    4
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_delay_ms
  3180 ;;		_main
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text6
  3185  0027A2                     __ptext6:
  3186                           	opt stack 0
  3187  0027A2                     ___wmul:
  3188                           	opt stack 25
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;incstack = 0
  3192  0027A2  0100               	movlb	0	; () banked
  3193  0027A4  517B               	movf	___wmul@multiplier& (0+255),w,b
  3194  0027A6  0100               	movlb	0	; () banked
  3195  0027A8  037D               	mulwf	___wmul@multiplicand& (0+255),b
  3196  0027AA  CFF3 F07F          	movff	prodl,___wmul@product
  3197  0027AE  CFF4 F080          	movff	prodh,___wmul@product+1
  3198  0027B2  0100               	movlb	0	; () banked
  3199  0027B4  517B               	movf	___wmul@multiplier& (0+255),w,b
  3200  0027B6  0100               	movlb	0	; () banked
  3201  0027B8  037E               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3202  0027BA  50F3               	movf	prodl,w,c
  3203  0027BC  0100               	movlb	0	; () banked
  3204  0027BE  2780               	addwf	(___wmul@product+1)& (0+255),f,b
  3205  0027C0  0100               	movlb	0	; () banked
  3206  0027C2  517C               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3207  0027C4  0100               	movlb	0	; () banked
  3208  0027C6  037D               	mulwf	___wmul@multiplicand& (0+255),b
  3209  0027C8  50F3               	movf	prodl,w,c
  3210  0027CA  0100               	movlb	0	; () banked
  3211  0027CC  2780               	addwf	(___wmul@product+1)& (0+255),f,b
  3212                           
  3213                           ; BSR set to: 0
  3214  0027CE  C07F  F07B         	movff	___wmul@product,?___wmul
  3215  0027D2  C080  F07C         	movff	___wmul@product+1,?___wmul+1
  3216  0027D6  0012               	return	
  3217  0027D8                     __end_of___wmul:
  3218                           	opt stack 0
  3219                           tblptru	equ	0xFF8
  3220                           tblptrh	equ	0xFF7
  3221                           tblptrl	equ	0xFF6
  3222                           tablat	equ	0xFF5
  3223                           prodh	equ	0xFF4
  3224                           prodl	equ	0xFF3
  3225                           intcon	equ	0xFF2
  3226                           intcon2	equ	0xFF1
  3227                           postinc0	equ	0xFEE
  3228                           wreg	equ	0xFE8
  3229                           postdec1	equ	0xFE5
  3230                           fsr1l	equ	0xFE1
  3231                           indf2	equ	0xFDF
  3232                           fsr2h	equ	0xFDA
  3233                           fsr2l	equ	0xFD9
  3234                           status	equ	0xFD8
  3235                           
  3236 ;; *************** function _OpenADC *****************
  3237 ;; Defined at:
  3238 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcopen.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  config          1    wreg     unsigned char 
  3241 ;;  config2         1   19[BANK0 ] unsigned char 
  3242 ;;  portconfig      1   20[BANK0 ] unsigned char 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  config          1   23[BANK0 ] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;		None               void
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3254 ;;      Params:         0       2       0       0
  3255 ;;      Locals:         0       1       0       0
  3256 ;;      Temps:          0       2       0       0
  3257 ;;      Totals:         0       5       0       0
  3258 ;;Total ram usage:        5 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    4
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_configurazione_iniziale
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           	psect	text7
  3269  002514                     __ptext7:
  3270                           	opt stack 0
  3271  002514                     _OpenADC:
  3272                           	opt stack 25
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;incstack = 0
  3276                           ;OpenADC@config stored from wreg
  3277  002514  0100               	movlb	0	; () banked
  3278  002516  6F77               	movwf	OpenADC@config& (0+255),b
  3279  002518  0E00               	movlw	0
  3280  00251A  6EC2               	movwf	4034,c	;volatile
  3281  00251C  0E00               	movlw	0
  3282  00251E  6EC0               	movwf	4032,c	;volatile
  3283  002520  0100               	movlb	0	; () banked
  3284  002522  90D8               	bcf	status,0,c
  3285  002524  3173               	rrcf	OpenADC@config2& (0+255),w,b
  3286  002526  0B3C               	andlw	60
  3287  002528  6EC2               	movwf	4034,c	;volatile
  3288                           
  3289                           ; BSR set to: 0
  3290  00252A  C073  F075         	movff	OpenADC@config2,??_OpenADC
  3291  00252E  0100               	movlb	0	; () banked
  3292  002530  3B75               	swapf	??_OpenADC& (0+255),f,b
  3293  002532  0EF0               	movlw	240
  3294  002534  1775               	andwf	??_OpenADC& (0+255),f,b
  3295  002536  0E30               	movlw	48
  3296  002538  0100               	movlb	0	; () banked
  3297  00253A  1775               	andwf	??_OpenADC& (0+255),f,b
  3298  00253C  0100               	movlb	0	; () banked
  3299  00253E  5174               	movf	OpenADC@portconfig& (0+255),w,b
  3300  002540  0B0F               	andlw	15
  3301  002542  0100               	movlb	0	; () banked
  3302  002544  1175               	iorwf	??_OpenADC& (0+255),w,b
  3303  002546  6EC1               	movwf	4033,c	;volatile
  3304                           
  3305                           ; BSR set to: 0
  3306  002548  C077  F075         	movff	OpenADC@config,??_OpenADC
  3307  00254C  0100               	movlb	0	; () banked
  3308  00254E  90D8               	bcf	status,0,c
  3309  002550  3775               	rlcf	??_OpenADC& (0+255),f,b
  3310  002552  0100               	movlb	0	; () banked
  3311  002554  90D8               	bcf	status,0,c
  3312  002556  3775               	rlcf	??_OpenADC& (0+255),f,b
  3313  002558  0E38               	movlw	56
  3314  00255A  0100               	movlb	0	; () banked
  3315  00255C  1775               	andwf	??_OpenADC& (0+255),f,b
  3316  00255E  C077  F076         	movff	OpenADC@config,??_OpenADC+1
  3317  002562  0100               	movlb	0	; () banked
  3318  002564  3B76               	swapf	(??_OpenADC+1)& (0+255),f,b
  3319  002566  0E0F               	movlw	15
  3320  002568  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  3321  00256A  0E07               	movlw	7
  3322  00256C  0100               	movlb	0	; () banked
  3323  00256E  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  3324  002570  0100               	movlb	0	; () banked
  3325  002572  5177               	movf	OpenADC@config& (0+255),w,b
  3326  002574  0B80               	andlw	128
  3327  002576  0100               	movlb	0	; () banked
  3328  002578  1176               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3329  00257A  0100               	movlb	0	; () banked
  3330  00257C  1175               	iorwf	??_OpenADC& (0+255),w,b
  3331  00257E  6EC0               	movwf	4032,c	;volatile
  3332                           
  3333                           ; BSR set to: 0
  3334  002580  0100               	movlb	0	; () banked
  3335  002582  AF73               	btfss	OpenADC@config2& (0+255),7,b
  3336  002584  D003               	goto	l707
  3337                           
  3338                           ; BSR set to: 0
  3339  002586  9C9E               	bcf	3998,6,c	;volatile
  3340  002588  8C9D               	bsf	3997,6,c	;volatile
  3341  00258A  8CF2               	bsf	intcon,6,c	;volatile
  3342  00258C                     l707:
  3343                           
  3344                           ; BSR set to: 0
  3345  00258C  80C2               	bsf	4034,0,c	;volatile
  3346                           
  3347                           ; BSR set to: 0
  3348  00258E  0012               	return		;funcret
  3349  002590                     __end_of_OpenADC:
  3350                           	opt stack 0
  3351                           tblptru	equ	0xFF8
  3352                           tblptrh	equ	0xFF7
  3353                           tblptrl	equ	0xFF6
  3354                           tablat	equ	0xFF5
  3355                           prodh	equ	0xFF4
  3356                           prodl	equ	0xFF3
  3357                           intcon	equ	0xFF2
  3358                           intcon2	equ	0xFF1
  3359                           postinc0	equ	0xFEE
  3360                           wreg	equ	0xFE8
  3361                           postdec1	equ	0xFE5
  3362                           fsr1l	equ	0xFE1
  3363                           indf2	equ	0xFDF
  3364                           fsr2h	equ	0xFDA
  3365                           fsr2l	equ	0xFD9
  3366                           status	equ	0xFD8
  3367                           
  3368 ;; *************** function _CANInitialize *****************
  3369 ;; Defined at:
  3370 ;;		line 218 in file "C:/Asus WebStorage/simone.righetti97@gmail.com/MySyncFolder/Tesina/LaurTec_PIC_libraries_v_3.3.0/i
      +nc\CANlib.h"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  propSeg         1    wreg     unsigned char 
  3373 ;;  phaseSeg1       1   33[BANK0 ] unsigned char 
  3374 ;;  phaseSeg2       1   34[BANK0 ] unsigned char 
  3375 ;;  SJW             1   35[BANK0 ] unsigned char 
  3376 ;;  BRP             1   36[BANK0 ] unsigned char 
  3377 ;;  flags           1   37[BANK0 ] enum E16844
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  propSeg         1   42[BANK0 ] unsigned char 
  3380 ;;  FilterConfig    1   44[BANK0 ] unsigned char 
  3381 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;		None               void
  3384 ;; Registers used:
  3385 ;;		wreg, status,2, status,0, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3391 ;;      Params:         0       5       0       0
  3392 ;;      Locals:         0       3       0       0
  3393 ;;      Temps:          0       4       0       0
  3394 ;;      Totals:         0      12       0       0
  3395 ;;Total ram usage:       12 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    5
  3398 ;; This function calls:
  3399 ;;		_CANOperationMode
  3400 ;;		_CANSetFilter
  3401 ;;		_CANSetMask
  3402 ;; This function is called by:
  3403 ;;		_configurazione_iniziale
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text8
  3408  00203E                     __ptext8:
  3409                           	opt stack 0
  3410  00203E                     _CANInitialize:
  3411                           	opt stack 24
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;incstack = 0
  3415                           ;CANInitialize@propSeg stored from wreg
  3416  00203E  0100               	movlb	0	; () banked
  3417  002040  6F8A               	movwf	CANInitialize@propSeg& (0+255),b
  3418                           
  3419                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3420                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3421                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3422  002042  0E80               	movlw	128
  3423  002044  EC14  F014         	call	_CANOperationMode
  3424                           
  3425                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3426  002048  0E00               	movlw	0
  3427  00204A  6E70               	movwf	3952,c	;volatile
  3428                           
  3429                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3430  00204C  0E00               	movlw	0
  3431  00204E  6E71               	movwf	3953,c	;volatile
  3432                           
  3433                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3434  002050  0E00               	movlw	0
  3435  002052  6E72               	movwf	3954,c	;volatile
  3436                           
  3437                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3438  002054  0100               	movlb	0	; () banked
  3439  002056  4183               	rrncf	CANInitialize@SJW& (0+255),w,b
  3440  002058  42E8               	rrncf	wreg,f,c
  3441  00205A  0BC0               	andlw	192
  3442  00205C  0100               	movlb	0	; () banked
  3443  00205E  6F83               	movwf	CANInitialize@SJW& (0+255),b
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3447  002060  0100               	movlb	0	; () banked
  3448  002062  5183               	movf	CANInitialize@SJW& (0+255),w,b
  3449  002064  1270               	iorwf	3952,f,c	;volatile
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3453  002066  0100               	movlb	0	; () banked
  3454  002068  5184               	movf	CANInitialize@BRP& (0+255),w,b
  3455  00206A  1270               	iorwf	3952,f,c	;volatile
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3459  00206C  0100               	movlb	0	; () banked
  3460  00206E  518A               	movf	CANInitialize@propSeg& (0+255),w,b
  3461  002070  1271               	iorwf	3953,f,c	;volatile
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3465  002072  0100               	movlb	0	; () banked
  3466  002074  3981               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3467  002076  42E8               	rrncf	wreg,f,c
  3468  002078  0BF8               	andlw	248
  3469  00207A  0100               	movlb	0	; () banked
  3470  00207C  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3474  00207E  0100               	movlb	0	; () banked
  3475  002080  5181               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3476  002082  1271               	iorwf	3953,f,c	;volatile
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3480  002084  0100               	movlb	0	; () banked
  3481  002086  A585               	btfss	CANInitialize@flags& (0+255),2,b
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3485  002088  8C71               	bsf	3953,6,c	;volatile
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3489  00208A  0100               	movlb	0	; () banked
  3490  00208C  B185               	btfsc	CANInitialize@flags& (0+255),0,b
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3494  00208E  8E71               	bsf	3953,7,c	;volatile
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3498                           
  3499                           ; BSR set to: 0
  3500  002090  0100               	movlb	0	; () banked
  3501  002092  5182               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3502  002094  1272               	iorwf	3954,f,c	;volatile
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3506  002096  0100               	movlb	0	; () banked
  3507  002098  B385               	btfsc	CANInitialize@flags& (0+255),1,b
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3511  00209A  8C72               	bsf	3954,6,c	;volatile
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3515                           
  3516                           ; BSR set to: 0
  3517  00209C  0100               	movlb	0	; () banked
  3518  00209E  5185               	movf	CANInitialize@flags& (0+255),w,b
  3519  0020A0  0B60               	andlw	96
  3520  0020A2  6E60               	movwf	3936,c	;volatile
  3521                           
  3522                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3523  0020A4  0100               	movlb	0	; () banked
  3524  0020A6  5185               	movf	CANInitialize@flags& (0+255),w,b
  3525  0020A8  0B10               	andlw	16
  3526  0020AA  0AFF               	xorlw	255
  3527  0020AC  B4D8               	btfsc	status,2,c
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3531  0020AE  8460               	bsf	3936,2,c	;volatile
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3535  0020B0  CF60 FF50          	movff	3936,3920	;volatile
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3539  0020B4  0E00               	movlw	0
  3540  0020B6  0100               	movlb	0	; () banked
  3541  0020B8  6F73               	movwf	CANSetMask@mask& (0+255),b
  3542  0020BA  0E00               	movlw	0
  3543  0020BC  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  3544  0020BE  0E00               	movlw	0
  3545  0020C0  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3546  0020C2  0E00               	movlw	0
  3547  0020C4  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3548  0020C6  0EF7               	movlw	247
  3549  0020C8  0100               	movlb	0	; () banked
  3550  0020CA  6F77               	movwf	CANSetMask@type& (0+255),b
  3551  0020CC  0E01               	movlw	1
  3552  0020CE  EC84  F00C         	call	_CANSetMask
  3553                           
  3554                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3555  0020D2  0E00               	movlw	0
  3556  0020D4  0100               	movlb	0	; () banked
  3557  0020D6  6F73               	movwf	CANSetMask@mask& (0+255),b
  3558  0020D8  0E00               	movlw	0
  3559  0020DA  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  3560  0020DC  0E00               	movlw	0
  3561  0020DE  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3562  0020E0  0E00               	movlw	0
  3563  0020E2  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3564  0020E4  0EF7               	movlw	247
  3565  0020E6  0100               	movlb	0	; () banked
  3566  0020E8  6F77               	movwf	CANSetMask@type& (0+255),b
  3567  0020EA  0E02               	movlw	2
  3568  0020EC  EC84  F00C         	call	_CANSetMask
  3569                           
  3570                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3571  0020F0  D00F               	goto	l3048
  3572  0020F2                     l3042:
  3573                           
  3574                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3575  0020F2  0EF7               	movlw	247
  3576  0020F4  0100               	movlb	0	; () banked
  3577  0020F6  6F8B               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3578  0020F8  D007               	goto	l3044
  3579  0020FA                     l364:
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3583  0020FA  0100               	movlb	0	; () banked
  3584  0020FC  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3585                           
  3586                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3587  0020FE  0100               	movlb	0	; () banked
  3588  002100  698C               	setf	CANInitialize@FilterConfig2& (0+255),b
  3589                           
  3590                           ;inc\CANlib.h: 273: break;
  3591  002102  D028               	goto	l3050
  3592  002104                     l365:
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3596  002104  0100               	movlb	0	; () banked
  3597  002106  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3598  002108                     l3044:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3602  002108  0EF7               	movlw	247
  3603  00210A  0100               	movlb	0	; () banked
  3604  00210C  6F8C               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;inc\CANlib.h: 278: }
  3608                           
  3609                           ;inc\CANlib.h: 277: break;
  3610  00210E  D022               	goto	l3050
  3611  002110                     l3048:
  3612  002110  0E9F               	movlw	159
  3613  002112  0100               	movlb	0	; () banked
  3614  002114  6F86               	movwf	??_CANInitialize& (0+255),b
  3615  002116  0EFF               	movlw	255
  3616  002118  0100               	movlb	0	; () banked
  3617  00211A  6F87               	movwf	(??_CANInitialize+1)& (0+255),b
  3618  00211C  0100               	movlb	0	; () banked
  3619  00211E  5185               	movf	CANInitialize@flags& (0+255),w,b
  3620  002120  0B60               	andlw	96
  3621  002122  0100               	movlb	0	; () banked
  3622  002124  6F88               	movwf	(??_CANInitialize+2)& (0+255),b
  3623  002126  6B89               	clrf	(??_CANInitialize+3)& (0+255),b
  3624  002128  0100               	movlb	0	; () banked
  3625  00212A  5186               	movf	??_CANInitialize& (0+255),w,b
  3626  00212C  0100               	movlb	0	; () banked
  3627  00212E  1388               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3628  002130  0100               	movlb	0	; () banked
  3629  002132  5187               	movf	(??_CANInitialize+1)& (0+255),w,b
  3630  002134  0100               	movlb	0	; () banked
  3631  002136  1389               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3632                           
  3633                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3634                           ; Switch size 1, requested type "space"
  3635                           ; Number of cases is 1, Range of values is 0 to 0
  3636                           ; switch strategies available:
  3637                           ; Name         Instructions Cycles
  3638                           ; simple_byte            4     3 (average)
  3639                           ;	Chosen strategy is simple_byte
  3640  002138  0100               	movlb	0	; () banked
  3641  00213A  5189               	movf	(??_CANInitialize+3)& (0+255),w,b
  3642  00213C  0A00               	xorlw	0	; case 0
  3643  00213E  A4D8               	btfss	status,2,c
  3644  002140  D7E1               	goto	l365
  3645                           
  3646                           ; BSR set to: 0
  3647                           ; Switch size 1, requested type "space"
  3648                           ; Number of cases is 2, Range of values is 191 to 223
  3649                           ; switch strategies available:
  3650                           ; Name         Instructions Cycles
  3651                           ; simple_byte            7     4 (average)
  3652                           ;	Chosen strategy is simple_byte
  3653  002142  0100               	movlb	0	; () banked
  3654  002144  5188               	movf	(??_CANInitialize+2)& (0+255),w,b
  3655  002146  0ABF               	xorlw	191	; case 191
  3656  002148  B4D8               	btfsc	status,2,c
  3657  00214A  D7D7               	goto	l364
  3658  00214C  0A60               	xorlw	96	; case 223
  3659  00214E  B4D8               	btfsc	status,2,c
  3660  002150  D7D0               	goto	l3042
  3661  002152  D7D8               	goto	l365
  3662  002154                     l3050:
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3666  002154  0E00               	movlw	0
  3667  002156  0100               	movlb	0	; () banked
  3668  002158  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3669  00215A  0E00               	movlw	0
  3670  00215C  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3671  00215E  0E00               	movlw	0
  3672  002160  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3673  002162  0E00               	movlw	0
  3674  002164  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3675  002166  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3676  00216A  0E00               	movlw	0
  3677  00216C  ECB5  F000         	call	_CANSetFilter
  3678                           
  3679                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3680  002170  0E00               	movlw	0
  3681  002172  0100               	movlb	0	; () banked
  3682  002174  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3683  002176  0E00               	movlw	0
  3684  002178  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3685  00217A  0E00               	movlw	0
  3686  00217C  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3687  00217E  0E00               	movlw	0
  3688  002180  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3689  002182  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3690  002186  0E01               	movlw	1
  3691  002188  ECB5  F000         	call	_CANSetFilter
  3692                           
  3693                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3694  00218C  0E00               	movlw	0
  3695  00218E  0100               	movlb	0	; () banked
  3696  002190  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3697  002192  0E00               	movlw	0
  3698  002194  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3699  002196  0E00               	movlw	0
  3700  002198  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3701  00219A  0E00               	movlw	0
  3702  00219C  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3703  00219E  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3704  0021A2  0E02               	movlw	2
  3705  0021A4  ECB5  F000         	call	_CANSetFilter
  3706                           
  3707                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3708  0021A8  0E00               	movlw	0
  3709  0021AA  0100               	movlb	0	; () banked
  3710  0021AC  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3711  0021AE  0E00               	movlw	0
  3712  0021B0  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3713  0021B2  0E00               	movlw	0
  3714  0021B4  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3715  0021B6  0E00               	movlw	0
  3716  0021B8  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3717  0021BA  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3718  0021BE  0E03               	movlw	3
  3719  0021C0  ECB5  F000         	call	_CANSetFilter
  3720                           
  3721                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3722  0021C4  0E00               	movlw	0
  3723  0021C6  0100               	movlb	0	; () banked
  3724  0021C8  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3725  0021CA  0E00               	movlw	0
  3726  0021CC  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3727  0021CE  0E00               	movlw	0
  3728  0021D0  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3729  0021D2  0E00               	movlw	0
  3730  0021D4  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3731  0021D6  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3732  0021DA  0E04               	movlw	4
  3733  0021DC  ECB5  F000         	call	_CANSetFilter
  3734                           
  3735                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3736  0021E0  0E00               	movlw	0
  3737  0021E2  0100               	movlb	0	; () banked
  3738  0021E4  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3739  0021E6  0E00               	movlw	0
  3740  0021E8  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3741  0021EA  0E00               	movlw	0
  3742  0021EC  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3743  0021EE  0E00               	movlw	0
  3744  0021F0  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3745  0021F2  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3746  0021F6  0E05               	movlw	5
  3747  0021F8  ECB5  F000         	call	_CANSetFilter
  3748                           
  3749                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3750  0021FC  0E00               	movlw	0
  3751  0021FE  EC14  F014         	call	_CANOperationMode
  3752  002202  0012               	return		;funcret
  3753  002204                     __end_of_CANInitialize:
  3754                           	opt stack 0
  3755                           tblptru	equ	0xFF8
  3756                           tblptrh	equ	0xFF7
  3757                           tblptrl	equ	0xFF6
  3758                           tablat	equ	0xFF5
  3759                           prodh	equ	0xFF4
  3760                           prodl	equ	0xFF3
  3761                           intcon	equ	0xFF2
  3762                           intcon2	equ	0xFF1
  3763                           postinc0	equ	0xFEE
  3764                           wreg	equ	0xFE8
  3765                           postdec1	equ	0xFE5
  3766                           fsr1l	equ	0xFE1
  3767                           indf2	equ	0xFDF
  3768                           fsr2h	equ	0xFDA
  3769                           fsr2l	equ	0xFD9
  3770                           status	equ	0xFD8
  3771                           
  3772 ;; *************** function _CANSetMask *****************
  3773 ;; Defined at:
  3774 ;;		line 640 in file "C:/Asus WebStorage/simone.righetti97@gmail.com/MySyncFolder/Tesina/LaurTec_PIC_libraries_v_3.3.0/i
      +nc\CANlib.h"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;  numBuffer       1    wreg     enum E16878
  3777 ;;  mask            4   19[BANK0 ] unsigned long 
  3778 ;;  type            1   23[BANK0 ] enum E16844
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;  numBuffer       1   28[BANK0 ] enum E16878
  3781 ;;  tamp            4   29[BANK0 ] unsigned long 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;		None               void
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3791 ;;      Params:         0       5       0       0
  3792 ;;      Locals:         0       5       0       0
  3793 ;;      Temps:          0       4       0       0
  3794 ;;      Totals:         0      14       0       0
  3795 ;;Total ram usage:       14 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    4
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_CANInitialize
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text9
  3806  001908                     __ptext9:
  3807                           	opt stack 0
  3808  001908                     _CANSetMask:
  3809                           	opt stack 24
  3810                           
  3811                           ;incstack = 0
  3812                           ;CANSetMask@numBuffer stored from wreg
  3813  001908  0100               	movlb	0	; () banked
  3814  00190A  6F7C               	movwf	CANSetMask@numBuffer& (0+255),b
  3815                           
  3816                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3817  00190C  0100               	movlb	0	; () banked
  3818  00190E  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  3819  001910  A4D8               	btfss	status,2,c
  3820  001912  D056               	goto	l2606
  3821                           
  3822                           ; BSR set to: 0
  3823  001914  0100               	movlb	0	; () banked
  3824  001916  2977               	incf	CANSetMask@type& (0+255),w,b
  3825  001918  A4D8               	btfss	status,2,c
  3826  00191A  D052               	goto	l2606
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;inc\CANlib.h: 644: {
  3830                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3831  00191C  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3832  001920  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3833  001924  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3834  001928  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3835  00192C  0E04               	movlw	4
  3836  00192E  D006               	goto	u2190
  3837  001930                     u2195:
  3838  001930  0100               	movlb	0	; () banked
  3839  001932  90D8               	bcf	status,0,c
  3840  001934  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3841  001936  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3842  001938  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3843  00193A  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3844  00193C                     u2190:
  3845  00193C  2EE8               	decfsz	wreg,f,c
  3846  00193E  D7F8               	goto	u2195
  3847  001940  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3848  001944  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3849  001948  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3850  00194C  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3854  001950  0100               	movlb	0	; () banked
  3855  001952  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3856  001954  0100               	movlb	0	; () banked
  3857  001956  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3858  001958  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3859  00195A  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3860  00195C  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3864  00195E  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3868  001962  0E07               	movlw	7
  3869  001964  0100               	movlb	0	; () banked
  3870  001966  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3871  001968  0100               	movlb	0	; () banked
  3872  00196A  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3873  00196C  0E00               	movlw	0
  3874  00196E  0100               	movlb	0	; () banked
  3875  001970  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3876  001972  0100               	movlb	0	; () banked
  3877  001974  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3878  001976  0E00               	movlw	0
  3879  001978  0100               	movlb	0	; () banked
  3880  00197A  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3881  00197C  0100               	movlb	0	; () banked
  3882  00197E  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3883  001980  0E00               	movlw	0
  3884  001982  0100               	movlb	0	; () banked
  3885  001984  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3886  001986  0100               	movlb	0	; () banked
  3887  001988  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3891  00198A  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3892  00198E  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3893  001992  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3894  001996  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3895  00199A  0E05               	movlw	5
  3896  00199C                     u2205:
  3897  00199C  90D8               	bcf	status,0,c
  3898  00199E  0100               	movlb	0	; () banked
  3899  0019A0  3778               	rlcf	??_CANSetMask& (0+255),f,b
  3900  0019A2  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3901  0019A4  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3902  0019A6  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3903  0019A8  2EE8               	decfsz	wreg,f,c
  3904  0019AA  D7F8               	goto	u2205
  3905  0019AC  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3906  0019B0  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3907  0019B4  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3908  0019B8  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3912  0019BC  C07D  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3913  0019C0                     l2606:
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;inc\CANlib.h: 652: }
  3917                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3918  0019C0  0E02               	movlw	2
  3919  0019C2  0100               	movlb	0	; () banked
  3920  0019C4  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3921  0019C6  A4D8               	btfss	status,2,c
  3922  0019C8  D056               	goto	l2622
  3923                           
  3924                           ; BSR set to: 0
  3925  0019CA  0100               	movlb	0	; () banked
  3926  0019CC  2977               	incf	CANSetMask@type& (0+255),w,b
  3927  0019CE  A4D8               	btfss	status,2,c
  3928  0019D0  D052               	goto	l2622
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;inc\CANlib.h: 655: {
  3932                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3933  0019D2  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3934  0019D6  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3935  0019DA  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3936  0019DE  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3937  0019E2  0E04               	movlw	4
  3938  0019E4  D006               	goto	u2230
  3939  0019E6                     u2235:
  3940  0019E6  0100               	movlb	0	; () banked
  3941  0019E8  90D8               	bcf	status,0,c
  3942  0019EA  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3943  0019EC  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3944  0019EE  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3945  0019F0  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3946  0019F2                     u2230:
  3947  0019F2  2EE8               	decfsz	wreg,f,c
  3948  0019F4  D7F8               	goto	u2235
  3949  0019F6  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3950  0019FA  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3951  0019FE  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3952  001A02  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3956  001A06  0100               	movlb	0	; () banked
  3957  001A08  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3958  001A0A  0100               	movlb	0	; () banked
  3959  001A0C  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3960  001A0E  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3961  001A10  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3962  001A12  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3966  001A14  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3970  001A18  0E07               	movlw	7
  3971  001A1A  0100               	movlb	0	; () banked
  3972  001A1C  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3973  001A1E  0100               	movlb	0	; () banked
  3974  001A20  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3975  001A22  0E00               	movlw	0
  3976  001A24  0100               	movlb	0	; () banked
  3977  001A26  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3978  001A28  0100               	movlb	0	; () banked
  3979  001A2A  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3980  001A2C  0E00               	movlw	0
  3981  001A2E  0100               	movlb	0	; () banked
  3982  001A30  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3983  001A32  0100               	movlb	0	; () banked
  3984  001A34  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3985  001A36  0E00               	movlw	0
  3986  001A38  0100               	movlb	0	; () banked
  3987  001A3A  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3988  001A3C  0100               	movlb	0	; () banked
  3989  001A3E  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3993  001A40  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3994  001A44  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3995  001A48  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3996  001A4C  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3997  001A50  0E05               	movlw	5
  3998  001A52                     u2245:
  3999  001A52  90D8               	bcf	status,0,c
  4000  001A54  0100               	movlb	0	; () banked
  4001  001A56  3778               	rlcf	??_CANSetMask& (0+255),f,b
  4002  001A58  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4003  001A5A  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4004  001A5C  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4005  001A5E  2EE8               	decfsz	wreg,f,c
  4006  001A60  D7F8               	goto	u2245
  4007  001A62  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4008  001A66  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4009  001A6A  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4010  001A6E  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4014  001A72  C07D  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4015  001A76                     l2622:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;inc\CANlib.h: 663: }
  4019                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4020  001A76  0100               	movlb	0	; () banked
  4021  001A78  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  4022  001A7A  A4D8               	btfss	status,2,c
  4023  001A7C  D087               	goto	l2654
  4024                           
  4025                           ; BSR set to: 0
  4026  001A7E  0EF7               	movlw	247
  4027  001A80  0100               	movlb	0	; () banked
  4028  001A82  1977               	xorwf	CANSetMask@type& (0+255),w,b
  4029  001A84  A4D8               	btfss	status,2,c
  4030  001A86  D082               	goto	l2654
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;inc\CANlib.h: 666: {
  4034                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4035  001A88  0100               	movlb	0	; () banked
  4036  001A8A  5173               	movf	CANSetMask@mask& (0+255),w,b
  4037  001A8C  0100               	movlb	0	; () banked
  4038  001A8E  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4039  001A90  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4040  001A92  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4041  001A94  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4045  001A96  C07D  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4049  001A9A  0E00               	movlw	0
  4050  001A9C  0100               	movlb	0	; () banked
  4051  001A9E  1573               	andwf	CANSetMask@mask& (0+255),w,b
  4052  001AA0  0100               	movlb	0	; () banked
  4053  001AA2  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4054  001AA4  0EFF               	movlw	255
  4055  001AA6  0100               	movlb	0	; () banked
  4056  001AA8  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4057  001AAA  0100               	movlb	0	; () banked
  4058  001AAC  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4059  001AAE  0E00               	movlw	0
  4060  001AB0  0100               	movlb	0	; () banked
  4061  001AB2  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4062  001AB4  0100               	movlb	0	; () banked
  4063  001AB6  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4064  001AB8  0E00               	movlw	0
  4065  001ABA  0100               	movlb	0	; () banked
  4066  001ABC  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4067  001ABE  0100               	movlb	0	; () banked
  4068  001AC0  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4072  001AC2  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  4073  001AC6  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4074  001ACA  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4075  001ACE  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4076  001AD2  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  4077  001AD6  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  4078  001ADA  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  4079  001ADE  0100               	movlb	0	; () banked
  4080  001AE0  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  4081  001AE2  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4082  001AE6  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4083  001AEA  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4084  001AEE  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4088  001AF2  C07D  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4092  001AF6  0100               	movlb	0	; () banked
  4093  001AF8  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4094  001AFA  D003               	goto	l438
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4098  001AFC  010F               	movlb	15	; () banked
  4099  001AFE  8119               	bsf	25,0,b	;volatile
  4100  001B00  D002               	goto	l439
  4101  001B02                     l438:
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;inc\CANlib.h: 676: else
  4105                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4106  001B02  010F               	movlb	15	; () banked
  4107  001B04  9119               	bcf	25,0,b	;volatile
  4108  001B06                     l439:
  4109                           
  4110                           ; BSR set to: 15
  4111                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4112  001B06  0100               	movlb	0	; () banked
  4113  001B08  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4114  001B0A  D003               	goto	l440
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4118  001B0C  010F               	movlb	15	; () banked
  4119  001B0E  8319               	bsf	25,1,b	;volatile
  4120  001B10  D002               	goto	l441
  4121  001B12                     l440:
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;inc\CANlib.h: 681: else
  4125                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4126  001B12  010F               	movlb	15	; () banked
  4127  001B14  9319               	bcf	25,1,b	;volatile
  4128  001B16                     l441:
  4129                           
  4130                           ; BSR set to: 15
  4131                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4132  001B16  0100               	movlb	0	; () banked
  4133  001B18  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4134  001B1A  D003               	goto	l442
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4138  001B1C  010F               	movlb	15	; () banked
  4139  001B1E  8B19               	bsf	25,5,b	;volatile
  4140  001B20  D002               	goto	l443
  4141  001B22                     l442:
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;inc\CANlib.h: 686: else
  4145                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4146  001B22  010F               	movlb	15	; () banked
  4147  001B24  9B19               	bcf	25,5,b	;volatile
  4148  001B26                     l443:
  4149                           
  4150                           ; BSR set to: 15
  4151                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4152  001B26  0100               	movlb	0	; () banked
  4153  001B28  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4154  001B2A  D003               	goto	l444
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4158  001B2C  010F               	movlb	15	; () banked
  4159  001B2E  8D19               	bsf	25,6,b	;volatile
  4160  001B30  D002               	goto	l445
  4161  001B32                     l444:
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;inc\CANlib.h: 691: else
  4165                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4166  001B32  010F               	movlb	15	; () banked
  4167  001B34  9D19               	bcf	25,6,b	;volatile
  4168  001B36                     l445:
  4169                           
  4170                           ; BSR set to: 15
  4171                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4172  001B36  0100               	movlb	0	; () banked
  4173  001B38  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4174  001B3A  D003               	goto	l446
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4178  001B3C  010F               	movlb	15	; () banked
  4179  001B3E  8F19               	bsf	25,7,b	;volatile
  4180  001B40  D002               	goto	l2648
  4181  001B42                     l446:
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;inc\CANlib.h: 696: else
  4185                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4186  001B42  010F               	movlb	15	; () banked
  4187  001B44  9F19               	bcf	25,7,b	;volatile
  4188  001B46                     l2648:
  4189                           
  4190                           ; BSR set to: 15
  4191                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4192  001B46  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  4193  001B4A  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4194  001B4E  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4195  001B52  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4196  001B56  0E16               	movlw	22
  4197  001B58  D006               	goto	u2320
  4198  001B5A                     u2325:
  4199  001B5A  0100               	movlb	0	; () banked
  4200  001B5C  90D8               	bcf	status,0,c
  4201  001B5E  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4202  001B60  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4203  001B62  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4204  001B64  3378               	rrcf	??_CANSetMask& (0+255),f,b
  4205  001B66                     u2320:
  4206  001B66  2EE8               	decfsz	wreg,f,c
  4207  001B68  D7F8               	goto	u2325
  4208  001B6A  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4209  001B6E  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4210  001B72  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4211  001B76  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4215  001B7A  0100               	movlb	0	; () banked
  4216  001B7C  517D               	movf	CANSetMask@tamp& (0+255),w,b
  4217  001B7E  0100               	movlb	0	; () banked
  4218  001B80  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4219  001B82  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4220  001B84  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4221  001B86  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4225  001B88  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4226  001B8C                     l2654:
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;inc\CANlib.h: 702: }
  4230                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4231  001B8C  0E02               	movlw	2
  4232  001B8E  0100               	movlb	0	; () banked
  4233  001B90  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4234  001B92  A4D8               	btfss	status,2,c
  4235  001B94  0012               	return	
  4236                           
  4237                           ; BSR set to: 0
  4238  001B96  0EF7               	movlw	247
  4239  001B98  0100               	movlb	0	; () banked
  4240  001B9A  1977               	xorwf	CANSetMask@type& (0+255),w,b
  4241  001B9C  A4D8               	btfss	status,2,c
  4242  001B9E  0012               	return	
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;inc\CANlib.h: 705: {
  4246                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4247  001BA0  0100               	movlb	0	; () banked
  4248  001BA2  5173               	movf	CANSetMask@mask& (0+255),w,b
  4249  001BA4  0100               	movlb	0	; () banked
  4250  001BA6  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4251  001BA8  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4252  001BAA  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4253  001BAC  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4257  001BAE  C07D  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4261  001BB2  0E00               	movlw	0
  4262  001BB4  0100               	movlb	0	; () banked
  4263  001BB6  1573               	andwf	CANSetMask@mask& (0+255),w,b
  4264  001BB8  0100               	movlb	0	; () banked
  4265  001BBA  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4266  001BBC  0EFF               	movlw	255
  4267  001BBE  0100               	movlb	0	; () banked
  4268  001BC0  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4269  001BC2  0100               	movlb	0	; () banked
  4270  001BC4  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4271  001BC6  0E00               	movlw	0
  4272  001BC8  0100               	movlb	0	; () banked
  4273  001BCA  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4274  001BCC  0100               	movlb	0	; () banked
  4275  001BCE  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4276  001BD0  0E00               	movlw	0
  4277  001BD2  0100               	movlb	0	; () banked
  4278  001BD4  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4279  001BD6  0100               	movlb	0	; () banked
  4280  001BD8  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4284  001BDA  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  4285  001BDE  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4286  001BE2  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4287  001BE6  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4288  001BEA  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  4289  001BEE  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  4290  001BF2  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  4291  001BF6  0100               	movlb	0	; () banked
  4292  001BF8  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  4293  001BFA  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4294  001BFE  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4295  001C02  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4296  001C06  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4300  001C0A  C07D  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4304  001C0E  0100               	movlb	0	; () banked
  4305  001C10  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4306  001C12  D003               	goto	l449
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4310  001C14  010F               	movlb	15	; () banked
  4311  001C16  811D               	bsf	29,0,b	;volatile
  4312  001C18  D002               	goto	l450
  4313  001C1A                     l449:
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;inc\CANlib.h: 715: else
  4317                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4318  001C1A  010F               	movlb	15	; () banked
  4319  001C1C  911D               	bcf	29,0,b	;volatile
  4320  001C1E                     l450:
  4321                           
  4322                           ; BSR set to: 15
  4323                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4324  001C1E  0100               	movlb	0	; () banked
  4325  001C20  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4326  001C22  D003               	goto	l451
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4330  001C24  010F               	movlb	15	; () banked
  4331  001C26  831D               	bsf	29,1,b	;volatile
  4332  001C28  D002               	goto	l452
  4333  001C2A                     l451:
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;inc\CANlib.h: 720: else
  4337                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4338  001C2A  010F               	movlb	15	; () banked
  4339  001C2C  931D               	bcf	29,1,b	;volatile
  4340  001C2E                     l452:
  4341                           
  4342                           ; BSR set to: 15
  4343                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4344  001C2E  0100               	movlb	0	; () banked
  4345  001C30  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4346  001C32  D003               	goto	l453
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4350  001C34  010F               	movlb	15	; () banked
  4351  001C36  8B1D               	bsf	29,5,b	;volatile
  4352  001C38  D002               	goto	l454
  4353  001C3A                     l453:
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;inc\CANlib.h: 725: else
  4357                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4358  001C3A  010F               	movlb	15	; () banked
  4359  001C3C  9B1D               	bcf	29,5,b	;volatile
  4360  001C3E                     l454:
  4361                           
  4362                           ; BSR set to: 15
  4363                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4364  001C3E  0100               	movlb	0	; () banked
  4365  001C40  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4366  001C42  D003               	goto	l455
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4370  001C44  010F               	movlb	15	; () banked
  4371  001C46  8D1D               	bsf	29,6,b	;volatile
  4372  001C48  D002               	goto	l456
  4373  001C4A                     l455:
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;inc\CANlib.h: 730: else
  4377                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4378  001C4A  010F               	movlb	15	; () banked
  4379  001C4C  9D1D               	bcf	29,6,b	;volatile
  4380  001C4E                     l456:
  4381                           
  4382                           ; BSR set to: 15
  4383                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4384  001C4E  0100               	movlb	0	; () banked
  4385  001C50  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4386  001C52  D003               	goto	l457
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4390  001C54  010F               	movlb	15	; () banked
  4391  001C56  8F1D               	bsf	29,7,b	;volatile
  4392  001C58  D002               	goto	l2680
  4393  001C5A                     l457:
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;inc\CANlib.h: 735: else
  4397                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4398  001C5A  010F               	movlb	15	; () banked
  4399  001C5C  9F1D               	bcf	29,7,b	;volatile
  4400  001C5E                     l2680:
  4401                           
  4402                           ; BSR set to: 15
  4403                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4404  001C5E  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  4405  001C62  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4406  001C66  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4407  001C6A  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4408  001C6E  0E16               	movlw	22
  4409  001C70  D006               	goto	u2400
  4410  001C72                     u2405:
  4411  001C72  0100               	movlb	0	; () banked
  4412  001C74  90D8               	bcf	status,0,c
  4413  001C76  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4414  001C78  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4415  001C7A  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4416  001C7C  3378               	rrcf	??_CANSetMask& (0+255),f,b
  4417  001C7E                     u2400:
  4418  001C7E  2EE8               	decfsz	wreg,f,c
  4419  001C80  D7F8               	goto	u2405
  4420  001C82  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4421  001C86  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4422  001C8A  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4423  001C8E  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4427  001C92  0100               	movlb	0	; () banked
  4428  001C94  517D               	movf	CANSetMask@tamp& (0+255),w,b
  4429  001C96  0100               	movlb	0	; () banked
  4430  001C98  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4431  001C9A  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4432  001C9C  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4433  001C9E  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4437  001CA0  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4438  001CA4  0012               	return	
  4439  001CA6                     __end_of_CANSetMask:
  4440                           	opt stack 0
  4441                           tblptru	equ	0xFF8
  4442                           tblptrh	equ	0xFF7
  4443                           tblptrl	equ	0xFF6
  4444                           tablat	equ	0xFF5
  4445                           prodh	equ	0xFF4
  4446                           prodl	equ	0xFF3
  4447                           intcon	equ	0xFF2
  4448                           intcon2	equ	0xFF1
  4449                           postinc0	equ	0xFEE
  4450                           wreg	equ	0xFE8
  4451                           postdec1	equ	0xFE5
  4452                           fsr1l	equ	0xFE1
  4453                           indf2	equ	0xFDF
  4454                           fsr2h	equ	0xFDA
  4455                           fsr2l	equ	0xFD9
  4456                           status	equ	0xFD8
  4457                           
  4458 ;; *************** function _CANSetFilter *****************
  4459 ;; Defined at:
  4460 ;;		line 748 in file "C:/Asus WebStorage/simone.righetti97@gmail.com/MySyncFolder/Tesina/LaurTec_PIC_libraries_v_3.3.0/i
      +nc\CANlib.h"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  numBuffer       1    wreg     enum E16881
  4463 ;;  filter          4   19[BANK0 ] unsigned long 
  4464 ;;  type            1   23[BANK0 ] enum E16844
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;  numBuffer       1   28[BANK0 ] enum E16881
  4467 ;;  tamp            4   29[BANK0 ] unsigned long 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;		None               void
  4470 ;; Registers used:
  4471 ;;		wreg, status,2, status,0
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4477 ;;      Params:         0       5       0       0
  4478 ;;      Locals:         0       5       0       0
  4479 ;;      Temps:          0       4       0       0
  4480 ;;      Totals:         0      14       0       0
  4481 ;;Total ram usage:       14 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:    4
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_CANInitialize
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text10
  4492  00016A                     __ptext10:
  4493                           	opt stack 0
  4494  00016A                     _CANSetFilter:
  4495                           	opt stack 24
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;incstack = 0
  4499                           ;CANSetFilter@numBuffer stored from wreg
  4500  00016A  0100               	movlb	0	; () banked
  4501  00016C  6F7C               	movwf	CANSetFilter@numBuffer& (0+255),b
  4502                           
  4503                           ;inc\CANlib.h: 750: unsigned long tamp;
  4504                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4505  00016E  0100               	movlb	0	; () banked
  4506  000170  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4507  000172  0100               	movlb	0	; () banked
  4508  000174  A4D8               	btfss	status,2,c
  4509  000176  D058               	goto	l2704
  4510                           
  4511                           ; BSR set to: 0
  4512  000178  0100               	movlb	0	; () banked
  4513  00017A  2977               	incf	CANSetFilter@type& (0+255),w,b
  4514  00017C  A4D8               	btfss	status,2,c
  4515  00017E  D054               	goto	l2704
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;inc\CANlib.h: 753: {
  4519                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4520  000180  010F               	movlb	15	; () banked
  4521  000182  9701               	bcf	1,3,b	;volatile
  4522                           
  4523                           ; BSR set to: 15
  4524                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4525  000184  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4526  000188  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4527  00018C  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4528  000190  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4529  000194  0E04               	movlw	4
  4530  000196  D006               	goto	u2430
  4531  000198                     u2435:
  4532  000198  0100               	movlb	0	; () banked
  4533  00019A  90D8               	bcf	status,0,c
  4534  00019C  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4535  00019E  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4536  0001A0  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4537  0001A2  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4538  0001A4                     u2430:
  4539  0001A4  2EE8               	decfsz	wreg,f,c
  4540  0001A6  D7F8               	goto	u2435
  4541  0001A8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4542  0001AC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4543  0001B0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4544  0001B4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4548  0001B8  0100               	movlb	0	; () banked
  4549  0001BA  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4550  0001BC  0100               	movlb	0	; () banked
  4551  0001BE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4552  0001C0  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4553  0001C2  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4554  0001C4  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4558  0001C6  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4562  0001CA  0E07               	movlw	7
  4563  0001CC  0100               	movlb	0	; () banked
  4564  0001CE  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4565  0001D0  0100               	movlb	0	; () banked
  4566  0001D2  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4567  0001D4  0E00               	movlw	0
  4568  0001D6  0100               	movlb	0	; () banked
  4569  0001D8  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4570  0001DA  0100               	movlb	0	; () banked
  4571  0001DC  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4572  0001DE  0E00               	movlw	0
  4573  0001E0  0100               	movlb	0	; () banked
  4574  0001E2  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4575  0001E4  0100               	movlb	0	; () banked
  4576  0001E6  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4577  0001E8  0E00               	movlw	0
  4578  0001EA  0100               	movlb	0	; () banked
  4579  0001EC  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4580  0001EE  0100               	movlb	0	; () banked
  4581  0001F0  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4585  0001F2  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4586  0001F6  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4587  0001FA  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4588  0001FE  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4589  000202  0E05               	movlw	5
  4590  000204                     u2445:
  4591  000204  90D8               	bcf	status,0,c
  4592  000206  0100               	movlb	0	; () banked
  4593  000208  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4594  00020A  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4595  00020C  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4596  00020E  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4597  000210  2EE8               	decfsz	wreg,f,c
  4598  000212  D7F8               	goto	u2445
  4599  000214  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4600  000218  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4601  00021C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4602  000220  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4606  000224  C07D  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4607  000228                     l2704:
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;inc\CANlib.h: 763: }
  4611                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4612  000228  0100               	movlb	0	; () banked
  4613  00022A  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4614  00022C  A4D8               	btfss	status,2,c
  4615  00022E  D058               	goto	l2722
  4616                           
  4617                           ; BSR set to: 0
  4618  000230  0100               	movlb	0	; () banked
  4619  000232  2977               	incf	CANSetFilter@type& (0+255),w,b
  4620  000234  A4D8               	btfss	status,2,c
  4621  000236  D054               	goto	l2722
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;inc\CANlib.h: 766: {
  4625                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4626  000238  010F               	movlb	15	; () banked
  4627  00023A  9705               	bcf	5,3,b	;volatile
  4628                           
  4629                           ; BSR set to: 15
  4630                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4631  00023C  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4632  000240  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4633  000244  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4634  000248  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4635  00024C  0E04               	movlw	4
  4636  00024E  D006               	goto	u2470
  4637  000250                     u2475:
  4638  000250  0100               	movlb	0	; () banked
  4639  000252  90D8               	bcf	status,0,c
  4640  000254  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4641  000256  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4642  000258  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4643  00025A  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4644  00025C                     u2470:
  4645  00025C  2EE8               	decfsz	wreg,f,c
  4646  00025E  D7F8               	goto	u2475
  4647  000260  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4648  000264  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4649  000268  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4650  00026C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4654  000270  0100               	movlb	0	; () banked
  4655  000272  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4656  000274  0100               	movlb	0	; () banked
  4657  000276  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4658  000278  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4659  00027A  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4660  00027C  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4664  00027E  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4668  000282  0E07               	movlw	7
  4669  000284  0100               	movlb	0	; () banked
  4670  000286  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4671  000288  0100               	movlb	0	; () banked
  4672  00028A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4673  00028C  0E00               	movlw	0
  4674  00028E  0100               	movlb	0	; () banked
  4675  000290  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4676  000292  0100               	movlb	0	; () banked
  4677  000294  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4678  000296  0E00               	movlw	0
  4679  000298  0100               	movlb	0	; () banked
  4680  00029A  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4681  00029C  0100               	movlb	0	; () banked
  4682  00029E  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4683  0002A0  0E00               	movlw	0
  4684  0002A2  0100               	movlb	0	; () banked
  4685  0002A4  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4686  0002A6  0100               	movlb	0	; () banked
  4687  0002A8  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4691  0002AA  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4692  0002AE  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4693  0002B2  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4694  0002B6  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4695  0002BA  0E05               	movlw	5
  4696  0002BC                     u2485:
  4697  0002BC  90D8               	bcf	status,0,c
  4698  0002BE  0100               	movlb	0	; () banked
  4699  0002C0  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4700  0002C2  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4701  0002C4  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4702  0002C6  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4703  0002C8  2EE8               	decfsz	wreg,f,c
  4704  0002CA  D7F8               	goto	u2485
  4705  0002CC  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4706  0002D0  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4707  0002D4  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4708  0002D8  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4712  0002DC  C07D  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4713  0002E0                     l2722:
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;inc\CANlib.h: 776: }
  4717                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4718  0002E0  0E02               	movlw	2
  4719  0002E2  0100               	movlb	0	; () banked
  4720  0002E4  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4721  0002E6  A4D8               	btfss	status,2,c
  4722  0002E8  D058               	goto	l2740
  4723                           
  4724                           ; BSR set to: 0
  4725  0002EA  0100               	movlb	0	; () banked
  4726  0002EC  2977               	incf	CANSetFilter@type& (0+255),w,b
  4727  0002EE  A4D8               	btfss	status,2,c
  4728  0002F0  D054               	goto	l2740
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;inc\CANlib.h: 779: {
  4732                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4733  0002F2  010F               	movlb	15	; () banked
  4734  0002F4  9709               	bcf	9,3,b	;volatile
  4735                           
  4736                           ; BSR set to: 15
  4737                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4738  0002F6  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4739  0002FA  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4740  0002FE  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4741  000302  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4742  000306  0E04               	movlw	4
  4743  000308  D006               	goto	u2510
  4744  00030A                     u2515:
  4745  00030A  0100               	movlb	0	; () banked
  4746  00030C  90D8               	bcf	status,0,c
  4747  00030E  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4748  000310  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4749  000312  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4750  000314  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4751  000316                     u2510:
  4752  000316  2EE8               	decfsz	wreg,f,c
  4753  000318  D7F8               	goto	u2515
  4754  00031A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4755  00031E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4756  000322  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4757  000326  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4761  00032A  0100               	movlb	0	; () banked
  4762  00032C  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4763  00032E  0100               	movlb	0	; () banked
  4764  000330  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4765  000332  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4766  000334  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4767  000336  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4771  000338  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4775  00033C  0E07               	movlw	7
  4776  00033E  0100               	movlb	0	; () banked
  4777  000340  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4778  000342  0100               	movlb	0	; () banked
  4779  000344  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4780  000346  0E00               	movlw	0
  4781  000348  0100               	movlb	0	; () banked
  4782  00034A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4783  00034C  0100               	movlb	0	; () banked
  4784  00034E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4785  000350  0E00               	movlw	0
  4786  000352  0100               	movlb	0	; () banked
  4787  000354  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4788  000356  0100               	movlb	0	; () banked
  4789  000358  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4790  00035A  0E00               	movlw	0
  4791  00035C  0100               	movlb	0	; () banked
  4792  00035E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4793  000360  0100               	movlb	0	; () banked
  4794  000362  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4798  000364  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4799  000368  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4800  00036C  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4801  000370  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4802  000374  0E05               	movlw	5
  4803  000376                     u2525:
  4804  000376  90D8               	bcf	status,0,c
  4805  000378  0100               	movlb	0	; () banked
  4806  00037A  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4807  00037C  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4808  00037E  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4809  000380  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4810  000382  2EE8               	decfsz	wreg,f,c
  4811  000384  D7F8               	goto	u2525
  4812  000386  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4813  00038A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4814  00038E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4815  000392  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4819  000396  C07D  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4820  00039A                     l2740:
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;inc\CANlib.h: 789: }
  4824                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4825  00039A  0E03               	movlw	3
  4826  00039C  0100               	movlb	0	; () banked
  4827  00039E  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4828  0003A0  A4D8               	btfss	status,2,c
  4829  0003A2  D058               	goto	l2758
  4830                           
  4831                           ; BSR set to: 0
  4832  0003A4  0100               	movlb	0	; () banked
  4833  0003A6  2977               	incf	CANSetFilter@type& (0+255),w,b
  4834  0003A8  A4D8               	btfss	status,2,c
  4835  0003AA  D054               	goto	l2758
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;inc\CANlib.h: 792: {
  4839                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4840  0003AC  010F               	movlb	15	; () banked
  4841  0003AE  970D               	bcf	13,3,b	;volatile
  4842                           
  4843                           ; BSR set to: 15
  4844                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4845  0003B0  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4846  0003B4  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4847  0003B8  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4848  0003BC  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4849  0003C0  0E04               	movlw	4
  4850  0003C2  D006               	goto	u2550
  4851  0003C4                     u2555:
  4852  0003C4  0100               	movlb	0	; () banked
  4853  0003C6  90D8               	bcf	status,0,c
  4854  0003C8  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4855  0003CA  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4856  0003CC  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4857  0003CE  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4858  0003D0                     u2550:
  4859  0003D0  2EE8               	decfsz	wreg,f,c
  4860  0003D2  D7F8               	goto	u2555
  4861  0003D4  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4862  0003D8  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4863  0003DC  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4864  0003E0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4868  0003E4  0100               	movlb	0	; () banked
  4869  0003E6  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4870  0003E8  0100               	movlb	0	; () banked
  4871  0003EA  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4872  0003EC  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4873  0003EE  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4874  0003F0  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4878  0003F2  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4882  0003F6  0E07               	movlw	7
  4883  0003F8  0100               	movlb	0	; () banked
  4884  0003FA  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4885  0003FC  0100               	movlb	0	; () banked
  4886  0003FE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4887  000400  0E00               	movlw	0
  4888  000402  0100               	movlb	0	; () banked
  4889  000404  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4890  000406  0100               	movlb	0	; () banked
  4891  000408  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4892  00040A  0E00               	movlw	0
  4893  00040C  0100               	movlb	0	; () banked
  4894  00040E  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4895  000410  0100               	movlb	0	; () banked
  4896  000412  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4897  000414  0E00               	movlw	0
  4898  000416  0100               	movlb	0	; () banked
  4899  000418  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4900  00041A  0100               	movlb	0	; () banked
  4901  00041C  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4905  00041E  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4906  000422  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4907  000426  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4908  00042A  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4909  00042E  0E05               	movlw	5
  4910  000430                     u2565:
  4911  000430  90D8               	bcf	status,0,c
  4912  000432  0100               	movlb	0	; () banked
  4913  000434  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4914  000436  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4915  000438  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4916  00043A  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4917  00043C  2EE8               	decfsz	wreg,f,c
  4918  00043E  D7F8               	goto	u2565
  4919  000440  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4920  000444  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4921  000448  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4922  00044C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4926  000450  C07D  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4927  000454                     l2758:
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;inc\CANlib.h: 802: }
  4931                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4932  000454  0E04               	movlw	4
  4933  000456  0100               	movlb	0	; () banked
  4934  000458  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4935  00045A  A4D8               	btfss	status,2,c
  4936  00045C  D058               	goto	l2776
  4937                           
  4938                           ; BSR set to: 0
  4939  00045E  0100               	movlb	0	; () banked
  4940  000460  2977               	incf	CANSetFilter@type& (0+255),w,b
  4941  000462  A4D8               	btfss	status,2,c
  4942  000464  D054               	goto	l2776
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;inc\CANlib.h: 805: {
  4946                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4947  000466  010F               	movlb	15	; () banked
  4948  000468  9711               	bcf	17,3,b	;volatile
  4949                           
  4950                           ; BSR set to: 15
  4951                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4952  00046A  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4953  00046E  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4954  000472  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4955  000476  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4956  00047A  0E04               	movlw	4
  4957  00047C  D006               	goto	u2590
  4958  00047E                     u2595:
  4959  00047E  0100               	movlb	0	; () banked
  4960  000480  90D8               	bcf	status,0,c
  4961  000482  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4962  000484  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4963  000486  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4964  000488  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4965  00048A                     u2590:
  4966  00048A  2EE8               	decfsz	wreg,f,c
  4967  00048C  D7F8               	goto	u2595
  4968  00048E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4969  000492  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4970  000496  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4971  00049A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4975  00049E  0100               	movlb	0	; () banked
  4976  0004A0  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4977  0004A2  0100               	movlb	0	; () banked
  4978  0004A4  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4979  0004A6  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4980  0004A8  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4981  0004AA  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4985  0004AC  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4989  0004B0  0E07               	movlw	7
  4990  0004B2  0100               	movlb	0	; () banked
  4991  0004B4  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4992  0004B6  0100               	movlb	0	; () banked
  4993  0004B8  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4994  0004BA  0E00               	movlw	0
  4995  0004BC  0100               	movlb	0	; () banked
  4996  0004BE  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4997  0004C0  0100               	movlb	0	; () banked
  4998  0004C2  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4999  0004C4  0E00               	movlw	0
  5000  0004C6  0100               	movlb	0	; () banked
  5001  0004C8  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5002  0004CA  0100               	movlb	0	; () banked
  5003  0004CC  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5004  0004CE  0E00               	movlw	0
  5005  0004D0  0100               	movlb	0	; () banked
  5006  0004D2  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5007  0004D4  0100               	movlb	0	; () banked
  5008  0004D6  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5012  0004D8  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5013  0004DC  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5014  0004E0  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5015  0004E4  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5016  0004E8  0E05               	movlw	5
  5017  0004EA                     u2605:
  5018  0004EA  90D8               	bcf	status,0,c
  5019  0004EC  0100               	movlb	0	; () banked
  5020  0004EE  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  5021  0004F0  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5022  0004F2  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5023  0004F4  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5024  0004F6  2EE8               	decfsz	wreg,f,c
  5025  0004F8  D7F8               	goto	u2605
  5026  0004FA  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5027  0004FE  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5028  000502  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5029  000506  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5033  00050A  C07D  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5034  00050E                     l2776:
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;inc\CANlib.h: 815: }
  5038                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5039  00050E  0E05               	movlw	5
  5040  000510  0100               	movlb	0	; () banked
  5041  000512  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5042  000514  A4D8               	btfss	status,2,c
  5043  000516  D058               	goto	l2794
  5044                           
  5045                           ; BSR set to: 0
  5046  000518  0100               	movlb	0	; () banked
  5047  00051A  2977               	incf	CANSetFilter@type& (0+255),w,b
  5048  00051C  A4D8               	btfss	status,2,c
  5049  00051E  D054               	goto	l2794
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;inc\CANlib.h: 818: {
  5053                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5054  000520  010F               	movlb	15	; () banked
  5055  000522  9715               	bcf	21,3,b	;volatile
  5056                           
  5057                           ; BSR set to: 15
  5058                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5059  000524  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5060  000528  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5061  00052C  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5062  000530  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5063  000534  0E04               	movlw	4
  5064  000536  D006               	goto	u2630
  5065  000538                     u2635:
  5066  000538  0100               	movlb	0	; () banked
  5067  00053A  90D8               	bcf	status,0,c
  5068  00053C  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5069  00053E  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5070  000540  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5071  000542  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5072  000544                     u2630:
  5073  000544  2EE8               	decfsz	wreg,f,c
  5074  000546  D7F8               	goto	u2635
  5075  000548  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5076  00054C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5077  000550  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5078  000554  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5082  000558  0100               	movlb	0	; () banked
  5083  00055A  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5084  00055C  0100               	movlb	0	; () banked
  5085  00055E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5086  000560  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5087  000562  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5088  000564  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5092  000566  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5096  00056A  0E07               	movlw	7
  5097  00056C  0100               	movlb	0	; () banked
  5098  00056E  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5099  000570  0100               	movlb	0	; () banked
  5100  000572  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5101  000574  0E00               	movlw	0
  5102  000576  0100               	movlb	0	; () banked
  5103  000578  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5104  00057A  0100               	movlb	0	; () banked
  5105  00057C  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5106  00057E  0E00               	movlw	0
  5107  000580  0100               	movlb	0	; () banked
  5108  000582  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5109  000584  0100               	movlb	0	; () banked
  5110  000586  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5111  000588  0E00               	movlw	0
  5112  00058A  0100               	movlb	0	; () banked
  5113  00058C  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5114  00058E  0100               	movlb	0	; () banked
  5115  000590  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5119  000592  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5120  000596  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5121  00059A  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5122  00059E  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5123  0005A2  0E05               	movlw	5
  5124  0005A4                     u2645:
  5125  0005A4  90D8               	bcf	status,0,c
  5126  0005A6  0100               	movlb	0	; () banked
  5127  0005A8  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  5128  0005AA  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5129  0005AC  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5130  0005AE  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5131  0005B0  2EE8               	decfsz	wreg,f,c
  5132  0005B2  D7F8               	goto	u2645
  5133  0005B4  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5134  0005B8  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5135  0005BC  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5136  0005C0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5140  0005C4  C07D  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5141  0005C8                     l2794:
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;inc\CANlib.h: 828: }
  5145                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5146  0005C8  0100               	movlb	0	; () banked
  5147  0005CA  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5148  0005CC  0100               	movlb	0	; () banked
  5149  0005CE  A4D8               	btfss	status,2,c
  5150  0005D0  D089               	goto	l2828
  5151                           
  5152                           ; BSR set to: 0
  5153  0005D2  0EF7               	movlw	247
  5154  0005D4  0100               	movlb	0	; () banked
  5155  0005D6  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5156  0005D8  A4D8               	btfss	status,2,c
  5157  0005DA  D084               	goto	l2828
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;inc\CANlib.h: 832: {
  5161                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5162  0005DC  010F               	movlb	15	; () banked
  5163  0005DE  8701               	bsf	1,3,b	;volatile
  5164                           
  5165                           ; BSR set to: 15
  5166                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5167  0005E0  0100               	movlb	0	; () banked
  5168  0005E2  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5169  0005E4  0100               	movlb	0	; () banked
  5170  0005E6  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5171  0005E8  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5172  0005EA  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5173  0005EC  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5177  0005EE  C07D  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5181  0005F2  0E00               	movlw	0
  5182  0005F4  0100               	movlb	0	; () banked
  5183  0005F6  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5184  0005F8  0100               	movlb	0	; () banked
  5185  0005FA  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5186  0005FC  0EFF               	movlw	255
  5187  0005FE  0100               	movlb	0	; () banked
  5188  000600  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5189  000602  0100               	movlb	0	; () banked
  5190  000604  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5191  000606  0E00               	movlw	0
  5192  000608  0100               	movlb	0	; () banked
  5193  00060A  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5194  00060C  0100               	movlb	0	; () banked
  5195  00060E  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5196  000610  0E00               	movlw	0
  5197  000612  0100               	movlb	0	; () banked
  5198  000614  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5199  000616  0100               	movlb	0	; () banked
  5200  000618  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5204  00061A  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5205  00061E  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5206  000622  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5207  000626  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5208  00062A  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5209  00062E  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5210  000632  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5211  000636  0100               	movlb	0	; () banked
  5212  000638  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5213  00063A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5214  00063E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5215  000642  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5216  000646  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5220  00064A  C07D  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5224  00064E  0100               	movlb	0	; () banked
  5225  000650  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5226  000652  D003               	goto	l469
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5230  000654  010F               	movlb	15	; () banked
  5231  000656  8101               	bsf	1,0,b	;volatile
  5232  000658  D002               	goto	l470
  5233  00065A                     l469:
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;inc\CANlib.h: 844: else
  5237                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5238  00065A  010F               	movlb	15	; () banked
  5239  00065C  9101               	bcf	1,0,b	;volatile
  5240  00065E                     l470:
  5241                           
  5242                           ; BSR set to: 15
  5243                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5244  00065E  0100               	movlb	0	; () banked
  5245  000660  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5246  000662  D003               	goto	l471
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5250  000664  010F               	movlb	15	; () banked
  5251  000666  8301               	bsf	1,1,b	;volatile
  5252  000668  D002               	goto	l472
  5253  00066A                     l471:
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;inc\CANlib.h: 849: else
  5257                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5258  00066A  010F               	movlb	15	; () banked
  5259  00066C  9301               	bcf	1,1,b	;volatile
  5260  00066E                     l472:
  5261                           
  5262                           ; BSR set to: 15
  5263                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5264  00066E  0100               	movlb	0	; () banked
  5265  000670  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5266  000672  D003               	goto	l473
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5270  000674  010F               	movlb	15	; () banked
  5271  000676  8B01               	bsf	1,5,b	;volatile
  5272  000678  D002               	goto	l474
  5273  00067A                     l473:
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;inc\CANlib.h: 854: else
  5277                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5278  00067A  010F               	movlb	15	; () banked
  5279  00067C  9B01               	bcf	1,5,b	;volatile
  5280  00067E                     l474:
  5281                           
  5282                           ; BSR set to: 15
  5283                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5284  00067E  0100               	movlb	0	; () banked
  5285  000680  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5286  000682  D003               	goto	l475
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5290  000684  010F               	movlb	15	; () banked
  5291  000686  8D01               	bsf	1,6,b	;volatile
  5292  000688  D002               	goto	l476
  5293  00068A                     l475:
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;inc\CANlib.h: 859: else
  5297                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5298  00068A  010F               	movlb	15	; () banked
  5299  00068C  9D01               	bcf	1,6,b	;volatile
  5300  00068E                     l476:
  5301                           
  5302                           ; BSR set to: 15
  5303                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5304  00068E  0100               	movlb	0	; () banked
  5305  000690  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5306  000692  D003               	goto	l477
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5310  000694  010F               	movlb	15	; () banked
  5311  000696  8F01               	bsf	1,7,b	;volatile
  5312  000698  D002               	goto	l2822
  5313  00069A                     l477:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;inc\CANlib.h: 864: else
  5317                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5318  00069A  010F               	movlb	15	; () banked
  5319  00069C  9F01               	bcf	1,7,b	;volatile
  5320  00069E                     l2822:
  5321                           
  5322                           ; BSR set to: 15
  5323                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5324  00069E  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5325  0006A2  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5326  0006A6  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5327  0006AA  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5328  0006AE  0E16               	movlw	22
  5329  0006B0  D006               	goto	u2720
  5330  0006B2                     u2725:
  5331  0006B2  0100               	movlb	0	; () banked
  5332  0006B4  90D8               	bcf	status,0,c
  5333  0006B6  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5334  0006B8  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5335  0006BA  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5336  0006BC  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5337  0006BE                     u2720:
  5338  0006BE  2EE8               	decfsz	wreg,f,c
  5339  0006C0  D7F8               	goto	u2725
  5340  0006C2  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5341  0006C6  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5342  0006CA  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5343  0006CE  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5347  0006D2  0100               	movlb	0	; () banked
  5348  0006D4  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5349  0006D6  0100               	movlb	0	; () banked
  5350  0006D8  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5351  0006DA  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5352  0006DC  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5353  0006DE  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5354                           
  5355                           ; BSR set to: 0
  5356                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5357  0006E0  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5358  0006E4                     l2828:
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;inc\CANlib.h: 870: }
  5362                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5363  0006E4  0100               	movlb	0	; () banked
  5364  0006E6  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5365  0006E8  A4D8               	btfss	status,2,c
  5366  0006EA  D089               	goto	l2862
  5367                           
  5368                           ; BSR set to: 0
  5369  0006EC  0EF7               	movlw	247
  5370  0006EE  0100               	movlb	0	; () banked
  5371  0006F0  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5372  0006F2  A4D8               	btfss	status,2,c
  5373  0006F4  D084               	goto	l2862
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;inc\CANlib.h: 873: {
  5377                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5378  0006F6  010F               	movlb	15	; () banked
  5379  0006F8  8705               	bsf	5,3,b	;volatile
  5380                           
  5381                           ; BSR set to: 15
  5382                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5383  0006FA  0100               	movlb	0	; () banked
  5384  0006FC  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5385  0006FE  0100               	movlb	0	; () banked
  5386  000700  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5387  000702  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5388  000704  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5389  000706  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5393  000708  C07D  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5394                           
  5395                           ; BSR set to: 0
  5396                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5397  00070C  0E00               	movlw	0
  5398  00070E  0100               	movlb	0	; () banked
  5399  000710  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5400  000712  0100               	movlb	0	; () banked
  5401  000714  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5402  000716  0EFF               	movlw	255
  5403  000718  0100               	movlb	0	; () banked
  5404  00071A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5405  00071C  0100               	movlb	0	; () banked
  5406  00071E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5407  000720  0E00               	movlw	0
  5408  000722  0100               	movlb	0	; () banked
  5409  000724  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5410  000726  0100               	movlb	0	; () banked
  5411  000728  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5412  00072A  0E00               	movlw	0
  5413  00072C  0100               	movlb	0	; () banked
  5414  00072E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5415  000730  0100               	movlb	0	; () banked
  5416  000732  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5420  000734  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5421  000738  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5422  00073C  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5423  000740  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5424  000744  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5425  000748  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5426  00074C  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5427  000750  0100               	movlb	0	; () banked
  5428  000752  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5429  000754  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5430  000758  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5431  00075C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5432  000760  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5433                           
  5434                           ; BSR set to: 0
  5435                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5436  000764  C07D  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5440  000768  0100               	movlb	0	; () banked
  5441  00076A  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5442  00076C  D003               	goto	l480
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5446  00076E  010F               	movlb	15	; () banked
  5447  000770  8105               	bsf	5,0,b	;volatile
  5448  000772  D002               	goto	l481
  5449  000774                     l480:
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;inc\CANlib.h: 885: else
  5453                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5454  000774  010F               	movlb	15	; () banked
  5455  000776  9105               	bcf	5,0,b	;volatile
  5456  000778                     l481:
  5457                           
  5458                           ; BSR set to: 15
  5459                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5460  000778  0100               	movlb	0	; () banked
  5461  00077A  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5462  00077C  D003               	goto	l482
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5466  00077E  010F               	movlb	15	; () banked
  5467  000780  8305               	bsf	5,1,b	;volatile
  5468  000782  D002               	goto	l483
  5469  000784                     l482:
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;inc\CANlib.h: 890: else
  5473                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5474  000784  010F               	movlb	15	; () banked
  5475  000786  9305               	bcf	5,1,b	;volatile
  5476  000788                     l483:
  5477                           
  5478                           ; BSR set to: 15
  5479                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5480  000788  0100               	movlb	0	; () banked
  5481  00078A  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5482  00078C  D003               	goto	l484
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5486  00078E  010F               	movlb	15	; () banked
  5487  000790  8B05               	bsf	5,5,b	;volatile
  5488  000792  D002               	goto	l485
  5489  000794                     l484:
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;inc\CANlib.h: 895: else
  5493                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5494  000794  010F               	movlb	15	; () banked
  5495  000796  9B05               	bcf	5,5,b	;volatile
  5496  000798                     l485:
  5497                           
  5498                           ; BSR set to: 15
  5499                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5500  000798  0100               	movlb	0	; () banked
  5501  00079A  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5502  00079C  D003               	goto	l486
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5506  00079E  010F               	movlb	15	; () banked
  5507  0007A0  8D05               	bsf	5,6,b	;volatile
  5508  0007A2  D002               	goto	l487
  5509  0007A4                     l486:
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;inc\CANlib.h: 900: else
  5513                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5514  0007A4  010F               	movlb	15	; () banked
  5515  0007A6  9D05               	bcf	5,6,b	;volatile
  5516  0007A8                     l487:
  5517                           
  5518                           ; BSR set to: 15
  5519                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5520  0007A8  0100               	movlb	0	; () banked
  5521  0007AA  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5522  0007AC  D003               	goto	l488
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5526  0007AE  010F               	movlb	15	; () banked
  5527  0007B0  8F05               	bsf	5,7,b	;volatile
  5528  0007B2  D002               	goto	l2856
  5529  0007B4                     l488:
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;inc\CANlib.h: 905: else
  5533                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5534  0007B4  010F               	movlb	15	; () banked
  5535  0007B6  9F05               	bcf	5,7,b	;volatile
  5536  0007B8                     l2856:
  5537                           
  5538                           ; BSR set to: 15
  5539                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5540  0007B8  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5541  0007BC  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5542  0007C0  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5543  0007C4  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5544  0007C8  0E16               	movlw	22
  5545  0007CA  D006               	goto	u2800
  5546  0007CC                     u2805:
  5547  0007CC  0100               	movlb	0	; () banked
  5548  0007CE  90D8               	bcf	status,0,c
  5549  0007D0  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5550  0007D2  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5551  0007D4  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5552  0007D6  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5553  0007D8                     u2800:
  5554  0007D8  2EE8               	decfsz	wreg,f,c
  5555  0007DA  D7F8               	goto	u2805
  5556  0007DC  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5557  0007E0  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5558  0007E4  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5559  0007E8  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5563  0007EC  0100               	movlb	0	; () banked
  5564  0007EE  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5565  0007F0  0100               	movlb	0	; () banked
  5566  0007F2  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5567  0007F4  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5568  0007F6  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5569  0007F8  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5573  0007FA  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5574  0007FE                     l2862:
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;inc\CANlib.h: 911: }
  5578                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5579  0007FE  0E02               	movlw	2
  5580  000800  0100               	movlb	0	; () banked
  5581  000802  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5582  000804  A4D8               	btfss	status,2,c
  5583  000806  D089               	goto	l2896
  5584                           
  5585                           ; BSR set to: 0
  5586  000808  0EF7               	movlw	247
  5587  00080A  0100               	movlb	0	; () banked
  5588  00080C  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5589  00080E  A4D8               	btfss	status,2,c
  5590  000810  D084               	goto	l2896
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;inc\CANlib.h: 915: {
  5594                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5595  000812  010F               	movlb	15	; () banked
  5596  000814  8709               	bsf	9,3,b	;volatile
  5597                           
  5598                           ; BSR set to: 15
  5599                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5600  000816  0100               	movlb	0	; () banked
  5601  000818  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5602  00081A  0100               	movlb	0	; () banked
  5603  00081C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5604  00081E  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5605  000820  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5606  000822  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5610  000824  C07D  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5611                           
  5612                           ; BSR set to: 0
  5613                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5614  000828  0E00               	movlw	0
  5615  00082A  0100               	movlb	0	; () banked
  5616  00082C  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5617  00082E  0100               	movlb	0	; () banked
  5618  000830  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5619  000832  0EFF               	movlw	255
  5620  000834  0100               	movlb	0	; () banked
  5621  000836  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5622  000838  0100               	movlb	0	; () banked
  5623  00083A  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5624  00083C  0E00               	movlw	0
  5625  00083E  0100               	movlb	0	; () banked
  5626  000840  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5627  000842  0100               	movlb	0	; () banked
  5628  000844  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5629  000846  0E00               	movlw	0
  5630  000848  0100               	movlb	0	; () banked
  5631  00084A  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5632  00084C  0100               	movlb	0	; () banked
  5633  00084E  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5637  000850  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5638  000854  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5639  000858  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5640  00085C  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5641  000860  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5642  000864  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5643  000868  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5644  00086C  0100               	movlb	0	; () banked
  5645  00086E  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5646  000870  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5647  000874  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5648  000878  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5649  00087C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5653  000880  C07D  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5657  000884  0100               	movlb	0	; () banked
  5658  000886  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5659  000888  D003               	goto	l491
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5663  00088A  010F               	movlb	15	; () banked
  5664  00088C  8109               	bsf	9,0,b	;volatile
  5665  00088E  D002               	goto	l492
  5666  000890                     l491:
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;inc\CANlib.h: 927: else
  5670                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5671  000890  010F               	movlb	15	; () banked
  5672  000892  9109               	bcf	9,0,b	;volatile
  5673  000894                     l492:
  5674                           
  5675                           ; BSR set to: 15
  5676                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5677  000894  0100               	movlb	0	; () banked
  5678  000896  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5679  000898  D003               	goto	l493
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5683  00089A  010F               	movlb	15	; () banked
  5684  00089C  8309               	bsf	9,1,b	;volatile
  5685  00089E  D002               	goto	l494
  5686  0008A0                     l493:
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;inc\CANlib.h: 932: else
  5690                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5691  0008A0  010F               	movlb	15	; () banked
  5692  0008A2  9309               	bcf	9,1,b	;volatile
  5693  0008A4                     l494:
  5694                           
  5695                           ; BSR set to: 15
  5696                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5697  0008A4  0100               	movlb	0	; () banked
  5698  0008A6  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5699  0008A8  D003               	goto	l495
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5703  0008AA  010F               	movlb	15	; () banked
  5704  0008AC  8B09               	bsf	9,5,b	;volatile
  5705  0008AE  D002               	goto	l496
  5706  0008B0                     l495:
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;inc\CANlib.h: 937: else
  5710                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5711  0008B0  010F               	movlb	15	; () banked
  5712  0008B2  9B09               	bcf	9,5,b	;volatile
  5713  0008B4                     l496:
  5714                           
  5715                           ; BSR set to: 15
  5716                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5717  0008B4  0100               	movlb	0	; () banked
  5718  0008B6  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5719  0008B8  D003               	goto	l497
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5723  0008BA  010F               	movlb	15	; () banked
  5724  0008BC  8D09               	bsf	9,6,b	;volatile
  5725  0008BE  D002               	goto	l498
  5726  0008C0                     l497:
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;inc\CANlib.h: 942: else
  5730                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5731  0008C0  010F               	movlb	15	; () banked
  5732  0008C2  9D09               	bcf	9,6,b	;volatile
  5733  0008C4                     l498:
  5734                           
  5735                           ; BSR set to: 15
  5736                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5737  0008C4  0100               	movlb	0	; () banked
  5738  0008C6  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5739  0008C8  D003               	goto	l499
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5743  0008CA  010F               	movlb	15	; () banked
  5744  0008CC  8F09               	bsf	9,7,b	;volatile
  5745  0008CE  D002               	goto	l2890
  5746  0008D0                     l499:
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;inc\CANlib.h: 947: else
  5750                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5751  0008D0  010F               	movlb	15	; () banked
  5752  0008D2  9F09               	bcf	9,7,b	;volatile
  5753  0008D4                     l2890:
  5754                           
  5755                           ; BSR set to: 15
  5756                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5757  0008D4  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5758  0008D8  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5759  0008DC  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5760  0008E0  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5761  0008E4  0E16               	movlw	22
  5762  0008E6  D006               	goto	u2880
  5763  0008E8                     u2885:
  5764  0008E8  0100               	movlb	0	; () banked
  5765  0008EA  90D8               	bcf	status,0,c
  5766  0008EC  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5767  0008EE  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5768  0008F0  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5769  0008F2  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5770  0008F4                     u2880:
  5771  0008F4  2EE8               	decfsz	wreg,f,c
  5772  0008F6  D7F8               	goto	u2885
  5773  0008F8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5774  0008FC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5775  000900  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5776  000904  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5780  000908  0100               	movlb	0	; () banked
  5781  00090A  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5782  00090C  0100               	movlb	0	; () banked
  5783  00090E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5784  000910  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5785  000912  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5786  000914  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5790  000916  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5791  00091A                     l2896:
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;inc\CANlib.h: 953: }
  5795                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5796  00091A  0E03               	movlw	3
  5797  00091C  0100               	movlb	0	; () banked
  5798  00091E  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5799  000920  A4D8               	btfss	status,2,c
  5800  000922  D089               	goto	l2930
  5801                           
  5802                           ; BSR set to: 0
  5803  000924  0EF7               	movlw	247
  5804  000926  0100               	movlb	0	; () banked
  5805  000928  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5806  00092A  A4D8               	btfss	status,2,c
  5807  00092C  D084               	goto	l2930
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;inc\CANlib.h: 956: {
  5811                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5812  00092E  010F               	movlb	15	; () banked
  5813  000930  870D               	bsf	13,3,b	;volatile
  5814                           
  5815                           ; BSR set to: 15
  5816                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5817  000932  0100               	movlb	0	; () banked
  5818  000934  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5819  000936  0100               	movlb	0	; () banked
  5820  000938  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5821  00093A  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5822  00093C  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5823  00093E  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5827  000940  C07D  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5831  000944  0E00               	movlw	0
  5832  000946  0100               	movlb	0	; () banked
  5833  000948  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5834  00094A  0100               	movlb	0	; () banked
  5835  00094C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5836  00094E  0EFF               	movlw	255
  5837  000950  0100               	movlb	0	; () banked
  5838  000952  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5839  000954  0100               	movlb	0	; () banked
  5840  000956  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5841  000958  0E00               	movlw	0
  5842  00095A  0100               	movlb	0	; () banked
  5843  00095C  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5844  00095E  0100               	movlb	0	; () banked
  5845  000960  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5846  000962  0E00               	movlw	0
  5847  000964  0100               	movlb	0	; () banked
  5848  000966  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5849  000968  0100               	movlb	0	; () banked
  5850  00096A  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5854  00096C  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5855  000970  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5856  000974  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5857  000978  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5858  00097C  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5859  000980  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5860  000984  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5861  000988  0100               	movlb	0	; () banked
  5862  00098A  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5863  00098C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5864  000990  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5865  000994  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5866  000998  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5870  00099C  C07D  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5874  0009A0  0100               	movlb	0	; () banked
  5875  0009A2  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5876  0009A4  D003               	goto	l502
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5880  0009A6  010F               	movlb	15	; () banked
  5881  0009A8  810D               	bsf	13,0,b	;volatile
  5882  0009AA  D002               	goto	l503
  5883  0009AC                     l502:
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;inc\CANlib.h: 968: else
  5887                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5888  0009AC  010F               	movlb	15	; () banked
  5889  0009AE  910D               	bcf	13,0,b	;volatile
  5890  0009B0                     l503:
  5891                           
  5892                           ; BSR set to: 15
  5893                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5894  0009B0  0100               	movlb	0	; () banked
  5895  0009B2  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5896  0009B4  D003               	goto	l504
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5900  0009B6  010F               	movlb	15	; () banked
  5901  0009B8  830D               	bsf	13,1,b	;volatile
  5902  0009BA  D002               	goto	l505
  5903  0009BC                     l504:
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;inc\CANlib.h: 973: else
  5907                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5908  0009BC  010F               	movlb	15	; () banked
  5909  0009BE  930D               	bcf	13,1,b	;volatile
  5910  0009C0                     l505:
  5911                           
  5912                           ; BSR set to: 15
  5913                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5914  0009C0  0100               	movlb	0	; () banked
  5915  0009C2  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5916  0009C4  D003               	goto	l506
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5920  0009C6  010F               	movlb	15	; () banked
  5921  0009C8  8B0D               	bsf	13,5,b	;volatile
  5922  0009CA  D002               	goto	l507
  5923  0009CC                     l506:
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;inc\CANlib.h: 978: else
  5927                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5928  0009CC  010F               	movlb	15	; () banked
  5929  0009CE  9B0D               	bcf	13,5,b	;volatile
  5930  0009D0                     l507:
  5931                           
  5932                           ; BSR set to: 15
  5933                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5934  0009D0  0100               	movlb	0	; () banked
  5935  0009D2  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5936  0009D4  D003               	goto	l508
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5940  0009D6  010F               	movlb	15	; () banked
  5941  0009D8  8D0D               	bsf	13,6,b	;volatile
  5942  0009DA  D002               	goto	l509
  5943  0009DC                     l508:
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;inc\CANlib.h: 983: else
  5947                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5948  0009DC  010F               	movlb	15	; () banked
  5949  0009DE  9D0D               	bcf	13,6,b	;volatile
  5950  0009E0                     l509:
  5951                           
  5952                           ; BSR set to: 15
  5953                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5954  0009E0  0100               	movlb	0	; () banked
  5955  0009E2  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5956  0009E4  D003               	goto	l510
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5960  0009E6  010F               	movlb	15	; () banked
  5961  0009E8  8F0D               	bsf	13,7,b	;volatile
  5962  0009EA  D002               	goto	l2924
  5963  0009EC                     l510:
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;inc\CANlib.h: 988: else
  5967                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5968  0009EC  010F               	movlb	15	; () banked
  5969  0009EE  9F0D               	bcf	13,7,b	;volatile
  5970  0009F0                     l2924:
  5971                           
  5972                           ; BSR set to: 15
  5973                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5974  0009F0  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5975  0009F4  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5976  0009F8  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5977  0009FC  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5978  000A00  0E16               	movlw	22
  5979  000A02  D006               	goto	u2960
  5980  000A04                     u2965:
  5981  000A04  0100               	movlb	0	; () banked
  5982  000A06  90D8               	bcf	status,0,c
  5983  000A08  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5984  000A0A  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5985  000A0C  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5986  000A0E  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5987  000A10                     u2960:
  5988  000A10  2EE8               	decfsz	wreg,f,c
  5989  000A12  D7F8               	goto	u2965
  5990  000A14  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5991  000A18  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5992  000A1C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5993  000A20  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5997  000A24  0100               	movlb	0	; () banked
  5998  000A26  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5999  000A28  0100               	movlb	0	; () banked
  6000  000A2A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6001  000A2C  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6002  000A2E  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6003  000A30  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6007  000A32  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6008  000A36                     l2930:
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;inc\CANlib.h: 994: }
  6012                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6013  000A36  0E04               	movlw	4
  6014  000A38  0100               	movlb	0	; () banked
  6015  000A3A  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6016  000A3C  A4D8               	btfss	status,2,c
  6017  000A3E  D089               	goto	l2964
  6018                           
  6019                           ; BSR set to: 0
  6020  000A40  0EF7               	movlw	247
  6021  000A42  0100               	movlb	0	; () banked
  6022  000A44  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  6023  000A46  A4D8               	btfss	status,2,c
  6024  000A48  D084               	goto	l2964
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;inc\CANlib.h: 997: {
  6028                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6029  000A4A  010F               	movlb	15	; () banked
  6030  000A4C  8711               	bsf	17,3,b	;volatile
  6031                           
  6032                           ; BSR set to: 15
  6033                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6034  000A4E  0100               	movlb	0	; () banked
  6035  000A50  5173               	movf	CANSetFilter@filter& (0+255),w,b
  6036  000A52  0100               	movlb	0	; () banked
  6037  000A54  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6038  000A56  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6039  000A58  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6040  000A5A  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6044  000A5C  C07D  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6048  000A60  0E00               	movlw	0
  6049  000A62  0100               	movlb	0	; () banked
  6050  000A64  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  6051  000A66  0100               	movlb	0	; () banked
  6052  000A68  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6053  000A6A  0EFF               	movlw	255
  6054  000A6C  0100               	movlb	0	; () banked
  6055  000A6E  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6056  000A70  0100               	movlb	0	; () banked
  6057  000A72  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6058  000A74  0E00               	movlw	0
  6059  000A76  0100               	movlb	0	; () banked
  6060  000A78  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6061  000A7A  0100               	movlb	0	; () banked
  6062  000A7C  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6063  000A7E  0E00               	movlw	0
  6064  000A80  0100               	movlb	0	; () banked
  6065  000A82  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6066  000A84  0100               	movlb	0	; () banked
  6067  000A86  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6071  000A88  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  6072  000A8C  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6073  000A90  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6074  000A94  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6075  000A98  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  6076  000A9C  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6077  000AA0  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6078  000AA4  0100               	movlb	0	; () banked
  6079  000AA6  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  6080  000AA8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6081  000AAC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6082  000AB0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6083  000AB4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6087  000AB8  C07D  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6091  000ABC  0100               	movlb	0	; () banked
  6092  000ABE  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6093  000AC0  D003               	goto	l513
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6097  000AC2  010F               	movlb	15	; () banked
  6098  000AC4  8111               	bsf	17,0,b	;volatile
  6099  000AC6  D002               	goto	l514
  6100  000AC8                     l513:
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;inc\CANlib.h: 1009: else
  6104                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6105  000AC8  010F               	movlb	15	; () banked
  6106  000ACA  9111               	bcf	17,0,b	;volatile
  6107  000ACC                     l514:
  6108                           
  6109                           ; BSR set to: 15
  6110                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6111  000ACC  0100               	movlb	0	; () banked
  6112  000ACE  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6113  000AD0  D003               	goto	l515
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6117  000AD2  010F               	movlb	15	; () banked
  6118  000AD4  8311               	bsf	17,1,b	;volatile
  6119  000AD6  D002               	goto	l516
  6120  000AD8                     l515:
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;inc\CANlib.h: 1014: else
  6124                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6125  000AD8  010F               	movlb	15	; () banked
  6126  000ADA  9311               	bcf	17,1,b	;volatile
  6127  000ADC                     l516:
  6128                           
  6129                           ; BSR set to: 15
  6130                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6131  000ADC  0100               	movlb	0	; () banked
  6132  000ADE  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6133  000AE0  D003               	goto	l517
  6134                           
  6135                           ; BSR set to: 0
  6136                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6137  000AE2  010F               	movlb	15	; () banked
  6138  000AE4  8B11               	bsf	17,5,b	;volatile
  6139  000AE6  D002               	goto	l518
  6140  000AE8                     l517:
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;inc\CANlib.h: 1019: else
  6144                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6145  000AE8  010F               	movlb	15	; () banked
  6146  000AEA  9B11               	bcf	17,5,b	;volatile
  6147  000AEC                     l518:
  6148                           
  6149                           ; BSR set to: 15
  6150                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6151  000AEC  0100               	movlb	0	; () banked
  6152  000AEE  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6153  000AF0  D003               	goto	l519
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6157  000AF2  010F               	movlb	15	; () banked
  6158  000AF4  8D11               	bsf	17,6,b	;volatile
  6159  000AF6  D002               	goto	l520
  6160  000AF8                     l519:
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;inc\CANlib.h: 1024: else
  6164                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6165  000AF8  010F               	movlb	15	; () banked
  6166  000AFA  9D11               	bcf	17,6,b	;volatile
  6167  000AFC                     l520:
  6168                           
  6169                           ; BSR set to: 15
  6170                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6171  000AFC  0100               	movlb	0	; () banked
  6172  000AFE  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6173  000B00  D003               	goto	l521
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6177  000B02  010F               	movlb	15	; () banked
  6178  000B04  8F11               	bsf	17,7,b	;volatile
  6179  000B06  D002               	goto	l2958
  6180  000B08                     l521:
  6181                           
  6182                           ; BSR set to: 0
  6183                           ;inc\CANlib.h: 1029: else
  6184                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6185  000B08  010F               	movlb	15	; () banked
  6186  000B0A  9F11               	bcf	17,7,b	;volatile
  6187  000B0C                     l2958:
  6188                           
  6189                           ; BSR set to: 15
  6190                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6191  000B0C  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  6192  000B10  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6193  000B14  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6194  000B18  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6195  000B1C  0E16               	movlw	22
  6196  000B1E  D006               	goto	u3040
  6197  000B20                     u3045:
  6198  000B20  0100               	movlb	0	; () banked
  6199  000B22  90D8               	bcf	status,0,c
  6200  000B24  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6201  000B26  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6202  000B28  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6203  000B2A  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  6204  000B2C                     u3040:
  6205  000B2C  2EE8               	decfsz	wreg,f,c
  6206  000B2E  D7F8               	goto	u3045
  6207  000B30  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6208  000B34  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6209  000B38  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6210  000B3C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6211                           
  6212                           ; BSR set to: 0
  6213                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6214  000B40  0100               	movlb	0	; () banked
  6215  000B42  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  6216  000B44  0100               	movlb	0	; () banked
  6217  000B46  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6218  000B48  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6219  000B4A  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6220  000B4C  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6224  000B4E  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6225  000B52                     l2964:
  6226                           
  6227                           ; BSR set to: 0
  6228                           ;inc\CANlib.h: 1035: }
  6229                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6230  000B52  0E05               	movlw	5
  6231  000B54  0100               	movlb	0	; () banked
  6232  000B56  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6233  000B58  A4D8               	btfss	status,2,c
  6234  000B5A  0012               	return	
  6235                           
  6236                           ; BSR set to: 0
  6237  000B5C  0EF7               	movlw	247
  6238  000B5E  0100               	movlb	0	; () banked
  6239  000B60  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  6240  000B62  A4D8               	btfss	status,2,c
  6241  000B64  0012               	return	
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;inc\CANlib.h: 1038: {
  6245                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6246  000B66  010F               	movlb	15	; () banked
  6247  000B68  8715               	bsf	21,3,b	;volatile
  6248                           
  6249                           ; BSR set to: 15
  6250                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6251  000B6A  0100               	movlb	0	; () banked
  6252  000B6C  5173               	movf	CANSetFilter@filter& (0+255),w,b
  6253  000B6E  0100               	movlb	0	; () banked
  6254  000B70  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6255  000B72  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6256  000B74  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6257  000B76  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6261  000B78  C07D  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6265  000B7C  0E00               	movlw	0
  6266  000B7E  0100               	movlb	0	; () banked
  6267  000B80  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  6268  000B82  0100               	movlb	0	; () banked
  6269  000B84  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6270  000B86  0EFF               	movlw	255
  6271  000B88  0100               	movlb	0	; () banked
  6272  000B8A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6273  000B8C  0100               	movlb	0	; () banked
  6274  000B8E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6275  000B90  0E00               	movlw	0
  6276  000B92  0100               	movlb	0	; () banked
  6277  000B94  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6278  000B96  0100               	movlb	0	; () banked
  6279  000B98  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6280  000B9A  0E00               	movlw	0
  6281  000B9C  0100               	movlb	0	; () banked
  6282  000B9E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6283  000BA0  0100               	movlb	0	; () banked
  6284  000BA2  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6288  000BA4  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  6289  000BA8  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6290  000BAC  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6291  000BB0  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6292  000BB4  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  6293  000BB8  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6294  000BBC  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6295  000BC0  0100               	movlb	0	; () banked
  6296  000BC2  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  6297  000BC4  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6298  000BC8  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6299  000BCC  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6300  000BD0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6301                           
  6302                           ; BSR set to: 0
  6303                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6304  000BD4  C07D  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6308  000BD8  0100               	movlb	0	; () banked
  6309  000BDA  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6310  000BDC  D003               	goto	l524
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6314  000BDE  010F               	movlb	15	; () banked
  6315  000BE0  8115               	bsf	21,0,b	;volatile
  6316  000BE2  D002               	goto	l525
  6317  000BE4                     l524:
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;inc\CANlib.h: 1050: else
  6321                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6322  000BE4  010F               	movlb	15	; () banked
  6323  000BE6  9115               	bcf	21,0,b	;volatile
  6324  000BE8                     l525:
  6325                           
  6326                           ; BSR set to: 15
  6327                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6328  000BE8  0100               	movlb	0	; () banked
  6329  000BEA  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6330  000BEC  D003               	goto	l526
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6334  000BEE  010F               	movlb	15	; () banked
  6335  000BF0  8315               	bsf	21,1,b	;volatile
  6336  000BF2  D002               	goto	l527
  6337  000BF4                     l526:
  6338                           
  6339                           ; BSR set to: 0
  6340                           ;inc\CANlib.h: 1055: else
  6341                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6342  000BF4  010F               	movlb	15	; () banked
  6343  000BF6  9315               	bcf	21,1,b	;volatile
  6344  000BF8                     l527:
  6345                           
  6346                           ; BSR set to: 15
  6347                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6348  000BF8  0100               	movlb	0	; () banked
  6349  000BFA  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6350  000BFC  D003               	goto	l528
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6354  000BFE  010F               	movlb	15	; () banked
  6355  000C00  8B15               	bsf	21,5,b	;volatile
  6356  000C02  D002               	goto	l529
  6357  000C04                     l528:
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;inc\CANlib.h: 1060: else
  6361                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6362  000C04  010F               	movlb	15	; () banked
  6363  000C06  9B15               	bcf	21,5,b	;volatile
  6364  000C08                     l529:
  6365                           
  6366                           ; BSR set to: 15
  6367                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6368  000C08  0100               	movlb	0	; () banked
  6369  000C0A  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6370  000C0C  D003               	goto	l530
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6374  000C0E  010F               	movlb	15	; () banked
  6375  000C10  8D15               	bsf	21,6,b	;volatile
  6376  000C12  D002               	goto	l531
  6377  000C14                     l530:
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;inc\CANlib.h: 1065: else
  6381                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6382  000C14  010F               	movlb	15	; () banked
  6383  000C16  9D15               	bcf	21,6,b	;volatile
  6384  000C18                     l531:
  6385                           
  6386                           ; BSR set to: 15
  6387                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6388  000C18  0100               	movlb	0	; () banked
  6389  000C1A  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6390  000C1C  D003               	goto	l532
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6394  000C1E  010F               	movlb	15	; () banked
  6395  000C20  8F15               	bsf	21,7,b	;volatile
  6396  000C22  D002               	goto	l2992
  6397  000C24                     l532:
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;inc\CANlib.h: 1070: else
  6401                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6402  000C24  010F               	movlb	15	; () banked
  6403  000C26  9F15               	bcf	21,7,b	;volatile
  6404  000C28                     l2992:
  6405                           
  6406                           ; BSR set to: 15
  6407                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6408  000C28  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  6409  000C2C  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6410  000C30  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6411  000C34  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6412  000C38  0E16               	movlw	22
  6413  000C3A  D006               	goto	u3120
  6414  000C3C                     u3125:
  6415  000C3C  0100               	movlb	0	; () banked
  6416  000C3E  90D8               	bcf	status,0,c
  6417  000C40  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6418  000C42  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6419  000C44  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6420  000C46  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  6421  000C48                     u3120:
  6422  000C48  2EE8               	decfsz	wreg,f,c
  6423  000C4A  D7F8               	goto	u3125
  6424  000C4C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6425  000C50  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6426  000C54  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6427  000C58  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6431  000C5C  0100               	movlb	0	; () banked
  6432  000C5E  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  6433  000C60  0100               	movlb	0	; () banked
  6434  000C62  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6435  000C64  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6436  000C66  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6437  000C68  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6441  000C6A  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6442  000C6E  0012               	return	
  6443  000C70                     __end_of_CANSetFilter:
  6444                           	opt stack 0
  6445                           tblptru	equ	0xFF8
  6446                           tblptrh	equ	0xFF7
  6447                           tblptrl	equ	0xFF6
  6448                           tablat	equ	0xFF5
  6449                           prodh	equ	0xFF4
  6450                           prodl	equ	0xFF3
  6451                           intcon	equ	0xFF2
  6452                           intcon2	equ	0xFF1
  6453                           postinc0	equ	0xFEE
  6454                           wreg	equ	0xFE8
  6455                           postdec1	equ	0xFE5
  6456                           fsr1l	equ	0xFE1
  6457                           indf2	equ	0xFDF
  6458                           fsr2h	equ	0xFDA
  6459                           fsr2l	equ	0xFD9
  6460                           status	equ	0xFD8
  6461                           
  6462 ;; *************** function _CANOperationMode *****************
  6463 ;; Defined at:
  6464 ;;		line 206 in file "C:/Asus WebStorage/simone.righetti97@gmail.com/MySyncFolder/Tesina/LaurTec_PIC_libraries_v_3.3.0/i
      +nc\CANlib.h"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;  mode            1    wreg     enum E16838
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;  mode            1   19[BANK0 ] enum E16838
  6469 ;; Return value:  Size  Location     Type
  6470 ;;		None               void
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6478 ;;      Params:         0       0       0       0
  6479 ;;      Locals:         0       1       0       0
  6480 ;;      Temps:          0       0       0       0
  6481 ;;      Totals:         0       1       0       0
  6482 ;;Total ram usage:        1 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    4
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_CANInitialize
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492                           	psect	text11
  6493  002828                     __ptext11:
  6494                           	opt stack 0
  6495  002828                     _CANOperationMode:
  6496                           	opt stack 24
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;incstack = 0
  6500                           ;CANOperationMode@mode stored from wreg
  6501  002828  0100               	movlb	0	; () banked
  6502  00282A  6F73               	movwf	CANOperationMode@mode& (0+255),b
  6503                           
  6504                           ;inc\CANlib.h: 208: CANCON = mode;
  6505  00282C  C073  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6506  002830                     l2588:
  6507  002830  506E               	movf	3950,w,c	;volatile
  6508  002832  0BE0               	andlw	224
  6509  002834  0100               	movlb	0	; () banked
  6510  002836  1973               	xorwf	CANOperationMode@mode& (0+255),w,b
  6511  002838  B4D8               	btfsc	status,2,c
  6512  00283A  0012               	return	
  6513  00283C  D7F9               	goto	l2588
  6514  00283E                     __end_of_CANOperationMode:
  6515                           	opt stack 0
  6516                           tblptru	equ	0xFF8
  6517                           tblptrh	equ	0xFF7
  6518                           tblptrl	equ	0xFF6
  6519                           tablat	equ	0xFF5
  6520                           prodh	equ	0xFF4
  6521                           prodl	equ	0xFF3
  6522                           intcon	equ	0xFF2
  6523                           intcon2	equ	0xFF1
  6524                           postinc0	equ	0xFEE
  6525                           wreg	equ	0xFE8
  6526                           postdec1	equ	0xFE5
  6527                           fsr1l	equ	0xFE1
  6528                           indf2	equ	0xFDF
  6529                           fsr2h	equ	0xFDA
  6530                           fsr2l	equ	0xFD9
  6531                           status	equ	0xFD8
  6532                           
  6533 ;; *************** function _calibrazione *****************
  6534 ;; Defined at:
  6535 ;;		line 173 in file "newmain.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;		None
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;		None
  6540 ;; Return value:  Size  Location     Type
  6541 ;;		None               void
  6542 ;; Registers used:
  6543 ;;		wreg, status,2, status,0, cstack
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6549 ;;      Params:         0       0       0       0
  6550 ;;      Locals:         0       0       0       0
  6551 ;;      Temps:          0       0       0       0
  6552 ;;      Totals:         0       0       0       0
  6553 ;;Total ram usage:        0 bytes
  6554 ;; Hardware stack levels used:    1
  6555 ;; Hardware stack levels required when called:    5
  6556 ;; This function calls:
  6557 ;;		_BusyADC
  6558 ;;		_ConvertADC
  6559 ;;		_ReadADC
  6560 ;;		___lwdiv
  6561 ;; This function is called by:
  6562 ;;		_main
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           	psect	text12
  6567  0026E4                     __ptext12:
  6568                           	opt stack 0
  6569  0026E4                     _calibrazione:
  6570                           	opt stack 25
  6571                           
  6572                           ;newmain.c: 174: ConvertADC();
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;incstack = 0
  6576  0026E4  EC50  F014         	call	_ConvertADC	;wreg free
  6577  0026E8                     l3570:
  6578  0026E8  EC3C  F014         	call	_BusyADC	;wreg free
  6579  0026EC  0900               	iorlw	0
  6580  0026EE  A4D8               	btfss	status,2,c
  6581  0026F0  D7FB               	goto	l3570
  6582                           
  6583                           ;newmain.c: 176: ADCResult = ReadADC();
  6584  0026F2  EC2A  F014         	call	_ReadADC	;wreg free
  6585  0026F6  C073  F0B5         	movff	?_ReadADC,_ADCResult
  6586  0026FA  C074  F0B6         	movff	?_ReadADC+1,_ADCResult+1
  6587                           
  6588                           ;newmain.c: 177: calibration = (ADCResult - 511) / 45;
  6589  0026FE  0E01               	movlw	1
  6590  002700  0100               	movlb	0	; () banked
  6591  002702  25B5               	addwf	_ADCResult& (0+255),w,b
  6592  002704  0100               	movlb	0	; () banked
  6593  002706  6F73               	movwf	___lwdiv@dividend& (0+255),b
  6594  002708  0EFE               	movlw	254
  6595  00270A  0100               	movlb	0	; () banked
  6596  00270C  21B6               	addwfc	(_ADCResult+1)& (0+255),w,b
  6597  00270E  0100               	movlb	0	; () banked
  6598  002710  6F74               	movwf	(___lwdiv@dividend+1)& (0+255),b
  6599  002712  0E00               	movlw	0
  6600  002714  0100               	movlb	0	; () banked
  6601  002716  6F76               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6602  002718  0E2D               	movlw	45
  6603  00271A  6F75               	movwf	___lwdiv@divisor& (0+255),b
  6604  00271C  ECC8  F012         	call	___lwdiv	;wreg free
  6605  002720  C073  F00D         	movff	?___lwdiv,_calibration
  6606  002724  C074  F00E         	movff	?___lwdiv+1,_calibration+1
  6607  002728  0012               	return		;funcret
  6608  00272A                     __end_of_calibrazione:
  6609                           	opt stack 0
  6610                           tblptru	equ	0xFF8
  6611                           tblptrh	equ	0xFF7
  6612                           tblptrl	equ	0xFF6
  6613                           tablat	equ	0xFF5
  6614                           prodh	equ	0xFF4
  6615                           prodl	equ	0xFF3
  6616                           intcon	equ	0xFF2
  6617                           intcon2	equ	0xFF1
  6618                           postinc0	equ	0xFEE
  6619                           wreg	equ	0xFE8
  6620                           postdec1	equ	0xFE5
  6621                           fsr1l	equ	0xFE1
  6622                           indf2	equ	0xFDF
  6623                           fsr2h	equ	0xFDA
  6624                           fsr2l	equ	0xFD9
  6625                           status	equ	0xFD8
  6626                           
  6627 ;; *************** function ___lwdiv *****************
  6628 ;; Defined at:
  6629 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  dividend        2   19[BANK0 ] unsigned int 
  6632 ;;  divisor         2   21[BANK0 ] unsigned int 
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;  quotient        2   23[BANK0 ] unsigned int 
  6635 ;;  counter         1   25[BANK0 ] unsigned char 
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  2   19[BANK0 ] unsigned int 
  6638 ;; Registers used:
  6639 ;;		wreg, status,2, status,0
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6645 ;;      Params:         0       4       0       0
  6646 ;;      Locals:         0       3       0       0
  6647 ;;      Temps:          0       0       0       0
  6648 ;;      Totals:         0       7       0       0
  6649 ;;Total ram usage:        7 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:    4
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_calibrazione
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text13
  6660  002590                     __ptext13:
  6661                           	opt stack 0
  6662  002590                     ___lwdiv:
  6663                           	opt stack 25
  6664                           
  6665                           ;incstack = 0
  6666  002590  0E00               	movlw	0
  6667  002592  0100               	movlb	0	; () banked
  6668  002594  6F78               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6669  002596  0E00               	movlw	0
  6670  002598  6F77               	movwf	___lwdiv@quotient& (0+255),b
  6671                           
  6672                           ; BSR set to: 0
  6673  00259A  0100               	movlb	0	; () banked
  6674  00259C  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6675  00259E  0100               	movlb	0	; () banked
  6676  0025A0  1176               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6677  0025A2  B4D8               	btfsc	status,2,c
  6678  0025A4  D02C               	goto	l1129
  6679                           
  6680                           ; BSR set to: 0
  6681  0025A6  0E01               	movlw	1
  6682  0025A8  0100               	movlb	0	; () banked
  6683  0025AA  6F79               	movwf	___lwdiv@counter& (0+255),b
  6684  0025AC  D006               	goto	l3334
  6685  0025AE                     l3332:
  6686                           
  6687                           ; BSR set to: 0
  6688  0025AE  0100               	movlb	0	; () banked
  6689  0025B0  90D8               	bcf	status,0,c
  6690  0025B2  3775               	rlcf	___lwdiv@divisor& (0+255),f,b
  6691  0025B4  3776               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6692  0025B6  0100               	movlb	0	; () banked
  6693  0025B8  2B79               	incf	___lwdiv@counter& (0+255),f,b
  6694  0025BA                     l3334:
  6695                           
  6696                           ; BSR set to: 0
  6697  0025BA  0100               	movlb	0	; () banked
  6698  0025BC  AF76               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6699  0025BE  D7F7               	goto	l3332
  6700  0025C0                     l3336:
  6701                           
  6702                           ; BSR set to: 0
  6703  0025C0  0100               	movlb	0	; () banked
  6704  0025C2  90D8               	bcf	status,0,c
  6705  0025C4  3777               	rlcf	___lwdiv@quotient& (0+255),f,b
  6706  0025C6  3778               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6707                           
  6708                           ; BSR set to: 0
  6709  0025C8  0100               	movlb	0	; () banked
  6710  0025CA  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6711  0025CC  0100               	movlb	0	; () banked
  6712  0025CE  5D73               	subwf	___lwdiv@dividend& (0+255),w,b
  6713  0025D0  0100               	movlb	0	; () banked
  6714  0025D2  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6715  0025D4  0100               	movlb	0	; () banked
  6716  0025D6  5974               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6717  0025D8  A0D8               	btfss	status,0,c
  6718  0025DA  D00A               	goto	l3344
  6719                           
  6720                           ; BSR set to: 0
  6721  0025DC  0100               	movlb	0	; () banked
  6722  0025DE  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6723  0025E0  0100               	movlb	0	; () banked
  6724  0025E2  5F73               	subwf	___lwdiv@dividend& (0+255),f,b
  6725  0025E4  0100               	movlb	0	; () banked
  6726  0025E6  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6727  0025E8  0100               	movlb	0	; () banked
  6728  0025EA  5B74               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6729                           
  6730                           ; BSR set to: 0
  6731  0025EC  0100               	movlb	0	; () banked
  6732  0025EE  8177               	bsf	___lwdiv@quotient& (0+255),0,b
  6733  0025F0                     l3344:
  6734                           
  6735                           ; BSR set to: 0
  6736  0025F0  0100               	movlb	0	; () banked
  6737  0025F2  90D8               	bcf	status,0,c
  6738  0025F4  3376               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6739  0025F6  3375               	rrcf	___lwdiv@divisor& (0+255),f,b
  6740                           
  6741                           ; BSR set to: 0
  6742  0025F8  0100               	movlb	0	; () banked
  6743  0025FA  2F79               	decfsz	___lwdiv@counter& (0+255),f,b
  6744  0025FC  D7E1               	goto	l3336
  6745  0025FE                     l1129:
  6746                           
  6747                           ; BSR set to: 0
  6748  0025FE  C077  F073         	movff	___lwdiv@quotient,?___lwdiv
  6749  002602  C078  F074         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6750                           
  6751                           ; BSR set to: 0
  6752  002606  0012               	return		;funcret
  6753  002608                     __end_of___lwdiv:
  6754                           	opt stack 0
  6755                           tblptru	equ	0xFF8
  6756                           tblptrh	equ	0xFF7
  6757                           tblptrl	equ	0xFF6
  6758                           tablat	equ	0xFF5
  6759                           prodh	equ	0xFF4
  6760                           prodl	equ	0xFF3
  6761                           intcon	equ	0xFF2
  6762                           intcon2	equ	0xFF1
  6763                           postinc0	equ	0xFEE
  6764                           wreg	equ	0xFE8
  6765                           postdec1	equ	0xFE5
  6766                           fsr1l	equ	0xFE1
  6767                           indf2	equ	0xFDF
  6768                           fsr2h	equ	0xFDA
  6769                           fsr2l	equ	0xFD9
  6770                           status	equ	0xFD8
  6771                           
  6772 ;; *************** function _ReadADC *****************
  6773 ;; Defined at:
  6774 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcread.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;		None
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;		None
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  2   19[BANK0 ] int 
  6781 ;; Registers used:
  6782 ;;		wreg, status,2
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6788 ;;      Params:         0       2       0       0
  6789 ;;      Locals:         0       0       0       0
  6790 ;;      Temps:          0       2       0       0
  6791 ;;      Totals:         0       4       0       0
  6792 ;;Total ram usage:        4 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    4
  6795 ;; This function calls:
  6796 ;;		Nothing
  6797 ;; This function is called by:
  6798 ;;		_calibrazione
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802                           	psect	text14
  6803  002854                     __ptext14:
  6804                           	opt stack 0
  6805  002854                     _ReadADC:
  6806                           	opt stack 25
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;incstack = 0
  6810  002854  50C4               	movf	4036,w,c	;volatile
  6811  002856  0100               	movlb	0	; () banked
  6812  002858  6F75               	movwf	??_ReadADC& (0+255),b
  6813  00285A  50C3               	movf	4035,w,c	;volatile
  6814  00285C  0100               	movlb	0	; () banked
  6815  00285E  6F73               	movwf	?_ReadADC& (0+255),b
  6816  002860  C075  F074         	movff	??_ReadADC,?_ReadADC+1
  6817  002864  0012               	return	
  6818  002866                     __end_of_ReadADC:
  6819                           	opt stack 0
  6820                           tblptru	equ	0xFF8
  6821                           tblptrh	equ	0xFF7
  6822                           tblptrl	equ	0xFF6
  6823                           tablat	equ	0xFF5
  6824                           prodh	equ	0xFF4
  6825                           prodl	equ	0xFF3
  6826                           intcon	equ	0xFF2
  6827                           intcon2	equ	0xFF1
  6828                           postinc0	equ	0xFEE
  6829                           wreg	equ	0xFE8
  6830                           postdec1	equ	0xFE5
  6831                           fsr1l	equ	0xFE1
  6832                           indf2	equ	0xFDF
  6833                           fsr2h	equ	0xFDA
  6834                           fsr2l	equ	0xFD9
  6835                           status	equ	0xFD8
  6836                           
  6837 ;; *************** function _ConvertADC *****************
  6838 ;; Defined at:
  6839 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcconv.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;		None
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;		None
  6844 ;; Return value:  Size  Location     Type
  6845 ;;		None               void
  6846 ;; Registers used:
  6847 ;;		None
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6853 ;;      Params:         0       0       0       0
  6854 ;;      Locals:         0       0       0       0
  6855 ;;      Temps:          0       0       0       0
  6856 ;;      Totals:         0       0       0       0
  6857 ;;Total ram usage:        0 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    4
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_calibrazione
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           	psect	text15
  6868  0028A0                     __ptext15:
  6869                           	opt stack 0
  6870  0028A0                     _ConvertADC:
  6871                           	opt stack 25
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;incstack = 0
  6875  0028A0  82C2               	bsf	4034,1,c	;volatile
  6876  0028A2  0012               	return		;funcret
  6877  0028A4                     __end_of_ConvertADC:
  6878                           	opt stack 0
  6879                           tblptru	equ	0xFF8
  6880                           tblptrh	equ	0xFF7
  6881                           tblptrl	equ	0xFF6
  6882                           tablat	equ	0xFF5
  6883                           prodh	equ	0xFF4
  6884                           prodl	equ	0xFF3
  6885                           intcon	equ	0xFF2
  6886                           intcon2	equ	0xFF1
  6887                           postinc0	equ	0xFEE
  6888                           wreg	equ	0xFE8
  6889                           postdec1	equ	0xFE5
  6890                           fsr1l	equ	0xFE1
  6891                           indf2	equ	0xFDF
  6892                           fsr2h	equ	0xFDA
  6893                           fsr2l	equ	0xFD9
  6894                           status	equ	0xFD8
  6895                           
  6896 ;; *************** function _BusyADC *****************
  6897 ;; Defined at:
  6898 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcbusy.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;		None
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;		None
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  1    wreg      unsigned char 
  6905 ;; Registers used:
  6906 ;;		wreg
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6912 ;;      Params:         0       0       0       0
  6913 ;;      Locals:         0       0       0       0
  6914 ;;      Temps:          0       0       0       0
  6915 ;;      Totals:         0       0       0       0
  6916 ;;Total ram usage:        0 bytes
  6917 ;; Hardware stack levels used:    1
  6918 ;; Hardware stack levels required when called:    4
  6919 ;; This function calls:
  6920 ;;		Nothing
  6921 ;; This function is called by:
  6922 ;;		_calibrazione
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           	psect	text16
  6927  002878                     __ptext16:
  6928                           	opt stack 0
  6929  002878                     _BusyADC:
  6930                           	opt stack 25
  6931                           
  6932                           ;incstack = 0
  6933  002878  A2C2               	btfss	4034,1,c	;volatile
  6934  00287A  D002               	goto	u3600
  6935  00287C  0E01               	movlw	1
  6936  00287E  0012               	return	
  6937  002880                     u3600:
  6938  002880  0E00               	movlw	0
  6939  002882  0012               	return	
  6940  002884                     __end_of_BusyADC:
  6941                           	opt stack 0
  6942                           tblptru	equ	0xFF8
  6943                           tblptrh	equ	0xFF7
  6944                           tblptrl	equ	0xFF6
  6945                           tablat	equ	0xFF5
  6946                           prodh	equ	0xFF4
  6947                           prodl	equ	0xFF3
  6948                           intcon	equ	0xFF2
  6949                           intcon2	equ	0xFF1
  6950                           postinc0	equ	0xFEE
  6951                           wreg	equ	0xFE8
  6952                           postdec1	equ	0xFE5
  6953                           fsr1l	equ	0xFE1
  6954                           indf2	equ	0xFDF
  6955                           fsr2h	equ	0xFDA
  6956                           fsr2l	equ	0xFD9
  6957                           status	equ	0xFD8
  6958                           
  6959 ;; *************** function _abs *****************
  6960 ;; Defined at:
  6961 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  a               2   19[BANK0 ] int 
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;		None
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  2   19[BANK0 ] int 
  6968 ;; Registers used:
  6969 ;;		wreg, status,2, status,0
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6975 ;;      Params:         0       2       0       0
  6976 ;;      Locals:         0       0       0       0
  6977 ;;      Temps:          0       2       0       0
  6978 ;;      Totals:         0       4       0       0
  6979 ;;Total ram usage:        4 bytes
  6980 ;; Hardware stack levels used:    1
  6981 ;; Hardware stack levels required when called:    4
  6982 ;; This function calls:
  6983 ;;		Nothing
  6984 ;; This function is called by:
  6985 ;;		_main
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text17
  6990  0027D8                     __ptext17:
  6991                           	opt stack 0
  6992  0027D8                     _abs:
  6993                           	opt stack 26
  6994                           
  6995                           ;incstack = 0
  6996  0027D8  0100               	movlb	0	; () banked
  6997  0027DA  AF74               	btfss	(abs@a+1)& (0+255),7,b
  6998  0027DC  D00E               	goto	l772
  6999                           
  7000                           ; BSR set to: 0
  7001  0027DE  C073  F075         	movff	abs@a,??_abs
  7002  0027E2  C074  F076         	movff	abs@a+1,??_abs+1
  7003  0027E6  0100               	movlb	0	; () banked
  7004  0027E8  1F75               	comf	??_abs& (0+255),f,b
  7005  0027EA  1F76               	comf	(??_abs+1)& (0+255),f,b
  7006  0027EC  4B75               	infsnz	??_abs& (0+255),f,b
  7007  0027EE  2B76               	incf	(??_abs+1)& (0+255),f,b
  7008  0027F0  C075  F073         	movff	??_abs,?_abs
  7009  0027F4  C076  F074         	movff	??_abs+1,?_abs+1
  7010  0027F8  0012               	return	
  7011  0027FA                     l772:
  7012                           
  7013                           ; BSR set to: 0
  7014  0027FA  C073  F073         	movff	abs@a,?_abs
  7015  0027FE  C074  F074         	movff	abs@a+1,?_abs+1
  7016                           
  7017                           ; BSR set to: 0
  7018  002802  0012               	return		;funcret
  7019  002804                     __end_of_abs:
  7020                           	opt stack 0
  7021                           tblptru	equ	0xFF8
  7022                           tblptrh	equ	0xFF7
  7023                           tblptrl	equ	0xFF6
  7024                           tablat	equ	0xFF5
  7025                           prodh	equ	0xFF4
  7026                           prodl	equ	0xFF3
  7027                           intcon	equ	0xFF2
  7028                           intcon2	equ	0xFF1
  7029                           postinc0	equ	0xFEE
  7030                           wreg	equ	0xFE8
  7031                           postdec1	equ	0xFE5
  7032                           fsr1l	equ	0xFE1
  7033                           indf2	equ	0xFDF
  7034                           fsr2h	equ	0xFDA
  7035                           fsr2l	equ	0xFD9
  7036                           status	equ	0xFD8
  7037                           
  7038 ;; *************** function ___lmul *****************
  7039 ;; Defined at:
  7040 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  multiplier      4   19[BANK0 ] unsigned long 
  7043 ;;  multiplicand    4   23[BANK0 ] unsigned long 
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;  product         4   27[BANK0 ] unsigned long 
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  4   19[BANK0 ] unsigned long 
  7048 ;; Registers used:
  7049 ;;		wreg, status,2, status,0
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7055 ;;      Params:         0       8       0       0
  7056 ;;      Locals:         0       4       0       0
  7057 ;;      Temps:          0       0       0       0
  7058 ;;      Totals:         0      12       0       0
  7059 ;;Total ram usage:       12 bytes
  7060 ;; Hardware stack levels used:    1
  7061 ;; Hardware stack levels required when called:    4
  7062 ;; This function calls:
  7063 ;;		Nothing
  7064 ;; This function is called by:
  7065 ;;		_main
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text18
  7070  002608                     __ptext18:
  7071                           	opt stack 0
  7072  002608                     ___lmul:
  7073                           	opt stack 26
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;incstack = 0
  7077  002608  0E00               	movlw	0
  7078  00260A  0100               	movlb	0	; () banked
  7079  00260C  6F7B               	movwf	___lmul@product& (0+255),b
  7080  00260E  0E00               	movlw	0
  7081  002610  6F7C               	movwf	(___lmul@product+1)& (0+255),b
  7082  002612  0E00               	movlw	0
  7083  002614  6F7D               	movwf	(___lmul@product+2)& (0+255),b
  7084  002616  0E00               	movlw	0
  7085  002618  6F7E               	movwf	(___lmul@product+3)& (0+255),b
  7086  00261A                     l3590:
  7087                           
  7088                           ; BSR set to: 0
  7089  00261A  0100               	movlb	0	; () banked
  7090  00261C  A173               	btfss	___lmul@multiplier& (0+255),0,b
  7091  00261E  D010               	goto	l3594
  7092                           
  7093                           ; BSR set to: 0
  7094  002620  0100               	movlb	0	; () banked
  7095  002622  5177               	movf	___lmul@multiplicand& (0+255),w,b
  7096  002624  0100               	movlb	0	; () banked
  7097  002626  277B               	addwf	___lmul@product& (0+255),f,b
  7098  002628  0100               	movlb	0	; () banked
  7099  00262A  5178               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  7100  00262C  0100               	movlb	0	; () banked
  7101  00262E  237C               	addwfc	(___lmul@product+1)& (0+255),f,b
  7102  002630  0100               	movlb	0	; () banked
  7103  002632  5179               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  7104  002634  0100               	movlb	0	; () banked
  7105  002636  237D               	addwfc	(___lmul@product+2)& (0+255),f,b
  7106  002638  0100               	movlb	0	; () banked
  7107  00263A  517A               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  7108  00263C  0100               	movlb	0	; () banked
  7109  00263E  237E               	addwfc	(___lmul@product+3)& (0+255),f,b
  7110  002640                     l3594:
  7111                           
  7112                           ; BSR set to: 0
  7113  002640  0100               	movlb	0	; () banked
  7114  002642  90D8               	bcf	status,0,c
  7115  002644  3777               	rlcf	___lmul@multiplicand& (0+255),f,b
  7116  002646  3778               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  7117  002648  3779               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  7118  00264A  377A               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  7119                           
  7120                           ; BSR set to: 0
  7121  00264C  0100               	movlb	0	; () banked
  7122  00264E  90D8               	bcf	status,0,c
  7123  002650  3376               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  7124  002652  3375               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  7125  002654  3374               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  7126  002656  3373               	rrcf	___lmul@multiplier& (0+255),f,b
  7127  002658  0100               	movlb	0	; () banked
  7128  00265A  5173               	movf	___lmul@multiplier& (0+255),w,b
  7129  00265C  0100               	movlb	0	; () banked
  7130  00265E  1174               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  7131  002660  0100               	movlb	0	; () banked
  7132  002662  1175               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  7133  002664  0100               	movlb	0	; () banked
  7134  002666  1176               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  7135  002668  A4D8               	btfss	status,2,c
  7136  00266A  D7D7               	goto	l3590
  7137                           
  7138                           ; BSR set to: 0
  7139  00266C  C07B  F073         	movff	___lmul@product,?___lmul
  7140  002670  C07C  F074         	movff	___lmul@product+1,?___lmul+1
  7141  002674  C07D  F075         	movff	___lmul@product+2,?___lmul+2
  7142  002678  C07E  F076         	movff	___lmul@product+3,?___lmul+3
  7143                           
  7144                           ; BSR set to: 0
  7145  00267C  0012               	return		;funcret
  7146  00267E                     __end_of___lmul:
  7147                           	opt stack 0
  7148                           tblptru	equ	0xFF8
  7149                           tblptrh	equ	0xFF7
  7150                           tblptrl	equ	0xFF6
  7151                           tablat	equ	0xFF5
  7152                           prodh	equ	0xFF4
  7153                           prodl	equ	0xFF3
  7154                           intcon	equ	0xFF2
  7155                           intcon2	equ	0xFF1
  7156                           postinc0	equ	0xFEE
  7157                           wreg	equ	0xFE8
  7158                           postdec1	equ	0xFE5
  7159                           fsr1l	equ	0xFE1
  7160                           indf2	equ	0xFDF
  7161                           fsr2h	equ	0xFDA
  7162                           fsr2l	equ	0xFD9
  7163                           status	equ	0xFD8
  7164                           
  7165 ;; *************** function ___lldiv *****************
  7166 ;; Defined at:
  7167 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  dividend        4   31[BANK0 ] unsigned long 
  7170 ;;  divisor         4   35[BANK0 ] unsigned long 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  quotient        4   39[BANK0 ] unsigned long 
  7173 ;;  counter         1   43[BANK0 ] unsigned char 
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  4   31[BANK0 ] unsigned long 
  7176 ;; Registers used:
  7177 ;;		wreg, status,2, status,0
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7183 ;;      Params:         0       8       0       0
  7184 ;;      Locals:         0       5       0       0
  7185 ;;      Temps:          0       0       0       0
  7186 ;;      Totals:         0      13       0       0
  7187 ;;Total ram usage:       13 bytes
  7188 ;; Hardware stack levels used:    1
  7189 ;; Hardware stack levels required when called:    4
  7190 ;; This function calls:
  7191 ;;		Nothing
  7192 ;; This function is called by:
  7193 ;;		_main
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text19
  7198  0023A6                     __ptext19:
  7199                           	opt stack 0
  7200  0023A6                     ___lldiv:
  7201                           	opt stack 26
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;incstack = 0
  7205  0023A6  0E00               	movlw	0
  7206  0023A8  0100               	movlb	0	; () banked
  7207  0023AA  6F87               	movwf	___lldiv@quotient& (0+255),b
  7208  0023AC  0E00               	movlw	0
  7209  0023AE  6F88               	movwf	(___lldiv@quotient+1)& (0+255),b
  7210  0023B0  0E00               	movlw	0
  7211  0023B2  6F89               	movwf	(___lldiv@quotient+2)& (0+255),b
  7212  0023B4  0E00               	movlw	0
  7213  0023B6  6F8A               	movwf	(___lldiv@quotient+3)& (0+255),b
  7214                           
  7215                           ; BSR set to: 0
  7216  0023B8  0100               	movlb	0	; () banked
  7217  0023BA  5183               	movf	___lldiv@divisor& (0+255),w,b
  7218  0023BC  0100               	movlb	0	; () banked
  7219  0023BE  1184               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7220  0023C0  0100               	movlb	0	; () banked
  7221  0023C2  1185               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7222  0023C4  0100               	movlb	0	; () banked
  7223  0023C6  1186               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7224  0023C8  B4D8               	btfsc	status,2,c
  7225  0023CA  D042               	goto	l1076
  7226                           
  7227                           ; BSR set to: 0
  7228  0023CC  0E01               	movlw	1
  7229  0023CE  0100               	movlb	0	; () banked
  7230  0023D0  6F8B               	movwf	___lldiv@counter& (0+255),b
  7231  0023D2  D008               	goto	l3650
  7232  0023D4                     l3648:
  7233                           
  7234                           ; BSR set to: 0
  7235  0023D4  0100               	movlb	0	; () banked
  7236  0023D6  90D8               	bcf	status,0,c
  7237  0023D8  3783               	rlcf	___lldiv@divisor& (0+255),f,b
  7238  0023DA  3784               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7239  0023DC  3785               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7240  0023DE  3786               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7241  0023E0  0100               	movlb	0	; () banked
  7242  0023E2  2B8B               	incf	___lldiv@counter& (0+255),f,b
  7243  0023E4                     l3650:
  7244                           
  7245                           ; BSR set to: 0
  7246  0023E4  0100               	movlb	0	; () banked
  7247  0023E6  AF86               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7248  0023E8  D7F5               	goto	l3648
  7249  0023EA                     l3652:
  7250                           
  7251                           ; BSR set to: 0
  7252  0023EA  0100               	movlb	0	; () banked
  7253  0023EC  90D8               	bcf	status,0,c
  7254  0023EE  3787               	rlcf	___lldiv@quotient& (0+255),f,b
  7255  0023F0  3788               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7256  0023F2  3789               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7257  0023F4  378A               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7258                           
  7259                           ; BSR set to: 0
  7260  0023F6  0100               	movlb	0	; () banked
  7261  0023F8  5183               	movf	___lldiv@divisor& (0+255),w,b
  7262  0023FA  0100               	movlb	0	; () banked
  7263  0023FC  5D7F               	subwf	___lldiv@dividend& (0+255),w,b
  7264  0023FE  0100               	movlb	0	; () banked
  7265  002400  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7266  002402  0100               	movlb	0	; () banked
  7267  002404  5980               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7268  002406  0100               	movlb	0	; () banked
  7269  002408  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7270  00240A  0100               	movlb	0	; () banked
  7271  00240C  5981               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7272  00240E  0100               	movlb	0	; () banked
  7273  002410  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7274  002412  0100               	movlb	0	; () banked
  7275  002414  5982               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7276  002416  A0D8               	btfss	status,0,c
  7277  002418  D012               	goto	l3660
  7278                           
  7279                           ; BSR set to: 0
  7280  00241A  0100               	movlb	0	; () banked
  7281  00241C  5183               	movf	___lldiv@divisor& (0+255),w,b
  7282  00241E  0100               	movlb	0	; () banked
  7283  002420  5F7F               	subwf	___lldiv@dividend& (0+255),f,b
  7284  002422  0100               	movlb	0	; () banked
  7285  002424  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7286  002426  0100               	movlb	0	; () banked
  7287  002428  5B80               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7288  00242A  0100               	movlb	0	; () banked
  7289  00242C  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7290  00242E  0100               	movlb	0	; () banked
  7291  002430  5B81               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7292  002432  0100               	movlb	0	; () banked
  7293  002434  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7294  002436  0100               	movlb	0	; () banked
  7295  002438  5B82               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7296                           
  7297                           ; BSR set to: 0
  7298  00243A  0100               	movlb	0	; () banked
  7299  00243C  8187               	bsf	___lldiv@quotient& (0+255),0,b
  7300  00243E                     l3660:
  7301                           
  7302                           ; BSR set to: 0
  7303  00243E  0100               	movlb	0	; () banked
  7304  002440  90D8               	bcf	status,0,c
  7305  002442  3386               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7306  002444  3385               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7307  002446  3384               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7308  002448  3383               	rrcf	___lldiv@divisor& (0+255),f,b
  7309                           
  7310                           ; BSR set to: 0
  7311  00244A  0100               	movlb	0	; () banked
  7312  00244C  2F8B               	decfsz	___lldiv@counter& (0+255),f,b
  7313  00244E  D7CD               	goto	l3652
  7314  002450                     l1076:
  7315                           
  7316                           ; BSR set to: 0
  7317  002450  C087  F07F         	movff	___lldiv@quotient,?___lldiv
  7318  002454  C088  F080         	movff	___lldiv@quotient+1,?___lldiv+1
  7319  002458  C089  F081         	movff	___lldiv@quotient+2,?___lldiv+2
  7320  00245C  C08A  F082         	movff	___lldiv@quotient+3,?___lldiv+3
  7321                           
  7322                           ; BSR set to: 0
  7323  002460  0012               	return		;funcret
  7324  002462                     __end_of___lldiv:
  7325                           	opt stack 0
  7326                           tblptru	equ	0xFF8
  7327                           tblptrh	equ	0xFF7
  7328                           tblptrl	equ	0xFF6
  7329                           tablat	equ	0xFF5
  7330                           prodh	equ	0xFF4
  7331                           prodl	equ	0xFF3
  7332                           intcon	equ	0xFF2
  7333                           intcon2	equ	0xFF1
  7334                           postinc0	equ	0xFEE
  7335                           wreg	equ	0xFE8
  7336                           postdec1	equ	0xFE5
  7337                           fsr1l	equ	0xFE1
  7338                           indf2	equ	0xFDF
  7339                           fsr2h	equ	0xFDA
  7340                           fsr2l	equ	0xFD9
  7341                           status	equ	0xFD8
  7342                           
  7343 ;; *************** function ___awdiv *****************
  7344 ;; Defined at:
  7345 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;  dividend        2   19[BANK0 ] int 
  7348 ;;  divisor         2   21[BANK0 ] int 
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;  quotient        2   25[BANK0 ] int 
  7351 ;;  sign            1   24[BANK0 ] unsigned char 
  7352 ;;  counter         1   23[BANK0 ] unsigned char 
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  2   19[BANK0 ] int 
  7355 ;; Registers used:
  7356 ;;		wreg, status,2, status,0
  7357 ;; Tracked objects:
  7358 ;;		On entry : 0/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7362 ;;      Params:         0       4       0       0
  7363 ;;      Locals:         0       4       0       0
  7364 ;;      Temps:          0       0       0       0
  7365 ;;      Totals:         0       8       0       0
  7366 ;;Total ram usage:        8 bytes
  7367 ;; Hardware stack levels used:    1
  7368 ;; Hardware stack levels required when called:    4
  7369 ;; This function calls:
  7370 ;;		Nothing
  7371 ;; This function is called by:
  7372 ;;		_main
  7373 ;; This function uses a non-reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text20
  7377  0022E8                     __ptext20:
  7378                           	opt stack 0
  7379  0022E8                     ___awdiv:
  7380                           	opt stack 26
  7381                           
  7382                           ; BSR set to: 0
  7383                           ;incstack = 0
  7384  0022E8  0E00               	movlw	0
  7385  0022EA  0100               	movlb	0	; () banked
  7386  0022EC  6F78               	movwf	___awdiv@sign& (0+255),b
  7387                           
  7388                           ; BSR set to: 0
  7389  0022EE  0100               	movlb	0	; () banked
  7390  0022F0  AF76               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7391  0022F2  D008               	goto	l3606
  7392                           
  7393                           ; BSR set to: 0
  7394  0022F4  0100               	movlb	0	; () banked
  7395  0022F6  6D75               	negf	___awdiv@divisor& (0+255),b
  7396  0022F8  1F76               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7397  0022FA  B0D8               	btfsc	status,0,c
  7398  0022FC  2B76               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7399                           
  7400                           ; BSR set to: 0
  7401  0022FE  0E01               	movlw	1
  7402  002300  0100               	movlb	0	; () banked
  7403  002302  6F78               	movwf	___awdiv@sign& (0+255),b
  7404  002304                     l3606:
  7405                           
  7406                           ; BSR set to: 0
  7407  002304  0100               	movlb	0	; () banked
  7408  002306  AF74               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7409  002308  D008               	goto	l3612
  7410                           
  7411                           ; BSR set to: 0
  7412  00230A  0100               	movlb	0	; () banked
  7413  00230C  6D73               	negf	___awdiv@dividend& (0+255),b
  7414  00230E  1F74               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7415  002310  B0D8               	btfsc	status,0,c
  7416  002312  2B74               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7417                           
  7418                           ; BSR set to: 0
  7419  002314  0E01               	movlw	1
  7420  002316  0100               	movlb	0	; () banked
  7421  002318  1B78               	xorwf	___awdiv@sign& (0+255),f,b
  7422  00231A                     l3612:
  7423                           
  7424                           ; BSR set to: 0
  7425  00231A  0E00               	movlw	0
  7426  00231C  0100               	movlb	0	; () banked
  7427  00231E  6F7A               	movwf	(___awdiv@quotient+1)& (0+255),b
  7428  002320  0E00               	movlw	0
  7429  002322  6F79               	movwf	___awdiv@quotient& (0+255),b
  7430                           
  7431                           ; BSR set to: 0
  7432  002324  0100               	movlb	0	; () banked
  7433  002326  5175               	movf	___awdiv@divisor& (0+255),w,b
  7434  002328  0100               	movlb	0	; () banked
  7435  00232A  1176               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7436  00232C  B4D8               	btfsc	status,2,c
  7437  00232E  D02C               	goto	l3634
  7438                           
  7439                           ; BSR set to: 0
  7440  002330  0E01               	movlw	1
  7441  002332  0100               	movlb	0	; () banked
  7442  002334  6F77               	movwf	___awdiv@counter& (0+255),b
  7443  002336  D006               	goto	l3620
  7444  002338                     l3618:
  7445                           
  7446                           ; BSR set to: 0
  7447  002338  0100               	movlb	0	; () banked
  7448  00233A  90D8               	bcf	status,0,c
  7449  00233C  3775               	rlcf	___awdiv@divisor& (0+255),f,b
  7450  00233E  3776               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7451  002340  0100               	movlb	0	; () banked
  7452  002342  2B77               	incf	___awdiv@counter& (0+255),f,b
  7453  002344                     l3620:
  7454                           
  7455                           ; BSR set to: 0
  7456  002344  0100               	movlb	0	; () banked
  7457  002346  AF76               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7458  002348  D7F7               	goto	l3618
  7459  00234A                     l3622:
  7460                           
  7461                           ; BSR set to: 0
  7462  00234A  0100               	movlb	0	; () banked
  7463  00234C  90D8               	bcf	status,0,c
  7464  00234E  3779               	rlcf	___awdiv@quotient& (0+255),f,b
  7465  002350  377A               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7466                           
  7467                           ; BSR set to: 0
  7468  002352  0100               	movlb	0	; () banked
  7469  002354  5175               	movf	___awdiv@divisor& (0+255),w,b
  7470  002356  0100               	movlb	0	; () banked
  7471  002358  5D73               	subwf	___awdiv@dividend& (0+255),w,b
  7472  00235A  0100               	movlb	0	; () banked
  7473  00235C  5176               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7474  00235E  0100               	movlb	0	; () banked
  7475  002360  5974               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7476  002362  A0D8               	btfss	status,0,c
  7477  002364  D00A               	goto	l3630
  7478                           
  7479                           ; BSR set to: 0
  7480  002366  0100               	movlb	0	; () banked
  7481  002368  5175               	movf	___awdiv@divisor& (0+255),w,b
  7482  00236A  0100               	movlb	0	; () banked
  7483  00236C  5F73               	subwf	___awdiv@dividend& (0+255),f,b
  7484  00236E  0100               	movlb	0	; () banked
  7485  002370  5176               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7486  002372  0100               	movlb	0	; () banked
  7487  002374  5B74               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7488                           
  7489                           ; BSR set to: 0
  7490  002376  0100               	movlb	0	; () banked
  7491  002378  8179               	bsf	___awdiv@quotient& (0+255),0,b
  7492  00237A                     l3630:
  7493                           
  7494                           ; BSR set to: 0
  7495  00237A  0100               	movlb	0	; () banked
  7496  00237C  90D8               	bcf	status,0,c
  7497  00237E  3376               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7498  002380  3375               	rrcf	___awdiv@divisor& (0+255),f,b
  7499                           
  7500                           ; BSR set to: 0
  7501  002382  0100               	movlb	0	; () banked
  7502  002384  2F77               	decfsz	___awdiv@counter& (0+255),f,b
  7503  002386  D7E1               	goto	l3622
  7504  002388                     l3634:
  7505                           
  7506                           ; BSR set to: 0
  7507  002388  0100               	movlb	0	; () banked
  7508  00238A  5178               	movf	___awdiv@sign& (0+255),w,b
  7509  00238C  0100               	movlb	0	; () banked
  7510  00238E  B4D8               	btfsc	status,2,c
  7511  002390  D005               	goto	l3638
  7512                           
  7513                           ; BSR set to: 0
  7514  002392  0100               	movlb	0	; () banked
  7515  002394  6D79               	negf	___awdiv@quotient& (0+255),b
  7516  002396  1F7A               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7517  002398  B0D8               	btfsc	status,0,c
  7518  00239A  2B7A               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7519  00239C                     l3638:
  7520                           
  7521                           ; BSR set to: 0
  7522  00239C  C079  F073         	movff	___awdiv@quotient,?___awdiv
  7523  0023A0  C07A  F074         	movff	___awdiv@quotient+1,?___awdiv+1
  7524  0023A4  0012               	return	
  7525  0023A6                     __end_of___awdiv:
  7526                           	opt stack 0
  7527                           tblptru	equ	0xFF8
  7528                           tblptrh	equ	0xFF7
  7529                           tblptrl	equ	0xFF6
  7530                           tablat	equ	0xFF5
  7531                           prodh	equ	0xFF4
  7532                           prodl	equ	0xFF3
  7533                           intcon	equ	0xFF2
  7534                           intcon2	equ	0xFF1
  7535                           postinc0	equ	0xFEE
  7536                           wreg	equ	0xFE8
  7537                           postdec1	equ	0xFE5
  7538                           fsr1l	equ	0xFE1
  7539                           indf2	equ	0xFDF
  7540                           fsr2h	equ	0xFDA
  7541                           fsr2l	equ	0xFD9
  7542                           status	equ	0xFD8
  7543                           
  7544 ;; *************** function _CANisTXwarningON *****************
  7545 ;; Defined at:
  7546 ;;		line 1119 in file "C:/Asus WebStorage/simone.righetti97@gmail.com/MySyncFolder/Tesina/LaurTec_PIC_libraries_v_3.3.0/
      +inc\CANlib.h"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;		None
  7549 ;; Auto vars:     Size  Location     Type
  7550 ;;		None
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  1    wreg      unsigned char 
  7553 ;; Registers used:
  7554 ;;		wreg
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7560 ;;      Params:         0       0       0       0
  7561 ;;      Locals:         0       0       0       0
  7562 ;;      Temps:          0       0       0       0
  7563 ;;      Totals:         0       0       0       0
  7564 ;;Total ram usage:        0 bytes
  7565 ;; Hardware stack levels used:    1
  7566 ;; Hardware stack levels required when called:    4
  7567 ;; This function calls:
  7568 ;;		Nothing
  7569 ;; This function is called by:
  7570 ;;		_main
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           	psect	text21
  7575  002884                     __ptext21:
  7576                           	opt stack 0
  7577  002884                     _CANisTXwarningON:
  7578                           	opt stack 26
  7579                           
  7580                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7581                           
  7582                           ; BSR set to: 0
  7583                           ;incstack = 0
  7584  002884  A474               	btfss	3956,2,c	;volatile
  7585  002886  D002               	goto	u3890
  7586  002888  0E01               	movlw	1
  7587  00288A  0012               	return	
  7588  00288C                     u3890:
  7589  00288C  0E00               	movlw	0
  7590  00288E  0012               	return	
  7591  002890                     __end_of_CANisTXwarningON:
  7592                           	opt stack 0
  7593                           tblptru	equ	0xFF8
  7594                           tblptrh	equ	0xFF7
  7595                           tblptrl	equ	0xFF6
  7596                           tablat	equ	0xFF5
  7597                           prodh	equ	0xFF4
  7598                           prodl	equ	0xFF3
  7599                           intcon	equ	0xFF2
  7600                           intcon2	equ	0xFF1
  7601                           postinc0	equ	0xFEE
  7602                           wreg	equ	0xFE8
  7603                           postdec1	equ	0xFE5
  7604                           fsr1l	equ	0xFE1
  7605                           indf2	equ	0xFDF
  7606                           fsr2h	equ	0xFDA
  7607                           fsr2l	equ	0xFD9
  7608                           status	equ	0xFD8
  7609                           
  7610 ;; *************** function _CANisRXwarningON *****************
  7611 ;; Defined at:
  7612 ;;		line 1127 in file "C:/Asus WebStorage/simone.righetti97@gmail.com/MySyncFolder/Tesina/LaurTec_PIC_libraries_v_3.3.0/
      +inc\CANlib.h"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;		None
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;		None
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  1    wreg      unsigned char 
  7619 ;; Registers used:
  7620 ;;		wreg
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7626 ;;      Params:         0       0       0       0
  7627 ;;      Locals:         0       0       0       0
  7628 ;;      Temps:          0       0       0       0
  7629 ;;      Totals:         0       0       0       0
  7630 ;;Total ram usage:        0 bytes
  7631 ;; Hardware stack levels used:    1
  7632 ;; Hardware stack levels required when called:    4
  7633 ;; This function calls:
  7634 ;;		Nothing
  7635 ;; This function is called by:
  7636 ;;		_main
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text22
  7641  002890                     __ptext22:
  7642                           	opt stack 0
  7643  002890                     _CANisRXwarningON:
  7644                           	opt stack 26
  7645                           
  7646                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7647                           
  7648                           ;incstack = 0
  7649  002890  A274               	btfss	3956,1,c	;volatile
  7650  002892  D002               	goto	u3900
  7651  002894  0E01               	movlw	1
  7652  002896  0012               	return	
  7653  002898                     u3900:
  7654  002898  0E00               	movlw	0
  7655  00289A  0012               	return	
  7656  00289C                     __end_of_CANisRXwarningON:
  7657                           	opt stack 0
  7658                           tblptru	equ	0xFF8
  7659                           tblptrh	equ	0xFF7
  7660                           tblptrl	equ	0xFF6
  7661                           tablat	equ	0xFF5
  7662                           prodh	equ	0xFF4
  7663                           prodl	equ	0xFF3
  7664                           intcon	equ	0xFF2
  7665                           intcon2	equ	0xFF1
  7666                           postinc0	equ	0xFEE
  7667                           wreg	equ	0xFE8
  7668                           postdec1	equ	0xFE5
  7669                           fsr1l	equ	0xFE1
  7670                           indf2	equ	0xFDF
  7671                           fsr2h	equ	0xFDA
  7672                           fsr2l	equ	0xFD9
  7673                           status	equ	0xFD8
  7674                           
  7675 ;; *************** function _ISR_bassa *****************
  7676 ;; Defined at:
  7677 ;;		line 75 in file "newmain.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;		None
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;		None
  7682 ;; Return value:  Size  Location     Type
  7683 ;;		None               void
  7684 ;; Registers used:
  7685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7691 ;;      Params:         0       0       0       0
  7692 ;;      Locals:         0       0       0       0
  7693 ;;      Temps:         19       0       0       0
  7694 ;;      Totals:        19       0       0       0
  7695 ;;Total ram usage:       19 bytes
  7696 ;; Hardware stack levels used:    1
  7697 ;; Hardware stack levels required when called:    3
  7698 ;; This function calls:
  7699 ;;		_CANisRxReady
  7700 ;;		_CANreceiveMessage
  7701 ;; This function is called by:
  7702 ;;		Interrupt level 1
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	intcodelo
  7707  000018                     __pintcodelo:
  7708                           	opt stack 0
  7709  000018                     _ISR_bassa:
  7710                           	opt stack 24
  7711                           
  7712                           ;incstack = 0
  7713  000018  8045               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7714  00001A  CFD8 F02F          	movff	status,??_ISR_bassa+2
  7715  00001E  CFE8 F030          	movff	wreg,??_ISR_bassa+3
  7716  000022  CFE0 F031          	movff	bsr,??_ISR_bassa+4
  7717  000026  CFFA F032          	movff	pclath,??_ISR_bassa+5
  7718  00002A  CFFB F033          	movff	pclatu,??_ISR_bassa+6
  7719  00002E  CFE9 F034          	movff	fsr0l,??_ISR_bassa+7
  7720  000032  CFEA F035          	movff	fsr0h,??_ISR_bassa+8
  7721  000036  CFE1 F036          	movff	fsr1l,??_ISR_bassa+9
  7722  00003A  CFE2 F037          	movff	fsr1h,??_ISR_bassa+10
  7723  00003E  CFD9 F038          	movff	fsr2l,??_ISR_bassa+11
  7724  000042  CFDA F039          	movff	fsr2h,??_ISR_bassa+12
  7725  000046  CFF3 F03A          	movff	prodl,??_ISR_bassa+13
  7726  00004A  CFF4 F03B          	movff	prodh,??_ISR_bassa+14
  7727  00004E  CFF6 F03C          	movff	tblptrl,??_ISR_bassa+15
  7728  000052  CFF7 F03D          	movff	tblptrh,??_ISR_bassa+16
  7729  000056  CFF8 F03E          	movff	tblptru,??_ISR_bassa+17
  7730  00005A  CFF5 F03F          	movff	tablat,??_ISR_bassa+18
  7731                           
  7732                           ;newmain.c: 76: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7733  00005E  A0A4               	btfss	4004,0,c	;volatile
  7734  000060  B2A4               	btfsc	4004,1,c	;volatile
  7735  000062  D001               	goto	i1l3696
  7736  000064  D04F               	goto	i1l3728
  7737  000066                     i1l3696:
  7738                           
  7739                           ;newmain.c: 77: if (CANisRxReady()) {
  7740  000066  EC1F  F014         	call	_CANisRxReady	;wreg free
  7741  00006A  0900               	iorlw	0
  7742  00006C  B4D8               	btfsc	status,2,c
  7743  00006E  D048               	goto	i1l3724
  7744                           
  7745                           ;newmain.c: 78: CANreceiveMessage(&msg);
  7746  000070  0E12               	movlw	low _msg
  7747  000072  6E21               	movwf	CANreceiveMessage@msg,c
  7748  000074  0E00               	movlw	high _msg
  7749  000076  6E22               	movwf	CANreceiveMessage@msg+1,c
  7750  000078  ECFE  F009         	call	_CANreceiveMessage	;wreg free
  7751                           
  7752                           ;newmain.c: 79: if (msg.RTR == 1) {
  7753  00007C  0420               	decf	_msg+14,w,c
  7754  00007E  A4D8               	btfss	status,2,c
  7755  000080  D00D               	goto	i1l3704
  7756                           
  7757                           ;newmain.c: 80: id = msg.identifier;
  7758  000082  C012  F0A9         	movff	_msg,_id
  7759  000086  C013  F0AA         	movff	_msg+1,_id+1
  7760  00008A  C014  F0AB         	movff	_msg+2,_id+2
  7761  00008E  C015  F0AC         	movff	_msg+3,_id+3
  7762                           
  7763                           ;newmain.c: 81: remote_frame = msg.RTR;
  7764  000092  A020               	btfss	_msg+14,0,c
  7765  000094  D002               	goto	i1u416_20
  7766  000096  8044               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7767  000098  D001               	goto	i1l3704
  7768  00009A                     i1u416_20:
  7769  00009A  9044               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7770  00009C                     i1l3704:
  7771                           
  7772                           ;newmain.c: 82: }
  7773                           ;newmain.c: 83: if (msg.identifier == 0b10000000000000000000000000000) {
  7774  00009C  0E10               	movlw	16
  7775  00009E  1815               	xorwf	_msg+3,w,c
  7776  0000A0  1012               	iorwf	_msg,w,c
  7777  0000A2  1013               	iorwf	_msg+1,w,c
  7778  0000A4  1014               	iorwf	_msg+2,w,c
  7779  0000A6  A4D8               	btfss	status,2,c
  7780  0000A8  D016               	goto	i1l3716
  7781                           
  7782                           ;newmain.c: 84: data_array[0] = theorySteering;
  7783  0000AA  C011  F0BB         	movff	_theorySteering,_data_array
  7784                           
  7785                           ;newmain.c: 85: if (theorySteering <= limiteDx) {
  7786  0000AE  5011               	movf	_theorySteering,w,c
  7787  0000B0  6E2D               	movwf	??_ISR_bassa& (0+255),c
  7788  0000B2  6A2E               	clrf	(??_ISR_bassa+1)& (0+255),c
  7789  0000B4  502D               	movf	??_ISR_bassa,w,c
  7790  0000B6  5C0F               	subwf	_limiteDx,w,c
  7791  0000B8  502E               	movf	??_ISR_bassa+1,w,c
  7792  0000BA  5810               	subwfb	_limiteDx+1,w,c
  7793  0000BC  B0D8               	btfsc	status,0,c
  7794                           
  7795                           ;newmain.c: 86: theorySteering = limiteDx;
  7796  0000BE  C00F  F011         	movff	_limiteDx,_theorySteering
  7797                           
  7798                           ;newmain.c: 87: }
  7799                           ;newmain.c: 88: if (theorySteering >= limiteSx) {
  7800  0000C2  5011               	movf	_theorySteering,w,c
  7801  0000C4  6E2D               	movwf	??_ISR_bassa& (0+255),c
  7802  0000C6  6A2E               	clrf	(??_ISR_bassa+1)& (0+255),c
  7803  0000C8  5040               	movf	_limiteSx,w,c
  7804  0000CA  5C2D               	subwf	??_ISR_bassa,w,c
  7805  0000CC  5041               	movf	_limiteSx+1,w,c
  7806  0000CE  582E               	subwfb	??_ISR_bassa+1,w,c
  7807  0000D0  B0D8               	btfsc	status,0,c
  7808                           
  7809                           ;newmain.c: 89: theorySteering = limiteSx;
  7810  0000D2  C040  F011         	movff	_limiteSx,_theorySteering
  7811  0000D6                     i1l3716:
  7812                           
  7813                           ;newmain.c: 90: }
  7814                           ;newmain.c: 91: }
  7815                           ;newmain.c: 92: if (msg.identifier == 0b00000000000000000000000000011) {
  7816  0000D6  0E03               	movlw	3
  7817  0000D8  1812               	xorwf	_msg,w,c
  7818  0000DA  1013               	iorwf	_msg+1,w,c
  7819  0000DC  1014               	iorwf	_msg+2,w,c
  7820  0000DE  1015               	iorwf	_msg+3,w,c
  7821  0000E0  A4D8               	btfss	status,2,c
  7822  0000E2  D00E               	goto	i1l3724
  7823                           
  7824                           ;newmain.c: 94: theorySteering = msg.data[0];
  7825  0000E4  C016  F011         	movff	_msg+4,_theorySteering
  7826                           
  7827                           ;newmain.c: 95: currentSteering = theorySteering + calibration;
  7828  0000E8  5011               	movf	_theorySteering,w,c
  7829  0000EA  240D               	addwf	_calibration,w,c
  7830  0000EC  0100               	movlb	0	; () banked
  7831  0000EE  6FC3               	movwf	_currentSteering& (0+255),b
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;newmain.c: 96: previousTimeCounter = timeCounter;
  7835  0000F0  C005  F0AD         	movff	_timeCounter,_previousTimeCounter
  7836  0000F4  C006  F0AE         	movff	_timeCounter+1,_previousTimeCounter+1
  7837  0000F8  C007  F0AF         	movff	_timeCounter+2,_previousTimeCounter+2
  7838  0000FC  C008  F0B0         	movff	_timeCounter+3,_previousTimeCounter+3
  7839  000100                     i1l3724:
  7840                           
  7841                           ;newmain.c: 97: }
  7842                           ;newmain.c: 98: }
  7843                           ;newmain.c: 99: PIR3bits.RXB0IF = 0;
  7844  000100  90A4               	bcf	4004,0,c	;volatile
  7845                           
  7846                           ;newmain.c: 100: PIR3bits.RXB1IF = 0;
  7847  000102  92A4               	bcf	4004,1,c	;volatile
  7848  000104                     i1l3728:
  7849                           
  7850                           ;newmain.c: 101: }
  7851                           ;newmain.c: 102: if (PIR2bits.TMR3IF) {
  7852  000104  A2A1               	btfss	4001,1,c	;volatile
  7853  000106  D00B               	goto	i1l651
  7854                           
  7855                           ;newmain.c: 103: timeCounter++;
  7856  000108  0E01               	movlw	1
  7857  00010A  2605               	addwf	_timeCounter,f,c
  7858  00010C  0E00               	movlw	0
  7859  00010E  2206               	addwfc	_timeCounter+1,f,c
  7860  000110  2207               	addwfc	_timeCounter+2,f,c
  7861  000112  2208               	addwfc	_timeCounter+3,f,c
  7862                           
  7863                           ;newmain.c: 104: TMR3H = 0x63;
  7864  000114  0E63               	movlw	99
  7865  000116  6EB3               	movwf	4019,c	;volatile
  7866                           
  7867                           ;newmain.c: 105: TMR3L = 0xC0;
  7868  000118  0EC0               	movlw	192
  7869  00011A  6EB2               	movwf	4018,c	;volatile
  7870                           
  7871                           ;newmain.c: 106: PIR2bits.TMR3IF = 0;
  7872  00011C  92A1               	bcf	4001,1,c	;volatile
  7873  00011E                     i1l651:
  7874  00011E  C03F  FFF5         	movff	??_ISR_bassa+18,tablat
  7875  000122  C03E  FFF8         	movff	??_ISR_bassa+17,tblptru
  7876  000126  C03D  FFF7         	movff	??_ISR_bassa+16,tblptrh
  7877  00012A  C03C  FFF6         	movff	??_ISR_bassa+15,tblptrl
  7878  00012E  C03B  FFF4         	movff	??_ISR_bassa+14,prodh
  7879  000132  C03A  FFF3         	movff	??_ISR_bassa+13,prodl
  7880  000136  C039  FFDA         	movff	??_ISR_bassa+12,fsr2h
  7881  00013A  C038  FFD9         	movff	??_ISR_bassa+11,fsr2l
  7882  00013E  C037  FFE2         	movff	??_ISR_bassa+10,fsr1h
  7883  000142  C036  FFE1         	movff	??_ISR_bassa+9,fsr1l
  7884  000146  C035  FFEA         	movff	??_ISR_bassa+8,fsr0h
  7885  00014A  C034  FFE9         	movff	??_ISR_bassa+7,fsr0l
  7886  00014E  C033  FFFB         	movff	??_ISR_bassa+6,pclatu
  7887  000152  C032  FFFA         	movff	??_ISR_bassa+5,pclath
  7888  000156  C031  FFE0         	movff	??_ISR_bassa+4,bsr
  7889  00015A  C030  FFE8         	movff	??_ISR_bassa+3,wreg
  7890  00015E  C02F  FFD8         	movff	??_ISR_bassa+2,status
  7891  000162  9045               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7892  000164  0010               	retfie	
  7893  000166                     __end_of_ISR_bassa:
  7894                           	opt stack 0
  7895                           pclatu	equ	0xFFB
  7896                           pclath	equ	0xFFA
  7897                           tblptru	equ	0xFF8
  7898                           tblptrh	equ	0xFF7
  7899                           tblptrl	equ	0xFF6
  7900                           tablat	equ	0xFF5
  7901                           prodh	equ	0xFF4
  7902                           prodl	equ	0xFF3
  7903                           intcon	equ	0xFF2
  7904                           intcon2	equ	0xFF1
  7905                           postinc0	equ	0xFEE
  7906                           fsr0h	equ	0xFEA
  7907                           fsr0l	equ	0xFE9
  7908                           wreg	equ	0xFE8
  7909                           postdec1	equ	0xFE5
  7910                           fsr1h	equ	0xFE2
  7911                           fsr1l	equ	0xFE1
  7912                           bsr	equ	0xFE0
  7913                           indf2	equ	0xFDF
  7914                           fsr2h	equ	0xFDA
  7915                           fsr2l	equ	0xFD9
  7916                           status	equ	0xFD8
  7917                           
  7918 ;; *************** function _CANreceiveMessage *****************
  7919 ;; Defined at:
  7920 ;;		line 528 in file "C:/Asus WebStorage/simone.righetti97@gmail.com/MySyncFolder/Tesina/LaurTec_PIC_libraries_v_3.3.0/i
      +nc\CANlib.h"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  msg             2    0[COMRAM] PTR struct .
  7923 ;;		 -> msg(15), 
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;  tamp            1   11[COMRAM] unsigned char 
  7926 ;;  error           1   10[COMRAM] unsigned char 
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  1    wreg      unsigned char 
  7929 ;; Registers used:
  7930 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7936 ;;      Params:         2       0       0       0
  7937 ;;      Locals:         2       0       0       0
  7938 ;;      Temps:          8       0       0       0
  7939 ;;      Totals:        12       0       0       0
  7940 ;;Total ram usage:       12 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; Hardware stack levels required when called:    2
  7943 ;; This function calls:
  7944 ;;		Nothing
  7945 ;; This function is called by:
  7946 ;;		_ISR_bassa
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           	psect	text24
  7951  0013FC                     __ptext24:
  7952                           	opt stack 0
  7953  0013FC                     _CANreceiveMessage:
  7954                           	opt stack 24
  7955                           
  7956                           ;inc\CANlib.h: 530: BYTE tamp;
  7957                           ;inc\CANlib.h: 531: BYTE error = 0;
  7958                           
  7959                           ;incstack = 0
  7960  0013FC  0E00               	movlw	0
  7961  0013FE  6E2B               	movwf	CANreceiveMessage@error,c
  7962                           
  7963                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7964  001400  BE74               	btfsc	3956,7,c	;volatile
  7965                           
  7966                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7967  001402  802B               	bsf	CANreceiveMessage@error,0,c
  7968                           
  7969                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7970  001404  BC74               	btfsc	3956,6,c	;volatile
  7971                           
  7972                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7973  001406  822B               	bsf	CANreceiveMessage@error,1,c
  7974                           
  7975                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7976  001408  010F               	movlb	15	; () banked
  7977  00140A  AF50               	btfss	80,7,b	;volatile
  7978  00140C  D143               	goto	i1l416
  7979                           
  7980                           ; BSR set to: 15
  7981                           ;inc\CANlib.h: 541: {
  7982                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7983  00140E  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7984  001412  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7985  001416  6ADE               	clrf	postinc2,c
  7986  001418  6ADE               	clrf	postinc2,c
  7987  00141A  6ADE               	clrf	postinc2,c
  7988  00141C  6ADD               	clrf	postdec2,c
  7989                           
  7990                           ; BSR set to: 15
  7991                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7992  00141E  EE20 F004          	lfsr	2,4
  7993  001422  5021               	movf	CANreceiveMessage@msg,w,c
  7994  001424  26D9               	addwf	fsr2l,f,c
  7995  001426  5022               	movf	CANreceiveMessage@msg+1,w,c
  7996  001428  22DA               	addwfc	fsr2h,f,c
  7997  00142A  CF56 FFDF          	movff	3926,indf2	;volatile
  7998                           
  7999                           ; BSR set to: 15
  8000                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  8001  00142E  EE20 F005          	lfsr	2,5
  8002  001432  5021               	movf	CANreceiveMessage@msg,w,c
  8003  001434  26D9               	addwf	fsr2l,f,c
  8004  001436  5022               	movf	CANreceiveMessage@msg+1,w,c
  8005  001438  22DA               	addwfc	fsr2h,f,c
  8006  00143A  CF57 FFDF          	movff	3927,indf2	;volatile
  8007                           
  8008                           ; BSR set to: 15
  8009                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  8010  00143E  EE20 F006          	lfsr	2,6
  8011  001442  5021               	movf	CANreceiveMessage@msg,w,c
  8012  001444  26D9               	addwf	fsr2l,f,c
  8013  001446  5022               	movf	CANreceiveMessage@msg+1,w,c
  8014  001448  22DA               	addwfc	fsr2h,f,c
  8015  00144A  CF58 FFDF          	movff	3928,indf2	;volatile
  8016                           
  8017                           ; BSR set to: 15
  8018                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  8019  00144E  EE20 F007          	lfsr	2,7
  8020  001452  5021               	movf	CANreceiveMessage@msg,w,c
  8021  001454  26D9               	addwf	fsr2l,f,c
  8022  001456  5022               	movf	CANreceiveMessage@msg+1,w,c
  8023  001458  22DA               	addwfc	fsr2h,f,c
  8024  00145A  CF59 FFDF          	movff	3929,indf2	;volatile
  8025                           
  8026                           ; BSR set to: 15
  8027                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  8028  00145E  EE20 F008          	lfsr	2,8
  8029  001462  5021               	movf	CANreceiveMessage@msg,w,c
  8030  001464  26D9               	addwf	fsr2l,f,c
  8031  001466  5022               	movf	CANreceiveMessage@msg+1,w,c
  8032  001468  22DA               	addwfc	fsr2h,f,c
  8033  00146A  CF5A FFDF          	movff	3930,indf2	;volatile
  8034                           
  8035                           ; BSR set to: 15
  8036                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  8037  00146E  EE20 F009          	lfsr	2,9
  8038  001472  5021               	movf	CANreceiveMessage@msg,w,c
  8039  001474  26D9               	addwf	fsr2l,f,c
  8040  001476  5022               	movf	CANreceiveMessage@msg+1,w,c
  8041  001478  22DA               	addwfc	fsr2h,f,c
  8042  00147A  CF5B FFDF          	movff	3931,indf2	;volatile
  8043                           
  8044                           ; BSR set to: 15
  8045                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  8046  00147E  EE20 F00A          	lfsr	2,10
  8047  001482  5021               	movf	CANreceiveMessage@msg,w,c
  8048  001484  26D9               	addwf	fsr2l,f,c
  8049  001486  5022               	movf	CANreceiveMessage@msg+1,w,c
  8050  001488  22DA               	addwfc	fsr2h,f,c
  8051  00148A  CF5C FFDF          	movff	3932,indf2	;volatile
  8052                           
  8053                           ; BSR set to: 15
  8054                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  8055  00148E  EE20 F00B          	lfsr	2,11
  8056  001492  5021               	movf	CANreceiveMessage@msg,w,c
  8057  001494  26D9               	addwf	fsr2l,f,c
  8058  001496  5022               	movf	CANreceiveMessage@msg+1,w,c
  8059  001498  22DA               	addwfc	fsr2h,f,c
  8060  00149A  CF5D FFDF          	movff	3933,indf2	;volatile
  8061                           
  8062                           ; BSR set to: 15
  8063                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  8064  00149E  EE20 F00E          	lfsr	2,14
  8065  0014A2  5021               	movf	CANreceiveMessage@msg,w,c
  8066  0014A4  26D9               	addwf	fsr2l,f,c
  8067  0014A6  5022               	movf	CANreceiveMessage@msg+1,w,c
  8068  0014A8  22DA               	addwfc	fsr2h,f,c
  8069  0014AA  010F               	movlb	15	; () banked
  8070  0014AC  AD55               	btfss	85,6,b	;volatile
  8071  0014AE  D002               	goto	i1u368_20
  8072  0014B0  0E01               	movlw	1
  8073  0014B2  D001               	goto	i1u368_26
  8074  0014B4                     i1u368_20:
  8075  0014B4  0E00               	movlw	0
  8076  0014B6                     i1u368_26:
  8077  0014B6  6EDF               	movwf	indf2,c
  8078                           
  8079                           ; BSR set to: 15
  8080                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  8081  0014B8  EE20 F00D          	lfsr	2,13
  8082  0014BC  5021               	movf	CANreceiveMessage@msg,w,c
  8083  0014BE  26D9               	addwf	fsr2l,f,c
  8084  0014C0  5022               	movf	CANreceiveMessage@msg+1,w,c
  8085  0014C2  22DA               	addwfc	fsr2h,f,c
  8086  0014C4  010F               	movlb	15	; () banked
  8087  0014C6  5155               	movf	85,w,b	;volatile
  8088  0014C8  0B0F               	andlw	15
  8089  0014CA  6EDF               	movwf	indf2,c
  8090                           
  8091                           ; BSR set to: 15
  8092                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  8093  0014CC  EE20 F00C          	lfsr	2,12
  8094  0014D0  5021               	movf	CANreceiveMessage@msg,w,c
  8095  0014D2  26D9               	addwf	fsr2l,f,c
  8096  0014D4  5022               	movf	CANreceiveMessage@msg+1,w,c
  8097  0014D6  22DA               	addwfc	fsr2h,f,c
  8098  0014D8  010F               	movlb	15	; () banked
  8099  0014DA  A752               	btfss	82,3,b	;volatile
  8100  0014DC  D002               	goto	i1u369_20
  8101  0014DE  0E01               	movlw	1
  8102  0014E0  D001               	goto	i1u369_26
  8103  0014E2                     i1u369_20:
  8104  0014E2  0E00               	movlw	0
  8105  0014E4                     i1u369_26:
  8106  0014E4  6EDF               	movwf	indf2,c
  8107                           
  8108                           ; BSR set to: 15
  8109                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  8110  0014E6  010F               	movlb	15	; () banked
  8111  0014E8  B752               	btfsc	82,3,b	;volatile
  8112  0014EA  D044               	goto	i1l3392
  8113                           
  8114                           ; BSR set to: 15
  8115                           ;inc\CANlib.h: 559: {
  8116                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  8117  0014EC  CF51 F023          	movff	3921,??_CANreceiveMessage	;volatile
  8118  0014F0  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8119  0014F2  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8120  0014F4  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8121  0014F6  0E03               	movlw	3
  8122  0014F8                     i1u371_25:
  8123  0014F8  90D8               	bcf	status,0,c
  8124  0014FA  3623               	rlcf	??_CANreceiveMessage,f,c
  8125  0014FC  3624               	rlcf	??_CANreceiveMessage+1,f,c
  8126  0014FE  3625               	rlcf	??_CANreceiveMessage+2,f,c
  8127  001500  3626               	rlcf	??_CANreceiveMessage+3,f,c
  8128  001502  2EE8               	decfsz	wreg,f,c
  8129  001504  D7F9               	goto	i1u371_25
  8130  001506  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8131  00150A  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8132  00150E  C023  FFDE         	movff	??_CANreceiveMessage,postinc2
  8133  001512  C024  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8134  001516  C025  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8135  00151A  C026  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8136                           
  8137                           ; BSR set to: 15
  8138                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  8139  00151E  010F               	movlb	15	; () banked
  8140  001520  3952               	swapf	82,w,b	;volatile
  8141  001522  42E8               	rrncf	wreg,f,c
  8142  001524  0B07               	andlw	7
  8143  001526  0B07               	andlw	7
  8144  001528  6E2C               	movwf	CANreceiveMessage@tamp,c
  8145                           
  8146                           ; BSR set to: 15
  8147                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  8148  00152A  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8149  00152E  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8150  001532  CFDE F023          	movff	postinc2,??_CANreceiveMessage
  8151  001536  CFDE F024          	movff	postinc2,??_CANreceiveMessage+1
  8152  00153A  CFDE F025          	movff	postinc2,??_CANreceiveMessage+2
  8153  00153E  CFDE F026          	movff	postinc2,??_CANreceiveMessage+3
  8154  001542  502C               	movf	CANreceiveMessage@tamp,w,c
  8155  001544  2423               	addwf	??_CANreceiveMessage,w,c
  8156  001546  6E27               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8157  001548  0E00               	movlw	0
  8158  00154A  2024               	addwfc	??_CANreceiveMessage+1,w,c
  8159  00154C  6E28               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8160  00154E  0E00               	movlw	0
  8161  001550  2025               	addwfc	??_CANreceiveMessage+2,w,c
  8162  001552  6E29               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8163  001554  0E00               	movlw	0
  8164  001556  2026               	addwfc	??_CANreceiveMessage+3,w,c
  8165  001558  6E2A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8166  00155A  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8167  00155E  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8168  001562  C027  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8169  001566  C028  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8170  00156A  C029  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8171  00156E  C02A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8172                           
  8173                           ;inc\CANlib.h: 563: }
  8174  001572  D08D               	goto	i1l3418
  8175  001574                     i1l3392:
  8176                           
  8177                           ; BSR set to: 15
  8178                           ;inc\CANlib.h: 564: else
  8179                           ;inc\CANlib.h: 565: {
  8180                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  8181  001574  CF54 F023          	movff	3924,??_CANreceiveMessage	;volatile
  8182  001578  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8183  00157A  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8184  00157C  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8185  00157E  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8186  001582  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8187  001586  C023  FFDE         	movff	??_CANreceiveMessage,postinc2
  8188  00158A  C024  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8189  00158E  C025  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8190  001592  C026  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8191                           
  8192                           ; BSR set to: 15
  8193                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  8194  001596  CF53 F023          	movff	3923,??_CANreceiveMessage	;volatile
  8195  00159A  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8196  00159C  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8197  00159E  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8198  0015A0  C025  F026         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8199  0015A4  C024  F025         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8200  0015A8  C023  F024         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8201  0015AC  6A23               	clrf	??_CANreceiveMessage,c
  8202  0015AE  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8203  0015B2  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8204  0015B6  5023               	movf	??_CANreceiveMessage,w,c
  8205  0015B8  26DE               	addwf	postinc2,f,c
  8206  0015BA  5024               	movf	??_CANreceiveMessage+1,w,c
  8207  0015BC  22DE               	addwfc	postinc2,f,c
  8208  0015BE  5025               	movf	??_CANreceiveMessage+2,w,c
  8209  0015C0  22DE               	addwfc	postinc2,f,c
  8210  0015C2  5026               	movf	??_CANreceiveMessage+3,w,c
  8211  0015C4  22DE               	addwfc	postinc2,f,c
  8212                           
  8213                           ; BSR set to: 15
  8214                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  8215  0015C6  010F               	movlb	15	; () banked
  8216  0015C8  A152               	btfss	82,0,b	;volatile
  8217  0015CA  D00C               	goto	i1l3400
  8218                           
  8219                           ; BSR set to: 15
  8220                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  8221  0015CC  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8222  0015D0  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8223  0015D4  0E00               	movlw	0
  8224  0015D6  12DE               	iorwf	postinc2,f,c
  8225  0015D8  0E00               	movlw	0
  8226  0015DA  12DE               	iorwf	postinc2,f,c
  8227  0015DC  0E01               	movlw	1
  8228  0015DE  12DE               	iorwf	postinc2,f,c
  8229  0015E0  0E00               	movlw	0
  8230  0015E2  12DE               	iorwf	postinc2,f,c
  8231  0015E4                     i1l3400:
  8232                           
  8233                           ; BSR set to: 15
  8234                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  8235  0015E4  010F               	movlb	15	; () banked
  8236  0015E6  A352               	btfss	82,1,b	;volatile
  8237  0015E8  D00C               	goto	i1l3404
  8238                           
  8239                           ; BSR set to: 15
  8240                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  8241  0015EA  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8242  0015EE  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8243  0015F2  0E00               	movlw	0
  8244  0015F4  12DE               	iorwf	postinc2,f,c
  8245  0015F6  0E00               	movlw	0
  8246  0015F8  12DE               	iorwf	postinc2,f,c
  8247  0015FA  0E02               	movlw	2
  8248  0015FC  12DE               	iorwf	postinc2,f,c
  8249  0015FE  0E00               	movlw	0
  8250  001600  12DE               	iorwf	postinc2,f,c
  8251  001602                     i1l3404:
  8252                           
  8253                           ; BSR set to: 15
  8254                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  8255  001602  010F               	movlb	15	; () banked
  8256  001604  AB52               	btfss	82,5,b	;volatile
  8257  001606  D00C               	goto	i1l3408
  8258                           
  8259                           ; BSR set to: 15
  8260                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  8261  001608  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8262  00160C  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8263  001610  0E00               	movlw	0
  8264  001612  12DE               	iorwf	postinc2,f,c
  8265  001614  0E00               	movlw	0
  8266  001616  12DE               	iorwf	postinc2,f,c
  8267  001618  0E04               	movlw	4
  8268  00161A  12DE               	iorwf	postinc2,f,c
  8269  00161C  0E00               	movlw	0
  8270  00161E  12DE               	iorwf	postinc2,f,c
  8271  001620                     i1l3408:
  8272                           
  8273                           ; BSR set to: 15
  8274                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8275  001620  010F               	movlb	15	; () banked
  8276  001622  AD52               	btfss	82,6,b	;volatile
  8277  001624  D00C               	goto	i1l3412
  8278                           
  8279                           ; BSR set to: 15
  8280                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  8281  001626  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8282  00162A  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8283  00162E  0E00               	movlw	0
  8284  001630  12DE               	iorwf	postinc2,f,c
  8285  001632  0E00               	movlw	0
  8286  001634  12DE               	iorwf	postinc2,f,c
  8287  001636  0E08               	movlw	8
  8288  001638  12DE               	iorwf	postinc2,f,c
  8289  00163A  0E00               	movlw	0
  8290  00163C  12DE               	iorwf	postinc2,f,c
  8291  00163E                     i1l3412:
  8292                           
  8293                           ; BSR set to: 15
  8294                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8295  00163E  010F               	movlb	15	; () banked
  8296  001640  AF52               	btfss	82,7,b	;volatile
  8297  001642  D00C               	goto	i1l3416
  8298                           
  8299                           ; BSR set to: 15
  8300                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  8301  001644  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8302  001648  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8303  00164C  0E00               	movlw	0
  8304  00164E  12DE               	iorwf	postinc2,f,c
  8305  001650  0E00               	movlw	0
  8306  001652  12DE               	iorwf	postinc2,f,c
  8307  001654  0E10               	movlw	16
  8308  001656  12DE               	iorwf	postinc2,f,c
  8309  001658  0E00               	movlw	0
  8310  00165A  12DE               	iorwf	postinc2,f,c
  8311  00165C                     i1l3416:
  8312                           
  8313                           ; BSR set to: 15
  8314                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8315  00165C  CF51 F023          	movff	3921,??_CANreceiveMessage	;volatile
  8316  001660  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8317  001662  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8318  001664  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8319  001666  0E15               	movlw	21
  8320  001668                     i1u377_25:
  8321  001668  90D8               	bcf	status,0,c
  8322  00166A  3623               	rlcf	??_CANreceiveMessage,f,c
  8323  00166C  3624               	rlcf	??_CANreceiveMessage+1,f,c
  8324  00166E  3625               	rlcf	??_CANreceiveMessage+2,f,c
  8325  001670  3626               	rlcf	??_CANreceiveMessage+3,f,c
  8326  001672  2EE8               	decfsz	wreg,f,c
  8327  001674  D7F9               	goto	i1u377_25
  8328  001676  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8329  00167A  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8330  00167E  5023               	movf	??_CANreceiveMessage,w,c
  8331  001680  12DE               	iorwf	postinc2,f,c
  8332  001682  5024               	movf	??_CANreceiveMessage+1,w,c
  8333  001684  12DE               	iorwf	postinc2,f,c
  8334  001686  5025               	movf	??_CANreceiveMessage+2,w,c
  8335  001688  12DE               	iorwf	postinc2,f,c
  8336  00168A  5026               	movf	??_CANreceiveMessage+3,w,c
  8337  00168C  12DE               	iorwf	postinc2,f,c
  8338  00168E                     i1l3418:
  8339                           
  8340                           ; BSR set to: 15
  8341                           ;inc\CANlib.h: 581: }
  8342                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8343  00168E  010F               	movlb	15	; () banked
  8344  001690  9F50               	bcf	80,7,b	;volatile
  8345                           
  8346                           ; BSR set to: 15
  8347                           ;inc\CANlib.h: 584: return (error);
  8348                           ;	Return value of _CANreceiveMessage is never used
  8349  001692  0012               	return	
  8350  001694                     i1l416:
  8351                           
  8352                           ; BSR set to: 15
  8353                           ;inc\CANlib.h: 585: }
  8354                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8355  001694  AE60               	btfss	3936,7,c	;volatile
  8356  001696  0012               	return	
  8357                           
  8358                           ; BSR set to: 15
  8359                           ;inc\CANlib.h: 588: {
  8360                           ;inc\CANlib.h: 589: msg->identifier = 0;
  8361  001698  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8362  00169C  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8363  0016A0  6ADE               	clrf	postinc2,c
  8364  0016A2  6ADE               	clrf	postinc2,c
  8365  0016A4  6ADE               	clrf	postinc2,c
  8366  0016A6  6ADD               	clrf	postdec2,c
  8367                           
  8368                           ; BSR set to: 15
  8369                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  8370  0016A8  EE20 F004          	lfsr	2,4
  8371  0016AC  5021               	movf	CANreceiveMessage@msg,w,c
  8372  0016AE  26D9               	addwf	fsr2l,f,c
  8373  0016B0  5022               	movf	CANreceiveMessage@msg+1,w,c
  8374  0016B2  22DA               	addwfc	fsr2h,f,c
  8375  0016B4  CF66 FFDF          	movff	3942,indf2	;volatile
  8376                           
  8377                           ; BSR set to: 15
  8378                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  8379  0016B8  EE20 F005          	lfsr	2,5
  8380  0016BC  5021               	movf	CANreceiveMessage@msg,w,c
  8381  0016BE  26D9               	addwf	fsr2l,f,c
  8382  0016C0  5022               	movf	CANreceiveMessage@msg+1,w,c
  8383  0016C2  22DA               	addwfc	fsr2h,f,c
  8384  0016C4  CF67 FFDF          	movff	3943,indf2	;volatile
  8385                           
  8386                           ; BSR set to: 15
  8387                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  8388  0016C8  EE20 F006          	lfsr	2,6
  8389  0016CC  5021               	movf	CANreceiveMessage@msg,w,c
  8390  0016CE  26D9               	addwf	fsr2l,f,c
  8391  0016D0  5022               	movf	CANreceiveMessage@msg+1,w,c
  8392  0016D2  22DA               	addwfc	fsr2h,f,c
  8393  0016D4  CF68 FFDF          	movff	3944,indf2	;volatile
  8394                           
  8395                           ; BSR set to: 15
  8396                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  8397  0016D8  EE20 F007          	lfsr	2,7
  8398  0016DC  5021               	movf	CANreceiveMessage@msg,w,c
  8399  0016DE  26D9               	addwf	fsr2l,f,c
  8400  0016E0  5022               	movf	CANreceiveMessage@msg+1,w,c
  8401  0016E2  22DA               	addwfc	fsr2h,f,c
  8402  0016E4  CF69 FFDF          	movff	3945,indf2	;volatile
  8403                           
  8404                           ; BSR set to: 15
  8405                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  8406  0016E8  EE20 F008          	lfsr	2,8
  8407  0016EC  5021               	movf	CANreceiveMessage@msg,w,c
  8408  0016EE  26D9               	addwf	fsr2l,f,c
  8409  0016F0  5022               	movf	CANreceiveMessage@msg+1,w,c
  8410  0016F2  22DA               	addwfc	fsr2h,f,c
  8411  0016F4  CF6A FFDF          	movff	3946,indf2	;volatile
  8412                           
  8413                           ; BSR set to: 15
  8414                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  8415  0016F8  EE20 F009          	lfsr	2,9
  8416  0016FC  5021               	movf	CANreceiveMessage@msg,w,c
  8417  0016FE  26D9               	addwf	fsr2l,f,c
  8418  001700  5022               	movf	CANreceiveMessage@msg+1,w,c
  8419  001702  22DA               	addwfc	fsr2h,f,c
  8420  001704  CF6B FFDF          	movff	3947,indf2	;volatile
  8421                           
  8422                           ; BSR set to: 15
  8423                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  8424  001708  EE20 F00A          	lfsr	2,10
  8425  00170C  5021               	movf	CANreceiveMessage@msg,w,c
  8426  00170E  26D9               	addwf	fsr2l,f,c
  8427  001710  5022               	movf	CANreceiveMessage@msg+1,w,c
  8428  001712  22DA               	addwfc	fsr2h,f,c
  8429  001714  CF6C FFDF          	movff	3948,indf2	;volatile
  8430                           
  8431                           ; BSR set to: 15
  8432                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  8433  001718  EE20 F00B          	lfsr	2,11
  8434  00171C  5021               	movf	CANreceiveMessage@msg,w,c
  8435  00171E  26D9               	addwf	fsr2l,f,c
  8436  001720  5022               	movf	CANreceiveMessage@msg+1,w,c
  8437  001722  22DA               	addwfc	fsr2h,f,c
  8438  001724  CF6D FFDF          	movff	3949,indf2	;volatile
  8439                           
  8440                           ; BSR set to: 15
  8441                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8442  001728  EE20 F00E          	lfsr	2,14
  8443  00172C  5021               	movf	CANreceiveMessage@msg,w,c
  8444  00172E  26D9               	addwf	fsr2l,f,c
  8445  001730  5022               	movf	CANreceiveMessage@msg+1,w,c
  8446  001732  22DA               	addwfc	fsr2h,f,c
  8447  001734  AC65               	btfss	3941,6,c	;volatile
  8448  001736  D002               	goto	i1u379_20
  8449  001738  0E01               	movlw	1
  8450  00173A  D001               	goto	i1u379_26
  8451  00173C                     i1u379_20:
  8452  00173C  0E00               	movlw	0
  8453  00173E                     i1u379_26:
  8454  00173E  6EDF               	movwf	indf2,c
  8455                           
  8456                           ; BSR set to: 15
  8457                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8458  001740  EE20 F00D          	lfsr	2,13
  8459  001744  5021               	movf	CANreceiveMessage@msg,w,c
  8460  001746  26D9               	addwf	fsr2l,f,c
  8461  001748  5022               	movf	CANreceiveMessage@msg+1,w,c
  8462  00174A  22DA               	addwfc	fsr2h,f,c
  8463  00174C  5065               	movf	3941,w,c	;volatile
  8464  00174E  0B0F               	andlw	15
  8465  001750  6EDF               	movwf	indf2,c
  8466                           
  8467                           ; BSR set to: 15
  8468                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8469  001752  EE20 F00C          	lfsr	2,12
  8470  001756  5021               	movf	CANreceiveMessage@msg,w,c
  8471  001758  26D9               	addwf	fsr2l,f,c
  8472  00175A  5022               	movf	CANreceiveMessage@msg+1,w,c
  8473  00175C  22DA               	addwfc	fsr2h,f,c
  8474  00175E  A662               	btfss	3938,3,c	;volatile
  8475  001760  D002               	goto	i1u380_20
  8476  001762  0E01               	movlw	1
  8477  001764  D001               	goto	i1u380_26
  8478  001766                     i1u380_20:
  8479  001766  0E00               	movlw	0
  8480  001768                     i1u380_26:
  8481  001768  6EDF               	movwf	indf2,c
  8482                           
  8483                           ; BSR set to: 15
  8484                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8485  00176A  B662               	btfsc	3938,3,c	;volatile
  8486  00176C  D043               	goto	i1l3454
  8487                           
  8488                           ; BSR set to: 15
  8489                           ;inc\CANlib.h: 606: {
  8490                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8491  00176E  CF61 F023          	movff	3937,??_CANreceiveMessage	;volatile
  8492  001772  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8493  001774  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8494  001776  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8495  001778  0E03               	movlw	3
  8496  00177A                     i1u382_25:
  8497  00177A  90D8               	bcf	status,0,c
  8498  00177C  3623               	rlcf	??_CANreceiveMessage,f,c
  8499  00177E  3624               	rlcf	??_CANreceiveMessage+1,f,c
  8500  001780  3625               	rlcf	??_CANreceiveMessage+2,f,c
  8501  001782  3626               	rlcf	??_CANreceiveMessage+3,f,c
  8502  001784  2EE8               	decfsz	wreg,f,c
  8503  001786  D7F9               	goto	i1u382_25
  8504  001788  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8505  00178C  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8506  001790  C023  FFDE         	movff	??_CANreceiveMessage,postinc2
  8507  001794  C024  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8508  001798  C025  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8509  00179C  C026  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8510                           
  8511                           ; BSR set to: 15
  8512                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8513  0017A0  3862               	swapf	3938,w,c	;volatile
  8514  0017A2  42E8               	rrncf	wreg,f,c
  8515  0017A4  0B07               	andlw	7
  8516  0017A6  0B07               	andlw	7
  8517  0017A8  6E2C               	movwf	CANreceiveMessage@tamp,c
  8518                           
  8519                           ; BSR set to: 15
  8520                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8521  0017AA  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8522  0017AE  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8523  0017B2  CFDE F023          	movff	postinc2,??_CANreceiveMessage
  8524  0017B6  CFDE F024          	movff	postinc2,??_CANreceiveMessage+1
  8525  0017BA  CFDE F025          	movff	postinc2,??_CANreceiveMessage+2
  8526  0017BE  CFDE F026          	movff	postinc2,??_CANreceiveMessage+3
  8527  0017C2  502C               	movf	CANreceiveMessage@tamp,w,c
  8528  0017C4  2423               	addwf	??_CANreceiveMessage,w,c
  8529  0017C6  6E27               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8530  0017C8  0E00               	movlw	0
  8531  0017CA  2024               	addwfc	??_CANreceiveMessage+1,w,c
  8532  0017CC  6E28               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8533  0017CE  0E00               	movlw	0
  8534  0017D0  2025               	addwfc	??_CANreceiveMessage+2,w,c
  8535  0017D2  6E29               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8536  0017D4  0E00               	movlw	0
  8537  0017D6  2026               	addwfc	??_CANreceiveMessage+3,w,c
  8538  0017D8  6E2A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8539  0017DA  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8540  0017DE  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8541  0017E2  C027  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8542  0017E6  C028  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8543  0017EA  C029  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8544  0017EE  C02A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8545                           
  8546                           ;inc\CANlib.h: 610: }
  8547  0017F2  D088               	goto	i1l3480
  8548  0017F4                     i1l3454:
  8549                           
  8550                           ; BSR set to: 15
  8551                           ;inc\CANlib.h: 611: else
  8552                           ;inc\CANlib.h: 612: {
  8553                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8554  0017F4  CF64 F023          	movff	3940,??_CANreceiveMessage	;volatile
  8555  0017F8  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8556  0017FA  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8557  0017FC  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8558  0017FE  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8559  001802  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8560  001806  C023  FFDE         	movff	??_CANreceiveMessage,postinc2
  8561  00180A  C024  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8562  00180E  C025  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8563  001812  C026  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8564                           
  8565                           ; BSR set to: 15
  8566                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8567  001816  CF63 F023          	movff	3939,??_CANreceiveMessage	;volatile
  8568  00181A  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8569  00181C  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8570  00181E  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8571  001820  C025  F026         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8572  001824  C024  F025         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8573  001828  C023  F024         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8574  00182C  6A23               	clrf	??_CANreceiveMessage,c
  8575  00182E  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8576  001832  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8577  001836  5023               	movf	??_CANreceiveMessage,w,c
  8578  001838  26DE               	addwf	postinc2,f,c
  8579  00183A  5024               	movf	??_CANreceiveMessage+1,w,c
  8580  00183C  22DE               	addwfc	postinc2,f,c
  8581  00183E  5025               	movf	??_CANreceiveMessage+2,w,c
  8582  001840  22DE               	addwfc	postinc2,f,c
  8583  001842  5026               	movf	??_CANreceiveMessage+3,w,c
  8584  001844  22DE               	addwfc	postinc2,f,c
  8585                           
  8586                           ; BSR set to: 15
  8587                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8588  001846  A062               	btfss	3938,0,c	;volatile
  8589  001848  D00C               	goto	i1l3462
  8590                           
  8591                           ; BSR set to: 15
  8592                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8593  00184A  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8594  00184E  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8595  001852  0E00               	movlw	0
  8596  001854  12DE               	iorwf	postinc2,f,c
  8597  001856  0E00               	movlw	0
  8598  001858  12DE               	iorwf	postinc2,f,c
  8599  00185A  0E01               	movlw	1
  8600  00185C  12DE               	iorwf	postinc2,f,c
  8601  00185E  0E00               	movlw	0
  8602  001860  12DE               	iorwf	postinc2,f,c
  8603  001862                     i1l3462:
  8604                           
  8605                           ; BSR set to: 15
  8606                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8607  001862  A262               	btfss	3938,1,c	;volatile
  8608  001864  D00C               	goto	i1l3466
  8609                           
  8610                           ; BSR set to: 15
  8611                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8612  001866  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8613  00186A  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8614  00186E  0E00               	movlw	0
  8615  001870  12DE               	iorwf	postinc2,f,c
  8616  001872  0E00               	movlw	0
  8617  001874  12DE               	iorwf	postinc2,f,c
  8618  001876  0E02               	movlw	2
  8619  001878  12DE               	iorwf	postinc2,f,c
  8620  00187A  0E00               	movlw	0
  8621  00187C  12DE               	iorwf	postinc2,f,c
  8622  00187E                     i1l3466:
  8623                           
  8624                           ; BSR set to: 15
  8625                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8626  00187E  AA62               	btfss	3938,5,c	;volatile
  8627  001880  D00C               	goto	i1l3470
  8628                           
  8629                           ; BSR set to: 15
  8630                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8631  001882  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8632  001886  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8633  00188A  0E00               	movlw	0
  8634  00188C  12DE               	iorwf	postinc2,f,c
  8635  00188E  0E00               	movlw	0
  8636  001890  12DE               	iorwf	postinc2,f,c
  8637  001892  0E04               	movlw	4
  8638  001894  12DE               	iorwf	postinc2,f,c
  8639  001896  0E00               	movlw	0
  8640  001898  12DE               	iorwf	postinc2,f,c
  8641  00189A                     i1l3470:
  8642                           
  8643                           ; BSR set to: 15
  8644                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8645  00189A  AC62               	btfss	3938,6,c	;volatile
  8646  00189C  D00C               	goto	i1l3474
  8647                           
  8648                           ; BSR set to: 15
  8649                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8650  00189E  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8651  0018A2  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8652  0018A6  0E00               	movlw	0
  8653  0018A8  12DE               	iorwf	postinc2,f,c
  8654  0018AA  0E00               	movlw	0
  8655  0018AC  12DE               	iorwf	postinc2,f,c
  8656  0018AE  0E08               	movlw	8
  8657  0018B0  12DE               	iorwf	postinc2,f,c
  8658  0018B2  0E00               	movlw	0
  8659  0018B4  12DE               	iorwf	postinc2,f,c
  8660  0018B6                     i1l3474:
  8661                           
  8662                           ; BSR set to: 15
  8663                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8664  0018B6  AE62               	btfss	3938,7,c	;volatile
  8665  0018B8  D00C               	goto	i1l3478
  8666                           
  8667                           ; BSR set to: 15
  8668                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8669  0018BA  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8670  0018BE  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8671  0018C2  0E00               	movlw	0
  8672  0018C4  12DE               	iorwf	postinc2,f,c
  8673  0018C6  0E00               	movlw	0
  8674  0018C8  12DE               	iorwf	postinc2,f,c
  8675  0018CA  0E10               	movlw	16
  8676  0018CC  12DE               	iorwf	postinc2,f,c
  8677  0018CE  0E00               	movlw	0
  8678  0018D0  12DE               	iorwf	postinc2,f,c
  8679  0018D2                     i1l3478:
  8680                           
  8681                           ; BSR set to: 15
  8682                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8683  0018D2  CF61 F023          	movff	3937,??_CANreceiveMessage	;volatile
  8684  0018D6  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8685  0018D8  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8686  0018DA  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8687  0018DC  0E15               	movlw	21
  8688  0018DE                     i1u388_25:
  8689  0018DE  90D8               	bcf	status,0,c
  8690  0018E0  3623               	rlcf	??_CANreceiveMessage,f,c
  8691  0018E2  3624               	rlcf	??_CANreceiveMessage+1,f,c
  8692  0018E4  3625               	rlcf	??_CANreceiveMessage+2,f,c
  8693  0018E6  3626               	rlcf	??_CANreceiveMessage+3,f,c
  8694  0018E8  2EE8               	decfsz	wreg,f,c
  8695  0018EA  D7F9               	goto	i1u388_25
  8696  0018EC  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8697  0018F0  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8698  0018F4  5023               	movf	??_CANreceiveMessage,w,c
  8699  0018F6  12DE               	iorwf	postinc2,f,c
  8700  0018F8  5024               	movf	??_CANreceiveMessage+1,w,c
  8701  0018FA  12DE               	iorwf	postinc2,f,c
  8702  0018FC  5025               	movf	??_CANreceiveMessage+2,w,c
  8703  0018FE  12DE               	iorwf	postinc2,f,c
  8704  001900  5026               	movf	??_CANreceiveMessage+3,w,c
  8705  001902  12DE               	iorwf	postinc2,f,c
  8706  001904                     i1l3480:
  8707                           
  8708                           ; BSR set to: 15
  8709                           ;inc\CANlib.h: 629: }
  8710                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8711  001904  9E60               	bcf	3936,7,c	;volatile
  8712                           
  8713                           ; BSR set to: 15
  8714                           ;inc\CANlib.h: 632: return (error);
  8715                           ;	Return value of _CANreceiveMessage is never used
  8716  001906  0012               	return	
  8717  001908                     __end_of_CANreceiveMessage:
  8718                           	opt stack 0
  8719                           pclatu	equ	0xFFB
  8720                           pclath	equ	0xFFA
  8721                           tblptru	equ	0xFF8
  8722                           tblptrh	equ	0xFF7
  8723                           tblptrl	equ	0xFF6
  8724                           tablat	equ	0xFF5
  8725                           prodh	equ	0xFF4
  8726                           prodl	equ	0xFF3
  8727                           intcon	equ	0xFF2
  8728                           intcon2	equ	0xFF1
  8729                           postinc0	equ	0xFEE
  8730                           fsr0h	equ	0xFEA
  8731                           fsr0l	equ	0xFE9
  8732                           wreg	equ	0xFE8
  8733                           postdec1	equ	0xFE5
  8734                           fsr1h	equ	0xFE2
  8735                           fsr1l	equ	0xFE1
  8736                           bsr	equ	0xFE0
  8737                           indf2	equ	0xFDF
  8738                           postinc2	equ	0xFDE
  8739                           postdec2	equ	0xFDD
  8740                           fsr2h	equ	0xFDA
  8741                           fsr2l	equ	0xFD9
  8742                           status	equ	0xFD8
  8743                           
  8744 ;; *************** function _CANisRxReady *****************
  8745 ;; Defined at:
  8746 ;;		line 1163 in file "C:/Asus WebStorage/simone.righetti97@gmail.com/MySyncFolder/Tesina/LaurTec_PIC_libraries_v_3.3.0/
      +inc\CANlib.h"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;		None
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;		None
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  1    wreg      unsigned char 
  8753 ;; Registers used:
  8754 ;;		wreg, status,2
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8760 ;;      Params:         0       0       0       0
  8761 ;;      Locals:         1       0       0       0
  8762 ;;      Temps:          0       0       0       0
  8763 ;;      Totals:         1       0       0       0
  8764 ;;Total ram usage:        1 bytes
  8765 ;; Hardware stack levels used:    1
  8766 ;; Hardware stack levels required when called:    2
  8767 ;; This function calls:
  8768 ;;		Nothing
  8769 ;; This function is called by:
  8770 ;;		_ISR_bassa
  8771 ;; This function uses a non-reentrant model
  8772 ;;
  8773                           
  8774                           	psect	text25
  8775  00283E                     __ptext25:
  8776                           	opt stack 0
  8777  00283E                     _CANisRxReady:
  8778                           	opt stack 24
  8779                           
  8780                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8781                           
  8782                           ; BSR set to: 15
  8783                           ;incstack = 0
  8784  00283E  0E01               	movlw	1
  8785  002840  6E21               	movwf	_CANisRxReady$2920,c
  8786  002842  BE60               	btfsc	3936,7,c	;volatile
  8787  002844  D005               	goto	i1l567
  8788  002846  010F               	movlb	15	; () banked
  8789  002848  BF50               	btfsc	80,7,b	;volatile
  8790  00284A  D002               	goto	i1l567
  8791                           
  8792                           ; BSR set to: 15
  8793  00284C  0E00               	movlw	0
  8794  00284E  6E21               	movwf	_CANisRxReady$2920,c
  8795  002850                     i1l567:
  8796  002850  5021               	movf	_CANisRxReady$2920,w,c
  8797  002852  0012               	return	
  8798  002854                     __end_of_CANisRxReady:
  8799                           	opt stack 0
  8800                           pclatu	equ	0xFFB
  8801                           pclath	equ	0xFFA
  8802                           tblptru	equ	0xFF8
  8803                           tblptrh	equ	0xFF7
  8804                           tblptrl	equ	0xFF6
  8805                           tablat	equ	0xFF5
  8806                           prodh	equ	0xFF4
  8807                           prodl	equ	0xFF3
  8808                           intcon	equ	0xFF2
  8809                           intcon2	equ	0xFF1
  8810                           postinc0	equ	0xFEE
  8811                           fsr0h	equ	0xFEA
  8812                           fsr0l	equ	0xFE9
  8813                           wreg	equ	0xFE8
  8814                           postdec1	equ	0xFE5
  8815                           fsr1h	equ	0xFE2
  8816                           fsr1l	equ	0xFE1
  8817                           bsr	equ	0xFE0
  8818                           indf2	equ	0xFDF
  8819                           postinc2	equ	0xFDE
  8820                           postdec2	equ	0xFDD
  8821                           fsr2h	equ	0xFDA
  8822                           fsr2l	equ	0xFD9
  8823                           status	equ	0xFD8
  8824                           
  8825 ;; *************** function _ISR_alta *****************
  8826 ;; Defined at:
  8827 ;;		line 57 in file "newmain.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;		None
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;		None
  8832 ;; Return value:  Size  Location     Type
  8833 ;;		None               void
  8834 ;; Registers used:
  8835 ;;		wreg, status,2, status,0, cstack
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8841 ;;      Params:         0       0       0       0
  8842 ;;      Locals:         0       0       0       0
  8843 ;;      Temps:          0      15       0       0
  8844 ;;      Totals:         0      15       0       0
  8845 ;;Total ram usage:       15 bytes
  8846 ;; Hardware stack levels used:    1
  8847 ;; Hardware stack levels required when called:    1
  8848 ;; This function calls:
  8849 ;;		_WriteTimer0
  8850 ;; This function is called by:
  8851 ;;		Interrupt level 2
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855                           	psect	intcode
  8856  000008                     __pintcode:
  8857                           	opt stack 0
  8858  000008                     _ISR_alta:
  8859                           	opt stack 24
  8860                           
  8861                           ;incstack = 0
  8862  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8863  00000A  CFFA F065          	movff	pclath,??_ISR_alta+1
  8864  00000E  CFFB F066          	movff	pclatu,??_ISR_alta+2
  8865  000012  ED31  F012         	call	int_func,f	;refresh shadow registers
  8866                           pclatu	equ	0xFFB
  8867                           pclath	equ	0xFFA
  8868                           tblptru	equ	0xFF8
  8869                           tblptrh	equ	0xFF7
  8870                           tblptrl	equ	0xFF6
  8871                           tablat	equ	0xFF5
  8872                           prodh	equ	0xFF4
  8873                           prodl	equ	0xFF3
  8874                           intcon	equ	0xFF2
  8875                           intcon2	equ	0xFF1
  8876                           postinc0	equ	0xFEE
  8877                           fsr0h	equ	0xFEA
  8878                           fsr0l	equ	0xFE9
  8879                           wreg	equ	0xFE8
  8880                           postdec1	equ	0xFE5
  8881                           fsr1h	equ	0xFE2
  8882                           fsr1l	equ	0xFE1
  8883                           bsr	equ	0xFE0
  8884                           indf2	equ	0xFDF
  8885                           postinc2	equ	0xFDE
  8886                           postdec2	equ	0xFDD
  8887                           fsr2h	equ	0xFDA
  8888                           fsr2l	equ	0xFD9
  8889                           status	equ	0xFD8
  8890                           
  8891                           	psect	intcode_body
  8892  002462                     __pintcode_body:
  8893                           	opt stack 24
  8894  002462                     int_func:
  8895                           	opt stack 24
  8896  002462  0006               	pop		; remove dummy address from shadow register refresh
  8897  002464  CFE9 F067          	movff	fsr0l,??_ISR_alta+3
  8898  002468  CFEA F068          	movff	fsr0h,??_ISR_alta+4
  8899  00246C  CFE1 F069          	movff	fsr1l,??_ISR_alta+5
  8900  002470  CFE2 F06A          	movff	fsr1h,??_ISR_alta+6
  8901  002474  CFD9 F06B          	movff	fsr2l,??_ISR_alta+7
  8902  002478  CFDA F06C          	movff	fsr2h,??_ISR_alta+8
  8903  00247C  CFF3 F06D          	movff	prodl,??_ISR_alta+9
  8904  002480  CFF4 F06E          	movff	prodh,??_ISR_alta+10
  8905  002484  CFF6 F06F          	movff	tblptrl,??_ISR_alta+11
  8906  002488  CFF7 F070          	movff	tblptrh,??_ISR_alta+12
  8907  00248C  CFF8 F071          	movff	tblptru,??_ISR_alta+13
  8908  002490  CFF5 F072          	movff	tablat,??_ISR_alta+14
  8909                           
  8910                           ;newmain.c: 58: PORTCbits.RC0 = ~PORTCbits.RC0;
  8911  002494  A082               	btfss	3970,0,c	;volatile
  8912  002496  D002               	goto	i2u431_40
  8913  002498  0E01               	movlw	1
  8914  00249A  D001               	goto	i2u431_46
  8915  00249C                     i2u431_40:
  8916  00249C  0E00               	movlw	0
  8917  00249E                     i2u431_46:
  8918  00249E  0AFF               	xorlw	255
  8919  0024A0  0100               	movlb	0	; () banked
  8920  0024A2  6F64               	movwf	??_ISR_alta& (0+255),b
  8921  0024A4  5082               	movf	3970,w,c	;volatile
  8922  0024A6  0100               	movlb	0	; () banked
  8923  0024A8  1964               	xorwf	??_ISR_alta& (0+255),w,b
  8924  0024AA  0BFE               	andlw	-2
  8925  0024AC  1964               	xorwf	??_ISR_alta& (0+255),w,b
  8926  0024AE  6E82               	movwf	3970,c	;volatile
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;newmain.c: 59: T0CONbits.TMR0ON = 0;
  8930  0024B0  9ED5               	bcf	4053,7,c	;volatile
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;newmain.c: 60: if (PORTCbits.RC0 == 1) {
  8934  0024B2  A082               	btfss	3970,0,c	;volatile
  8935  0024B4  D007               	goto	i2l3822
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;newmain.c: 61: WriteTimer0(Ton);
  8939  0024B6  C00B  F060         	movff	_Ton,WriteTimer0@timer0
  8940  0024BA  C00C  F061         	movff	_Ton+1,WriteTimer0@timer0+1
  8941  0024BE  EC33  F014         	call	_WriteTimer0	;wreg free
  8942                           
  8943                           ;newmain.c: 62: T0CONbits.TMR0ON = 1;
  8944  0024C2  8ED5               	bsf	4053,7,c	;volatile
  8945  0024C4                     i2l3822:
  8946                           
  8947                           ;newmain.c: 63: }
  8948                           ;newmain.c: 64: if (PORTCbits.RC0 == 0) {
  8949  0024C4  B082               	btfsc	3970,0,c	;volatile
  8950  0024C6  D007               	goto	i2l3828
  8951                           
  8952                           ;newmain.c: 65: WriteTimer0(Toff);
  8953  0024C8  C009  F060         	movff	_Toff,WriteTimer0@timer0
  8954  0024CC  C00A  F061         	movff	_Toff+1,WriteTimer0@timer0+1
  8955  0024D0  EC33  F014         	call	_WriteTimer0	;wreg free
  8956                           
  8957                           ;newmain.c: 66: T0CONbits.TMR0ON = 1;
  8958  0024D4  8ED5               	bsf	4053,7,c	;volatile
  8959  0024D6                     i2l3828:
  8960                           
  8961                           ;newmain.c: 67: }
  8962                           ;newmain.c: 69: INTCONbits.TMR0IF = 0;
  8963  0024D6  94F2               	bcf	intcon,2,c	;volatile
  8964  0024D8  C072  FFF5         	movff	??_ISR_alta+14,tablat
  8965  0024DC  C071  FFF8         	movff	??_ISR_alta+13,tblptru
  8966  0024E0  C070  FFF7         	movff	??_ISR_alta+12,tblptrh
  8967  0024E4  C06F  FFF6         	movff	??_ISR_alta+11,tblptrl
  8968  0024E8  C06E  FFF4         	movff	??_ISR_alta+10,prodh
  8969  0024EC  C06D  FFF3         	movff	??_ISR_alta+9,prodl
  8970  0024F0  C06C  FFDA         	movff	??_ISR_alta+8,fsr2h
  8971  0024F4  C06B  FFD9         	movff	??_ISR_alta+7,fsr2l
  8972  0024F8  C06A  FFE2         	movff	??_ISR_alta+6,fsr1h
  8973  0024FC  C069  FFE1         	movff	??_ISR_alta+5,fsr1l
  8974  002500  C068  FFEA         	movff	??_ISR_alta+4,fsr0h
  8975  002504  C067  FFE9         	movff	??_ISR_alta+3,fsr0l
  8976  002508  C066  FFFB         	movff	??_ISR_alta+2,pclatu
  8977  00250C  C065  FFFA         	movff	??_ISR_alta+1,pclath
  8978  002510  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8979  002512  0011               	retfie		f
  8980  002514                     __end_of_ISR_alta:
  8981                           	opt stack 0
  8982                           pclatu	equ	0xFFB
  8983                           pclath	equ	0xFFA
  8984                           tblptru	equ	0xFF8
  8985                           tblptrh	equ	0xFF7
  8986                           tblptrl	equ	0xFF6
  8987                           tablat	equ	0xFF5
  8988                           prodh	equ	0xFF4
  8989                           prodl	equ	0xFF3
  8990                           intcon	equ	0xFF2
  8991                           intcon2	equ	0xFF1
  8992                           postinc0	equ	0xFEE
  8993                           fsr0h	equ	0xFEA
  8994                           fsr0l	equ	0xFE9
  8995                           wreg	equ	0xFE8
  8996                           postdec1	equ	0xFE5
  8997                           fsr1h	equ	0xFE2
  8998                           fsr1l	equ	0xFE1
  8999                           bsr	equ	0xFE0
  9000                           indf2	equ	0xFDF
  9001                           postinc2	equ	0xFDE
  9002                           postdec2	equ	0xFDD
  9003                           fsr2h	equ	0xFDA
  9004                           fsr2l	equ	0xFD9
  9005                           status	equ	0xFD8
  9006                           
  9007 ;; *************** function _WriteTimer0 *****************
  9008 ;; Defined at:
  9009 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  9010 ;; Parameters:    Size  Location     Type
  9011 ;;  timer0          2    0[BANK0 ] unsigned int 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  timer           2    2[BANK0 ] struct Timers
  9014 ;; Return value:  Size  Location     Type
  9015 ;;		None               void
  9016 ;; Registers used:
  9017 ;;		None
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9023 ;;      Params:         0       2       0       0
  9024 ;;      Locals:         0       2       0       0
  9025 ;;      Temps:          0       0       0       0
  9026 ;;      Totals:         0       4       0       0
  9027 ;;Total ram usage:        4 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; This function calls:
  9030 ;;		Nothing
  9031 ;; This function is called by:
  9032 ;;		_ISR_alta
  9033 ;; This function uses a non-reentrant model
  9034 ;;
  9035                           
  9036                           	psect	text27
  9037  002866                     __ptext27:
  9038                           	opt stack 0
  9039  002866                     _WriteTimer0:
  9040                           	opt stack 24
  9041                           
  9042                           ;incstack = 0
  9043  002866  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9044  00286A  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9045  00286E  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9046  002872  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9047  002876  0012               	return		;funcret
  9048  002878                     __end_of_WriteTimer0:
  9049                           	opt stack 0
  9050  0000                     pclatu	equ	0xFFB
  9051                           pclath	equ	0xFFA
  9052                           tblptru	equ	0xFF8
  9053                           tblptrh	equ	0xFF7
  9054                           tblptrl	equ	0xFF6
  9055                           tablat	equ	0xFF5
  9056                           prodh	equ	0xFF4
  9057                           prodl	equ	0xFF3
  9058                           intcon	equ	0xFF2
  9059                           intcon2	equ	0xFF1
  9060                           postinc0	equ	0xFEE
  9061                           fsr0h	equ	0xFEA
  9062                           fsr0l	equ	0xFE9
  9063                           wreg	equ	0xFE8
  9064                           postdec1	equ	0xFE5
  9065                           fsr1h	equ	0xFE2
  9066                           fsr1l	equ	0xFE1
  9067                           bsr	equ	0xFE0
  9068                           indf2	equ	0xFDF
  9069                           postinc2	equ	0xFDE
  9070                           postdec2	equ	0xFDD
  9071                           fsr2h	equ	0xFDA
  9072                           fsr2l	equ	0xFD9
  9073                           status	equ	0xFD8
  9074                           pclatu	equ	0xFFB
  9075                           pclath	equ	0xFFA
  9076                           tblptru	equ	0xFF8
  9077                           tblptrh	equ	0xFF7
  9078                           tblptrl	equ	0xFF6
  9079                           tablat	equ	0xFF5
  9080                           prodh	equ	0xFF4
  9081                           prodl	equ	0xFF3
  9082                           intcon	equ	0xFF2
  9083                           intcon2	equ	0xFF1
  9084                           postinc0	equ	0xFEE
  9085                           fsr0h	equ	0xFEA
  9086                           fsr0l	equ	0xFE9
  9087                           wreg	equ	0xFE8
  9088                           postdec1	equ	0xFE5
  9089                           fsr1h	equ	0xFE2
  9090                           fsr1l	equ	0xFE1
  9091                           bsr	equ	0xFE0
  9092                           indf2	equ	0xFDF
  9093                           postinc2	equ	0xFDE
  9094                           postdec2	equ	0xFDD
  9095                           fsr2h	equ	0xFDA
  9096                           fsr2l	equ	0xFD9
  9097                           status	equ	0xFD8
  9098                           
  9099                           	psect	param0
  9100  0000                     pclatu	equ	0xFFB
  9101                           pclath	equ	0xFFA
  9102                           tblptru	equ	0xFF8
  9103                           tblptrh	equ	0xFF7
  9104                           tblptrl	equ	0xFF6
  9105                           tablat	equ	0xFF5
  9106                           prodh	equ	0xFF4
  9107                           prodl	equ	0xFF3
  9108                           intcon	equ	0xFF2
  9109                           intcon2	equ	0xFF1
  9110                           postinc0	equ	0xFEE
  9111                           fsr0h	equ	0xFEA
  9112                           fsr0l	equ	0xFE9
  9113                           wreg	equ	0xFE8
  9114                           postdec1	equ	0xFE5
  9115                           fsr1h	equ	0xFE2
  9116                           fsr1l	equ	0xFE1
  9117                           bsr	equ	0xFE0
  9118                           indf2	equ	0xFDF
  9119                           postinc2	equ	0xFDE
  9120                           postdec2	equ	0xFDD
  9121                           fsr2h	equ	0xFDA
  9122                           fsr2l	equ	0xFD9
  9123                           status	equ	0xFD8
  9124                           
  9125                           	psect	temp
  9126  000045                     btemp:
  9127                           	opt stack 0
  9128  000045                     	ds	1
  9129  0000                     int$flags	set	btemp
  9130                           pclatu	equ	0xFFB
  9131                           pclath	equ	0xFFA
  9132                           tblptru	equ	0xFF8
  9133                           tblptrh	equ	0xFF7
  9134                           tblptrl	equ	0xFF6
  9135                           tablat	equ	0xFF5
  9136                           prodh	equ	0xFF4
  9137                           prodl	equ	0xFF3
  9138                           intcon	equ	0xFF2
  9139                           intcon2	equ	0xFF1
  9140                           postinc0	equ	0xFEE
  9141                           fsr0h	equ	0xFEA
  9142                           fsr0l	equ	0xFE9
  9143                           wreg	equ	0xFE8
  9144                           postdec1	equ	0xFE5
  9145                           fsr1h	equ	0xFE2
  9146                           fsr1l	equ	0xFE1
  9147                           bsr	equ	0xFE0
  9148                           indf2	equ	0xFDF
  9149                           postinc2	equ	0xFDE
  9150                           postdec2	equ	0xFDD
  9151                           fsr2h	equ	0xFDA
  9152                           fsr2l	equ	0xFD9
  9153                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         78
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      68
    BANK0           160     53     104
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    ___wmul->___awdiv
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _calibrazione->___lwdiv
    ___lldiv->___lmul

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->_WriteTimer0

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   12536
                                             45 BANK0      8     8      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___awdiv
                            ___lldiv
                             ___lmul
                             ___wmul
                                _abs
                       _calibrazione
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    2419
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2395
                                             19 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    7165
                      _CANInitialize
                            _OpenADC
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     949
                                             33 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     415
                                             27 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             19 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             33 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibrazione                                         0     0      0     290
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     130
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     322
                                             19 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     290
                                             31 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     556
                                             19 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           19    19      0    1161
                                             12 COMRAM    19    19      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            15    15      0     253
                                              4 BANK0     15    15      0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     253
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   ___awdiv
   ___lldiv
     ___lmul (ARG)
   ___lmul
   ___wmul
     ___awdiv (ARG)
   _abs
   _calibrazione
     _BusyADC
     _ConvertADC
     _ReadADC
     ___lwdiv
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenADC
     _delay_ms
       ___wmul
         ___awdiv (ARG)
   _delay_ms
     ___wmul
       ___awdiv (ARG)
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_alta (ROOT)
   _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     35      68       4       65.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1F      44       1       72.3%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AC       9        0.0%
DATA                 0      0      AC      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Dec 06 20:19:36 2015

              ??_CANisTXwarningON 0073              __end_of_CANSetFilter 0C70  
                    ___awdiv@sign 0078                                _id 00A9  
                              bsr 000FE0               ___wmul@multiplicand 007D  
                     __CFG_BORV$3 000000                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                       __CFG_OSC$HS 000000  
                             l400 1192                               l401 128A  
                             l410 1358                               l402 121A  
                             l403 1224                               l404 122E  
                             l405 1238                               l510 09EC  
                             l502 09AC                               l503 09B0  
                             l520 0AFC                               l504 09BC  
                             l440 1B12                               l408 1348  
                             l521 0B08                               l513 0AC8  
                             l505 09C0                               l441 1B16  
                             l409 134C                               l530 0C14  
                             l514 0ACC                               l506 09CC  
                             l450 1C1E                               l442 1B22  
                             l370 0C86                               l531 0C18  
                             l515 0AD8                               l507 09D0  
                             l451 1C2A                               l443 1B26  
                             l371 0C8A                               l532 0C24  
                             l524 0BE4                               l516 0ADC  
                             l508 09DC                               l452 1C2E  
                             l444 1B32                               l364 20FA  
                             l380 0E44                               l372 0D82  
                             l525 0BE8                               l517 0AE8  
                             l509 09E0                               l453 1C3A  
                             l445 1B36                               l365 2104  
                             l381 0E50                               l373 0D12  
                             l526 0BF4                               l518 0AEC  
                             l470 065E                               l454 1C3E  
                             l446 1B42                               l438 1B02  
                             l390 0FAA                               l374 0D1C  
                             l527 0BF8                               l519 0AF8  
                             l471 066A                               l455 1C4A  
                             l439 1B06                               l391 0FB4  
                             l375 0D26                               l528 0C04  
                             l480 0774                               l472 066E  
                             l456 1C4E                               l384 1178  
                             l376 0D30                               l529 0C08  
                             l481 0778                               l473 067A  
                             l457 1C5A                               l449 1C1A  
                             l385 0F0A                               l369 0EF4  
                             l482 0784                               l474 067E  
                             l562 2822                               l394 10C4  
                             l386 0F0E                               l491 0890  
                             l483 0788                               l475 068A  
                             l707 258C                               l395 10C8  
                             l387 1006                               l379 0E40  
                             l492 0894                               l484 0794  
                             l476 068E                               l396 10D4  
                             l388 0F96                               l493 08A0  
                             l485 0798                               l477 069A  
                             l469 065A                               l389 0FA0  
                             l494 08A4                               l486 07A4  
                             l495 08B0                               l487 07A8  
                             l575 2794                               l399 118E  
                             l663 203A                               l496 08B4  
                             l488 07B4                               l497 08C0  
                             l657 1E66                               l498 08C4  
                             l499 08D0                               l772 27FA  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _Ton 000B              __size_of_WriteTimer0 0012  
                             _abs 27D8                               _msg 0012  
                             wreg 000FE8             _currentSteering_array 009D  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            ?_abs 0073                              l1129 25FE  
                            l1076 2450                              l3050 2154  
                            l3042 20F2                              l3114 0E54  
                            l3044 2108                              l3300 2786  
                            l3108 0E34                              l3048 2110  
                            l3240 1242                              l3332 25AE  
                            l3260 133C                              l3164 0FBE  
                            l3334 25BA                              l2622 1A76  
                            l2606 19C0                              l3190 10D8  
                            l3344 25F0                              l3336 25C0  
                            l2704 0228                              l3184 10B8  
                            l3088 0D3A                              l2722 02E0  
                            l3266 135C                              l3620 2344  
                            l3612 231A                              l2740 039A  
                            l3630 237A                              l3622 234A  
                            l3606 2304                              l2822 069E  
                            l2654 1B8C                              l2680 1C5E  
                            l2648 1B46                              l3618 2338  
                            l3634 2388                              l3650 23E4  
                            l3570 26E8                              l2930 0A36  
                            l3660 243E                              l3652 23EA  
                            l2588 2830                              l2924 09F0  
                            l2828 06E4                              l3638 239C  
                            l3590 261A                              l2862 07FE  
                            l2758 0454                              l3648 23D4  
                            l2856 07B8                              l2776 050E  
                            l3760 1DE0                              l3594 2640  
                            l2890 08D4                              l2794 05C8  
                            l3586 2764                              l3762 1DEE  
                            l2964 0B52                              l3772 1F14  
                            l3748 1CDE                              l2958 0B0C  
                            l3782 2020                              l2992 0C28  
                            l2896 091A                              l3768 1F00  
                            u2205 199C                              _LATA 000F89  
                            u2230 19F2                              _LATB 000F8A  
                            _LATC 000F8B                              u3120 0C48  
                            u3040 0B2C                              u2400 1C7E  
                            u2320 1B66                              _LATD 000F8C  
                            _LATE 000F8D                              u2235 19E6  
                            u3125 0C3C                              u3045 0B20  
                            u2405 1C72                              u2325 1B5A  
                            u2245 1A52                              u2510 0316  
                            u2430 01A4                              u2190 193C  
                            u3250 0D5A                              u2515 030A  
                            u2435 0198                              u2195 1930  
                            u3260 0DA6                              u2605 04EA  
                            u2525 0376                              u2445 0204  
                            u3405 108A                              u2630 0544  
                            u2550 03D0                              u2470 025C  
                            u3510 1262                              u4230 1D46  
                            u3255 0D4E                              u3600 2880  
                            u2800 07D8                              u2720 06BE  
                            u3520 12AE                              u3265 0D9A  
                            u2635 0538                              u2555 03C4  
                            u2475 0250                              u3515 1256  
                            u3275 0E06                              u3380 0FDE  
                            u4260 1EA8                              u2805 07CC  
                            u2725 06B2                              u2645 05A4  
                            u2565 0430                              u2485 02BC  
                            u3525 12A2                              u2590 048A  
                            u3390 102A                              u3535 130E  
                            u3385 0FD2                              u2595 047E  
                            u4347 2788                              u3395 101E  
                            u3900 2898                              u2960 0A10  
                            u2880 08F4                              u2965 0A04  
                            u2885 08E8                              u3890 288C  
             __size_of_CANSetMask 039E                              _Toff 0009  
                            abs@a 0073                              _main 1CA6  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0045  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 0166  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                   __end_of_BusyADC 2884  
                 __end_of_ReadADC 2866                  _CANOperationMode 2828  
                 __end_of_OpenADC 2590                             ??_abs 0075  
      __size_of_CANreceiveMessage 050C                             ?_main 0021  
                 __end_of___awdiv 23A6                   __end_of___lldiv 2462  
                           _T0CON 000FD5                   ___awdiv@divisor 0075  
                           _T3CON 000FB1                   __end_of___lwdiv 2608  
                           i1l416 1694                             i1l651 011E  
                           i1l567 2850                   ___awdiv@counter 0077  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
                           _PORTC 000F82                 _CANisRxReady$2920 0021  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
             ___lmul@multiplicand 0077                __size_of_ISR_bassa 014E  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                CANInitialize@flags 0085  
                __end_of_ISR_alta 2514                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _timer 00B1  
                      _ConvertADC 28A0                    __pbitbssCOMRAM 0220  
            __end_of_CANisRxReady 2854                             tablat 000FF5  
            __end_of_CANisTxReady 2828                             status 000FD8  
                  __CFG_PBADEN$ON 000000                   __initialization 267E  
                    __end_of_main 203E                            ??_main 008D  
                   __activetblptr 000002                 _CANisTxReady$2918 0073  
                   _counter_array 0095                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                          _ADRESL 000FC3             __size_of_calibrazione 0046  
                ___awdiv@dividend 0073                   __CFG_BBSIZ$1024 000000  
                          i1l3400 15E4                            i1l3412 163E  
                          i1l3404 1602                            i1l3416 165C  
                          i1l3408 1620                            i1l3418 168E  
                          i1l3470 189A                            i1l3462 1862  
                          i1l3454 17F4                            i1l3480 1904  
                          i1l3392 1574                            i1l3704 009C  
                          i1l3474 18B6                            i1l3466 187E  
                          i1l3716 00D6                            i1l3724 0100  
                          i1l3478 18D2                            i1l3728 0104  
                          i1l3696 0066                            i2l3822 24C4  
                          i2l3828 24D6                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F56                            _RXB0D5 000F6B  
                          _RXB1D1 000F57                            _RXB0D6 000F6C  
                          _RXB1D2 000F58                            _RXB0D7 000F6D  
                          _RXB1D3 000F59                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _TXB1D2 000F38  
                          _TXB0D6 000F4C                            _TXB1D3 000F39  
                          _TXB0D7 000F4D                            _TXB2D0 000F26  
                          _TXB1D4 000F3A                            _TXB2D1 000F27  
                          _TXB1D5 000F3B                            _TXB2D2 000F28  
                          _TXB1D6 000F3C                            _TXB2D3 000F29  
                          _TXB1D7 000F3D                            _TXB2D4 000F2A  
                          _TXB2D5 000F2B                            _TXB2D6 000F2C  
                          _TXB2D7 000F2D                CANsendMessage@data 0077  
              CANsendMessage@tamp 007F                         ??_BusyADC 0073  
                       ??_ReadADC 0075                  __end_of_delay_ms 27A2  
           __size_of_CANSetFilter 0B06                         ??_OpenADC 0075  
                  __CFG_XINST$OFF 000000                 __end_of_ISR_bassa 0166  
                          ___lmul 2608                            ___wmul 27A2  
                       ??___awdiv 0077                    __CFG_STVREN$ON 000000  
                       ??___lldiv 0087                         ??___lwdiv 0077  
                    ??_CANSetMask 0078                            _errore 00B9  
                          clear_0 2684                            clear_1 2692  
                ___awdiv@quotient 0079          ?_configurazione_iniziale 0021  
                 __CFG_BOREN$BOHW 000000                      _calibrazione 26E4  
                    __pdataCOMRAM 0040                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                 _currentSteering 00C3                      _CANSetFilter 016A  
                     ?_ConvertADC 0021                        __accesstop 0060  
         __end_of__initialization 26D6                __end_of_CANSetMask 1CA6  
                   ___rparam_used 000000         __size_of_CANisRXwarningON 000C  
                  __pcstackCOMRAM 0021                      __pidataBANK0 28A4  
                       ?_ISR_alta 0021             CANSetFilter@numBuffer 007C  
       __size_of_CANisTXwarningON 000C             __size_of_CANisRxReady 0016  
           __size_of_CANisTxReady 0024          __end_of_CANOperationMode 283E  
                      __pbssBANK0 0095                        _data_array 00BB  
         __size_of_CANsendMessage 078C                           ?___lmul 0073  
                         ?___wmul 007B                        ??_ISR_alta 0064  
              __size_of_send_data 003E                  WriteTimer0@timer 0062  
                   ??_WriteTimer0 0062                    ___lmul@product 007B  
                    _CANisRxReady 283E               __size_of_ConvertADC 0004  
                         _CANSTAT 000F6E                      _CANisTxReady 2804  
                         _BRGCON1 000F70                           _BRGCON2 000F71  
                         _BRGCON3 000F72            __size_of_CANInitialize 01C6  
                       ?_delay_ms 0081                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 007A                           _BusyADC 2878  
                         _ReadADC 2854                        _correzione 00B7  
                       _ADCResult 00B5                           _OpenADC 2514  
                         __Hparam 0000                           __Lparam 0000  
                delay_ms@value_ms 0081                           ___awdiv 22E8  
                 __size_of___lmul 0076                           ___lldiv 23A6  
                 __size_of___wmul 0036                           ___lwdiv 2590  
            CANInitialize@propSeg 008A                           __pcinit 267E  
                         __ramtop 0300                           __ptext0 1CA6  
                         __ptext1 272A                           __ptext2 0C70  
                         __ptext3 2804                           __ptext4 2204  
                         __ptext5 2768                           __ptext6 27A2  
                         __ptext7 2514                           __ptext8 203E  
                         __ptext9 1908                         _T0CONbits 000FD5  
                         _counter 0001                      __size_of_abs 002C  
                      _duty_cycle 00A5               __end_of_WriteTimer0 2878  
                      ??_delay_ms 0083            CANreceiveMessage@error 002B  
                         _potenza 0042                    OpenADC@config2 0073  
                  __pintcode_body 2462              end_of_initialization 26D6  
               __end_of_send_data 2768                     __Lmediumconst 0000  
                         int_func 2462                  _CANisRXwarningON 2890  
                   _CANInitialize 203E                   ___lldiv@divisor 0083  
                 ___lldiv@counter 008B                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                         _ISR_bassa 0018  
                       _PORTAbits 000F80                    CANSetMask@mask 0073  
                       _PORTCbits 000F82                    CANSetMask@tamp 007D  
                  CANSetMask@type 0077                  _CANisTXwarningON 2884  
                    ??_ConvertADC 0073  __size_of_configurazione_iniziale 00E4  
             _previousTimeCounter 00AD           _clock_counter_reference 00C6  
                  _CANsendMessage 0C70                  CANInitialize@BRP 0084  
                CANInitialize@SJW 0083                    ?_CANInitialize 0081  
                  __end_of___lmul 267E                        ?_ISR_bassa 0021  
                  __end_of___wmul 27D8                     __pidataCOMRAM 289C  
               __size_of_ISR_alta 250C                       _WriteTimer0 2866  
              __end_of_ConvertADC 28A4               start_initialization 267E  
                     __end_of_abs 2804               CANSetMask@numBuffer 007C  
          __end_of_CANsendMessage 13FC                 ?_CANOperationMode 0021  
              ??_CANOperationMode 0073        CANInitialize@FilterConfig1 008B  
      CANInitialize@FilterConfig2 008C                          ??___lmul 007B  
                        ??___wmul 007F                       __pdataBANK0 00C3  
                     _calibration 000D                  __CFG_LPT1OSC$OFF 000000  
          CANInitialize@phaseSeg1 0081            CANInitialize@phaseSeg2 0082  
                     __pbssCOMRAM 0001                     __pcstackBANK0 0060  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
               __size_of_delay_ms 003A                   ?_CANsendMessage 0073  
                 ??_CANInitialize 0086                          ?_BusyADC 0021  
                        ?_ReadADC 0073                CANSetFilter@filter 0073  
                       __pnvBANK0 00C6                 OpenADC@portconfig 0074  
                        ?_OpenADC 0073                    _theorySteering 0011  
                ___lwdiv@dividend 0073                         __pintcode 0008  
                        ?___awdiv 0073                          ?___lldiv 007F  
                        ?___lwdiv 0073                       ??_ISR_bassa 002D  
                     __pintcodelo 0018                 WriteTimer0@timer0 0060  
        __end_of_CANisRXwarningON 289C                       _COMSTATbits 000F74  
                ___lwdiv@quotient 0077           _configurazione_iniziale 2204  
           CANreceiveMessage@tamp 002C                    ___wmul@product 007F  
                   OpenADC@config 0077                          _IPR2bits 000FA2  
    _delay_quartz_frequency_value 00C4                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE2bits 000FA0  
                       _send_data 272A                          _PIE3bits 000FA3  
        __end_of_CANisTXwarningON 2890                          i1u416_20 009A  
                        i1u371_25 14F8                          i1u380_20 1766  
                        i1u380_26 1768                          i1u382_25 177A  
                        i1u368_20 14B4                          i1u368_26 14B6  
                        i1u369_20 14E2                          i1u377_25 1668  
                        i1u369_26 14E4                          i1u379_20 173C  
                        i1u379_26 173E                          i1u388_25 18DE  
                        i2u431_40 249C                          i2u431_46 249E  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                    _pastSteering 00C5                          _RXF2EIDL 000F0B  
                        _RXF3EIDH 000F0E                          _RXF3EIDL 000F0F  
                        _RXF4EIDH 000F12                          _RXF4EIDL 000F13  
                        _RXF5EIDH 000F16                          _RXF5EIDL 000F17  
                        _RXF0SIDH 000F00                          _RXF0SIDL 000F01  
                        _TXB0EIDH 000F43                          _RXF1SIDH 000F04  
                        _TXB0EIDL 000F44                          _RXF1SIDL 000F05  
                        _TXB1EIDH 000F33                          _RXF2SIDH 000F08  
                        _TXB1EIDL 000F34                          _RXF2SIDL 000F09  
                        _ISR_alta 0008                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _TXERRCNT 000F76                        _ADCON0bits 000FC2  
               ___wmul@multiplier 007B                     ?_calibrazione 0021  
                   ?_CANSetFilter 0073                 ___lmul@multiplier 0073  
                     _INTCON2bits 000FF1                         copy_data0 26CA  
                      _CANCONbits 000F6F                          __Hparam0 0000  
                      ?_send_data 0021                  __size_of_BusyADC 000C  
                __size_of_ReadADC 0012                          __Lparam0 0000  
                    _RXB0SIDLbits 000F62                  __size_of_OpenADC 007C  
                    _RXB1SIDLbits 000F52                        _CANSetMask 1908  
                __size_of___awdiv 00BE                  __size_of___lldiv 00BC  
                __size_of___lwdiv 0078                      ?_WriteTimer0 0060  
                  ??_calibrazione 007A         ??_configurazione_iniziale 008D  
                    _RXF0SIDLbits 000F01                          _delay_ms 2768  
                 ___lwdiv@divisor 0075                      _RXF1SIDLbits 000F05  
                 ___lwdiv@counter 0079                    ??_CANSetFilter 0078  
                        __ptext10 016A                          __ptext11 2828  
                        __ptext20 22E8                          __ptext12 26E4  
                        __ptext21 2884                          __ptext13 2590  
                        __ptext22 2890                          __ptext14 2854  
                        __ptext15 28A0                          __ptext24 13FC  
                        __ptext16 2878                          __ptext25 283E  
                        __ptext17 27D8                          __ptext18 2608  
                        __ptext27 2866                          __ptext19 23A6  
                    _RXF2SIDLbits 000F09                      _RXF3SIDLbits 000F0D  
                    _RXF4SIDLbits 000F11                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 0079                      _remote_frame 0220  
                   __size_of_main 0398                          _limiteDx 000F  
                        _limiteSx 0040              CANreceiveMessage@msg 0021  
                    _TXB0SIDLbits 000F42                      _TXB1SIDLbits 000F32  
                    _TXB2SIDLbits 000F22                          int$flags 0045  
       __size_of_CANOperationMode 0016                     ?_CANisRxReady 0021  
                   ?_CANisTxReady 0021                       _RXB0DLCbits 000F65  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 13FC                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                  ??_CANsendMessage 007B  
              ?_CANreceiveMessage 0021          CANsendMessage@identifier 0073  
                        intlevel1 0000                          intlevel2 0000  
                CANSetFilter@tamp 007D                  CANSetFilter@type 0077  
             ??_CANreceiveMessage 0023                  ___lldiv@dividend 007F  
                     _TXB0DLCbits 000F45                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       ??_send_data 0083  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 22E8  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 0005              CANOperationMode@mode 0073  
                  ??_CANisRxReady 0021                       ?_CANSetMask 0073  
                  ??_CANisTxReady 0073         __end_of_CANreceiveMessage 1908  
                ___lldiv@quotient 0087                 ?_CANisRXwarningON 0021  
              ??_CANisRXwarningON 0073              __end_of_calibrazione 272A  
           __end_of_CANInitialize 2204                 ?_CANisTXwarningON 0021  
