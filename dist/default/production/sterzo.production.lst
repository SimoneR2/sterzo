

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Jan 31 16:39:52 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	param0,global,class=BANK0,space=1,delta=1
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	idataCOMRAM
    50  002605                     __pidataCOMRAM:
    51                           	opt stack 0
    52                           
    53                           ;initializer for _limiteDx
    54  002605  0078               	dw	120
    55                           
    56                           ;initializer for _potenza
    57  002607  0002               	dw	2
    58                           
    59                           ;initializer for _currentSteering
    60  002609  B4                 	db	180
    61                           
    62                           ;initializer for _pastSteering
    63  00260A  01                 	db	1
    64                           
    65                           	psect	idataBANK0
    66  0025FC                     __pidataBANK0:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _delay_quartz_frequency_value
    70  0025FC  14                 	db	20
    71                           
    72                           ;initializer for _data_array_1
    73  0025FD  00                 	db	0
    74  0025FE  00                 	db	0
    75  0025FF  00                 	db	0
    76  002600  00                 	db	0
    77  002601  00                 	db	0
    78  002602  00                 	db	0
    79  002603  01                 	db	1
    80  002604  05                 	db	5
    81  0000                     _RXB1CON	set	3920
    82  0000                     _RXB1CONbits	set	3920
    83  0000                     _RXB1D0	set	3926
    84  0000                     _RXB1D1	set	3927
    85  0000                     _RXB1D2	set	3928
    86  0000                     _RXB1D3	set	3929
    87  0000                     _RXB1D4	set	3930
    88  0000                     _RXB1D5	set	3931
    89  0000                     _RXB1D6	set	3932
    90  0000                     _RXB1D7	set	3933
    91  0000                     _RXB1DLC	set	3925
    92  0000                     _RXB1DLCbits	set	3925
    93  0000                     _RXB1EIDH	set	3923
    94  0000                     _RXB1EIDL	set	3924
    95  0000                     _RXB1SIDH	set	3921
    96  0000                     _RXB1SIDL	set	3922
    97  0000                     _RXB1SIDLbits	set	3922
    98  0000                     _RXF0EIDH	set	3842
    99  0000                     _RXF0EIDL	set	3843
   100  0000                     _RXF0SIDH	set	3840
   101  0000                     _RXF0SIDL	set	3841
   102  0000                     _RXF0SIDLbits	set	3841
   103  0000                     _RXF1EIDH	set	3846
   104  0000                     _RXF1EIDL	set	3847
   105  0000                     _RXF1SIDH	set	3844
   106  0000                     _RXF1SIDL	set	3845
   107  0000                     _RXF1SIDLbits	set	3845
   108  0000                     _RXF2EIDH	set	3850
   109  0000                     _RXF2EIDL	set	3851
   110  0000                     _RXF2SIDH	set	3848
   111  0000                     _RXF2SIDL	set	3849
   112  0000                     _RXF2SIDLbits	set	3849
   113  0000                     _RXF3EIDH	set	3854
   114  0000                     _RXF3EIDL	set	3855
   115  0000                     _RXF3SIDH	set	3852
   116  0000                     _RXF3SIDL	set	3853
   117  0000                     _RXF3SIDLbits	set	3853
   118  0000                     _RXF4EIDH	set	3858
   119  0000                     _RXF4EIDL	set	3859
   120  0000                     _RXF4SIDH	set	3856
   121  0000                     _RXF4SIDL	set	3857
   122  0000                     _RXF4SIDLbits	set	3857
   123  0000                     _RXF5EIDH	set	3862
   124  0000                     _RXF5EIDL	set	3863
   125  0000                     _RXF5SIDH	set	3860
   126  0000                     _RXF5SIDL	set	3861
   127  0000                     _RXF5SIDLbits	set	3861
   128  0000                     _RXM0EIDH	set	3866
   129  0000                     _RXM0EIDL	set	3867
   130  0000                     _RXM0SIDH	set	3864
   131  0000                     _RXM0SIDL	set	3865
   132  0000                     _RXM0SIDLbits	set	3865
   133  0000                     _RXM1EIDH	set	3870
   134  0000                     _RXM1EIDL	set	3871
   135  0000                     _RXM1SIDH	set	3868
   136  0000                     _RXM1SIDL	set	3869
   137  0000                     _RXM1SIDLbits	set	3869
   138  0000                     _TXB0CONbits	set	3904
   139  0000                     _TXB0D0	set	3910
   140  0000                     _TXB0D1	set	3911
   141  0000                     _TXB0D2	set	3912
   142  0000                     _TXB0D3	set	3913
   143  0000                     _TXB0D4	set	3914
   144  0000                     _TXB0D5	set	3915
   145  0000                     _TXB0D6	set	3916
   146  0000                     _TXB0D7	set	3917
   147  0000                     _TXB0DLC	set	3909
   148  0000                     _TXB0DLCbits	set	3909
   149  0000                     _TXB0EIDH	set	3907
   150  0000                     _TXB0EIDL	set	3908
   151  0000                     _TXB0SIDH	set	3905
   152  0000                     _TXB0SIDL	set	3906
   153  0000                     _TXB0SIDLbits	set	3906
   154  0000                     _TXB1CONbits	set	3888
   155  0000                     _TXB1D0	set	3894
   156  0000                     _TXB1D1	set	3895
   157  0000                     _TXB1D2	set	3896
   158  0000                     _TXB1D3	set	3897
   159  0000                     _TXB1D4	set	3898
   160  0000                     _TXB1D5	set	3899
   161  0000                     _TXB1D6	set	3900
   162  0000                     _TXB1D7	set	3901
   163  0000                     _TXB1DLC	set	3893
   164  0000                     _TXB1DLCbits	set	3893
   165  0000                     _TXB1EIDH	set	3891
   166  0000                     _TXB1EIDL	set	3892
   167  0000                     _TXB1SIDH	set	3889
   168  0000                     _TXB1SIDL	set	3890
   169  0000                     _TXB1SIDLbits	set	3890
   170  0000                     _TXB2CONbits	set	3872
   171  0000                     _TXB2D0	set	3878
   172  0000                     _TXB2D1	set	3879
   173  0000                     _TXB2D2	set	3880
   174  0000                     _TXB2D3	set	3881
   175  0000                     _TXB2D4	set	3882
   176  0000                     _TXB2D5	set	3883
   177  0000                     _TXB2D6	set	3884
   178  0000                     _TXB2D7	set	3885
   179  0000                     _TXB2DLC	set	3877
   180  0000                     _TXB2DLCbits	set	3877
   181  0000                     _TXB2EIDH	set	3875
   182  0000                     _TXB2EIDL	set	3876
   183  0000                     _TXB2SIDH	set	3873
   184  0000                     _TXB2SIDL	set	3874
   185  0000                     _TXB2SIDLbits	set	3874
   186  0000                     _ADCON0	set	4034
   187  0000                     _ADCON0bits	set	4034
   188  0000                     _ADCON1	set	4033
   189  0000                     _ADCON2	set	4032
   190  0000                     _ADRESH	set	4036
   191  0000                     _ADRESL	set	4035
   192  0000                     _BRGCON1	set	3952
   193  0000                     _BRGCON2	set	3953
   194  0000                     _BRGCON2bits	set	3953
   195  0000                     _BRGCON3	set	3954
   196  0000                     _BRGCON3bits	set	3954
   197  0000                     _CANCON	set	3951
   198  0000                     _CANCONbits	set	3951
   199  0000                     _CANSTAT	set	3950
   200  0000                     _COMSTATbits	set	3956
   201  0000                     _INTCON2bits	set	4081
   202  0000                     _INTCONbits	set	4082
   203  0000                     _IPR2bits	set	4002
   204  0000                     _IPR3bits	set	4005
   205  0000                     _LATA	set	3977
   206  0000                     _LATB	set	3978
   207  0000                     _LATC	set	3979
   208  0000                     _LATD	set	3980
   209  0000                     _LATE	set	3981
   210  0000                     _PIE1bits	set	3997
   211  0000                     _PIE2bits	set	4000
   212  0000                     _PIE3bits	set	4003
   213  0000                     _PIR1bits	set	3998
   214  0000                     _PIR2bits	set	4001
   215  0000                     _PIR3bits	set	4004
   216  0000                     _PORTAbits	set	3968
   217  0000                     _PORTCbits	set	3970
   218  0000                     _RCONbits	set	4048
   219  0000                     _RXB0CON	set	3936
   220  0000                     _RXB0CONbits	set	3936
   221  0000                     _RXB0D0	set	3942
   222  0000                     _RXB0D1	set	3943
   223  0000                     _RXB0D2	set	3944
   224  0000                     _RXB0D3	set	3945
   225  0000                     _RXB0D4	set	3946
   226  0000                     _RXB0D5	set	3947
   227  0000                     _RXB0D6	set	3948
   228  0000                     _RXB0D7	set	3949
   229  0000                     _RXB0DLC	set	3941
   230  0000                     _RXB0DLCbits	set	3941
   231  0000                     _RXB0EIDH	set	3939
   232  0000                     _RXB0EIDL	set	3940
   233  0000                     _RXB0SIDH	set	3937
   234  0000                     _RXB0SIDL	set	3938
   235  0000                     _RXB0SIDLbits	set	3938
   236  0000                     _RXERRCNT	set	3957
   237  0000                     _T0CON	set	4053
   238  0000                     _T0CONbits	set	4053
   239  0000                     _TMR0H	set	4055
   240  0000                     _TMR0L	set	4054
   241  0000                     _TRISA	set	3986
   242  0000                     _TRISB	set	3987
   243  0000                     _TRISC	set	3988
   244  0000                     _TRISD	set	3989
   245  0000                     _TRISE	set	3990
   246  0000                     _TXERRCNT	set	3958
   247                           
   248                           ; #config settings
   249  0000                     
   250                           	psect	cinit
   251  002358                     __pcinit:
   252                           	opt stack 0
   253  002358                     start_initialization:
   254                           	opt stack 0
   255  002358                     __initialization:
   256                           	opt stack 0
   257                           
   258                           ; Clear objects allocated to BANK0 (40 bytes)
   259  002358  EE00  F091         	lfsr	0,__pbssBANK0
   260  00235C  0E28               	movlw	40
   261  00235E                     clear_0:
   262  00235E  6AEE               	clrf	postinc0,c
   263  002360  06E8               	decf	wreg,f,c
   264  002362  E1FD               	bnz	clear_0
   265                           
   266                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   267  002364  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   268                           
   269                           ; Clear objects allocated to COMRAM (38 bytes)
   270  002366  EE00  F001         	lfsr	0,__pbssCOMRAM
   271  00236A  0E26               	movlw	38
   272  00236C                     clear_1:
   273  00236C  6AEE               	clrf	postinc0,c
   274  00236E  06E8               	decf	wreg,f,c
   275  002370  E1FD               	bnz	clear_1
   276                           
   277                           ; Initialize objects allocated to BANK0 (9 bytes)
   278                           ; load TBLPTR registers with __pidataBANK0
   279  002372  0EFC               	movlw	low __pidataBANK0
   280  002374  6EF6               	movwf	tblptrl,c
   281  002376  0E25               	movlw	high __pidataBANK0
   282  002378  6EF7               	movwf	tblptrh,c
   283  00237A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   284  00237C  6EF8               	movwf	tblptru,c
   285  00237E  EE00  F0B9         	lfsr	0,__pdataBANK0
   286  002382  EE10 F009          	lfsr	1,9
   287  002386                     copy_data0:
   288  002386  0009               	tblrd		*+
   289  002388  CFF5 FFEE          	movff	tablat,postinc0
   290  00238C  50E5               	movf	postdec1,w,c
   291  00238E  50E1               	movf	fsr1l,w,c
   292  002390  E1FA               	bnz	copy_data0
   293                           
   294                           ; Initialize objects allocated to COMRAM (6 bytes)
   295                           ; load TBLPTR registers with __pidataCOMRAM
   296  002392  0E05               	movlw	low __pidataCOMRAM
   297  002394  6EF6               	movwf	tblptrl,c
   298  002396  0E26               	movlw	high __pidataCOMRAM
   299  002398  6EF7               	movwf	tblptrh,c
   300  00239A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   301  00239C  6EF8               	movwf	tblptru,c
   302  00239E  EE00  F045         	lfsr	0,__pdataCOMRAM
   303  0023A2  EE10 F006          	lfsr	1,6
   304  0023A6                     copy_data1:
   305  0023A6  0009               	tblrd		*+
   306  0023A8  CFF5 FFEE          	movff	tablat,postinc0
   307  0023AC  50E5               	movf	postdec1,w,c
   308  0023AE  50E1               	movf	fsr1l,w,c
   309  0023B0  E1FA               	bnz	copy_data1
   310  0023B2                     end_of_initialization:
   311                           	opt stack 0
   312  0023B2                     __end_of__initialization:
   313                           	opt stack 0
   314  0023B2  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   315  0023B4  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   316  0023B6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   317  0023B8  6EF8               	movwf	tblptru,c
   318  0023BA  0100               	movlb	0
   319  0023BC  EF3B  F00F         	goto	_main	;jump to C main() function
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           tblptrl	equ	0xFF6
   323                           tablat	equ	0xFF5
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           postdec1	equ	0xFE5
   327                           fsr1l	equ	0xFE1
   328                           
   329                           	psect	bitbssCOMRAM
   330  000258                     __pbitbssCOMRAM:
   331                           	opt stack 0
   332  000258                     _noChange:
   333                           	opt stack 0
   334  000258                     	ds	1
   335  000259                     _remote_frame:
   336                           	opt stack 0
   337  000259                     	ds	1
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           postdec1	equ	0xFE5
   345                           fsr1l	equ	0xFE1
   346                           
   347                           	psect	bssCOMRAM
   348  000001                     __pbssCOMRAM:
   349                           	opt stack 0
   350  000001                     _counter:
   351                           	opt stack 0
   352  000001                     	ds	4
   353  000005                     _previousTimeCounter:
   354                           	opt stack 0
   355  000005                     	ds	4
   356  000009                     _timeCounter:
   357                           	opt stack 0
   358  000009                     	ds	4
   359  00000D                     _Toff:
   360                           	opt stack 0
   361  00000D                     	ds	2
   362  00000F                     _Ton:
   363                           	opt stack 0
   364  00000F                     	ds	2
   365  000011                     _calibration:
   366                           	opt stack 0
   367  000011                     	ds	2
   368  000013                     _correzione:
   369                           	opt stack 0
   370  000013                     	ds	2
   371  000015                     _errore:
   372                           	opt stack 0
   373  000015                     	ds	2
   374  000017                     _theorySteering:
   375                           	opt stack 0
   376  000017                     	ds	1
   377  000018                     _msg:
   378                           	opt stack 0
   379  000018                     	ds	15
   380                           tblptru	equ	0xFF8
   381                           tblptrh	equ	0xFF7
   382                           tblptrl	equ	0xFF6
   383                           tablat	equ	0xFF5
   384                           postinc0	equ	0xFEE
   385                           wreg	equ	0xFE8
   386                           postdec1	equ	0xFE5
   387                           fsr1l	equ	0xFE1
   388                           
   389                           	psect	dataCOMRAM
   390  000045                     __pdataCOMRAM:
   391                           	opt stack 0
   392  000045                     _limiteDx:
   393                           	opt stack 0
   394  000045                     	ds	2
   395  000047                     _potenza:
   396                           	opt stack 0
   397  000047                     	ds	2
   398  000049                     _currentSteering:
   399                           	opt stack 0
   400  000049                     	ds	1
   401  00004A                     _pastSteering:
   402                           	opt stack 0
   403  00004A                     	ds	1
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           tblptrl	equ	0xFF6
   407                           tablat	equ	0xFF5
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           postdec1	equ	0xFE5
   411                           fsr1l	equ	0xFE1
   412                           
   413                           	psect	bssBANK0
   414  000091                     __pbssBANK0:
   415                           	opt stack 0
   416  000091                     _counter_array:
   417                           	opt stack 0
   418  000091                     	ds	8
   419  000099                     _currentSteering_array:
   420                           	opt stack 0
   421  000099                     	ds	8
   422  0000A1                     _duty_cycle:
   423                           	opt stack 0
   424  0000A1                     	ds	4
   425  0000A5                     _id:
   426                           	opt stack 0
   427  0000A5                     	ds	4
   428  0000A9                     _timer:
   429                           	opt stack 0
   430  0000A9                     	ds	4
   431  0000AD                     _ADCResult:
   432                           	opt stack 0
   433  0000AD                     	ds	2
   434  0000AF                     _clock_counter_reference:
   435                           	opt stack 0
   436  0000AF                     	ds	2
   437  0000B1                     _data_array:
   438                           	opt stack 0
   439  0000B1                     	ds	8
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           tblptrl	equ	0xFF6
   443                           tablat	equ	0xFF5
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           postdec1	equ	0xFE5
   447                           fsr1l	equ	0xFE1
   448                           
   449                           	psect	dataBANK0
   450  0000B9                     __pdataBANK0:
   451                           	opt stack 0
   452  0000B9                     _delay_quartz_frequency_value:
   453                           	opt stack 0
   454  0000B9                     	ds	1
   455  0000BA                     _data_array_1:
   456                           	opt stack 0
   457  0000BA                     	ds	8
   458                           tblptru	equ	0xFF8
   459                           tblptrh	equ	0xFF7
   460                           tblptrl	equ	0xFF6
   461                           tablat	equ	0xFF5
   462                           postinc0	equ	0xFEE
   463                           wreg	equ	0xFE8
   464                           postdec1	equ	0xFE5
   465                           fsr1l	equ	0xFE1
   466                           
   467                           	psect	cstackBANK0
   468  000060                     __pcstackBANK0:
   469                           	opt stack 0
   470  000060                     WriteTimer0@timer0:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x0
   474  000060                     	ds	2
   475  000062                     WriteTimer0@timer:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x2
   479  000062                     	ds	2
   480  000064                     ??_ISR_alta:
   481                           
   482                           ; 0 bytes @ 0x4
   483  000064                     	ds	15
   484  000073                     ?_ReadADC:
   485                           	opt stack 0
   486  000073                     ?___wmul:
   487                           	opt stack 0
   488  000073                     ?___lwdiv:
   489                           	opt stack 0
   490  000073                     ?___lmul:
   491                           	opt stack 0
   492  000073                     CANOperationMode@mode:
   493                           	opt stack 0
   494  000073                     _CANisTxReady$2907:
   495                           	opt stack 0
   496  000073                     OpenADC@config2:
   497                           	opt stack 0
   498  000073                     ___wmul@multiplier:
   499                           	opt stack 0
   500  000073                     ___lwdiv@dividend:
   501                           	opt stack 0
   502  000073                     CANsendMessage@identifier:
   503                           	opt stack 0
   504  000073                     CANSetMask@mask:
   505                           	opt stack 0
   506  000073                     CANSetFilter@filter:
   507                           	opt stack 0
   508  000073                     ___lmul@multiplier:
   509                           	opt stack 0
   510                           
   511                           ; 4 bytes @ 0x13
   512  000073                     	ds	1
   513  000074                     OpenADC@portconfig:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x14
   517  000074                     	ds	1
   518  000075                     ??_ReadADC:
   519  000075                     ??_OpenADC:
   520  000075                     ___wmul@multiplicand:
   521                           	opt stack 0
   522  000075                     ___lwdiv@divisor:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x15
   526  000075                     	ds	2
   527  000077                     CANSetMask@type:
   528                           	opt stack 0
   529  000077                     CANSetFilter@type:
   530                           	opt stack 0
   531  000077                     OpenADC@config:
   532                           	opt stack 0
   533  000077                     CANsendMessage@data:
   534                           	opt stack 0
   535  000077                     ___wmul@product:
   536                           	opt stack 0
   537  000077                     ___lwdiv@quotient:
   538                           	opt stack 0
   539  000077                     ___lmul@multiplicand:
   540                           	opt stack 0
   541                           
   542                           ; 4 bytes @ 0x17
   543  000077                     	ds	1
   544  000078                     ??_CANSetMask:
   545  000078                     ??_CANSetFilter:
   546                           
   547                           ; 0 bytes @ 0x18
   548  000078                     	ds	1
   549  000079                     CANsendMessage@dataLength:
   550                           	opt stack 0
   551  000079                     ___lwdiv@counter:
   552                           	opt stack 0
   553  000079                     delay_ms@value_ms:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x19
   557  000079                     	ds	1
   558  00007A                     CANsendMessage@flags:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x1A
   562  00007A                     	ds	1
   563  00007B                     ??_CANsendMessage:
   564  00007B                     ___lmul@product:
   565                           	opt stack 0
   566                           
   567                           ; 4 bytes @ 0x1B
   568  00007B                     	ds	1
   569  00007C                     CANSetMask@numBuffer:
   570                           	opt stack 0
   571  00007C                     CANSetFilter@numBuffer:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0x1C
   575  00007C                     	ds	1
   576  00007D                     CANSetMask@tamp:
   577                           	opt stack 0
   578  00007D                     CANSetFilter@tamp:
   579                           	opt stack 0
   580                           
   581                           ; 4 bytes @ 0x1D
   582  00007D                     	ds	2
   583  00007F                     ?___lldiv:
   584                           	opt stack 0
   585  00007F                     CANsendMessage@tamp:
   586                           	opt stack 0
   587  00007F                     ___lldiv@dividend:
   588                           	opt stack 0
   589                           
   590                           ; 4 bytes @ 0x1F
   591  00007F                     	ds	2
   592  000081                     CANInitialize@phaseSeg1:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x21
   596  000081                     	ds	1
   597  000082                     CANInitialize@phaseSeg2:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x22
   601  000082                     	ds	1
   602  000083                     CANInitialize@SJW:
   603                           	opt stack 0
   604  000083                     ___lldiv@divisor:
   605                           	opt stack 0
   606                           
   607                           ; 4 bytes @ 0x23
   608  000083                     	ds	1
   609  000084                     CANInitialize@BRP:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x24
   613  000084                     	ds	1
   614  000085                     CANInitialize@flags:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x25
   618  000085                     	ds	1
   619  000086                     ??_CANInitialize:
   620                           
   621                           ; 0 bytes @ 0x26
   622  000086                     	ds	1
   623  000087                     ___lldiv@quotient:
   624                           	opt stack 0
   625                           
   626                           ; 4 bytes @ 0x27
   627  000087                     	ds	3
   628  00008A                     CANInitialize@propSeg:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x2A
   632  00008A                     	ds	1
   633  00008B                     CANInitialize@FilterConfig1:
   634                           	opt stack 0
   635  00008B                     ___lldiv@counter:
   636                           	opt stack 0
   637                           
   638                           ; 1 bytes @ 0x2B
   639  00008B                     	ds	1
   640  00008C                     CANInitialize@FilterConfig2:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0x2C
   644  00008C                     	ds	1
   645  00008D                     ??_main:
   646                           
   647                           ; 0 bytes @ 0x2D
   648  00008D                     	ds	4
   649                           tblptru	equ	0xFF8
   650                           tblptrh	equ	0xFF7
   651                           tblptrl	equ	0xFF6
   652                           tablat	equ	0xFF5
   653                           postinc0	equ	0xFEE
   654                           wreg	equ	0xFE8
   655                           postdec1	equ	0xFE5
   656                           fsr1l	equ	0xFE1
   657                           
   658                           	psect	cstackCOMRAM
   659  000027                     __pcstackCOMRAM:
   660                           	opt stack 0
   661  000027                     ?i1___wmul:
   662                           	opt stack 0
   663  000027                     _CANisRxReady$2909:
   664                           	opt stack 0
   665  000027                     CANreceiveMessage@msg:
   666                           	opt stack 0
   667  000027                     i1___wmul@multiplier:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x0
   671  000027                     	ds	2
   672  000029                     ??_CANreceiveMessage:
   673  000029                     i1___wmul@multiplicand:
   674                           	opt stack 0
   675                           
   676                           ; 2 bytes @ 0x2
   677  000029                     	ds	2
   678  00002B                     i1___wmul@product:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x4
   682  00002B                     	ds	2
   683  00002D                     ?i1___lwdiv:
   684                           	opt stack 0
   685  00002D                     i1delay_ms@value_ms:
   686                           	opt stack 0
   687  00002D                     i1___lwdiv@dividend:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x6
   691  00002D                     	ds	2
   692  00002F                     i1___lwdiv@divisor:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x8
   696  00002F                     	ds	2
   697  000031                     CANreceiveMessage@error:
   698                           	opt stack 0
   699  000031                     i1___lwdiv@quotient:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0xA
   703  000031                     	ds	1
   704  000032                     CANreceiveMessage@tamp:
   705                           	opt stack 0
   706                           
   707                           ; 1 bytes @ 0xB
   708  000032                     	ds	1
   709  000033                     i1___lwdiv@counter:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0xC
   713  000033                     	ds	1
   714  000034                     ??_ISR_bassa:
   715                           
   716                           ; 0 bytes @ 0xD
   717  000034                     	ds	17
   718                           tblptru	equ	0xFF8
   719                           tblptrh	equ	0xFF7
   720                           tblptrl	equ	0xFF6
   721                           tablat	equ	0xFF5
   722                           postinc0	equ	0xFEE
   723                           wreg	equ	0xFE8
   724                           postdec1	equ	0xFE5
   725                           fsr1l	equ	0xFE1
   726                           
   727 ;;
   728 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   729 ;;
   730 ;; *************** function _main *****************
   731 ;; Defined at:
   732 ;;		line 122 in file "newmain.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  2  638[None  ] int 
   739 ;; Registers used:
   740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   746 ;;      Params:         0       0       0       0
   747 ;;      Locals:         0       0       0       0
   748 ;;      Temps:          0       4       0       0
   749 ;;      Totals:         0       4       0       0
   750 ;;Total ram usage:        4 bytes
   751 ;; Hardware stack levels required when called:    8
   752 ;; This function calls:
   753 ;;		_CANisRXwarningON
   754 ;;		_CANisTXwarningON
   755 ;;		_CANsendMessage
   756 ;;		___lldiv
   757 ;;		___lmul
   758 ;;		_calibrazione
   759 ;;		_configurazione_iniziale
   760 ;;		_delay_ms
   761 ;;		_send_data
   762 ;; This function is called by:
   763 ;;		Startup code after reset
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           	psect	text0
   768  001E76                     __ptext0:
   769                           	opt stack 0
   770  001E76                     _main:
   771                           	opt stack 23
   772                           
   773                           ;newmain.c: 123: configurazione_iniziale();
   774                           
   775                           ;incstack = 0
   776  001E76  ECB5  F010         	call	_configurazione_iniziale	;wreg free
   777                           
   778                           ;newmain.c: 124: PORTAbits.RA1 = 1;
   779  001E7A  8280               	bsf	3968,1,c	;volatile
   780                           
   781                           ;newmain.c: 125: PORTCbits.RC1 = 1;
   782  001E7C  8282               	bsf	3970,1,c	;volatile
   783                           
   784                           ;newmain.c: 126: delay_ms(500);
   785  001E7E  0E01               	movlw	1
   786  001E80  0100               	movlb	0	; () banked
   787  001E82  6F7A               	movwf	(delay_ms@value_ms+1)& (0+255),b
   788  001E84  0EF4               	movlw	244
   789  001E86  6F79               	movwf	delay_ms@value_ms& (0+255),b
   790  001E88  EC4B  F012         	call	_delay_ms	;wreg free
   791                           
   792                           ;newmain.c: 127: PORTAbits.RA1 = 0;
   793  001E8C  9280               	bcf	3968,1,c	;volatile
   794                           
   795                           ;newmain.c: 128: PORTCbits.RC1 = 0;
   796  001E8E  9282               	bcf	3970,1,c	;volatile
   797                           
   798                           ;newmain.c: 129: delay_ms(100);
   799  001E90  0E00               	movlw	0
   800  001E92  0100               	movlb	0	; () banked
   801  001E94  6F7A               	movwf	(delay_ms@value_ms+1)& (0+255),b
   802  001E96  0E64               	movlw	100
   803  001E98  6F79               	movwf	delay_ms@value_ms& (0+255),b
   804  001E9A  EC4B  F012         	call	_delay_ms	;wreg free
   805  001E9E                     l3619:
   806                           
   807                           ;newmain.c: 131: CANsendMessage(0b00000000000000000000000000011, data_array_1, 8, CAN_NO
      +                          RMAL_TX_FRAME & CAN_CONFIG_STD_MSG & CAN_TX_PRIORITY_3);
   808  001E9E  0E03               	movlw	3
   809  001EA0  0100               	movlb	0	; () banked
   810  001EA2  6F73               	movwf	CANsendMessage@identifier& (0+255),b
   811  001EA4  0E00               	movlw	0
   812  001EA6  6F74               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   813  001EA8  0E00               	movlw	0
   814  001EAA  6F75               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   815  001EAC  0E00               	movlw	0
   816  001EAE  6F76               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   817  001EB0  0EBA               	movlw	low _data_array_1
   818  001EB2  0100               	movlb	0	; () banked
   819  001EB4  6F77               	movwf	CANsendMessage@data& (0+255),b
   820  001EB6  0E00               	movlw	high _data_array_1
   821  001EB8  0100               	movlb	0	; () banked
   822  001EBA  6F78               	movwf	(CANsendMessage@data+1)& (0+255),b
   823  001EBC  0E08               	movlw	8
   824  001EBE  0100               	movlb	0	; () banked
   825  001EC0  6F79               	movwf	CANsendMessage@dataLength& (0+255),b
   826  001EC2  0EBF               	movlw	191
   827  001EC4  0100               	movlb	0	; () banked
   828  001EC6  6F7A               	movwf	CANsendMessage@flags& (0+255),b
   829  001EC8  EC3D  F006         	call	_CANsendMessage	;wreg free
   830                           
   831                           ;newmain.c: 132: delay_ms(100);
   832  001ECC  0E00               	movlw	0
   833  001ECE  0100               	movlb	0	; () banked
   834  001ED0  6F7A               	movwf	(delay_ms@value_ms+1)& (0+255),b
   835  001ED2  0E64               	movlw	100
   836  001ED4  6F79               	movwf	delay_ms@value_ms& (0+255),b
   837  001ED6  EC4B  F012         	call	_delay_ms	;wreg free
   838                           
   839                           ;newmain.c: 133: calibrazione();
   840  001EDA  EC09  F012         	call	_calibrazione	;wreg free
   841                           
   842                           ;newmain.c: 134: duty_cycle = currentSteering;
   843  001EDE  5049               	movf	_currentSteering,w,c
   844  001EE0  0100               	movlb	0	; () banked
   845  001EE2  6FA1               	movwf	_duty_cycle& (0+255),b
   846  001EE4  6BA2               	clrf	(_duty_cycle+1)& (0+255),b
   847  001EE6  6BA3               	clrf	(_duty_cycle+2)& (0+255),b
   848  001EE8  6BA4               	clrf	(_duty_cycle+3)& (0+255),b
   849                           
   850                           ; BSR set to: 0
   851                           ;newmain.c: 135: if (PORTCbits.RC0 == 0) {
   852  001EEA  B082               	btfsc	3970,0,c	;volatile
   853  001EEC  D7D8               	goto	l3619
   854                           
   855                           ; BSR set to: 0
   856                           ;newmain.c: 136: timer = (((duty_cycle * 700) / 90) + 800) *2;
   857  001EEE  C0A1  F073         	movff	_duty_cycle,___lmul@multiplier
   858  001EF2  C0A2  F074         	movff	_duty_cycle+1,___lmul@multiplier+1
   859  001EF6  C0A3  F075         	movff	_duty_cycle+2,___lmul@multiplier+2
   860  001EFA  C0A4  F076         	movff	_duty_cycle+3,___lmul@multiplier+3
   861  001EFE  0EBC               	movlw	188
   862  001F00  0100               	movlb	0	; () banked
   863  001F02  6F77               	movwf	___lmul@multiplicand& (0+255),b
   864  001F04  0E02               	movlw	2
   865  001F06  6F78               	movwf	(___lmul@multiplicand+1)& (0+255),b
   866  001F08  0E00               	movlw	0
   867  001F0A  6F79               	movwf	(___lmul@multiplicand+2)& (0+255),b
   868  001F0C  0E00               	movlw	0
   869  001F0E  6F7A               	movwf	(___lmul@multiplicand+3)& (0+255),b
   870  001F10  EC71  F011         	call	___lmul	;wreg free
   871  001F14  C073  F07F         	movff	?___lmul,___lldiv@dividend
   872  001F18  C074  F080         	movff	?___lmul+1,___lldiv@dividend+1
   873  001F1C  C075  F081         	movff	?___lmul+2,___lldiv@dividend+2
   874  001F20  C076  F082         	movff	?___lmul+3,___lldiv@dividend+3
   875  001F24  0E5A               	movlw	90
   876  001F26  0100               	movlb	0	; () banked
   877  001F28  6F83               	movwf	___lldiv@divisor& (0+255),b
   878  001F2A  0E00               	movlw	0
   879  001F2C  6F84               	movwf	(___lldiv@divisor+1)& (0+255),b
   880  001F2E  0E00               	movlw	0
   881  001F30  6F85               	movwf	(___lldiv@divisor+2)& (0+255),b
   882  001F32  0E00               	movlw	0
   883  001F34  6F86               	movwf	(___lldiv@divisor+3)& (0+255),b
   884  001F36  ECFC  F00F         	call	___lldiv	;wreg free
   885  001F3A  90D8               	bcf	status,0,c
   886  001F3C  0100               	movlb	0	; () banked
   887  001F3E  357F               	rlcf	?___lldiv& (0+255),w,b
   888  001F40  0100               	movlb	0	; () banked
   889  001F42  6F8D               	movwf	??_main& (0+255),b
   890  001F44  0100               	movlb	0	; () banked
   891  001F46  3580               	rlcf	(?___lldiv+1)& (0+255),w,b
   892  001F48  0100               	movlb	0	; () banked
   893  001F4A  6F8E               	movwf	(??_main+1)& (0+255),b
   894  001F4C  0100               	movlb	0	; () banked
   895  001F4E  3581               	rlcf	(?___lldiv+2)& (0+255),w,b
   896  001F50  0100               	movlb	0	; () banked
   897  001F52  6F8F               	movwf	(??_main+2)& (0+255),b
   898  001F54  0100               	movlb	0	; () banked
   899  001F56  3582               	rlcf	(?___lldiv+3)& (0+255),w,b
   900  001F58  0100               	movlb	0	; () banked
   901  001F5A  6F90               	movwf	(??_main+3)& (0+255),b
   902  001F5C  0E40               	movlw	64
   903  001F5E  0100               	movlb	0	; () banked
   904  001F60  258D               	addwf	??_main& (0+255),w,b
   905  001F62  0100               	movlb	0	; () banked
   906  001F64  6FA9               	movwf	_timer& (0+255),b
   907  001F66  0E06               	movlw	6
   908  001F68  0100               	movlb	0	; () banked
   909  001F6A  218E               	addwfc	(??_main+1)& (0+255),w,b
   910  001F6C  0100               	movlb	0	; () banked
   911  001F6E  6FAA               	movwf	(_timer+1)& (0+255),b
   912  001F70  0E00               	movlw	0
   913  001F72  0100               	movlb	0	; () banked
   914  001F74  218F               	addwfc	(??_main+2)& (0+255),w,b
   915  001F76  0100               	movlb	0	; () banked
   916  001F78  6FAB               	movwf	(_timer+2)& (0+255),b
   917  001F7A  0E00               	movlw	0
   918  001F7C  0100               	movlb	0	; () banked
   919  001F7E  2190               	addwfc	(??_main+3)& (0+255),w,b
   920  001F80  0100               	movlb	0	; () banked
   921  001F82  6FAC               	movwf	(_timer+3)& (0+255),b
   922                           
   923                           ; BSR set to: 0
   924                           ;newmain.c: 137: Ton = 65536 - timer;
   925  001F84  C0A9  F08D         	movff	_timer,??_main
   926  001F88  C0AA  F08E         	movff	_timer+1,??_main+1
   927  001F8C  0100               	movlb	0	; () banked
   928  001F8E  1F8D               	comf	??_main& (0+255),f,b
   929  001F90  1F8E               	comf	(??_main+1)& (0+255),f,b
   930  001F92  4B8D               	infsnz	??_main& (0+255),f,b
   931  001F94  2B8E               	incf	(??_main+1)& (0+255),f,b
   932  001F96  C08D  F00F         	movff	??_main,_Ton
   933  001F9A  C08E  F010         	movff	??_main+1,_Ton+1
   934                           
   935                           ; BSR set to: 0
   936                           ;newmain.c: 138: Toff = 20000 - (timer / 2);
   937  001F9E  C0A9  F08D         	movff	_timer,??_main
   938  001FA2  C0AA  F08E         	movff	_timer+1,??_main+1
   939  001FA6  C0AB  F08F         	movff	_timer+2,??_main+2
   940  001FAA  C0AC  F090         	movff	_timer+3,??_main+3
   941  001FAE  0100               	movlb	0	; () banked
   942  001FB0  90D8               	bcf	status,0,c
   943  001FB2  3390               	rrcf	(??_main+3)& (0+255),f,b
   944  001FB4  338F               	rrcf	(??_main+2)& (0+255),f,b
   945  001FB6  338E               	rrcf	(??_main+1)& (0+255),f,b
   946  001FB8  338D               	rrcf	??_main& (0+255),f,b
   947  001FBA  0100               	movlb	0	; () banked
   948  001FBC  1F8D               	comf	??_main& (0+255),f,b
   949  001FBE  1F8E               	comf	(??_main+1)& (0+255),f,b
   950  001FC0  4B8D               	infsnz	??_main& (0+255),f,b
   951  001FC2  2B8E               	incf	(??_main+1)& (0+255),f,b
   952  001FC4  0E20               	movlw	32
   953  001FC6  0100               	movlb	0	; () banked
   954  001FC8  258D               	addwf	??_main& (0+255),w,b
   955  001FCA  6E0D               	movwf	_Toff,c
   956  001FCC  0E4E               	movlw	78
   957  001FCE  0100               	movlb	0	; () banked
   958  001FD0  218E               	addwfc	(??_main+1)& (0+255),w,b
   959  001FD2  6E0E               	movwf	_Toff+1,c
   960                           
   961                           ; BSR set to: 0
   962                           ;newmain.c: 139: Toff = (65536 - (Toff * 2));
   963  001FD4  C00D  F08D         	movff	_Toff,??_main
   964  001FD8  C00E  F08E         	movff	_Toff+1,??_main+1
   965  001FDC  90D8               	bcf	status,0,c
   966  001FDE  0100               	movlb	0	; () banked
   967  001FE0  378D               	rlcf	??_main& (0+255),f,b
   968  001FE2  378E               	rlcf	(??_main+1)& (0+255),f,b
   969  001FE4  0100               	movlb	0	; () banked
   970  001FE6  1F8D               	comf	??_main& (0+255),f,b
   971  001FE8  1F8E               	comf	(??_main+1)& (0+255),f,b
   972  001FEA  4B8D               	infsnz	??_main& (0+255),f,b
   973  001FEC  2B8E               	incf	(??_main+1)& (0+255),f,b
   974  001FEE  C08D  F00D         	movff	??_main,_Toff
   975  001FF2  C08E  F00E         	movff	??_main+1,_Toff+1
   976                           
   977                           ; BSR set to: 0
   978                           
   979                           ; BSR set to: 0
   980  001FF6  D753               	goto	l3619
   981  001FF8                     __end_of_main:
   982                           	opt stack 0
   983                           tblptru	equ	0xFF8
   984                           tblptrh	equ	0xFF7
   985                           tblptrl	equ	0xFF6
   986                           tablat	equ	0xFF5
   987                           postinc0	equ	0xFEE
   988                           wreg	equ	0xFE8
   989                           postdec1	equ	0xFE5
   990                           fsr1l	equ	0xFE1
   991                           status	equ	0xFD8
   992                           
   993 ;; *************** function _send_data *****************
   994 ;; Defined at:
   995 ;;		line 157 in file "newmain.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;		None               void
  1002 ;; Registers used:
  1003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1009 ;;      Params:         0       0       0       0
  1010 ;;      Locals:         0       0       0       0
  1011 ;;      Temps:          0       0       0       0
  1012 ;;      Totals:         0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    6
  1016 ;; This function calls:
  1017 ;;		_CANisTxReady
  1018 ;;		_CANsendMessage
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text1
  1025  002458                     __ptext1:
  1026                           	opt stack 0
  1027  002458                     _send_data:
  1028                           	opt stack 24
  1029                           
  1030                           ;newmain.c: 158: if (CANisTxReady()) {
  1031                           
  1032                           ;incstack = 0
  1033  002458  ECB2  F012         	call	_CANisTxReady	;wreg free
  1034  00245C  0900               	iorlw	0
  1035  00245E  B4D8               	btfsc	status,2,c
  1036  002460  0012               	return	
  1037                           
  1038                           ;newmain.c: 159: if (remote_frame == 1) {
  1039  002462  A24B               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1040  002464  D016               	goto	l3481
  1041                           
  1042                           ;newmain.c: 161: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG &
  1043                           ;newmain.c: 162: CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1044  002466  C0A5  F073         	movff	_id,CANsendMessage@identifier
  1045  00246A  C0A6  F074         	movff	_id+1,CANsendMessage@identifier+1
  1046  00246E  C0A7  F075         	movff	_id+2,CANsendMessage@identifier+2
  1047  002472  C0A8  F076         	movff	_id+3,CANsendMessage@identifier+3
  1048  002476  0EB1               	movlw	low _data_array
  1049  002478  0100               	movlb	0	; () banked
  1050  00247A  6F77               	movwf	CANsendMessage@data& (0+255),b
  1051  00247C  0E00               	movlw	high _data_array
  1052  00247E  0100               	movlb	0	; () banked
  1053  002480  6F78               	movwf	(CANsendMessage@data+1)& (0+255),b
  1054  002482  0E08               	movlw	8
  1055  002484  0100               	movlb	0	; () banked
  1056  002486  6F79               	movwf	CANsendMessage@dataLength& (0+255),b
  1057  002488  0EBC               	movlw	188
  1058  00248A  0100               	movlb	0	; () banked
  1059  00248C  6F7A               	movwf	CANsendMessage@flags& (0+255),b
  1060  00248E  EC3D  F006         	call	_CANsendMessage	;wreg free
  1061  002492                     l3481:
  1062                           
  1063                           ;newmain.c: 163: }
  1064                           ;newmain.c: 164: remote_frame = 0;
  1065  002492  924B               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1066  002494  0012               	return	
  1067  002496                     __end_of_send_data:
  1068                           	opt stack 0
  1069                           tblptru	equ	0xFF8
  1070                           tblptrh	equ	0xFF7
  1071                           tblptrl	equ	0xFF6
  1072                           tablat	equ	0xFF5
  1073                           postinc0	equ	0xFEE
  1074                           wreg	equ	0xFE8
  1075                           postdec1	equ	0xFE5
  1076                           fsr1l	equ	0xFE1
  1077                           status	equ	0xFD8
  1078                           
  1079 ;; *************** function _CANsendMessage *****************
  1080 ;; Defined at:
  1081 ;;		line 294 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  identifier      4   19[BANK0 ] unsigned long 
  1084 ;;  data            2   23[BANK0 ] PTR unsigned char 
  1085 ;;		 -> data_array_1(8), data_array(8), 
  1086 ;;  dataLength      1   25[BANK0 ] unsigned char 
  1087 ;;  flags           1   26[BANK0 ] enum E16866
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;  tamp            4   31[BANK0 ] unsigned long 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;		None               void
  1092 ;; Registers used:
  1093 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1099 ;;      Params:         0       8       0       0
  1100 ;;      Locals:         0       4       0       0
  1101 ;;      Temps:          0       4       0       0
  1102 ;;      Totals:         0      16       0       0
  1103 ;;Total ram usage:       16 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    5
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;;		_send_data
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text2
  1115  000C7A                     __ptext2:
  1116                           	opt stack 0
  1117  000C7A                     _CANsendMessage:
  1118                           	opt stack 24
  1119                           
  1120                           ;inc\CANlib.h: 296: unsigned long tamp;
  1121                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1122                           
  1123                           ;incstack = 0
  1124  000C7A  010F               	movlb	15	; () banked
  1125  000C7C  B740               	btfsc	64,3,b	;volatile
  1126  000C7E  D13F               	goto	l355
  1127                           
  1128                           ; BSR set to: 15
  1129                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1130  000C80  C079  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1131                           
  1132                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1133  000C84  0100               	movlb	0	; () banked
  1134  000C86  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1135  000C88  D003               	goto	l356
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1139  000C8A  010F               	movlb	15	; () banked
  1140  000C8C  8D45               	bsf	69,6,b	;volatile
  1141  000C8E  D002               	goto	l357
  1142  000C90                     l356:
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;inc\CANlib.h: 302: else
  1146                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1147  000C90  010F               	movlb	15	; () banked
  1148  000C92  9D45               	bcf	69,6,b	;volatile
  1149  000C94                     l357:
  1150                           
  1151                           ; BSR set to: 15
  1152                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1153  000C94  0100               	movlb	0	; () banked
  1154  000C96  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1155  000C98  D079               	goto	l358
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;inc\CANlib.h: 306: {
  1159                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1160  000C9A  0100               	movlb	0	; () banked
  1161  000C9C  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1162  000C9E  0100               	movlb	0	; () banked
  1163  000CA0  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1164  000CA2  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1165  000CA4  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1166  000CA6  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1170  000CA8  C07F  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1174  000CAC  0E00               	movlw	0
  1175  000CAE  0100               	movlb	0	; () banked
  1176  000CB0  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1177  000CB2  0100               	movlb	0	; () banked
  1178  000CB4  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1179  000CB6  0EFF               	movlw	255
  1180  000CB8  0100               	movlb	0	; () banked
  1181  000CBA  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1182  000CBC  0100               	movlb	0	; () banked
  1183  000CBE  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1184  000CC0  0E00               	movlw	0
  1185  000CC2  0100               	movlb	0	; () banked
  1186  000CC4  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1187  000CC6  0100               	movlb	0	; () banked
  1188  000CC8  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1189  000CCA  0E00               	movlw	0
  1190  000CCC  0100               	movlb	0	; () banked
  1191  000CCE  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1192  000CD0  0100               	movlb	0	; () banked
  1193  000CD2  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1194                           
  1195                           ; BSR set to: 0
  1196                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1197  000CD4  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1198  000CD8  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1199  000CDC  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1200  000CE0  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1201  000CE4  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1202  000CE8  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1203  000CEC  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1204  000CF0  0100               	movlb	0	; () banked
  1205  000CF2  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1206  000CF4  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1207  000CF8  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1208  000CFC  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1209  000D00  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1213  000D04  C07F  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1214                           
  1215                           ; BSR set to: 0
  1216                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1217  000D08  0E00               	movlw	0
  1218  000D0A  010F               	movlb	15	; () banked
  1219  000D0C  6F42               	movwf	66,b	;volatile
  1220                           
  1221                           ; BSR set to: 15
  1222                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1223  000D0E  010F               	movlb	15	; () banked
  1224  000D10  8742               	bsf	66,3,b	;volatile
  1225                           
  1226                           ; BSR set to: 15
  1227                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1228  000D12  0100               	movlb	0	; () banked
  1229  000D14  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1230  000D16  D002               	goto	l359
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1234  000D18  010F               	movlb	15	; () banked
  1235  000D1A  8142               	bsf	66,0,b	;volatile
  1236  000D1C                     l359:
  1237                           
  1238                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1239  000D1C  0100               	movlb	0	; () banked
  1240  000D1E  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1241  000D20  D002               	goto	l360
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1245  000D22  010F               	movlb	15	; () banked
  1246  000D24  8342               	bsf	66,1,b	;volatile
  1247  000D26                     l360:
  1248                           
  1249                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1250  000D26  0100               	movlb	0	; () banked
  1251  000D28  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1252  000D2A  D002               	goto	l361
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1256  000D2C  010F               	movlb	15	; () banked
  1257  000D2E  8B42               	bsf	66,5,b	;volatile
  1258  000D30                     l361:
  1259                           
  1260                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1261  000D30  0100               	movlb	0	; () banked
  1262  000D32  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1263  000D34  D002               	goto	l362
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1267  000D36  010F               	movlb	15	; () banked
  1268  000D38  8D42               	bsf	66,6,b	;volatile
  1269  000D3A                     l362:
  1270                           
  1271                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1272  000D3A  0100               	movlb	0	; () banked
  1273  000D3C  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1274  000D3E  D002               	goto	l2997
  1275                           
  1276                           ; BSR set to: 0
  1277                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1278  000D40  010F               	movlb	15	; () banked
  1279  000D42  8F42               	bsf	66,7,b	;volatile
  1280  000D44                     l2997:
  1281                           
  1282                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1283  000D44  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1284  000D48  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1285  000D4C  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1286  000D50  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1287  000D54  0E16               	movlw	22
  1288  000D56  D006               	goto	u3170
  1289  000D58                     u3175:
  1290  000D58  0100               	movlb	0	; () banked
  1291  000D5A  90D8               	bcf	status,0,c
  1292  000D5C  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1293  000D5E  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1294  000D60  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1295  000D62  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1296  000D64                     u3170:
  1297  000D64  2EE8               	decfsz	wreg,f,c
  1298  000D66  D7F8               	goto	u3175
  1299  000D68  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1300  000D6C  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1301  000D70  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1302  000D74  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1306  000D78  0100               	movlb	0	; () banked
  1307  000D7A  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1308  000D7C  0100               	movlb	0	; () banked
  1309  000D7E  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1310  000D80  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1311  000D82  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1312  000D84  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1316  000D86  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1317                           
  1318                           ;inc\CANlib.h: 332: }
  1319  000D8A  D059               	goto	l3017
  1320  000D8C                     l358:
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;inc\CANlib.h: 334: else
  1324                           ;inc\CANlib.h: 336: {
  1325                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1326  000D8C  010F               	movlb	15	; () banked
  1327  000D8E  9742               	bcf	66,3,b	;volatile
  1328                           
  1329                           ; BSR set to: 15
  1330                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1331  000D90  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1332  000D94  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1333  000D98  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1334  000D9C  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1335  000DA0  0E04               	movlw	4
  1336  000DA2  D006               	goto	u3180
  1337  000DA4                     u3185:
  1338  000DA4  0100               	movlb	0	; () banked
  1339  000DA6  90D8               	bcf	status,0,c
  1340  000DA8  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1341  000DAA  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1342  000DAC  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1343  000DAE  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1344  000DB0                     u3180:
  1345  000DB0  2EE8               	decfsz	wreg,f,c
  1346  000DB2  D7F8               	goto	u3185
  1347  000DB4  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1348  000DB8  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1349  000DBC  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1350  000DC0  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1354  000DC4  0100               	movlb	0	; () banked
  1355  000DC6  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1356  000DC8  0100               	movlb	0	; () banked
  1357  000DCA  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1358  000DCC  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1359  000DCE  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1360  000DD0  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1364  000DD2  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1368  000DD6  0E07               	movlw	7
  1369  000DD8  0100               	movlb	0	; () banked
  1370  000DDA  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1371  000DDC  0100               	movlb	0	; () banked
  1372  000DDE  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1373  000DE0  0E00               	movlw	0
  1374  000DE2  0100               	movlb	0	; () banked
  1375  000DE4  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1376  000DE6  0100               	movlb	0	; () banked
  1377  000DE8  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1378  000DEA  0E00               	movlw	0
  1379  000DEC  0100               	movlb	0	; () banked
  1380  000DEE  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1381  000DF0  0100               	movlb	0	; () banked
  1382  000DF2  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1383  000DF4  0E00               	movlw	0
  1384  000DF6  0100               	movlb	0	; () banked
  1385  000DF8  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1386  000DFA  0100               	movlb	0	; () banked
  1387  000DFC  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1391  000DFE  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1392  000E02  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1393  000E06  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1394  000E0A  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1395  000E0E  0E05               	movlw	5
  1396  000E10                     u3195:
  1397  000E10  90D8               	bcf	status,0,c
  1398  000E12  0100               	movlb	0	; () banked
  1399  000E14  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1400  000E16  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1401  000E18  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1402  000E1A  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1403  000E1C  2EE8               	decfsz	wreg,f,c
  1404  000E1E  D7F8               	goto	u3195
  1405  000E20  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1406  000E24  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1407  000E28  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1408  000E2C  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1412  000E30  010F               	movlb	15	; () banked
  1413  000E32  5142               	movf	66,w,b	;volatile
  1414  000E34  0B1F               	andlw	31
  1415  000E36  010F               	movlb	15	; () banked
  1416  000E38  6F42               	movwf	66,b	;volatile
  1417                           
  1418                           ; BSR set to: 15
  1419                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1420  000E3A  C07F  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1421  000E3E                     l3017:
  1422                           
  1423                           ;inc\CANlib.h: 347: }
  1424                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1425  000E3E  0100               	movlb	0	; () banked
  1426  000E40  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1427  000E42  D003               	goto	l365
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1431  000E44  010F               	movlb	15	; () banked
  1432  000E46  8140               	bsf	64,0,b	;volatile
  1433  000E48  D002               	goto	l366
  1434  000E4A                     l365:
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;inc\CANlib.h: 351: else
  1438                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1439  000E4A  010F               	movlb	15	; () banked
  1440  000E4C  9140               	bcf	64,0,b	;volatile
  1441  000E4E                     l366:
  1442                           
  1443                           ; BSR set to: 15
  1444                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1445  000E4E  0100               	movlb	0	; () banked
  1446  000E50  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1447  000E52  D003               	goto	l367
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1451  000E54  010F               	movlb	15	; () banked
  1452  000E56  8340               	bsf	64,1,b	;volatile
  1453  000E58  D002               	goto	l3023
  1454  000E5A                     l367:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;inc\CANlib.h: 355: else
  1458                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1459  000E5A  010F               	movlb	15	; () banked
  1460  000E5C  9340               	bcf	64,1,b	;volatile
  1461  000E5E                     l3023:
  1462                           
  1463                           ; BSR set to: 15
  1464                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1465  000E5E  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1466  000E62  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1467  000E66  50DF               	movf	indf2,w,c
  1468  000E68  010F               	movlb	15	; () banked
  1469  000E6A  6F46               	movwf	70,b	;volatile
  1470                           
  1471                           ; BSR set to: 15
  1472                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1473  000E6C  0100               	movlb	0	; () banked
  1474  000E6E  EE20 F001          	lfsr	2,1
  1475  000E72  5177               	movf	CANsendMessage@data& (0+255),w,b
  1476  000E74  26D9               	addwf	fsr2l,f,c
  1477  000E76  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1478  000E78  22DA               	addwfc	fsr2h,f,c
  1479  000E7A  50DF               	movf	indf2,w,c
  1480  000E7C  010F               	movlb	15	; () banked
  1481  000E7E  6F47               	movwf	71,b	;volatile
  1482                           
  1483                           ; BSR set to: 15
  1484                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1485  000E80  0100               	movlb	0	; () banked
  1486  000E82  EE20 F002          	lfsr	2,2
  1487  000E86  5177               	movf	CANsendMessage@data& (0+255),w,b
  1488  000E88  26D9               	addwf	fsr2l,f,c
  1489  000E8A  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1490  000E8C  22DA               	addwfc	fsr2h,f,c
  1491  000E8E  50DF               	movf	indf2,w,c
  1492  000E90  010F               	movlb	15	; () banked
  1493  000E92  6F48               	movwf	72,b	;volatile
  1494                           
  1495                           ; BSR set to: 15
  1496                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1497  000E94  0100               	movlb	0	; () banked
  1498  000E96  EE20 F003          	lfsr	2,3
  1499  000E9A  5177               	movf	CANsendMessage@data& (0+255),w,b
  1500  000E9C  26D9               	addwf	fsr2l,f,c
  1501  000E9E  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1502  000EA0  22DA               	addwfc	fsr2h,f,c
  1503  000EA2  50DF               	movf	indf2,w,c
  1504  000EA4  010F               	movlb	15	; () banked
  1505  000EA6  6F49               	movwf	73,b	;volatile
  1506                           
  1507                           ; BSR set to: 15
  1508                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1509  000EA8  0100               	movlb	0	; () banked
  1510  000EAA  EE20 F004          	lfsr	2,4
  1511  000EAE  5177               	movf	CANsendMessage@data& (0+255),w,b
  1512  000EB0  26D9               	addwf	fsr2l,f,c
  1513  000EB2  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1514  000EB4  22DA               	addwfc	fsr2h,f,c
  1515  000EB6  50DF               	movf	indf2,w,c
  1516  000EB8  010F               	movlb	15	; () banked
  1517  000EBA  6F4A               	movwf	74,b	;volatile
  1518                           
  1519                           ; BSR set to: 15
  1520                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1521  000EBC  0100               	movlb	0	; () banked
  1522  000EBE  EE20 F005          	lfsr	2,5
  1523  000EC2  5177               	movf	CANsendMessage@data& (0+255),w,b
  1524  000EC4  26D9               	addwf	fsr2l,f,c
  1525  000EC6  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1526  000EC8  22DA               	addwfc	fsr2h,f,c
  1527  000ECA  50DF               	movf	indf2,w,c
  1528  000ECC  010F               	movlb	15	; () banked
  1529  000ECE  6F4B               	movwf	75,b	;volatile
  1530                           
  1531                           ; BSR set to: 15
  1532                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1533  000ED0  0100               	movlb	0	; () banked
  1534  000ED2  EE20 F006          	lfsr	2,6
  1535  000ED6  5177               	movf	CANsendMessage@data& (0+255),w,b
  1536  000ED8  26D9               	addwf	fsr2l,f,c
  1537  000EDA  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1538  000EDC  22DA               	addwfc	fsr2h,f,c
  1539  000EDE  50DF               	movf	indf2,w,c
  1540  000EE0  010F               	movlb	15	; () banked
  1541  000EE2  6F4C               	movwf	76,b	;volatile
  1542                           
  1543                           ; BSR set to: 15
  1544                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1545  000EE4  0100               	movlb	0	; () banked
  1546  000EE6  EE20 F007          	lfsr	2,7
  1547  000EEA  5177               	movf	CANsendMessage@data& (0+255),w,b
  1548  000EEC  26D9               	addwf	fsr2l,f,c
  1549  000EEE  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1550  000EF0  22DA               	addwfc	fsr2h,f,c
  1551  000EF2  50DF               	movf	indf2,w,c
  1552  000EF4  010F               	movlb	15	; () banked
  1553  000EF6  6F4D               	movwf	77,b	;volatile
  1554                           
  1555                           ; BSR set to: 15
  1556                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1557  000EF8  010F               	movlb	15	; () banked
  1558  000EFA  8740               	bsf	64,3,b	;volatile
  1559                           
  1560                           ; BSR set to: 15
  1561                           ;inc\CANlib.h: 368: return;
  1562  000EFC  0012               	return	
  1563  000EFE                     l355:
  1564                           
  1565                           ; BSR set to: 15
  1566                           ;inc\CANlib.h: 369: }
  1567                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1568  000EFE  010F               	movlb	15	; () banked
  1569  000F00  B730               	btfsc	48,3,b	;volatile
  1570  000F02  D13F               	goto	l370
  1571                           
  1572                           ; BSR set to: 15
  1573                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1574  000F04  C079  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1575                           
  1576                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1577  000F08  0100               	movlb	0	; () banked
  1578  000F0A  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1579  000F0C  D003               	goto	l371
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1583  000F0E  010F               	movlb	15	; () banked
  1584  000F10  8D35               	bsf	53,6,b	;volatile
  1585  000F12  D002               	goto	l372
  1586  000F14                     l371:
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;inc\CANlib.h: 378: else
  1590                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1591  000F14  010F               	movlb	15	; () banked
  1592  000F16  9D35               	bcf	53,6,b	;volatile
  1593  000F18                     l372:
  1594                           
  1595                           ; BSR set to: 15
  1596                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1597  000F18  0100               	movlb	0	; () banked
  1598  000F1A  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1599  000F1C  D079               	goto	l373
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;inc\CANlib.h: 382: {
  1603                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1604  000F1E  0100               	movlb	0	; () banked
  1605  000F20  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1606  000F22  0100               	movlb	0	; () banked
  1607  000F24  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1608  000F26  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1609  000F28  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1610  000F2A  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1614  000F2C  C07F  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1618  000F30  0E00               	movlw	0
  1619  000F32  0100               	movlb	0	; () banked
  1620  000F34  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1621  000F36  0100               	movlb	0	; () banked
  1622  000F38  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1623  000F3A  0EFF               	movlw	255
  1624  000F3C  0100               	movlb	0	; () banked
  1625  000F3E  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1626  000F40  0100               	movlb	0	; () banked
  1627  000F42  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1628  000F44  0E00               	movlw	0
  1629  000F46  0100               	movlb	0	; () banked
  1630  000F48  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1631  000F4A  0100               	movlb	0	; () banked
  1632  000F4C  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1633  000F4E  0E00               	movlw	0
  1634  000F50  0100               	movlb	0	; () banked
  1635  000F52  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1636  000F54  0100               	movlb	0	; () banked
  1637  000F56  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1641  000F58  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1642  000F5C  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1643  000F60  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1644  000F64  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1645  000F68  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1646  000F6C  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1647  000F70  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1648  000F74  0100               	movlb	0	; () banked
  1649  000F76  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1650  000F78  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1651  000F7C  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1652  000F80  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1653  000F84  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1657  000F88  C07F  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  1661  000F8C  0E00               	movlw	0
  1662  000F8E  010F               	movlb	15	; () banked
  1663  000F90  6F32               	movwf	50,b	;volatile
  1664                           
  1665                           ; BSR set to: 15
  1666                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1667  000F92  010F               	movlb	15	; () banked
  1668  000F94  8732               	bsf	50,3,b	;volatile
  1669                           
  1670                           ; BSR set to: 15
  1671                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  1672  000F96  0100               	movlb	0	; () banked
  1673  000F98  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1674  000F9A  D002               	goto	l374
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  1678  000F9C  010F               	movlb	15	; () banked
  1679  000F9E  8132               	bsf	50,0,b	;volatile
  1680  000FA0                     l374:
  1681                           
  1682                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  1683  000FA0  0100               	movlb	0	; () banked
  1684  000FA2  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1685  000FA4  D002               	goto	l375
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  1689  000FA6  010F               	movlb	15	; () banked
  1690  000FA8  8332               	bsf	50,1,b	;volatile
  1691  000FAA                     l375:
  1692                           
  1693                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  1694  000FAA  0100               	movlb	0	; () banked
  1695  000FAC  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1696  000FAE  D002               	goto	l376
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  1700  000FB0  010F               	movlb	15	; () banked
  1701  000FB2  8B32               	bsf	50,5,b	;volatile
  1702  000FB4                     l376:
  1703                           
  1704                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  1705  000FB4  0100               	movlb	0	; () banked
  1706  000FB6  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1707  000FB8  D002               	goto	l377
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  1711  000FBA  010F               	movlb	15	; () banked
  1712  000FBC  8D32               	bsf	50,6,b	;volatile
  1713  000FBE                     l377:
  1714                           
  1715                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  1716  000FBE  0100               	movlb	0	; () banked
  1717  000FC0  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1718  000FC2  D002               	goto	l3073
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  1722  000FC4  010F               	movlb	15	; () banked
  1723  000FC6  8F32               	bsf	50,7,b	;volatile
  1724  000FC8                     l3073:
  1725                           
  1726                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  1727  000FC8  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1728  000FCC  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1729  000FD0  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1730  000FD4  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1731  000FD8  0E16               	movlw	22
  1732  000FDA  D006               	goto	u3300
  1733  000FDC                     u3305:
  1734  000FDC  0100               	movlb	0	; () banked
  1735  000FDE  90D8               	bcf	status,0,c
  1736  000FE0  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1737  000FE2  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1738  000FE4  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1739  000FE6  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1740  000FE8                     u3300:
  1741  000FE8  2EE8               	decfsz	wreg,f,c
  1742  000FEA  D7F8               	goto	u3305
  1743  000FEC  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1744  000FF0  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1745  000FF4  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1746  000FF8  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  1750  000FFC  0100               	movlb	0	; () banked
  1751  000FFE  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1752  001000  0100               	movlb	0	; () banked
  1753  001002  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1754  001004  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1755  001006  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1756  001008  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  1760  00100A  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1761                           
  1762                           ;inc\CANlib.h: 407: }
  1763  00100E  D059               	goto	l3093
  1764  001010                     l373:
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;inc\CANlib.h: 409: else
  1768                           ;inc\CANlib.h: 411: {
  1769                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  1770  001010  010F               	movlb	15	; () banked
  1771  001012  9732               	bcf	50,3,b	;volatile
  1772                           
  1773                           ; BSR set to: 15
  1774                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  1775  001014  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1776  001018  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1777  00101C  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1778  001020  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1779  001024  0E04               	movlw	4
  1780  001026  D006               	goto	u3310
  1781  001028                     u3315:
  1782  001028  0100               	movlb	0	; () banked
  1783  00102A  90D8               	bcf	status,0,c
  1784  00102C  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1785  00102E  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1786  001030  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1787  001032  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1788  001034                     u3310:
  1789  001034  2EE8               	decfsz	wreg,f,c
  1790  001036  D7F8               	goto	u3315
  1791  001038  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1792  00103C  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1793  001040  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1794  001044  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  1798  001048  0100               	movlb	0	; () banked
  1799  00104A  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1800  00104C  0100               	movlb	0	; () banked
  1801  00104E  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1802  001050  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1803  001052  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1804  001054  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  1808  001056  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  1812  00105A  0E07               	movlw	7
  1813  00105C  0100               	movlb	0	; () banked
  1814  00105E  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1815  001060  0100               	movlb	0	; () banked
  1816  001062  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1817  001064  0E00               	movlw	0
  1818  001066  0100               	movlb	0	; () banked
  1819  001068  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1820  00106A  0100               	movlb	0	; () banked
  1821  00106C  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1822  00106E  0E00               	movlw	0
  1823  001070  0100               	movlb	0	; () banked
  1824  001072  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1825  001074  0100               	movlb	0	; () banked
  1826  001076  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1827  001078  0E00               	movlw	0
  1828  00107A  0100               	movlb	0	; () banked
  1829  00107C  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1830  00107E  0100               	movlb	0	; () banked
  1831  001080  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  1835  001082  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1836  001086  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1837  00108A  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1838  00108E  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1839  001092  0E05               	movlw	5
  1840  001094                     u3325:
  1841  001094  90D8               	bcf	status,0,c
  1842  001096  0100               	movlb	0	; () banked
  1843  001098  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1844  00109A  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1845  00109C  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1846  00109E  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1847  0010A0  2EE8               	decfsz	wreg,f,c
  1848  0010A2  D7F8               	goto	u3325
  1849  0010A4  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1850  0010A8  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1851  0010AC  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1852  0010B0  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  1856  0010B4  010F               	movlb	15	; () banked
  1857  0010B6  5132               	movf	50,w,b	;volatile
  1858  0010B8  0B1F               	andlw	31
  1859  0010BA  010F               	movlb	15	; () banked
  1860  0010BC  6F32               	movwf	50,b	;volatile
  1861                           
  1862                           ; BSR set to: 15
  1863                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  1864  0010BE  C07F  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  1865  0010C2                     l3093:
  1866                           
  1867                           ;inc\CANlib.h: 422: }
  1868                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  1869  0010C2  0100               	movlb	0	; () banked
  1870  0010C4  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1871  0010C6  D003               	goto	l380
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  1875  0010C8  010F               	movlb	15	; () banked
  1876  0010CA  8130               	bsf	48,0,b	;volatile
  1877  0010CC  D002               	goto	l381
  1878  0010CE                     l380:
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;inc\CANlib.h: 426: else
  1882                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  1883  0010CE  010F               	movlb	15	; () banked
  1884  0010D0  9130               	bcf	48,0,b	;volatile
  1885  0010D2                     l381:
  1886                           
  1887                           ; BSR set to: 15
  1888                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  1889  0010D2  0100               	movlb	0	; () banked
  1890  0010D4  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1891  0010D6  D003               	goto	l382
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  1895  0010D8  010F               	movlb	15	; () banked
  1896  0010DA  8330               	bsf	48,1,b	;volatile
  1897  0010DC  D002               	goto	l3099
  1898  0010DE                     l382:
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;inc\CANlib.h: 430: else
  1902                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  1903  0010DE  010F               	movlb	15	; () banked
  1904  0010E0  9330               	bcf	48,1,b	;volatile
  1905  0010E2                     l3099:
  1906                           
  1907                           ; BSR set to: 15
  1908                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  1909  0010E2  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1910  0010E6  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1911  0010EA  50DF               	movf	indf2,w,c
  1912  0010EC  010F               	movlb	15	; () banked
  1913  0010EE  6F36               	movwf	54,b	;volatile
  1914                           
  1915                           ; BSR set to: 15
  1916                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  1917  0010F0  0100               	movlb	0	; () banked
  1918  0010F2  EE20 F001          	lfsr	2,1
  1919  0010F6  5177               	movf	CANsendMessage@data& (0+255),w,b
  1920  0010F8  26D9               	addwf	fsr2l,f,c
  1921  0010FA  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1922  0010FC  22DA               	addwfc	fsr2h,f,c
  1923  0010FE  50DF               	movf	indf2,w,c
  1924  001100  010F               	movlb	15	; () banked
  1925  001102  6F37               	movwf	55,b	;volatile
  1926                           
  1927                           ; BSR set to: 15
  1928                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  1929  001104  0100               	movlb	0	; () banked
  1930  001106  EE20 F002          	lfsr	2,2
  1931  00110A  5177               	movf	CANsendMessage@data& (0+255),w,b
  1932  00110C  26D9               	addwf	fsr2l,f,c
  1933  00110E  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1934  001110  22DA               	addwfc	fsr2h,f,c
  1935  001112  50DF               	movf	indf2,w,c
  1936  001114  010F               	movlb	15	; () banked
  1937  001116  6F38               	movwf	56,b	;volatile
  1938                           
  1939                           ; BSR set to: 15
  1940                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  1941  001118  0100               	movlb	0	; () banked
  1942  00111A  EE20 F003          	lfsr	2,3
  1943  00111E  5177               	movf	CANsendMessage@data& (0+255),w,b
  1944  001120  26D9               	addwf	fsr2l,f,c
  1945  001122  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1946  001124  22DA               	addwfc	fsr2h,f,c
  1947  001126  50DF               	movf	indf2,w,c
  1948  001128  010F               	movlb	15	; () banked
  1949  00112A  6F39               	movwf	57,b	;volatile
  1950                           
  1951                           ; BSR set to: 15
  1952                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  1953  00112C  0100               	movlb	0	; () banked
  1954  00112E  EE20 F004          	lfsr	2,4
  1955  001132  5177               	movf	CANsendMessage@data& (0+255),w,b
  1956  001134  26D9               	addwf	fsr2l,f,c
  1957  001136  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1958  001138  22DA               	addwfc	fsr2h,f,c
  1959  00113A  50DF               	movf	indf2,w,c
  1960  00113C  010F               	movlb	15	; () banked
  1961  00113E  6F3A               	movwf	58,b	;volatile
  1962                           
  1963                           ; BSR set to: 15
  1964                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  1965  001140  0100               	movlb	0	; () banked
  1966  001142  EE20 F005          	lfsr	2,5
  1967  001146  5177               	movf	CANsendMessage@data& (0+255),w,b
  1968  001148  26D9               	addwf	fsr2l,f,c
  1969  00114A  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1970  00114C  22DA               	addwfc	fsr2h,f,c
  1971  00114E  50DF               	movf	indf2,w,c
  1972  001150  010F               	movlb	15	; () banked
  1973  001152  6F3B               	movwf	59,b	;volatile
  1974                           
  1975                           ; BSR set to: 15
  1976                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  1977  001154  0100               	movlb	0	; () banked
  1978  001156  EE20 F006          	lfsr	2,6
  1979  00115A  5177               	movf	CANsendMessage@data& (0+255),w,b
  1980  00115C  26D9               	addwf	fsr2l,f,c
  1981  00115E  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1982  001160  22DA               	addwfc	fsr2h,f,c
  1983  001162  50DF               	movf	indf2,w,c
  1984  001164  010F               	movlb	15	; () banked
  1985  001166  6F3C               	movwf	60,b	;volatile
  1986                           
  1987                           ; BSR set to: 15
  1988                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  1989  001168  0100               	movlb	0	; () banked
  1990  00116A  EE20 F007          	lfsr	2,7
  1991  00116E  5177               	movf	CANsendMessage@data& (0+255),w,b
  1992  001170  26D9               	addwf	fsr2l,f,c
  1993  001172  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1994  001174  22DA               	addwfc	fsr2h,f,c
  1995  001176  50DF               	movf	indf2,w,c
  1996  001178  010F               	movlb	15	; () banked
  1997  00117A  6F3D               	movwf	61,b	;volatile
  1998                           
  1999                           ; BSR set to: 15
  2000                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2001  00117C  010F               	movlb	15	; () banked
  2002  00117E  8730               	bsf	48,3,b	;volatile
  2003                           
  2004                           ; BSR set to: 15
  2005                           ;inc\CANlib.h: 444: return;
  2006  001180  0012               	return	
  2007  001182                     l370:
  2008                           
  2009                           ; BSR set to: 15
  2010                           ;inc\CANlib.h: 445: }
  2011                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2012  001182  010F               	movlb	15	; () banked
  2013  001184  B720               	btfsc	32,3,b	;volatile
  2014  001186  0012               	return	
  2015                           
  2016                           ; BSR set to: 15
  2017                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2018  001188  C079  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2019                           
  2020                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2021  00118C  0100               	movlb	0	; () banked
  2022  00118E  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  2023  001190  D003               	goto	l385
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2027  001192  010F               	movlb	15	; () banked
  2028  001194  8D25               	bsf	37,6,b	;volatile
  2029  001196  D002               	goto	l386
  2030  001198                     l385:
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;inc\CANlib.h: 454: else
  2034                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2035  001198  010F               	movlb	15	; () banked
  2036  00119A  9D25               	bcf	37,6,b	;volatile
  2037  00119C                     l386:
  2038                           
  2039                           ; BSR set to: 15
  2040                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2041  00119C  0100               	movlb	0	; () banked
  2042  00119E  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  2043  0011A0  D079               	goto	l387
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;inc\CANlib.h: 458: {
  2047                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2048  0011A2  0100               	movlb	0	; () banked
  2049  0011A4  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  2050  0011A6  0100               	movlb	0	; () banked
  2051  0011A8  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2052  0011AA  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2053  0011AC  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2054  0011AE  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2058  0011B0  C07F  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2062  0011B4  0E00               	movlw	0
  2063  0011B6  0100               	movlb	0	; () banked
  2064  0011B8  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2065  0011BA  0100               	movlb	0	; () banked
  2066  0011BC  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2067  0011BE  0EFF               	movlw	255
  2068  0011C0  0100               	movlb	0	; () banked
  2069  0011C2  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2070  0011C4  0100               	movlb	0	; () banked
  2071  0011C6  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2072  0011C8  0E00               	movlw	0
  2073  0011CA  0100               	movlb	0	; () banked
  2074  0011CC  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2075  0011CE  0100               	movlb	0	; () banked
  2076  0011D0  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2077  0011D2  0E00               	movlw	0
  2078  0011D4  0100               	movlb	0	; () banked
  2079  0011D6  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2080  0011D8  0100               	movlb	0	; () banked
  2081  0011DA  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2085  0011DC  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2086  0011E0  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2087  0011E4  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2088  0011E8  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2089  0011EC  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  2090  0011F0  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2091  0011F4  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2092  0011F8  0100               	movlb	0	; () banked
  2093  0011FA  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  2094  0011FC  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2095  001200  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2096  001204  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2097  001208  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2101  00120C  C07F  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2105  001210  0E00               	movlw	0
  2106  001212  010F               	movlb	15	; () banked
  2107  001214  6F22               	movwf	34,b	;volatile
  2108                           
  2109                           ; BSR set to: 15
  2110                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2111  001216  010F               	movlb	15	; () banked
  2112  001218  8722               	bsf	34,3,b	;volatile
  2113                           
  2114                           ; BSR set to: 15
  2115                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2116  00121A  0100               	movlb	0	; () banked
  2117  00121C  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2118  00121E  D002               	goto	l388
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2122  001220  010F               	movlb	15	; () banked
  2123  001222  8122               	bsf	34,0,b	;volatile
  2124  001224                     l388:
  2125                           
  2126                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2127  001224  0100               	movlb	0	; () banked
  2128  001226  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2129  001228  D002               	goto	l389
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2133  00122A  010F               	movlb	15	; () banked
  2134  00122C  8322               	bsf	34,1,b	;volatile
  2135  00122E                     l389:
  2136                           
  2137                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2138  00122E  0100               	movlb	0	; () banked
  2139  001230  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2140  001232  D002               	goto	l390
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2144  001234  010F               	movlb	15	; () banked
  2145  001236  8B22               	bsf	34,5,b	;volatile
  2146  001238                     l390:
  2147                           
  2148                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2149  001238  0100               	movlb	0	; () banked
  2150  00123A  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2151  00123C  D002               	goto	l391
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2155  00123E  010F               	movlb	15	; () banked
  2156  001240  8D22               	bsf	34,6,b	;volatile
  2157  001242                     l391:
  2158                           
  2159                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2160  001242  0100               	movlb	0	; () banked
  2161  001244  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2162  001246  D002               	goto	l3149
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2166  001248  010F               	movlb	15	; () banked
  2167  00124A  8F22               	bsf	34,7,b	;volatile
  2168  00124C                     l3149:
  2169                           
  2170                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2171  00124C  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2172  001250  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2173  001254  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2174  001258  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2175  00125C  0E16               	movlw	22
  2176  00125E  D006               	goto	u3430
  2177  001260                     u3435:
  2178  001260  0100               	movlb	0	; () banked
  2179  001262  90D8               	bcf	status,0,c
  2180  001264  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2181  001266  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2182  001268  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2183  00126A  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2184  00126C                     u3430:
  2185  00126C  2EE8               	decfsz	wreg,f,c
  2186  00126E  D7F8               	goto	u3435
  2187  001270  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2188  001274  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2189  001278  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2190  00127C  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2194  001280  0100               	movlb	0	; () banked
  2195  001282  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2196  001284  0100               	movlb	0	; () banked
  2197  001286  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2198  001288  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2199  00128A  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2200  00128C  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2204  00128E  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2205                           
  2206                           ;inc\CANlib.h: 483: }
  2207  001292  D059               	goto	l3169
  2208  001294                     l387:
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;inc\CANlib.h: 485: else
  2212                           ;inc\CANlib.h: 487: {
  2213                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2214  001294  010F               	movlb	15	; () banked
  2215  001296  9722               	bcf	34,3,b	;volatile
  2216                           
  2217                           ; BSR set to: 15
  2218                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2219  001298  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2220  00129C  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2221  0012A0  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2222  0012A4  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2223  0012A8  0E04               	movlw	4
  2224  0012AA  D006               	goto	u3440
  2225  0012AC                     u3445:
  2226  0012AC  0100               	movlb	0	; () banked
  2227  0012AE  90D8               	bcf	status,0,c
  2228  0012B0  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2229  0012B2  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2230  0012B4  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2231  0012B6  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2232  0012B8                     u3440:
  2233  0012B8  2EE8               	decfsz	wreg,f,c
  2234  0012BA  D7F8               	goto	u3445
  2235  0012BC  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2236  0012C0  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2237  0012C4  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2238  0012C8  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2242  0012CC  0100               	movlb	0	; () banked
  2243  0012CE  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2244  0012D0  0100               	movlb	0	; () banked
  2245  0012D2  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2246  0012D4  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2247  0012D6  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2248  0012D8  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2252  0012DA  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2256  0012DE  0E07               	movlw	7
  2257  0012E0  0100               	movlb	0	; () banked
  2258  0012E2  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2259  0012E4  0100               	movlb	0	; () banked
  2260  0012E6  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2261  0012E8  0E00               	movlw	0
  2262  0012EA  0100               	movlb	0	; () banked
  2263  0012EC  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2264  0012EE  0100               	movlb	0	; () banked
  2265  0012F0  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2266  0012F2  0E00               	movlw	0
  2267  0012F4  0100               	movlb	0	; () banked
  2268  0012F6  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2269  0012F8  0100               	movlb	0	; () banked
  2270  0012FA  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2271  0012FC  0E00               	movlw	0
  2272  0012FE  0100               	movlb	0	; () banked
  2273  001300  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2274  001302  0100               	movlb	0	; () banked
  2275  001304  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2279  001306  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2280  00130A  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2281  00130E  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2282  001312  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2283  001316  0E05               	movlw	5
  2284  001318                     u3455:
  2285  001318  90D8               	bcf	status,0,c
  2286  00131A  0100               	movlb	0	; () banked
  2287  00131C  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  2288  00131E  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2289  001320  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2290  001322  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2291  001324  2EE8               	decfsz	wreg,f,c
  2292  001326  D7F8               	goto	u3455
  2293  001328  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2294  00132C  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2295  001330  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2296  001334  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2300  001338  010F               	movlb	15	; () banked
  2301  00133A  5122               	movf	34,w,b	;volatile
  2302  00133C  0B1F               	andlw	31
  2303  00133E  010F               	movlb	15	; () banked
  2304  001340  6F22               	movwf	34,b	;volatile
  2305                           
  2306                           ; BSR set to: 15
  2307                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2308  001342  C07F  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2309  001346                     l3169:
  2310                           
  2311                           ;inc\CANlib.h: 498: }
  2312                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2313  001346  0100               	movlb	0	; () banked
  2314  001348  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  2315  00134A  D003               	goto	l394
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2319  00134C  010F               	movlb	15	; () banked
  2320  00134E  8120               	bsf	32,0,b	;volatile
  2321  001350  D002               	goto	l395
  2322  001352                     l394:
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;inc\CANlib.h: 502: else
  2326                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2327  001352  010F               	movlb	15	; () banked
  2328  001354  9120               	bcf	32,0,b	;volatile
  2329  001356                     l395:
  2330                           
  2331                           ; BSR set to: 15
  2332                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2333  001356  0100               	movlb	0	; () banked
  2334  001358  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  2335  00135A  D003               	goto	l396
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2339  00135C  010F               	movlb	15	; () banked
  2340  00135E  8320               	bsf	32,1,b	;volatile
  2341  001360  D002               	goto	l3175
  2342  001362                     l396:
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;inc\CANlib.h: 506: else
  2346                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2347  001362  010F               	movlb	15	; () banked
  2348  001364  9320               	bcf	32,1,b	;volatile
  2349  001366                     l3175:
  2350                           
  2351                           ; BSR set to: 15
  2352                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2353  001366  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  2354  00136A  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2355  00136E  50DF               	movf	indf2,w,c
  2356  001370  010F               	movlb	15	; () banked
  2357  001372  6F26               	movwf	38,b	;volatile
  2358                           
  2359                           ; BSR set to: 15
  2360                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2361  001374  0100               	movlb	0	; () banked
  2362  001376  EE20 F001          	lfsr	2,1
  2363  00137A  5177               	movf	CANsendMessage@data& (0+255),w,b
  2364  00137C  26D9               	addwf	fsr2l,f,c
  2365  00137E  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2366  001380  22DA               	addwfc	fsr2h,f,c
  2367  001382  50DF               	movf	indf2,w,c
  2368  001384  010F               	movlb	15	; () banked
  2369  001386  6F27               	movwf	39,b	;volatile
  2370                           
  2371                           ; BSR set to: 15
  2372                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2373  001388  0100               	movlb	0	; () banked
  2374  00138A  EE20 F002          	lfsr	2,2
  2375  00138E  5177               	movf	CANsendMessage@data& (0+255),w,b
  2376  001390  26D9               	addwf	fsr2l,f,c
  2377  001392  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2378  001394  22DA               	addwfc	fsr2h,f,c
  2379  001396  50DF               	movf	indf2,w,c
  2380  001398  010F               	movlb	15	; () banked
  2381  00139A  6F28               	movwf	40,b	;volatile
  2382                           
  2383                           ; BSR set to: 15
  2384                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2385  00139C  0100               	movlb	0	; () banked
  2386  00139E  EE20 F003          	lfsr	2,3
  2387  0013A2  5177               	movf	CANsendMessage@data& (0+255),w,b
  2388  0013A4  26D9               	addwf	fsr2l,f,c
  2389  0013A6  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2390  0013A8  22DA               	addwfc	fsr2h,f,c
  2391  0013AA  50DF               	movf	indf2,w,c
  2392  0013AC  010F               	movlb	15	; () banked
  2393  0013AE  6F29               	movwf	41,b	;volatile
  2394                           
  2395                           ; BSR set to: 15
  2396                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2397  0013B0  0100               	movlb	0	; () banked
  2398  0013B2  EE20 F004          	lfsr	2,4
  2399  0013B6  5177               	movf	CANsendMessage@data& (0+255),w,b
  2400  0013B8  26D9               	addwf	fsr2l,f,c
  2401  0013BA  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2402  0013BC  22DA               	addwfc	fsr2h,f,c
  2403  0013BE  50DF               	movf	indf2,w,c
  2404  0013C0  010F               	movlb	15	; () banked
  2405  0013C2  6F2A               	movwf	42,b	;volatile
  2406                           
  2407                           ; BSR set to: 15
  2408                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2409  0013C4  0100               	movlb	0	; () banked
  2410  0013C6  EE20 F005          	lfsr	2,5
  2411  0013CA  5177               	movf	CANsendMessage@data& (0+255),w,b
  2412  0013CC  26D9               	addwf	fsr2l,f,c
  2413  0013CE  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2414  0013D0  22DA               	addwfc	fsr2h,f,c
  2415  0013D2  50DF               	movf	indf2,w,c
  2416  0013D4  010F               	movlb	15	; () banked
  2417  0013D6  6F2B               	movwf	43,b	;volatile
  2418                           
  2419                           ; BSR set to: 15
  2420                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2421  0013D8  0100               	movlb	0	; () banked
  2422  0013DA  EE20 F006          	lfsr	2,6
  2423  0013DE  5177               	movf	CANsendMessage@data& (0+255),w,b
  2424  0013E0  26D9               	addwf	fsr2l,f,c
  2425  0013E2  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2426  0013E4  22DA               	addwfc	fsr2h,f,c
  2427  0013E6  50DF               	movf	indf2,w,c
  2428  0013E8  010F               	movlb	15	; () banked
  2429  0013EA  6F2C               	movwf	44,b	;volatile
  2430                           
  2431                           ; BSR set to: 15
  2432                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2433  0013EC  0100               	movlb	0	; () banked
  2434  0013EE  EE20 F007          	lfsr	2,7
  2435  0013F2  5177               	movf	CANsendMessage@data& (0+255),w,b
  2436  0013F4  26D9               	addwf	fsr2l,f,c
  2437  0013F6  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2438  0013F8  22DA               	addwfc	fsr2h,f,c
  2439  0013FA  50DF               	movf	indf2,w,c
  2440  0013FC  010F               	movlb	15	; () banked
  2441  0013FE  6F2D               	movwf	45,b	;volatile
  2442                           
  2443                           ; BSR set to: 15
  2444                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2445  001400  010F               	movlb	15	; () banked
  2446  001402  8720               	bsf	32,3,b	;volatile
  2447                           
  2448                           ; BSR set to: 15
  2449                           ;inc\CANlib.h: 520: return;
  2450  001404  0012               	return	
  2451  001406                     __end_of_CANsendMessage:
  2452                           	opt stack 0
  2453                           tblptru	equ	0xFF8
  2454                           tblptrh	equ	0xFF7
  2455                           tblptrl	equ	0xFF6
  2456                           tablat	equ	0xFF5
  2457                           postinc0	equ	0xFEE
  2458                           wreg	equ	0xFE8
  2459                           postdec1	equ	0xFE5
  2460                           fsr1l	equ	0xFE1
  2461                           indf2	equ	0xFDF
  2462                           fsr2h	equ	0xFDA
  2463                           fsr2l	equ	0xFD9
  2464                           status	equ	0xFD8
  2465                           
  2466 ;; *************** function _CANisTxReady *****************
  2467 ;; Defined at:
  2468 ;;		line 1154 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;		None
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      unsigned char 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2482 ;;      Params:         0       0       0       0
  2483 ;;      Locals:         0       1       0       0
  2484 ;;      Temps:          0       0       0       0
  2485 ;;      Totals:         0       1       0       0
  2486 ;;Total ram usage:        1 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    5
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_send_data
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text3
  2497  002564                     __ptext3:
  2498                           	opt stack 0
  2499  002564                     _CANisTxReady:
  2500                           	opt stack 24
  2501                           
  2502                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2503                           
  2504                           ; BSR set to: 15
  2505                           ;incstack = 0
  2506  002564  0E01               	movlw	1
  2507  002566  0100               	movlb	0	; () banked
  2508  002568  6F73               	movwf	_CANisTxReady$2907& (0+255),b
  2509                           
  2510                           ; BSR set to: 0
  2511  00256A  010F               	movlb	15	; () banked
  2512  00256C  A740               	btfss	64,3,b	;volatile
  2513  00256E  D009               	goto	l548
  2514                           
  2515                           ; BSR set to: 15
  2516  002570  010F               	movlb	15	; () banked
  2517  002572  A730               	btfss	48,3,b	;volatile
  2518  002574  D006               	goto	l548
  2519                           
  2520                           ; BSR set to: 15
  2521  002576  010F               	movlb	15	; () banked
  2522  002578  A720               	btfss	32,3,b	;volatile
  2523  00257A  D003               	goto	l548
  2524                           
  2525                           ; BSR set to: 15
  2526  00257C  0E00               	movlw	0
  2527  00257E  0100               	movlb	0	; () banked
  2528  002580  6F73               	movwf	_CANisTxReady$2907& (0+255),b
  2529  002582                     l548:
  2530  002582  0100               	movlb	0	; () banked
  2531  002584  5173               	movf	_CANisTxReady$2907& (0+255),w,b
  2532  002586  0012               	return	
  2533  002588                     __end_of_CANisTxReady:
  2534                           	opt stack 0
  2535                           tblptru	equ	0xFF8
  2536                           tblptrh	equ	0xFF7
  2537                           tblptrl	equ	0xFF6
  2538                           tablat	equ	0xFF5
  2539                           postinc0	equ	0xFEE
  2540                           wreg	equ	0xFE8
  2541                           postdec1	equ	0xFE5
  2542                           fsr1l	equ	0xFE1
  2543                           indf2	equ	0xFDF
  2544                           fsr2h	equ	0xFDA
  2545                           fsr2l	equ	0xFD9
  2546                           status	equ	0xFD8
  2547                           
  2548 ;; *************** function _delay_ms *****************
  2549 ;; Defined at:
  2550 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  value_ms        2   25[BANK0 ] unsigned int 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;		None               void
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2564 ;;      Params:         0       2       0       0
  2565 ;;      Locals:         0       0       0       0
  2566 ;;      Temps:          0       0       0       0
  2567 ;;      Totals:         0       2       0       0
  2568 ;;Total ram usage:        2 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:    6
  2571 ;; This function calls:
  2572 ;;		___wmul
  2573 ;; This function is called by:
  2574 ;;		_main
  2575 ;;		_delay_s
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text4
  2580  002496                     __ptext4:
  2581                           	opt stack 0
  2582  002496                     _delay_ms:
  2583                           	opt stack 24
  2584                           
  2585                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  2586                           
  2587                           ; BSR set to: 0
  2588                           ;incstack = 0
  2589  002496  C0B9  F073         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  2590  00249A  0100               	movlb	0	; () banked
  2591  00249C  6B74               	clrf	(___wmul@multiplier+1)& (0+255),b
  2592  00249E  C079  F075         	movff	delay_ms@value_ms,___wmul@multiplicand
  2593  0024A2  C07A  F076         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  2594  0024A6  EC84  F012         	call	___wmul	;wreg free
  2595  0024AA  C073  F0AF         	movff	?___wmul,_clock_counter_reference	;volatile
  2596  0024AE  C074  F0B0         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  2597                           
  2598                           ;src\delay.c: 75: while (clock_counter_reference) {
  2599  0024B2  D007               	goto	l561
  2600  0024B4                     l3419:
  2601                           
  2602                           ;src\delay.c: 85: _delay(240);
  2603  0024B4  0E50               	movlw	80
  2604  0024B6                     u4197:
  2605  0024B6  2EE8               	decfsz	wreg,f,c
  2606  0024B8  D7FE               	goto	u4197
  2607                           
  2608                           ;src\delay.c: 88: clock_counter_reference--;
  2609  0024BA  0100               	movlb	0	; () banked
  2610  0024BC  07AF               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  2611  0024BE  A0D8               	btfss	status,0,c
  2612  0024C0  07B0               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  2613  0024C2                     l561:
  2614  0024C2  0100               	movlb	0	; () banked
  2615  0024C4  51AF               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  2616  0024C6  0100               	movlb	0	; () banked
  2617  0024C8  11B0               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  2618  0024CA  B4D8               	btfsc	status,2,c
  2619  0024CC  0012               	return	
  2620  0024CE  D7F2               	goto	l3419
  2621  0024D0                     __end_of_delay_ms:
  2622                           	opt stack 0
  2623                           tblptru	equ	0xFF8
  2624                           tblptrh	equ	0xFF7
  2625                           tblptrl	equ	0xFF6
  2626                           tablat	equ	0xFF5
  2627                           postinc0	equ	0xFEE
  2628                           wreg	equ	0xFE8
  2629                           postdec1	equ	0xFE5
  2630                           fsr1l	equ	0xFE1
  2631                           indf2	equ	0xFDF
  2632                           fsr2h	equ	0xFDA
  2633                           fsr2l	equ	0xFD9
  2634                           status	equ	0xFD8
  2635                           
  2636 ;; *************** function ___wmul *****************
  2637 ;; Defined at:
  2638 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  multiplier      2   19[BANK0 ] unsigned int 
  2641 ;;  multiplicand    2   21[BANK0 ] unsigned int 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  product         2   23[BANK0 ] unsigned int 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  2   19[BANK0 ] unsigned int 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0, prodl, prodh
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2653 ;;      Params:         0       4       0       0
  2654 ;;      Locals:         0       2       0       0
  2655 ;;      Temps:          0       0       0       0
  2656 ;;      Totals:         0       6       0       0
  2657 ;;Total ram usage:        6 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; Hardware stack levels required when called:    5
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_delay_ms
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text5
  2668  002508                     __ptext5:
  2669                           	opt stack 0
  2670  002508                     ___wmul:
  2671                           	opt stack 24
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;incstack = 0
  2675  002508  0100               	movlb	0	; () banked
  2676  00250A  5173               	movf	___wmul@multiplier& (0+255),w,b
  2677  00250C  0100               	movlb	0	; () banked
  2678  00250E  0375               	mulwf	___wmul@multiplicand& (0+255),b
  2679  002510  CFF3 F077          	movff	prodl,___wmul@product
  2680  002514  CFF4 F078          	movff	prodh,___wmul@product+1
  2681  002518  0100               	movlb	0	; () banked
  2682  00251A  5173               	movf	___wmul@multiplier& (0+255),w,b
  2683  00251C  0100               	movlb	0	; () banked
  2684  00251E  0376               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2685  002520  50F3               	movf	prodl,w,c
  2686  002522  0100               	movlb	0	; () banked
  2687  002524  2778               	addwf	(___wmul@product+1)& (0+255),f,b
  2688  002526  0100               	movlb	0	; () banked
  2689  002528  5174               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2690  00252A  0100               	movlb	0	; () banked
  2691  00252C  0375               	mulwf	___wmul@multiplicand& (0+255),b
  2692  00252E  50F3               	movf	prodl,w,c
  2693  002530  0100               	movlb	0	; () banked
  2694  002532  2778               	addwf	(___wmul@product+1)& (0+255),f,b
  2695                           
  2696                           ; BSR set to: 0
  2697  002534  C077  F073         	movff	___wmul@product,?___wmul
  2698  002538  C078  F074         	movff	___wmul@product+1,?___wmul+1
  2699  00253C  0012               	return	
  2700  00253E                     __end_of___wmul:
  2701                           	opt stack 0
  2702                           tblptru	equ	0xFF8
  2703                           tblptrh	equ	0xFF7
  2704                           tblptrl	equ	0xFF6
  2705                           tablat	equ	0xFF5
  2706                           prodh	equ	0xFF4
  2707                           prodl	equ	0xFF3
  2708                           postinc0	equ	0xFEE
  2709                           wreg	equ	0xFE8
  2710                           postdec1	equ	0xFE5
  2711                           fsr1l	equ	0xFE1
  2712                           indf2	equ	0xFDF
  2713                           fsr2h	equ	0xFDA
  2714                           fsr2l	equ	0xFD9
  2715                           status	equ	0xFD8
  2716                           
  2717 ;; *************** function _configurazione_iniziale *****************
  2718 ;; Defined at:
  2719 ;;		line 183 in file "newmain.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;		None               void
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2733 ;;      Params:         0       0       0       0
  2734 ;;      Locals:         0       0       0       0
  2735 ;;      Temps:          0       0       0       0
  2736 ;;      Totals:         0       0       0       0
  2737 ;;Total ram usage:        0 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    7
  2740 ;; This function calls:
  2741 ;;		_CANInitialize
  2742 ;;		_OpenADC
  2743 ;; This function is called by:
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text6
  2749  00216A                     __ptext6:
  2750                           	opt stack 0
  2751  00216A                     _configurazione_iniziale:
  2752                           	opt stack 23
  2753                           
  2754                           ;newmain.c: 188: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SA
      +                          MPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;incstack = 0
  2758  00216A  0E06               	movlw	6
  2759  00216C  0100               	movlb	0	; () banked
  2760  00216E  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2761  002170  0E05               	movlw	5
  2762  002172  0100               	movlb	0	; () banked
  2763  002174  6F82               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2764  002176  0E01               	movlw	1
  2765  002178  0100               	movlb	0	; () banked
  2766  00217A  6F83               	movwf	CANInitialize@SJW& (0+255),b
  2767  00217C  0E03               	movlw	3
  2768  00217E  0100               	movlb	0	; () banked
  2769  002180  6F84               	movwf	CANInitialize@BRP& (0+255),b
  2770  002182  0E9D               	movlw	157
  2771  002184  0100               	movlb	0	; () banked
  2772  002186  6F85               	movwf	CANInitialize@flags& (0+255),b
  2773  002188  0E04               	movlw	4
  2774  00218A  EC58  F00E         	call	_CANInitialize
  2775                           
  2776                           ;newmain.c: 193: PIR3bits.RXB1IF = 0;
  2777  00218E  92A4               	bcf	4004,1,c	;volatile
  2778                           
  2779                           ;newmain.c: 194: PIR3bits.RXB0IF = 0;
  2780  002190  90A4               	bcf	4004,0,c	;volatile
  2781                           
  2782                           ;newmain.c: 195: INTCONbits.TMR0IF = 0;
  2783  002192  94F2               	bcf	intcon,2,c	;volatile
  2784                           
  2785                           ;newmain.c: 196: PIR2bits.TMR3IF = 0;
  2786  002194  92A1               	bcf	4001,1,c	;volatile
  2787                           
  2788                           ;newmain.c: 201: IPR3bits.RXB1IP = 0;
  2789  002196  92A5               	bcf	4005,1,c	;volatile
  2790                           
  2791                           ;newmain.c: 202: IPR3bits.RXB0IP = 0;
  2792  002198  90A5               	bcf	4005,0,c	;volatile
  2793                           
  2794                           ;newmain.c: 203: INTCON2bits.TMR0IP = 1;
  2795  00219A  84F1               	bsf	intcon2,2,c	;volatile
  2796                           
  2797                           ;newmain.c: 204: IPR2bits.TMR3IP = 0;
  2798  00219C  92A2               	bcf	4002,1,c	;volatile
  2799                           
  2800                           ;newmain.c: 209: RCONbits.IPEN = 1;
  2801  00219E  8ED0               	bsf	4048,7,c	;volatile
  2802                           
  2803                           ;newmain.c: 210: PIE3bits.RXB1IE = 1;
  2804  0021A0  82A3               	bsf	4003,1,c	;volatile
  2805                           
  2806                           ;newmain.c: 211: PIE3bits.RXB0IE = 1;
  2807  0021A2  80A3               	bsf	4003,0,c	;volatile
  2808                           
  2809                           ;newmain.c: 212: INTCONbits.TMR0IE = 1;
  2810  0021A4  8AF2               	bsf	intcon,5,c	;volatile
  2811                           
  2812                           ;newmain.c: 213: PIE2bits.TMR3IE = 1;
  2813  0021A6  82A0               	bsf	4000,1,c	;volatile
  2814                           
  2815                           ;newmain.c: 214: INTCONbits.GIEH = 1;
  2816  0021A8  8EF2               	bsf	intcon,7,c	;volatile
  2817                           
  2818                           ;newmain.c: 215: INTCONbits.GIEL = 1;
  2819  0021AA  8CF2               	bsf	intcon,6,c	;volatile
  2820                           
  2821                           ;newmain.c: 220: T0CON = 0x80;
  2822  0021AC  0E80               	movlw	128
  2823  0021AE  6ED5               	movwf	4053,c	;volatile
  2824                           
  2825                           ;newmain.c: 222: OpenADC(0b01010000 & 0b10000000 & 0b00001100, 0b00001000 & 0b00000000 &
      +                           0b00000000, 0b00001101);
  2826  0021B0  0E00               	movlw	0
  2827  0021B2  0100               	movlb	0	; () banked
  2828  0021B4  6F73               	movwf	OpenADC@config2& (0+255),b
  2829  0021B6  0E0D               	movlw	13
  2830  0021B8  0100               	movlb	0	; () banked
  2831  0021BA  6F74               	movwf	OpenADC@portconfig& (0+255),b
  2832  0021BC  0E00               	movlw	0
  2833  0021BE  ECF7  F010         	call	_OpenADC
  2834                           
  2835                           ;newmain.c: 233: T0CONbits.TMR0ON = 1;
  2836  0021C2  8ED5               	bsf	4053,7,c	;volatile
  2837                           
  2838                           ;newmain.c: 235: PORTCbits.RC0 = 0;
  2839  0021C4  9082               	bcf	3970,0,c	;volatile
  2840                           
  2841                           ;newmain.c: 239: LATA = 0x00;
  2842  0021C6  0E00               	movlw	0
  2843  0021C8  6E89               	movwf	3977,c	;volatile
  2844                           
  2845                           ;newmain.c: 240: TRISA = 0b11111100;
  2846  0021CA  0EFC               	movlw	252
  2847  0021CC  6E92               	movwf	3986,c	;volatile
  2848                           
  2849                           ;newmain.c: 242: LATB = 0x00;
  2850  0021CE  0E00               	movlw	0
  2851  0021D0  6E8A               	movwf	3978,c	;volatile
  2852                           
  2853                           ;newmain.c: 243: TRISB = 0b11111011;
  2854  0021D2  0EFB               	movlw	251
  2855  0021D4  6E93               	movwf	3987,c	;volatile
  2856                           
  2857                           ;newmain.c: 245: LATC = 0x00;
  2858  0021D6  0E00               	movlw	0
  2859  0021D8  6E8B               	movwf	3979,c	;volatile
  2860                           
  2861                           ;newmain.c: 246: TRISC = 0x00;
  2862  0021DA  0E00               	movlw	0
  2863  0021DC  6E94               	movwf	3988,c	;volatile
  2864                           
  2865                           ;newmain.c: 248: LATD = 0x00;
  2866  0021DE  0E00               	movlw	0
  2867  0021E0  6E8C               	movwf	3980,c	;volatile
  2868                           
  2869                           ;newmain.c: 249: TRISD = 0x00;
  2870  0021E2  0E00               	movlw	0
  2871  0021E4  6E95               	movwf	3989,c	;volatile
  2872                           
  2873                           ;newmain.c: 251: LATE = 0x00;
  2874  0021E6  0E00               	movlw	0
  2875  0021E8  6E8D               	movwf	3981,c	;volatile
  2876                           
  2877                           ;newmain.c: 252: TRISE = 0xFF;
  2878  0021EA  6896               	setf	3990,c	;volatile
  2879  0021EC  0012               	return		;funcret
  2880  0021EE                     __end_of_configurazione_iniziale:
  2881                           	opt stack 0
  2882                           tblptru	equ	0xFF8
  2883                           tblptrh	equ	0xFF7
  2884                           tblptrl	equ	0xFF6
  2885                           tablat	equ	0xFF5
  2886                           prodh	equ	0xFF4
  2887                           prodl	equ	0xFF3
  2888                           intcon	equ	0xFF2
  2889                           intcon2	equ	0xFF1
  2890                           postinc0	equ	0xFEE
  2891                           wreg	equ	0xFE8
  2892                           postdec1	equ	0xFE5
  2893                           fsr1l	equ	0xFE1
  2894                           indf2	equ	0xFDF
  2895                           fsr2h	equ	0xFDA
  2896                           fsr2l	equ	0xFD9
  2897                           status	equ	0xFD8
  2898                           
  2899 ;; *************** function _OpenADC *****************
  2900 ;; Defined at:
  2901 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcopen.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  config          1    wreg     unsigned char 
  2904 ;;  config2         1   19[BANK0 ] unsigned char 
  2905 ;;  portconfig      1   20[BANK0 ] unsigned char 
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  config          1   23[BANK0 ] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;		None               void
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2917 ;;      Params:         0       2       0       0
  2918 ;;      Locals:         0       1       0       0
  2919 ;;      Temps:          0       2       0       0
  2920 ;;      Totals:         0       5       0       0
  2921 ;;Total ram usage:        5 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    5
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_configurazione_iniziale
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text7
  2932  0021EE                     __ptext7:
  2933                           	opt stack 0
  2934  0021EE                     _OpenADC:
  2935                           	opt stack 24
  2936                           
  2937                           ;incstack = 0
  2938                           ;OpenADC@config stored from wreg
  2939  0021EE  0100               	movlb	0	; () banked
  2940  0021F0  6F77               	movwf	OpenADC@config& (0+255),b
  2941  0021F2  0E00               	movlw	0
  2942  0021F4  6EC2               	movwf	4034,c	;volatile
  2943  0021F6  0E00               	movlw	0
  2944  0021F8  6EC0               	movwf	4032,c	;volatile
  2945  0021FA  0100               	movlb	0	; () banked
  2946  0021FC  90D8               	bcf	status,0,c
  2947  0021FE  3173               	rrcf	OpenADC@config2& (0+255),w,b
  2948  002200  0B3C               	andlw	60
  2949  002202  6EC2               	movwf	4034,c	;volatile
  2950                           
  2951                           ; BSR set to: 0
  2952  002204  C073  F075         	movff	OpenADC@config2,??_OpenADC
  2953  002208  0100               	movlb	0	; () banked
  2954  00220A  3B75               	swapf	??_OpenADC& (0+255),f,b
  2955  00220C  0EF0               	movlw	240
  2956  00220E  1775               	andwf	??_OpenADC& (0+255),f,b
  2957  002210  0E30               	movlw	48
  2958  002212  0100               	movlb	0	; () banked
  2959  002214  1775               	andwf	??_OpenADC& (0+255),f,b
  2960  002216  0100               	movlb	0	; () banked
  2961  002218  5174               	movf	OpenADC@portconfig& (0+255),w,b
  2962  00221A  0B0F               	andlw	15
  2963  00221C  0100               	movlb	0	; () banked
  2964  00221E  1175               	iorwf	??_OpenADC& (0+255),w,b
  2965  002220  6EC1               	movwf	4033,c	;volatile
  2966                           
  2967                           ; BSR set to: 0
  2968  002222  C077  F075         	movff	OpenADC@config,??_OpenADC
  2969  002226  0100               	movlb	0	; () banked
  2970  002228  90D8               	bcf	status,0,c
  2971  00222A  3775               	rlcf	??_OpenADC& (0+255),f,b
  2972  00222C  0100               	movlb	0	; () banked
  2973  00222E  90D8               	bcf	status,0,c
  2974  002230  3775               	rlcf	??_OpenADC& (0+255),f,b
  2975  002232  0E38               	movlw	56
  2976  002234  0100               	movlb	0	; () banked
  2977  002236  1775               	andwf	??_OpenADC& (0+255),f,b
  2978  002238  C077  F076         	movff	OpenADC@config,??_OpenADC+1
  2979  00223C  0100               	movlb	0	; () banked
  2980  00223E  3B76               	swapf	(??_OpenADC+1)& (0+255),f,b
  2981  002240  0E0F               	movlw	15
  2982  002242  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  2983  002244  0E07               	movlw	7
  2984  002246  0100               	movlb	0	; () banked
  2985  002248  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  2986  00224A  0100               	movlb	0	; () banked
  2987  00224C  5177               	movf	OpenADC@config& (0+255),w,b
  2988  00224E  0B80               	andlw	128
  2989  002250  0100               	movlb	0	; () banked
  2990  002252  1176               	iorwf	(??_OpenADC+1)& (0+255),w,b
  2991  002254  0100               	movlb	0	; () banked
  2992  002256  1175               	iorwf	??_OpenADC& (0+255),w,b
  2993  002258  6EC0               	movwf	4032,c	;volatile
  2994                           
  2995                           ; BSR set to: 0
  2996  00225A  0100               	movlb	0	; () banked
  2997  00225C  AF73               	btfss	OpenADC@config2& (0+255),7,b
  2998  00225E  D003               	goto	l688
  2999                           
  3000                           ; BSR set to: 0
  3001  002260  9C9E               	bcf	3998,6,c	;volatile
  3002  002262  8C9D               	bsf	3997,6,c	;volatile
  3003  002264  8CF2               	bsf	intcon,6,c	;volatile
  3004  002266                     l688:
  3005                           
  3006                           ; BSR set to: 0
  3007  002266  80C2               	bsf	4034,0,c	;volatile
  3008                           
  3009                           ; BSR set to: 0
  3010  002268  0012               	return		;funcret
  3011  00226A                     __end_of_OpenADC:
  3012                           	opt stack 0
  3013                           tblptru	equ	0xFF8
  3014                           tblptrh	equ	0xFF7
  3015                           tblptrl	equ	0xFF6
  3016                           tablat	equ	0xFF5
  3017                           prodh	equ	0xFF4
  3018                           prodl	equ	0xFF3
  3019                           intcon	equ	0xFF2
  3020                           intcon2	equ	0xFF1
  3021                           postinc0	equ	0xFEE
  3022                           wreg	equ	0xFE8
  3023                           postdec1	equ	0xFE5
  3024                           fsr1l	equ	0xFE1
  3025                           indf2	equ	0xFDF
  3026                           fsr2h	equ	0xFDA
  3027                           fsr2l	equ	0xFD9
  3028                           status	equ	0xFD8
  3029                           
  3030 ;; *************** function _CANInitialize *****************
  3031 ;; Defined at:
  3032 ;;		line 218 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  propSeg         1    wreg     unsigned char 
  3035 ;;  phaseSeg1       1   33[BANK0 ] unsigned char 
  3036 ;;  phaseSeg2       1   34[BANK0 ] unsigned char 
  3037 ;;  SJW             1   35[BANK0 ] unsigned char 
  3038 ;;  BRP             1   36[BANK0 ] unsigned char 
  3039 ;;  flags           1   37[BANK0 ] enum E16844
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  propSeg         1   42[BANK0 ] unsigned char 
  3042 ;;  FilterConfig    1   44[BANK0 ] unsigned char 
  3043 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;		None               void
  3046 ;; Registers used:
  3047 ;;		wreg, status,2, status,0, cstack
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3053 ;;      Params:         0       5       0       0
  3054 ;;      Locals:         0       3       0       0
  3055 ;;      Temps:          0       4       0       0
  3056 ;;      Totals:         0      12       0       0
  3057 ;;Total ram usage:       12 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; Hardware stack levels required when called:    6
  3060 ;; This function calls:
  3061 ;;		_CANOperationMode
  3062 ;;		_CANSetFilter
  3063 ;;		_CANSetMask
  3064 ;; This function is called by:
  3065 ;;		_configurazione_iniziale
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text8
  3070  001CB0                     __ptext8:
  3071                           	opt stack 0
  3072  001CB0                     _CANInitialize:
  3073                           	opt stack 23
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;incstack = 0
  3077                           ;CANInitialize@propSeg stored from wreg
  3078  001CB0  0100               	movlb	0	; () banked
  3079  001CB2  6F8A               	movwf	CANInitialize@propSeg& (0+255),b
  3080                           
  3081                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3082                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3083                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3084  001CB4  0E80               	movlw	128
  3085  001CB6  ECC4  F012         	call	_CANOperationMode
  3086                           
  3087                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3088  001CBA  0E00               	movlw	0
  3089  001CBC  6E70               	movwf	3952,c	;volatile
  3090                           
  3091                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3092  001CBE  0E00               	movlw	0
  3093  001CC0  6E71               	movwf	3953,c	;volatile
  3094                           
  3095                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3096  001CC2  0E00               	movlw	0
  3097  001CC4  6E72               	movwf	3954,c	;volatile
  3098                           
  3099                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3100  001CC6  0100               	movlb	0	; () banked
  3101  001CC8  4183               	rrncf	CANInitialize@SJW& (0+255),w,b
  3102  001CCA  42E8               	rrncf	wreg,f,c
  3103  001CCC  0BC0               	andlw	192
  3104  001CCE  0100               	movlb	0	; () banked
  3105  001CD0  6F83               	movwf	CANInitialize@SJW& (0+255),b
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3109  001CD2  0100               	movlb	0	; () banked
  3110  001CD4  5183               	movf	CANInitialize@SJW& (0+255),w,b
  3111  001CD6  1270               	iorwf	3952,f,c	;volatile
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3115  001CD8  0100               	movlb	0	; () banked
  3116  001CDA  5184               	movf	CANInitialize@BRP& (0+255),w,b
  3117  001CDC  1270               	iorwf	3952,f,c	;volatile
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3121  001CDE  0100               	movlb	0	; () banked
  3122  001CE0  518A               	movf	CANInitialize@propSeg& (0+255),w,b
  3123  001CE2  1271               	iorwf	3953,f,c	;volatile
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3127  001CE4  0100               	movlb	0	; () banked
  3128  001CE6  3981               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3129  001CE8  42E8               	rrncf	wreg,f,c
  3130  001CEA  0BF8               	andlw	248
  3131  001CEC  0100               	movlb	0	; () banked
  3132  001CEE  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3136  001CF0  0100               	movlb	0	; () banked
  3137  001CF2  5181               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3138  001CF4  1271               	iorwf	3953,f,c	;volatile
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3142  001CF6  0100               	movlb	0	; () banked
  3143  001CF8  A585               	btfss	CANInitialize@flags& (0+255),2,b
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3147  001CFA  8C71               	bsf	3953,6,c	;volatile
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3151  001CFC  0100               	movlb	0	; () banked
  3152  001CFE  B185               	btfsc	CANInitialize@flags& (0+255),0,b
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3156  001D00  8E71               	bsf	3953,7,c	;volatile
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3160                           
  3161                           ; BSR set to: 0
  3162  001D02  0100               	movlb	0	; () banked
  3163  001D04  5182               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3164  001D06  1272               	iorwf	3954,f,c	;volatile
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3168  001D08  0100               	movlb	0	; () banked
  3169  001D0A  B385               	btfsc	CANInitialize@flags& (0+255),1,b
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3173  001D0C  8C72               	bsf	3954,6,c	;volatile
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3177                           
  3178                           ; BSR set to: 0
  3179  001D0E  0100               	movlb	0	; () banked
  3180  001D10  5185               	movf	CANInitialize@flags& (0+255),w,b
  3181  001D12  0B60               	andlw	96
  3182  001D14  6E60               	movwf	3936,c	;volatile
  3183                           
  3184                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3185  001D16  0100               	movlb	0	; () banked
  3186  001D18  5185               	movf	CANInitialize@flags& (0+255),w,b
  3187  001D1A  0B10               	andlw	16
  3188  001D1C  0AFF               	xorlw	255
  3189  001D1E  B4D8               	btfsc	status,2,c
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3193  001D20  8460               	bsf	3936,2,c	;volatile
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3197  001D22  CF60 FF50          	movff	3936,3920	;volatile
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3201  001D26  0E00               	movlw	0
  3202  001D28  0100               	movlb	0	; () banked
  3203  001D2A  6F73               	movwf	CANSetMask@mask& (0+255),b
  3204  001D2C  0E00               	movlw	0
  3205  001D2E  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  3206  001D30  0E00               	movlw	0
  3207  001D32  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3208  001D34  0E00               	movlw	0
  3209  001D36  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3210  001D38  0EF7               	movlw	247
  3211  001D3A  0100               	movlb	0	; () banked
  3212  001D3C  6F77               	movwf	CANSetMask@type& (0+255),b
  3213  001D3E  0E01               	movlw	1
  3214  001D40  EC89  F00C         	call	_CANSetMask
  3215                           
  3216                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3217  001D44  0E00               	movlw	0
  3218  001D46  0100               	movlb	0	; () banked
  3219  001D48  6F73               	movwf	CANSetMask@mask& (0+255),b
  3220  001D4A  0E00               	movlw	0
  3221  001D4C  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  3222  001D4E  0E00               	movlw	0
  3223  001D50  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3224  001D52  0E00               	movlw	0
  3225  001D54  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3226  001D56  0EF7               	movlw	247
  3227  001D58  0100               	movlb	0	; () banked
  3228  001D5A  6F77               	movwf	CANSetMask@type& (0+255),b
  3229  001D5C  0E02               	movlw	2
  3230  001D5E  EC89  F00C         	call	_CANSetMask
  3231                           
  3232                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3233  001D62  D00F               	goto	l2957
  3234  001D64                     l2951:
  3235                           
  3236                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3237  001D64  0EF7               	movlw	247
  3238  001D66  0100               	movlb	0	; () banked
  3239  001D68  6F8B               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3240  001D6A  D007               	goto	l2953
  3241  001D6C                     l350:
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3245  001D6C  0100               	movlb	0	; () banked
  3246  001D6E  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3247                           
  3248                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3249  001D70  0100               	movlb	0	; () banked
  3250  001D72  698C               	setf	CANInitialize@FilterConfig2& (0+255),b
  3251                           
  3252                           ;inc\CANlib.h: 273: break;
  3253  001D74  D028               	goto	l2959
  3254  001D76                     l351:
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3258  001D76  0100               	movlb	0	; () banked
  3259  001D78  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3260  001D7A                     l2953:
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3264  001D7A  0EF7               	movlw	247
  3265  001D7C  0100               	movlb	0	; () banked
  3266  001D7E  6F8C               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;inc\CANlib.h: 278: }
  3270                           
  3271                           ;inc\CANlib.h: 277: break;
  3272  001D80  D022               	goto	l2959
  3273  001D82                     l2957:
  3274  001D82  0E9F               	movlw	159
  3275  001D84  0100               	movlb	0	; () banked
  3276  001D86  6F86               	movwf	??_CANInitialize& (0+255),b
  3277  001D88  0EFF               	movlw	255
  3278  001D8A  0100               	movlb	0	; () banked
  3279  001D8C  6F87               	movwf	(??_CANInitialize+1)& (0+255),b
  3280  001D8E  0100               	movlb	0	; () banked
  3281  001D90  5185               	movf	CANInitialize@flags& (0+255),w,b
  3282  001D92  0B60               	andlw	96
  3283  001D94  0100               	movlb	0	; () banked
  3284  001D96  6F88               	movwf	(??_CANInitialize+2)& (0+255),b
  3285  001D98  6B89               	clrf	(??_CANInitialize+3)& (0+255),b
  3286  001D9A  0100               	movlb	0	; () banked
  3287  001D9C  5186               	movf	??_CANInitialize& (0+255),w,b
  3288  001D9E  0100               	movlb	0	; () banked
  3289  001DA0  1388               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3290  001DA2  0100               	movlb	0	; () banked
  3291  001DA4  5187               	movf	(??_CANInitialize+1)& (0+255),w,b
  3292  001DA6  0100               	movlb	0	; () banked
  3293  001DA8  1389               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3294                           
  3295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3296                           ; Switch size 1, requested type "space"
  3297                           ; Number of cases is 1, Range of values is 0 to 0
  3298                           ; switch strategies available:
  3299                           ; Name         Instructions Cycles
  3300                           ; simple_byte            4     3 (average)
  3301                           ;	Chosen strategy is simple_byte
  3302  001DAA  0100               	movlb	0	; () banked
  3303  001DAC  5189               	movf	(??_CANInitialize+3)& (0+255),w,b
  3304  001DAE  0A00               	xorlw	0	; case 0
  3305  001DB0  A4D8               	btfss	status,2,c
  3306  001DB2  D7E1               	goto	l351
  3307                           
  3308                           ; BSR set to: 0
  3309                           ; Switch size 1, requested type "space"
  3310                           ; Number of cases is 2, Range of values is 191 to 223
  3311                           ; switch strategies available:
  3312                           ; Name         Instructions Cycles
  3313                           ; simple_byte            7     4 (average)
  3314                           ;	Chosen strategy is simple_byte
  3315  001DB4  0100               	movlb	0	; () banked
  3316  001DB6  5188               	movf	(??_CANInitialize+2)& (0+255),w,b
  3317  001DB8  0ABF               	xorlw	191	; case 191
  3318  001DBA  B4D8               	btfsc	status,2,c
  3319  001DBC  D7D7               	goto	l350
  3320  001DBE  0A60               	xorlw	96	; case 223
  3321  001DC0  B4D8               	btfsc	status,2,c
  3322  001DC2  D7D0               	goto	l2951
  3323  001DC4  D7D8               	goto	l351
  3324  001DC6                     l2959:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3328  001DC6  0E00               	movlw	0
  3329  001DC8  0100               	movlb	0	; () banked
  3330  001DCA  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3331  001DCC  0E00               	movlw	0
  3332  001DCE  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3333  001DD0  0E00               	movlw	0
  3334  001DD2  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3335  001DD4  0E00               	movlw	0
  3336  001DD6  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3337  001DD8  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3338  001DDC  0E00               	movlw	0
  3339  001DDE  ECBA  F000         	call	_CANSetFilter
  3340                           
  3341                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3342  001DE2  0E00               	movlw	0
  3343  001DE4  0100               	movlb	0	; () banked
  3344  001DE6  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3345  001DE8  0E00               	movlw	0
  3346  001DEA  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3347  001DEC  0E00               	movlw	0
  3348  001DEE  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3349  001DF0  0E00               	movlw	0
  3350  001DF2  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3351  001DF4  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3352  001DF8  0E01               	movlw	1
  3353  001DFA  ECBA  F000         	call	_CANSetFilter
  3354                           
  3355                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3356  001DFE  0E00               	movlw	0
  3357  001E00  0100               	movlb	0	; () banked
  3358  001E02  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3359  001E04  0E00               	movlw	0
  3360  001E06  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3361  001E08  0E00               	movlw	0
  3362  001E0A  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3363  001E0C  0E00               	movlw	0
  3364  001E0E  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3365  001E10  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3366  001E14  0E02               	movlw	2
  3367  001E16  ECBA  F000         	call	_CANSetFilter
  3368                           
  3369                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3370  001E1A  0E00               	movlw	0
  3371  001E1C  0100               	movlb	0	; () banked
  3372  001E1E  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3373  001E20  0E00               	movlw	0
  3374  001E22  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3375  001E24  0E00               	movlw	0
  3376  001E26  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3377  001E28  0E00               	movlw	0
  3378  001E2A  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3379  001E2C  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3380  001E30  0E03               	movlw	3
  3381  001E32  ECBA  F000         	call	_CANSetFilter
  3382                           
  3383                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3384  001E36  0E00               	movlw	0
  3385  001E38  0100               	movlb	0	; () banked
  3386  001E3A  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3387  001E3C  0E00               	movlw	0
  3388  001E3E  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3389  001E40  0E00               	movlw	0
  3390  001E42  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3391  001E44  0E00               	movlw	0
  3392  001E46  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3393  001E48  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3394  001E4C  0E04               	movlw	4
  3395  001E4E  ECBA  F000         	call	_CANSetFilter
  3396                           
  3397                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3398  001E52  0E00               	movlw	0
  3399  001E54  0100               	movlb	0	; () banked
  3400  001E56  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3401  001E58  0E00               	movlw	0
  3402  001E5A  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3403  001E5C  0E00               	movlw	0
  3404  001E5E  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3405  001E60  0E00               	movlw	0
  3406  001E62  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3407  001E64  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3408  001E68  0E05               	movlw	5
  3409  001E6A  ECBA  F000         	call	_CANSetFilter
  3410                           
  3411                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3412  001E6E  0E00               	movlw	0
  3413  001E70  ECC4  F012         	call	_CANOperationMode
  3414  001E74  0012               	return		;funcret
  3415  001E76                     __end_of_CANInitialize:
  3416                           	opt stack 0
  3417                           tblptru	equ	0xFF8
  3418                           tblptrh	equ	0xFF7
  3419                           tblptrl	equ	0xFF6
  3420                           tablat	equ	0xFF5
  3421                           prodh	equ	0xFF4
  3422                           prodl	equ	0xFF3
  3423                           intcon	equ	0xFF2
  3424                           intcon2	equ	0xFF1
  3425                           postinc0	equ	0xFEE
  3426                           wreg	equ	0xFE8
  3427                           postdec1	equ	0xFE5
  3428                           fsr1l	equ	0xFE1
  3429                           indf2	equ	0xFDF
  3430                           fsr2h	equ	0xFDA
  3431                           fsr2l	equ	0xFD9
  3432                           status	equ	0xFD8
  3433                           
  3434 ;; *************** function _CANSetMask *****************
  3435 ;; Defined at:
  3436 ;;		line 640 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  numBuffer       1    wreg     enum E16878
  3439 ;;  mask            4   19[BANK0 ] unsigned long 
  3440 ;;  type            1   23[BANK0 ] enum E16844
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  numBuffer       1   28[BANK0 ] enum E16878
  3443 ;;  tamp            4   29[BANK0 ] unsigned long 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;		None               void
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3453 ;;      Params:         0       5       0       0
  3454 ;;      Locals:         0       5       0       0
  3455 ;;      Temps:          0       4       0       0
  3456 ;;      Totals:         0      14       0       0
  3457 ;;Total ram usage:       14 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    5
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_CANInitialize
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text9
  3468  001912                     __ptext9:
  3469                           	opt stack 0
  3470  001912                     _CANSetMask:
  3471                           	opt stack 23
  3472                           
  3473                           ;incstack = 0
  3474                           ;CANSetMask@numBuffer stored from wreg
  3475  001912  0100               	movlb	0	; () banked
  3476  001914  6F7C               	movwf	CANSetMask@numBuffer& (0+255),b
  3477                           
  3478                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3479  001916  0100               	movlb	0	; () banked
  3480  001918  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  3481  00191A  A4D8               	btfss	status,2,c
  3482  00191C  D056               	goto	l2521
  3483                           
  3484                           ; BSR set to: 0
  3485  00191E  0100               	movlb	0	; () banked
  3486  001920  2977               	incf	CANSetMask@type& (0+255),w,b
  3487  001922  A4D8               	btfss	status,2,c
  3488  001924  D052               	goto	l2521
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;inc\CANlib.h: 644: {
  3492                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3493  001926  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3494  00192A  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3495  00192E  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3496  001932  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3497  001936  0E04               	movlw	4
  3498  001938  D006               	goto	u2110
  3499  00193A                     u2115:
  3500  00193A  0100               	movlb	0	; () banked
  3501  00193C  90D8               	bcf	status,0,c
  3502  00193E  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3503  001940  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3504  001942  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3505  001944  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3506  001946                     u2110:
  3507  001946  2EE8               	decfsz	wreg,f,c
  3508  001948  D7F8               	goto	u2115
  3509  00194A  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3510  00194E  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3511  001952  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3512  001956  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3516  00195A  0100               	movlb	0	; () banked
  3517  00195C  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3518  00195E  0100               	movlb	0	; () banked
  3519  001960  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3520  001962  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3521  001964  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3522  001966  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3526  001968  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3530  00196C  0E07               	movlw	7
  3531  00196E  0100               	movlb	0	; () banked
  3532  001970  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3533  001972  0100               	movlb	0	; () banked
  3534  001974  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3535  001976  0E00               	movlw	0
  3536  001978  0100               	movlb	0	; () banked
  3537  00197A  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3538  00197C  0100               	movlb	0	; () banked
  3539  00197E  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3540  001980  0E00               	movlw	0
  3541  001982  0100               	movlb	0	; () banked
  3542  001984  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3543  001986  0100               	movlb	0	; () banked
  3544  001988  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3545  00198A  0E00               	movlw	0
  3546  00198C  0100               	movlb	0	; () banked
  3547  00198E  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3548  001990  0100               	movlb	0	; () banked
  3549  001992  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3553  001994  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3554  001998  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3555  00199C  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3556  0019A0  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3557  0019A4  0E05               	movlw	5
  3558  0019A6                     u2125:
  3559  0019A6  90D8               	bcf	status,0,c
  3560  0019A8  0100               	movlb	0	; () banked
  3561  0019AA  3778               	rlcf	??_CANSetMask& (0+255),f,b
  3562  0019AC  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3563  0019AE  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3564  0019B0  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3565  0019B2  2EE8               	decfsz	wreg,f,c
  3566  0019B4  D7F8               	goto	u2125
  3567  0019B6  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3568  0019BA  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3569  0019BE  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3570  0019C2  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3574  0019C6  C07D  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3575  0019CA                     l2521:
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;inc\CANlib.h: 652: }
  3579                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3580  0019CA  0E02               	movlw	2
  3581  0019CC  0100               	movlb	0	; () banked
  3582  0019CE  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3583  0019D0  A4D8               	btfss	status,2,c
  3584  0019D2  D056               	goto	l2537
  3585                           
  3586                           ; BSR set to: 0
  3587  0019D4  0100               	movlb	0	; () banked
  3588  0019D6  2977               	incf	CANSetMask@type& (0+255),w,b
  3589  0019D8  A4D8               	btfss	status,2,c
  3590  0019DA  D052               	goto	l2537
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;inc\CANlib.h: 655: {
  3594                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3595  0019DC  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3596  0019E0  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3597  0019E4  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3598  0019E8  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3599  0019EC  0E04               	movlw	4
  3600  0019EE  D006               	goto	u2150
  3601  0019F0                     u2155:
  3602  0019F0  0100               	movlb	0	; () banked
  3603  0019F2  90D8               	bcf	status,0,c
  3604  0019F4  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3605  0019F6  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3606  0019F8  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3607  0019FA  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3608  0019FC                     u2150:
  3609  0019FC  2EE8               	decfsz	wreg,f,c
  3610  0019FE  D7F8               	goto	u2155
  3611  001A00  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3612  001A04  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3613  001A08  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3614  001A0C  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3618  001A10  0100               	movlb	0	; () banked
  3619  001A12  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3620  001A14  0100               	movlb	0	; () banked
  3621  001A16  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3622  001A18  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3623  001A1A  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3624  001A1C  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3628  001A1E  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3632  001A22  0E07               	movlw	7
  3633  001A24  0100               	movlb	0	; () banked
  3634  001A26  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3635  001A28  0100               	movlb	0	; () banked
  3636  001A2A  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3637  001A2C  0E00               	movlw	0
  3638  001A2E  0100               	movlb	0	; () banked
  3639  001A30  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3640  001A32  0100               	movlb	0	; () banked
  3641  001A34  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3642  001A36  0E00               	movlw	0
  3643  001A38  0100               	movlb	0	; () banked
  3644  001A3A  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3645  001A3C  0100               	movlb	0	; () banked
  3646  001A3E  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3647  001A40  0E00               	movlw	0
  3648  001A42  0100               	movlb	0	; () banked
  3649  001A44  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3650  001A46  0100               	movlb	0	; () banked
  3651  001A48  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3655  001A4A  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3656  001A4E  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3657  001A52  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3658  001A56  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3659  001A5A  0E05               	movlw	5
  3660  001A5C                     u2165:
  3661  001A5C  90D8               	bcf	status,0,c
  3662  001A5E  0100               	movlb	0	; () banked
  3663  001A60  3778               	rlcf	??_CANSetMask& (0+255),f,b
  3664  001A62  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3665  001A64  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3666  001A66  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3667  001A68  2EE8               	decfsz	wreg,f,c
  3668  001A6A  D7F8               	goto	u2165
  3669  001A6C  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3670  001A70  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3671  001A74  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3672  001A78  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3676  001A7C  C07D  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3677  001A80                     l2537:
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;inc\CANlib.h: 663: }
  3681                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3682  001A80  0100               	movlb	0	; () banked
  3683  001A82  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  3684  001A84  A4D8               	btfss	status,2,c
  3685  001A86  D087               	goto	l2569
  3686                           
  3687                           ; BSR set to: 0
  3688  001A88  0EF7               	movlw	247
  3689  001A8A  0100               	movlb	0	; () banked
  3690  001A8C  1977               	xorwf	CANSetMask@type& (0+255),w,b
  3691  001A8E  A4D8               	btfss	status,2,c
  3692  001A90  D082               	goto	l2569
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;inc\CANlib.h: 666: {
  3696                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3697  001A92  0100               	movlb	0	; () banked
  3698  001A94  5173               	movf	CANSetMask@mask& (0+255),w,b
  3699  001A96  0100               	movlb	0	; () banked
  3700  001A98  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3701  001A9A  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3702  001A9C  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3703  001A9E  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3707  001AA0  C07D  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3711  001AA4  0E00               	movlw	0
  3712  001AA6  0100               	movlb	0	; () banked
  3713  001AA8  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3714  001AAA  0100               	movlb	0	; () banked
  3715  001AAC  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3716  001AAE  0EFF               	movlw	255
  3717  001AB0  0100               	movlb	0	; () banked
  3718  001AB2  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3719  001AB4  0100               	movlb	0	; () banked
  3720  001AB6  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3721  001AB8  0E00               	movlw	0
  3722  001ABA  0100               	movlb	0	; () banked
  3723  001ABC  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3724  001ABE  0100               	movlb	0	; () banked
  3725  001AC0  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3726  001AC2  0E00               	movlw	0
  3727  001AC4  0100               	movlb	0	; () banked
  3728  001AC6  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3729  001AC8  0100               	movlb	0	; () banked
  3730  001ACA  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3734  001ACC  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3735  001AD0  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3736  001AD4  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3737  001AD8  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3738  001ADC  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  3739  001AE0  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  3740  001AE4  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  3741  001AE8  0100               	movlb	0	; () banked
  3742  001AEA  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  3743  001AEC  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3744  001AF0  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3745  001AF4  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3746  001AF8  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3750  001AFC  C07D  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3754  001B00  0100               	movlb	0	; () banked
  3755  001B02  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3756  001B04  D003               	goto	l424
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3760  001B06  010F               	movlb	15	; () banked
  3761  001B08  8119               	bsf	25,0,b	;volatile
  3762  001B0A  D002               	goto	l425
  3763  001B0C                     l424:
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;inc\CANlib.h: 676: else
  3767                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3768  001B0C  010F               	movlb	15	; () banked
  3769  001B0E  9119               	bcf	25,0,b	;volatile
  3770  001B10                     l425:
  3771                           
  3772                           ; BSR set to: 15
  3773                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3774  001B10  0100               	movlb	0	; () banked
  3775  001B12  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3776  001B14  D003               	goto	l426
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3780  001B16  010F               	movlb	15	; () banked
  3781  001B18  8319               	bsf	25,1,b	;volatile
  3782  001B1A  D002               	goto	l427
  3783  001B1C                     l426:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;inc\CANlib.h: 681: else
  3787                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3788  001B1C  010F               	movlb	15	; () banked
  3789  001B1E  9319               	bcf	25,1,b	;volatile
  3790  001B20                     l427:
  3791                           
  3792                           ; BSR set to: 15
  3793                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3794  001B20  0100               	movlb	0	; () banked
  3795  001B22  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3796  001B24  D003               	goto	l428
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3800  001B26  010F               	movlb	15	; () banked
  3801  001B28  8B19               	bsf	25,5,b	;volatile
  3802  001B2A  D002               	goto	l429
  3803  001B2C                     l428:
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;inc\CANlib.h: 686: else
  3807                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3808  001B2C  010F               	movlb	15	; () banked
  3809  001B2E  9B19               	bcf	25,5,b	;volatile
  3810  001B30                     l429:
  3811                           
  3812                           ; BSR set to: 15
  3813                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3814  001B30  0100               	movlb	0	; () banked
  3815  001B32  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3816  001B34  D003               	goto	l430
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3820  001B36  010F               	movlb	15	; () banked
  3821  001B38  8D19               	bsf	25,6,b	;volatile
  3822  001B3A  D002               	goto	l431
  3823  001B3C                     l430:
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;inc\CANlib.h: 691: else
  3827                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3828  001B3C  010F               	movlb	15	; () banked
  3829  001B3E  9D19               	bcf	25,6,b	;volatile
  3830  001B40                     l431:
  3831                           
  3832                           ; BSR set to: 15
  3833                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3834  001B40  0100               	movlb	0	; () banked
  3835  001B42  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3836  001B44  D003               	goto	l432
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3840  001B46  010F               	movlb	15	; () banked
  3841  001B48  8F19               	bsf	25,7,b	;volatile
  3842  001B4A  D002               	goto	l2563
  3843  001B4C                     l432:
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;inc\CANlib.h: 696: else
  3847                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3848  001B4C  010F               	movlb	15	; () banked
  3849  001B4E  9F19               	bcf	25,7,b	;volatile
  3850  001B50                     l2563:
  3851                           
  3852                           ; BSR set to: 15
  3853                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3854  001B50  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3855  001B54  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3856  001B58  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3857  001B5C  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3858  001B60  0E16               	movlw	22
  3859  001B62  D006               	goto	u2240
  3860  001B64                     u2245:
  3861  001B64  0100               	movlb	0	; () banked
  3862  001B66  90D8               	bcf	status,0,c
  3863  001B68  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3864  001B6A  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3865  001B6C  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3866  001B6E  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3867  001B70                     u2240:
  3868  001B70  2EE8               	decfsz	wreg,f,c
  3869  001B72  D7F8               	goto	u2245
  3870  001B74  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3871  001B78  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3872  001B7C  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3873  001B80  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3877  001B84  0100               	movlb	0	; () banked
  3878  001B86  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3879  001B88  0100               	movlb	0	; () banked
  3880  001B8A  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3881  001B8C  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3882  001B8E  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3883  001B90  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3887  001B92  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3888  001B96                     l2569:
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;inc\CANlib.h: 702: }
  3892                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3893  001B96  0E02               	movlw	2
  3894  001B98  0100               	movlb	0	; () banked
  3895  001B9A  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3896  001B9C  A4D8               	btfss	status,2,c
  3897  001B9E  0012               	return	
  3898                           
  3899                           ; BSR set to: 0
  3900  001BA0  0EF7               	movlw	247
  3901  001BA2  0100               	movlb	0	; () banked
  3902  001BA4  1977               	xorwf	CANSetMask@type& (0+255),w,b
  3903  001BA6  A4D8               	btfss	status,2,c
  3904  001BA8  0012               	return	
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;inc\CANlib.h: 705: {
  3908                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3909  001BAA  0100               	movlb	0	; () banked
  3910  001BAC  5173               	movf	CANSetMask@mask& (0+255),w,b
  3911  001BAE  0100               	movlb	0	; () banked
  3912  001BB0  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3913  001BB2  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3914  001BB4  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3915  001BB6  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3919  001BB8  C07D  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3923  001BBC  0E00               	movlw	0
  3924  001BBE  0100               	movlb	0	; () banked
  3925  001BC0  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3926  001BC2  0100               	movlb	0	; () banked
  3927  001BC4  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3928  001BC6  0EFF               	movlw	255
  3929  001BC8  0100               	movlb	0	; () banked
  3930  001BCA  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3931  001BCC  0100               	movlb	0	; () banked
  3932  001BCE  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3933  001BD0  0E00               	movlw	0
  3934  001BD2  0100               	movlb	0	; () banked
  3935  001BD4  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3936  001BD6  0100               	movlb	0	; () banked
  3937  001BD8  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3938  001BDA  0E00               	movlw	0
  3939  001BDC  0100               	movlb	0	; () banked
  3940  001BDE  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3941  001BE0  0100               	movlb	0	; () banked
  3942  001BE2  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3946  001BE4  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3947  001BE8  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3948  001BEC  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3949  001BF0  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3950  001BF4  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  3951  001BF8  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  3952  001BFC  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  3953  001C00  0100               	movlb	0	; () banked
  3954  001C02  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  3955  001C04  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3956  001C08  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3957  001C0C  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3958  001C10  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3962  001C14  C07D  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3966  001C18  0100               	movlb	0	; () banked
  3967  001C1A  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3968  001C1C  D003               	goto	l435
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3972  001C1E  010F               	movlb	15	; () banked
  3973  001C20  811D               	bsf	29,0,b	;volatile
  3974  001C22  D002               	goto	l436
  3975  001C24                     l435:
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;inc\CANlib.h: 715: else
  3979                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3980  001C24  010F               	movlb	15	; () banked
  3981  001C26  911D               	bcf	29,0,b	;volatile
  3982  001C28                     l436:
  3983                           
  3984                           ; BSR set to: 15
  3985                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3986  001C28  0100               	movlb	0	; () banked
  3987  001C2A  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3988  001C2C  D003               	goto	l437
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3992  001C2E  010F               	movlb	15	; () banked
  3993  001C30  831D               	bsf	29,1,b	;volatile
  3994  001C32  D002               	goto	l438
  3995  001C34                     l437:
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;inc\CANlib.h: 720: else
  3999                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4000  001C34  010F               	movlb	15	; () banked
  4001  001C36  931D               	bcf	29,1,b	;volatile
  4002  001C38                     l438:
  4003                           
  4004                           ; BSR set to: 15
  4005                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4006  001C38  0100               	movlb	0	; () banked
  4007  001C3A  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4008  001C3C  D003               	goto	l439
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4012  001C3E  010F               	movlb	15	; () banked
  4013  001C40  8B1D               	bsf	29,5,b	;volatile
  4014  001C42  D002               	goto	l440
  4015  001C44                     l439:
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;inc\CANlib.h: 725: else
  4019                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4020  001C44  010F               	movlb	15	; () banked
  4021  001C46  9B1D               	bcf	29,5,b	;volatile
  4022  001C48                     l440:
  4023                           
  4024                           ; BSR set to: 15
  4025                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4026  001C48  0100               	movlb	0	; () banked
  4027  001C4A  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4028  001C4C  D003               	goto	l441
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4032  001C4E  010F               	movlb	15	; () banked
  4033  001C50  8D1D               	bsf	29,6,b	;volatile
  4034  001C52  D002               	goto	l442
  4035  001C54                     l441:
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;inc\CANlib.h: 730: else
  4039                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4040  001C54  010F               	movlb	15	; () banked
  4041  001C56  9D1D               	bcf	29,6,b	;volatile
  4042  001C58                     l442:
  4043                           
  4044                           ; BSR set to: 15
  4045                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4046  001C58  0100               	movlb	0	; () banked
  4047  001C5A  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4048  001C5C  D003               	goto	l443
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4052  001C5E  010F               	movlb	15	; () banked
  4053  001C60  8F1D               	bsf	29,7,b	;volatile
  4054  001C62  D002               	goto	l2595
  4055  001C64                     l443:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;inc\CANlib.h: 735: else
  4059                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4060  001C64  010F               	movlb	15	; () banked
  4061  001C66  9F1D               	bcf	29,7,b	;volatile
  4062  001C68                     l2595:
  4063                           
  4064                           ; BSR set to: 15
  4065                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4066  001C68  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  4067  001C6C  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4068  001C70  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4069  001C74  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4070  001C78  0E16               	movlw	22
  4071  001C7A  D006               	goto	u2320
  4072  001C7C                     u2325:
  4073  001C7C  0100               	movlb	0	; () banked
  4074  001C7E  90D8               	bcf	status,0,c
  4075  001C80  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4076  001C82  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4077  001C84  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4078  001C86  3378               	rrcf	??_CANSetMask& (0+255),f,b
  4079  001C88                     u2320:
  4080  001C88  2EE8               	decfsz	wreg,f,c
  4081  001C8A  D7F8               	goto	u2325
  4082  001C8C  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4083  001C90  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4084  001C94  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4085  001C98  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4089  001C9C  0100               	movlb	0	; () banked
  4090  001C9E  517D               	movf	CANSetMask@tamp& (0+255),w,b
  4091  001CA0  0100               	movlb	0	; () banked
  4092  001CA2  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4093  001CA4  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4094  001CA6  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4095  001CA8  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4099  001CAA  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4100  001CAE  0012               	return	
  4101  001CB0                     __end_of_CANSetMask:
  4102                           	opt stack 0
  4103                           tblptru	equ	0xFF8
  4104                           tblptrh	equ	0xFF7
  4105                           tblptrl	equ	0xFF6
  4106                           tablat	equ	0xFF5
  4107                           prodh	equ	0xFF4
  4108                           prodl	equ	0xFF3
  4109                           intcon	equ	0xFF2
  4110                           intcon2	equ	0xFF1
  4111                           postinc0	equ	0xFEE
  4112                           wreg	equ	0xFE8
  4113                           postdec1	equ	0xFE5
  4114                           fsr1l	equ	0xFE1
  4115                           indf2	equ	0xFDF
  4116                           fsr2h	equ	0xFDA
  4117                           fsr2l	equ	0xFD9
  4118                           status	equ	0xFD8
  4119                           
  4120 ;; *************** function _CANSetFilter *****************
  4121 ;; Defined at:
  4122 ;;		line 748 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  numBuffer       1    wreg     enum E16881
  4125 ;;  filter          4   19[BANK0 ] unsigned long 
  4126 ;;  type            1   23[BANK0 ] enum E16844
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  numBuffer       1   28[BANK0 ] enum E16881
  4129 ;;  tamp            4   29[BANK0 ] unsigned long 
  4130 ;; Return value:  Size  Location     Type
  4131 ;;		None               void
  4132 ;; Registers used:
  4133 ;;		wreg, status,2, status,0
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4139 ;;      Params:         0       5       0       0
  4140 ;;      Locals:         0       5       0       0
  4141 ;;      Temps:          0       4       0       0
  4142 ;;      Totals:         0      14       0       0
  4143 ;;Total ram usage:       14 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    5
  4146 ;; This function calls:
  4147 ;;		Nothing
  4148 ;; This function is called by:
  4149 ;;		_CANInitialize
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text10
  4154  000174                     __ptext10:
  4155                           	opt stack 0
  4156  000174                     _CANSetFilter:
  4157                           	opt stack 23
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;incstack = 0
  4161                           ;CANSetFilter@numBuffer stored from wreg
  4162  000174  0100               	movlb	0	; () banked
  4163  000176  6F7C               	movwf	CANSetFilter@numBuffer& (0+255),b
  4164                           
  4165                           ;inc\CANlib.h: 750: unsigned long tamp;
  4166                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4167  000178  0100               	movlb	0	; () banked
  4168  00017A  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4169  00017C  0100               	movlb	0	; () banked
  4170  00017E  A4D8               	btfss	status,2,c
  4171  000180  D058               	goto	l2619
  4172                           
  4173                           ; BSR set to: 0
  4174  000182  0100               	movlb	0	; () banked
  4175  000184  2977               	incf	CANSetFilter@type& (0+255),w,b
  4176  000186  A4D8               	btfss	status,2,c
  4177  000188  D054               	goto	l2619
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;inc\CANlib.h: 753: {
  4181                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4182  00018A  010F               	movlb	15	; () banked
  4183  00018C  9701               	bcf	1,3,b	;volatile
  4184                           
  4185                           ; BSR set to: 15
  4186                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4187  00018E  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4188  000192  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4189  000196  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4190  00019A  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4191  00019E  0E04               	movlw	4
  4192  0001A0  D006               	goto	u2350
  4193  0001A2                     u2355:
  4194  0001A2  0100               	movlb	0	; () banked
  4195  0001A4  90D8               	bcf	status,0,c
  4196  0001A6  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4197  0001A8  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4198  0001AA  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4199  0001AC  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4200  0001AE                     u2350:
  4201  0001AE  2EE8               	decfsz	wreg,f,c
  4202  0001B0  D7F8               	goto	u2355
  4203  0001B2  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4204  0001B6  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4205  0001BA  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4206  0001BE  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4210  0001C2  0100               	movlb	0	; () banked
  4211  0001C4  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4212  0001C6  0100               	movlb	0	; () banked
  4213  0001C8  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4214  0001CA  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4215  0001CC  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4216  0001CE  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4220  0001D0  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4224  0001D4  0E07               	movlw	7
  4225  0001D6  0100               	movlb	0	; () banked
  4226  0001D8  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4227  0001DA  0100               	movlb	0	; () banked
  4228  0001DC  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4229  0001DE  0E00               	movlw	0
  4230  0001E0  0100               	movlb	0	; () banked
  4231  0001E2  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4232  0001E4  0100               	movlb	0	; () banked
  4233  0001E6  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4234  0001E8  0E00               	movlw	0
  4235  0001EA  0100               	movlb	0	; () banked
  4236  0001EC  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4237  0001EE  0100               	movlb	0	; () banked
  4238  0001F0  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4239  0001F2  0E00               	movlw	0
  4240  0001F4  0100               	movlb	0	; () banked
  4241  0001F6  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4242  0001F8  0100               	movlb	0	; () banked
  4243  0001FA  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4247  0001FC  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4248  000200  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4249  000204  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4250  000208  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4251  00020C  0E05               	movlw	5
  4252  00020E                     u2365:
  4253  00020E  90D8               	bcf	status,0,c
  4254  000210  0100               	movlb	0	; () banked
  4255  000212  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4256  000214  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4257  000216  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4258  000218  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4259  00021A  2EE8               	decfsz	wreg,f,c
  4260  00021C  D7F8               	goto	u2365
  4261  00021E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4262  000222  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4263  000226  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4264  00022A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4268  00022E  C07D  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4269  000232                     l2619:
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;inc\CANlib.h: 763: }
  4273                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4274  000232  0100               	movlb	0	; () banked
  4275  000234  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4276  000236  A4D8               	btfss	status,2,c
  4277  000238  D058               	goto	l2637
  4278                           
  4279                           ; BSR set to: 0
  4280  00023A  0100               	movlb	0	; () banked
  4281  00023C  2977               	incf	CANSetFilter@type& (0+255),w,b
  4282  00023E  A4D8               	btfss	status,2,c
  4283  000240  D054               	goto	l2637
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;inc\CANlib.h: 766: {
  4287                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4288  000242  010F               	movlb	15	; () banked
  4289  000244  9705               	bcf	5,3,b	;volatile
  4290                           
  4291                           ; BSR set to: 15
  4292                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4293  000246  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4294  00024A  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4295  00024E  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4296  000252  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4297  000256  0E04               	movlw	4
  4298  000258  D006               	goto	u2390
  4299  00025A                     u2395:
  4300  00025A  0100               	movlb	0	; () banked
  4301  00025C  90D8               	bcf	status,0,c
  4302  00025E  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4303  000260  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4304  000262  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4305  000264  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4306  000266                     u2390:
  4307  000266  2EE8               	decfsz	wreg,f,c
  4308  000268  D7F8               	goto	u2395
  4309  00026A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4310  00026E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4311  000272  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4312  000276  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4316  00027A  0100               	movlb	0	; () banked
  4317  00027C  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4318  00027E  0100               	movlb	0	; () banked
  4319  000280  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4320  000282  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4321  000284  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4322  000286  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4326  000288  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4330  00028C  0E07               	movlw	7
  4331  00028E  0100               	movlb	0	; () banked
  4332  000290  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4333  000292  0100               	movlb	0	; () banked
  4334  000294  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4335  000296  0E00               	movlw	0
  4336  000298  0100               	movlb	0	; () banked
  4337  00029A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4338  00029C  0100               	movlb	0	; () banked
  4339  00029E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4340  0002A0  0E00               	movlw	0
  4341  0002A2  0100               	movlb	0	; () banked
  4342  0002A4  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4343  0002A6  0100               	movlb	0	; () banked
  4344  0002A8  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4345  0002AA  0E00               	movlw	0
  4346  0002AC  0100               	movlb	0	; () banked
  4347  0002AE  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4348  0002B0  0100               	movlb	0	; () banked
  4349  0002B2  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4353  0002B4  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4354  0002B8  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4355  0002BC  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4356  0002C0  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4357  0002C4  0E05               	movlw	5
  4358  0002C6                     u2405:
  4359  0002C6  90D8               	bcf	status,0,c
  4360  0002C8  0100               	movlb	0	; () banked
  4361  0002CA  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4362  0002CC  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4363  0002CE  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4364  0002D0  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4365  0002D2  2EE8               	decfsz	wreg,f,c
  4366  0002D4  D7F8               	goto	u2405
  4367  0002D6  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4368  0002DA  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4369  0002DE  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4370  0002E2  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4374  0002E6  C07D  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4375  0002EA                     l2637:
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;inc\CANlib.h: 776: }
  4379                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4380  0002EA  0E02               	movlw	2
  4381  0002EC  0100               	movlb	0	; () banked
  4382  0002EE  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4383  0002F0  A4D8               	btfss	status,2,c
  4384  0002F2  D058               	goto	l2655
  4385                           
  4386                           ; BSR set to: 0
  4387  0002F4  0100               	movlb	0	; () banked
  4388  0002F6  2977               	incf	CANSetFilter@type& (0+255),w,b
  4389  0002F8  A4D8               	btfss	status,2,c
  4390  0002FA  D054               	goto	l2655
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;inc\CANlib.h: 779: {
  4394                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4395  0002FC  010F               	movlb	15	; () banked
  4396  0002FE  9709               	bcf	9,3,b	;volatile
  4397                           
  4398                           ; BSR set to: 15
  4399                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4400  000300  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4401  000304  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4402  000308  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4403  00030C  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4404  000310  0E04               	movlw	4
  4405  000312  D006               	goto	u2430
  4406  000314                     u2435:
  4407  000314  0100               	movlb	0	; () banked
  4408  000316  90D8               	bcf	status,0,c
  4409  000318  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4410  00031A  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4411  00031C  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4412  00031E  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4413  000320                     u2430:
  4414  000320  2EE8               	decfsz	wreg,f,c
  4415  000322  D7F8               	goto	u2435
  4416  000324  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4417  000328  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4418  00032C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4419  000330  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4423  000334  0100               	movlb	0	; () banked
  4424  000336  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4425  000338  0100               	movlb	0	; () banked
  4426  00033A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4427  00033C  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4428  00033E  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4429  000340  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4433  000342  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4437  000346  0E07               	movlw	7
  4438  000348  0100               	movlb	0	; () banked
  4439  00034A  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4440  00034C  0100               	movlb	0	; () banked
  4441  00034E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4442  000350  0E00               	movlw	0
  4443  000352  0100               	movlb	0	; () banked
  4444  000354  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4445  000356  0100               	movlb	0	; () banked
  4446  000358  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4447  00035A  0E00               	movlw	0
  4448  00035C  0100               	movlb	0	; () banked
  4449  00035E  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4450  000360  0100               	movlb	0	; () banked
  4451  000362  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4452  000364  0E00               	movlw	0
  4453  000366  0100               	movlb	0	; () banked
  4454  000368  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4455  00036A  0100               	movlb	0	; () banked
  4456  00036C  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4460  00036E  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4461  000372  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4462  000376  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4463  00037A  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4464  00037E  0E05               	movlw	5
  4465  000380                     u2445:
  4466  000380  90D8               	bcf	status,0,c
  4467  000382  0100               	movlb	0	; () banked
  4468  000384  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4469  000386  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4470  000388  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4471  00038A  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4472  00038C  2EE8               	decfsz	wreg,f,c
  4473  00038E  D7F8               	goto	u2445
  4474  000390  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4475  000394  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4476  000398  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4477  00039C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4481  0003A0  C07D  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4482  0003A4                     l2655:
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;inc\CANlib.h: 789: }
  4486                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4487  0003A4  0E03               	movlw	3
  4488  0003A6  0100               	movlb	0	; () banked
  4489  0003A8  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4490  0003AA  A4D8               	btfss	status,2,c
  4491  0003AC  D058               	goto	l2673
  4492                           
  4493                           ; BSR set to: 0
  4494  0003AE  0100               	movlb	0	; () banked
  4495  0003B0  2977               	incf	CANSetFilter@type& (0+255),w,b
  4496  0003B2  A4D8               	btfss	status,2,c
  4497  0003B4  D054               	goto	l2673
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;inc\CANlib.h: 792: {
  4501                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4502  0003B6  010F               	movlb	15	; () banked
  4503  0003B8  970D               	bcf	13,3,b	;volatile
  4504                           
  4505                           ; BSR set to: 15
  4506                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4507  0003BA  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4508  0003BE  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4509  0003C2  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4510  0003C6  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4511  0003CA  0E04               	movlw	4
  4512  0003CC  D006               	goto	u2470
  4513  0003CE                     u2475:
  4514  0003CE  0100               	movlb	0	; () banked
  4515  0003D0  90D8               	bcf	status,0,c
  4516  0003D2  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4517  0003D4  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4518  0003D6  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4519  0003D8  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4520  0003DA                     u2470:
  4521  0003DA  2EE8               	decfsz	wreg,f,c
  4522  0003DC  D7F8               	goto	u2475
  4523  0003DE  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4524  0003E2  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4525  0003E6  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4526  0003EA  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4530  0003EE  0100               	movlb	0	; () banked
  4531  0003F0  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4532  0003F2  0100               	movlb	0	; () banked
  4533  0003F4  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4534  0003F6  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4535  0003F8  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4536  0003FA  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4540  0003FC  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4544  000400  0E07               	movlw	7
  4545  000402  0100               	movlb	0	; () banked
  4546  000404  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4547  000406  0100               	movlb	0	; () banked
  4548  000408  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4549  00040A  0E00               	movlw	0
  4550  00040C  0100               	movlb	0	; () banked
  4551  00040E  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4552  000410  0100               	movlb	0	; () banked
  4553  000412  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4554  000414  0E00               	movlw	0
  4555  000416  0100               	movlb	0	; () banked
  4556  000418  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4557  00041A  0100               	movlb	0	; () banked
  4558  00041C  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4559  00041E  0E00               	movlw	0
  4560  000420  0100               	movlb	0	; () banked
  4561  000422  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4562  000424  0100               	movlb	0	; () banked
  4563  000426  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4567  000428  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4568  00042C  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4569  000430  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4570  000434  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4571  000438  0E05               	movlw	5
  4572  00043A                     u2485:
  4573  00043A  90D8               	bcf	status,0,c
  4574  00043C  0100               	movlb	0	; () banked
  4575  00043E  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4576  000440  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4577  000442  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4578  000444  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4579  000446  2EE8               	decfsz	wreg,f,c
  4580  000448  D7F8               	goto	u2485
  4581  00044A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4582  00044E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4583  000452  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4584  000456  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4588  00045A  C07D  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4589  00045E                     l2673:
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;inc\CANlib.h: 802: }
  4593                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4594  00045E  0E04               	movlw	4
  4595  000460  0100               	movlb	0	; () banked
  4596  000462  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4597  000464  A4D8               	btfss	status,2,c
  4598  000466  D058               	goto	l2691
  4599                           
  4600                           ; BSR set to: 0
  4601  000468  0100               	movlb	0	; () banked
  4602  00046A  2977               	incf	CANSetFilter@type& (0+255),w,b
  4603  00046C  A4D8               	btfss	status,2,c
  4604  00046E  D054               	goto	l2691
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;inc\CANlib.h: 805: {
  4608                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4609  000470  010F               	movlb	15	; () banked
  4610  000472  9711               	bcf	17,3,b	;volatile
  4611                           
  4612                           ; BSR set to: 15
  4613                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4614  000474  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4615  000478  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4616  00047C  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4617  000480  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4618  000484  0E04               	movlw	4
  4619  000486  D006               	goto	u2510
  4620  000488                     u2515:
  4621  000488  0100               	movlb	0	; () banked
  4622  00048A  90D8               	bcf	status,0,c
  4623  00048C  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4624  00048E  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4625  000490  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4626  000492  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4627  000494                     u2510:
  4628  000494  2EE8               	decfsz	wreg,f,c
  4629  000496  D7F8               	goto	u2515
  4630  000498  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4631  00049C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4632  0004A0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4633  0004A4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4637  0004A8  0100               	movlb	0	; () banked
  4638  0004AA  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4639  0004AC  0100               	movlb	0	; () banked
  4640  0004AE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4641  0004B0  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4642  0004B2  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4643  0004B4  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4647  0004B6  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4651  0004BA  0E07               	movlw	7
  4652  0004BC  0100               	movlb	0	; () banked
  4653  0004BE  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4654  0004C0  0100               	movlb	0	; () banked
  4655  0004C2  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4656  0004C4  0E00               	movlw	0
  4657  0004C6  0100               	movlb	0	; () banked
  4658  0004C8  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4659  0004CA  0100               	movlb	0	; () banked
  4660  0004CC  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4661  0004CE  0E00               	movlw	0
  4662  0004D0  0100               	movlb	0	; () banked
  4663  0004D2  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4664  0004D4  0100               	movlb	0	; () banked
  4665  0004D6  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4666  0004D8  0E00               	movlw	0
  4667  0004DA  0100               	movlb	0	; () banked
  4668  0004DC  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4669  0004DE  0100               	movlb	0	; () banked
  4670  0004E0  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4674  0004E2  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4675  0004E6  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4676  0004EA  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4677  0004EE  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4678  0004F2  0E05               	movlw	5
  4679  0004F4                     u2525:
  4680  0004F4  90D8               	bcf	status,0,c
  4681  0004F6  0100               	movlb	0	; () banked
  4682  0004F8  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4683  0004FA  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4684  0004FC  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4685  0004FE  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4686  000500  2EE8               	decfsz	wreg,f,c
  4687  000502  D7F8               	goto	u2525
  4688  000504  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4689  000508  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4690  00050C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4691  000510  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4695  000514  C07D  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4696  000518                     l2691:
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;inc\CANlib.h: 815: }
  4700                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4701  000518  0E05               	movlw	5
  4702  00051A  0100               	movlb	0	; () banked
  4703  00051C  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4704  00051E  A4D8               	btfss	status,2,c
  4705  000520  D058               	goto	l2709
  4706                           
  4707                           ; BSR set to: 0
  4708  000522  0100               	movlb	0	; () banked
  4709  000524  2977               	incf	CANSetFilter@type& (0+255),w,b
  4710  000526  A4D8               	btfss	status,2,c
  4711  000528  D054               	goto	l2709
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;inc\CANlib.h: 818: {
  4715                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4716  00052A  010F               	movlb	15	; () banked
  4717  00052C  9715               	bcf	21,3,b	;volatile
  4718                           
  4719                           ; BSR set to: 15
  4720                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4721  00052E  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4722  000532  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4723  000536  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4724  00053A  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4725  00053E  0E04               	movlw	4
  4726  000540  D006               	goto	u2550
  4727  000542                     u2555:
  4728  000542  0100               	movlb	0	; () banked
  4729  000544  90D8               	bcf	status,0,c
  4730  000546  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4731  000548  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4732  00054A  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4733  00054C  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4734  00054E                     u2550:
  4735  00054E  2EE8               	decfsz	wreg,f,c
  4736  000550  D7F8               	goto	u2555
  4737  000552  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4738  000556  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4739  00055A  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4740  00055E  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4744  000562  0100               	movlb	0	; () banked
  4745  000564  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4746  000566  0100               	movlb	0	; () banked
  4747  000568  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4748  00056A  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4749  00056C  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4750  00056E  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4754  000570  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4758  000574  0E07               	movlw	7
  4759  000576  0100               	movlb	0	; () banked
  4760  000578  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4761  00057A  0100               	movlb	0	; () banked
  4762  00057C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4763  00057E  0E00               	movlw	0
  4764  000580  0100               	movlb	0	; () banked
  4765  000582  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4766  000584  0100               	movlb	0	; () banked
  4767  000586  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4768  000588  0E00               	movlw	0
  4769  00058A  0100               	movlb	0	; () banked
  4770  00058C  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4771  00058E  0100               	movlb	0	; () banked
  4772  000590  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4773  000592  0E00               	movlw	0
  4774  000594  0100               	movlb	0	; () banked
  4775  000596  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4776  000598  0100               	movlb	0	; () banked
  4777  00059A  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4781  00059C  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4782  0005A0  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4783  0005A4  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4784  0005A8  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4785  0005AC  0E05               	movlw	5
  4786  0005AE                     u2565:
  4787  0005AE  90D8               	bcf	status,0,c
  4788  0005B0  0100               	movlb	0	; () banked
  4789  0005B2  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4790  0005B4  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4791  0005B6  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4792  0005B8  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4793  0005BA  2EE8               	decfsz	wreg,f,c
  4794  0005BC  D7F8               	goto	u2565
  4795  0005BE  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4796  0005C2  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4797  0005C6  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4798  0005CA  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4802  0005CE  C07D  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4803  0005D2                     l2709:
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;inc\CANlib.h: 828: }
  4807                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4808  0005D2  0100               	movlb	0	; () banked
  4809  0005D4  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4810  0005D6  0100               	movlb	0	; () banked
  4811  0005D8  A4D8               	btfss	status,2,c
  4812  0005DA  D089               	goto	l2743
  4813                           
  4814                           ; BSR set to: 0
  4815  0005DC  0EF7               	movlw	247
  4816  0005DE  0100               	movlb	0	; () banked
  4817  0005E0  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  4818  0005E2  A4D8               	btfss	status,2,c
  4819  0005E4  D084               	goto	l2743
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;inc\CANlib.h: 832: {
  4823                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4824  0005E6  010F               	movlb	15	; () banked
  4825  0005E8  8701               	bsf	1,3,b	;volatile
  4826                           
  4827                           ; BSR set to: 15
  4828                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4829  0005EA  0100               	movlb	0	; () banked
  4830  0005EC  5173               	movf	CANSetFilter@filter& (0+255),w,b
  4831  0005EE  0100               	movlb	0	; () banked
  4832  0005F0  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4833  0005F2  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4834  0005F4  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4835  0005F6  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4839  0005F8  C07D  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4843  0005FC  0E00               	movlw	0
  4844  0005FE  0100               	movlb	0	; () banked
  4845  000600  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4846  000602  0100               	movlb	0	; () banked
  4847  000604  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4848  000606  0EFF               	movlw	255
  4849  000608  0100               	movlb	0	; () banked
  4850  00060A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4851  00060C  0100               	movlb	0	; () banked
  4852  00060E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4853  000610  0E00               	movlw	0
  4854  000612  0100               	movlb	0	; () banked
  4855  000614  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4856  000616  0100               	movlb	0	; () banked
  4857  000618  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4858  00061A  0E00               	movlw	0
  4859  00061C  0100               	movlb	0	; () banked
  4860  00061E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4861  000620  0100               	movlb	0	; () banked
  4862  000622  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4866  000624  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4867  000628  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4868  00062C  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4869  000630  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4870  000634  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  4871  000638  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4872  00063C  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4873  000640  0100               	movlb	0	; () banked
  4874  000642  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  4875  000644  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4876  000648  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4877  00064C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4878  000650  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4882  000654  C07D  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4886  000658  0100               	movlb	0	; () banked
  4887  00065A  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4888  00065C  D003               	goto	l455
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4892  00065E  010F               	movlb	15	; () banked
  4893  000660  8101               	bsf	1,0,b	;volatile
  4894  000662  D002               	goto	l456
  4895  000664                     l455:
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;inc\CANlib.h: 844: else
  4899                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4900  000664  010F               	movlb	15	; () banked
  4901  000666  9101               	bcf	1,0,b	;volatile
  4902  000668                     l456:
  4903                           
  4904                           ; BSR set to: 15
  4905                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4906  000668  0100               	movlb	0	; () banked
  4907  00066A  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4908  00066C  D003               	goto	l457
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4912  00066E  010F               	movlb	15	; () banked
  4913  000670  8301               	bsf	1,1,b	;volatile
  4914  000672  D002               	goto	l458
  4915  000674                     l457:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;inc\CANlib.h: 849: else
  4919                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4920  000674  010F               	movlb	15	; () banked
  4921  000676  9301               	bcf	1,1,b	;volatile
  4922  000678                     l458:
  4923                           
  4924                           ; BSR set to: 15
  4925                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4926  000678  0100               	movlb	0	; () banked
  4927  00067A  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4928  00067C  D003               	goto	l459
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4932  00067E  010F               	movlb	15	; () banked
  4933  000680  8B01               	bsf	1,5,b	;volatile
  4934  000682  D002               	goto	l460
  4935  000684                     l459:
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;inc\CANlib.h: 854: else
  4939                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4940  000684  010F               	movlb	15	; () banked
  4941  000686  9B01               	bcf	1,5,b	;volatile
  4942  000688                     l460:
  4943                           
  4944                           ; BSR set to: 15
  4945                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4946  000688  0100               	movlb	0	; () banked
  4947  00068A  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4948  00068C  D003               	goto	l461
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4952  00068E  010F               	movlb	15	; () banked
  4953  000690  8D01               	bsf	1,6,b	;volatile
  4954  000692  D002               	goto	l462
  4955  000694                     l461:
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;inc\CANlib.h: 859: else
  4959                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4960  000694  010F               	movlb	15	; () banked
  4961  000696  9D01               	bcf	1,6,b	;volatile
  4962  000698                     l462:
  4963                           
  4964                           ; BSR set to: 15
  4965                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4966  000698  0100               	movlb	0	; () banked
  4967  00069A  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4968  00069C  D003               	goto	l463
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4972  00069E  010F               	movlb	15	; () banked
  4973  0006A0  8F01               	bsf	1,7,b	;volatile
  4974  0006A2  D002               	goto	l2737
  4975  0006A4                     l463:
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;inc\CANlib.h: 864: else
  4979                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4980  0006A4  010F               	movlb	15	; () banked
  4981  0006A6  9F01               	bcf	1,7,b	;volatile
  4982  0006A8                     l2737:
  4983                           
  4984                           ; BSR set to: 15
  4985                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4986  0006A8  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4987  0006AC  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4988  0006B0  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4989  0006B4  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4990  0006B8  0E16               	movlw	22
  4991  0006BA  D006               	goto	u2640
  4992  0006BC                     u2645:
  4993  0006BC  0100               	movlb	0	; () banked
  4994  0006BE  90D8               	bcf	status,0,c
  4995  0006C0  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4996  0006C2  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4997  0006C4  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4998  0006C6  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4999  0006C8                     u2640:
  5000  0006C8  2EE8               	decfsz	wreg,f,c
  5001  0006CA  D7F8               	goto	u2645
  5002  0006CC  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5003  0006D0  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5004  0006D4  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5005  0006D8  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5009  0006DC  0100               	movlb	0	; () banked
  5010  0006DE  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5011  0006E0  0100               	movlb	0	; () banked
  5012  0006E2  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5013  0006E4  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5014  0006E6  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5015  0006E8  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5019  0006EA  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5020  0006EE                     l2743:
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;inc\CANlib.h: 870: }
  5024                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5025  0006EE  0100               	movlb	0	; () banked
  5026  0006F0  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5027  0006F2  A4D8               	btfss	status,2,c
  5028  0006F4  D089               	goto	l2777
  5029                           
  5030                           ; BSR set to: 0
  5031  0006F6  0EF7               	movlw	247
  5032  0006F8  0100               	movlb	0	; () banked
  5033  0006FA  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5034  0006FC  A4D8               	btfss	status,2,c
  5035  0006FE  D084               	goto	l2777
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;inc\CANlib.h: 873: {
  5039                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5040  000700  010F               	movlb	15	; () banked
  5041  000702  8705               	bsf	5,3,b	;volatile
  5042                           
  5043                           ; BSR set to: 15
  5044                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5045  000704  0100               	movlb	0	; () banked
  5046  000706  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5047  000708  0100               	movlb	0	; () banked
  5048  00070A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5049  00070C  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5050  00070E  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5051  000710  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5055  000712  C07D  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5059  000716  0E00               	movlw	0
  5060  000718  0100               	movlb	0	; () banked
  5061  00071A  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5062  00071C  0100               	movlb	0	; () banked
  5063  00071E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5064  000720  0EFF               	movlw	255
  5065  000722  0100               	movlb	0	; () banked
  5066  000724  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5067  000726  0100               	movlb	0	; () banked
  5068  000728  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5069  00072A  0E00               	movlw	0
  5070  00072C  0100               	movlb	0	; () banked
  5071  00072E  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5072  000730  0100               	movlb	0	; () banked
  5073  000732  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5074  000734  0E00               	movlw	0
  5075  000736  0100               	movlb	0	; () banked
  5076  000738  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5077  00073A  0100               	movlb	0	; () banked
  5078  00073C  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5082  00073E  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5083  000742  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5084  000746  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5085  00074A  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5086  00074E  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5087  000752  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5088  000756  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5089  00075A  0100               	movlb	0	; () banked
  5090  00075C  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5091  00075E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5092  000762  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5093  000766  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5094  00076A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5098  00076E  C07D  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5099                           
  5100                           ; BSR set to: 0
  5101                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5102  000772  0100               	movlb	0	; () banked
  5103  000774  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5104  000776  D003               	goto	l466
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5108  000778  010F               	movlb	15	; () banked
  5109  00077A  8105               	bsf	5,0,b	;volatile
  5110  00077C  D002               	goto	l467
  5111  00077E                     l466:
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;inc\CANlib.h: 885: else
  5115                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5116  00077E  010F               	movlb	15	; () banked
  5117  000780  9105               	bcf	5,0,b	;volatile
  5118  000782                     l467:
  5119                           
  5120                           ; BSR set to: 15
  5121                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5122  000782  0100               	movlb	0	; () banked
  5123  000784  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5124  000786  D003               	goto	l468
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5128  000788  010F               	movlb	15	; () banked
  5129  00078A  8305               	bsf	5,1,b	;volatile
  5130  00078C  D002               	goto	l469
  5131  00078E                     l468:
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;inc\CANlib.h: 890: else
  5135                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5136  00078E  010F               	movlb	15	; () banked
  5137  000790  9305               	bcf	5,1,b	;volatile
  5138  000792                     l469:
  5139                           
  5140                           ; BSR set to: 15
  5141                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5142  000792  0100               	movlb	0	; () banked
  5143  000794  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5144  000796  D003               	goto	l470
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5148  000798  010F               	movlb	15	; () banked
  5149  00079A  8B05               	bsf	5,5,b	;volatile
  5150  00079C  D002               	goto	l471
  5151  00079E                     l470:
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;inc\CANlib.h: 895: else
  5155                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5156  00079E  010F               	movlb	15	; () banked
  5157  0007A0  9B05               	bcf	5,5,b	;volatile
  5158  0007A2                     l471:
  5159                           
  5160                           ; BSR set to: 15
  5161                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5162  0007A2  0100               	movlb	0	; () banked
  5163  0007A4  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5164  0007A6  D003               	goto	l472
  5165                           
  5166                           ; BSR set to: 0
  5167                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5168  0007A8  010F               	movlb	15	; () banked
  5169  0007AA  8D05               	bsf	5,6,b	;volatile
  5170  0007AC  D002               	goto	l473
  5171  0007AE                     l472:
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;inc\CANlib.h: 900: else
  5175                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5176  0007AE  010F               	movlb	15	; () banked
  5177  0007B0  9D05               	bcf	5,6,b	;volatile
  5178  0007B2                     l473:
  5179                           
  5180                           ; BSR set to: 15
  5181                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5182  0007B2  0100               	movlb	0	; () banked
  5183  0007B4  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5184  0007B6  D003               	goto	l474
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5188  0007B8  010F               	movlb	15	; () banked
  5189  0007BA  8F05               	bsf	5,7,b	;volatile
  5190  0007BC  D002               	goto	l2771
  5191  0007BE                     l474:
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;inc\CANlib.h: 905: else
  5195                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5196  0007BE  010F               	movlb	15	; () banked
  5197  0007C0  9F05               	bcf	5,7,b	;volatile
  5198  0007C2                     l2771:
  5199                           
  5200                           ; BSR set to: 15
  5201                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5202  0007C2  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5203  0007C6  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5204  0007CA  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5205  0007CE  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5206  0007D2  0E16               	movlw	22
  5207  0007D4  D006               	goto	u2720
  5208  0007D6                     u2725:
  5209  0007D6  0100               	movlb	0	; () banked
  5210  0007D8  90D8               	bcf	status,0,c
  5211  0007DA  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5212  0007DC  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5213  0007DE  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5214  0007E0  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5215  0007E2                     u2720:
  5216  0007E2  2EE8               	decfsz	wreg,f,c
  5217  0007E4  D7F8               	goto	u2725
  5218  0007E6  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5219  0007EA  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5220  0007EE  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5221  0007F2  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5225  0007F6  0100               	movlb	0	; () banked
  5226  0007F8  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5227  0007FA  0100               	movlb	0	; () banked
  5228  0007FC  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5229  0007FE  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5230  000800  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5231  000802  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5235  000804  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5236  000808                     l2777:
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;inc\CANlib.h: 911: }
  5240                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5241  000808  0E02               	movlw	2
  5242  00080A  0100               	movlb	0	; () banked
  5243  00080C  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5244  00080E  A4D8               	btfss	status,2,c
  5245  000810  D089               	goto	l2811
  5246                           
  5247                           ; BSR set to: 0
  5248  000812  0EF7               	movlw	247
  5249  000814  0100               	movlb	0	; () banked
  5250  000816  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5251  000818  A4D8               	btfss	status,2,c
  5252  00081A  D084               	goto	l2811
  5253                           
  5254                           ; BSR set to: 0
  5255                           ;inc\CANlib.h: 915: {
  5256                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5257  00081C  010F               	movlb	15	; () banked
  5258  00081E  8709               	bsf	9,3,b	;volatile
  5259                           
  5260                           ; BSR set to: 15
  5261                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5262  000820  0100               	movlb	0	; () banked
  5263  000822  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5264  000824  0100               	movlb	0	; () banked
  5265  000826  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5266  000828  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5267  00082A  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5268  00082C  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5272  00082E  C07D  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5276  000832  0E00               	movlw	0
  5277  000834  0100               	movlb	0	; () banked
  5278  000836  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5279  000838  0100               	movlb	0	; () banked
  5280  00083A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5281  00083C  0EFF               	movlw	255
  5282  00083E  0100               	movlb	0	; () banked
  5283  000840  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5284  000842  0100               	movlb	0	; () banked
  5285  000844  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5286  000846  0E00               	movlw	0
  5287  000848  0100               	movlb	0	; () banked
  5288  00084A  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5289  00084C  0100               	movlb	0	; () banked
  5290  00084E  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5291  000850  0E00               	movlw	0
  5292  000852  0100               	movlb	0	; () banked
  5293  000854  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5294  000856  0100               	movlb	0	; () banked
  5295  000858  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5299  00085A  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5300  00085E  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5301  000862  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5302  000866  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5303  00086A  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5304  00086E  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5305  000872  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5306  000876  0100               	movlb	0	; () banked
  5307  000878  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5308  00087A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5309  00087E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5310  000882  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5311  000886  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5315  00088A  C07D  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5319  00088E  0100               	movlb	0	; () banked
  5320  000890  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5321  000892  D003               	goto	l477
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5325  000894  010F               	movlb	15	; () banked
  5326  000896  8109               	bsf	9,0,b	;volatile
  5327  000898  D002               	goto	l478
  5328  00089A                     l477:
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;inc\CANlib.h: 927: else
  5332                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5333  00089A  010F               	movlb	15	; () banked
  5334  00089C  9109               	bcf	9,0,b	;volatile
  5335  00089E                     l478:
  5336                           
  5337                           ; BSR set to: 15
  5338                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5339  00089E  0100               	movlb	0	; () banked
  5340  0008A0  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5341  0008A2  D003               	goto	l479
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5345  0008A4  010F               	movlb	15	; () banked
  5346  0008A6  8309               	bsf	9,1,b	;volatile
  5347  0008A8  D002               	goto	l480
  5348  0008AA                     l479:
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;inc\CANlib.h: 932: else
  5352                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5353  0008AA  010F               	movlb	15	; () banked
  5354  0008AC  9309               	bcf	9,1,b	;volatile
  5355  0008AE                     l480:
  5356                           
  5357                           ; BSR set to: 15
  5358                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5359  0008AE  0100               	movlb	0	; () banked
  5360  0008B0  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5361  0008B2  D003               	goto	l481
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5365  0008B4  010F               	movlb	15	; () banked
  5366  0008B6  8B09               	bsf	9,5,b	;volatile
  5367  0008B8  D002               	goto	l482
  5368  0008BA                     l481:
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;inc\CANlib.h: 937: else
  5372                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5373  0008BA  010F               	movlb	15	; () banked
  5374  0008BC  9B09               	bcf	9,5,b	;volatile
  5375  0008BE                     l482:
  5376                           
  5377                           ; BSR set to: 15
  5378                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5379  0008BE  0100               	movlb	0	; () banked
  5380  0008C0  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5381  0008C2  D003               	goto	l483
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5385  0008C4  010F               	movlb	15	; () banked
  5386  0008C6  8D09               	bsf	9,6,b	;volatile
  5387  0008C8  D002               	goto	l484
  5388  0008CA                     l483:
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;inc\CANlib.h: 942: else
  5392                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5393  0008CA  010F               	movlb	15	; () banked
  5394  0008CC  9D09               	bcf	9,6,b	;volatile
  5395  0008CE                     l484:
  5396                           
  5397                           ; BSR set to: 15
  5398                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5399  0008CE  0100               	movlb	0	; () banked
  5400  0008D0  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5401  0008D2  D003               	goto	l485
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5405  0008D4  010F               	movlb	15	; () banked
  5406  0008D6  8F09               	bsf	9,7,b	;volatile
  5407  0008D8  D002               	goto	l2805
  5408  0008DA                     l485:
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;inc\CANlib.h: 947: else
  5412                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5413  0008DA  010F               	movlb	15	; () banked
  5414  0008DC  9F09               	bcf	9,7,b	;volatile
  5415  0008DE                     l2805:
  5416                           
  5417                           ; BSR set to: 15
  5418                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5419  0008DE  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5420  0008E2  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5421  0008E6  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5422  0008EA  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5423  0008EE  0E16               	movlw	22
  5424  0008F0  D006               	goto	u2800
  5425  0008F2                     u2805:
  5426  0008F2  0100               	movlb	0	; () banked
  5427  0008F4  90D8               	bcf	status,0,c
  5428  0008F6  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5429  0008F8  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5430  0008FA  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5431  0008FC  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5432  0008FE                     u2800:
  5433  0008FE  2EE8               	decfsz	wreg,f,c
  5434  000900  D7F8               	goto	u2805
  5435  000902  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5436  000906  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5437  00090A  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5438  00090E  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5439                           
  5440                           ; BSR set to: 0
  5441                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5442  000912  0100               	movlb	0	; () banked
  5443  000914  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5444  000916  0100               	movlb	0	; () banked
  5445  000918  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5446  00091A  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5447  00091C  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5448  00091E  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5452  000920  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5453  000924                     l2811:
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;inc\CANlib.h: 953: }
  5457                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5458  000924  0E03               	movlw	3
  5459  000926  0100               	movlb	0	; () banked
  5460  000928  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5461  00092A  A4D8               	btfss	status,2,c
  5462  00092C  D089               	goto	l2845
  5463                           
  5464                           ; BSR set to: 0
  5465  00092E  0EF7               	movlw	247
  5466  000930  0100               	movlb	0	; () banked
  5467  000932  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5468  000934  A4D8               	btfss	status,2,c
  5469  000936  D084               	goto	l2845
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;inc\CANlib.h: 956: {
  5473                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5474  000938  010F               	movlb	15	; () banked
  5475  00093A  870D               	bsf	13,3,b	;volatile
  5476                           
  5477                           ; BSR set to: 15
  5478                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5479  00093C  0100               	movlb	0	; () banked
  5480  00093E  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5481  000940  0100               	movlb	0	; () banked
  5482  000942  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5483  000944  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5484  000946  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5485  000948  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5489  00094A  C07D  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5493  00094E  0E00               	movlw	0
  5494  000950  0100               	movlb	0	; () banked
  5495  000952  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5496  000954  0100               	movlb	0	; () banked
  5497  000956  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5498  000958  0EFF               	movlw	255
  5499  00095A  0100               	movlb	0	; () banked
  5500  00095C  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5501  00095E  0100               	movlb	0	; () banked
  5502  000960  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5503  000962  0E00               	movlw	0
  5504  000964  0100               	movlb	0	; () banked
  5505  000966  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5506  000968  0100               	movlb	0	; () banked
  5507  00096A  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5508  00096C  0E00               	movlw	0
  5509  00096E  0100               	movlb	0	; () banked
  5510  000970  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5511  000972  0100               	movlb	0	; () banked
  5512  000974  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5516  000976  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5517  00097A  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5518  00097E  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5519  000982  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5520  000986  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5521  00098A  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5522  00098E  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5523  000992  0100               	movlb	0	; () banked
  5524  000994  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5525  000996  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5526  00099A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5527  00099E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5528  0009A2  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5532  0009A6  C07D  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5533                           
  5534                           ; BSR set to: 0
  5535                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5536  0009AA  0100               	movlb	0	; () banked
  5537  0009AC  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5538  0009AE  D003               	goto	l488
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5542  0009B0  010F               	movlb	15	; () banked
  5543  0009B2  810D               	bsf	13,0,b	;volatile
  5544  0009B4  D002               	goto	l489
  5545  0009B6                     l488:
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;inc\CANlib.h: 968: else
  5549                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5550  0009B6  010F               	movlb	15	; () banked
  5551  0009B8  910D               	bcf	13,0,b	;volatile
  5552  0009BA                     l489:
  5553                           
  5554                           ; BSR set to: 15
  5555                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5556  0009BA  0100               	movlb	0	; () banked
  5557  0009BC  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5558  0009BE  D003               	goto	l490
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5562  0009C0  010F               	movlb	15	; () banked
  5563  0009C2  830D               	bsf	13,1,b	;volatile
  5564  0009C4  D002               	goto	l491
  5565  0009C6                     l490:
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;inc\CANlib.h: 973: else
  5569                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5570  0009C6  010F               	movlb	15	; () banked
  5571  0009C8  930D               	bcf	13,1,b	;volatile
  5572  0009CA                     l491:
  5573                           
  5574                           ; BSR set to: 15
  5575                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5576  0009CA  0100               	movlb	0	; () banked
  5577  0009CC  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5578  0009CE  D003               	goto	l492
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5582  0009D0  010F               	movlb	15	; () banked
  5583  0009D2  8B0D               	bsf	13,5,b	;volatile
  5584  0009D4  D002               	goto	l493
  5585  0009D6                     l492:
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;inc\CANlib.h: 978: else
  5589                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5590  0009D6  010F               	movlb	15	; () banked
  5591  0009D8  9B0D               	bcf	13,5,b	;volatile
  5592  0009DA                     l493:
  5593                           
  5594                           ; BSR set to: 15
  5595                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5596  0009DA  0100               	movlb	0	; () banked
  5597  0009DC  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5598  0009DE  D003               	goto	l494
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5602  0009E0  010F               	movlb	15	; () banked
  5603  0009E2  8D0D               	bsf	13,6,b	;volatile
  5604  0009E4  D002               	goto	l495
  5605  0009E6                     l494:
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;inc\CANlib.h: 983: else
  5609                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5610  0009E6  010F               	movlb	15	; () banked
  5611  0009E8  9D0D               	bcf	13,6,b	;volatile
  5612  0009EA                     l495:
  5613                           
  5614                           ; BSR set to: 15
  5615                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5616  0009EA  0100               	movlb	0	; () banked
  5617  0009EC  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5618  0009EE  D003               	goto	l496
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5622  0009F0  010F               	movlb	15	; () banked
  5623  0009F2  8F0D               	bsf	13,7,b	;volatile
  5624  0009F4  D002               	goto	l2839
  5625  0009F6                     l496:
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;inc\CANlib.h: 988: else
  5629                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5630  0009F6  010F               	movlb	15	; () banked
  5631  0009F8  9F0D               	bcf	13,7,b	;volatile
  5632  0009FA                     l2839:
  5633                           
  5634                           ; BSR set to: 15
  5635                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5636  0009FA  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5637  0009FE  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5638  000A02  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5639  000A06  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5640  000A0A  0E16               	movlw	22
  5641  000A0C  D006               	goto	u2880
  5642  000A0E                     u2885:
  5643  000A0E  0100               	movlb	0	; () banked
  5644  000A10  90D8               	bcf	status,0,c
  5645  000A12  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5646  000A14  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5647  000A16  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5648  000A18  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5649  000A1A                     u2880:
  5650  000A1A  2EE8               	decfsz	wreg,f,c
  5651  000A1C  D7F8               	goto	u2885
  5652  000A1E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5653  000A22  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5654  000A26  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5655  000A2A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5659  000A2E  0100               	movlb	0	; () banked
  5660  000A30  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5661  000A32  0100               	movlb	0	; () banked
  5662  000A34  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5663  000A36  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5664  000A38  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5665  000A3A  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5669  000A3C  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5670  000A40                     l2845:
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;inc\CANlib.h: 994: }
  5674                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5675  000A40  0E04               	movlw	4
  5676  000A42  0100               	movlb	0	; () banked
  5677  000A44  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5678  000A46  A4D8               	btfss	status,2,c
  5679  000A48  D089               	goto	l2879
  5680                           
  5681                           ; BSR set to: 0
  5682  000A4A  0EF7               	movlw	247
  5683  000A4C  0100               	movlb	0	; () banked
  5684  000A4E  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5685  000A50  A4D8               	btfss	status,2,c
  5686  000A52  D084               	goto	l2879
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;inc\CANlib.h: 997: {
  5690                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5691  000A54  010F               	movlb	15	; () banked
  5692  000A56  8711               	bsf	17,3,b	;volatile
  5693                           
  5694                           ; BSR set to: 15
  5695                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5696  000A58  0100               	movlb	0	; () banked
  5697  000A5A  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5698  000A5C  0100               	movlb	0	; () banked
  5699  000A5E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5700  000A60  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5701  000A62  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5702  000A64  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5706  000A66  C07D  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5710  000A6A  0E00               	movlw	0
  5711  000A6C  0100               	movlb	0	; () banked
  5712  000A6E  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5713  000A70  0100               	movlb	0	; () banked
  5714  000A72  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5715  000A74  0EFF               	movlw	255
  5716  000A76  0100               	movlb	0	; () banked
  5717  000A78  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5718  000A7A  0100               	movlb	0	; () banked
  5719  000A7C  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5720  000A7E  0E00               	movlw	0
  5721  000A80  0100               	movlb	0	; () banked
  5722  000A82  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5723  000A84  0100               	movlb	0	; () banked
  5724  000A86  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5725  000A88  0E00               	movlw	0
  5726  000A8A  0100               	movlb	0	; () banked
  5727  000A8C  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5728  000A8E  0100               	movlb	0	; () banked
  5729  000A90  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5733  000A92  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5734  000A96  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5735  000A9A  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5736  000A9E  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5737  000AA2  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5738  000AA6  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5739  000AAA  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5740  000AAE  0100               	movlb	0	; () banked
  5741  000AB0  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5742  000AB2  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5743  000AB6  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5744  000ABA  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5745  000ABE  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5749  000AC2  C07D  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5750                           
  5751                           ; BSR set to: 0
  5752                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5753  000AC6  0100               	movlb	0	; () banked
  5754  000AC8  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5755  000ACA  D003               	goto	l499
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5759  000ACC  010F               	movlb	15	; () banked
  5760  000ACE  8111               	bsf	17,0,b	;volatile
  5761  000AD0  D002               	goto	l500
  5762  000AD2                     l499:
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;inc\CANlib.h: 1009: else
  5766                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5767  000AD2  010F               	movlb	15	; () banked
  5768  000AD4  9111               	bcf	17,0,b	;volatile
  5769  000AD6                     l500:
  5770                           
  5771                           ; BSR set to: 15
  5772                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5773  000AD6  0100               	movlb	0	; () banked
  5774  000AD8  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5775  000ADA  D003               	goto	l501
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5779  000ADC  010F               	movlb	15	; () banked
  5780  000ADE  8311               	bsf	17,1,b	;volatile
  5781  000AE0  D002               	goto	l502
  5782  000AE2                     l501:
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;inc\CANlib.h: 1014: else
  5786                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5787  000AE2  010F               	movlb	15	; () banked
  5788  000AE4  9311               	bcf	17,1,b	;volatile
  5789  000AE6                     l502:
  5790                           
  5791                           ; BSR set to: 15
  5792                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5793  000AE6  0100               	movlb	0	; () banked
  5794  000AE8  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5795  000AEA  D003               	goto	l503
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5799  000AEC  010F               	movlb	15	; () banked
  5800  000AEE  8B11               	bsf	17,5,b	;volatile
  5801  000AF0  D002               	goto	l504
  5802  000AF2                     l503:
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;inc\CANlib.h: 1019: else
  5806                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5807  000AF2  010F               	movlb	15	; () banked
  5808  000AF4  9B11               	bcf	17,5,b	;volatile
  5809  000AF6                     l504:
  5810                           
  5811                           ; BSR set to: 15
  5812                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5813  000AF6  0100               	movlb	0	; () banked
  5814  000AF8  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5815  000AFA  D003               	goto	l505
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5819  000AFC  010F               	movlb	15	; () banked
  5820  000AFE  8D11               	bsf	17,6,b	;volatile
  5821  000B00  D002               	goto	l506
  5822  000B02                     l505:
  5823                           
  5824                           ; BSR set to: 0
  5825                           ;inc\CANlib.h: 1024: else
  5826                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5827  000B02  010F               	movlb	15	; () banked
  5828  000B04  9D11               	bcf	17,6,b	;volatile
  5829  000B06                     l506:
  5830                           
  5831                           ; BSR set to: 15
  5832                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5833  000B06  0100               	movlb	0	; () banked
  5834  000B08  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5835  000B0A  D003               	goto	l507
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5839  000B0C  010F               	movlb	15	; () banked
  5840  000B0E  8F11               	bsf	17,7,b	;volatile
  5841  000B10  D002               	goto	l2873
  5842  000B12                     l507:
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;inc\CANlib.h: 1029: else
  5846                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5847  000B12  010F               	movlb	15	; () banked
  5848  000B14  9F11               	bcf	17,7,b	;volatile
  5849  000B16                     l2873:
  5850                           
  5851                           ; BSR set to: 15
  5852                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5853  000B16  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5854  000B1A  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5855  000B1E  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5856  000B22  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5857  000B26  0E16               	movlw	22
  5858  000B28  D006               	goto	u2960
  5859  000B2A                     u2965:
  5860  000B2A  0100               	movlb	0	; () banked
  5861  000B2C  90D8               	bcf	status,0,c
  5862  000B2E  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5863  000B30  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5864  000B32  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5865  000B34  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5866  000B36                     u2960:
  5867  000B36  2EE8               	decfsz	wreg,f,c
  5868  000B38  D7F8               	goto	u2965
  5869  000B3A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5870  000B3E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5871  000B42  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5872  000B46  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5876  000B4A  0100               	movlb	0	; () banked
  5877  000B4C  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5878  000B4E  0100               	movlb	0	; () banked
  5879  000B50  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5880  000B52  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5881  000B54  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5882  000B56  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5883                           
  5884                           ; BSR set to: 0
  5885                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5886  000B58  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5887  000B5C                     l2879:
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;inc\CANlib.h: 1035: }
  5891                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5892  000B5C  0E05               	movlw	5
  5893  000B5E  0100               	movlb	0	; () banked
  5894  000B60  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5895  000B62  A4D8               	btfss	status,2,c
  5896  000B64  0012               	return	
  5897                           
  5898                           ; BSR set to: 0
  5899  000B66  0EF7               	movlw	247
  5900  000B68  0100               	movlb	0	; () banked
  5901  000B6A  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5902  000B6C  A4D8               	btfss	status,2,c
  5903  000B6E  0012               	return	
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;inc\CANlib.h: 1038: {
  5907                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5908  000B70  010F               	movlb	15	; () banked
  5909  000B72  8715               	bsf	21,3,b	;volatile
  5910                           
  5911                           ; BSR set to: 15
  5912                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5913  000B74  0100               	movlb	0	; () banked
  5914  000B76  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5915  000B78  0100               	movlb	0	; () banked
  5916  000B7A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5917  000B7C  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5918  000B7E  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5919  000B80  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5923  000B82  C07D  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5927  000B86  0E00               	movlw	0
  5928  000B88  0100               	movlb	0	; () banked
  5929  000B8A  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5930  000B8C  0100               	movlb	0	; () banked
  5931  000B8E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5932  000B90  0EFF               	movlw	255
  5933  000B92  0100               	movlb	0	; () banked
  5934  000B94  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5935  000B96  0100               	movlb	0	; () banked
  5936  000B98  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5937  000B9A  0E00               	movlw	0
  5938  000B9C  0100               	movlb	0	; () banked
  5939  000B9E  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5940  000BA0  0100               	movlb	0	; () banked
  5941  000BA2  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5942  000BA4  0E00               	movlw	0
  5943  000BA6  0100               	movlb	0	; () banked
  5944  000BA8  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5945  000BAA  0100               	movlb	0	; () banked
  5946  000BAC  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5950  000BAE  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5951  000BB2  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5952  000BB6  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5953  000BBA  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5954  000BBE  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5955  000BC2  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5956  000BC6  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5957  000BCA  0100               	movlb	0	; () banked
  5958  000BCC  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5959  000BCE  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5960  000BD2  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5961  000BD6  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5962  000BDA  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5963                           
  5964                           ; BSR set to: 0
  5965                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5966  000BDE  C07D  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5970  000BE2  0100               	movlb	0	; () banked
  5971  000BE4  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5972  000BE6  D003               	goto	l510
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5976  000BE8  010F               	movlb	15	; () banked
  5977  000BEA  8115               	bsf	21,0,b	;volatile
  5978  000BEC  D002               	goto	l511
  5979  000BEE                     l510:
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;inc\CANlib.h: 1050: else
  5983                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5984  000BEE  010F               	movlb	15	; () banked
  5985  000BF0  9115               	bcf	21,0,b	;volatile
  5986  000BF2                     l511:
  5987                           
  5988                           ; BSR set to: 15
  5989                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5990  000BF2  0100               	movlb	0	; () banked
  5991  000BF4  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5992  000BF6  D003               	goto	l512
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5996  000BF8  010F               	movlb	15	; () banked
  5997  000BFA  8315               	bsf	21,1,b	;volatile
  5998  000BFC  D002               	goto	l513
  5999  000BFE                     l512:
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;inc\CANlib.h: 1055: else
  6003                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6004  000BFE  010F               	movlb	15	; () banked
  6005  000C00  9315               	bcf	21,1,b	;volatile
  6006  000C02                     l513:
  6007                           
  6008                           ; BSR set to: 15
  6009                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6010  000C02  0100               	movlb	0	; () banked
  6011  000C04  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6012  000C06  D003               	goto	l514
  6013                           
  6014                           ; BSR set to: 0
  6015                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6016  000C08  010F               	movlb	15	; () banked
  6017  000C0A  8B15               	bsf	21,5,b	;volatile
  6018  000C0C  D002               	goto	l515
  6019  000C0E                     l514:
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;inc\CANlib.h: 1060: else
  6023                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6024  000C0E  010F               	movlb	15	; () banked
  6025  000C10  9B15               	bcf	21,5,b	;volatile
  6026  000C12                     l515:
  6027                           
  6028                           ; BSR set to: 15
  6029                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6030  000C12  0100               	movlb	0	; () banked
  6031  000C14  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6032  000C16  D003               	goto	l516
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6036  000C18  010F               	movlb	15	; () banked
  6037  000C1A  8D15               	bsf	21,6,b	;volatile
  6038  000C1C  D002               	goto	l517
  6039  000C1E                     l516:
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;inc\CANlib.h: 1065: else
  6043                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6044  000C1E  010F               	movlb	15	; () banked
  6045  000C20  9D15               	bcf	21,6,b	;volatile
  6046  000C22                     l517:
  6047                           
  6048                           ; BSR set to: 15
  6049                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6050  000C22  0100               	movlb	0	; () banked
  6051  000C24  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6052  000C26  D003               	goto	l518
  6053                           
  6054                           ; BSR set to: 0
  6055                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6056  000C28  010F               	movlb	15	; () banked
  6057  000C2A  8F15               	bsf	21,7,b	;volatile
  6058  000C2C  D002               	goto	l2907
  6059  000C2E                     l518:
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;inc\CANlib.h: 1070: else
  6063                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6064  000C2E  010F               	movlb	15	; () banked
  6065  000C30  9F15               	bcf	21,7,b	;volatile
  6066  000C32                     l2907:
  6067                           
  6068                           ; BSR set to: 15
  6069                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6070  000C32  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  6071  000C36  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6072  000C3A  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6073  000C3E  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6074  000C42  0E16               	movlw	22
  6075  000C44  D006               	goto	u3040
  6076  000C46                     u3045:
  6077  000C46  0100               	movlb	0	; () banked
  6078  000C48  90D8               	bcf	status,0,c
  6079  000C4A  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6080  000C4C  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6081  000C4E  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6082  000C50  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  6083  000C52                     u3040:
  6084  000C52  2EE8               	decfsz	wreg,f,c
  6085  000C54  D7F8               	goto	u3045
  6086  000C56  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6087  000C5A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6088  000C5E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6089  000C62  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6090                           
  6091                           ; BSR set to: 0
  6092                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6093  000C66  0100               	movlb	0	; () banked
  6094  000C68  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  6095  000C6A  0100               	movlb	0	; () banked
  6096  000C6C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6097  000C6E  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6098  000C70  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6099  000C72  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6103  000C74  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6104  000C78  0012               	return	
  6105  000C7A                     __end_of_CANSetFilter:
  6106                           	opt stack 0
  6107                           tblptru	equ	0xFF8
  6108                           tblptrh	equ	0xFF7
  6109                           tblptrl	equ	0xFF6
  6110                           tablat	equ	0xFF5
  6111                           prodh	equ	0xFF4
  6112                           prodl	equ	0xFF3
  6113                           intcon	equ	0xFF2
  6114                           intcon2	equ	0xFF1
  6115                           postinc0	equ	0xFEE
  6116                           wreg	equ	0xFE8
  6117                           postdec1	equ	0xFE5
  6118                           fsr1l	equ	0xFE1
  6119                           indf2	equ	0xFDF
  6120                           fsr2h	equ	0xFDA
  6121                           fsr2l	equ	0xFD9
  6122                           status	equ	0xFD8
  6123                           
  6124 ;; *************** function _CANOperationMode *****************
  6125 ;; Defined at:
  6126 ;;		line 206 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;  mode            1    wreg     enum E16838
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  mode            1   19[BANK0 ] enum E16838
  6131 ;; Return value:  Size  Location     Type
  6132 ;;		None               void
  6133 ;; Registers used:
  6134 ;;		wreg, status,2, status,0
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6140 ;;      Params:         0       0       0       0
  6141 ;;      Locals:         0       1       0       0
  6142 ;;      Temps:          0       0       0       0
  6143 ;;      Totals:         0       1       0       0
  6144 ;;Total ram usage:        1 bytes
  6145 ;; Hardware stack levels used:    1
  6146 ;; Hardware stack levels required when called:    5
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_CANInitialize
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text11
  6155  002588                     __ptext11:
  6156                           	opt stack 0
  6157  002588                     _CANOperationMode:
  6158                           	opt stack 23
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;incstack = 0
  6162                           ;CANOperationMode@mode stored from wreg
  6163  002588  0100               	movlb	0	; () banked
  6164  00258A  6F73               	movwf	CANOperationMode@mode& (0+255),b
  6165                           
  6166                           ;inc\CANlib.h: 208: CANCON = mode;
  6167  00258C  C073  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6168  002590                     l2503:
  6169  002590  506E               	movf	3950,w,c	;volatile
  6170  002592  0BE0               	andlw	224
  6171  002594  0100               	movlb	0	; () banked
  6172  002596  1973               	xorwf	CANOperationMode@mode& (0+255),w,b
  6173  002598  B4D8               	btfsc	status,2,c
  6174  00259A  0012               	return	
  6175  00259C  D7F9               	goto	l2503
  6176  00259E                     __end_of_CANOperationMode:
  6177                           	opt stack 0
  6178                           tblptru	equ	0xFF8
  6179                           tblptrh	equ	0xFF7
  6180                           tblptrl	equ	0xFF6
  6181                           tablat	equ	0xFF5
  6182                           prodh	equ	0xFF4
  6183                           prodl	equ	0xFF3
  6184                           intcon	equ	0xFF2
  6185                           intcon2	equ	0xFF1
  6186                           postinc0	equ	0xFEE
  6187                           wreg	equ	0xFE8
  6188                           postdec1	equ	0xFE5
  6189                           fsr1l	equ	0xFE1
  6190                           indf2	equ	0xFDF
  6191                           fsr2h	equ	0xFDA
  6192                           fsr2l	equ	0xFD9
  6193                           status	equ	0xFD8
  6194                           
  6195 ;; *************** function _calibrazione *****************
  6196 ;; Defined at:
  6197 ;;		line 172 in file "newmain.c"
  6198 ;; Parameters:    Size  Location     Type
  6199 ;;		None
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;		None
  6202 ;; Return value:  Size  Location     Type
  6203 ;;		None               void
  6204 ;; Registers used:
  6205 ;;		wreg, status,2, status,0, cstack
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/0
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6211 ;;      Params:         0       0       0       0
  6212 ;;      Locals:         0       0       0       0
  6213 ;;      Temps:          0       0       0       0
  6214 ;;      Totals:         0       0       0       0
  6215 ;;Total ram usage:        0 bytes
  6216 ;; Hardware stack levels used:    1
  6217 ;; Hardware stack levels required when called:    6
  6218 ;; This function calls:
  6219 ;;		_BusyADC
  6220 ;;		_ConvertADC
  6221 ;;		_ReadADC
  6222 ;;		___lwdiv
  6223 ;; This function is called by:
  6224 ;;		_main
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text12
  6229  002412                     __ptext12:
  6230                           	opt stack 0
  6231  002412                     _calibrazione:
  6232                           	opt stack 24
  6233                           
  6234                           ;newmain.c: 173: ConvertADC();
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;incstack = 0
  6238  002412  EC06  F013         	call	_ConvertADC	;wreg free
  6239  002416                     l3469:
  6240  002416  ECEC  F012         	call	_BusyADC	;wreg free
  6241  00241A  0900               	iorlw	0
  6242  00241C  A4D8               	btfss	status,2,c
  6243  00241E  D7FB               	goto	l3469
  6244                           
  6245                           ;newmain.c: 175: ADCResult = ReadADC();
  6246  002420  ECDA  F012         	call	_ReadADC	;wreg free
  6247  002424  C073  F0AD         	movff	?_ReadADC,_ADCResult
  6248  002428  C074  F0AE         	movff	?_ReadADC+1,_ADCResult+1
  6249                           
  6250                           ;newmain.c: 176: calibration = (ADCResult - 511) / 45;
  6251  00242C  0E01               	movlw	1
  6252  00242E  0100               	movlb	0	; () banked
  6253  002430  25AD               	addwf	_ADCResult& (0+255),w,b
  6254  002432  0100               	movlb	0	; () banked
  6255  002434  6F73               	movwf	___lwdiv@dividend& (0+255),b
  6256  002436  0EFE               	movlw	254
  6257  002438  0100               	movlb	0	; () banked
  6258  00243A  21AE               	addwfc	(_ADCResult+1)& (0+255),w,b
  6259  00243C  0100               	movlb	0	; () banked
  6260  00243E  6F74               	movwf	(___lwdiv@dividend+1)& (0+255),b
  6261  002440  0E00               	movlw	0
  6262  002442  0100               	movlb	0	; () banked
  6263  002444  6F76               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6264  002446  0E2D               	movlw	45
  6265  002448  6F75               	movwf	___lwdiv@divisor& (0+255),b
  6266  00244A  EC35  F011         	call	___lwdiv	;wreg free
  6267  00244E  C073  F011         	movff	?___lwdiv,_calibration
  6268  002452  C074  F012         	movff	?___lwdiv+1,_calibration+1
  6269  002456  0012               	return		;funcret
  6270  002458                     __end_of_calibrazione:
  6271                           	opt stack 0
  6272                           tblptru	equ	0xFF8
  6273                           tblptrh	equ	0xFF7
  6274                           tblptrl	equ	0xFF6
  6275                           tablat	equ	0xFF5
  6276                           prodh	equ	0xFF4
  6277                           prodl	equ	0xFF3
  6278                           intcon	equ	0xFF2
  6279                           intcon2	equ	0xFF1
  6280                           postinc0	equ	0xFEE
  6281                           wreg	equ	0xFE8
  6282                           postdec1	equ	0xFE5
  6283                           fsr1l	equ	0xFE1
  6284                           indf2	equ	0xFDF
  6285                           fsr2h	equ	0xFDA
  6286                           fsr2l	equ	0xFD9
  6287                           status	equ	0xFD8
  6288                           
  6289 ;; *************** function ___lwdiv *****************
  6290 ;; Defined at:
  6291 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  dividend        2   19[BANK0 ] unsigned int 
  6294 ;;  divisor         2   21[BANK0 ] unsigned int 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;  quotient        2   23[BANK0 ] unsigned int 
  6297 ;;  counter         1   25[BANK0 ] unsigned char 
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  2   19[BANK0 ] unsigned int 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2, status,0
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6307 ;;      Params:         0       4       0       0
  6308 ;;      Locals:         0       3       0       0
  6309 ;;      Temps:          0       0       0       0
  6310 ;;      Totals:         0       7       0       0
  6311 ;;Total ram usage:        7 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; Hardware stack levels required when called:    5
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		_calibrazione
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text13
  6322  00226A                     __ptext13:
  6323                           	opt stack 0
  6324  00226A                     ___lwdiv:
  6325                           	opt stack 24
  6326                           
  6327                           ;incstack = 0
  6328  00226A  0E00               	movlw	0
  6329  00226C  0100               	movlb	0	; () banked
  6330  00226E  6F78               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6331  002270  0E00               	movlw	0
  6332  002272  6F77               	movwf	___lwdiv@quotient& (0+255),b
  6333                           
  6334                           ; BSR set to: 0
  6335  002274  0100               	movlb	0	; () banked
  6336  002276  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6337  002278  0100               	movlb	0	; () banked
  6338  00227A  1176               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6339  00227C  B4D8               	btfsc	status,2,c
  6340  00227E  D02C               	goto	l1106
  6341                           
  6342                           ; BSR set to: 0
  6343  002280  0E01               	movlw	1
  6344  002282  0100               	movlb	0	; () banked
  6345  002284  6F79               	movwf	___lwdiv@counter& (0+255),b
  6346  002286  D006               	goto	l3243
  6347  002288                     l3241:
  6348                           
  6349                           ; BSR set to: 0
  6350  002288  0100               	movlb	0	; () banked
  6351  00228A  90D8               	bcf	status,0,c
  6352  00228C  3775               	rlcf	___lwdiv@divisor& (0+255),f,b
  6353  00228E  3776               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6354  002290  0100               	movlb	0	; () banked
  6355  002292  2B79               	incf	___lwdiv@counter& (0+255),f,b
  6356  002294                     l3243:
  6357                           
  6358                           ; BSR set to: 0
  6359  002294  0100               	movlb	0	; () banked
  6360  002296  AF76               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6361  002298  D7F7               	goto	l3241
  6362  00229A                     l3245:
  6363                           
  6364                           ; BSR set to: 0
  6365  00229A  0100               	movlb	0	; () banked
  6366  00229C  90D8               	bcf	status,0,c
  6367  00229E  3777               	rlcf	___lwdiv@quotient& (0+255),f,b
  6368  0022A0  3778               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6369                           
  6370                           ; BSR set to: 0
  6371  0022A2  0100               	movlb	0	; () banked
  6372  0022A4  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6373  0022A6  0100               	movlb	0	; () banked
  6374  0022A8  5D73               	subwf	___lwdiv@dividend& (0+255),w,b
  6375  0022AA  0100               	movlb	0	; () banked
  6376  0022AC  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6377  0022AE  0100               	movlb	0	; () banked
  6378  0022B0  5974               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6379  0022B2  A0D8               	btfss	status,0,c
  6380  0022B4  D00A               	goto	l3253
  6381                           
  6382                           ; BSR set to: 0
  6383  0022B6  0100               	movlb	0	; () banked
  6384  0022B8  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6385  0022BA  0100               	movlb	0	; () banked
  6386  0022BC  5F73               	subwf	___lwdiv@dividend& (0+255),f,b
  6387  0022BE  0100               	movlb	0	; () banked
  6388  0022C0  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6389  0022C2  0100               	movlb	0	; () banked
  6390  0022C4  5B74               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6391                           
  6392                           ; BSR set to: 0
  6393  0022C6  0100               	movlb	0	; () banked
  6394  0022C8  8177               	bsf	___lwdiv@quotient& (0+255),0,b
  6395  0022CA                     l3253:
  6396                           
  6397                           ; BSR set to: 0
  6398  0022CA  0100               	movlb	0	; () banked
  6399  0022CC  90D8               	bcf	status,0,c
  6400  0022CE  3376               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6401  0022D0  3375               	rrcf	___lwdiv@divisor& (0+255),f,b
  6402                           
  6403                           ; BSR set to: 0
  6404  0022D2  0100               	movlb	0	; () banked
  6405  0022D4  2F79               	decfsz	___lwdiv@counter& (0+255),f,b
  6406  0022D6  D7E1               	goto	l3245
  6407  0022D8                     l1106:
  6408                           
  6409                           ; BSR set to: 0
  6410  0022D8  C077  F073         	movff	___lwdiv@quotient,?___lwdiv
  6411  0022DC  C078  F074         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6412                           
  6413                           ; BSR set to: 0
  6414  0022E0  0012               	return		;funcret
  6415  0022E2                     __end_of___lwdiv:
  6416                           	opt stack 0
  6417                           tblptru	equ	0xFF8
  6418                           tblptrh	equ	0xFF7
  6419                           tblptrl	equ	0xFF6
  6420                           tablat	equ	0xFF5
  6421                           prodh	equ	0xFF4
  6422                           prodl	equ	0xFF3
  6423                           intcon	equ	0xFF2
  6424                           intcon2	equ	0xFF1
  6425                           postinc0	equ	0xFEE
  6426                           wreg	equ	0xFE8
  6427                           postdec1	equ	0xFE5
  6428                           fsr1l	equ	0xFE1
  6429                           indf2	equ	0xFDF
  6430                           fsr2h	equ	0xFDA
  6431                           fsr2l	equ	0xFD9
  6432                           status	equ	0xFD8
  6433                           
  6434 ;; *************** function _ReadADC *****************
  6435 ;; Defined at:
  6436 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcread.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;		None
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;		None
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  2   19[BANK0 ] int 
  6443 ;; Registers used:
  6444 ;;		wreg, status,2
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6450 ;;      Params:         0       2       0       0
  6451 ;;      Locals:         0       0       0       0
  6452 ;;      Temps:          0       2       0       0
  6453 ;;      Totals:         0       4       0       0
  6454 ;;Total ram usage:        4 bytes
  6455 ;; Hardware stack levels used:    1
  6456 ;; Hardware stack levels required when called:    5
  6457 ;; This function calls:
  6458 ;;		Nothing
  6459 ;; This function is called by:
  6460 ;;		_calibrazione
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text14
  6465  0025B4                     __ptext14:
  6466                           	opt stack 0
  6467  0025B4                     _ReadADC:
  6468                           	opt stack 24
  6469                           
  6470                           ; BSR set to: 0
  6471                           ;incstack = 0
  6472  0025B4  50C4               	movf	4036,w,c	;volatile
  6473  0025B6  0100               	movlb	0	; () banked
  6474  0025B8  6F75               	movwf	??_ReadADC& (0+255),b
  6475  0025BA  50C3               	movf	4035,w,c	;volatile
  6476  0025BC  0100               	movlb	0	; () banked
  6477  0025BE  6F73               	movwf	?_ReadADC& (0+255),b
  6478  0025C0  C075  F074         	movff	??_ReadADC,?_ReadADC+1
  6479  0025C4  0012               	return	
  6480  0025C6                     __end_of_ReadADC:
  6481                           	opt stack 0
  6482                           tblptru	equ	0xFF8
  6483                           tblptrh	equ	0xFF7
  6484                           tblptrl	equ	0xFF6
  6485                           tablat	equ	0xFF5
  6486                           prodh	equ	0xFF4
  6487                           prodl	equ	0xFF3
  6488                           intcon	equ	0xFF2
  6489                           intcon2	equ	0xFF1
  6490                           postinc0	equ	0xFEE
  6491                           wreg	equ	0xFE8
  6492                           postdec1	equ	0xFE5
  6493                           fsr1l	equ	0xFE1
  6494                           indf2	equ	0xFDF
  6495                           fsr2h	equ	0xFDA
  6496                           fsr2l	equ	0xFD9
  6497                           status	equ	0xFD8
  6498                           
  6499 ;; *************** function _ConvertADC *****************
  6500 ;; Defined at:
  6501 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcconv.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;		None
  6506 ;; Return value:  Size  Location     Type
  6507 ;;		None               void
  6508 ;; Registers used:
  6509 ;;		None
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6515 ;;      Params:         0       0       0       0
  6516 ;;      Locals:         0       0       0       0
  6517 ;;      Temps:          0       0       0       0
  6518 ;;      Totals:         0       0       0       0
  6519 ;;Total ram usage:        0 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:    5
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		_calibrazione
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	text15
  6530  00260C                     __ptext15:
  6531                           	opt stack 0
  6532  00260C                     _ConvertADC:
  6533                           	opt stack 24
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;incstack = 0
  6537  00260C  82C2               	bsf	4034,1,c	;volatile
  6538  00260E  0012               	return		;funcret
  6539  002610                     __end_of_ConvertADC:
  6540                           	opt stack 0
  6541                           tblptru	equ	0xFF8
  6542                           tblptrh	equ	0xFF7
  6543                           tblptrl	equ	0xFF6
  6544                           tablat	equ	0xFF5
  6545                           prodh	equ	0xFF4
  6546                           prodl	equ	0xFF3
  6547                           intcon	equ	0xFF2
  6548                           intcon2	equ	0xFF1
  6549                           postinc0	equ	0xFEE
  6550                           wreg	equ	0xFE8
  6551                           postdec1	equ	0xFE5
  6552                           fsr1l	equ	0xFE1
  6553                           indf2	equ	0xFDF
  6554                           fsr2h	equ	0xFDA
  6555                           fsr2l	equ	0xFD9
  6556                           status	equ	0xFD8
  6557                           
  6558 ;; *************** function _BusyADC *****************
  6559 ;; Defined at:
  6560 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcbusy.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;		None
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      unsigned char 
  6567 ;; Registers used:
  6568 ;;		wreg
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6574 ;;      Params:         0       0       0       0
  6575 ;;      Locals:         0       0       0       0
  6576 ;;      Temps:          0       0       0       0
  6577 ;;      Totals:         0       0       0       0
  6578 ;;Total ram usage:        0 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; Hardware stack levels required when called:    5
  6581 ;; This function calls:
  6582 ;;		Nothing
  6583 ;; This function is called by:
  6584 ;;		_calibrazione
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           	psect	text16
  6589  0025D8                     __ptext16:
  6590                           	opt stack 0
  6591  0025D8                     _BusyADC:
  6592                           	opt stack 24
  6593                           
  6594                           ;incstack = 0
  6595  0025D8  A2C2               	btfss	4034,1,c	;volatile
  6596  0025DA  D002               	goto	u3510
  6597  0025DC  0E01               	movlw	1
  6598  0025DE  0012               	return	
  6599  0025E0                     u3510:
  6600  0025E0  0E00               	movlw	0
  6601  0025E2  0012               	return	
  6602  0025E4                     __end_of_BusyADC:
  6603                           	opt stack 0
  6604                           tblptru	equ	0xFF8
  6605                           tblptrh	equ	0xFF7
  6606                           tblptrl	equ	0xFF6
  6607                           tablat	equ	0xFF5
  6608                           prodh	equ	0xFF4
  6609                           prodl	equ	0xFF3
  6610                           intcon	equ	0xFF2
  6611                           intcon2	equ	0xFF1
  6612                           postinc0	equ	0xFEE
  6613                           wreg	equ	0xFE8
  6614                           postdec1	equ	0xFE5
  6615                           fsr1l	equ	0xFE1
  6616                           indf2	equ	0xFDF
  6617                           fsr2h	equ	0xFDA
  6618                           fsr2l	equ	0xFD9
  6619                           status	equ	0xFD8
  6620                           
  6621 ;; *************** function ___lmul *****************
  6622 ;; Defined at:
  6623 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;  multiplier      4   19[BANK0 ] unsigned long 
  6626 ;;  multiplicand    4   23[BANK0 ] unsigned long 
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;  product         4   27[BANK0 ] unsigned long 
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  4   19[BANK0 ] unsigned long 
  6631 ;; Registers used:
  6632 ;;		wreg, status,2, status,0
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6638 ;;      Params:         0       8       0       0
  6639 ;;      Locals:         0       4       0       0
  6640 ;;      Temps:          0       0       0       0
  6641 ;;      Totals:         0      12       0       0
  6642 ;;Total ram usage:       12 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:    5
  6645 ;; This function calls:
  6646 ;;		Nothing
  6647 ;; This function is called by:
  6648 ;;		_main
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           	psect	text17
  6653  0022E2                     __ptext17:
  6654                           	opt stack 0
  6655  0022E2                     ___lmul:
  6656                           	opt stack 25
  6657                           
  6658                           ;incstack = 0
  6659  0022E2  0E00               	movlw	0
  6660  0022E4  0100               	movlb	0	; () banked
  6661  0022E6  6F7B               	movwf	___lmul@product& (0+255),b
  6662  0022E8  0E00               	movlw	0
  6663  0022EA  6F7C               	movwf	(___lmul@product+1)& (0+255),b
  6664  0022EC  0E00               	movlw	0
  6665  0022EE  6F7D               	movwf	(___lmul@product+2)& (0+255),b
  6666  0022F0  0E00               	movlw	0
  6667  0022F2  6F7E               	movwf	(___lmul@product+3)& (0+255),b
  6668  0022F4                     l3485:
  6669                           
  6670                           ; BSR set to: 0
  6671  0022F4  0100               	movlb	0	; () banked
  6672  0022F6  A173               	btfss	___lmul@multiplier& (0+255),0,b
  6673  0022F8  D010               	goto	l3489
  6674                           
  6675                           ; BSR set to: 0
  6676  0022FA  0100               	movlb	0	; () banked
  6677  0022FC  5177               	movf	___lmul@multiplicand& (0+255),w,b
  6678  0022FE  0100               	movlb	0	; () banked
  6679  002300  277B               	addwf	___lmul@product& (0+255),f,b
  6680  002302  0100               	movlb	0	; () banked
  6681  002304  5178               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6682  002306  0100               	movlb	0	; () banked
  6683  002308  237C               	addwfc	(___lmul@product+1)& (0+255),f,b
  6684  00230A  0100               	movlb	0	; () banked
  6685  00230C  5179               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6686  00230E  0100               	movlb	0	; () banked
  6687  002310  237D               	addwfc	(___lmul@product+2)& (0+255),f,b
  6688  002312  0100               	movlb	0	; () banked
  6689  002314  517A               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6690  002316  0100               	movlb	0	; () banked
  6691  002318  237E               	addwfc	(___lmul@product+3)& (0+255),f,b
  6692  00231A                     l3489:
  6693                           
  6694                           ; BSR set to: 0
  6695  00231A  0100               	movlb	0	; () banked
  6696  00231C  90D8               	bcf	status,0,c
  6697  00231E  3777               	rlcf	___lmul@multiplicand& (0+255),f,b
  6698  002320  3778               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6699  002322  3779               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6700  002324  377A               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6701                           
  6702                           ; BSR set to: 0
  6703  002326  0100               	movlb	0	; () banked
  6704  002328  90D8               	bcf	status,0,c
  6705  00232A  3376               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6706  00232C  3375               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6707  00232E  3374               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6708  002330  3373               	rrcf	___lmul@multiplier& (0+255),f,b
  6709  002332  0100               	movlb	0	; () banked
  6710  002334  5173               	movf	___lmul@multiplier& (0+255),w,b
  6711  002336  0100               	movlb	0	; () banked
  6712  002338  1174               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6713  00233A  0100               	movlb	0	; () banked
  6714  00233C  1175               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6715  00233E  0100               	movlb	0	; () banked
  6716  002340  1176               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6717  002342  A4D8               	btfss	status,2,c
  6718  002344  D7D7               	goto	l3485
  6719                           
  6720                           ; BSR set to: 0
  6721  002346  C07B  F073         	movff	___lmul@product,?___lmul
  6722  00234A  C07C  F074         	movff	___lmul@product+1,?___lmul+1
  6723  00234E  C07D  F075         	movff	___lmul@product+2,?___lmul+2
  6724  002352  C07E  F076         	movff	___lmul@product+3,?___lmul+3
  6725                           
  6726                           ; BSR set to: 0
  6727  002356  0012               	return		;funcret
  6728  002358                     __end_of___lmul:
  6729                           	opt stack 0
  6730                           tblptru	equ	0xFF8
  6731                           tblptrh	equ	0xFF7
  6732                           tblptrl	equ	0xFF6
  6733                           tablat	equ	0xFF5
  6734                           prodh	equ	0xFF4
  6735                           prodl	equ	0xFF3
  6736                           intcon	equ	0xFF2
  6737                           intcon2	equ	0xFF1
  6738                           postinc0	equ	0xFEE
  6739                           wreg	equ	0xFE8
  6740                           postdec1	equ	0xFE5
  6741                           fsr1l	equ	0xFE1
  6742                           indf2	equ	0xFDF
  6743                           fsr2h	equ	0xFDA
  6744                           fsr2l	equ	0xFD9
  6745                           status	equ	0xFD8
  6746                           
  6747 ;; *************** function ___lldiv *****************
  6748 ;; Defined at:
  6749 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  dividend        4   31[BANK0 ] unsigned long 
  6752 ;;  divisor         4   35[BANK0 ] unsigned long 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  quotient        4   39[BANK0 ] unsigned long 
  6755 ;;  counter         1   43[BANK0 ] unsigned char 
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  4   31[BANK0 ] unsigned long 
  6758 ;; Registers used:
  6759 ;;		wreg, status,2, status,0
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6765 ;;      Params:         0       8       0       0
  6766 ;;      Locals:         0       5       0       0
  6767 ;;      Temps:          0       0       0       0
  6768 ;;      Totals:         0      13       0       0
  6769 ;;Total ram usage:       13 bytes
  6770 ;; Hardware stack levels used:    1
  6771 ;; Hardware stack levels required when called:    5
  6772 ;; This function calls:
  6773 ;;		Nothing
  6774 ;; This function is called by:
  6775 ;;		_main
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	text18
  6780  001FF8                     __ptext18:
  6781                           	opt stack 0
  6782  001FF8                     ___lldiv:
  6783                           	opt stack 25
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;incstack = 0
  6787  001FF8  0E00               	movlw	0
  6788  001FFA  0100               	movlb	0	; () banked
  6789  001FFC  6F87               	movwf	___lldiv@quotient& (0+255),b
  6790  001FFE  0E00               	movlw	0
  6791  002000  6F88               	movwf	(___lldiv@quotient+1)& (0+255),b
  6792  002002  0E00               	movlw	0
  6793  002004  6F89               	movwf	(___lldiv@quotient+2)& (0+255),b
  6794  002006  0E00               	movlw	0
  6795  002008  6F8A               	movwf	(___lldiv@quotient+3)& (0+255),b
  6796                           
  6797                           ; BSR set to: 0
  6798  00200A  0100               	movlb	0	; () banked
  6799  00200C  5183               	movf	___lldiv@divisor& (0+255),w,b
  6800  00200E  0100               	movlb	0	; () banked
  6801  002010  1184               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6802  002012  0100               	movlb	0	; () banked
  6803  002014  1185               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6804  002016  0100               	movlb	0	; () banked
  6805  002018  1186               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6806  00201A  B4D8               	btfsc	status,2,c
  6807  00201C  D042               	goto	l1053
  6808                           
  6809                           ; BSR set to: 0
  6810  00201E  0E01               	movlw	1
  6811  002020  0100               	movlb	0	; () banked
  6812  002022  6F8B               	movwf	___lldiv@counter& (0+255),b
  6813  002024  D008               	goto	l3501
  6814  002026                     l3499:
  6815                           
  6816                           ; BSR set to: 0
  6817  002026  0100               	movlb	0	; () banked
  6818  002028  90D8               	bcf	status,0,c
  6819  00202A  3783               	rlcf	___lldiv@divisor& (0+255),f,b
  6820  00202C  3784               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6821  00202E  3785               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6822  002030  3786               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6823  002032  0100               	movlb	0	; () banked
  6824  002034  2B8B               	incf	___lldiv@counter& (0+255),f,b
  6825  002036                     l3501:
  6826                           
  6827                           ; BSR set to: 0
  6828  002036  0100               	movlb	0	; () banked
  6829  002038  AF86               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6830  00203A  D7F5               	goto	l3499
  6831  00203C                     l3503:
  6832                           
  6833                           ; BSR set to: 0
  6834  00203C  0100               	movlb	0	; () banked
  6835  00203E  90D8               	bcf	status,0,c
  6836  002040  3787               	rlcf	___lldiv@quotient& (0+255),f,b
  6837  002042  3788               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6838  002044  3789               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6839  002046  378A               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6840                           
  6841                           ; BSR set to: 0
  6842  002048  0100               	movlb	0	; () banked
  6843  00204A  5183               	movf	___lldiv@divisor& (0+255),w,b
  6844  00204C  0100               	movlb	0	; () banked
  6845  00204E  5D7F               	subwf	___lldiv@dividend& (0+255),w,b
  6846  002050  0100               	movlb	0	; () banked
  6847  002052  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6848  002054  0100               	movlb	0	; () banked
  6849  002056  5980               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6850  002058  0100               	movlb	0	; () banked
  6851  00205A  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6852  00205C  0100               	movlb	0	; () banked
  6853  00205E  5981               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6854  002060  0100               	movlb	0	; () banked
  6855  002062  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6856  002064  0100               	movlb	0	; () banked
  6857  002066  5982               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6858  002068  A0D8               	btfss	status,0,c
  6859  00206A  D012               	goto	l3511
  6860                           
  6861                           ; BSR set to: 0
  6862  00206C  0100               	movlb	0	; () banked
  6863  00206E  5183               	movf	___lldiv@divisor& (0+255),w,b
  6864  002070  0100               	movlb	0	; () banked
  6865  002072  5F7F               	subwf	___lldiv@dividend& (0+255),f,b
  6866  002074  0100               	movlb	0	; () banked
  6867  002076  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6868  002078  0100               	movlb	0	; () banked
  6869  00207A  5B80               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6870  00207C  0100               	movlb	0	; () banked
  6871  00207E  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6872  002080  0100               	movlb	0	; () banked
  6873  002082  5B81               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6874  002084  0100               	movlb	0	; () banked
  6875  002086  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6876  002088  0100               	movlb	0	; () banked
  6877  00208A  5B82               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6878                           
  6879                           ; BSR set to: 0
  6880  00208C  0100               	movlb	0	; () banked
  6881  00208E  8187               	bsf	___lldiv@quotient& (0+255),0,b
  6882  002090                     l3511:
  6883                           
  6884                           ; BSR set to: 0
  6885  002090  0100               	movlb	0	; () banked
  6886  002092  90D8               	bcf	status,0,c
  6887  002094  3386               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6888  002096  3385               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6889  002098  3384               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6890  00209A  3383               	rrcf	___lldiv@divisor& (0+255),f,b
  6891                           
  6892                           ; BSR set to: 0
  6893  00209C  0100               	movlb	0	; () banked
  6894  00209E  2F8B               	decfsz	___lldiv@counter& (0+255),f,b
  6895  0020A0  D7CD               	goto	l3503
  6896  0020A2                     l1053:
  6897                           
  6898                           ; BSR set to: 0
  6899  0020A2  C087  F07F         	movff	___lldiv@quotient,?___lldiv
  6900  0020A6  C088  F080         	movff	___lldiv@quotient+1,?___lldiv+1
  6901  0020AA  C089  F081         	movff	___lldiv@quotient+2,?___lldiv+2
  6902  0020AE  C08A  F082         	movff	___lldiv@quotient+3,?___lldiv+3
  6903                           
  6904                           ; BSR set to: 0
  6905  0020B2  0012               	return		;funcret
  6906  0020B4                     __end_of___lldiv:
  6907                           	opt stack 0
  6908                           tblptru	equ	0xFF8
  6909                           tblptrh	equ	0xFF7
  6910                           tblptrl	equ	0xFF6
  6911                           tablat	equ	0xFF5
  6912                           prodh	equ	0xFF4
  6913                           prodl	equ	0xFF3
  6914                           intcon	equ	0xFF2
  6915                           intcon2	equ	0xFF1
  6916                           postinc0	equ	0xFEE
  6917                           wreg	equ	0xFE8
  6918                           postdec1	equ	0xFE5
  6919                           fsr1l	equ	0xFE1
  6920                           indf2	equ	0xFDF
  6921                           fsr2h	equ	0xFDA
  6922                           fsr2l	equ	0xFD9
  6923                           status	equ	0xFD8
  6924                           
  6925 ;; *************** function _CANisTXwarningON *****************
  6926 ;; Defined at:
  6927 ;;		line 1119 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;		None
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;		None
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  1    wreg      unsigned char 
  6934 ;; Registers used:
  6935 ;;		wreg
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6941 ;;      Params:         0       0       0       0
  6942 ;;      Locals:         0       0       0       0
  6943 ;;      Temps:          0       0       0       0
  6944 ;;      Totals:         0       0       0       0
  6945 ;;Total ram usage:        0 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; Hardware stack levels required when called:    5
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_main
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text19
  6956  0025E4                     __ptext19:
  6957                           	opt stack 0
  6958  0025E4                     _CANisTXwarningON:
  6959                           	opt stack 25
  6960                           
  6961                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;incstack = 0
  6965  0025E4  A474               	btfss	3956,2,c	;volatile
  6966  0025E6  D002               	goto	u3800
  6967  0025E8  0E01               	movlw	1
  6968  0025EA  0012               	return	
  6969  0025EC                     u3800:
  6970  0025EC  0E00               	movlw	0
  6971  0025EE  0012               	return	
  6972  0025F0                     __end_of_CANisTXwarningON:
  6973                           	opt stack 0
  6974                           tblptru	equ	0xFF8
  6975                           tblptrh	equ	0xFF7
  6976                           tblptrl	equ	0xFF6
  6977                           tablat	equ	0xFF5
  6978                           prodh	equ	0xFF4
  6979                           prodl	equ	0xFF3
  6980                           intcon	equ	0xFF2
  6981                           intcon2	equ	0xFF1
  6982                           postinc0	equ	0xFEE
  6983                           wreg	equ	0xFE8
  6984                           postdec1	equ	0xFE5
  6985                           fsr1l	equ	0xFE1
  6986                           indf2	equ	0xFDF
  6987                           fsr2h	equ	0xFDA
  6988                           fsr2l	equ	0xFD9
  6989                           status	equ	0xFD8
  6990                           
  6991 ;; *************** function _CANisRXwarningON *****************
  6992 ;; Defined at:
  6993 ;;		line 1127 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6994 ;; Parameters:    Size  Location     Type
  6995 ;;		None
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;		None
  6998 ;; Return value:  Size  Location     Type
  6999 ;;                  1    wreg      unsigned char 
  7000 ;; Registers used:
  7001 ;;		wreg
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/0
  7004 ;;		On exit  : 0/0
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7007 ;;      Params:         0       0       0       0
  7008 ;;      Locals:         0       0       0       0
  7009 ;;      Temps:          0       0       0       0
  7010 ;;      Totals:         0       0       0       0
  7011 ;;Total ram usage:        0 bytes
  7012 ;; Hardware stack levels used:    1
  7013 ;; Hardware stack levels required when called:    5
  7014 ;; This function calls:
  7015 ;;		Nothing
  7016 ;; This function is called by:
  7017 ;;		_main
  7018 ;; This function uses a non-reentrant model
  7019 ;;
  7020                           
  7021                           	psect	text20
  7022  0025F0                     __ptext20:
  7023                           	opt stack 0
  7024  0025F0                     _CANisRXwarningON:
  7025                           	opt stack 25
  7026                           
  7027                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7028                           
  7029                           ;incstack = 0
  7030  0025F0  A274               	btfss	3956,1,c	;volatile
  7031  0025F2  D002               	goto	u3810
  7032  0025F4  0E01               	movlw	1
  7033  0025F6  0012               	return	
  7034  0025F8                     u3810:
  7035  0025F8  0E00               	movlw	0
  7036  0025FA  0012               	return	
  7037  0025FC                     __end_of_CANisRXwarningON:
  7038                           	opt stack 0
  7039                           tblptru	equ	0xFF8
  7040                           tblptrh	equ	0xFF7
  7041                           tblptrl	equ	0xFF6
  7042                           tablat	equ	0xFF5
  7043                           prodh	equ	0xFF4
  7044                           prodl	equ	0xFF3
  7045                           intcon	equ	0xFF2
  7046                           intcon2	equ	0xFF1
  7047                           postinc0	equ	0xFEE
  7048                           wreg	equ	0xFE8
  7049                           postdec1	equ	0xFE5
  7050                           fsr1l	equ	0xFE1
  7051                           indf2	equ	0xFDF
  7052                           fsr2h	equ	0xFDA
  7053                           fsr2l	equ	0xFD9
  7054                           status	equ	0xFD8
  7055                           
  7056 ;; *************** function _ISR_bassa *****************
  7057 ;; Defined at:
  7058 ;;		line 87 in file "newmain.c"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;		None
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;		None
  7063 ;; Return value:  Size  Location     Type
  7064 ;;		None               void
  7065 ;; Registers used:
  7066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7072 ;;      Params:         0       0       0       0
  7073 ;;      Locals:         0       0       0       0
  7074 ;;      Temps:         17       0       0       0
  7075 ;;      Totals:        17       0       0       0
  7076 ;;Total ram usage:       17 bytes
  7077 ;; Hardware stack levels used:    1
  7078 ;; Hardware stack levels required when called:    4
  7079 ;; This function calls:
  7080 ;;		_CANisRxReady
  7081 ;;		_CANreceiveMessage
  7082 ;;		i1___lwdiv
  7083 ;;		i1___wmul
  7084 ;;		i1_delay_ms
  7085 ;; This function is called by:
  7086 ;;		Interrupt level 1
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           	psect	intcodelo
  7091  000018                     __pintcodelo:
  7092                           	opt stack 0
  7093  000018                     _ISR_bassa:
  7094                           	opt stack 23
  7095                           
  7096                           ;incstack = 0
  7097  000018  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7098  00001A  CFD8 F034          	movff	status,??_ISR_bassa
  7099  00001E  CFE8 F035          	movff	wreg,??_ISR_bassa+1
  7100  000022  CFE0 F036          	movff	bsr,??_ISR_bassa+2
  7101  000026  CFFA F037          	movff	pclath,??_ISR_bassa+3
  7102  00002A  CFFB F038          	movff	pclatu,??_ISR_bassa+4
  7103  00002E  CFE9 F039          	movff	fsr0l,??_ISR_bassa+5
  7104  000032  CFEA F03A          	movff	fsr0h,??_ISR_bassa+6
  7105  000036  CFE1 F03B          	movff	fsr1l,??_ISR_bassa+7
  7106  00003A  CFE2 F03C          	movff	fsr1h,??_ISR_bassa+8
  7107  00003E  CFD9 F03D          	movff	fsr2l,??_ISR_bassa+9
  7108  000042  CFDA F03E          	movff	fsr2h,??_ISR_bassa+10
  7109  000046  CFF3 F03F          	movff	prodl,??_ISR_bassa+11
  7110  00004A  CFF4 F040          	movff	prodh,??_ISR_bassa+12
  7111  00004E  CFF6 F041          	movff	tblptrl,??_ISR_bassa+13
  7112  000052  CFF7 F042          	movff	tblptrh,??_ISR_bassa+14
  7113  000056  CFF8 F043          	movff	tblptru,??_ISR_bassa+15
  7114  00005A  CFF5 F044          	movff	tablat,??_ISR_bassa+16
  7115                           
  7116                           ;newmain.c: 89: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7117  00005E  B0A4               	btfsc	4004,0,c	;volatile
  7118  000060  D002               	goto	i1l632
  7119  000062  A2A4               	btfss	4004,1,c	;volatile
  7120  000064  D061               	goto	i1l636
  7121  000066                     i1l632:
  7122                           
  7123                           ;newmain.c: 90: PORTCbits.RC1 = 1;
  7124  000066  8282               	bsf	3970,1,c	;volatile
  7125                           
  7126                           ;newmain.c: 91: delay_ms(100);
  7127  000068  0E00               	movlw	0
  7128  00006A  6E2E               	movwf	i1delay_ms@value_ms+1,c
  7129  00006C  0E64               	movlw	100
  7130  00006E  6E2D               	movwf	i1delay_ms@value_ms,c
  7131  000070  EC68  F012         	call	i1_delay_ms	;wreg free
  7132                           
  7133                           ;newmain.c: 92: PORTCbits.RC1 = 0;
  7134  000074  9282               	bcf	3970,1,c	;volatile
  7135                           
  7136                           ;newmain.c: 93: delay_ms(100);
  7137  000076  0E00               	movlw	0
  7138  000078  6E2E               	movwf	i1delay_ms@value_ms+1,c
  7139  00007A  0E64               	movlw	100
  7140  00007C  6E2D               	movwf	i1delay_ms@value_ms,c
  7141  00007E  EC68  F012         	call	i1_delay_ms	;wreg free
  7142                           
  7143                           ;newmain.c: 95: if (CANisRxReady()) {
  7144  000082  ECCF  F012         	call	_CANisRxReady	;wreg free
  7145  000086  0900               	iorlw	0
  7146  000088  B4D8               	btfsc	status,2,c
  7147  00008A  D04C               	goto	i1l3601
  7148                           
  7149                           ;newmain.c: 96: CANreceiveMessage(&msg);
  7150  00008C  0E18               	movlw	low _msg
  7151  00008E  6E27               	movwf	CANreceiveMessage@msg,c
  7152  000090  0E00               	movlw	high _msg
  7153  000092  6E28               	movwf	CANreceiveMessage@msg+1,c
  7154  000094  EC03  F00A         	call	_CANreceiveMessage	;wreg free
  7155                           
  7156                           ;newmain.c: 97: if (msg.identifier == 0b00000000000000000000000000101) {
  7157  000098  0E05               	movlw	5
  7158  00009A  1818               	xorwf	_msg,w,c
  7159  00009C  1019               	iorwf	_msg+1,w,c
  7160  00009E  101A               	iorwf	_msg+2,w,c
  7161  0000A0  101B               	iorwf	_msg+3,w,c
  7162  0000A2  A4D8               	btfss	status,2,c
  7163  0000A4  D028               	goto	i1l3595
  7164                           
  7165                           ;newmain.c: 98: id = msg.identifier;
  7166  0000A6  C018  F0A5         	movff	_msg,_id
  7167  0000AA  C019  F0A6         	movff	_msg+1,_id+1
  7168  0000AE  C01A  F0A7         	movff	_msg+2,_id+2
  7169  0000B2  C01B  F0A8         	movff	_msg+3,_id+3
  7170                           
  7171                           ;newmain.c: 99: remote_frame = msg.RTR;
  7172  0000B6  A026               	btfss	_msg+14,0,c
  7173  0000B8  D002               	goto	i1u406_20
  7174  0000BA  824B               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7175  0000BC  D001               	goto	i1u407_25
  7176  0000BE                     i1u406_20:
  7177  0000BE  924B               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7178  0000C0                     i1u407_25:
  7179                           
  7180                           ;newmain.c: 100: theorySteering = msg.data[0];
  7181  0000C0  C01C  F017         	movff	_msg+4,_theorySteering
  7182                           
  7183                           ;newmain.c: 101: currentSteering = theorySteering + calibration;
  7184  0000C4  5017               	movf	_theorySteering,w,c
  7185  0000C6  2411               	addwf	_calibration,w,c
  7186  0000C8  6E49               	movwf	_currentSteering,c
  7187                           
  7188                           ;newmain.c: 102: currentSteering = (limiteDx * currentSteering) / 180;
  7189  0000CA  C049  F027         	movff	_currentSteering,i1___wmul@multiplier
  7190  0000CE  6A28               	clrf	i1___wmul@multiplier+1,c
  7191  0000D0  C045  F029         	movff	_limiteDx,i1___wmul@multiplicand
  7192  0000D4  C046  F02A         	movff	_limiteDx+1,i1___wmul@multiplicand+1
  7193  0000D8  EC9F  F012         	call	i1___wmul	;wreg free
  7194  0000DC  C027  F02D         	movff	?i1___wmul,i1___lwdiv@dividend
  7195  0000E0  C028  F02E         	movff	?i1___wmul+1,i1___lwdiv@dividend+1
  7196  0000E4  0E00               	movlw	0
  7197  0000E6  6E30               	movwf	i1___lwdiv@divisor+1,c
  7198  0000E8  0EB4               	movlw	180
  7199  0000EA  6E2F               	movwf	i1___lwdiv@divisor,c
  7200  0000EC  ECE0  F011         	call	i1___lwdiv	;wreg free
  7201  0000F0  502D               	movf	?i1___lwdiv,w,c
  7202  0000F2  6E49               	movwf	_currentSteering,c
  7203                           
  7204                           ;newmain.c: 103: noChange = 1;
  7205  0000F4  804B               	bsf	_noChange/(0+8),_noChange& (0+7),c
  7206  0000F6                     i1l3595:
  7207                           
  7208                           ;newmain.c: 104: }
  7209                           ;newmain.c: 105: if (msg.identifier == 0b00000000000000000000000000010) {
  7210  0000F6  0E02               	movlw	2
  7211  0000F8  1818               	xorwf	_msg,w,c
  7212  0000FA  1019               	iorwf	_msg+1,w,c
  7213  0000FC  101A               	iorwf	_msg+2,w,c
  7214  0000FE  101B               	iorwf	_msg+3,w,c
  7215  000100  A4D8               	btfss	status,2,c
  7216  000102  D010               	goto	i1l3601
  7217                           
  7218                           ;newmain.c: 106: id = msg.identifier;
  7219  000104  C018  F0A5         	movff	_msg,_id
  7220  000108  C019  F0A6         	movff	_msg+1,_id+1
  7221  00010C  C01A  F0A7         	movff	_msg+2,_id+2
  7222  000110  C01B  F0A8         	movff	_msg+3,_id+3
  7223                           
  7224                           ;newmain.c: 107: remote_frame = msg.RTR;
  7225  000114  A026               	btfss	_msg+14,0,c
  7226  000116  D002               	goto	i1u409_20
  7227  000118  824B               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7228  00011A  D001               	goto	i1l3599
  7229  00011C                     i1u409_20:
  7230  00011C  924B               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7231  00011E                     i1l3599:
  7232                           
  7233                           ;newmain.c: 108: data_array [0] = 0x02;
  7234  00011E  0E02               	movlw	2
  7235  000120  0100               	movlb	0	; () banked
  7236  000122  6FB1               	movwf	_data_array& (0+255),b
  7237  000124                     i1l3601:
  7238                           
  7239                           ;newmain.c: 110: }
  7240                           ;newmain.c: 111: }
  7241                           ;newmain.c: 112: PIR3bits.RXB0IF = 0;
  7242  000124  90A4               	bcf	4004,0,c	;volatile
  7243                           
  7244                           ;newmain.c: 113: PIR3bits.RXB1IF = 0;
  7245  000126  92A4               	bcf	4004,1,c	;volatile
  7246  000128                     i1l636:
  7247  000128  C044  FFF5         	movff	??_ISR_bassa+16,tablat
  7248  00012C  C043  FFF8         	movff	??_ISR_bassa+15,tblptru
  7249  000130  C042  FFF7         	movff	??_ISR_bassa+14,tblptrh
  7250  000134  C041  FFF6         	movff	??_ISR_bassa+13,tblptrl
  7251  000138  C040  FFF4         	movff	??_ISR_bassa+12,prodh
  7252  00013C  C03F  FFF3         	movff	??_ISR_bassa+11,prodl
  7253  000140  C03E  FFDA         	movff	??_ISR_bassa+10,fsr2h
  7254  000144  C03D  FFD9         	movff	??_ISR_bassa+9,fsr2l
  7255  000148  C03C  FFE2         	movff	??_ISR_bassa+8,fsr1h
  7256  00014C  C03B  FFE1         	movff	??_ISR_bassa+7,fsr1l
  7257  000150  C03A  FFEA         	movff	??_ISR_bassa+6,fsr0h
  7258  000154  C039  FFE9         	movff	??_ISR_bassa+5,fsr0l
  7259  000158  C038  FFFB         	movff	??_ISR_bassa+4,pclatu
  7260  00015C  C037  FFFA         	movff	??_ISR_bassa+3,pclath
  7261  000160  C036  FFE0         	movff	??_ISR_bassa+2,bsr
  7262  000164  C035  FFE8         	movff	??_ISR_bassa+1,wreg
  7263  000168  C034  FFD8         	movff	??_ISR_bassa,status
  7264  00016C  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7265  00016E  0010               	retfie	
  7266  000170                     __end_of_ISR_bassa:
  7267                           	opt stack 0
  7268                           pclatu	equ	0xFFB
  7269                           pclath	equ	0xFFA
  7270                           tblptru	equ	0xFF8
  7271                           tblptrh	equ	0xFF7
  7272                           tblptrl	equ	0xFF6
  7273                           tablat	equ	0xFF5
  7274                           prodh	equ	0xFF4
  7275                           prodl	equ	0xFF3
  7276                           intcon	equ	0xFF2
  7277                           intcon2	equ	0xFF1
  7278                           postinc0	equ	0xFEE
  7279                           fsr0h	equ	0xFEA
  7280                           fsr0l	equ	0xFE9
  7281                           wreg	equ	0xFE8
  7282                           postdec1	equ	0xFE5
  7283                           fsr1h	equ	0xFE2
  7284                           fsr1l	equ	0xFE1
  7285                           bsr	equ	0xFE0
  7286                           indf2	equ	0xFDF
  7287                           fsr2h	equ	0xFDA
  7288                           fsr2l	equ	0xFD9
  7289                           status	equ	0xFD8
  7290                           
  7291 ;; *************** function i1_delay_ms *****************
  7292 ;; Defined at:
  7293 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  7294 ;; Parameters:    Size  Location     Type
  7295 ;;  value_ms        2    6[COMRAM] unsigned int 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;		None
  7298 ;; Return value:  Size  Location     Type
  7299 ;;		None               void
  7300 ;; Registers used:
  7301 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7307 ;;      Params:         2       0       0       0
  7308 ;;      Locals:         0       0       0       0
  7309 ;;      Temps:          0       0       0       0
  7310 ;;      Totals:         2       0       0       0
  7311 ;;Total ram usage:        2 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    3
  7314 ;; This function calls:
  7315 ;;		i1___wmul
  7316 ;; This function is called by:
  7317 ;;		_ISR_bassa
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321                           	psect	text22
  7322  0024D0                     __ptext22:
  7323                           	opt stack 0
  7324  0024D0                     i1_delay_ms:
  7325                           	opt stack 23
  7326                           
  7327                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  7328                           
  7329                           ;incstack = 0
  7330  0024D0  C0B9  F027         	movff	_delay_quartz_frequency_value,i1___wmul@multiplier	;volatile
  7331  0024D4  6A28               	clrf	i1___wmul@multiplier+1,c
  7332  0024D6  C02D  F029         	movff	i1delay_ms@value_ms,i1___wmul@multiplicand
  7333  0024DA  C02E  F02A         	movff	i1delay_ms@value_ms+1,i1___wmul@multiplicand+1
  7334  0024DE  EC9F  F012         	call	i1___wmul	;wreg free
  7335  0024E2  C027  F0AF         	movff	?i1___wmul,_clock_counter_reference	;volatile
  7336  0024E6  C028  F0B0         	movff	?i1___wmul+1,_clock_counter_reference+1	;volatile
  7337                           
  7338                           ;src\delay.c: 75: while (clock_counter_reference) {
  7339  0024EA  D007               	goto	i1l561
  7340  0024EC                     i1l3517:
  7341                           
  7342                           ;src\delay.c: 85: _delay(240);
  7343  0024EC  0E50               	movlw	80
  7344  0024EE                     i1u420_27:
  7345  0024EE  2EE8               	decfsz	wreg,f,c
  7346  0024F0  D7FE               	goto	i1u420_27
  7347                           
  7348                           ;src\delay.c: 88: clock_counter_reference--;
  7349  0024F2  0100               	movlb	0	; () banked
  7350  0024F4  07AF               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  7351  0024F6  A0D8               	btfss	status,0,c
  7352  0024F8  07B0               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  7353  0024FA                     i1l561:
  7354  0024FA  0100               	movlb	0	; () banked
  7355  0024FC  51AF               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  7356  0024FE  0100               	movlb	0	; () banked
  7357  002500  11B0               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  7358  002502  B4D8               	btfsc	status,2,c
  7359  002504  0012               	return	
  7360  002506  D7F2               	goto	i1l3517
  7361  002508                     __end_ofi1_delay_ms:
  7362                           	opt stack 0
  7363                           pclatu	equ	0xFFB
  7364                           pclath	equ	0xFFA
  7365                           tblptru	equ	0xFF8
  7366                           tblptrh	equ	0xFF7
  7367                           tblptrl	equ	0xFF6
  7368                           tablat	equ	0xFF5
  7369                           prodh	equ	0xFF4
  7370                           prodl	equ	0xFF3
  7371                           intcon	equ	0xFF2
  7372                           intcon2	equ	0xFF1
  7373                           postinc0	equ	0xFEE
  7374                           fsr0h	equ	0xFEA
  7375                           fsr0l	equ	0xFE9
  7376                           wreg	equ	0xFE8
  7377                           postdec1	equ	0xFE5
  7378                           fsr1h	equ	0xFE2
  7379                           fsr1l	equ	0xFE1
  7380                           bsr	equ	0xFE0
  7381                           indf2	equ	0xFDF
  7382                           fsr2h	equ	0xFDA
  7383                           fsr2l	equ	0xFD9
  7384                           status	equ	0xFD8
  7385                           
  7386 ;; *************** function i1___wmul *****************
  7387 ;; Defined at:
  7388 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;  multiplier      2    0[COMRAM] unsigned int 
  7391 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;  __wmul          2    4[COMRAM] unsigned int 
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  2    0[COMRAM] unsigned int 
  7396 ;; Registers used:
  7397 ;;		wreg, status,2, status,0, prodl, prodh
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7403 ;;      Params:         4       0       0       0
  7404 ;;      Locals:         2       0       0       0
  7405 ;;      Temps:          0       0       0       0
  7406 ;;      Totals:         6       0       0       0
  7407 ;;Total ram usage:        6 bytes
  7408 ;; Hardware stack levels used:    1
  7409 ;; Hardware stack levels required when called:    2
  7410 ;; This function calls:
  7411 ;;		Nothing
  7412 ;; This function is called by:
  7413 ;;		_ISR_bassa
  7414 ;;		i1_delay_ms
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text23
  7419  00253E                     __ptext23:
  7420                           	opt stack 0
  7421  00253E                     i1___wmul:
  7422                           	opt stack 23
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;incstack = 0
  7426  00253E  5027               	movf	i1___wmul@multiplier,w,c
  7427  002540  0229               	mulwf	i1___wmul@multiplicand,c
  7428  002542  CFF3 F02B          	movff	prodl,i1___wmul@product
  7429  002546  CFF4 F02C          	movff	prodh,i1___wmul@product+1
  7430  00254A  5027               	movf	i1___wmul@multiplier,w,c
  7431  00254C  022A               	mulwf	i1___wmul@multiplicand+1,c
  7432  00254E  50F3               	movf	prodl,w,c
  7433  002550  262C               	addwf	i1___wmul@product+1,f,c
  7434  002552  5028               	movf	i1___wmul@multiplier+1,w,c
  7435  002554  0229               	mulwf	i1___wmul@multiplicand,c
  7436  002556  50F3               	movf	prodl,w,c
  7437  002558  262C               	addwf	i1___wmul@product+1,f,c
  7438  00255A  C02B  F027         	movff	i1___wmul@product,?i1___wmul
  7439  00255E  C02C  F028         	movff	i1___wmul@product+1,?i1___wmul+1
  7440  002562  0012               	return	
  7441  002564                     __end_ofi1___wmul:
  7442                           	opt stack 0
  7443                           pclatu	equ	0xFFB
  7444                           pclath	equ	0xFFA
  7445                           tblptru	equ	0xFF8
  7446                           tblptrh	equ	0xFF7
  7447                           tblptrl	equ	0xFF6
  7448                           tablat	equ	0xFF5
  7449                           prodh	equ	0xFF4
  7450                           prodl	equ	0xFF3
  7451                           intcon	equ	0xFF2
  7452                           intcon2	equ	0xFF1
  7453                           postinc0	equ	0xFEE
  7454                           fsr0h	equ	0xFEA
  7455                           fsr0l	equ	0xFE9
  7456                           wreg	equ	0xFE8
  7457                           postdec1	equ	0xFE5
  7458                           fsr1h	equ	0xFE2
  7459                           fsr1l	equ	0xFE1
  7460                           bsr	equ	0xFE0
  7461                           indf2	equ	0xFDF
  7462                           fsr2h	equ	0xFDA
  7463                           fsr2l	equ	0xFD9
  7464                           status	equ	0xFD8
  7465                           
  7466 ;; *************** function i1___lwdiv *****************
  7467 ;; Defined at:
  7468 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  dividend        2    6[COMRAM] unsigned int 
  7471 ;;  divisor         2    8[COMRAM] unsigned int 
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;  __lwdiv         2   10[COMRAM] unsigned int 
  7474 ;;  __lwdiv         1   12[COMRAM] unsigned char 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  2    6[COMRAM] unsigned int 
  7477 ;; Registers used:
  7478 ;;		wreg, status,2, status,0
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7484 ;;      Params:         4       0       0       0
  7485 ;;      Locals:         3       0       0       0
  7486 ;;      Temps:          0       0       0       0
  7487 ;;      Totals:         7       0       0       0
  7488 ;;Total ram usage:        7 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; Hardware stack levels required when called:    2
  7491 ;; This function calls:
  7492 ;;		Nothing
  7493 ;; This function is called by:
  7494 ;;		_ISR_bassa
  7495 ;; This function uses a non-reentrant model
  7496 ;;
  7497                           
  7498                           	psect	text24
  7499  0023C0                     __ptext24:
  7500                           	opt stack 0
  7501  0023C0                     i1___lwdiv:
  7502                           	opt stack 24
  7503                           
  7504                           ;incstack = 0
  7505  0023C0  0E00               	movlw	0
  7506  0023C2  6E32               	movwf	i1___lwdiv@quotient+1,c
  7507  0023C4  0E00               	movlw	0
  7508  0023C6  6E31               	movwf	i1___lwdiv@quotient,c
  7509  0023C8  502F               	movf	i1___lwdiv@divisor,w,c
  7510  0023CA  1030               	iorwf	i1___lwdiv@divisor+1,w,c
  7511  0023CC  B4D8               	btfsc	status,2,c
  7512  0023CE  D01C               	goto	i1l1106
  7513  0023D0  0E01               	movlw	1
  7514  0023D2  6E33               	movwf	i1___lwdiv@counter,c
  7515  0023D4  D004               	goto	i1l3529
  7516  0023D6                     i1l3527:
  7517  0023D6  90D8               	bcf	status,0,c
  7518  0023D8  362F               	rlcf	i1___lwdiv@divisor,f,c
  7519  0023DA  3630               	rlcf	i1___lwdiv@divisor+1,f,c
  7520  0023DC  2A33               	incf	i1___lwdiv@counter,f,c
  7521  0023DE                     i1l3529:
  7522  0023DE  AE30               	btfss	i1___lwdiv@divisor+1,7,c
  7523  0023E0  D7FA               	goto	i1l3527
  7524  0023E2                     i1l3531:
  7525  0023E2  90D8               	bcf	status,0,c
  7526  0023E4  3631               	rlcf	i1___lwdiv@quotient,f,c
  7527  0023E6  3632               	rlcf	i1___lwdiv@quotient+1,f,c
  7528  0023E8  502F               	movf	i1___lwdiv@divisor,w,c
  7529  0023EA  5C2D               	subwf	i1___lwdiv@dividend,w,c
  7530  0023EC  5030               	movf	i1___lwdiv@divisor+1,w,c
  7531  0023EE  582E               	subwfb	i1___lwdiv@dividend+1,w,c
  7532  0023F0  A0D8               	btfss	status,0,c
  7533  0023F2  D005               	goto	i1l3539
  7534  0023F4  502F               	movf	i1___lwdiv@divisor,w,c
  7535  0023F6  5E2D               	subwf	i1___lwdiv@dividend,f,c
  7536  0023F8  5030               	movf	i1___lwdiv@divisor+1,w,c
  7537  0023FA  5A2E               	subwfb	i1___lwdiv@dividend+1,f,c
  7538  0023FC  8031               	bsf	i1___lwdiv@quotient,0,c
  7539  0023FE                     i1l3539:
  7540  0023FE  90D8               	bcf	status,0,c
  7541  002400  3230               	rrcf	i1___lwdiv@divisor+1,f,c
  7542  002402  322F               	rrcf	i1___lwdiv@divisor,f,c
  7543  002404  2E33               	decfsz	i1___lwdiv@counter,f,c
  7544  002406  D7ED               	goto	i1l3531
  7545  002408                     i1l1106:
  7546  002408  C031  F02D         	movff	i1___lwdiv@quotient,?i1___lwdiv
  7547  00240C  C032  F02E         	movff	i1___lwdiv@quotient+1,?i1___lwdiv+1
  7548  002410  0012               	return		;funcret
  7549  002412                     __end_ofi1___lwdiv:
  7550                           	opt stack 0
  7551                           pclatu	equ	0xFFB
  7552                           pclath	equ	0xFFA
  7553                           tblptru	equ	0xFF8
  7554                           tblptrh	equ	0xFF7
  7555                           tblptrl	equ	0xFF6
  7556                           tablat	equ	0xFF5
  7557                           prodh	equ	0xFF4
  7558                           prodl	equ	0xFF3
  7559                           intcon	equ	0xFF2
  7560                           intcon2	equ	0xFF1
  7561                           postinc0	equ	0xFEE
  7562                           fsr0h	equ	0xFEA
  7563                           fsr0l	equ	0xFE9
  7564                           wreg	equ	0xFE8
  7565                           postdec1	equ	0xFE5
  7566                           fsr1h	equ	0xFE2
  7567                           fsr1l	equ	0xFE1
  7568                           bsr	equ	0xFE0
  7569                           indf2	equ	0xFDF
  7570                           fsr2h	equ	0xFDA
  7571                           fsr2l	equ	0xFD9
  7572                           status	equ	0xFD8
  7573                           
  7574 ;; *************** function _CANreceiveMessage *****************
  7575 ;; Defined at:
  7576 ;;		line 528 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;  msg             2    0[COMRAM] PTR struct .
  7579 ;;		 -> msg(15), 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;  tamp            1   11[COMRAM] unsigned char 
  7582 ;;  error           1   10[COMRAM] unsigned char 
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  1    wreg      unsigned char 
  7585 ;; Registers used:
  7586 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7592 ;;      Params:         2       0       0       0
  7593 ;;      Locals:         2       0       0       0
  7594 ;;      Temps:          8       0       0       0
  7595 ;;      Totals:        12       0       0       0
  7596 ;;Total ram usage:       12 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; Hardware stack levels required when called:    2
  7599 ;; This function calls:
  7600 ;;		Nothing
  7601 ;; This function is called by:
  7602 ;;		_ISR_bassa
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text25
  7607  001406                     __ptext25:
  7608                           	opt stack 0
  7609  001406                     _CANreceiveMessage:
  7610                           	opt stack 24
  7611                           
  7612                           ;inc\CANlib.h: 530: BYTE tamp;
  7613                           ;inc\CANlib.h: 531: BYTE error = 0;
  7614                           
  7615                           ;incstack = 0
  7616  001406  0E00               	movlw	0
  7617  001408  6E31               	movwf	CANreceiveMessage@error,c
  7618                           
  7619                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7620  00140A  BE74               	btfsc	3956,7,c	;volatile
  7621                           
  7622                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7623  00140C  8031               	bsf	CANreceiveMessage@error,0,c
  7624                           
  7625                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7626  00140E  BC74               	btfsc	3956,6,c	;volatile
  7627                           
  7628                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7629  001410  8231               	bsf	CANreceiveMessage@error,1,c
  7630                           
  7631                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7632  001412  010F               	movlb	15	; () banked
  7633  001414  AF50               	btfss	80,7,b	;volatile
  7634  001416  D143               	goto	i1l402
  7635                           
  7636                           ; BSR set to: 15
  7637                           ;inc\CANlib.h: 541: {
  7638                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7639  001418  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7640  00141C  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7641  001420  6ADE               	clrf	postinc2,c
  7642  001422  6ADE               	clrf	postinc2,c
  7643  001424  6ADE               	clrf	postinc2,c
  7644  001426  6ADD               	clrf	postdec2,c
  7645                           
  7646                           ; BSR set to: 15
  7647                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7648  001428  EE20 F004          	lfsr	2,4
  7649  00142C  5027               	movf	CANreceiveMessage@msg,w,c
  7650  00142E  26D9               	addwf	fsr2l,f,c
  7651  001430  5028               	movf	CANreceiveMessage@msg+1,w,c
  7652  001432  22DA               	addwfc	fsr2h,f,c
  7653  001434  CF56 FFDF          	movff	3926,indf2	;volatile
  7654                           
  7655                           ; BSR set to: 15
  7656                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7657  001438  EE20 F005          	lfsr	2,5
  7658  00143C  5027               	movf	CANreceiveMessage@msg,w,c
  7659  00143E  26D9               	addwf	fsr2l,f,c
  7660  001440  5028               	movf	CANreceiveMessage@msg+1,w,c
  7661  001442  22DA               	addwfc	fsr2h,f,c
  7662  001444  CF57 FFDF          	movff	3927,indf2	;volatile
  7663                           
  7664                           ; BSR set to: 15
  7665                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7666  001448  EE20 F006          	lfsr	2,6
  7667  00144C  5027               	movf	CANreceiveMessage@msg,w,c
  7668  00144E  26D9               	addwf	fsr2l,f,c
  7669  001450  5028               	movf	CANreceiveMessage@msg+1,w,c
  7670  001452  22DA               	addwfc	fsr2h,f,c
  7671  001454  CF58 FFDF          	movff	3928,indf2	;volatile
  7672                           
  7673                           ; BSR set to: 15
  7674                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7675  001458  EE20 F007          	lfsr	2,7
  7676  00145C  5027               	movf	CANreceiveMessage@msg,w,c
  7677  00145E  26D9               	addwf	fsr2l,f,c
  7678  001460  5028               	movf	CANreceiveMessage@msg+1,w,c
  7679  001462  22DA               	addwfc	fsr2h,f,c
  7680  001464  CF59 FFDF          	movff	3929,indf2	;volatile
  7681                           
  7682                           ; BSR set to: 15
  7683                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7684  001468  EE20 F008          	lfsr	2,8
  7685  00146C  5027               	movf	CANreceiveMessage@msg,w,c
  7686  00146E  26D9               	addwf	fsr2l,f,c
  7687  001470  5028               	movf	CANreceiveMessage@msg+1,w,c
  7688  001472  22DA               	addwfc	fsr2h,f,c
  7689  001474  CF5A FFDF          	movff	3930,indf2	;volatile
  7690                           
  7691                           ; BSR set to: 15
  7692                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7693  001478  EE20 F009          	lfsr	2,9
  7694  00147C  5027               	movf	CANreceiveMessage@msg,w,c
  7695  00147E  26D9               	addwf	fsr2l,f,c
  7696  001480  5028               	movf	CANreceiveMessage@msg+1,w,c
  7697  001482  22DA               	addwfc	fsr2h,f,c
  7698  001484  CF5B FFDF          	movff	3931,indf2	;volatile
  7699                           
  7700                           ; BSR set to: 15
  7701                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7702  001488  EE20 F00A          	lfsr	2,10
  7703  00148C  5027               	movf	CANreceiveMessage@msg,w,c
  7704  00148E  26D9               	addwf	fsr2l,f,c
  7705  001490  5028               	movf	CANreceiveMessage@msg+1,w,c
  7706  001492  22DA               	addwfc	fsr2h,f,c
  7707  001494  CF5C FFDF          	movff	3932,indf2	;volatile
  7708                           
  7709                           ; BSR set to: 15
  7710                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7711  001498  EE20 F00B          	lfsr	2,11
  7712  00149C  5027               	movf	CANreceiveMessage@msg,w,c
  7713  00149E  26D9               	addwf	fsr2l,f,c
  7714  0014A0  5028               	movf	CANreceiveMessage@msg+1,w,c
  7715  0014A2  22DA               	addwfc	fsr2h,f,c
  7716  0014A4  CF5D FFDF          	movff	3933,indf2	;volatile
  7717                           
  7718                           ; BSR set to: 15
  7719                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7720  0014A8  EE20 F00E          	lfsr	2,14
  7721  0014AC  5027               	movf	CANreceiveMessage@msg,w,c
  7722  0014AE  26D9               	addwf	fsr2l,f,c
  7723  0014B0  5028               	movf	CANreceiveMessage@msg+1,w,c
  7724  0014B2  22DA               	addwfc	fsr2h,f,c
  7725  0014B4  010F               	movlb	15	; () banked
  7726  0014B6  AD55               	btfss	85,6,b	;volatile
  7727  0014B8  D002               	goto	i1u359_20
  7728  0014BA  0E01               	movlw	1
  7729  0014BC  D001               	goto	i1u359_26
  7730  0014BE                     i1u359_20:
  7731  0014BE  0E00               	movlw	0
  7732  0014C0                     i1u359_26:
  7733  0014C0  6EDF               	movwf	indf2,c
  7734                           
  7735                           ; BSR set to: 15
  7736                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7737  0014C2  EE20 F00D          	lfsr	2,13
  7738  0014C6  5027               	movf	CANreceiveMessage@msg,w,c
  7739  0014C8  26D9               	addwf	fsr2l,f,c
  7740  0014CA  5028               	movf	CANreceiveMessage@msg+1,w,c
  7741  0014CC  22DA               	addwfc	fsr2h,f,c
  7742  0014CE  010F               	movlb	15	; () banked
  7743  0014D0  5155               	movf	85,w,b	;volatile
  7744  0014D2  0B0F               	andlw	15
  7745  0014D4  6EDF               	movwf	indf2,c
  7746                           
  7747                           ; BSR set to: 15
  7748                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7749  0014D6  EE20 F00C          	lfsr	2,12
  7750  0014DA  5027               	movf	CANreceiveMessage@msg,w,c
  7751  0014DC  26D9               	addwf	fsr2l,f,c
  7752  0014DE  5028               	movf	CANreceiveMessage@msg+1,w,c
  7753  0014E0  22DA               	addwfc	fsr2h,f,c
  7754  0014E2  010F               	movlb	15	; () banked
  7755  0014E4  A752               	btfss	82,3,b	;volatile
  7756  0014E6  D002               	goto	i1u360_20
  7757  0014E8  0E01               	movlw	1
  7758  0014EA  D001               	goto	i1u360_26
  7759  0014EC                     i1u360_20:
  7760  0014EC  0E00               	movlw	0
  7761  0014EE                     i1u360_26:
  7762  0014EE  6EDF               	movwf	indf2,c
  7763                           
  7764                           ; BSR set to: 15
  7765                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7766  0014F0  010F               	movlb	15	; () banked
  7767  0014F2  B752               	btfsc	82,3,b	;volatile
  7768  0014F4  D044               	goto	i1l3307
  7769                           
  7770                           ; BSR set to: 15
  7771                           ;inc\CANlib.h: 559: {
  7772                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7773  0014F6  CF51 F029          	movff	3921,??_CANreceiveMessage	;volatile
  7774  0014FA  6A2A               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7775  0014FC  6A2B               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7776  0014FE  6A2C               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7777  001500  0E03               	movlw	3
  7778  001502                     i1u362_25:
  7779  001502  90D8               	bcf	status,0,c
  7780  001504  3629               	rlcf	??_CANreceiveMessage,f,c
  7781  001506  362A               	rlcf	??_CANreceiveMessage+1,f,c
  7782  001508  362B               	rlcf	??_CANreceiveMessage+2,f,c
  7783  00150A  362C               	rlcf	??_CANreceiveMessage+3,f,c
  7784  00150C  2EE8               	decfsz	wreg,f,c
  7785  00150E  D7F9               	goto	i1u362_25
  7786  001510  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7787  001514  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7788  001518  C029  FFDE         	movff	??_CANreceiveMessage,postinc2
  7789  00151C  C02A  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7790  001520  C02B  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7791  001524  C02C  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7792                           
  7793                           ; BSR set to: 15
  7794                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7795  001528  010F               	movlb	15	; () banked
  7796  00152A  3952               	swapf	82,w,b	;volatile
  7797  00152C  42E8               	rrncf	wreg,f,c
  7798  00152E  0B07               	andlw	7
  7799  001530  0B07               	andlw	7
  7800  001532  6E32               	movwf	CANreceiveMessage@tamp,c
  7801                           
  7802                           ; BSR set to: 15
  7803                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7804  001534  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7805  001538  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7806  00153C  CFDE F029          	movff	postinc2,??_CANreceiveMessage
  7807  001540  CFDE F02A          	movff	postinc2,??_CANreceiveMessage+1
  7808  001544  CFDE F02B          	movff	postinc2,??_CANreceiveMessage+2
  7809  001548  CFDE F02C          	movff	postinc2,??_CANreceiveMessage+3
  7810  00154C  5032               	movf	CANreceiveMessage@tamp,w,c
  7811  00154E  2429               	addwf	??_CANreceiveMessage,w,c
  7812  001550  6E2D               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7813  001552  0E00               	movlw	0
  7814  001554  202A               	addwfc	??_CANreceiveMessage+1,w,c
  7815  001556  6E2E               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7816  001558  0E00               	movlw	0
  7817  00155A  202B               	addwfc	??_CANreceiveMessage+2,w,c
  7818  00155C  6E2F               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7819  00155E  0E00               	movlw	0
  7820  001560  202C               	addwfc	??_CANreceiveMessage+3,w,c
  7821  001562  6E30               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7822  001564  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7823  001568  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7824  00156C  C02D  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7825  001570  C02E  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7826  001574  C02F  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7827  001578  C030  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7828                           
  7829                           ;inc\CANlib.h: 563: }
  7830  00157C  D08D               	goto	i1l3333
  7831  00157E                     i1l3307:
  7832                           
  7833                           ; BSR set to: 15
  7834                           ;inc\CANlib.h: 564: else
  7835                           ;inc\CANlib.h: 565: {
  7836                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7837  00157E  CF54 F029          	movff	3924,??_CANreceiveMessage	;volatile
  7838  001582  6A2A               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7839  001584  6A2B               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7840  001586  6A2C               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7841  001588  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7842  00158C  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7843  001590  C029  FFDE         	movff	??_CANreceiveMessage,postinc2
  7844  001594  C02A  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7845  001598  C02B  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7846  00159C  C02C  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7847                           
  7848                           ; BSR set to: 15
  7849                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7850  0015A0  CF53 F029          	movff	3923,??_CANreceiveMessage	;volatile
  7851  0015A4  6A2A               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7852  0015A6  6A2B               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7853  0015A8  6A2C               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7854  0015AA  C02B  F02C         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7855  0015AE  C02A  F02B         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7856  0015B2  C029  F02A         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7857  0015B6  6A29               	clrf	??_CANreceiveMessage,c
  7858  0015B8  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7859  0015BC  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7860  0015C0  5029               	movf	??_CANreceiveMessage,w,c
  7861  0015C2  26DE               	addwf	postinc2,f,c
  7862  0015C4  502A               	movf	??_CANreceiveMessage+1,w,c
  7863  0015C6  22DE               	addwfc	postinc2,f,c
  7864  0015C8  502B               	movf	??_CANreceiveMessage+2,w,c
  7865  0015CA  22DE               	addwfc	postinc2,f,c
  7866  0015CC  502C               	movf	??_CANreceiveMessage+3,w,c
  7867  0015CE  22DE               	addwfc	postinc2,f,c
  7868                           
  7869                           ; BSR set to: 15
  7870                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7871  0015D0  010F               	movlb	15	; () banked
  7872  0015D2  A152               	btfss	82,0,b	;volatile
  7873  0015D4  D00C               	goto	i1l3315
  7874                           
  7875                           ; BSR set to: 15
  7876                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7877  0015D6  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7878  0015DA  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7879  0015DE  0E00               	movlw	0
  7880  0015E0  12DE               	iorwf	postinc2,f,c
  7881  0015E2  0E00               	movlw	0
  7882  0015E4  12DE               	iorwf	postinc2,f,c
  7883  0015E6  0E01               	movlw	1
  7884  0015E8  12DE               	iorwf	postinc2,f,c
  7885  0015EA  0E00               	movlw	0
  7886  0015EC  12DE               	iorwf	postinc2,f,c
  7887  0015EE                     i1l3315:
  7888                           
  7889                           ; BSR set to: 15
  7890                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7891  0015EE  010F               	movlb	15	; () banked
  7892  0015F0  A352               	btfss	82,1,b	;volatile
  7893  0015F2  D00C               	goto	i1l3319
  7894                           
  7895                           ; BSR set to: 15
  7896                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7897  0015F4  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7898  0015F8  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7899  0015FC  0E00               	movlw	0
  7900  0015FE  12DE               	iorwf	postinc2,f,c
  7901  001600  0E00               	movlw	0
  7902  001602  12DE               	iorwf	postinc2,f,c
  7903  001604  0E02               	movlw	2
  7904  001606  12DE               	iorwf	postinc2,f,c
  7905  001608  0E00               	movlw	0
  7906  00160A  12DE               	iorwf	postinc2,f,c
  7907  00160C                     i1l3319:
  7908                           
  7909                           ; BSR set to: 15
  7910                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7911  00160C  010F               	movlb	15	; () banked
  7912  00160E  AB52               	btfss	82,5,b	;volatile
  7913  001610  D00C               	goto	i1l3323
  7914                           
  7915                           ; BSR set to: 15
  7916                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7917  001612  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7918  001616  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7919  00161A  0E00               	movlw	0
  7920  00161C  12DE               	iorwf	postinc2,f,c
  7921  00161E  0E00               	movlw	0
  7922  001620  12DE               	iorwf	postinc2,f,c
  7923  001622  0E04               	movlw	4
  7924  001624  12DE               	iorwf	postinc2,f,c
  7925  001626  0E00               	movlw	0
  7926  001628  12DE               	iorwf	postinc2,f,c
  7927  00162A                     i1l3323:
  7928                           
  7929                           ; BSR set to: 15
  7930                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7931  00162A  010F               	movlb	15	; () banked
  7932  00162C  AD52               	btfss	82,6,b	;volatile
  7933  00162E  D00C               	goto	i1l3327
  7934                           
  7935                           ; BSR set to: 15
  7936                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  7937  001630  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7938  001634  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7939  001638  0E00               	movlw	0
  7940  00163A  12DE               	iorwf	postinc2,f,c
  7941  00163C  0E00               	movlw	0
  7942  00163E  12DE               	iorwf	postinc2,f,c
  7943  001640  0E08               	movlw	8
  7944  001642  12DE               	iorwf	postinc2,f,c
  7945  001644  0E00               	movlw	0
  7946  001646  12DE               	iorwf	postinc2,f,c
  7947  001648                     i1l3327:
  7948                           
  7949                           ; BSR set to: 15
  7950                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7951  001648  010F               	movlb	15	; () banked
  7952  00164A  AF52               	btfss	82,7,b	;volatile
  7953  00164C  D00C               	goto	i1l3331
  7954                           
  7955                           ; BSR set to: 15
  7956                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  7957  00164E  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7958  001652  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7959  001656  0E00               	movlw	0
  7960  001658  12DE               	iorwf	postinc2,f,c
  7961  00165A  0E00               	movlw	0
  7962  00165C  12DE               	iorwf	postinc2,f,c
  7963  00165E  0E10               	movlw	16
  7964  001660  12DE               	iorwf	postinc2,f,c
  7965  001662  0E00               	movlw	0
  7966  001664  12DE               	iorwf	postinc2,f,c
  7967  001666                     i1l3331:
  7968                           
  7969                           ; BSR set to: 15
  7970                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7971  001666  CF51 F029          	movff	3921,??_CANreceiveMessage	;volatile
  7972  00166A  6A2A               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7973  00166C  6A2B               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7974  00166E  6A2C               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7975  001670  0E15               	movlw	21
  7976  001672                     i1u368_25:
  7977  001672  90D8               	bcf	status,0,c
  7978  001674  3629               	rlcf	??_CANreceiveMessage,f,c
  7979  001676  362A               	rlcf	??_CANreceiveMessage+1,f,c
  7980  001678  362B               	rlcf	??_CANreceiveMessage+2,f,c
  7981  00167A  362C               	rlcf	??_CANreceiveMessage+3,f,c
  7982  00167C  2EE8               	decfsz	wreg,f,c
  7983  00167E  D7F9               	goto	i1u368_25
  7984  001680  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7985  001684  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7986  001688  5029               	movf	??_CANreceiveMessage,w,c
  7987  00168A  12DE               	iorwf	postinc2,f,c
  7988  00168C  502A               	movf	??_CANreceiveMessage+1,w,c
  7989  00168E  12DE               	iorwf	postinc2,f,c
  7990  001690  502B               	movf	??_CANreceiveMessage+2,w,c
  7991  001692  12DE               	iorwf	postinc2,f,c
  7992  001694  502C               	movf	??_CANreceiveMessage+3,w,c
  7993  001696  12DE               	iorwf	postinc2,f,c
  7994  001698                     i1l3333:
  7995                           
  7996                           ; BSR set to: 15
  7997                           ;inc\CANlib.h: 581: }
  7998                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7999  001698  010F               	movlb	15	; () banked
  8000  00169A  9F50               	bcf	80,7,b	;volatile
  8001                           
  8002                           ; BSR set to: 15
  8003                           ;inc\CANlib.h: 584: return (error);
  8004                           ;	Return value of _CANreceiveMessage is never used
  8005  00169C  0012               	return	
  8006  00169E                     i1l402:
  8007                           
  8008                           ; BSR set to: 15
  8009                           ;inc\CANlib.h: 585: }
  8010                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8011  00169E  AE60               	btfss	3936,7,c	;volatile
  8012  0016A0  0012               	return	
  8013                           
  8014                           ; BSR set to: 15
  8015                           ;inc\CANlib.h: 588: {
  8016                           ;inc\CANlib.h: 589: msg->identifier = 0;
  8017  0016A2  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8018  0016A6  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8019  0016AA  6ADE               	clrf	postinc2,c
  8020  0016AC  6ADE               	clrf	postinc2,c
  8021  0016AE  6ADE               	clrf	postinc2,c
  8022  0016B0  6ADD               	clrf	postdec2,c
  8023                           
  8024                           ; BSR set to: 15
  8025                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  8026  0016B2  EE20 F004          	lfsr	2,4
  8027  0016B6  5027               	movf	CANreceiveMessage@msg,w,c
  8028  0016B8  26D9               	addwf	fsr2l,f,c
  8029  0016BA  5028               	movf	CANreceiveMessage@msg+1,w,c
  8030  0016BC  22DA               	addwfc	fsr2h,f,c
  8031  0016BE  CF66 FFDF          	movff	3942,indf2	;volatile
  8032                           
  8033                           ; BSR set to: 15
  8034                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  8035  0016C2  EE20 F005          	lfsr	2,5
  8036  0016C6  5027               	movf	CANreceiveMessage@msg,w,c
  8037  0016C8  26D9               	addwf	fsr2l,f,c
  8038  0016CA  5028               	movf	CANreceiveMessage@msg+1,w,c
  8039  0016CC  22DA               	addwfc	fsr2h,f,c
  8040  0016CE  CF67 FFDF          	movff	3943,indf2	;volatile
  8041                           
  8042                           ; BSR set to: 15
  8043                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  8044  0016D2  EE20 F006          	lfsr	2,6
  8045  0016D6  5027               	movf	CANreceiveMessage@msg,w,c
  8046  0016D8  26D9               	addwf	fsr2l,f,c
  8047  0016DA  5028               	movf	CANreceiveMessage@msg+1,w,c
  8048  0016DC  22DA               	addwfc	fsr2h,f,c
  8049  0016DE  CF68 FFDF          	movff	3944,indf2	;volatile
  8050                           
  8051                           ; BSR set to: 15
  8052                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  8053  0016E2  EE20 F007          	lfsr	2,7
  8054  0016E6  5027               	movf	CANreceiveMessage@msg,w,c
  8055  0016E8  26D9               	addwf	fsr2l,f,c
  8056  0016EA  5028               	movf	CANreceiveMessage@msg+1,w,c
  8057  0016EC  22DA               	addwfc	fsr2h,f,c
  8058  0016EE  CF69 FFDF          	movff	3945,indf2	;volatile
  8059                           
  8060                           ; BSR set to: 15
  8061                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  8062  0016F2  EE20 F008          	lfsr	2,8
  8063  0016F6  5027               	movf	CANreceiveMessage@msg,w,c
  8064  0016F8  26D9               	addwf	fsr2l,f,c
  8065  0016FA  5028               	movf	CANreceiveMessage@msg+1,w,c
  8066  0016FC  22DA               	addwfc	fsr2h,f,c
  8067  0016FE  CF6A FFDF          	movff	3946,indf2	;volatile
  8068                           
  8069                           ; BSR set to: 15
  8070                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  8071  001702  EE20 F009          	lfsr	2,9
  8072  001706  5027               	movf	CANreceiveMessage@msg,w,c
  8073  001708  26D9               	addwf	fsr2l,f,c
  8074  00170A  5028               	movf	CANreceiveMessage@msg+1,w,c
  8075  00170C  22DA               	addwfc	fsr2h,f,c
  8076  00170E  CF6B FFDF          	movff	3947,indf2	;volatile
  8077                           
  8078                           ; BSR set to: 15
  8079                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  8080  001712  EE20 F00A          	lfsr	2,10
  8081  001716  5027               	movf	CANreceiveMessage@msg,w,c
  8082  001718  26D9               	addwf	fsr2l,f,c
  8083  00171A  5028               	movf	CANreceiveMessage@msg+1,w,c
  8084  00171C  22DA               	addwfc	fsr2h,f,c
  8085  00171E  CF6C FFDF          	movff	3948,indf2	;volatile
  8086                           
  8087                           ; BSR set to: 15
  8088                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  8089  001722  EE20 F00B          	lfsr	2,11
  8090  001726  5027               	movf	CANreceiveMessage@msg,w,c
  8091  001728  26D9               	addwf	fsr2l,f,c
  8092  00172A  5028               	movf	CANreceiveMessage@msg+1,w,c
  8093  00172C  22DA               	addwfc	fsr2h,f,c
  8094  00172E  CF6D FFDF          	movff	3949,indf2	;volatile
  8095                           
  8096                           ; BSR set to: 15
  8097                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8098  001732  EE20 F00E          	lfsr	2,14
  8099  001736  5027               	movf	CANreceiveMessage@msg,w,c
  8100  001738  26D9               	addwf	fsr2l,f,c
  8101  00173A  5028               	movf	CANreceiveMessage@msg+1,w,c
  8102  00173C  22DA               	addwfc	fsr2h,f,c
  8103  00173E  AC65               	btfss	3941,6,c	;volatile
  8104  001740  D002               	goto	i1u370_20
  8105  001742  0E01               	movlw	1
  8106  001744  D001               	goto	i1u370_26
  8107  001746                     i1u370_20:
  8108  001746  0E00               	movlw	0
  8109  001748                     i1u370_26:
  8110  001748  6EDF               	movwf	indf2,c
  8111                           
  8112                           ; BSR set to: 15
  8113                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8114  00174A  EE20 F00D          	lfsr	2,13
  8115  00174E  5027               	movf	CANreceiveMessage@msg,w,c
  8116  001750  26D9               	addwf	fsr2l,f,c
  8117  001752  5028               	movf	CANreceiveMessage@msg+1,w,c
  8118  001754  22DA               	addwfc	fsr2h,f,c
  8119  001756  5065               	movf	3941,w,c	;volatile
  8120  001758  0B0F               	andlw	15
  8121  00175A  6EDF               	movwf	indf2,c
  8122                           
  8123                           ; BSR set to: 15
  8124                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8125  00175C  EE20 F00C          	lfsr	2,12
  8126  001760  5027               	movf	CANreceiveMessage@msg,w,c
  8127  001762  26D9               	addwf	fsr2l,f,c
  8128  001764  5028               	movf	CANreceiveMessage@msg+1,w,c
  8129  001766  22DA               	addwfc	fsr2h,f,c
  8130  001768  A662               	btfss	3938,3,c	;volatile
  8131  00176A  D002               	goto	i1u371_20
  8132  00176C  0E01               	movlw	1
  8133  00176E  D001               	goto	i1u371_26
  8134  001770                     i1u371_20:
  8135  001770  0E00               	movlw	0
  8136  001772                     i1u371_26:
  8137  001772  6EDF               	movwf	indf2,c
  8138                           
  8139                           ; BSR set to: 15
  8140                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8141  001774  B662               	btfsc	3938,3,c	;volatile
  8142  001776  D043               	goto	i1l3369
  8143                           
  8144                           ; BSR set to: 15
  8145                           ;inc\CANlib.h: 606: {
  8146                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8147  001778  CF61 F029          	movff	3937,??_CANreceiveMessage	;volatile
  8148  00177C  6A2A               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8149  00177E  6A2B               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8150  001780  6A2C               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8151  001782  0E03               	movlw	3
  8152  001784                     i1u373_25:
  8153  001784  90D8               	bcf	status,0,c
  8154  001786  3629               	rlcf	??_CANreceiveMessage,f,c
  8155  001788  362A               	rlcf	??_CANreceiveMessage+1,f,c
  8156  00178A  362B               	rlcf	??_CANreceiveMessage+2,f,c
  8157  00178C  362C               	rlcf	??_CANreceiveMessage+3,f,c
  8158  00178E  2EE8               	decfsz	wreg,f,c
  8159  001790  D7F9               	goto	i1u373_25
  8160  001792  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8161  001796  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8162  00179A  C029  FFDE         	movff	??_CANreceiveMessage,postinc2
  8163  00179E  C02A  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8164  0017A2  C02B  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8165  0017A6  C02C  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8166                           
  8167                           ; BSR set to: 15
  8168                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8169  0017AA  3862               	swapf	3938,w,c	;volatile
  8170  0017AC  42E8               	rrncf	wreg,f,c
  8171  0017AE  0B07               	andlw	7
  8172  0017B0  0B07               	andlw	7
  8173  0017B2  6E32               	movwf	CANreceiveMessage@tamp,c
  8174                           
  8175                           ; BSR set to: 15
  8176                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8177  0017B4  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8178  0017B8  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8179  0017BC  CFDE F029          	movff	postinc2,??_CANreceiveMessage
  8180  0017C0  CFDE F02A          	movff	postinc2,??_CANreceiveMessage+1
  8181  0017C4  CFDE F02B          	movff	postinc2,??_CANreceiveMessage+2
  8182  0017C8  CFDE F02C          	movff	postinc2,??_CANreceiveMessage+3
  8183  0017CC  5032               	movf	CANreceiveMessage@tamp,w,c
  8184  0017CE  2429               	addwf	??_CANreceiveMessage,w,c
  8185  0017D0  6E2D               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8186  0017D2  0E00               	movlw	0
  8187  0017D4  202A               	addwfc	??_CANreceiveMessage+1,w,c
  8188  0017D6  6E2E               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8189  0017D8  0E00               	movlw	0
  8190  0017DA  202B               	addwfc	??_CANreceiveMessage+2,w,c
  8191  0017DC  6E2F               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8192  0017DE  0E00               	movlw	0
  8193  0017E0  202C               	addwfc	??_CANreceiveMessage+3,w,c
  8194  0017E2  6E30               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8195  0017E4  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8196  0017E8  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8197  0017EC  C02D  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8198  0017F0  C02E  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8199  0017F4  C02F  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8200  0017F8  C030  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8201                           
  8202                           ;inc\CANlib.h: 610: }
  8203  0017FC  D088               	goto	i1l3395
  8204  0017FE                     i1l3369:
  8205                           
  8206                           ; BSR set to: 15
  8207                           ;inc\CANlib.h: 611: else
  8208                           ;inc\CANlib.h: 612: {
  8209                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8210  0017FE  CF64 F029          	movff	3940,??_CANreceiveMessage	;volatile
  8211  001802  6A2A               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8212  001804  6A2B               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8213  001806  6A2C               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8214  001808  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8215  00180C  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8216  001810  C029  FFDE         	movff	??_CANreceiveMessage,postinc2
  8217  001814  C02A  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8218  001818  C02B  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8219  00181C  C02C  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8220                           
  8221                           ; BSR set to: 15
  8222                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8223  001820  CF63 F029          	movff	3939,??_CANreceiveMessage	;volatile
  8224  001824  6A2A               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8225  001826  6A2B               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8226  001828  6A2C               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8227  00182A  C02B  F02C         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8228  00182E  C02A  F02B         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8229  001832  C029  F02A         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8230  001836  6A29               	clrf	??_CANreceiveMessage,c
  8231  001838  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8232  00183C  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8233  001840  5029               	movf	??_CANreceiveMessage,w,c
  8234  001842  26DE               	addwf	postinc2,f,c
  8235  001844  502A               	movf	??_CANreceiveMessage+1,w,c
  8236  001846  22DE               	addwfc	postinc2,f,c
  8237  001848  502B               	movf	??_CANreceiveMessage+2,w,c
  8238  00184A  22DE               	addwfc	postinc2,f,c
  8239  00184C  502C               	movf	??_CANreceiveMessage+3,w,c
  8240  00184E  22DE               	addwfc	postinc2,f,c
  8241                           
  8242                           ; BSR set to: 15
  8243                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8244  001850  A062               	btfss	3938,0,c	;volatile
  8245  001852  D00C               	goto	i1l3377
  8246                           
  8247                           ; BSR set to: 15
  8248                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8249  001854  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8250  001858  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8251  00185C  0E00               	movlw	0
  8252  00185E  12DE               	iorwf	postinc2,f,c
  8253  001860  0E00               	movlw	0
  8254  001862  12DE               	iorwf	postinc2,f,c
  8255  001864  0E01               	movlw	1
  8256  001866  12DE               	iorwf	postinc2,f,c
  8257  001868  0E00               	movlw	0
  8258  00186A  12DE               	iorwf	postinc2,f,c
  8259  00186C                     i1l3377:
  8260                           
  8261                           ; BSR set to: 15
  8262                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8263  00186C  A262               	btfss	3938,1,c	;volatile
  8264  00186E  D00C               	goto	i1l3381
  8265                           
  8266                           ; BSR set to: 15
  8267                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8268  001870  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8269  001874  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8270  001878  0E00               	movlw	0
  8271  00187A  12DE               	iorwf	postinc2,f,c
  8272  00187C  0E00               	movlw	0
  8273  00187E  12DE               	iorwf	postinc2,f,c
  8274  001880  0E02               	movlw	2
  8275  001882  12DE               	iorwf	postinc2,f,c
  8276  001884  0E00               	movlw	0
  8277  001886  12DE               	iorwf	postinc2,f,c
  8278  001888                     i1l3381:
  8279                           
  8280                           ; BSR set to: 15
  8281                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8282  001888  AA62               	btfss	3938,5,c	;volatile
  8283  00188A  D00C               	goto	i1l3385
  8284                           
  8285                           ; BSR set to: 15
  8286                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8287  00188C  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8288  001890  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8289  001894  0E00               	movlw	0
  8290  001896  12DE               	iorwf	postinc2,f,c
  8291  001898  0E00               	movlw	0
  8292  00189A  12DE               	iorwf	postinc2,f,c
  8293  00189C  0E04               	movlw	4
  8294  00189E  12DE               	iorwf	postinc2,f,c
  8295  0018A0  0E00               	movlw	0
  8296  0018A2  12DE               	iorwf	postinc2,f,c
  8297  0018A4                     i1l3385:
  8298                           
  8299                           ; BSR set to: 15
  8300                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8301  0018A4  AC62               	btfss	3938,6,c	;volatile
  8302  0018A6  D00C               	goto	i1l3389
  8303                           
  8304                           ; BSR set to: 15
  8305                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8306  0018A8  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8307  0018AC  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8308  0018B0  0E00               	movlw	0
  8309  0018B2  12DE               	iorwf	postinc2,f,c
  8310  0018B4  0E00               	movlw	0
  8311  0018B6  12DE               	iorwf	postinc2,f,c
  8312  0018B8  0E08               	movlw	8
  8313  0018BA  12DE               	iorwf	postinc2,f,c
  8314  0018BC  0E00               	movlw	0
  8315  0018BE  12DE               	iorwf	postinc2,f,c
  8316  0018C0                     i1l3389:
  8317                           
  8318                           ; BSR set to: 15
  8319                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8320  0018C0  AE62               	btfss	3938,7,c	;volatile
  8321  0018C2  D00C               	goto	i1l3393
  8322                           
  8323                           ; BSR set to: 15
  8324                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8325  0018C4  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8326  0018C8  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8327  0018CC  0E00               	movlw	0
  8328  0018CE  12DE               	iorwf	postinc2,f,c
  8329  0018D0  0E00               	movlw	0
  8330  0018D2  12DE               	iorwf	postinc2,f,c
  8331  0018D4  0E10               	movlw	16
  8332  0018D6  12DE               	iorwf	postinc2,f,c
  8333  0018D8  0E00               	movlw	0
  8334  0018DA  12DE               	iorwf	postinc2,f,c
  8335  0018DC                     i1l3393:
  8336                           
  8337                           ; BSR set to: 15
  8338                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8339  0018DC  CF61 F029          	movff	3937,??_CANreceiveMessage	;volatile
  8340  0018E0  6A2A               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8341  0018E2  6A2B               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8342  0018E4  6A2C               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8343  0018E6  0E15               	movlw	21
  8344  0018E8                     i1u379_25:
  8345  0018E8  90D8               	bcf	status,0,c
  8346  0018EA  3629               	rlcf	??_CANreceiveMessage,f,c
  8347  0018EC  362A               	rlcf	??_CANreceiveMessage+1,f,c
  8348  0018EE  362B               	rlcf	??_CANreceiveMessage+2,f,c
  8349  0018F0  362C               	rlcf	??_CANreceiveMessage+3,f,c
  8350  0018F2  2EE8               	decfsz	wreg,f,c
  8351  0018F4  D7F9               	goto	i1u379_25
  8352  0018F6  C027  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8353  0018FA  C028  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8354  0018FE  5029               	movf	??_CANreceiveMessage,w,c
  8355  001900  12DE               	iorwf	postinc2,f,c
  8356  001902  502A               	movf	??_CANreceiveMessage+1,w,c
  8357  001904  12DE               	iorwf	postinc2,f,c
  8358  001906  502B               	movf	??_CANreceiveMessage+2,w,c
  8359  001908  12DE               	iorwf	postinc2,f,c
  8360  00190A  502C               	movf	??_CANreceiveMessage+3,w,c
  8361  00190C  12DE               	iorwf	postinc2,f,c
  8362  00190E                     i1l3395:
  8363                           
  8364                           ; BSR set to: 15
  8365                           ;inc\CANlib.h: 629: }
  8366                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8367  00190E  9E60               	bcf	3936,7,c	;volatile
  8368                           
  8369                           ; BSR set to: 15
  8370                           ;inc\CANlib.h: 632: return (error);
  8371                           ;	Return value of _CANreceiveMessage is never used
  8372  001910  0012               	return	
  8373  001912                     __end_of_CANreceiveMessage:
  8374                           	opt stack 0
  8375                           pclatu	equ	0xFFB
  8376                           pclath	equ	0xFFA
  8377                           tblptru	equ	0xFF8
  8378                           tblptrh	equ	0xFF7
  8379                           tblptrl	equ	0xFF6
  8380                           tablat	equ	0xFF5
  8381                           prodh	equ	0xFF4
  8382                           prodl	equ	0xFF3
  8383                           intcon	equ	0xFF2
  8384                           intcon2	equ	0xFF1
  8385                           postinc0	equ	0xFEE
  8386                           fsr0h	equ	0xFEA
  8387                           fsr0l	equ	0xFE9
  8388                           wreg	equ	0xFE8
  8389                           postdec1	equ	0xFE5
  8390                           fsr1h	equ	0xFE2
  8391                           fsr1l	equ	0xFE1
  8392                           bsr	equ	0xFE0
  8393                           indf2	equ	0xFDF
  8394                           postinc2	equ	0xFDE
  8395                           postdec2	equ	0xFDD
  8396                           fsr2h	equ	0xFDA
  8397                           fsr2l	equ	0xFD9
  8398                           status	equ	0xFD8
  8399                           
  8400 ;; *************** function _CANisRxReady *****************
  8401 ;; Defined at:
  8402 ;;		line 1163 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;		None
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;		None
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  1    wreg      unsigned char 
  8409 ;; Registers used:
  8410 ;;		wreg, status,2
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8416 ;;      Params:         0       0       0       0
  8417 ;;      Locals:         1       0       0       0
  8418 ;;      Temps:          0       0       0       0
  8419 ;;      Totals:         1       0       0       0
  8420 ;;Total ram usage:        1 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:    2
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		_ISR_bassa
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           	psect	text26
  8431  00259E                     __ptext26:
  8432                           	opt stack 0
  8433  00259E                     _CANisRxReady:
  8434                           	opt stack 24
  8435                           
  8436                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8437                           
  8438                           ; BSR set to: 15
  8439                           ;incstack = 0
  8440  00259E  0E01               	movlw	1
  8441  0025A0  6E27               	movwf	_CANisRxReady$2909,c
  8442  0025A2  BE60               	btfsc	3936,7,c	;volatile
  8443  0025A4  D005               	goto	i1l553
  8444  0025A6  010F               	movlb	15	; () banked
  8445  0025A8  BF50               	btfsc	80,7,b	;volatile
  8446  0025AA  D002               	goto	i1l553
  8447                           
  8448                           ; BSR set to: 15
  8449  0025AC  0E00               	movlw	0
  8450  0025AE  6E27               	movwf	_CANisRxReady$2909,c
  8451  0025B0                     i1l553:
  8452  0025B0  5027               	movf	_CANisRxReady$2909,w,c
  8453  0025B2  0012               	return	
  8454  0025B4                     __end_of_CANisRxReady:
  8455                           	opt stack 0
  8456                           pclatu	equ	0xFFB
  8457                           pclath	equ	0xFFA
  8458                           tblptru	equ	0xFF8
  8459                           tblptrh	equ	0xFF7
  8460                           tblptrl	equ	0xFF6
  8461                           tablat	equ	0xFF5
  8462                           prodh	equ	0xFF4
  8463                           prodl	equ	0xFF3
  8464                           intcon	equ	0xFF2
  8465                           intcon2	equ	0xFF1
  8466                           postinc0	equ	0xFEE
  8467                           fsr0h	equ	0xFEA
  8468                           fsr0l	equ	0xFE9
  8469                           wreg	equ	0xFE8
  8470                           postdec1	equ	0xFE5
  8471                           fsr1h	equ	0xFE2
  8472                           fsr1l	equ	0xFE1
  8473                           bsr	equ	0xFE0
  8474                           indf2	equ	0xFDF
  8475                           postinc2	equ	0xFDE
  8476                           postdec2	equ	0xFDD
  8477                           fsr2h	equ	0xFDA
  8478                           fsr2l	equ	0xFD9
  8479                           status	equ	0xFD8
  8480                           
  8481 ;; *************** function _ISR_alta *****************
  8482 ;; Defined at:
  8483 ;;		line 67 in file "newmain.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;		None
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;		None
  8488 ;; Return value:  Size  Location     Type
  8489 ;;		None               void
  8490 ;; Registers used:
  8491 ;;		wreg, status,2, status,0, cstack
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/0
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8497 ;;      Params:         0       0       0       0
  8498 ;;      Locals:         0       0       0       0
  8499 ;;      Temps:          0      15       0       0
  8500 ;;      Totals:         0      15       0       0
  8501 ;;Total ram usage:       15 bytes
  8502 ;; Hardware stack levels used:    1
  8503 ;; Hardware stack levels required when called:    1
  8504 ;; This function calls:
  8505 ;;		_WriteTimer0
  8506 ;; This function is called by:
  8507 ;;		Interrupt level 2
  8508 ;; This function uses a non-reentrant model
  8509 ;;
  8510                           
  8511                           	psect	intcode
  8512  000008                     __pintcode:
  8513                           	opt stack 0
  8514  000008                     _ISR_alta:
  8515                           	opt stack 23
  8516                           
  8517                           ;incstack = 0
  8518  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8519  00000A  CFFA F065          	movff	pclath,??_ISR_alta+1
  8520  00000E  CFFB F066          	movff	pclatu,??_ISR_alta+2
  8521  000012  ED5A  F010         	call	int_func,f	;refresh shadow registers
  8522                           pclatu	equ	0xFFB
  8523                           pclath	equ	0xFFA
  8524                           tblptru	equ	0xFF8
  8525                           tblptrh	equ	0xFF7
  8526                           tblptrl	equ	0xFF6
  8527                           tablat	equ	0xFF5
  8528                           prodh	equ	0xFF4
  8529                           prodl	equ	0xFF3
  8530                           intcon	equ	0xFF2
  8531                           intcon2	equ	0xFF1
  8532                           postinc0	equ	0xFEE
  8533                           fsr0h	equ	0xFEA
  8534                           fsr0l	equ	0xFE9
  8535                           wreg	equ	0xFE8
  8536                           postdec1	equ	0xFE5
  8537                           fsr1h	equ	0xFE2
  8538                           fsr1l	equ	0xFE1
  8539                           bsr	equ	0xFE0
  8540                           indf2	equ	0xFDF
  8541                           postinc2	equ	0xFDE
  8542                           postdec2	equ	0xFDD
  8543                           fsr2h	equ	0xFDA
  8544                           fsr2l	equ	0xFD9
  8545                           status	equ	0xFD8
  8546                           
  8547                           	psect	intcode_body
  8548  0020B4                     __pintcode_body:
  8549                           	opt stack 23
  8550  0020B4                     int_func:
  8551                           	opt stack 23
  8552  0020B4  0006               	pop		; remove dummy address from shadow register refresh
  8553  0020B6  CFE9 F067          	movff	fsr0l,??_ISR_alta+3
  8554  0020BA  CFEA F068          	movff	fsr0h,??_ISR_alta+4
  8555  0020BE  CFE1 F069          	movff	fsr1l,??_ISR_alta+5
  8556  0020C2  CFE2 F06A          	movff	fsr1h,??_ISR_alta+6
  8557  0020C6  CFD9 F06B          	movff	fsr2l,??_ISR_alta+7
  8558  0020CA  CFDA F06C          	movff	fsr2h,??_ISR_alta+8
  8559  0020CE  CFF3 F06D          	movff	prodl,??_ISR_alta+9
  8560  0020D2  CFF4 F06E          	movff	prodh,??_ISR_alta+10
  8561  0020D6  CFF6 F06F          	movff	tblptrl,??_ISR_alta+11
  8562  0020DA  CFF7 F070          	movff	tblptrh,??_ISR_alta+12
  8563  0020DE  CFF8 F071          	movff	tblptru,??_ISR_alta+13
  8564  0020E2  CFF5 F072          	movff	tablat,??_ISR_alta+14
  8565                           
  8566                           ;newmain.c: 68: if (noChange == 1) {
  8567  0020E6  A04B               	btfss	_noChange/(0+8),_noChange& (0+7),c
  8568  0020E8  D021               	goto	i2l3683
  8569                           
  8570                           ;newmain.c: 69: PORTCbits.RC0 = ~PORTCbits.RC0;
  8571  0020EA  A082               	btfss	3970,0,c	;volatile
  8572  0020EC  D002               	goto	i2u416_40
  8573  0020EE  0E01               	movlw	1
  8574  0020F0  D001               	goto	i2u416_46
  8575  0020F2                     i2u416_40:
  8576  0020F2  0E00               	movlw	0
  8577  0020F4                     i2u416_46:
  8578  0020F4  0AFF               	xorlw	255
  8579  0020F6  0100               	movlb	0	; () banked
  8580  0020F8  6F64               	movwf	??_ISR_alta& (0+255),b
  8581  0020FA  5082               	movf	3970,w,c	;volatile
  8582  0020FC  0100               	movlb	0	; () banked
  8583  0020FE  1964               	xorwf	??_ISR_alta& (0+255),w,b
  8584  002100  0BFE               	andlw	-2
  8585  002102  1964               	xorwf	??_ISR_alta& (0+255),w,b
  8586  002104  6E82               	movwf	3970,c	;volatile
  8587                           
  8588                           ; BSR set to: 0
  8589                           ;newmain.c: 70: T0CONbits.TMR0ON = 0;
  8590  002106  9ED5               	bcf	4053,7,c	;volatile
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;newmain.c: 71: if (PORTCbits.RC0 == 1) {
  8594  002108  A082               	btfss	3970,0,c	;volatile
  8595  00210A  D007               	goto	i2l3677
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;newmain.c: 72: WriteTimer0(Ton);
  8599  00210C  C00F  F060         	movff	_Ton,WriteTimer0@timer0
  8600  002110  C010  F061         	movff	_Ton+1,WriteTimer0@timer0+1
  8601  002114  ECE3  F012         	call	_WriteTimer0	;wreg free
  8602                           
  8603                           ;newmain.c: 73: T0CONbits.TMR0ON = 1;
  8604  002118  8ED5               	bsf	4053,7,c	;volatile
  8605  00211A                     i2l3677:
  8606                           
  8607                           ;newmain.c: 74: }
  8608                           ;newmain.c: 75: if (PORTCbits.RC0 == 0) {
  8609  00211A  B082               	btfsc	3970,0,c	;volatile
  8610  00211C  D007               	goto	i2l3683
  8611                           
  8612                           ;newmain.c: 76: WriteTimer0(Toff);
  8613  00211E  C00D  F060         	movff	_Toff,WriteTimer0@timer0
  8614  002122  C00E  F061         	movff	_Toff+1,WriteTimer0@timer0+1
  8615  002126  ECE3  F012         	call	_WriteTimer0	;wreg free
  8616                           
  8617                           ;newmain.c: 77: T0CONbits.TMR0ON = 1;
  8618  00212A  8ED5               	bsf	4053,7,c	;volatile
  8619  00212C                     i2l3683:
  8620                           
  8621                           ;newmain.c: 78: }
  8622                           ;newmain.c: 79: }
  8623                           ;newmain.c: 80: INTCONbits.TMR0IF = 0;
  8624  00212C  94F2               	bcf	intcon,2,c	;volatile
  8625  00212E  C072  FFF5         	movff	??_ISR_alta+14,tablat
  8626  002132  C071  FFF8         	movff	??_ISR_alta+13,tblptru
  8627  002136  C070  FFF7         	movff	??_ISR_alta+12,tblptrh
  8628  00213A  C06F  FFF6         	movff	??_ISR_alta+11,tblptrl
  8629  00213E  C06E  FFF4         	movff	??_ISR_alta+10,prodh
  8630  002142  C06D  FFF3         	movff	??_ISR_alta+9,prodl
  8631  002146  C06C  FFDA         	movff	??_ISR_alta+8,fsr2h
  8632  00214A  C06B  FFD9         	movff	??_ISR_alta+7,fsr2l
  8633  00214E  C06A  FFE2         	movff	??_ISR_alta+6,fsr1h
  8634  002152  C069  FFE1         	movff	??_ISR_alta+5,fsr1l
  8635  002156  C068  FFEA         	movff	??_ISR_alta+4,fsr0h
  8636  00215A  C067  FFE9         	movff	??_ISR_alta+3,fsr0l
  8637  00215E  C066  FFFB         	movff	??_ISR_alta+2,pclatu
  8638  002162  C065  FFFA         	movff	??_ISR_alta+1,pclath
  8639  002166  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8640  002168  0011               	retfie		f
  8641  00216A                     __end_of_ISR_alta:
  8642                           	opt stack 0
  8643                           pclatu	equ	0xFFB
  8644                           pclath	equ	0xFFA
  8645                           tblptru	equ	0xFF8
  8646                           tblptrh	equ	0xFF7
  8647                           tblptrl	equ	0xFF6
  8648                           tablat	equ	0xFF5
  8649                           prodh	equ	0xFF4
  8650                           prodl	equ	0xFF3
  8651                           intcon	equ	0xFF2
  8652                           intcon2	equ	0xFF1
  8653                           postinc0	equ	0xFEE
  8654                           fsr0h	equ	0xFEA
  8655                           fsr0l	equ	0xFE9
  8656                           wreg	equ	0xFE8
  8657                           postdec1	equ	0xFE5
  8658                           fsr1h	equ	0xFE2
  8659                           fsr1l	equ	0xFE1
  8660                           bsr	equ	0xFE0
  8661                           indf2	equ	0xFDF
  8662                           postinc2	equ	0xFDE
  8663                           postdec2	equ	0xFDD
  8664                           fsr2h	equ	0xFDA
  8665                           fsr2l	equ	0xFD9
  8666                           status	equ	0xFD8
  8667                           
  8668 ;; *************** function _WriteTimer0 *****************
  8669 ;; Defined at:
  8670 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  8671 ;; Parameters:    Size  Location     Type
  8672 ;;  timer0          2    0[BANK0 ] unsigned int 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;  timer           2    2[BANK0 ] struct Timers
  8675 ;; Return value:  Size  Location     Type
  8676 ;;		None               void
  8677 ;; Registers used:
  8678 ;;		None
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8684 ;;      Params:         0       2       0       0
  8685 ;;      Locals:         0       2       0       0
  8686 ;;      Temps:          0       0       0       0
  8687 ;;      Totals:         0       4       0       0
  8688 ;;Total ram usage:        4 bytes
  8689 ;; Hardware stack levels used:    1
  8690 ;; This function calls:
  8691 ;;		Nothing
  8692 ;; This function is called by:
  8693 ;;		_ISR_alta
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text28
  8698  0025C6                     __ptext28:
  8699                           	opt stack 0
  8700  0025C6                     _WriteTimer0:
  8701                           	opt stack 23
  8702                           
  8703                           ;incstack = 0
  8704  0025C6  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  8705  0025CA  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  8706  0025CE  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  8707  0025D2  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  8708  0025D6  0012               	return		;funcret
  8709  0025D8                     __end_of_WriteTimer0:
  8710                           	opt stack 0
  8711  0000                     pclatu	equ	0xFFB
  8712                           pclath	equ	0xFFA
  8713                           tblptru	equ	0xFF8
  8714                           tblptrh	equ	0xFF7
  8715                           tblptrl	equ	0xFF6
  8716                           tablat	equ	0xFF5
  8717                           prodh	equ	0xFF4
  8718                           prodl	equ	0xFF3
  8719                           intcon	equ	0xFF2
  8720                           intcon2	equ	0xFF1
  8721                           postinc0	equ	0xFEE
  8722                           fsr0h	equ	0xFEA
  8723                           fsr0l	equ	0xFE9
  8724                           wreg	equ	0xFE8
  8725                           postdec1	equ	0xFE5
  8726                           fsr1h	equ	0xFE2
  8727                           fsr1l	equ	0xFE1
  8728                           bsr	equ	0xFE0
  8729                           indf2	equ	0xFDF
  8730                           postinc2	equ	0xFDE
  8731                           postdec2	equ	0xFDD
  8732                           fsr2h	equ	0xFDA
  8733                           fsr2l	equ	0xFD9
  8734                           status	equ	0xFD8
  8735                           pclatu	equ	0xFFB
  8736                           pclath	equ	0xFFA
  8737                           tblptru	equ	0xFF8
  8738                           tblptrh	equ	0xFF7
  8739                           tblptrl	equ	0xFF6
  8740                           tablat	equ	0xFF5
  8741                           prodh	equ	0xFF4
  8742                           prodl	equ	0xFF3
  8743                           intcon	equ	0xFF2
  8744                           intcon2	equ	0xFF1
  8745                           postinc0	equ	0xFEE
  8746                           fsr0h	equ	0xFEA
  8747                           fsr0l	equ	0xFE9
  8748                           wreg	equ	0xFE8
  8749                           postdec1	equ	0xFE5
  8750                           fsr1h	equ	0xFE2
  8751                           fsr1l	equ	0xFE1
  8752                           bsr	equ	0xFE0
  8753                           indf2	equ	0xFDF
  8754                           postinc2	equ	0xFDE
  8755                           postdec2	equ	0xFDD
  8756                           fsr2h	equ	0xFDA
  8757                           fsr2l	equ	0xFD9
  8758                           status	equ	0xFD8
  8759                           
  8760                           	psect	param0
  8761  0000                     pclatu	equ	0xFFB
  8762                           pclath	equ	0xFFA
  8763                           tblptru	equ	0xFF8
  8764                           tblptrh	equ	0xFF7
  8765                           tblptrl	equ	0xFF6
  8766                           tablat	equ	0xFF5
  8767                           prodh	equ	0xFF4
  8768                           prodl	equ	0xFF3
  8769                           intcon	equ	0xFF2
  8770                           intcon2	equ	0xFF1
  8771                           postinc0	equ	0xFEE
  8772                           fsr0h	equ	0xFEA
  8773                           fsr0l	equ	0xFE9
  8774                           wreg	equ	0xFE8
  8775                           postdec1	equ	0xFE5
  8776                           fsr1h	equ	0xFE2
  8777                           fsr1l	equ	0xFE1
  8778                           bsr	equ	0xFE0
  8779                           indf2	equ	0xFDF
  8780                           postinc2	equ	0xFDE
  8781                           postdec2	equ	0xFDD
  8782                           fsr2h	equ	0xFDA
  8783                           fsr2l	equ	0xFD9
  8784                           status	equ	0xFD8
  8785                           
  8786                           	psect	temp
  8787  00004C                     btemp:
  8788                           	opt stack 0
  8789  00004C                     	ds	1
  8790  0000                     int$flags	set	btemp
  8791                           pclatu	equ	0xFFB
  8792                           pclath	equ	0xFFA
  8793                           tblptru	equ	0xFF8
  8794                           tblptrh	equ	0xFF7
  8795                           tblptrl	equ	0xFF6
  8796                           tablat	equ	0xFF5
  8797                           prodh	equ	0xFF4
  8798                           prodl	equ	0xFF3
  8799                           intcon	equ	0xFF2
  8800                           intcon2	equ	0xFF1
  8801                           postinc0	equ	0xFEE
  8802                           fsr0h	equ	0xFEA
  8803                           fsr0l	equ	0xFE9
  8804                           wreg	equ	0xFE8
  8805                           postdec1	equ	0xFE5
  8806                           fsr1h	equ	0xFE2
  8807                           fsr1l	equ	0xFE1
  8808                           bsr	equ	0xFE0
  8809                           indf2	equ	0xFDF
  8810                           postinc2	equ	0xFDE
  8811                           postdec2	equ	0xFDD
  8812                           fsr2h	equ	0xFDA
  8813                           fsr2l	equ	0xFD9
  8814                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      75
    BANK0           160     49      98
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array_1(BANK0[8]), data_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->i1___lwdiv
    i1_delay_ms->i1___wmul
    i1___lwdiv->i1___wmul

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _delay_ms->___wmul
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _calibrazione->___lwdiv
    ___lldiv->___lmul

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->_WriteTimer0

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   13239
                                             45 BANK0      4     4      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                            ___lldiv
                             ___lmul
                       _calibrazione
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    2675
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2651
                                             19 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     719
                                             25 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     365
                                             19 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    6216
                      _CANInitialize
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             19 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             33 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibrazione                                         0     0      0     366
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     366
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     322
                                             19 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     290
                                             31 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           17    17      0    1971
                                             13 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
                          i1___lwdiv
                           i1___wmul
                         i1_delay_ms
 ---------------------------------------------------------------------------------
 (5) i1_delay_ms                                           2     0      2     335
                                              6 COMRAM     2     0      2
                           i1___wmul
 ---------------------------------------------------------------------------------
 (6) i1___wmul                                             6     2      4     261
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) i1___lwdiv                                            7     3      4     214
                                              6 COMRAM     7     3      4
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_alta                                            15    15      0     253
                                              4 BANK0     15    15      0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (8) _WriteTimer0                                          4     2      2     253
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _calibrazione
     _BusyADC
     _ConvertADC
     _ReadADC
     ___lwdiv
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenADC
   _delay_ms
     ___wmul
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i1___lwdiv
     i1___wmul (ARG)
   i1___wmul
   i1_delay_ms
     i1___wmul

 _ISR_alta (ROOT)
   _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     31      62       4       61.3%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1E      4B       1       79.8%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AD       9        0.0%
DATA                 0      0      AD      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Jan 31 16:39:52 2016

              ??_CANisTXwarningON 0073              __end_of_CANSetFilter 0C7A  
                              _id 00A5                                bsr 000FE0  
             ___wmul@multiplicand 0075                       __CFG_BORV$3 000000  
                i1___wmul@product 002B                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                       __CFG_OSC$HS 000000  
                             l500 0AD6                               l501 0AE2  
                             l510 0BEE                               l502 0AE6  
                             l430 1B3C                               l350 1D6C  
                             l511 0BF2                               l503 0AF2  
                             l431 1B40                               l351 1D76  
                             l512 0BFE                               l504 0AF6  
                             l440 1C48                               l432 1B4C  
                             l424 1B0C                               l360 0D26  
                             l513 0C02                               l505 0B02  
                             l441 1C54                               l425 1B10  
                             l361 0D30                               l514 0C0E  
                             l506 0B06                               l442 1C58  
                             l426 1B1C                               l370 1182  
                             l362 0D3A                               l515 0C12  
                             l507 0B12                               l443 1C64  
                             l435 1C24                               l427 1B20  
                             l371 0F14                               l355 0EFE  
                             l516 0C1E                               l460 0688  
                             l436 1C28                               l428 1B2C  
                             l380 10CE                               l372 0F18  
                             l356 0C90                               l517 0C22  
                             l461 0694                               l437 1C34  
                             l429 1B30                               l381 10D2  
                             l373 1010                               l365 0E4A  
                             l357 0C94                               l518 0C2E  
                             l470 079E                               l462 0698  
                             l438 1C38                               l390 1238  
                             l382 10DE                               l374 0FA0  
                             l366 0E4E                               l358 0D8C  
                             l471 07A2                               l463 06A4  
                             l455 0664                               l439 1C44  
                             l391 1242                               l375 0FAA  
                             l367 0E5A                               l359 0D1C  
                             l480 08AE                               l472 07AE  
                             l456 0668                               l376 0FB4  
                             l481 08BA                               l473 07B2  
                             l457 0674                               l561 24C2  
                             l385 1198                               l377 0FBE  
                             l490 09C6                               l482 08BE  
                             l474 07BE                               l466 077E  
                             l458 0678                               l394 1352  
                             l386 119C                               l491 09CA  
                             l483 08CA                               l467 0782  
                             l459 0684                               l395 1356  
                             l387 1294                               l492 09D6  
                             l484 08CE                               l468 078E  
                             l548 2582                               l396 1362  
                             l388 1224                               l493 09DA  
                             l485 08DA                               l477 089A  
                             l469 0792                               l389 122E  
                             l494 09E6                               l478 089E  
                             l495 09EA                               l479 08AA  
                             l496 09F6                               l488 09B6  
                             l489 09BA                               l499 0AD2  
                             l688 2266                      __CFG_CPB$OFF 000000  
                    __CFG_CPD$OFF 000000                        i1_delay_ms 24D0  
                             _Ton 000F              __size_of_WriteTimer0 0012  
                             _msg 0018                               wreg 000FE8  
           _currentSteering_array 0099                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              l1106 22D8  
                            l1053 20A2                              l3023 0E5E  
                            l3017 0E3E                              l2503 2590  
                            l3241 2288                              l2521 19CA  
                            l3073 0FC8                              l3243 2294  
                            l3501 2036                              l3253 22CA  
                            l3245 229A                              l3149 124C  
                            l3093 10C2                              l3511 2090  
                            l3503 203C                              l3175 1366  
                            l2537 1A80                              l3169 1346  
                            l2811 0924                              l2619 0232  
                            l2563 1B50                              l3419 24B4  
                            l3099 10E2                              l2805 08DE  
                            l2709 05D2                              l2637 02EA  
                            l2743 06EE                              l2655 03A4  
                            l2737 06A8                              l2673 045E  
                            l2569 1B96                              l3481 2492  
                            l2907 0C32                              l2771 07C2  
                            l2691 0518                              l2595 1C68  
                            l3619 1E9E                              l3485 22F4  
                            l3469 2416                              l2845 0A40  
                            l2839 09FA                              l2951 1D64  
                            l3489 231A                              l2873 0B16  
                            l2777 0808                              l2953 1D7A  
                            l3499 2026                              l2957 1D82  
                            l2879 0B5C                              l2959 1DC6  
                            l2997 0D44                              u2110 1946  
                            u2115 193A                              u2125 19A6  
                            _LATA 000F89                              u2150 19FC  
                            _LATB 000F8A                              _LATC 000F8B  
                            u3040 0C52                              u2320 1C88  
                            u2240 1B70                              _LATD 000F8C  
                            _LATE 000F8D                              u2155 19F0  
                            u3300 0FE8                              u3045 0C46  
                            u2405 02C6                              u2325 1C7C  
                            u2245 1B64                              u2165 1A5C  
                            u2510 0494                              u2430 0320  
                            u2350 01AE                              u3310 1034  
                            u3305 0FDC                              u3170 0D64  
                            u2515 0488                              u2435 0314  
                            u2355 01A2                              u3315 1028  
                            u3180 0DB0                              u2525 04F4  
                            u2445 0380                              u2365 020E  
                            u3325 1094                              u3510 25E0  
                            u2550 054E                              u2470 03DA  
                            u2390 0266                              u3430 126C  
                            u3175 0D58                              u2800 08FE  
                            u2720 07E2                              u2640 06C8  
                            u3440 12B8                              u3185 0DA4  
                            u2555 0542                              u2475 03CE  
                            u2395 025A                              u3435 1260  
                            u3195 0E10                              u2805 08F2  
                            u2725 07D6                              u2645 06BC  
                            u2565 05AE                              u2485 043A  
                            u3445 12AC                              u3455 1318  
                            u3800 25EC                              u3810 25F8  
                            u4197 24B6                              u2960 0B36  
                            u2880 0A1A                              u2965 0B2A  
                            u2885 0A0E               __size_of_CANSetMask 039E  
                            _Toff 000D                              _main 1E76  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 004C  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 0170  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                   __end_of_BusyADC 25E4  
                 __end_of_ReadADC 25C6                  _CANOperationMode 2588  
                 __end_of_OpenADC 226A        __size_of_CANreceiveMessage 050C  
                           ?_main 0027                   __end_of___lldiv 20B4  
                           _T0CON 000FD5                   __end_of___lwdiv 22E2  
                           i1l402 169E                             i1l632 0066  
                           i1l553 25B0                             i1l561 24FA  
                           i1l636 0128                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
               _CANisRxReady$2909 0027                             _TRISD 000F95  
                           _TRISE 000F96                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
             ___lmul@multiplicand 0077                __size_of_ISR_bassa 0158  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                CANInitialize@flags 0085  
                __end_of_ISR_alta 216A                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _timer 00A9  
                      _ConvertADC 260C                    __pbitbssCOMRAM 0258  
            __end_of_CANisRxReady 25B4                             tablat 000FF5  
            __end_of_CANisTxReady 2588                  __end_ofi1___wmul 2564  
                           status 000FD8               i1___wmul@multiplier 0027  
              __size_ofi1___lwdiv 0052                    __CFG_PBADEN$ON 000000  
                 __initialization 2358                      __end_of_main 1FF8  
                          ??_main 008D                     __activetblptr 000002  
                     ?i1_delay_ms 002D                 _CANisTxReady$2907 0073  
                   _counter_array 0091                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                          _ADRESL 000FC3             __size_of_calibrazione 0046  
                 __CFG_BBSIZ$1024 000000                            i1l1106 2408  
                          i1l3331 1666                            i1l3323 162A  
                          i1l3315 15EE                            i1l3307 157E  
                          i1l3333 1698                            i1l3327 1648  
                          i1l3319 160C                            i1l3601 0124  
                          i1l3531 23E2                            i1l3381 1888  
                          i1l3517 24EC                            i1l3527 23D6  
                          i1l3393 18DC                            i1l3385 18A4  
                          i1l3377 186C                            i1l3369 17FE  
                          i1l3529 23DE                            i1l3395 190E  
                          i1l3539 23FE                            i1l3389 18C0  
                          i1l3595 00F6                            i1l3599 011E  
                          i2l3683 212C                            i2l3677 211A  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 0077                CANsendMessage@tamp 007F  
                       ??_BusyADC 0073                         ??_ReadADC 0075  
                __end_of_delay_ms 24D0             __size_of_CANSetFilter 0B06  
                       ??_OpenADC 0075                    __CFG_XINST$OFF 000000  
               __end_of_ISR_bassa 0170                            ___lmul 22E2  
                          ___wmul 2508                    __CFG_STVREN$ON 000000  
                       ??___lldiv 0087                         ??___lwdiv 0077  
                    ??_CANSetMask 0078                            _errore 0015  
                          clear_0 235E                            clear_1 236C  
        ?_configurazione_iniziale 0027                   __CFG_BOREN$BOHW 000000  
                    _calibrazione 2412                 __end_ofi1___lwdiv 2412  
                    __pdataCOMRAM 0045                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                 _currentSteering 0049                      _CANSetFilter 0174  
                     ?_ConvertADC 0027                        __accesstop 0060  
         __end_of__initialization 23B2                __end_of_CANSetMask 1CB0  
                   ___rparam_used 000000         __size_of_CANisRXwarningON 000C  
             __size_ofi1_delay_ms 0038                    __pcstackCOMRAM 0027  
                    __pidataBANK0 25FC                      _data_array_1 00BA  
                       ?_ISR_alta 0027                         ?i1___wmul 0027  
           CANSetFilter@numBuffer 007C         __size_of_CANisTXwarningON 000C  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 0024  
        __end_of_CANOperationMode 259E                        __pbssBANK0 0091  
                      _data_array 00B1           __size_of_CANsendMessage 078C  
                         ?___lmul 0073                           ?___wmul 0073  
                      ??_ISR_alta 0064                __size_of_send_data 003E  
                WriteTimer0@timer 0062                     ??_WriteTimer0 0062  
                  ___lmul@product 007B                      _CANisRxReady 259E  
             __size_of_ConvertADC 0004                           _CANSTAT 000F6E  
                    _CANisTxReady 2564                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
                      ??i1___wmul 002B            __size_of_CANInitialize 01C6  
                       ?_delay_ms 0079                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 007A                           _BusyADC 25D8  
                         _ReadADC 25B4                        _correzione 0013  
                       _ADCResult 00AD                           _OpenADC 21EE  
                         __Hparam 0000                           __Lparam 0000  
                delay_ms@value_ms 0079                   __size_of___lmul 0076  
                         ___lldiv 1FF8                   __size_of___wmul 0036  
                         ___lwdiv 226A              CANInitialize@propSeg 008A  
                         __pcinit 2358                           __ramtop 0300  
                         __ptext0 1E76                           __ptext1 2458  
                         __ptext2 0C7A                           __ptext3 2564  
                         __ptext4 2496                           __ptext5 2508  
                         __ptext6 216A                           __ptext7 21EE  
                         __ptext8 1CB0                           __ptext9 1912  
                       _T0CONbits 000FD5                      ??i1_delay_ms 002F  
                         _counter 0001                 i1___lwdiv@divisor 002F  
               i1___lwdiv@counter 0033                        _duty_cycle 00A1  
             __end_of_WriteTimer0 25D8                        ??_delay_ms 007B  
          CANreceiveMessage@error 0031                           _potenza 0047  
                  OpenADC@config2 0073                    __pintcode_body 20B4  
            end_of_initialization 23B2                 __end_of_send_data 2496  
                   __Lmediumconst 0000                           int_func 20B4  
                _CANisRXwarningON 25F0                     _CANInitialize 1CB0  
                 ___lldiv@divisor 0083                   ___lldiv@counter 008B  
              __end_ofi1_delay_ms 2508                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE             i1___wmul@multiplicand 0029  
                       _ISR_bassa 0018                         _PORTAbits 000F80  
                  CANSetMask@mask 0073                         _PORTCbits 000F82  
                  CANSetMask@tamp 007D                    CANSetMask@type 0077  
                _CANisTXwarningON 25E4                         i1___lwdiv 23C0  
                    ??_ConvertADC 0073  __size_of_configurazione_iniziale 0084  
             _previousTimeCounter 0005           _clock_counter_reference 00AF  
                  _CANsendMessage 0C7A                  CANInitialize@BRP 0084  
                CANInitialize@SJW 0083                    ?_CANInitialize 0081  
                  __end_of___lmul 2358                        ?_ISR_bassa 0027  
                  __end_of___wmul 253E                     __pidataCOMRAM 2605  
               __size_of_ISR_alta 2162                       _WriteTimer0 25C6  
              __end_of_ConvertADC 2610               start_initialization 2358  
               __size_ofi1___wmul 0026                        ?i1___lwdiv 002D  
             CANSetMask@numBuffer 007C            __end_of_CANsendMessage 1406  
               ?_CANOperationMode 0027                i1delay_ms@value_ms 002D  
              ??_CANOperationMode 0073        CANInitialize@FilterConfig1 008B  
      CANInitialize@FilterConfig2 008C                          ??___lmul 007B  
                        ??___wmul 0077                       __pdataBANK0 00B9  
                     _calibration 0011                  __CFG_LPT1OSC$OFF 000000  
          CANInitialize@phaseSeg1 0081            CANInitialize@phaseSeg2 0082  
                     __pbssCOMRAM 0001                     __pcstackBANK0 0060  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
               __size_of_delay_ms 003A                   ?_CANsendMessage 0073  
                 ??_CANInitialize 0086                          ?_BusyADC 0027  
                        ?_ReadADC 0073                CANSetFilter@filter 0073  
               OpenADC@portconfig 0074                          ?_OpenADC 0073  
                  _theorySteering 0017                  ___lwdiv@dividend 0073  
                       __pintcode 0008                          ?___lldiv 007F  
                        ?___lwdiv 0073                       ??_ISR_bassa 0034  
                     __pintcodelo 0018                 WriteTimer0@timer0 0060  
        __end_of_CANisRXwarningON 25FC                       _COMSTATbits 000F74  
                ___lwdiv@quotient 0077           _configurazione_iniziale 216A  
                     ??i1___lwdiv 0031             CANreceiveMessage@tamp 0032  
                  ___wmul@product 0077                     OpenADC@config 0077  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 00B9  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                         _send_data 2458  
                        _PIE3bits 000FA3          __end_of_CANisTXwarningON 25F0  
                        i1u420_27 24EE                          i1u406_20 00BE  
                        i1u407_25 00C0                          i1u360_20 14EC  
                        i1u360_26 14EE                          i1u409_20 011C  
                        i1u370_20 1746                          i1u362_25 1502  
                        i1u370_26 1748                          i1u371_20 1770  
                        i1u371_26 1772                          i1u373_25 1784  
                        i1u359_20 14BE                          i1u359_26 14C0  
                        i1u368_25 1672                          i1u379_25 18E8  
                        i2u416_40 20F2                          i2u416_46 20F4  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                    _pastSteering 004A                          _RXF2EIDL 000F0B  
                        _RXF3EIDH 000F0E                          _RXF3EIDL 000F0F  
                        _RXF4EIDH 000F12                          _RXF4EIDL 000F13  
                        _RXF5EIDH 000F16                          _RXF5EIDL 000F17  
                        _RXF0SIDH 000F00                          _RXF0SIDL 000F01  
                        _TXB0EIDH 000F43                          _RXF1SIDH 000F04  
                        _TXB0EIDL 000F44                          _RXF1SIDL 000F05  
                        _TXB1EIDH 000F33                          _RXF2SIDH 000F08  
                        _TXB1EIDL 000F34                          _RXF2SIDL 000F09  
                        _ISR_alta 0008                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _TXERRCNT 000F76                        _ADCON0bits 000FC2  
               ___wmul@multiplier 0073                          i1___wmul 253E  
                   ?_calibrazione 0027                     ?_CANSetFilter 0073  
               ___lmul@multiplier 0073                       _INTCON2bits 000FF1  
                       copy_data0 2386                         copy_data1 23A6  
                      _CANCONbits 000F6F                          __Hparam0 0000  
                      ?_send_data 0027                  __size_of_BusyADC 000C  
                __size_of_ReadADC 0012                          __Lparam0 0000  
                    _RXB0SIDLbits 000F62                  __size_of_OpenADC 007C  
                    _RXB1SIDLbits 000F52                        _CANSetMask 1912  
                __size_of___lldiv 00BC                  __size_of___lwdiv 0078  
                    ?_WriteTimer0 0060                    ??_calibrazione 007A  
       ??_configurazione_iniziale 008D                      _RXF0SIDLbits 000F01  
                        _delay_ms 2496                   ___lwdiv@divisor 0075  
                    _RXF1SIDLbits 000F05                   ___lwdiv@counter 0079  
                  ??_CANSetFilter 0078                          __ptext10 0174  
                        __ptext11 2588                          __ptext20 25F0  
                        __ptext12 2412                          __ptext13 226A  
                        __ptext22 24D0                          __ptext14 25B4  
                        __ptext23 253E                          __ptext15 260C  
                        __ptext24 23C0                          __ptext16 25D8  
                        __ptext25 1406                          __ptext17 22E2  
                        __ptext26 259E                          __ptext18 1FF8  
                        __ptext19 25E4                          __ptext28 25C6  
                    _RXF2SIDLbits 000F09                          _noChange 0258  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
              i1___lwdiv@dividend 002D                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 0079                      _remote_frame 0259  
                   __size_of_main 0182                          _limiteDx 0045  
            CANreceiveMessage@msg 0027                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 004C         __size_of_CANOperationMode 0016  
                   ?_CANisRxReady 0027                     ?_CANisTxReady 0027  
                     _RXB0DLCbits 000F65                i1___lwdiv@quotient 0031  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 1406                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                  ??_CANsendMessage 007B  
              ?_CANreceiveMessage 0027          CANsendMessage@identifier 0073  
                        intlevel1 0000                          intlevel2 0000  
                CANSetFilter@tamp 007D                  CANSetFilter@type 0077  
             ??_CANreceiveMessage 0029                  ___lldiv@dividend 007F  
                     _TXB0DLCbits 000F45                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       ??_send_data 0083  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 21EE  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 0009              CANOperationMode@mode 0073  
                  ??_CANisRxReady 0027                       ?_CANSetMask 0073  
                  ??_CANisTxReady 0073         __end_of_CANreceiveMessage 1912  
                ___lldiv@quotient 0087                 ?_CANisRXwarningON 0027  
              ??_CANisRXwarningON 0073              __end_of_calibrazione 2458  
           __end_of_CANInitialize 1E76                 ?_CANisTXwarningON 0027  
