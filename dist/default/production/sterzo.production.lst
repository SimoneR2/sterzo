

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Dec 13 21:09:35 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	param0,global,class=BANK0,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  0024C6                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _limiteDx
    49  0024C6  0078               	dw	120
    50                           
    51                           ;initializer for _potenza
    52  0024C8  0002               	dw	2
    53                           
    54                           ;initializer for _currentSteering
    55  0024CA  B4                 	db	180
    56                           
    57                           ;initializer for _delay_quartz_frequency_value
    58  0024CB  10                 	db	16
    59                           
    60                           ;initializer for _pastSteering
    61  0024CC  01                 	db	1
    62  0000                     _RXB1CON	set	3920
    63  0000                     _RXB1CONbits	set	3920
    64  0000                     _RXB1D0	set	3926
    65  0000                     _RXB1D1	set	3927
    66  0000                     _RXB1D2	set	3928
    67  0000                     _RXB1D3	set	3929
    68  0000                     _RXB1D4	set	3930
    69  0000                     _RXB1D5	set	3931
    70  0000                     _RXB1D6	set	3932
    71  0000                     _RXB1D7	set	3933
    72  0000                     _RXB1DLC	set	3925
    73  0000                     _RXB1DLCbits	set	3925
    74  0000                     _RXB1EIDH	set	3923
    75  0000                     _RXB1EIDL	set	3924
    76  0000                     _RXB1SIDH	set	3921
    77  0000                     _RXB1SIDL	set	3922
    78  0000                     _RXB1SIDLbits	set	3922
    79  0000                     _RXF0EIDH	set	3842
    80  0000                     _RXF0EIDL	set	3843
    81  0000                     _RXF0SIDH	set	3840
    82  0000                     _RXF0SIDL	set	3841
    83  0000                     _RXF0SIDLbits	set	3841
    84  0000                     _RXF1EIDH	set	3846
    85  0000                     _RXF1EIDL	set	3847
    86  0000                     _RXF1SIDH	set	3844
    87  0000                     _RXF1SIDL	set	3845
    88  0000                     _RXF1SIDLbits	set	3845
    89  0000                     _RXF2EIDH	set	3850
    90  0000                     _RXF2EIDL	set	3851
    91  0000                     _RXF2SIDH	set	3848
    92  0000                     _RXF2SIDL	set	3849
    93  0000                     _RXF2SIDLbits	set	3849
    94  0000                     _RXF3EIDH	set	3854
    95  0000                     _RXF3EIDL	set	3855
    96  0000                     _RXF3SIDH	set	3852
    97  0000                     _RXF3SIDL	set	3853
    98  0000                     _RXF3SIDLbits	set	3853
    99  0000                     _RXF4EIDH	set	3858
   100  0000                     _RXF4EIDL	set	3859
   101  0000                     _RXF4SIDH	set	3856
   102  0000                     _RXF4SIDL	set	3857
   103  0000                     _RXF4SIDLbits	set	3857
   104  0000                     _RXF5EIDH	set	3862
   105  0000                     _RXF5EIDL	set	3863
   106  0000                     _RXF5SIDH	set	3860
   107  0000                     _RXF5SIDL	set	3861
   108  0000                     _RXF5SIDLbits	set	3861
   109  0000                     _RXM0EIDH	set	3866
   110  0000                     _RXM0EIDL	set	3867
   111  0000                     _RXM0SIDH	set	3864
   112  0000                     _RXM0SIDL	set	3865
   113  0000                     _RXM0SIDLbits	set	3865
   114  0000                     _RXM1EIDH	set	3870
   115  0000                     _RXM1EIDL	set	3871
   116  0000                     _RXM1SIDH	set	3868
   117  0000                     _RXM1SIDL	set	3869
   118  0000                     _RXM1SIDLbits	set	3869
   119  0000                     _TXB0CONbits	set	3904
   120  0000                     _TXB0D0	set	3910
   121  0000                     _TXB0D1	set	3911
   122  0000                     _TXB0D2	set	3912
   123  0000                     _TXB0D3	set	3913
   124  0000                     _TXB0D4	set	3914
   125  0000                     _TXB0D5	set	3915
   126  0000                     _TXB0D6	set	3916
   127  0000                     _TXB0D7	set	3917
   128  0000                     _TXB0DLC	set	3909
   129  0000                     _TXB0DLCbits	set	3909
   130  0000                     _TXB0EIDH	set	3907
   131  0000                     _TXB0EIDL	set	3908
   132  0000                     _TXB0SIDH	set	3905
   133  0000                     _TXB0SIDL	set	3906
   134  0000                     _TXB0SIDLbits	set	3906
   135  0000                     _TXB1CONbits	set	3888
   136  0000                     _TXB1D0	set	3894
   137  0000                     _TXB1D1	set	3895
   138  0000                     _TXB1D2	set	3896
   139  0000                     _TXB1D3	set	3897
   140  0000                     _TXB1D4	set	3898
   141  0000                     _TXB1D5	set	3899
   142  0000                     _TXB1D6	set	3900
   143  0000                     _TXB1D7	set	3901
   144  0000                     _TXB1DLC	set	3893
   145  0000                     _TXB1DLCbits	set	3893
   146  0000                     _TXB1EIDH	set	3891
   147  0000                     _TXB1EIDL	set	3892
   148  0000                     _TXB1SIDH	set	3889
   149  0000                     _TXB1SIDL	set	3890
   150  0000                     _TXB1SIDLbits	set	3890
   151  0000                     _TXB2CONbits	set	3872
   152  0000                     _TXB2D0	set	3878
   153  0000                     _TXB2D1	set	3879
   154  0000                     _TXB2D2	set	3880
   155  0000                     _TXB2D3	set	3881
   156  0000                     _TXB2D4	set	3882
   157  0000                     _TXB2D5	set	3883
   158  0000                     _TXB2D6	set	3884
   159  0000                     _TXB2D7	set	3885
   160  0000                     _TXB2DLC	set	3877
   161  0000                     _TXB2DLCbits	set	3877
   162  0000                     _TXB2EIDH	set	3875
   163  0000                     _TXB2EIDL	set	3876
   164  0000                     _TXB2SIDH	set	3873
   165  0000                     _TXB2SIDL	set	3874
   166  0000                     _TXB2SIDLbits	set	3874
   167  0000                     _ADCON0	set	4034
   168  0000                     _ADCON0bits	set	4034
   169  0000                     _ADCON1	set	4033
   170  0000                     _ADCON2	set	4032
   171  0000                     _ADRESH	set	4036
   172  0000                     _ADRESL	set	4035
   173  0000                     _BRGCON1	set	3952
   174  0000                     _BRGCON2	set	3953
   175  0000                     _BRGCON2bits	set	3953
   176  0000                     _BRGCON3	set	3954
   177  0000                     _BRGCON3bits	set	3954
   178  0000                     _CANCON	set	3951
   179  0000                     _CANCONbits	set	3951
   180  0000                     _CANSTAT	set	3950
   181  0000                     _COMSTATbits	set	3956
   182  0000                     _INTCON2bits	set	4081
   183  0000                     _INTCONbits	set	4082
   184  0000                     _IPR2bits	set	4002
   185  0000                     _IPR3bits	set	4005
   186  0000                     _LATA	set	3977
   187  0000                     _LATB	set	3978
   188  0000                     _LATC	set	3979
   189  0000                     _LATD	set	3980
   190  0000                     _LATE	set	3981
   191  0000                     _PIE1bits	set	3997
   192  0000                     _PIE2bits	set	4000
   193  0000                     _PIE3bits	set	4003
   194  0000                     _PIR1bits	set	3998
   195  0000                     _PIR2bits	set	4001
   196  0000                     _PIR3bits	set	4004
   197  0000                     _PORTAbits	set	3968
   198  0000                     _PORTCbits	set	3970
   199  0000                     _RCONbits	set	4048
   200  0000                     _RXB0CON	set	3936
   201  0000                     _RXB0CONbits	set	3936
   202  0000                     _RXB0D0	set	3942
   203  0000                     _RXB0D1	set	3943
   204  0000                     _RXB0D2	set	3944
   205  0000                     _RXB0D3	set	3945
   206  0000                     _RXB0D4	set	3946
   207  0000                     _RXB0D5	set	3947
   208  0000                     _RXB0D6	set	3948
   209  0000                     _RXB0D7	set	3949
   210  0000                     _RXB0DLC	set	3941
   211  0000                     _RXB0DLCbits	set	3941
   212  0000                     _RXB0EIDH	set	3939
   213  0000                     _RXB0EIDL	set	3940
   214  0000                     _RXB0SIDH	set	3937
   215  0000                     _RXB0SIDL	set	3938
   216  0000                     _RXB0SIDLbits	set	3938
   217  0000                     _RXERRCNT	set	3957
   218  0000                     _T0CON	set	4053
   219  0000                     _T0CONbits	set	4053
   220  0000                     _T3CON	set	4017
   221  0000                     _TMR0H	set	4055
   222  0000                     _TMR0L	set	4054
   223  0000                     _TMR3H	set	4019
   224  0000                     _TMR3L	set	4018
   225  0000                     _TRISA	set	3986
   226  0000                     _TRISB	set	3987
   227  0000                     _TRISC	set	3988
   228  0000                     _TRISD	set	3989
   229  0000                     _TRISE	set	3990
   230  0000                     _TXERRCNT	set	3958
   231                           
   232                           ; #config settings
   233  0000                     
   234                           	psect	cinit
   235  00233C                     __pcinit:
   236                           	opt stack 0
   237  00233C                     start_initialization:
   238                           	opt stack 0
   239  00233C                     __initialization:
   240                           	opt stack 0
   241                           
   242                           ; Clear objects allocated to BANK0 (42 bytes)
   243  00233C  EE00  F091         	lfsr	0,__pbssBANK0
   244  002340  0E2A               	movlw	42
   245  002342                     clear_0:
   246  002342  6AEE               	clrf	postinc0,c
   247  002344  06E8               	decf	wreg,f,c
   248  002346  E1FD               	bnz	clear_0
   249                           
   250                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   251  002348  6A4A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   252                           
   253                           ; Clear objects allocated to COMRAM (36 bytes)
   254  00234A  EE00  F001         	lfsr	0,__pbssCOMRAM
   255  00234E  0E24               	movlw	36
   256  002350                     clear_1:
   257  002350  6AEE               	clrf	postinc0,c
   258  002352  06E8               	decf	wreg,f,c
   259  002354  E1FD               	bnz	clear_1
   260                           
   261                           ; Initialize objects allocated to COMRAM (7 bytes)
   262                           ; load TBLPTR registers with __pidataCOMRAM
   263  002356  0EC6               	movlw	low __pidataCOMRAM
   264  002358  6EF6               	movwf	tblptrl,c
   265  00235A  0E24               	movlw	high __pidataCOMRAM
   266  00235C  6EF7               	movwf	tblptrh,c
   267  00235E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   268  002360  6EF8               	movwf	tblptru,c
   269  002362  EE00  F043         	lfsr	0,__pdataCOMRAM
   270  002366  EE10 F007          	lfsr	1,7
   271  00236A                     copy_data0:
   272  00236A  0009               	tblrd		*+
   273  00236C  CFF5 FFEE          	movff	tablat,postinc0
   274  002370  50E5               	movf	postdec1,w,c
   275  002372  50E1               	movf	fsr1l,w,c
   276  002374  E1FA               	bnz	copy_data0
   277  002376                     end_of_initialization:
   278                           	opt stack 0
   279  002376                     __end_of__initialization:
   280                           	opt stack 0
   281  002376  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   282  002378  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   283  00237A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   284  00237C  6EF8               	movwf	tblptru,c
   285  00237E  0100               	movlb	0
   286  002380  EF2E  F00F         	goto	_main	;jump to C main() function
   287                           tblptru	equ	0xFF8
   288                           tblptrh	equ	0xFF7
   289                           tblptrl	equ	0xFF6
   290                           tablat	equ	0xFF5
   291                           postinc0	equ	0xFEE
   292                           wreg	equ	0xFE8
   293                           postdec1	equ	0xFE5
   294                           fsr1l	equ	0xFE1
   295                           
   296                           	psect	bitbssCOMRAM
   297  000250                     __pbitbssCOMRAM:
   298                           	opt stack 0
   299  000250                     _noChange:
   300                           	opt stack 0
   301  000250                     	ds	1
   302  000251                     _remote_frame:
   303                           	opt stack 0
   304  000251                     	ds	1
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           postdec1	equ	0xFE5
   312                           fsr1l	equ	0xFE1
   313                           
   314                           	psect	bssCOMRAM
   315  000001                     __pbssCOMRAM:
   316                           	opt stack 0
   317  000001                     _counter:
   318                           	opt stack 0
   319  000001                     	ds	4
   320  000005                     _timeCounter:
   321                           	opt stack 0
   322  000005                     	ds	4
   323  000009                     _Toff:
   324                           	opt stack 0
   325  000009                     	ds	2
   326  00000B                     _Ton:
   327                           	opt stack 0
   328  00000B                     	ds	2
   329  00000D                     _calibration:
   330                           	opt stack 0
   331  00000D                     	ds	2
   332  00000F                     _clock_counter_reference:
   333                           	opt stack 0
   334  00000F                     	ds	2
   335  000011                     _correzione:
   336                           	opt stack 0
   337  000011                     	ds	2
   338  000013                     _errore:
   339                           	opt stack 0
   340  000013                     	ds	2
   341  000015                     _theorySteering:
   342                           	opt stack 0
   343  000015                     	ds	1
   344  000016                     _msg:
   345                           	opt stack 0
   346  000016                     	ds	15
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           postinc0	equ	0xFEE
   352                           wreg	equ	0xFE8
   353                           postdec1	equ	0xFE5
   354                           fsr1l	equ	0xFE1
   355                           
   356                           	psect	dataCOMRAM
   357  000043                     __pdataCOMRAM:
   358                           	opt stack 0
   359  000043                     _limiteDx:
   360                           	opt stack 0
   361  000043                     	ds	2
   362  000045                     _potenza:
   363                           	opt stack 0
   364  000045                     	ds	2
   365  000047                     _currentSteering:
   366                           	opt stack 0
   367  000047                     	ds	1
   368  000048                     _delay_quartz_frequency_value:
   369                           	opt stack 0
   370  000048                     	ds	1
   371  000049                     _pastSteering:
   372                           	opt stack 0
   373  000049                     	ds	1
   374                           tblptru	equ	0xFF8
   375                           tblptrh	equ	0xFF7
   376                           tblptrl	equ	0xFF6
   377                           tablat	equ	0xFF5
   378                           postinc0	equ	0xFEE
   379                           wreg	equ	0xFE8
   380                           postdec1	equ	0xFE5
   381                           fsr1l	equ	0xFE1
   382                           
   383                           	psect	bssBANK0
   384  000091                     __pbssBANK0:
   385                           	opt stack 0
   386  000091                     _counter_array:
   387                           	opt stack 0
   388  000091                     	ds	8
   389  000099                     _currentSteering_array:
   390                           	opt stack 0
   391  000099                     	ds	8
   392  0000A1                     _duty_cycle:
   393                           	opt stack 0
   394  0000A1                     	ds	4
   395  0000A5                     _id:
   396                           	opt stack 0
   397  0000A5                     	ds	4
   398  0000A9                     _previousTimeCounter:
   399                           	opt stack 0
   400  0000A9                     	ds	4
   401  0000AD                     _timer:
   402                           	opt stack 0
   403  0000AD                     	ds	4
   404  0000B1                     _ADCResult:
   405                           	opt stack 0
   406  0000B1                     	ds	2
   407  0000B3                     _data_array:
   408                           	opt stack 0
   409  0000B3                     	ds	8
   410                           tblptru	equ	0xFF8
   411                           tblptrh	equ	0xFF7
   412                           tblptrl	equ	0xFF6
   413                           tablat	equ	0xFF5
   414                           postinc0	equ	0xFEE
   415                           wreg	equ	0xFE8
   416                           postdec1	equ	0xFE5
   417                           fsr1l	equ	0xFE1
   418                           
   419                           	psect	cstackBANK0
   420  000060                     __pcstackBANK0:
   421                           	opt stack 0
   422  000060                     WriteTimer0@timer0:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x0
   426  000060                     	ds	2
   427  000062                     WriteTimer0@timer:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x2
   431  000062                     	ds	2
   432  000064                     ??_ISR_alta:
   433                           
   434                           ; 0 bytes @ 0x4
   435  000064                     	ds	15
   436  000073                     ?_ReadADC:
   437                           	opt stack 0
   438  000073                     ?___lwdiv:
   439                           	opt stack 0
   440  000073                     ?___lmul:
   441                           	opt stack 0
   442  000073                     CANOperationMode@mode:
   443                           	opt stack 0
   444  000073                     _CANisTxReady$2910:
   445                           	opt stack 0
   446  000073                     OpenADC@config2:
   447                           	opt stack 0
   448  000073                     ___lwdiv@dividend:
   449                           	opt stack 0
   450  000073                     CANsendMessage@identifier:
   451                           	opt stack 0
   452  000073                     CANSetMask@mask:
   453                           	opt stack 0
   454  000073                     CANSetFilter@filter:
   455                           	opt stack 0
   456  000073                     ___lmul@multiplier:
   457                           	opt stack 0
   458                           
   459                           ; 4 bytes @ 0x13
   460  000073                     	ds	1
   461  000074                     OpenADC@portconfig:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x14
   465  000074                     	ds	1
   466  000075                     ??_ReadADC:
   467  000075                     ??_OpenADC:
   468  000075                     ___lwdiv@divisor:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x15
   472  000075                     	ds	2
   473  000077                     CANSetMask@type:
   474                           	opt stack 0
   475  000077                     CANSetFilter@type:
   476                           	opt stack 0
   477  000077                     OpenADC@config:
   478                           	opt stack 0
   479  000077                     CANsendMessage@data:
   480                           	opt stack 0
   481  000077                     ___lwdiv@quotient:
   482                           	opt stack 0
   483  000077                     ___lmul@multiplicand:
   484                           	opt stack 0
   485                           
   486                           ; 4 bytes @ 0x17
   487  000077                     	ds	1
   488  000078                     ??_CANSetMask:
   489  000078                     ??_CANSetFilter:
   490                           
   491                           ; 0 bytes @ 0x18
   492  000078                     	ds	1
   493  000079                     CANsendMessage@dataLength:
   494                           	opt stack 0
   495  000079                     ___lwdiv@counter:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x19
   499  000079                     	ds	1
   500  00007A                     CANsendMessage@flags:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x1A
   504  00007A                     	ds	1
   505  00007B                     ??_CANsendMessage:
   506  00007B                     ___lmul@product:
   507                           	opt stack 0
   508                           
   509                           ; 4 bytes @ 0x1B
   510  00007B                     	ds	1
   511  00007C                     CANSetMask@numBuffer:
   512                           	opt stack 0
   513  00007C                     CANSetFilter@numBuffer:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x1C
   517  00007C                     	ds	1
   518  00007D                     CANSetMask@tamp:
   519                           	opt stack 0
   520  00007D                     CANSetFilter@tamp:
   521                           	opt stack 0
   522                           
   523                           ; 4 bytes @ 0x1D
   524  00007D                     	ds	2
   525  00007F                     ?___lldiv:
   526                           	opt stack 0
   527  00007F                     CANsendMessage@tamp:
   528                           	opt stack 0
   529  00007F                     ___lldiv@dividend:
   530                           	opt stack 0
   531                           
   532                           ; 4 bytes @ 0x1F
   533  00007F                     	ds	2
   534  000081                     CANInitialize@phaseSeg1:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x21
   538  000081                     	ds	1
   539  000082                     CANInitialize@phaseSeg2:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x22
   543  000082                     	ds	1
   544  000083                     CANInitialize@SJW:
   545                           	opt stack 0
   546  000083                     ___lldiv@divisor:
   547                           	opt stack 0
   548                           
   549                           ; 4 bytes @ 0x23
   550  000083                     	ds	1
   551  000084                     CANInitialize@BRP:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x24
   555  000084                     	ds	1
   556  000085                     CANInitialize@flags:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x25
   560  000085                     	ds	1
   561  000086                     ??_CANInitialize:
   562                           
   563                           ; 0 bytes @ 0x26
   564  000086                     	ds	1
   565  000087                     ___lldiv@quotient:
   566                           	opt stack 0
   567                           
   568                           ; 4 bytes @ 0x27
   569  000087                     	ds	3
   570  00008A                     CANInitialize@propSeg:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x2A
   574  00008A                     	ds	1
   575  00008B                     CANInitialize@FilterConfig1:
   576                           	opt stack 0
   577  00008B                     ___lldiv@counter:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x2B
   581  00008B                     	ds	1
   582  00008C                     CANInitialize@FilterConfig2:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x2C
   586  00008C                     	ds	1
   587  00008D                     ??_main:
   588                           
   589                           ; 0 bytes @ 0x2D
   590  00008D                     	ds	4
   591                           tblptru	equ	0xFF8
   592                           tblptrh	equ	0xFF7
   593                           tblptrl	equ	0xFF6
   594                           tablat	equ	0xFF5
   595                           postinc0	equ	0xFEE
   596                           wreg	equ	0xFE8
   597                           postdec1	equ	0xFE5
   598                           fsr1l	equ	0xFE1
   599                           
   600                           	psect	cstackCOMRAM
   601  000025                     __pcstackCOMRAM:
   602                           	opt stack 0
   603  000025                     ?___wmul:
   604                           	opt stack 0
   605  000025                     _CANisRxReady$2912:
   606                           	opt stack 0
   607  000025                     CANreceiveMessage@msg:
   608                           	opt stack 0
   609  000025                     ___wmul@multiplier:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x0
   613  000025                     	ds	2
   614  000027                     ??_CANreceiveMessage:
   615  000027                     ___wmul@multiplicand:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x2
   619  000027                     	ds	2
   620  000029                     ___wmul@product:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0x4
   624  000029                     	ds	2
   625  00002B                     ?i1___lwdiv:
   626                           	opt stack 0
   627  00002B                     i1___lwdiv@dividend:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x6
   631  00002B                     	ds	2
   632  00002D                     i1___lwdiv@divisor:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x8
   636  00002D                     	ds	2
   637  00002F                     CANreceiveMessage@error:
   638                           	opt stack 0
   639  00002F                     i1___lwdiv@quotient:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0xA
   643  00002F                     	ds	1
   644  000030                     CANreceiveMessage@tamp:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0xB
   648  000030                     	ds	1
   649  000031                     i1___lwdiv@counter:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0xC
   653  000031                     	ds	1
   654  000032                     ??_ISR_bassa:
   655                           
   656                           ; 0 bytes @ 0xD
   657  000032                     	ds	17
   658                           tblptru	equ	0xFF8
   659                           tblptrh	equ	0xFF7
   660                           tblptrl	equ	0xFF6
   661                           tablat	equ	0xFF5
   662                           postinc0	equ	0xFEE
   663                           wreg	equ	0xFE8
   664                           postdec1	equ	0xFE5
   665                           fsr1l	equ	0xFE1
   666                           
   667 ;;
   668 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   669 ;;
   670 ;; *************** function _main *****************
   671 ;; Defined at:
   672 ;;		line 128 in file "newmain.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  2  644[None  ] int 
   679 ;; Registers used:
   680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   686 ;;      Params:         0       0       0       0
   687 ;;      Locals:         0       0       0       0
   688 ;;      Temps:          0       4       0       0
   689 ;;      Totals:         0       4       0       0
   690 ;;Total ram usage:        4 bytes
   691 ;; Hardware stack levels required when called:    7
   692 ;; This function calls:
   693 ;;		_CANisRXwarningON
   694 ;;		_CANisTXwarningON
   695 ;;		___lldiv
   696 ;;		___lmul
   697 ;;		_calibrazione
   698 ;;		_configurazione_iniziale
   699 ;;		_send_data
   700 ;; This function is called by:
   701 ;;		Startup code after reset
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text0
   706  001E5C                     __ptext0:
   707                           	opt stack 0
   708  001E5C                     _main:
   709                           	opt stack 24
   710                           
   711                           ;newmain.c: 129: configurazione_iniziale();
   712                           
   713                           ;incstack = 0
   714  001E5C  EC78  F010         	call	_configurazione_iniziale	;wreg free
   715  001E60                     l645:
   716                           
   717                           ;newmain.c: 131: calibrazione();
   718  001E60  ECC2  F011         	call	_calibrazione	;wreg free
   719                           
   720                           ;newmain.c: 132: duty_cycle = currentSteering;
   721  001E64  5047               	movf	_currentSteering,w,c
   722  001E66  0100               	movlb	0	; () banked
   723  001E68  6FA1               	movwf	_duty_cycle& (0+255),b
   724  001E6A  6BA2               	clrf	(_duty_cycle+1)& (0+255),b
   725  001E6C  6BA3               	clrf	(_duty_cycle+2)& (0+255),b
   726  001E6E  6BA4               	clrf	(_duty_cycle+3)& (0+255),b
   727                           
   728                           ; BSR set to: 0
   729                           ;newmain.c: 133: if (PORTCbits.RC0 == 0) {
   730  001E70  B082               	btfsc	3970,0,c	;volatile
   731  001E72  D7F6               	goto	l645
   732                           
   733                           ; BSR set to: 0
   734                           ;newmain.c: 134: timer = (((duty_cycle * 700) / 90) + 800) *2;
   735  001E74  C0A1  F073         	movff	_duty_cycle,___lmul@multiplier
   736  001E78  C0A2  F074         	movff	_duty_cycle+1,___lmul@multiplier+1
   737  001E7C  C0A3  F075         	movff	_duty_cycle+2,___lmul@multiplier+2
   738  001E80  C0A4  F076         	movff	_duty_cycle+3,___lmul@multiplier+3
   739  001E84  0EBC               	movlw	188
   740  001E86  0100               	movlb	0	; () banked
   741  001E88  6F77               	movwf	___lmul@multiplicand& (0+255),b
   742  001E8A  0E02               	movlw	2
   743  001E8C  6F78               	movwf	(___lmul@multiplicand+1)& (0+255),b
   744  001E8E  0E00               	movlw	0
   745  001E90  6F79               	movwf	(___lmul@multiplicand+2)& (0+255),b
   746  001E92  0E00               	movlw	0
   747  001E94  6F7A               	movwf	(___lmul@multiplicand+3)& (0+255),b
   748  001E96  EC3A  F011         	call	___lmul	;wreg free
   749  001E9A  C073  F07F         	movff	?___lmul,___lldiv@dividend
   750  001E9E  C074  F080         	movff	?___lmul+1,___lldiv@dividend+1
   751  001EA2  C075  F081         	movff	?___lmul+2,___lldiv@dividend+2
   752  001EA6  C076  F082         	movff	?___lmul+3,___lldiv@dividend+3
   753  001EAA  0E5A               	movlw	90
   754  001EAC  0100               	movlb	0	; () banked
   755  001EAE  6F83               	movwf	___lldiv@divisor& (0+255),b
   756  001EB0  0E00               	movlw	0
   757  001EB2  6F84               	movwf	(___lldiv@divisor+1)& (0+255),b
   758  001EB4  0E00               	movlw	0
   759  001EB6  6F85               	movwf	(___lldiv@divisor+2)& (0+255),b
   760  001EB8  0E00               	movlw	0
   761  001EBA  6F86               	movwf	(___lldiv@divisor+3)& (0+255),b
   762  001EBC  ECBF  F00F         	call	___lldiv	;wreg free
   763  001EC0  90D8               	bcf	status,0,c
   764  001EC2  0100               	movlb	0	; () banked
   765  001EC4  357F               	rlcf	?___lldiv& (0+255),w,b
   766  001EC6  0100               	movlb	0	; () banked
   767  001EC8  6F8D               	movwf	??_main& (0+255),b
   768  001ECA  0100               	movlb	0	; () banked
   769  001ECC  3580               	rlcf	(?___lldiv+1)& (0+255),w,b
   770  001ECE  0100               	movlb	0	; () banked
   771  001ED0  6F8E               	movwf	(??_main+1)& (0+255),b
   772  001ED2  0100               	movlb	0	; () banked
   773  001ED4  3581               	rlcf	(?___lldiv+2)& (0+255),w,b
   774  001ED6  0100               	movlb	0	; () banked
   775  001ED8  6F8F               	movwf	(??_main+2)& (0+255),b
   776  001EDA  0100               	movlb	0	; () banked
   777  001EDC  3582               	rlcf	(?___lldiv+3)& (0+255),w,b
   778  001EDE  0100               	movlb	0	; () banked
   779  001EE0  6F90               	movwf	(??_main+3)& (0+255),b
   780  001EE2  0E40               	movlw	64
   781  001EE4  0100               	movlb	0	; () banked
   782  001EE6  258D               	addwf	??_main& (0+255),w,b
   783  001EE8  0100               	movlb	0	; () banked
   784  001EEA  6FAD               	movwf	_timer& (0+255),b
   785  001EEC  0E06               	movlw	6
   786  001EEE  0100               	movlb	0	; () banked
   787  001EF0  218E               	addwfc	(??_main+1)& (0+255),w,b
   788  001EF2  0100               	movlb	0	; () banked
   789  001EF4  6FAE               	movwf	(_timer+1)& (0+255),b
   790  001EF6  0E00               	movlw	0
   791  001EF8  0100               	movlb	0	; () banked
   792  001EFA  218F               	addwfc	(??_main+2)& (0+255),w,b
   793  001EFC  0100               	movlb	0	; () banked
   794  001EFE  6FAF               	movwf	(_timer+2)& (0+255),b
   795  001F00  0E00               	movlw	0
   796  001F02  0100               	movlb	0	; () banked
   797  001F04  2190               	addwfc	(??_main+3)& (0+255),w,b
   798  001F06  0100               	movlb	0	; () banked
   799  001F08  6FB0               	movwf	(_timer+3)& (0+255),b
   800                           
   801                           ; BSR set to: 0
   802                           ;newmain.c: 135: Ton = 65536 - timer;
   803  001F0A  C0AD  F08D         	movff	_timer,??_main
   804  001F0E  C0AE  F08E         	movff	_timer+1,??_main+1
   805  001F12  0100               	movlb	0	; () banked
   806  001F14  1F8D               	comf	??_main& (0+255),f,b
   807  001F16  1F8E               	comf	(??_main+1)& (0+255),f,b
   808  001F18  4B8D               	infsnz	??_main& (0+255),f,b
   809  001F1A  2B8E               	incf	(??_main+1)& (0+255),f,b
   810  001F1C  C08D  F00B         	movff	??_main,_Ton
   811  001F20  C08E  F00C         	movff	??_main+1,_Ton+1
   812                           
   813                           ; BSR set to: 0
   814                           ;newmain.c: 136: Toff = 20000 - (timer / 2);
   815  001F24  C0AD  F08D         	movff	_timer,??_main
   816  001F28  C0AE  F08E         	movff	_timer+1,??_main+1
   817  001F2C  C0AF  F08F         	movff	_timer+2,??_main+2
   818  001F30  C0B0  F090         	movff	_timer+3,??_main+3
   819  001F34  0100               	movlb	0	; () banked
   820  001F36  90D8               	bcf	status,0,c
   821  001F38  3390               	rrcf	(??_main+3)& (0+255),f,b
   822  001F3A  338F               	rrcf	(??_main+2)& (0+255),f,b
   823  001F3C  338E               	rrcf	(??_main+1)& (0+255),f,b
   824  001F3E  338D               	rrcf	??_main& (0+255),f,b
   825  001F40  0100               	movlb	0	; () banked
   826  001F42  1F8D               	comf	??_main& (0+255),f,b
   827  001F44  1F8E               	comf	(??_main+1)& (0+255),f,b
   828  001F46  4B8D               	infsnz	??_main& (0+255),f,b
   829  001F48  2B8E               	incf	(??_main+1)& (0+255),f,b
   830  001F4A  0E20               	movlw	32
   831  001F4C  0100               	movlb	0	; () banked
   832  001F4E  258D               	addwf	??_main& (0+255),w,b
   833  001F50  6E09               	movwf	_Toff,c
   834  001F52  0E4E               	movlw	78
   835  001F54  0100               	movlb	0	; () banked
   836  001F56  218E               	addwfc	(??_main+1)& (0+255),w,b
   837  001F58  6E0A               	movwf	_Toff+1,c
   838                           
   839                           ; BSR set to: 0
   840                           ;newmain.c: 137: Toff = (65536 - (Toff * 2));
   841  001F5A  C009  F08D         	movff	_Toff,??_main
   842  001F5E  C00A  F08E         	movff	_Toff+1,??_main+1
   843  001F62  90D8               	bcf	status,0,c
   844  001F64  0100               	movlb	0	; () banked
   845  001F66  378D               	rlcf	??_main& (0+255),f,b
   846  001F68  378E               	rlcf	(??_main+1)& (0+255),f,b
   847  001F6A  0100               	movlb	0	; () banked
   848  001F6C  1F8D               	comf	??_main& (0+255),f,b
   849  001F6E  1F8E               	comf	(??_main+1)& (0+255),f,b
   850  001F70  4B8D               	infsnz	??_main& (0+255),f,b
   851  001F72  2B8E               	incf	(??_main+1)& (0+255),f,b
   852  001F74  C08D  F009         	movff	??_main,_Toff
   853  001F78  C08E  F00A         	movff	??_main+1,_Toff+1
   854                           
   855                           ; BSR set to: 0
   856                           
   857                           ; BSR set to: 0
   858  001F7C  D771               	goto	l645
   859  001F7E                     __end_of_main:
   860                           	opt stack 0
   861                           tblptru	equ	0xFF8
   862                           tblptrh	equ	0xFF7
   863                           tblptrl	equ	0xFF6
   864                           tablat	equ	0xFF5
   865                           postinc0	equ	0xFEE
   866                           wreg	equ	0xFE8
   867                           postdec1	equ	0xFE5
   868                           fsr1l	equ	0xFE1
   869                           status	equ	0xFD8
   870                           
   871 ;; *************** function _send_data *****************
   872 ;; Defined at:
   873 ;;		line 155 in file "newmain.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;		None               void
   880 ;; Registers used:
   881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   887 ;;      Params:         0       0       0       0
   888 ;;      Locals:         0       0       0       0
   889 ;;      Temps:          0       0       0       0
   890 ;;      Totals:         0       0       0       0
   891 ;;Total ram usage:        0 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    5
   894 ;; This function calls:
   895 ;;		_CANisTxReady
   896 ;;		_CANsendMessage
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text1
   903  0023CA                     __ptext1:
   904                           	opt stack 0
   905  0023CA                     _send_data:
   906                           	opt stack 25
   907                           
   908                           ;newmain.c: 156: if (CANisTxReady()) {
   909                           
   910                           ;incstack = 0
   911  0023CA  EC17  F012         	call	_CANisTxReady	;wreg free
   912  0023CE  0900               	iorlw	0
   913  0023D0  B4D8               	btfsc	status,2,c
   914  0023D2  0012               	return	
   915                           
   916                           ;newmain.c: 157: if (remote_frame == 1) {
   917  0023D4  A24A               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
   918  0023D6  D016               	goto	l3497
   919                           
   920                           ;newmain.c: 159: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG &
   921                           ;newmain.c: 160: CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   922  0023D8  C0A5  F073         	movff	_id,CANsendMessage@identifier
   923  0023DC  C0A6  F074         	movff	_id+1,CANsendMessage@identifier+1
   924  0023E0  C0A7  F075         	movff	_id+2,CANsendMessage@identifier+2
   925  0023E4  C0A8  F076         	movff	_id+3,CANsendMessage@identifier+3
   926  0023E8  0EB3               	movlw	low _data_array
   927  0023EA  0100               	movlb	0	; () banked
   928  0023EC  6F77               	movwf	CANsendMessage@data& (0+255),b
   929  0023EE  0E00               	movlw	high _data_array
   930  0023F0  0100               	movlb	0	; () banked
   931  0023F2  6F78               	movwf	(CANsendMessage@data+1)& (0+255),b
   932  0023F4  0E08               	movlw	8
   933  0023F6  0100               	movlb	0	; () banked
   934  0023F8  6F79               	movwf	CANsendMessage@dataLength& (0+255),b
   935  0023FA  0EBC               	movlw	188
   936  0023FC  0100               	movlb	0	; () banked
   937  0023FE  6F7A               	movwf	CANsendMessage@flags& (0+255),b
   938  002400  EC30  F006         	call	_CANsendMessage	;wreg free
   939  002404                     l3497:
   940                           
   941                           ;newmain.c: 165: }
   942                           ;newmain.c: 166: remote_frame = 0;
   943  002404  924A               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
   944  002406  0012               	return	
   945  002408                     __end_of_send_data:
   946                           	opt stack 0
   947                           tblptru	equ	0xFF8
   948                           tblptrh	equ	0xFF7
   949                           tblptrl	equ	0xFF6
   950                           tablat	equ	0xFF5
   951                           postinc0	equ	0xFEE
   952                           wreg	equ	0xFE8
   953                           postdec1	equ	0xFE5
   954                           fsr1l	equ	0xFE1
   955                           status	equ	0xFD8
   956                           
   957 ;; *************** function _CANsendMessage *****************
   958 ;; Defined at:
   959 ;;		line 294 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  identifier      4   19[BANK0 ] unsigned long 
   962 ;;  data            2   23[BANK0 ] PTR unsigned char 
   963 ;;		 -> data_array(8), 
   964 ;;  dataLength      1   25[BANK0 ] unsigned char 
   965 ;;  flags           1   26[BANK0 ] enum E16866
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  tamp            4   31[BANK0 ] unsigned long 
   968 ;; Return value:  Size  Location     Type
   969 ;;		None               void
   970 ;; Registers used:
   971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   977 ;;      Params:         0       8       0       0
   978 ;;      Locals:         0       4       0       0
   979 ;;      Temps:          0       4       0       0
   980 ;;      Totals:         0      16       0       0
   981 ;;Total ram usage:       16 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    4
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_send_data
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text2
   992  000C60                     __ptext2:
   993                           	opt stack 0
   994  000C60                     _CANsendMessage:
   995                           	opt stack 25
   996                           
   997                           ;inc\CANlib.h: 296: unsigned long tamp;
   998                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
   999                           
  1000                           ;incstack = 0
  1001  000C60  010F               	movlb	15	; () banked
  1002  000C62  B740               	btfsc	64,3,b	;volatile
  1003  000C64  D13F               	goto	l361
  1004                           
  1005                           ; BSR set to: 15
  1006                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1007  000C66  C079  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1008                           
  1009                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1010  000C6A  0100               	movlb	0	; () banked
  1011  000C6C  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1012  000C6E  D003               	goto	l362
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1016  000C70  010F               	movlb	15	; () banked
  1017  000C72  8D45               	bsf	69,6,b	;volatile
  1018  000C74  D002               	goto	l363
  1019  000C76                     l362:
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;inc\CANlib.h: 302: else
  1023                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1024  000C76  010F               	movlb	15	; () banked
  1025  000C78  9D45               	bcf	69,6,b	;volatile
  1026  000C7A                     l363:
  1027                           
  1028                           ; BSR set to: 15
  1029                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1030  000C7A  0100               	movlb	0	; () banked
  1031  000C7C  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1032  000C7E  D079               	goto	l364
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;inc\CANlib.h: 306: {
  1036                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1037  000C80  0100               	movlb	0	; () banked
  1038  000C82  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1039  000C84  0100               	movlb	0	; () banked
  1040  000C86  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1041  000C88  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1042  000C8A  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1043  000C8C  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1044                           
  1045                           ; BSR set to: 0
  1046                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1047  000C8E  C07F  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1051  000C92  0E00               	movlw	0
  1052  000C94  0100               	movlb	0	; () banked
  1053  000C96  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1054  000C98  0100               	movlb	0	; () banked
  1055  000C9A  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1056  000C9C  0EFF               	movlw	255
  1057  000C9E  0100               	movlb	0	; () banked
  1058  000CA0  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1059  000CA2  0100               	movlb	0	; () banked
  1060  000CA4  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1061  000CA6  0E00               	movlw	0
  1062  000CA8  0100               	movlb	0	; () banked
  1063  000CAA  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1064  000CAC  0100               	movlb	0	; () banked
  1065  000CAE  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1066  000CB0  0E00               	movlw	0
  1067  000CB2  0100               	movlb	0	; () banked
  1068  000CB4  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1069  000CB6  0100               	movlb	0	; () banked
  1070  000CB8  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1074  000CBA  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1075  000CBE  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1076  000CC2  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1077  000CC6  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1078  000CCA  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1079  000CCE  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1080  000CD2  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1081  000CD6  0100               	movlb	0	; () banked
  1082  000CD8  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1083  000CDA  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1084  000CDE  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1085  000CE2  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1086  000CE6  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1090  000CEA  C07F  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1094  000CEE  0E00               	movlw	0
  1095  000CF0  010F               	movlb	15	; () banked
  1096  000CF2  6F42               	movwf	66,b	;volatile
  1097                           
  1098                           ; BSR set to: 15
  1099                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1100  000CF4  010F               	movlb	15	; () banked
  1101  000CF6  8742               	bsf	66,3,b	;volatile
  1102                           
  1103                           ; BSR set to: 15
  1104                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1105  000CF8  0100               	movlb	0	; () banked
  1106  000CFA  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1107  000CFC  D002               	goto	l365
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1111  000CFE  010F               	movlb	15	; () banked
  1112  000D00  8142               	bsf	66,0,b	;volatile
  1113  000D02                     l365:
  1114                           
  1115                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1116  000D02  0100               	movlb	0	; () banked
  1117  000D04  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1118  000D06  D002               	goto	l366
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1122  000D08  010F               	movlb	15	; () banked
  1123  000D0A  8342               	bsf	66,1,b	;volatile
  1124  000D0C                     l366:
  1125                           
  1126                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1127  000D0C  0100               	movlb	0	; () banked
  1128  000D0E  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1129  000D10  D002               	goto	l367
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1133  000D12  010F               	movlb	15	; () banked
  1134  000D14  8B42               	bsf	66,5,b	;volatile
  1135  000D16                     l367:
  1136                           
  1137                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1138  000D16  0100               	movlb	0	; () banked
  1139  000D18  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1140  000D1A  D002               	goto	l368
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1144  000D1C  010F               	movlb	15	; () banked
  1145  000D1E  8D42               	bsf	66,6,b	;volatile
  1146  000D20                     l368:
  1147                           
  1148                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1149  000D20  0100               	movlb	0	; () banked
  1150  000D22  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1151  000D24  D002               	goto	l3003
  1152                           
  1153                           ; BSR set to: 0
  1154                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1155  000D26  010F               	movlb	15	; () banked
  1156  000D28  8F42               	bsf	66,7,b	;volatile
  1157  000D2A                     l3003:
  1158                           
  1159                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1160  000D2A  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1161  000D2E  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1162  000D32  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1163  000D36  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1164  000D3A  0E16               	movlw	22
  1165  000D3C  D006               	goto	u3160
  1166  000D3E                     u3165:
  1167  000D3E  0100               	movlb	0	; () banked
  1168  000D40  90D8               	bcf	status,0,c
  1169  000D42  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1170  000D44  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1171  000D46  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1172  000D48  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1173  000D4A                     u3160:
  1174  000D4A  2EE8               	decfsz	wreg,f,c
  1175  000D4C  D7F8               	goto	u3165
  1176  000D4E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1177  000D52  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1178  000D56  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1179  000D5A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1183  000D5E  0100               	movlb	0	; () banked
  1184  000D60  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1185  000D62  0100               	movlb	0	; () banked
  1186  000D64  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1187  000D66  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1188  000D68  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1189  000D6A  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1193  000D6C  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1194                           
  1195                           ;inc\CANlib.h: 332: }
  1196  000D70  D059               	goto	l3023
  1197  000D72                     l364:
  1198                           
  1199                           ; BSR set to: 0
  1200                           ;inc\CANlib.h: 334: else
  1201                           ;inc\CANlib.h: 336: {
  1202                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1203  000D72  010F               	movlb	15	; () banked
  1204  000D74  9742               	bcf	66,3,b	;volatile
  1205                           
  1206                           ; BSR set to: 15
  1207                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1208  000D76  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1209  000D7A  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1210  000D7E  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1211  000D82  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1212  000D86  0E04               	movlw	4
  1213  000D88  D006               	goto	u3170
  1214  000D8A                     u3175:
  1215  000D8A  0100               	movlb	0	; () banked
  1216  000D8C  90D8               	bcf	status,0,c
  1217  000D8E  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1218  000D90  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1219  000D92  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1220  000D94  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1221  000D96                     u3170:
  1222  000D96  2EE8               	decfsz	wreg,f,c
  1223  000D98  D7F8               	goto	u3175
  1224  000D9A  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1225  000D9E  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1226  000DA2  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1227  000DA6  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1231  000DAA  0100               	movlb	0	; () banked
  1232  000DAC  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1233  000DAE  0100               	movlb	0	; () banked
  1234  000DB0  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1235  000DB2  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1236  000DB4  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1237  000DB6  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1241  000DB8  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1245  000DBC  0E07               	movlw	7
  1246  000DBE  0100               	movlb	0	; () banked
  1247  000DC0  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1248  000DC2  0100               	movlb	0	; () banked
  1249  000DC4  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1250  000DC6  0E00               	movlw	0
  1251  000DC8  0100               	movlb	0	; () banked
  1252  000DCA  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1253  000DCC  0100               	movlb	0	; () banked
  1254  000DCE  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1255  000DD0  0E00               	movlw	0
  1256  000DD2  0100               	movlb	0	; () banked
  1257  000DD4  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1258  000DD6  0100               	movlb	0	; () banked
  1259  000DD8  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1260  000DDA  0E00               	movlw	0
  1261  000DDC  0100               	movlb	0	; () banked
  1262  000DDE  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1263  000DE0  0100               	movlb	0	; () banked
  1264  000DE2  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1268  000DE4  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1269  000DE8  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1270  000DEC  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1271  000DF0  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1272  000DF4  0E05               	movlw	5
  1273  000DF6                     u3185:
  1274  000DF6  90D8               	bcf	status,0,c
  1275  000DF8  0100               	movlb	0	; () banked
  1276  000DFA  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1277  000DFC  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1278  000DFE  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1279  000E00  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1280  000E02  2EE8               	decfsz	wreg,f,c
  1281  000E04  D7F8               	goto	u3185
  1282  000E06  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1283  000E0A  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1284  000E0E  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1285  000E12  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1289  000E16  010F               	movlb	15	; () banked
  1290  000E18  5142               	movf	66,w,b	;volatile
  1291  000E1A  0B1F               	andlw	31
  1292  000E1C  010F               	movlb	15	; () banked
  1293  000E1E  6F42               	movwf	66,b	;volatile
  1294                           
  1295                           ; BSR set to: 15
  1296                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1297  000E20  C07F  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1298  000E24                     l3023:
  1299                           
  1300                           ;inc\CANlib.h: 347: }
  1301                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1302  000E24  0100               	movlb	0	; () banked
  1303  000E26  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1304  000E28  D003               	goto	l371
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1308  000E2A  010F               	movlb	15	; () banked
  1309  000E2C  8140               	bsf	64,0,b	;volatile
  1310  000E2E  D002               	goto	l372
  1311  000E30                     l371:
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;inc\CANlib.h: 351: else
  1315                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1316  000E30  010F               	movlb	15	; () banked
  1317  000E32  9140               	bcf	64,0,b	;volatile
  1318  000E34                     l372:
  1319                           
  1320                           ; BSR set to: 15
  1321                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1322  000E34  0100               	movlb	0	; () banked
  1323  000E36  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1324  000E38  D003               	goto	l373
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1328  000E3A  010F               	movlb	15	; () banked
  1329  000E3C  8340               	bsf	64,1,b	;volatile
  1330  000E3E  D002               	goto	l3029
  1331  000E40                     l373:
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;inc\CANlib.h: 355: else
  1335                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1336  000E40  010F               	movlb	15	; () banked
  1337  000E42  9340               	bcf	64,1,b	;volatile
  1338  000E44                     l3029:
  1339                           
  1340                           ; BSR set to: 15
  1341                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1342  000E44  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1343  000E48  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1344  000E4C  50DF               	movf	indf2,w,c
  1345  000E4E  010F               	movlb	15	; () banked
  1346  000E50  6F46               	movwf	70,b	;volatile
  1347                           
  1348                           ; BSR set to: 15
  1349                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1350  000E52  0100               	movlb	0	; () banked
  1351  000E54  EE20 F001          	lfsr	2,1
  1352  000E58  5177               	movf	CANsendMessage@data& (0+255),w,b
  1353  000E5A  26D9               	addwf	fsr2l,f,c
  1354  000E5C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1355  000E5E  22DA               	addwfc	fsr2h,f,c
  1356  000E60  50DF               	movf	indf2,w,c
  1357  000E62  010F               	movlb	15	; () banked
  1358  000E64  6F47               	movwf	71,b	;volatile
  1359                           
  1360                           ; BSR set to: 15
  1361                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1362  000E66  0100               	movlb	0	; () banked
  1363  000E68  EE20 F002          	lfsr	2,2
  1364  000E6C  5177               	movf	CANsendMessage@data& (0+255),w,b
  1365  000E6E  26D9               	addwf	fsr2l,f,c
  1366  000E70  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1367  000E72  22DA               	addwfc	fsr2h,f,c
  1368  000E74  50DF               	movf	indf2,w,c
  1369  000E76  010F               	movlb	15	; () banked
  1370  000E78  6F48               	movwf	72,b	;volatile
  1371                           
  1372                           ; BSR set to: 15
  1373                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1374  000E7A  0100               	movlb	0	; () banked
  1375  000E7C  EE20 F003          	lfsr	2,3
  1376  000E80  5177               	movf	CANsendMessage@data& (0+255),w,b
  1377  000E82  26D9               	addwf	fsr2l,f,c
  1378  000E84  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1379  000E86  22DA               	addwfc	fsr2h,f,c
  1380  000E88  50DF               	movf	indf2,w,c
  1381  000E8A  010F               	movlb	15	; () banked
  1382  000E8C  6F49               	movwf	73,b	;volatile
  1383                           
  1384                           ; BSR set to: 15
  1385                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1386  000E8E  0100               	movlb	0	; () banked
  1387  000E90  EE20 F004          	lfsr	2,4
  1388  000E94  5177               	movf	CANsendMessage@data& (0+255),w,b
  1389  000E96  26D9               	addwf	fsr2l,f,c
  1390  000E98  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1391  000E9A  22DA               	addwfc	fsr2h,f,c
  1392  000E9C  50DF               	movf	indf2,w,c
  1393  000E9E  010F               	movlb	15	; () banked
  1394  000EA0  6F4A               	movwf	74,b	;volatile
  1395                           
  1396                           ; BSR set to: 15
  1397                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1398  000EA2  0100               	movlb	0	; () banked
  1399  000EA4  EE20 F005          	lfsr	2,5
  1400  000EA8  5177               	movf	CANsendMessage@data& (0+255),w,b
  1401  000EAA  26D9               	addwf	fsr2l,f,c
  1402  000EAC  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1403  000EAE  22DA               	addwfc	fsr2h,f,c
  1404  000EB0  50DF               	movf	indf2,w,c
  1405  000EB2  010F               	movlb	15	; () banked
  1406  000EB4  6F4B               	movwf	75,b	;volatile
  1407                           
  1408                           ; BSR set to: 15
  1409                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1410  000EB6  0100               	movlb	0	; () banked
  1411  000EB8  EE20 F006          	lfsr	2,6
  1412  000EBC  5177               	movf	CANsendMessage@data& (0+255),w,b
  1413  000EBE  26D9               	addwf	fsr2l,f,c
  1414  000EC0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1415  000EC2  22DA               	addwfc	fsr2h,f,c
  1416  000EC4  50DF               	movf	indf2,w,c
  1417  000EC6  010F               	movlb	15	; () banked
  1418  000EC8  6F4C               	movwf	76,b	;volatile
  1419                           
  1420                           ; BSR set to: 15
  1421                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1422  000ECA  0100               	movlb	0	; () banked
  1423  000ECC  EE20 F007          	lfsr	2,7
  1424  000ED0  5177               	movf	CANsendMessage@data& (0+255),w,b
  1425  000ED2  26D9               	addwf	fsr2l,f,c
  1426  000ED4  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1427  000ED6  22DA               	addwfc	fsr2h,f,c
  1428  000ED8  50DF               	movf	indf2,w,c
  1429  000EDA  010F               	movlb	15	; () banked
  1430  000EDC  6F4D               	movwf	77,b	;volatile
  1431                           
  1432                           ; BSR set to: 15
  1433                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1434  000EDE  010F               	movlb	15	; () banked
  1435  000EE0  8740               	bsf	64,3,b	;volatile
  1436                           
  1437                           ; BSR set to: 15
  1438                           ;inc\CANlib.h: 368: return;
  1439  000EE2  0012               	return	
  1440  000EE4                     l361:
  1441                           
  1442                           ; BSR set to: 15
  1443                           ;inc\CANlib.h: 369: }
  1444                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1445  000EE4  010F               	movlb	15	; () banked
  1446  000EE6  B730               	btfsc	48,3,b	;volatile
  1447  000EE8  D13F               	goto	l376
  1448                           
  1449                           ; BSR set to: 15
  1450                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1451  000EEA  C079  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1452                           
  1453                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1454  000EEE  0100               	movlb	0	; () banked
  1455  000EF0  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1456  000EF2  D003               	goto	l377
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1460  000EF4  010F               	movlb	15	; () banked
  1461  000EF6  8D35               	bsf	53,6,b	;volatile
  1462  000EF8  D002               	goto	l378
  1463  000EFA                     l377:
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;inc\CANlib.h: 378: else
  1467                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1468  000EFA  010F               	movlb	15	; () banked
  1469  000EFC  9D35               	bcf	53,6,b	;volatile
  1470  000EFE                     l378:
  1471                           
  1472                           ; BSR set to: 15
  1473                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1474  000EFE  0100               	movlb	0	; () banked
  1475  000F00  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1476  000F02  D079               	goto	l379
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;inc\CANlib.h: 382: {
  1480                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1481  000F04  0100               	movlb	0	; () banked
  1482  000F06  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1483  000F08  0100               	movlb	0	; () banked
  1484  000F0A  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1485  000F0C  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1486  000F0E  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1487  000F10  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1491  000F12  C07F  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1495  000F16  0E00               	movlw	0
  1496  000F18  0100               	movlb	0	; () banked
  1497  000F1A  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1498  000F1C  0100               	movlb	0	; () banked
  1499  000F1E  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1500  000F20  0EFF               	movlw	255
  1501  000F22  0100               	movlb	0	; () banked
  1502  000F24  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1503  000F26  0100               	movlb	0	; () banked
  1504  000F28  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1505  000F2A  0E00               	movlw	0
  1506  000F2C  0100               	movlb	0	; () banked
  1507  000F2E  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1508  000F30  0100               	movlb	0	; () banked
  1509  000F32  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1510  000F34  0E00               	movlw	0
  1511  000F36  0100               	movlb	0	; () banked
  1512  000F38  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1513  000F3A  0100               	movlb	0	; () banked
  1514  000F3C  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1518  000F3E  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1519  000F42  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1520  000F46  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1521  000F4A  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1522  000F4E  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1523  000F52  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1524  000F56  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1525  000F5A  0100               	movlb	0	; () banked
  1526  000F5C  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1527  000F5E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1528  000F62  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1529  000F66  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1530  000F6A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1534  000F6E  C07F  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1535                           
  1536                           ; BSR set to: 0
  1537                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  1538  000F72  0E00               	movlw	0
  1539  000F74  010F               	movlb	15	; () banked
  1540  000F76  6F32               	movwf	50,b	;volatile
  1541                           
  1542                           ; BSR set to: 15
  1543                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1544  000F78  010F               	movlb	15	; () banked
  1545  000F7A  8732               	bsf	50,3,b	;volatile
  1546                           
  1547                           ; BSR set to: 15
  1548                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  1549  000F7C  0100               	movlb	0	; () banked
  1550  000F7E  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1551  000F80  D002               	goto	l380
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  1555  000F82  010F               	movlb	15	; () banked
  1556  000F84  8132               	bsf	50,0,b	;volatile
  1557  000F86                     l380:
  1558                           
  1559                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  1560  000F86  0100               	movlb	0	; () banked
  1561  000F88  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1562  000F8A  D002               	goto	l381
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  1566  000F8C  010F               	movlb	15	; () banked
  1567  000F8E  8332               	bsf	50,1,b	;volatile
  1568  000F90                     l381:
  1569                           
  1570                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  1571  000F90  0100               	movlb	0	; () banked
  1572  000F92  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1573  000F94  D002               	goto	l382
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  1577  000F96  010F               	movlb	15	; () banked
  1578  000F98  8B32               	bsf	50,5,b	;volatile
  1579  000F9A                     l382:
  1580                           
  1581                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  1582  000F9A  0100               	movlb	0	; () banked
  1583  000F9C  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1584  000F9E  D002               	goto	l383
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  1588  000FA0  010F               	movlb	15	; () banked
  1589  000FA2  8D32               	bsf	50,6,b	;volatile
  1590  000FA4                     l383:
  1591                           
  1592                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  1593  000FA4  0100               	movlb	0	; () banked
  1594  000FA6  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1595  000FA8  D002               	goto	l3079
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  1599  000FAA  010F               	movlb	15	; () banked
  1600  000FAC  8F32               	bsf	50,7,b	;volatile
  1601  000FAE                     l3079:
  1602                           
  1603                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  1604  000FAE  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1605  000FB2  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1606  000FB6  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1607  000FBA  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1608  000FBE  0E16               	movlw	22
  1609  000FC0  D006               	goto	u3290
  1610  000FC2                     u3295:
  1611  000FC2  0100               	movlb	0	; () banked
  1612  000FC4  90D8               	bcf	status,0,c
  1613  000FC6  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1614  000FC8  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1615  000FCA  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1616  000FCC  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1617  000FCE                     u3290:
  1618  000FCE  2EE8               	decfsz	wreg,f,c
  1619  000FD0  D7F8               	goto	u3295
  1620  000FD2  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1621  000FD6  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1622  000FDA  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1623  000FDE  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  1627  000FE2  0100               	movlb	0	; () banked
  1628  000FE4  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1629  000FE6  0100               	movlb	0	; () banked
  1630  000FE8  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1631  000FEA  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1632  000FEC  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1633  000FEE  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  1637  000FF0  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1638                           
  1639                           ;inc\CANlib.h: 407: }
  1640  000FF4  D059               	goto	l3099
  1641  000FF6                     l379:
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;inc\CANlib.h: 409: else
  1645                           ;inc\CANlib.h: 411: {
  1646                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  1647  000FF6  010F               	movlb	15	; () banked
  1648  000FF8  9732               	bcf	50,3,b	;volatile
  1649                           
  1650                           ; BSR set to: 15
  1651                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  1652  000FFA  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1653  000FFE  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1654  001002  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1655  001006  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1656  00100A  0E04               	movlw	4
  1657  00100C  D006               	goto	u3300
  1658  00100E                     u3305:
  1659  00100E  0100               	movlb	0	; () banked
  1660  001010  90D8               	bcf	status,0,c
  1661  001012  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1662  001014  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1663  001016  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1664  001018  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1665  00101A                     u3300:
  1666  00101A  2EE8               	decfsz	wreg,f,c
  1667  00101C  D7F8               	goto	u3305
  1668  00101E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1669  001022  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1670  001026  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1671  00102A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  1675  00102E  0100               	movlb	0	; () banked
  1676  001030  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1677  001032  0100               	movlb	0	; () banked
  1678  001034  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1679  001036  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1680  001038  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1681  00103A  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  1685  00103C  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  1689  001040  0E07               	movlw	7
  1690  001042  0100               	movlb	0	; () banked
  1691  001044  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1692  001046  0100               	movlb	0	; () banked
  1693  001048  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1694  00104A  0E00               	movlw	0
  1695  00104C  0100               	movlb	0	; () banked
  1696  00104E  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1697  001050  0100               	movlb	0	; () banked
  1698  001052  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1699  001054  0E00               	movlw	0
  1700  001056  0100               	movlb	0	; () banked
  1701  001058  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1702  00105A  0100               	movlb	0	; () banked
  1703  00105C  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1704  00105E  0E00               	movlw	0
  1705  001060  0100               	movlb	0	; () banked
  1706  001062  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1707  001064  0100               	movlb	0	; () banked
  1708  001066  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  1712  001068  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1713  00106C  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1714  001070  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1715  001074  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1716  001078  0E05               	movlw	5
  1717  00107A                     u3315:
  1718  00107A  90D8               	bcf	status,0,c
  1719  00107C  0100               	movlb	0	; () banked
  1720  00107E  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1721  001080  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1722  001082  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1723  001084  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1724  001086  2EE8               	decfsz	wreg,f,c
  1725  001088  D7F8               	goto	u3315
  1726  00108A  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1727  00108E  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1728  001092  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1729  001096  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  1733  00109A  010F               	movlb	15	; () banked
  1734  00109C  5132               	movf	50,w,b	;volatile
  1735  00109E  0B1F               	andlw	31
  1736  0010A0  010F               	movlb	15	; () banked
  1737  0010A2  6F32               	movwf	50,b	;volatile
  1738                           
  1739                           ; BSR set to: 15
  1740                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  1741  0010A4  C07F  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  1742  0010A8                     l3099:
  1743                           
  1744                           ;inc\CANlib.h: 422: }
  1745                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  1746  0010A8  0100               	movlb	0	; () banked
  1747  0010AA  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1748  0010AC  D003               	goto	l386
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  1752  0010AE  010F               	movlb	15	; () banked
  1753  0010B0  8130               	bsf	48,0,b	;volatile
  1754  0010B2  D002               	goto	l387
  1755  0010B4                     l386:
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;inc\CANlib.h: 426: else
  1759                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  1760  0010B4  010F               	movlb	15	; () banked
  1761  0010B6  9130               	bcf	48,0,b	;volatile
  1762  0010B8                     l387:
  1763                           
  1764                           ; BSR set to: 15
  1765                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  1766  0010B8  0100               	movlb	0	; () banked
  1767  0010BA  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1768  0010BC  D003               	goto	l388
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  1772  0010BE  010F               	movlb	15	; () banked
  1773  0010C0  8330               	bsf	48,1,b	;volatile
  1774  0010C2  D002               	goto	l3105
  1775  0010C4                     l388:
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;inc\CANlib.h: 430: else
  1779                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  1780  0010C4  010F               	movlb	15	; () banked
  1781  0010C6  9330               	bcf	48,1,b	;volatile
  1782  0010C8                     l3105:
  1783                           
  1784                           ; BSR set to: 15
  1785                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  1786  0010C8  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1787  0010CC  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1788  0010D0  50DF               	movf	indf2,w,c
  1789  0010D2  010F               	movlb	15	; () banked
  1790  0010D4  6F36               	movwf	54,b	;volatile
  1791                           
  1792                           ; BSR set to: 15
  1793                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  1794  0010D6  0100               	movlb	0	; () banked
  1795  0010D8  EE20 F001          	lfsr	2,1
  1796  0010DC  5177               	movf	CANsendMessage@data& (0+255),w,b
  1797  0010DE  26D9               	addwf	fsr2l,f,c
  1798  0010E0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1799  0010E2  22DA               	addwfc	fsr2h,f,c
  1800  0010E4  50DF               	movf	indf2,w,c
  1801  0010E6  010F               	movlb	15	; () banked
  1802  0010E8  6F37               	movwf	55,b	;volatile
  1803                           
  1804                           ; BSR set to: 15
  1805                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  1806  0010EA  0100               	movlb	0	; () banked
  1807  0010EC  EE20 F002          	lfsr	2,2
  1808  0010F0  5177               	movf	CANsendMessage@data& (0+255),w,b
  1809  0010F2  26D9               	addwf	fsr2l,f,c
  1810  0010F4  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1811  0010F6  22DA               	addwfc	fsr2h,f,c
  1812  0010F8  50DF               	movf	indf2,w,c
  1813  0010FA  010F               	movlb	15	; () banked
  1814  0010FC  6F38               	movwf	56,b	;volatile
  1815                           
  1816                           ; BSR set to: 15
  1817                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  1818  0010FE  0100               	movlb	0	; () banked
  1819  001100  EE20 F003          	lfsr	2,3
  1820  001104  5177               	movf	CANsendMessage@data& (0+255),w,b
  1821  001106  26D9               	addwf	fsr2l,f,c
  1822  001108  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1823  00110A  22DA               	addwfc	fsr2h,f,c
  1824  00110C  50DF               	movf	indf2,w,c
  1825  00110E  010F               	movlb	15	; () banked
  1826  001110  6F39               	movwf	57,b	;volatile
  1827                           
  1828                           ; BSR set to: 15
  1829                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  1830  001112  0100               	movlb	0	; () banked
  1831  001114  EE20 F004          	lfsr	2,4
  1832  001118  5177               	movf	CANsendMessage@data& (0+255),w,b
  1833  00111A  26D9               	addwf	fsr2l,f,c
  1834  00111C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1835  00111E  22DA               	addwfc	fsr2h,f,c
  1836  001120  50DF               	movf	indf2,w,c
  1837  001122  010F               	movlb	15	; () banked
  1838  001124  6F3A               	movwf	58,b	;volatile
  1839                           
  1840                           ; BSR set to: 15
  1841                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  1842  001126  0100               	movlb	0	; () banked
  1843  001128  EE20 F005          	lfsr	2,5
  1844  00112C  5177               	movf	CANsendMessage@data& (0+255),w,b
  1845  00112E  26D9               	addwf	fsr2l,f,c
  1846  001130  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1847  001132  22DA               	addwfc	fsr2h,f,c
  1848  001134  50DF               	movf	indf2,w,c
  1849  001136  010F               	movlb	15	; () banked
  1850  001138  6F3B               	movwf	59,b	;volatile
  1851                           
  1852                           ; BSR set to: 15
  1853                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  1854  00113A  0100               	movlb	0	; () banked
  1855  00113C  EE20 F006          	lfsr	2,6
  1856  001140  5177               	movf	CANsendMessage@data& (0+255),w,b
  1857  001142  26D9               	addwf	fsr2l,f,c
  1858  001144  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1859  001146  22DA               	addwfc	fsr2h,f,c
  1860  001148  50DF               	movf	indf2,w,c
  1861  00114A  010F               	movlb	15	; () banked
  1862  00114C  6F3C               	movwf	60,b	;volatile
  1863                           
  1864                           ; BSR set to: 15
  1865                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  1866  00114E  0100               	movlb	0	; () banked
  1867  001150  EE20 F007          	lfsr	2,7
  1868  001154  5177               	movf	CANsendMessage@data& (0+255),w,b
  1869  001156  26D9               	addwf	fsr2l,f,c
  1870  001158  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1871  00115A  22DA               	addwfc	fsr2h,f,c
  1872  00115C  50DF               	movf	indf2,w,c
  1873  00115E  010F               	movlb	15	; () banked
  1874  001160  6F3D               	movwf	61,b	;volatile
  1875                           
  1876                           ; BSR set to: 15
  1877                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  1878  001162  010F               	movlb	15	; () banked
  1879  001164  8730               	bsf	48,3,b	;volatile
  1880                           
  1881                           ; BSR set to: 15
  1882                           ;inc\CANlib.h: 444: return;
  1883  001166  0012               	return	
  1884  001168                     l376:
  1885                           
  1886                           ; BSR set to: 15
  1887                           ;inc\CANlib.h: 445: }
  1888                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  1889  001168  010F               	movlb	15	; () banked
  1890  00116A  B720               	btfsc	32,3,b	;volatile
  1891  00116C  0012               	return	
  1892                           
  1893                           ; BSR set to: 15
  1894                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  1895  00116E  C079  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  1896                           
  1897                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  1898  001172  0100               	movlb	0	; () banked
  1899  001174  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1900  001176  D003               	goto	l391
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  1904  001178  010F               	movlb	15	; () banked
  1905  00117A  8D25               	bsf	37,6,b	;volatile
  1906  00117C  D002               	goto	l392
  1907  00117E                     l391:
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;inc\CANlib.h: 454: else
  1911                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  1912  00117E  010F               	movlb	15	; () banked
  1913  001180  9D25               	bcf	37,6,b	;volatile
  1914  001182                     l392:
  1915                           
  1916                           ; BSR set to: 15
  1917                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  1918  001182  0100               	movlb	0	; () banked
  1919  001184  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1920  001186  D079               	goto	l393
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;inc\CANlib.h: 458: {
  1924                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  1925  001188  0100               	movlb	0	; () banked
  1926  00118A  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1927  00118C  0100               	movlb	0	; () banked
  1928  00118E  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1929  001190  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1930  001192  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1931  001194  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  1935  001196  C07F  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  1939  00119A  0E00               	movlw	0
  1940  00119C  0100               	movlb	0	; () banked
  1941  00119E  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1942  0011A0  0100               	movlb	0	; () banked
  1943  0011A2  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1944  0011A4  0EFF               	movlw	255
  1945  0011A6  0100               	movlb	0	; () banked
  1946  0011A8  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1947  0011AA  0100               	movlb	0	; () banked
  1948  0011AC  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1949  0011AE  0E00               	movlw	0
  1950  0011B0  0100               	movlb	0	; () banked
  1951  0011B2  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1952  0011B4  0100               	movlb	0	; () banked
  1953  0011B6  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1954  0011B8  0E00               	movlw	0
  1955  0011BA  0100               	movlb	0	; () banked
  1956  0011BC  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1957  0011BE  0100               	movlb	0	; () banked
  1958  0011C0  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  1962  0011C2  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1963  0011C6  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1964  0011CA  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1965  0011CE  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1966  0011D2  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1967  0011D6  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1968  0011DA  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1969  0011DE  0100               	movlb	0	; () banked
  1970  0011E0  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1971  0011E2  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1972  0011E6  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1973  0011EA  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1974  0011EE  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  1978  0011F2  C07F  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  1982  0011F6  0E00               	movlw	0
  1983  0011F8  010F               	movlb	15	; () banked
  1984  0011FA  6F22               	movwf	34,b	;volatile
  1985                           
  1986                           ; BSR set to: 15
  1987                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  1988  0011FC  010F               	movlb	15	; () banked
  1989  0011FE  8722               	bsf	34,3,b	;volatile
  1990                           
  1991                           ; BSR set to: 15
  1992                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  1993  001200  0100               	movlb	0	; () banked
  1994  001202  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1995  001204  D002               	goto	l394
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  1999  001206  010F               	movlb	15	; () banked
  2000  001208  8122               	bsf	34,0,b	;volatile
  2001  00120A                     l394:
  2002                           
  2003                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2004  00120A  0100               	movlb	0	; () banked
  2005  00120C  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2006  00120E  D002               	goto	l395
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2010  001210  010F               	movlb	15	; () banked
  2011  001212  8322               	bsf	34,1,b	;volatile
  2012  001214                     l395:
  2013                           
  2014                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2015  001214  0100               	movlb	0	; () banked
  2016  001216  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2017  001218  D002               	goto	l396
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2021  00121A  010F               	movlb	15	; () banked
  2022  00121C  8B22               	bsf	34,5,b	;volatile
  2023  00121E                     l396:
  2024                           
  2025                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2026  00121E  0100               	movlb	0	; () banked
  2027  001220  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2028  001222  D002               	goto	l397
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2032  001224  010F               	movlb	15	; () banked
  2033  001226  8D22               	bsf	34,6,b	;volatile
  2034  001228                     l397:
  2035                           
  2036                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2037  001228  0100               	movlb	0	; () banked
  2038  00122A  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2039  00122C  D002               	goto	l3155
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2043  00122E  010F               	movlb	15	; () banked
  2044  001230  8F22               	bsf	34,7,b	;volatile
  2045  001232                     l3155:
  2046                           
  2047                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2048  001232  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2049  001236  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2050  00123A  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2051  00123E  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2052  001242  0E16               	movlw	22
  2053  001244  D006               	goto	u3420
  2054  001246                     u3425:
  2055  001246  0100               	movlb	0	; () banked
  2056  001248  90D8               	bcf	status,0,c
  2057  00124A  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2058  00124C  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2059  00124E  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2060  001250  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2061  001252                     u3420:
  2062  001252  2EE8               	decfsz	wreg,f,c
  2063  001254  D7F8               	goto	u3425
  2064  001256  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2065  00125A  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2066  00125E  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2067  001262  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2071  001266  0100               	movlb	0	; () banked
  2072  001268  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2073  00126A  0100               	movlb	0	; () banked
  2074  00126C  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2075  00126E  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2076  001270  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2077  001272  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2081  001274  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2082                           
  2083                           ;inc\CANlib.h: 483: }
  2084  001278  D059               	goto	l3175
  2085  00127A                     l393:
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;inc\CANlib.h: 485: else
  2089                           ;inc\CANlib.h: 487: {
  2090                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2091  00127A  010F               	movlb	15	; () banked
  2092  00127C  9722               	bcf	34,3,b	;volatile
  2093                           
  2094                           ; BSR set to: 15
  2095                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2096  00127E  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2097  001282  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2098  001286  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2099  00128A  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2100  00128E  0E04               	movlw	4
  2101  001290  D006               	goto	u3430
  2102  001292                     u3435:
  2103  001292  0100               	movlb	0	; () banked
  2104  001294  90D8               	bcf	status,0,c
  2105  001296  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2106  001298  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2107  00129A  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2108  00129C  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2109  00129E                     u3430:
  2110  00129E  2EE8               	decfsz	wreg,f,c
  2111  0012A0  D7F8               	goto	u3435
  2112  0012A2  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2113  0012A6  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2114  0012AA  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2115  0012AE  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2119  0012B2  0100               	movlb	0	; () banked
  2120  0012B4  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2121  0012B6  0100               	movlb	0	; () banked
  2122  0012B8  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2123  0012BA  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2124  0012BC  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2125  0012BE  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2129  0012C0  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2133  0012C4  0E07               	movlw	7
  2134  0012C6  0100               	movlb	0	; () banked
  2135  0012C8  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2136  0012CA  0100               	movlb	0	; () banked
  2137  0012CC  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2138  0012CE  0E00               	movlw	0
  2139  0012D0  0100               	movlb	0	; () banked
  2140  0012D2  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2141  0012D4  0100               	movlb	0	; () banked
  2142  0012D6  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2143  0012D8  0E00               	movlw	0
  2144  0012DA  0100               	movlb	0	; () banked
  2145  0012DC  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2146  0012DE  0100               	movlb	0	; () banked
  2147  0012E0  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2148  0012E2  0E00               	movlw	0
  2149  0012E4  0100               	movlb	0	; () banked
  2150  0012E6  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2151  0012E8  0100               	movlb	0	; () banked
  2152  0012EA  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2156  0012EC  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2157  0012F0  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2158  0012F4  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2159  0012F8  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2160  0012FC  0E05               	movlw	5
  2161  0012FE                     u3445:
  2162  0012FE  90D8               	bcf	status,0,c
  2163  001300  0100               	movlb	0	; () banked
  2164  001302  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  2165  001304  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2166  001306  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2167  001308  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2168  00130A  2EE8               	decfsz	wreg,f,c
  2169  00130C  D7F8               	goto	u3445
  2170  00130E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2171  001312  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2172  001316  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2173  00131A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2177  00131E  010F               	movlb	15	; () banked
  2178  001320  5122               	movf	34,w,b	;volatile
  2179  001322  0B1F               	andlw	31
  2180  001324  010F               	movlb	15	; () banked
  2181  001326  6F22               	movwf	34,b	;volatile
  2182                           
  2183                           ; BSR set to: 15
  2184                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2185  001328  C07F  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2186  00132C                     l3175:
  2187                           
  2188                           ;inc\CANlib.h: 498: }
  2189                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2190  00132C  0100               	movlb	0	; () banked
  2191  00132E  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  2192  001330  D003               	goto	l400
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2196  001332  010F               	movlb	15	; () banked
  2197  001334  8120               	bsf	32,0,b	;volatile
  2198  001336  D002               	goto	l401
  2199  001338                     l400:
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;inc\CANlib.h: 502: else
  2203                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2204  001338  010F               	movlb	15	; () banked
  2205  00133A  9120               	bcf	32,0,b	;volatile
  2206  00133C                     l401:
  2207                           
  2208                           ; BSR set to: 15
  2209                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2210  00133C  0100               	movlb	0	; () banked
  2211  00133E  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  2212  001340  D003               	goto	l402
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2216  001342  010F               	movlb	15	; () banked
  2217  001344  8320               	bsf	32,1,b	;volatile
  2218  001346  D002               	goto	l3181
  2219  001348                     l402:
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;inc\CANlib.h: 506: else
  2223                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2224  001348  010F               	movlb	15	; () banked
  2225  00134A  9320               	bcf	32,1,b	;volatile
  2226  00134C                     l3181:
  2227                           
  2228                           ; BSR set to: 15
  2229                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2230  00134C  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  2231  001350  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2232  001354  50DF               	movf	indf2,w,c
  2233  001356  010F               	movlb	15	; () banked
  2234  001358  6F26               	movwf	38,b	;volatile
  2235                           
  2236                           ; BSR set to: 15
  2237                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2238  00135A  0100               	movlb	0	; () banked
  2239  00135C  EE20 F001          	lfsr	2,1
  2240  001360  5177               	movf	CANsendMessage@data& (0+255),w,b
  2241  001362  26D9               	addwf	fsr2l,f,c
  2242  001364  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2243  001366  22DA               	addwfc	fsr2h,f,c
  2244  001368  50DF               	movf	indf2,w,c
  2245  00136A  010F               	movlb	15	; () banked
  2246  00136C  6F27               	movwf	39,b	;volatile
  2247                           
  2248                           ; BSR set to: 15
  2249                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2250  00136E  0100               	movlb	0	; () banked
  2251  001370  EE20 F002          	lfsr	2,2
  2252  001374  5177               	movf	CANsendMessage@data& (0+255),w,b
  2253  001376  26D9               	addwf	fsr2l,f,c
  2254  001378  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2255  00137A  22DA               	addwfc	fsr2h,f,c
  2256  00137C  50DF               	movf	indf2,w,c
  2257  00137E  010F               	movlb	15	; () banked
  2258  001380  6F28               	movwf	40,b	;volatile
  2259                           
  2260                           ; BSR set to: 15
  2261                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2262  001382  0100               	movlb	0	; () banked
  2263  001384  EE20 F003          	lfsr	2,3
  2264  001388  5177               	movf	CANsendMessage@data& (0+255),w,b
  2265  00138A  26D9               	addwf	fsr2l,f,c
  2266  00138C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2267  00138E  22DA               	addwfc	fsr2h,f,c
  2268  001390  50DF               	movf	indf2,w,c
  2269  001392  010F               	movlb	15	; () banked
  2270  001394  6F29               	movwf	41,b	;volatile
  2271                           
  2272                           ; BSR set to: 15
  2273                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2274  001396  0100               	movlb	0	; () banked
  2275  001398  EE20 F004          	lfsr	2,4
  2276  00139C  5177               	movf	CANsendMessage@data& (0+255),w,b
  2277  00139E  26D9               	addwf	fsr2l,f,c
  2278  0013A0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2279  0013A2  22DA               	addwfc	fsr2h,f,c
  2280  0013A4  50DF               	movf	indf2,w,c
  2281  0013A6  010F               	movlb	15	; () banked
  2282  0013A8  6F2A               	movwf	42,b	;volatile
  2283                           
  2284                           ; BSR set to: 15
  2285                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2286  0013AA  0100               	movlb	0	; () banked
  2287  0013AC  EE20 F005          	lfsr	2,5
  2288  0013B0  5177               	movf	CANsendMessage@data& (0+255),w,b
  2289  0013B2  26D9               	addwf	fsr2l,f,c
  2290  0013B4  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2291  0013B6  22DA               	addwfc	fsr2h,f,c
  2292  0013B8  50DF               	movf	indf2,w,c
  2293  0013BA  010F               	movlb	15	; () banked
  2294  0013BC  6F2B               	movwf	43,b	;volatile
  2295                           
  2296                           ; BSR set to: 15
  2297                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2298  0013BE  0100               	movlb	0	; () banked
  2299  0013C0  EE20 F006          	lfsr	2,6
  2300  0013C4  5177               	movf	CANsendMessage@data& (0+255),w,b
  2301  0013C6  26D9               	addwf	fsr2l,f,c
  2302  0013C8  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2303  0013CA  22DA               	addwfc	fsr2h,f,c
  2304  0013CC  50DF               	movf	indf2,w,c
  2305  0013CE  010F               	movlb	15	; () banked
  2306  0013D0  6F2C               	movwf	44,b	;volatile
  2307                           
  2308                           ; BSR set to: 15
  2309                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2310  0013D2  0100               	movlb	0	; () banked
  2311  0013D4  EE20 F007          	lfsr	2,7
  2312  0013D8  5177               	movf	CANsendMessage@data& (0+255),w,b
  2313  0013DA  26D9               	addwf	fsr2l,f,c
  2314  0013DC  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2315  0013DE  22DA               	addwfc	fsr2h,f,c
  2316  0013E0  50DF               	movf	indf2,w,c
  2317  0013E2  010F               	movlb	15	; () banked
  2318  0013E4  6F2D               	movwf	45,b	;volatile
  2319                           
  2320                           ; BSR set to: 15
  2321                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2322  0013E6  010F               	movlb	15	; () banked
  2323  0013E8  8720               	bsf	32,3,b	;volatile
  2324                           
  2325                           ; BSR set to: 15
  2326                           ;inc\CANlib.h: 520: return;
  2327  0013EA  0012               	return	
  2328  0013EC                     __end_of_CANsendMessage:
  2329                           	opt stack 0
  2330                           tblptru	equ	0xFF8
  2331                           tblptrh	equ	0xFF7
  2332                           tblptrl	equ	0xFF6
  2333                           tablat	equ	0xFF5
  2334                           postinc0	equ	0xFEE
  2335                           wreg	equ	0xFE8
  2336                           postdec1	equ	0xFE5
  2337                           fsr1l	equ	0xFE1
  2338                           indf2	equ	0xFDF
  2339                           fsr2h	equ	0xFDA
  2340                           fsr2l	equ	0xFD9
  2341                           status	equ	0xFD8
  2342                           
  2343 ;; *************** function _CANisTxReady *****************
  2344 ;; Defined at:
  2345 ;;		line 1154 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      unsigned char 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2359 ;;      Params:         0       0       0       0
  2360 ;;      Locals:         0       1       0       0
  2361 ;;      Temps:          0       0       0       0
  2362 ;;      Totals:         0       1       0       0
  2363 ;;Total ram usage:        1 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    4
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_send_data
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text3
  2374  00242E                     __ptext3:
  2375                           	opt stack 0
  2376  00242E                     _CANisTxReady:
  2377                           	opt stack 25
  2378                           
  2379                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2380                           
  2381                           ; BSR set to: 15
  2382                           ;incstack = 0
  2383  00242E  0E01               	movlw	1
  2384  002430  0100               	movlb	0	; () banked
  2385  002432  6F73               	movwf	_CANisTxReady$2910& (0+255),b
  2386                           
  2387                           ; BSR set to: 0
  2388  002434  010F               	movlb	15	; () banked
  2389  002436  A740               	btfss	64,3,b	;volatile
  2390  002438  D009               	goto	l554
  2391                           
  2392                           ; BSR set to: 15
  2393  00243A  010F               	movlb	15	; () banked
  2394  00243C  A730               	btfss	48,3,b	;volatile
  2395  00243E  D006               	goto	l554
  2396                           
  2397                           ; BSR set to: 15
  2398  002440  010F               	movlb	15	; () banked
  2399  002442  A720               	btfss	32,3,b	;volatile
  2400  002444  D003               	goto	l554
  2401                           
  2402                           ; BSR set to: 15
  2403  002446  0E00               	movlw	0
  2404  002448  0100               	movlb	0	; () banked
  2405  00244A  6F73               	movwf	_CANisTxReady$2910& (0+255),b
  2406  00244C                     l554:
  2407  00244C  0100               	movlb	0	; () banked
  2408  00244E  5173               	movf	_CANisTxReady$2910& (0+255),w,b
  2409  002450  0012               	return	
  2410  002452                     __end_of_CANisTxReady:
  2411                           	opt stack 0
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           postinc0	equ	0xFEE
  2417                           wreg	equ	0xFE8
  2418                           postdec1	equ	0xFE5
  2419                           fsr1l	equ	0xFE1
  2420                           indf2	equ	0xFDF
  2421                           fsr2h	equ	0xFDA
  2422                           fsr2l	equ	0xFD9
  2423                           status	equ	0xFD8
  2424                           
  2425 ;; *************** function _configurazione_iniziale *****************
  2426 ;; Defined at:
  2427 ;;		line 185 in file "newmain.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;		None               void
  2434 ;; Registers used:
  2435 ;;		wreg, status,2, status,0, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2441 ;;      Params:         0       0       0       0
  2442 ;;      Locals:         0       0       0       0
  2443 ;;      Temps:          0       0       0       0
  2444 ;;      Totals:         0       0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    6
  2448 ;; This function calls:
  2449 ;;		_CANInitialize
  2450 ;;		_OpenADC
  2451 ;; This function is called by:
  2452 ;;		_main
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text4
  2457  0020F0                     __ptext4:
  2458                           	opt stack 0
  2459  0020F0                     _configurazione_iniziale:
  2460                           	opt stack 24
  2461                           
  2462                           ;newmain.c: 190: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SA
      +                          MPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;incstack = 0
  2466  0020F0  0E06               	movlw	6
  2467  0020F2  0100               	movlb	0	; () banked
  2468  0020F4  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2469  0020F6  0E05               	movlw	5
  2470  0020F8  0100               	movlb	0	; () banked
  2471  0020FA  6F82               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2472  0020FC  0E01               	movlw	1
  2473  0020FE  0100               	movlb	0	; () banked
  2474  002100  6F83               	movwf	CANInitialize@SJW& (0+255),b
  2475  002102  0E03               	movlw	3
  2476  002104  0100               	movlb	0	; () banked
  2477  002106  6F84               	movwf	CANInitialize@BRP& (0+255),b
  2478  002108  0E9D               	movlw	157
  2479  00210A  0100               	movlb	0	; () banked
  2480  00210C  6F85               	movwf	CANInitialize@flags& (0+255),b
  2481  00210E  0E04               	movlw	4
  2482  002110  EC4B  F00E         	call	_CANInitialize
  2483                           
  2484                           ;newmain.c: 195: PIR3bits.RXB1IF = 0;
  2485  002114  92A4               	bcf	4004,1,c	;volatile
  2486                           
  2487                           ;newmain.c: 196: PIR3bits.RXB0IF = 0;
  2488  002116  90A4               	bcf	4004,0,c	;volatile
  2489                           
  2490                           ;newmain.c: 197: INTCONbits.TMR0IF = 0;
  2491  002118  94F2               	bcf	intcon,2,c	;volatile
  2492                           
  2493                           ;newmain.c: 198: PIR2bits.TMR3IF = 0;
  2494  00211A  92A1               	bcf	4001,1,c	;volatile
  2495                           
  2496                           ;newmain.c: 203: IPR3bits.RXB1IP = 0;
  2497  00211C  92A5               	bcf	4005,1,c	;volatile
  2498                           
  2499                           ;newmain.c: 204: IPR3bits.RXB0IP = 0;
  2500  00211E  90A5               	bcf	4005,0,c	;volatile
  2501                           
  2502                           ;newmain.c: 205: INTCON2bits.TMR0IP = 1;
  2503  002120  84F1               	bsf	intcon2,2,c	;volatile
  2504                           
  2505                           ;newmain.c: 206: IPR2bits.TMR3IP = 0;
  2506  002122  92A2               	bcf	4002,1,c	;volatile
  2507                           
  2508                           ;newmain.c: 211: RCONbits.IPEN = 1;
  2509  002124  8ED0               	bsf	4048,7,c	;volatile
  2510                           
  2511                           ;newmain.c: 212: PIE3bits.RXB1IE = 1;
  2512  002126  82A3               	bsf	4003,1,c	;volatile
  2513                           
  2514                           ;newmain.c: 213: PIE3bits.RXB0IE = 1;
  2515  002128  80A3               	bsf	4003,0,c	;volatile
  2516                           
  2517                           ;newmain.c: 214: INTCONbits.TMR0IE = 1;
  2518  00212A  8AF2               	bsf	intcon,5,c	;volatile
  2519                           
  2520                           ;newmain.c: 215: PIE2bits.TMR3IE = 1;
  2521  00212C  82A0               	bsf	4000,1,c	;volatile
  2522                           
  2523                           ;newmain.c: 216: INTCONbits.GIEH = 1;
  2524  00212E  8EF2               	bsf	intcon,7,c	;volatile
  2525                           
  2526                           ;newmain.c: 217: INTCONbits.GIEL = 1;
  2527  002130  8CF2               	bsf	intcon,6,c	;volatile
  2528                           
  2529                           ;newmain.c: 222: T0CON = 0x80;
  2530  002132  0E80               	movlw	128
  2531  002134  6ED5               	movwf	4053,c	;volatile
  2532                           
  2533                           ;newmain.c: 227: TMR3H = 0x63;
  2534  002136  0E63               	movlw	99
  2535  002138  6EB3               	movwf	4019,c	;volatile
  2536                           
  2537                           ;newmain.c: 228: TMR3L = 0xC0;
  2538  00213A  0EC0               	movlw	192
  2539  00213C  6EB2               	movwf	4018,c	;volatile
  2540                           
  2541                           ;newmain.c: 229: T3CON = 0x01;
  2542  00213E  0E01               	movlw	1
  2543  002140  6EB1               	movwf	4017,c	;volatile
  2544                           
  2545                           ;newmain.c: 230: OpenADC(0b11011111 & 0b11111111 & 0b11111101, 0b10001111 & 0b11111100 &
      +                           0b01111111, 0b11111101);
  2546  002142  0E0C               	movlw	12
  2547  002144  0100               	movlb	0	; () banked
  2548  002146  6F73               	movwf	OpenADC@config2& (0+255),b
  2549  002148  0EFD               	movlw	253
  2550  00214A  0100               	movlb	0	; () banked
  2551  00214C  6F74               	movwf	OpenADC@portconfig& (0+255),b
  2552  00214E  0EDD               	movlw	221
  2553  002150  ECC0  F010         	call	_OpenADC
  2554                           
  2555                           ;newmain.c: 241: T0CONbits.TMR0ON = 1;
  2556  002154  8ED5               	bsf	4053,7,c	;volatile
  2557                           
  2558                           ;newmain.c: 243: PORTCbits.RC0 = 0;
  2559  002156  9082               	bcf	3970,0,c	;volatile
  2560                           
  2561                           ;newmain.c: 247: LATA = 0x00;
  2562  002158  0E00               	movlw	0
  2563  00215A  6E89               	movwf	3977,c	;volatile
  2564                           
  2565                           ;newmain.c: 248: TRISA = 0b11111100;
  2566  00215C  0EFC               	movlw	252
  2567  00215E  6E92               	movwf	3986,c	;volatile
  2568                           
  2569                           ;newmain.c: 250: LATB = 0x00;
  2570  002160  0E00               	movlw	0
  2571  002162  6E8A               	movwf	3978,c	;volatile
  2572                           
  2573                           ;newmain.c: 251: TRISB = 0b11111011;
  2574  002164  0EFB               	movlw	251
  2575  002166  6E93               	movwf	3987,c	;volatile
  2576                           
  2577                           ;newmain.c: 253: LATC = 0x00;
  2578  002168  0E00               	movlw	0
  2579  00216A  6E8B               	movwf	3979,c	;volatile
  2580                           
  2581                           ;newmain.c: 254: TRISC = 0x00;
  2582  00216C  0E00               	movlw	0
  2583  00216E  6E94               	movwf	3988,c	;volatile
  2584                           
  2585                           ;newmain.c: 256: LATD = 0x00;
  2586  002170  0E00               	movlw	0
  2587  002172  6E8C               	movwf	3980,c	;volatile
  2588                           
  2589                           ;newmain.c: 257: TRISD = 0x00;
  2590  002174  0E00               	movlw	0
  2591  002176  6E95               	movwf	3989,c	;volatile
  2592                           
  2593                           ;newmain.c: 259: LATE = 0x00;
  2594  002178  0E00               	movlw	0
  2595  00217A  6E8D               	movwf	3981,c	;volatile
  2596                           
  2597                           ;newmain.c: 260: TRISE = 0xFF;
  2598  00217C  6896               	setf	3990,c	;volatile
  2599  00217E  0012               	return		;funcret
  2600  002180                     __end_of_configurazione_iniziale:
  2601                           	opt stack 0
  2602                           tblptru	equ	0xFF8
  2603                           tblptrh	equ	0xFF7
  2604                           tblptrl	equ	0xFF6
  2605                           tablat	equ	0xFF5
  2606                           intcon	equ	0xFF2
  2607                           intcon2	equ	0xFF1
  2608                           postinc0	equ	0xFEE
  2609                           wreg	equ	0xFE8
  2610                           postdec1	equ	0xFE5
  2611                           fsr1l	equ	0xFE1
  2612                           indf2	equ	0xFDF
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           status	equ	0xFD8
  2616                           
  2617 ;; *************** function _OpenADC *****************
  2618 ;; Defined at:
  2619 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcopen.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  config          1    wreg     unsigned char 
  2622 ;;  config2         1   19[BANK0 ] unsigned char 
  2623 ;;  portconfig      1   20[BANK0 ] unsigned char 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  config          1   23[BANK0 ] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;		None               void
  2628 ;; Registers used:
  2629 ;;		wreg, status,2, status,0
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2635 ;;      Params:         0       2       0       0
  2636 ;;      Locals:         0       1       0       0
  2637 ;;      Temps:          0       2       0       0
  2638 ;;      Totals:         0       5       0       0
  2639 ;;Total ram usage:        5 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    4
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_configurazione_iniziale
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text5
  2650  002180                     __ptext5:
  2651                           	opt stack 0
  2652  002180                     _OpenADC:
  2653                           	opt stack 25
  2654                           
  2655                           ;incstack = 0
  2656                           ;OpenADC@config stored from wreg
  2657  002180  0100               	movlb	0	; () banked
  2658  002182  6F77               	movwf	OpenADC@config& (0+255),b
  2659  002184  0E00               	movlw	0
  2660  002186  6EC2               	movwf	4034,c	;volatile
  2661  002188  0E00               	movlw	0
  2662  00218A  6EC0               	movwf	4032,c	;volatile
  2663  00218C  0100               	movlb	0	; () banked
  2664  00218E  90D8               	bcf	status,0,c
  2665  002190  3173               	rrcf	OpenADC@config2& (0+255),w,b
  2666  002192  0B3C               	andlw	60
  2667  002194  6EC2               	movwf	4034,c	;volatile
  2668                           
  2669                           ; BSR set to: 0
  2670  002196  C073  F075         	movff	OpenADC@config2,??_OpenADC
  2671  00219A  0100               	movlb	0	; () banked
  2672  00219C  3B75               	swapf	??_OpenADC& (0+255),f,b
  2673  00219E  0EF0               	movlw	240
  2674  0021A0  1775               	andwf	??_OpenADC& (0+255),f,b
  2675  0021A2  0E30               	movlw	48
  2676  0021A4  0100               	movlb	0	; () banked
  2677  0021A6  1775               	andwf	??_OpenADC& (0+255),f,b
  2678  0021A8  0100               	movlb	0	; () banked
  2679  0021AA  5174               	movf	OpenADC@portconfig& (0+255),w,b
  2680  0021AC  0B0F               	andlw	15
  2681  0021AE  0100               	movlb	0	; () banked
  2682  0021B0  1175               	iorwf	??_OpenADC& (0+255),w,b
  2683  0021B2  6EC1               	movwf	4033,c	;volatile
  2684                           
  2685                           ; BSR set to: 0
  2686  0021B4  C077  F075         	movff	OpenADC@config,??_OpenADC
  2687  0021B8  0100               	movlb	0	; () banked
  2688  0021BA  90D8               	bcf	status,0,c
  2689  0021BC  3775               	rlcf	??_OpenADC& (0+255),f,b
  2690  0021BE  0100               	movlb	0	; () banked
  2691  0021C0  90D8               	bcf	status,0,c
  2692  0021C2  3775               	rlcf	??_OpenADC& (0+255),f,b
  2693  0021C4  0E38               	movlw	56
  2694  0021C6  0100               	movlb	0	; () banked
  2695  0021C8  1775               	andwf	??_OpenADC& (0+255),f,b
  2696  0021CA  C077  F076         	movff	OpenADC@config,??_OpenADC+1
  2697  0021CE  0100               	movlb	0	; () banked
  2698  0021D0  3B76               	swapf	(??_OpenADC+1)& (0+255),f,b
  2699  0021D2  0E0F               	movlw	15
  2700  0021D4  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  2701  0021D6  0E07               	movlw	7
  2702  0021D8  0100               	movlb	0	; () banked
  2703  0021DA  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  2704  0021DC  0100               	movlb	0	; () banked
  2705  0021DE  5177               	movf	OpenADC@config& (0+255),w,b
  2706  0021E0  0B80               	andlw	128
  2707  0021E2  0100               	movlb	0	; () banked
  2708  0021E4  1176               	iorwf	(??_OpenADC+1)& (0+255),w,b
  2709  0021E6  0100               	movlb	0	; () banked
  2710  0021E8  1175               	iorwf	??_OpenADC& (0+255),w,b
  2711  0021EA  6EC0               	movwf	4032,c	;volatile
  2712                           
  2713                           ; BSR set to: 0
  2714  0021EC  0100               	movlb	0	; () banked
  2715  0021EE  AF73               	btfss	OpenADC@config2& (0+255),7,b
  2716  0021F0  D003               	goto	l694
  2717                           
  2718                           ; BSR set to: 0
  2719  0021F2  9C9E               	bcf	3998,6,c	;volatile
  2720  0021F4  8C9D               	bsf	3997,6,c	;volatile
  2721  0021F6  8CF2               	bsf	intcon,6,c	;volatile
  2722  0021F8                     l694:
  2723                           
  2724                           ; BSR set to: 0
  2725  0021F8  80C2               	bsf	4034,0,c	;volatile
  2726                           
  2727                           ; BSR set to: 0
  2728  0021FA  0012               	return		;funcret
  2729  0021FC                     __end_of_OpenADC:
  2730                           	opt stack 0
  2731                           tblptru	equ	0xFF8
  2732                           tblptrh	equ	0xFF7
  2733                           tblptrl	equ	0xFF6
  2734                           tablat	equ	0xFF5
  2735                           intcon	equ	0xFF2
  2736                           intcon2	equ	0xFF1
  2737                           postinc0	equ	0xFEE
  2738                           wreg	equ	0xFE8
  2739                           postdec1	equ	0xFE5
  2740                           fsr1l	equ	0xFE1
  2741                           indf2	equ	0xFDF
  2742                           fsr2h	equ	0xFDA
  2743                           fsr2l	equ	0xFD9
  2744                           status	equ	0xFD8
  2745                           
  2746 ;; *************** function _CANInitialize *****************
  2747 ;; Defined at:
  2748 ;;		line 218 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  propSeg         1    wreg     unsigned char 
  2751 ;;  phaseSeg1       1   33[BANK0 ] unsigned char 
  2752 ;;  phaseSeg2       1   34[BANK0 ] unsigned char 
  2753 ;;  SJW             1   35[BANK0 ] unsigned char 
  2754 ;;  BRP             1   36[BANK0 ] unsigned char 
  2755 ;;  flags           1   37[BANK0 ] enum E16844
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  propSeg         1   42[BANK0 ] unsigned char 
  2758 ;;  FilterConfig    1   44[BANK0 ] unsigned char 
  2759 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;		None               void
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2769 ;;      Params:         0       5       0       0
  2770 ;;      Locals:         0       3       0       0
  2771 ;;      Temps:          0       4       0       0
  2772 ;;      Totals:         0      12       0       0
  2773 ;;Total ram usage:       12 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; Hardware stack levels required when called:    5
  2776 ;; This function calls:
  2777 ;;		_CANOperationMode
  2778 ;;		_CANSetFilter
  2779 ;;		_CANSetMask
  2780 ;; This function is called by:
  2781 ;;		_configurazione_iniziale
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text6
  2786  001C96                     __ptext6:
  2787                           	opt stack 0
  2788  001C96                     _CANInitialize:
  2789                           	opt stack 24
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;incstack = 0
  2793                           ;CANInitialize@propSeg stored from wreg
  2794  001C96  0100               	movlb	0	; () banked
  2795  001C98  6F8A               	movwf	CANInitialize@propSeg& (0+255),b
  2796                           
  2797                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2798                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2799                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2800  001C9A  0E80               	movlw	128
  2801  001C9C  EC29  F012         	call	_CANOperationMode
  2802                           
  2803                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2804  001CA0  0E00               	movlw	0
  2805  001CA2  6E70               	movwf	3952,c	;volatile
  2806                           
  2807                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2808  001CA4  0E00               	movlw	0
  2809  001CA6  6E71               	movwf	3953,c	;volatile
  2810                           
  2811                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2812  001CA8  0E00               	movlw	0
  2813  001CAA  6E72               	movwf	3954,c	;volatile
  2814                           
  2815                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2816  001CAC  0100               	movlb	0	; () banked
  2817  001CAE  4183               	rrncf	CANInitialize@SJW& (0+255),w,b
  2818  001CB0  42E8               	rrncf	wreg,f,c
  2819  001CB2  0BC0               	andlw	192
  2820  001CB4  0100               	movlb	0	; () banked
  2821  001CB6  6F83               	movwf	CANInitialize@SJW& (0+255),b
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2825  001CB8  0100               	movlb	0	; () banked
  2826  001CBA  5183               	movf	CANInitialize@SJW& (0+255),w,b
  2827  001CBC  1270               	iorwf	3952,f,c	;volatile
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2831  001CBE  0100               	movlb	0	; () banked
  2832  001CC0  5184               	movf	CANInitialize@BRP& (0+255),w,b
  2833  001CC2  1270               	iorwf	3952,f,c	;volatile
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2837  001CC4  0100               	movlb	0	; () banked
  2838  001CC6  518A               	movf	CANInitialize@propSeg& (0+255),w,b
  2839  001CC8  1271               	iorwf	3953,f,c	;volatile
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2843  001CCA  0100               	movlb	0	; () banked
  2844  001CCC  3981               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2845  001CCE  42E8               	rrncf	wreg,f,c
  2846  001CD0  0BF8               	andlw	248
  2847  001CD2  0100               	movlb	0	; () banked
  2848  001CD4  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2852  001CD6  0100               	movlb	0	; () banked
  2853  001CD8  5181               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2854  001CDA  1271               	iorwf	3953,f,c	;volatile
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2858  001CDC  0100               	movlb	0	; () banked
  2859  001CDE  A585               	btfss	CANInitialize@flags& (0+255),2,b
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  2863  001CE0  8C71               	bsf	3953,6,c	;volatile
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2867  001CE2  0100               	movlb	0	; () banked
  2868  001CE4  B185               	btfsc	CANInitialize@flags& (0+255),0,b
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2872  001CE6  8E71               	bsf	3953,7,c	;volatile
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2876                           
  2877                           ; BSR set to: 0
  2878  001CE8  0100               	movlb	0	; () banked
  2879  001CEA  5182               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2880  001CEC  1272               	iorwf	3954,f,c	;volatile
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2884  001CEE  0100               	movlb	0	; () banked
  2885  001CF0  B385               	btfsc	CANInitialize@flags& (0+255),1,b
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2889  001CF2  8C72               	bsf	3954,6,c	;volatile
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2893                           
  2894                           ; BSR set to: 0
  2895  001CF4  0100               	movlb	0	; () banked
  2896  001CF6  5185               	movf	CANInitialize@flags& (0+255),w,b
  2897  001CF8  0B60               	andlw	96
  2898  001CFA  6E60               	movwf	3936,c	;volatile
  2899                           
  2900                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2901  001CFC  0100               	movlb	0	; () banked
  2902  001CFE  5185               	movf	CANInitialize@flags& (0+255),w,b
  2903  001D00  0B10               	andlw	16
  2904  001D02  0AFF               	xorlw	255
  2905  001D04  B4D8               	btfsc	status,2,c
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2909  001D06  8460               	bsf	3936,2,c	;volatile
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  2913  001D08  CF60 FF50          	movff	3936,3920	;volatile
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2917  001D0C  0E00               	movlw	0
  2918  001D0E  0100               	movlb	0	; () banked
  2919  001D10  6F73               	movwf	CANSetMask@mask& (0+255),b
  2920  001D12  0E00               	movlw	0
  2921  001D14  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  2922  001D16  0E00               	movlw	0
  2923  001D18  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  2924  001D1A  0E00               	movlw	0
  2925  001D1C  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  2926  001D1E  0EF7               	movlw	247
  2927  001D20  0100               	movlb	0	; () banked
  2928  001D22  6F77               	movwf	CANSetMask@type& (0+255),b
  2929  001D24  0E01               	movlw	1
  2930  001D26  EC7C  F00C         	call	_CANSetMask
  2931                           
  2932                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2933  001D2A  0E00               	movlw	0
  2934  001D2C  0100               	movlb	0	; () banked
  2935  001D2E  6F73               	movwf	CANSetMask@mask& (0+255),b
  2936  001D30  0E00               	movlw	0
  2937  001D32  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  2938  001D34  0E00               	movlw	0
  2939  001D36  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  2940  001D38  0E00               	movlw	0
  2941  001D3A  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  2942  001D3C  0EF7               	movlw	247
  2943  001D3E  0100               	movlb	0	; () banked
  2944  001D40  6F77               	movwf	CANSetMask@type& (0+255),b
  2945  001D42  0E02               	movlw	2
  2946  001D44  EC7C  F00C         	call	_CANSetMask
  2947                           
  2948                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2949  001D48  D00F               	goto	l2963
  2950  001D4A                     l2957:
  2951                           
  2952                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2953  001D4A  0EF7               	movlw	247
  2954  001D4C  0100               	movlb	0	; () banked
  2955  001D4E  6F8B               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2956  001D50  D007               	goto	l2959
  2957  001D52                     l356:
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2961  001D52  0100               	movlb	0	; () banked
  2962  001D54  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  2963                           
  2964                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2965  001D56  0100               	movlb	0	; () banked
  2966  001D58  698C               	setf	CANInitialize@FilterConfig2& (0+255),b
  2967                           
  2968                           ;inc\CANlib.h: 273: break;
  2969  001D5A  D028               	goto	l2965
  2970  001D5C                     l357:
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2974  001D5C  0100               	movlb	0	; () banked
  2975  001D5E  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  2976  001D60                     l2959:
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2980  001D60  0EF7               	movlw	247
  2981  001D62  0100               	movlb	0	; () banked
  2982  001D64  6F8C               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;inc\CANlib.h: 278: }
  2986                           
  2987                           ;inc\CANlib.h: 277: break;
  2988  001D66  D022               	goto	l2965
  2989  001D68                     l2963:
  2990  001D68  0E9F               	movlw	159
  2991  001D6A  0100               	movlb	0	; () banked
  2992  001D6C  6F86               	movwf	??_CANInitialize& (0+255),b
  2993  001D6E  0EFF               	movlw	255
  2994  001D70  0100               	movlb	0	; () banked
  2995  001D72  6F87               	movwf	(??_CANInitialize+1)& (0+255),b
  2996  001D74  0100               	movlb	0	; () banked
  2997  001D76  5185               	movf	CANInitialize@flags& (0+255),w,b
  2998  001D78  0B60               	andlw	96
  2999  001D7A  0100               	movlb	0	; () banked
  3000  001D7C  6F88               	movwf	(??_CANInitialize+2)& (0+255),b
  3001  001D7E  6B89               	clrf	(??_CANInitialize+3)& (0+255),b
  3002  001D80  0100               	movlb	0	; () banked
  3003  001D82  5186               	movf	??_CANInitialize& (0+255),w,b
  3004  001D84  0100               	movlb	0	; () banked
  3005  001D86  1388               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3006  001D88  0100               	movlb	0	; () banked
  3007  001D8A  5187               	movf	(??_CANInitialize+1)& (0+255),w,b
  3008  001D8C  0100               	movlb	0	; () banked
  3009  001D8E  1389               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3010                           
  3011                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3012                           ; Switch size 1, requested type "space"
  3013                           ; Number of cases is 1, Range of values is 0 to 0
  3014                           ; switch strategies available:
  3015                           ; Name         Instructions Cycles
  3016                           ; simple_byte            4     3 (average)
  3017                           ;	Chosen strategy is simple_byte
  3018  001D90  0100               	movlb	0	; () banked
  3019  001D92  5189               	movf	(??_CANInitialize+3)& (0+255),w,b
  3020  001D94  0A00               	xorlw	0	; case 0
  3021  001D96  A4D8               	btfss	status,2,c
  3022  001D98  D7E1               	goto	l357
  3023                           
  3024                           ; BSR set to: 0
  3025                           ; Switch size 1, requested type "space"
  3026                           ; Number of cases is 2, Range of values is 191 to 223
  3027                           ; switch strategies available:
  3028                           ; Name         Instructions Cycles
  3029                           ; simple_byte            7     4 (average)
  3030                           ;	Chosen strategy is simple_byte
  3031  001D9A  0100               	movlb	0	; () banked
  3032  001D9C  5188               	movf	(??_CANInitialize+2)& (0+255),w,b
  3033  001D9E  0ABF               	xorlw	191	; case 191
  3034  001DA0  B4D8               	btfsc	status,2,c
  3035  001DA2  D7D7               	goto	l356
  3036  001DA4  0A60               	xorlw	96	; case 223
  3037  001DA6  B4D8               	btfsc	status,2,c
  3038  001DA8  D7D0               	goto	l2957
  3039  001DAA  D7D8               	goto	l357
  3040  001DAC                     l2965:
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3044  001DAC  0E00               	movlw	0
  3045  001DAE  0100               	movlb	0	; () banked
  3046  001DB0  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3047  001DB2  0E00               	movlw	0
  3048  001DB4  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3049  001DB6  0E00               	movlw	0
  3050  001DB8  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3051  001DBA  0E00               	movlw	0
  3052  001DBC  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3053  001DBE  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3054  001DC2  0E00               	movlw	0
  3055  001DC4  ECAD  F000         	call	_CANSetFilter
  3056                           
  3057                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3058  001DC8  0E00               	movlw	0
  3059  001DCA  0100               	movlb	0	; () banked
  3060  001DCC  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3061  001DCE  0E00               	movlw	0
  3062  001DD0  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3063  001DD2  0E00               	movlw	0
  3064  001DD4  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3065  001DD6  0E00               	movlw	0
  3066  001DD8  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3067  001DDA  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3068  001DDE  0E01               	movlw	1
  3069  001DE0  ECAD  F000         	call	_CANSetFilter
  3070                           
  3071                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3072  001DE4  0E00               	movlw	0
  3073  001DE6  0100               	movlb	0	; () banked
  3074  001DE8  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3075  001DEA  0E00               	movlw	0
  3076  001DEC  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3077  001DEE  0E00               	movlw	0
  3078  001DF0  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3079  001DF2  0E00               	movlw	0
  3080  001DF4  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3081  001DF6  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3082  001DFA  0E02               	movlw	2
  3083  001DFC  ECAD  F000         	call	_CANSetFilter
  3084                           
  3085                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3086  001E00  0E00               	movlw	0
  3087  001E02  0100               	movlb	0	; () banked
  3088  001E04  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3089  001E06  0E00               	movlw	0
  3090  001E08  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3091  001E0A  0E00               	movlw	0
  3092  001E0C  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3093  001E0E  0E00               	movlw	0
  3094  001E10  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3095  001E12  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3096  001E16  0E03               	movlw	3
  3097  001E18  ECAD  F000         	call	_CANSetFilter
  3098                           
  3099                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3100  001E1C  0E00               	movlw	0
  3101  001E1E  0100               	movlb	0	; () banked
  3102  001E20  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3103  001E22  0E00               	movlw	0
  3104  001E24  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3105  001E26  0E00               	movlw	0
  3106  001E28  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3107  001E2A  0E00               	movlw	0
  3108  001E2C  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3109  001E2E  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3110  001E32  0E04               	movlw	4
  3111  001E34  ECAD  F000         	call	_CANSetFilter
  3112                           
  3113                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3114  001E38  0E00               	movlw	0
  3115  001E3A  0100               	movlb	0	; () banked
  3116  001E3C  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3117  001E3E  0E00               	movlw	0
  3118  001E40  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3119  001E42  0E00               	movlw	0
  3120  001E44  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3121  001E46  0E00               	movlw	0
  3122  001E48  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3123  001E4A  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3124  001E4E  0E05               	movlw	5
  3125  001E50  ECAD  F000         	call	_CANSetFilter
  3126                           
  3127                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3128  001E54  0E00               	movlw	0
  3129  001E56  EC29  F012         	call	_CANOperationMode
  3130  001E5A  0012               	return		;funcret
  3131  001E5C                     __end_of_CANInitialize:
  3132                           	opt stack 0
  3133                           tblptru	equ	0xFF8
  3134                           tblptrh	equ	0xFF7
  3135                           tblptrl	equ	0xFF6
  3136                           tablat	equ	0xFF5
  3137                           intcon	equ	0xFF2
  3138                           intcon2	equ	0xFF1
  3139                           postinc0	equ	0xFEE
  3140                           wreg	equ	0xFE8
  3141                           postdec1	equ	0xFE5
  3142                           fsr1l	equ	0xFE1
  3143                           indf2	equ	0xFDF
  3144                           fsr2h	equ	0xFDA
  3145                           fsr2l	equ	0xFD9
  3146                           status	equ	0xFD8
  3147                           
  3148 ;; *************** function _CANSetMask *****************
  3149 ;; Defined at:
  3150 ;;		line 640 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  numBuffer       1    wreg     enum E16878
  3153 ;;  mask            4   19[BANK0 ] unsigned long 
  3154 ;;  type            1   23[BANK0 ] enum E16844
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  numBuffer       1   28[BANK0 ] enum E16878
  3157 ;;  tamp            4   29[BANK0 ] unsigned long 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;		None               void
  3160 ;; Registers used:
  3161 ;;		wreg, status,2, status,0
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3167 ;;      Params:         0       5       0       0
  3168 ;;      Locals:         0       5       0       0
  3169 ;;      Temps:          0       4       0       0
  3170 ;;      Totals:         0      14       0       0
  3171 ;;Total ram usage:       14 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    4
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_CANInitialize
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text7
  3182  0018F8                     __ptext7:
  3183                           	opt stack 0
  3184  0018F8                     _CANSetMask:
  3185                           	opt stack 24
  3186                           
  3187                           ;incstack = 0
  3188                           ;CANSetMask@numBuffer stored from wreg
  3189  0018F8  0100               	movlb	0	; () banked
  3190  0018FA  6F7C               	movwf	CANSetMask@numBuffer& (0+255),b
  3191                           
  3192                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3193  0018FC  0100               	movlb	0	; () banked
  3194  0018FE  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  3195  001900  A4D8               	btfss	status,2,c
  3196  001902  D056               	goto	l2527
  3197                           
  3198                           ; BSR set to: 0
  3199  001904  0100               	movlb	0	; () banked
  3200  001906  2977               	incf	CANSetMask@type& (0+255),w,b
  3201  001908  A4D8               	btfss	status,2,c
  3202  00190A  D052               	goto	l2527
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;inc\CANlib.h: 644: {
  3206                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3207  00190C  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3208  001910  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3209  001914  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3210  001918  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3211  00191C  0E04               	movlw	4
  3212  00191E  D006               	goto	u2100
  3213  001920                     u2105:
  3214  001920  0100               	movlb	0	; () banked
  3215  001922  90D8               	bcf	status,0,c
  3216  001924  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3217  001926  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3218  001928  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3219  00192A  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3220  00192C                     u2100:
  3221  00192C  2EE8               	decfsz	wreg,f,c
  3222  00192E  D7F8               	goto	u2105
  3223  001930  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3224  001934  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3225  001938  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3226  00193C  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3230  001940  0100               	movlb	0	; () banked
  3231  001942  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3232  001944  0100               	movlb	0	; () banked
  3233  001946  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3234  001948  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3235  00194A  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3236  00194C  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3240  00194E  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3244  001952  0E07               	movlw	7
  3245  001954  0100               	movlb	0	; () banked
  3246  001956  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3247  001958  0100               	movlb	0	; () banked
  3248  00195A  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3249  00195C  0E00               	movlw	0
  3250  00195E  0100               	movlb	0	; () banked
  3251  001960  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3252  001962  0100               	movlb	0	; () banked
  3253  001964  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3254  001966  0E00               	movlw	0
  3255  001968  0100               	movlb	0	; () banked
  3256  00196A  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3257  00196C  0100               	movlb	0	; () banked
  3258  00196E  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3259  001970  0E00               	movlw	0
  3260  001972  0100               	movlb	0	; () banked
  3261  001974  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3262  001976  0100               	movlb	0	; () banked
  3263  001978  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3267  00197A  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3268  00197E  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3269  001982  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3270  001986  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3271  00198A  0E05               	movlw	5
  3272  00198C                     u2115:
  3273  00198C  90D8               	bcf	status,0,c
  3274  00198E  0100               	movlb	0	; () banked
  3275  001990  3778               	rlcf	??_CANSetMask& (0+255),f,b
  3276  001992  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3277  001994  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3278  001996  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3279  001998  2EE8               	decfsz	wreg,f,c
  3280  00199A  D7F8               	goto	u2115
  3281  00199C  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3282  0019A0  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3283  0019A4  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3284  0019A8  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3288  0019AC  C07D  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3289  0019B0                     l2527:
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;inc\CANlib.h: 652: }
  3293                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3294  0019B0  0E02               	movlw	2
  3295  0019B2  0100               	movlb	0	; () banked
  3296  0019B4  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3297  0019B6  A4D8               	btfss	status,2,c
  3298  0019B8  D056               	goto	l2543
  3299                           
  3300                           ; BSR set to: 0
  3301  0019BA  0100               	movlb	0	; () banked
  3302  0019BC  2977               	incf	CANSetMask@type& (0+255),w,b
  3303  0019BE  A4D8               	btfss	status,2,c
  3304  0019C0  D052               	goto	l2543
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;inc\CANlib.h: 655: {
  3308                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3309  0019C2  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3310  0019C6  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3311  0019CA  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3312  0019CE  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3313  0019D2  0E04               	movlw	4
  3314  0019D4  D006               	goto	u2140
  3315  0019D6                     u2145:
  3316  0019D6  0100               	movlb	0	; () banked
  3317  0019D8  90D8               	bcf	status,0,c
  3318  0019DA  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3319  0019DC  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3320  0019DE  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3321  0019E0  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3322  0019E2                     u2140:
  3323  0019E2  2EE8               	decfsz	wreg,f,c
  3324  0019E4  D7F8               	goto	u2145
  3325  0019E6  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3326  0019EA  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3327  0019EE  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3328  0019F2  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3332  0019F6  0100               	movlb	0	; () banked
  3333  0019F8  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3334  0019FA  0100               	movlb	0	; () banked
  3335  0019FC  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3336  0019FE  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3337  001A00  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3338  001A02  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3342  001A04  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3346  001A08  0E07               	movlw	7
  3347  001A0A  0100               	movlb	0	; () banked
  3348  001A0C  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3349  001A0E  0100               	movlb	0	; () banked
  3350  001A10  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3351  001A12  0E00               	movlw	0
  3352  001A14  0100               	movlb	0	; () banked
  3353  001A16  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3354  001A18  0100               	movlb	0	; () banked
  3355  001A1A  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3356  001A1C  0E00               	movlw	0
  3357  001A1E  0100               	movlb	0	; () banked
  3358  001A20  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3359  001A22  0100               	movlb	0	; () banked
  3360  001A24  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3361  001A26  0E00               	movlw	0
  3362  001A28  0100               	movlb	0	; () banked
  3363  001A2A  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3364  001A2C  0100               	movlb	0	; () banked
  3365  001A2E  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3369  001A30  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3370  001A34  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3371  001A38  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3372  001A3C  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3373  001A40  0E05               	movlw	5
  3374  001A42                     u2155:
  3375  001A42  90D8               	bcf	status,0,c
  3376  001A44  0100               	movlb	0	; () banked
  3377  001A46  3778               	rlcf	??_CANSetMask& (0+255),f,b
  3378  001A48  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3379  001A4A  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3380  001A4C  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3381  001A4E  2EE8               	decfsz	wreg,f,c
  3382  001A50  D7F8               	goto	u2155
  3383  001A52  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3384  001A56  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3385  001A5A  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3386  001A5E  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3390  001A62  C07D  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3391  001A66                     l2543:
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;inc\CANlib.h: 663: }
  3395                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3396  001A66  0100               	movlb	0	; () banked
  3397  001A68  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  3398  001A6A  A4D8               	btfss	status,2,c
  3399  001A6C  D087               	goto	l2575
  3400                           
  3401                           ; BSR set to: 0
  3402  001A6E  0EF7               	movlw	247
  3403  001A70  0100               	movlb	0	; () banked
  3404  001A72  1977               	xorwf	CANSetMask@type& (0+255),w,b
  3405  001A74  A4D8               	btfss	status,2,c
  3406  001A76  D082               	goto	l2575
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;inc\CANlib.h: 666: {
  3410                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3411  001A78  0100               	movlb	0	; () banked
  3412  001A7A  5173               	movf	CANSetMask@mask& (0+255),w,b
  3413  001A7C  0100               	movlb	0	; () banked
  3414  001A7E  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3415  001A80  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3416  001A82  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3417  001A84  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3421  001A86  C07D  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3425  001A8A  0E00               	movlw	0
  3426  001A8C  0100               	movlb	0	; () banked
  3427  001A8E  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3428  001A90  0100               	movlb	0	; () banked
  3429  001A92  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3430  001A94  0EFF               	movlw	255
  3431  001A96  0100               	movlb	0	; () banked
  3432  001A98  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3433  001A9A  0100               	movlb	0	; () banked
  3434  001A9C  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3435  001A9E  0E00               	movlw	0
  3436  001AA0  0100               	movlb	0	; () banked
  3437  001AA2  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3438  001AA4  0100               	movlb	0	; () banked
  3439  001AA6  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3440  001AA8  0E00               	movlw	0
  3441  001AAA  0100               	movlb	0	; () banked
  3442  001AAC  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3443  001AAE  0100               	movlb	0	; () banked
  3444  001AB0  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3448  001AB2  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3449  001AB6  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3450  001ABA  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3451  001ABE  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3452  001AC2  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  3453  001AC6  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  3454  001ACA  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  3455  001ACE  0100               	movlb	0	; () banked
  3456  001AD0  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  3457  001AD2  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3458  001AD6  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3459  001ADA  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3460  001ADE  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3464  001AE2  C07D  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3468  001AE6  0100               	movlb	0	; () banked
  3469  001AE8  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3470  001AEA  D003               	goto	l430
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3474  001AEC  010F               	movlb	15	; () banked
  3475  001AEE  8119               	bsf	25,0,b	;volatile
  3476  001AF0  D002               	goto	l431
  3477  001AF2                     l430:
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;inc\CANlib.h: 676: else
  3481                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3482  001AF2  010F               	movlb	15	; () banked
  3483  001AF4  9119               	bcf	25,0,b	;volatile
  3484  001AF6                     l431:
  3485                           
  3486                           ; BSR set to: 15
  3487                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3488  001AF6  0100               	movlb	0	; () banked
  3489  001AF8  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3490  001AFA  D003               	goto	l432
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3494  001AFC  010F               	movlb	15	; () banked
  3495  001AFE  8319               	bsf	25,1,b	;volatile
  3496  001B00  D002               	goto	l433
  3497  001B02                     l432:
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;inc\CANlib.h: 681: else
  3501                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3502  001B02  010F               	movlb	15	; () banked
  3503  001B04  9319               	bcf	25,1,b	;volatile
  3504  001B06                     l433:
  3505                           
  3506                           ; BSR set to: 15
  3507                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3508  001B06  0100               	movlb	0	; () banked
  3509  001B08  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3510  001B0A  D003               	goto	l434
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3514  001B0C  010F               	movlb	15	; () banked
  3515  001B0E  8B19               	bsf	25,5,b	;volatile
  3516  001B10  D002               	goto	l435
  3517  001B12                     l434:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;inc\CANlib.h: 686: else
  3521                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3522  001B12  010F               	movlb	15	; () banked
  3523  001B14  9B19               	bcf	25,5,b	;volatile
  3524  001B16                     l435:
  3525                           
  3526                           ; BSR set to: 15
  3527                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3528  001B16  0100               	movlb	0	; () banked
  3529  001B18  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3530  001B1A  D003               	goto	l436
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3534  001B1C  010F               	movlb	15	; () banked
  3535  001B1E  8D19               	bsf	25,6,b	;volatile
  3536  001B20  D002               	goto	l437
  3537  001B22                     l436:
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;inc\CANlib.h: 691: else
  3541                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3542  001B22  010F               	movlb	15	; () banked
  3543  001B24  9D19               	bcf	25,6,b	;volatile
  3544  001B26                     l437:
  3545                           
  3546                           ; BSR set to: 15
  3547                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3548  001B26  0100               	movlb	0	; () banked
  3549  001B28  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3550  001B2A  D003               	goto	l438
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3554  001B2C  010F               	movlb	15	; () banked
  3555  001B2E  8F19               	bsf	25,7,b	;volatile
  3556  001B30  D002               	goto	l2569
  3557  001B32                     l438:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;inc\CANlib.h: 696: else
  3561                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3562  001B32  010F               	movlb	15	; () banked
  3563  001B34  9F19               	bcf	25,7,b	;volatile
  3564  001B36                     l2569:
  3565                           
  3566                           ; BSR set to: 15
  3567                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3568  001B36  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3569  001B3A  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3570  001B3E  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3571  001B42  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3572  001B46  0E16               	movlw	22
  3573  001B48  D006               	goto	u2230
  3574  001B4A                     u2235:
  3575  001B4A  0100               	movlb	0	; () banked
  3576  001B4C  90D8               	bcf	status,0,c
  3577  001B4E  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3578  001B50  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3579  001B52  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3580  001B54  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3581  001B56                     u2230:
  3582  001B56  2EE8               	decfsz	wreg,f,c
  3583  001B58  D7F8               	goto	u2235
  3584  001B5A  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3585  001B5E  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3586  001B62  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3587  001B66  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3591  001B6A  0100               	movlb	0	; () banked
  3592  001B6C  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3593  001B6E  0100               	movlb	0	; () banked
  3594  001B70  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3595  001B72  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3596  001B74  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3597  001B76  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3601  001B78  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3602  001B7C                     l2575:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;inc\CANlib.h: 702: }
  3606                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3607  001B7C  0E02               	movlw	2
  3608  001B7E  0100               	movlb	0	; () banked
  3609  001B80  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3610  001B82  A4D8               	btfss	status,2,c
  3611  001B84  0012               	return	
  3612                           
  3613                           ; BSR set to: 0
  3614  001B86  0EF7               	movlw	247
  3615  001B88  0100               	movlb	0	; () banked
  3616  001B8A  1977               	xorwf	CANSetMask@type& (0+255),w,b
  3617  001B8C  A4D8               	btfss	status,2,c
  3618  001B8E  0012               	return	
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;inc\CANlib.h: 705: {
  3622                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3623  001B90  0100               	movlb	0	; () banked
  3624  001B92  5173               	movf	CANSetMask@mask& (0+255),w,b
  3625  001B94  0100               	movlb	0	; () banked
  3626  001B96  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3627  001B98  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3628  001B9A  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3629  001B9C  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3633  001B9E  C07D  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3637  001BA2  0E00               	movlw	0
  3638  001BA4  0100               	movlb	0	; () banked
  3639  001BA6  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3640  001BA8  0100               	movlb	0	; () banked
  3641  001BAA  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3642  001BAC  0EFF               	movlw	255
  3643  001BAE  0100               	movlb	0	; () banked
  3644  001BB0  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3645  001BB2  0100               	movlb	0	; () banked
  3646  001BB4  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3647  001BB6  0E00               	movlw	0
  3648  001BB8  0100               	movlb	0	; () banked
  3649  001BBA  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3650  001BBC  0100               	movlb	0	; () banked
  3651  001BBE  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3652  001BC0  0E00               	movlw	0
  3653  001BC2  0100               	movlb	0	; () banked
  3654  001BC4  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3655  001BC6  0100               	movlb	0	; () banked
  3656  001BC8  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3660  001BCA  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3661  001BCE  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3662  001BD2  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3663  001BD6  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3664  001BDA  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  3665  001BDE  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  3666  001BE2  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  3667  001BE6  0100               	movlb	0	; () banked
  3668  001BE8  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  3669  001BEA  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3670  001BEE  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3671  001BF2  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3672  001BF6  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3676  001BFA  C07D  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3680  001BFE  0100               	movlb	0	; () banked
  3681  001C00  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3682  001C02  D003               	goto	l441
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3686  001C04  010F               	movlb	15	; () banked
  3687  001C06  811D               	bsf	29,0,b	;volatile
  3688  001C08  D002               	goto	l442
  3689  001C0A                     l441:
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;inc\CANlib.h: 715: else
  3693                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3694  001C0A  010F               	movlb	15	; () banked
  3695  001C0C  911D               	bcf	29,0,b	;volatile
  3696  001C0E                     l442:
  3697                           
  3698                           ; BSR set to: 15
  3699                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3700  001C0E  0100               	movlb	0	; () banked
  3701  001C10  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3702  001C12  D003               	goto	l443
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3706  001C14  010F               	movlb	15	; () banked
  3707  001C16  831D               	bsf	29,1,b	;volatile
  3708  001C18  D002               	goto	l444
  3709  001C1A                     l443:
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;inc\CANlib.h: 720: else
  3713                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3714  001C1A  010F               	movlb	15	; () banked
  3715  001C1C  931D               	bcf	29,1,b	;volatile
  3716  001C1E                     l444:
  3717                           
  3718                           ; BSR set to: 15
  3719                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3720  001C1E  0100               	movlb	0	; () banked
  3721  001C20  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3722  001C22  D003               	goto	l445
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3726  001C24  010F               	movlb	15	; () banked
  3727  001C26  8B1D               	bsf	29,5,b	;volatile
  3728  001C28  D002               	goto	l446
  3729  001C2A                     l445:
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;inc\CANlib.h: 725: else
  3733                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3734  001C2A  010F               	movlb	15	; () banked
  3735  001C2C  9B1D               	bcf	29,5,b	;volatile
  3736  001C2E                     l446:
  3737                           
  3738                           ; BSR set to: 15
  3739                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3740  001C2E  0100               	movlb	0	; () banked
  3741  001C30  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3742  001C32  D003               	goto	l447
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3746  001C34  010F               	movlb	15	; () banked
  3747  001C36  8D1D               	bsf	29,6,b	;volatile
  3748  001C38  D002               	goto	l448
  3749  001C3A                     l447:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;inc\CANlib.h: 730: else
  3753                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3754  001C3A  010F               	movlb	15	; () banked
  3755  001C3C  9D1D               	bcf	29,6,b	;volatile
  3756  001C3E                     l448:
  3757                           
  3758                           ; BSR set to: 15
  3759                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3760  001C3E  0100               	movlb	0	; () banked
  3761  001C40  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3762  001C42  D003               	goto	l449
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3766  001C44  010F               	movlb	15	; () banked
  3767  001C46  8F1D               	bsf	29,7,b	;volatile
  3768  001C48  D002               	goto	l2601
  3769  001C4A                     l449:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;inc\CANlib.h: 735: else
  3773                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3774  001C4A  010F               	movlb	15	; () banked
  3775  001C4C  9F1D               	bcf	29,7,b	;volatile
  3776  001C4E                     l2601:
  3777                           
  3778                           ; BSR set to: 15
  3779                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3780  001C4E  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3781  001C52  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3782  001C56  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3783  001C5A  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3784  001C5E  0E16               	movlw	22
  3785  001C60  D006               	goto	u2310
  3786  001C62                     u2315:
  3787  001C62  0100               	movlb	0	; () banked
  3788  001C64  90D8               	bcf	status,0,c
  3789  001C66  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3790  001C68  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3791  001C6A  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3792  001C6C  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3793  001C6E                     u2310:
  3794  001C6E  2EE8               	decfsz	wreg,f,c
  3795  001C70  D7F8               	goto	u2315
  3796  001C72  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3797  001C76  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3798  001C7A  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3799  001C7E  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3803  001C82  0100               	movlb	0	; () banked
  3804  001C84  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3805  001C86  0100               	movlb	0	; () banked
  3806  001C88  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3807  001C8A  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3808  001C8C  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3809  001C8E  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3813  001C90  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3814  001C94  0012               	return	
  3815  001C96                     __end_of_CANSetMask:
  3816                           	opt stack 0
  3817                           tblptru	equ	0xFF8
  3818                           tblptrh	equ	0xFF7
  3819                           tblptrl	equ	0xFF6
  3820                           tablat	equ	0xFF5
  3821                           intcon	equ	0xFF2
  3822                           intcon2	equ	0xFF1
  3823                           postinc0	equ	0xFEE
  3824                           wreg	equ	0xFE8
  3825                           postdec1	equ	0xFE5
  3826                           fsr1l	equ	0xFE1
  3827                           indf2	equ	0xFDF
  3828                           fsr2h	equ	0xFDA
  3829                           fsr2l	equ	0xFD9
  3830                           status	equ	0xFD8
  3831                           
  3832 ;; *************** function _CANSetFilter *****************
  3833 ;; Defined at:
  3834 ;;		line 748 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  numBuffer       1    wreg     enum E16881
  3837 ;;  filter          4   19[BANK0 ] unsigned long 
  3838 ;;  type            1   23[BANK0 ] enum E16844
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  numBuffer       1   28[BANK0 ] enum E16881
  3841 ;;  tamp            4   29[BANK0 ] unsigned long 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;		None               void
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3851 ;;      Params:         0       5       0       0
  3852 ;;      Locals:         0       5       0       0
  3853 ;;      Temps:          0       4       0       0
  3854 ;;      Totals:         0      14       0       0
  3855 ;;Total ram usage:       14 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    4
  3858 ;; This function calls:
  3859 ;;		Nothing
  3860 ;; This function is called by:
  3861 ;;		_CANInitialize
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text8
  3866  00015A                     __ptext8:
  3867                           	opt stack 0
  3868  00015A                     _CANSetFilter:
  3869                           	opt stack 24
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;incstack = 0
  3873                           ;CANSetFilter@numBuffer stored from wreg
  3874  00015A  0100               	movlb	0	; () banked
  3875  00015C  6F7C               	movwf	CANSetFilter@numBuffer& (0+255),b
  3876                           
  3877                           ;inc\CANlib.h: 750: unsigned long tamp;
  3878                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3879  00015E  0100               	movlb	0	; () banked
  3880  000160  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3881  000162  0100               	movlb	0	; () banked
  3882  000164  A4D8               	btfss	status,2,c
  3883  000166  D058               	goto	l2625
  3884                           
  3885                           ; BSR set to: 0
  3886  000168  0100               	movlb	0	; () banked
  3887  00016A  2977               	incf	CANSetFilter@type& (0+255),w,b
  3888  00016C  A4D8               	btfss	status,2,c
  3889  00016E  D054               	goto	l2625
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;inc\CANlib.h: 753: {
  3893                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3894  000170  010F               	movlb	15	; () banked
  3895  000172  9701               	bcf	1,3,b	;volatile
  3896                           
  3897                           ; BSR set to: 15
  3898                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  3899  000174  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  3900  000178  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3901  00017C  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3902  000180  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3903  000184  0E04               	movlw	4
  3904  000186  D006               	goto	u2340
  3905  000188                     u2345:
  3906  000188  0100               	movlb	0	; () banked
  3907  00018A  90D8               	bcf	status,0,c
  3908  00018C  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3909  00018E  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3910  000190  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3911  000192  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  3912  000194                     u2340:
  3913  000194  2EE8               	decfsz	wreg,f,c
  3914  000196  D7F8               	goto	u2345
  3915  000198  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  3916  00019C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3917  0001A0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3918  0001A4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  3922  0001A8  0100               	movlb	0	; () banked
  3923  0001AA  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  3924  0001AC  0100               	movlb	0	; () banked
  3925  0001AE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  3926  0001B0  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3927  0001B2  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3928  0001B4  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3932  0001B6  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  3936  0001BA  0E07               	movlw	7
  3937  0001BC  0100               	movlb	0	; () banked
  3938  0001BE  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  3939  0001C0  0100               	movlb	0	; () banked
  3940  0001C2  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  3941  0001C4  0E00               	movlw	0
  3942  0001C6  0100               	movlb	0	; () banked
  3943  0001C8  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3944  0001CA  0100               	movlb	0	; () banked
  3945  0001CC  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3946  0001CE  0E00               	movlw	0
  3947  0001D0  0100               	movlb	0	; () banked
  3948  0001D2  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3949  0001D4  0100               	movlb	0	; () banked
  3950  0001D6  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3951  0001D8  0E00               	movlw	0
  3952  0001DA  0100               	movlb	0	; () banked
  3953  0001DC  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3954  0001DE  0100               	movlb	0	; () banked
  3955  0001E0  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  3959  0001E2  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  3960  0001E6  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3961  0001EA  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3962  0001EE  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3963  0001F2  0E05               	movlw	5
  3964  0001F4                     u2355:
  3965  0001F4  90D8               	bcf	status,0,c
  3966  0001F6  0100               	movlb	0	; () banked
  3967  0001F8  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  3968  0001FA  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3969  0001FC  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3970  0001FE  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3971  000200  2EE8               	decfsz	wreg,f,c
  3972  000202  D7F8               	goto	u2355
  3973  000204  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  3974  000208  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3975  00020C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3976  000210  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3980  000214  C07D  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3981  000218                     l2625:
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;inc\CANlib.h: 763: }
  3985                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3986  000218  0100               	movlb	0	; () banked
  3987  00021A  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3988  00021C  A4D8               	btfss	status,2,c
  3989  00021E  D058               	goto	l2643
  3990                           
  3991                           ; BSR set to: 0
  3992  000220  0100               	movlb	0	; () banked
  3993  000222  2977               	incf	CANSetFilter@type& (0+255),w,b
  3994  000224  A4D8               	btfss	status,2,c
  3995  000226  D054               	goto	l2643
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;inc\CANlib.h: 766: {
  3999                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4000  000228  010F               	movlb	15	; () banked
  4001  00022A  9705               	bcf	5,3,b	;volatile
  4002                           
  4003                           ; BSR set to: 15
  4004                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4005  00022C  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4006  000230  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4007  000234  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4008  000238  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4009  00023C  0E04               	movlw	4
  4010  00023E  D006               	goto	u2380
  4011  000240                     u2385:
  4012  000240  0100               	movlb	0	; () banked
  4013  000242  90D8               	bcf	status,0,c
  4014  000244  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4015  000246  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4016  000248  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4017  00024A  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4018  00024C                     u2380:
  4019  00024C  2EE8               	decfsz	wreg,f,c
  4020  00024E  D7F8               	goto	u2385
  4021  000250  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4022  000254  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4023  000258  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4024  00025C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4028  000260  0100               	movlb	0	; () banked
  4029  000262  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4030  000264  0100               	movlb	0	; () banked
  4031  000266  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4032  000268  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4033  00026A  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4034  00026C  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4038  00026E  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4042  000272  0E07               	movlw	7
  4043  000274  0100               	movlb	0	; () banked
  4044  000276  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4045  000278  0100               	movlb	0	; () banked
  4046  00027A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4047  00027C  0E00               	movlw	0
  4048  00027E  0100               	movlb	0	; () banked
  4049  000280  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4050  000282  0100               	movlb	0	; () banked
  4051  000284  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4052  000286  0E00               	movlw	0
  4053  000288  0100               	movlb	0	; () banked
  4054  00028A  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4055  00028C  0100               	movlb	0	; () banked
  4056  00028E  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4057  000290  0E00               	movlw	0
  4058  000292  0100               	movlb	0	; () banked
  4059  000294  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4060  000296  0100               	movlb	0	; () banked
  4061  000298  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4065  00029A  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4066  00029E  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4067  0002A2  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4068  0002A6  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4069  0002AA  0E05               	movlw	5
  4070  0002AC                     u2395:
  4071  0002AC  90D8               	bcf	status,0,c
  4072  0002AE  0100               	movlb	0	; () banked
  4073  0002B0  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4074  0002B2  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4075  0002B4  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4076  0002B6  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4077  0002B8  2EE8               	decfsz	wreg,f,c
  4078  0002BA  D7F8               	goto	u2395
  4079  0002BC  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4080  0002C0  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4081  0002C4  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4082  0002C8  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4086  0002CC  C07D  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4087  0002D0                     l2643:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;inc\CANlib.h: 776: }
  4091                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4092  0002D0  0E02               	movlw	2
  4093  0002D2  0100               	movlb	0	; () banked
  4094  0002D4  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4095  0002D6  A4D8               	btfss	status,2,c
  4096  0002D8  D058               	goto	l2661
  4097                           
  4098                           ; BSR set to: 0
  4099  0002DA  0100               	movlb	0	; () banked
  4100  0002DC  2977               	incf	CANSetFilter@type& (0+255),w,b
  4101  0002DE  A4D8               	btfss	status,2,c
  4102  0002E0  D054               	goto	l2661
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;inc\CANlib.h: 779: {
  4106                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4107  0002E2  010F               	movlb	15	; () banked
  4108  0002E4  9709               	bcf	9,3,b	;volatile
  4109                           
  4110                           ; BSR set to: 15
  4111                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4112  0002E6  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4113  0002EA  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4114  0002EE  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4115  0002F2  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4116  0002F6  0E04               	movlw	4
  4117  0002F8  D006               	goto	u2420
  4118  0002FA                     u2425:
  4119  0002FA  0100               	movlb	0	; () banked
  4120  0002FC  90D8               	bcf	status,0,c
  4121  0002FE  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4122  000300  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4123  000302  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4124  000304  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4125  000306                     u2420:
  4126  000306  2EE8               	decfsz	wreg,f,c
  4127  000308  D7F8               	goto	u2425
  4128  00030A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4129  00030E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4130  000312  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4131  000316  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4135  00031A  0100               	movlb	0	; () banked
  4136  00031C  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4137  00031E  0100               	movlb	0	; () banked
  4138  000320  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4139  000322  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4140  000324  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4141  000326  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4145  000328  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4149  00032C  0E07               	movlw	7
  4150  00032E  0100               	movlb	0	; () banked
  4151  000330  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4152  000332  0100               	movlb	0	; () banked
  4153  000334  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4154  000336  0E00               	movlw	0
  4155  000338  0100               	movlb	0	; () banked
  4156  00033A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4157  00033C  0100               	movlb	0	; () banked
  4158  00033E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4159  000340  0E00               	movlw	0
  4160  000342  0100               	movlb	0	; () banked
  4161  000344  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4162  000346  0100               	movlb	0	; () banked
  4163  000348  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4164  00034A  0E00               	movlw	0
  4165  00034C  0100               	movlb	0	; () banked
  4166  00034E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4167  000350  0100               	movlb	0	; () banked
  4168  000352  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4172  000354  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4173  000358  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4174  00035C  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4175  000360  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4176  000364  0E05               	movlw	5
  4177  000366                     u2435:
  4178  000366  90D8               	bcf	status,0,c
  4179  000368  0100               	movlb	0	; () banked
  4180  00036A  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4181  00036C  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4182  00036E  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4183  000370  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4184  000372  2EE8               	decfsz	wreg,f,c
  4185  000374  D7F8               	goto	u2435
  4186  000376  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4187  00037A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4188  00037E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4189  000382  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4193  000386  C07D  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4194  00038A                     l2661:
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;inc\CANlib.h: 789: }
  4198                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4199  00038A  0E03               	movlw	3
  4200  00038C  0100               	movlb	0	; () banked
  4201  00038E  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4202  000390  A4D8               	btfss	status,2,c
  4203  000392  D058               	goto	l2679
  4204                           
  4205                           ; BSR set to: 0
  4206  000394  0100               	movlb	0	; () banked
  4207  000396  2977               	incf	CANSetFilter@type& (0+255),w,b
  4208  000398  A4D8               	btfss	status,2,c
  4209  00039A  D054               	goto	l2679
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;inc\CANlib.h: 792: {
  4213                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4214  00039C  010F               	movlb	15	; () banked
  4215  00039E  970D               	bcf	13,3,b	;volatile
  4216                           
  4217                           ; BSR set to: 15
  4218                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4219  0003A0  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4220  0003A4  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4221  0003A8  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4222  0003AC  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4223  0003B0  0E04               	movlw	4
  4224  0003B2  D006               	goto	u2460
  4225  0003B4                     u2465:
  4226  0003B4  0100               	movlb	0	; () banked
  4227  0003B6  90D8               	bcf	status,0,c
  4228  0003B8  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4229  0003BA  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4230  0003BC  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4231  0003BE  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4232  0003C0                     u2460:
  4233  0003C0  2EE8               	decfsz	wreg,f,c
  4234  0003C2  D7F8               	goto	u2465
  4235  0003C4  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4236  0003C8  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4237  0003CC  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4238  0003D0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4242  0003D4  0100               	movlb	0	; () banked
  4243  0003D6  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4244  0003D8  0100               	movlb	0	; () banked
  4245  0003DA  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4246  0003DC  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4247  0003DE  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4248  0003E0  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4252  0003E2  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4256  0003E6  0E07               	movlw	7
  4257  0003E8  0100               	movlb	0	; () banked
  4258  0003EA  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4259  0003EC  0100               	movlb	0	; () banked
  4260  0003EE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4261  0003F0  0E00               	movlw	0
  4262  0003F2  0100               	movlb	0	; () banked
  4263  0003F4  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4264  0003F6  0100               	movlb	0	; () banked
  4265  0003F8  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4266  0003FA  0E00               	movlw	0
  4267  0003FC  0100               	movlb	0	; () banked
  4268  0003FE  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4269  000400  0100               	movlb	0	; () banked
  4270  000402  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4271  000404  0E00               	movlw	0
  4272  000406  0100               	movlb	0	; () banked
  4273  000408  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4274  00040A  0100               	movlb	0	; () banked
  4275  00040C  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4279  00040E  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4280  000412  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4281  000416  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4282  00041A  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4283  00041E  0E05               	movlw	5
  4284  000420                     u2475:
  4285  000420  90D8               	bcf	status,0,c
  4286  000422  0100               	movlb	0	; () banked
  4287  000424  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4288  000426  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4289  000428  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4290  00042A  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4291  00042C  2EE8               	decfsz	wreg,f,c
  4292  00042E  D7F8               	goto	u2475
  4293  000430  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4294  000434  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4295  000438  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4296  00043C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4300  000440  C07D  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4301  000444                     l2679:
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;inc\CANlib.h: 802: }
  4305                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4306  000444  0E04               	movlw	4
  4307  000446  0100               	movlb	0	; () banked
  4308  000448  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4309  00044A  A4D8               	btfss	status,2,c
  4310  00044C  D058               	goto	l2697
  4311                           
  4312                           ; BSR set to: 0
  4313  00044E  0100               	movlb	0	; () banked
  4314  000450  2977               	incf	CANSetFilter@type& (0+255),w,b
  4315  000452  A4D8               	btfss	status,2,c
  4316  000454  D054               	goto	l2697
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;inc\CANlib.h: 805: {
  4320                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4321  000456  010F               	movlb	15	; () banked
  4322  000458  9711               	bcf	17,3,b	;volatile
  4323                           
  4324                           ; BSR set to: 15
  4325                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4326  00045A  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4327  00045E  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4328  000462  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4329  000466  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4330  00046A  0E04               	movlw	4
  4331  00046C  D006               	goto	u2500
  4332  00046E                     u2505:
  4333  00046E  0100               	movlb	0	; () banked
  4334  000470  90D8               	bcf	status,0,c
  4335  000472  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4336  000474  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4337  000476  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4338  000478  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4339  00047A                     u2500:
  4340  00047A  2EE8               	decfsz	wreg,f,c
  4341  00047C  D7F8               	goto	u2505
  4342  00047E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4343  000482  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4344  000486  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4345  00048A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4349  00048E  0100               	movlb	0	; () banked
  4350  000490  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4351  000492  0100               	movlb	0	; () banked
  4352  000494  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4353  000496  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4354  000498  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4355  00049A  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4359  00049C  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4363  0004A0  0E07               	movlw	7
  4364  0004A2  0100               	movlb	0	; () banked
  4365  0004A4  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4366  0004A6  0100               	movlb	0	; () banked
  4367  0004A8  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4368  0004AA  0E00               	movlw	0
  4369  0004AC  0100               	movlb	0	; () banked
  4370  0004AE  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4371  0004B0  0100               	movlb	0	; () banked
  4372  0004B2  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4373  0004B4  0E00               	movlw	0
  4374  0004B6  0100               	movlb	0	; () banked
  4375  0004B8  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4376  0004BA  0100               	movlb	0	; () banked
  4377  0004BC  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4378  0004BE  0E00               	movlw	0
  4379  0004C0  0100               	movlb	0	; () banked
  4380  0004C2  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4381  0004C4  0100               	movlb	0	; () banked
  4382  0004C6  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4386  0004C8  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4387  0004CC  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4388  0004D0  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4389  0004D4  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4390  0004D8  0E05               	movlw	5
  4391  0004DA                     u2515:
  4392  0004DA  90D8               	bcf	status,0,c
  4393  0004DC  0100               	movlb	0	; () banked
  4394  0004DE  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4395  0004E0  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4396  0004E2  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4397  0004E4  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4398  0004E6  2EE8               	decfsz	wreg,f,c
  4399  0004E8  D7F8               	goto	u2515
  4400  0004EA  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4401  0004EE  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4402  0004F2  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4403  0004F6  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4407  0004FA  C07D  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4408  0004FE                     l2697:
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;inc\CANlib.h: 815: }
  4412                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4413  0004FE  0E05               	movlw	5
  4414  000500  0100               	movlb	0	; () banked
  4415  000502  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4416  000504  A4D8               	btfss	status,2,c
  4417  000506  D058               	goto	l2715
  4418                           
  4419                           ; BSR set to: 0
  4420  000508  0100               	movlb	0	; () banked
  4421  00050A  2977               	incf	CANSetFilter@type& (0+255),w,b
  4422  00050C  A4D8               	btfss	status,2,c
  4423  00050E  D054               	goto	l2715
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;inc\CANlib.h: 818: {
  4427                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4428  000510  010F               	movlb	15	; () banked
  4429  000512  9715               	bcf	21,3,b	;volatile
  4430                           
  4431                           ; BSR set to: 15
  4432                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4433  000514  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4434  000518  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4435  00051C  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4436  000520  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4437  000524  0E04               	movlw	4
  4438  000526  D006               	goto	u2540
  4439  000528                     u2545:
  4440  000528  0100               	movlb	0	; () banked
  4441  00052A  90D8               	bcf	status,0,c
  4442  00052C  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4443  00052E  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4444  000530  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4445  000532  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4446  000534                     u2540:
  4447  000534  2EE8               	decfsz	wreg,f,c
  4448  000536  D7F8               	goto	u2545
  4449  000538  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4450  00053C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4451  000540  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4452  000544  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4456  000548  0100               	movlb	0	; () banked
  4457  00054A  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4458  00054C  0100               	movlb	0	; () banked
  4459  00054E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4460  000550  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4461  000552  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4462  000554  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4466  000556  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4470  00055A  0E07               	movlw	7
  4471  00055C  0100               	movlb	0	; () banked
  4472  00055E  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4473  000560  0100               	movlb	0	; () banked
  4474  000562  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4475  000564  0E00               	movlw	0
  4476  000566  0100               	movlb	0	; () banked
  4477  000568  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4478  00056A  0100               	movlb	0	; () banked
  4479  00056C  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4480  00056E  0E00               	movlw	0
  4481  000570  0100               	movlb	0	; () banked
  4482  000572  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4483  000574  0100               	movlb	0	; () banked
  4484  000576  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4485  000578  0E00               	movlw	0
  4486  00057A  0100               	movlb	0	; () banked
  4487  00057C  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4488  00057E  0100               	movlb	0	; () banked
  4489  000580  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4493  000582  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4494  000586  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4495  00058A  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4496  00058E  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4497  000592  0E05               	movlw	5
  4498  000594                     u2555:
  4499  000594  90D8               	bcf	status,0,c
  4500  000596  0100               	movlb	0	; () banked
  4501  000598  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4502  00059A  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4503  00059C  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4504  00059E  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4505  0005A0  2EE8               	decfsz	wreg,f,c
  4506  0005A2  D7F8               	goto	u2555
  4507  0005A4  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4508  0005A8  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4509  0005AC  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4510  0005B0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4514  0005B4  C07D  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4515  0005B8                     l2715:
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;inc\CANlib.h: 828: }
  4519                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4520  0005B8  0100               	movlb	0	; () banked
  4521  0005BA  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4522  0005BC  0100               	movlb	0	; () banked
  4523  0005BE  A4D8               	btfss	status,2,c
  4524  0005C0  D089               	goto	l2749
  4525                           
  4526                           ; BSR set to: 0
  4527  0005C2  0EF7               	movlw	247
  4528  0005C4  0100               	movlb	0	; () banked
  4529  0005C6  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  4530  0005C8  A4D8               	btfss	status,2,c
  4531  0005CA  D084               	goto	l2749
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;inc\CANlib.h: 832: {
  4535                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4536  0005CC  010F               	movlb	15	; () banked
  4537  0005CE  8701               	bsf	1,3,b	;volatile
  4538                           
  4539                           ; BSR set to: 15
  4540                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4541  0005D0  0100               	movlb	0	; () banked
  4542  0005D2  5173               	movf	CANSetFilter@filter& (0+255),w,b
  4543  0005D4  0100               	movlb	0	; () banked
  4544  0005D6  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4545  0005D8  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4546  0005DA  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4547  0005DC  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4551  0005DE  C07D  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4555  0005E2  0E00               	movlw	0
  4556  0005E4  0100               	movlb	0	; () banked
  4557  0005E6  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4558  0005E8  0100               	movlb	0	; () banked
  4559  0005EA  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4560  0005EC  0EFF               	movlw	255
  4561  0005EE  0100               	movlb	0	; () banked
  4562  0005F0  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4563  0005F2  0100               	movlb	0	; () banked
  4564  0005F4  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4565  0005F6  0E00               	movlw	0
  4566  0005F8  0100               	movlb	0	; () banked
  4567  0005FA  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4568  0005FC  0100               	movlb	0	; () banked
  4569  0005FE  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4570  000600  0E00               	movlw	0
  4571  000602  0100               	movlb	0	; () banked
  4572  000604  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4573  000606  0100               	movlb	0	; () banked
  4574  000608  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4578  00060A  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4579  00060E  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4580  000612  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4581  000616  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4582  00061A  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  4583  00061E  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4584  000622  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4585  000626  0100               	movlb	0	; () banked
  4586  000628  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  4587  00062A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4588  00062E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4589  000632  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4590  000636  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4594  00063A  C07D  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4598  00063E  0100               	movlb	0	; () banked
  4599  000640  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4600  000642  D003               	goto	l461
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4604  000644  010F               	movlb	15	; () banked
  4605  000646  8101               	bsf	1,0,b	;volatile
  4606  000648  D002               	goto	l462
  4607  00064A                     l461:
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;inc\CANlib.h: 844: else
  4611                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4612  00064A  010F               	movlb	15	; () banked
  4613  00064C  9101               	bcf	1,0,b	;volatile
  4614  00064E                     l462:
  4615                           
  4616                           ; BSR set to: 15
  4617                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4618  00064E  0100               	movlb	0	; () banked
  4619  000650  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4620  000652  D003               	goto	l463
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4624  000654  010F               	movlb	15	; () banked
  4625  000656  8301               	bsf	1,1,b	;volatile
  4626  000658  D002               	goto	l464
  4627  00065A                     l463:
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;inc\CANlib.h: 849: else
  4631                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4632  00065A  010F               	movlb	15	; () banked
  4633  00065C  9301               	bcf	1,1,b	;volatile
  4634  00065E                     l464:
  4635                           
  4636                           ; BSR set to: 15
  4637                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4638  00065E  0100               	movlb	0	; () banked
  4639  000660  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4640  000662  D003               	goto	l465
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4644  000664  010F               	movlb	15	; () banked
  4645  000666  8B01               	bsf	1,5,b	;volatile
  4646  000668  D002               	goto	l466
  4647  00066A                     l465:
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;inc\CANlib.h: 854: else
  4651                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4652  00066A  010F               	movlb	15	; () banked
  4653  00066C  9B01               	bcf	1,5,b	;volatile
  4654  00066E                     l466:
  4655                           
  4656                           ; BSR set to: 15
  4657                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4658  00066E  0100               	movlb	0	; () banked
  4659  000670  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4660  000672  D003               	goto	l467
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4664  000674  010F               	movlb	15	; () banked
  4665  000676  8D01               	bsf	1,6,b	;volatile
  4666  000678  D002               	goto	l468
  4667  00067A                     l467:
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;inc\CANlib.h: 859: else
  4671                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4672  00067A  010F               	movlb	15	; () banked
  4673  00067C  9D01               	bcf	1,6,b	;volatile
  4674  00067E                     l468:
  4675                           
  4676                           ; BSR set to: 15
  4677                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4678  00067E  0100               	movlb	0	; () banked
  4679  000680  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4680  000682  D003               	goto	l469
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4684  000684  010F               	movlb	15	; () banked
  4685  000686  8F01               	bsf	1,7,b	;volatile
  4686  000688  D002               	goto	l2743
  4687  00068A                     l469:
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;inc\CANlib.h: 864: else
  4691                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4692  00068A  010F               	movlb	15	; () banked
  4693  00068C  9F01               	bcf	1,7,b	;volatile
  4694  00068E                     l2743:
  4695                           
  4696                           ; BSR set to: 15
  4697                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4698  00068E  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4699  000692  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4700  000696  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4701  00069A  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4702  00069E  0E16               	movlw	22
  4703  0006A0  D006               	goto	u2630
  4704  0006A2                     u2635:
  4705  0006A2  0100               	movlb	0	; () banked
  4706  0006A4  90D8               	bcf	status,0,c
  4707  0006A6  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4708  0006A8  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4709  0006AA  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4710  0006AC  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4711  0006AE                     u2630:
  4712  0006AE  2EE8               	decfsz	wreg,f,c
  4713  0006B0  D7F8               	goto	u2635
  4714  0006B2  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4715  0006B6  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4716  0006BA  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4717  0006BE  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4721  0006C2  0100               	movlb	0	; () banked
  4722  0006C4  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4723  0006C6  0100               	movlb	0	; () banked
  4724  0006C8  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4725  0006CA  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4726  0006CC  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4727  0006CE  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4731  0006D0  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4732  0006D4                     l2749:
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;inc\CANlib.h: 870: }
  4736                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4737  0006D4  0100               	movlb	0	; () banked
  4738  0006D6  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4739  0006D8  A4D8               	btfss	status,2,c
  4740  0006DA  D089               	goto	l2783
  4741                           
  4742                           ; BSR set to: 0
  4743  0006DC  0EF7               	movlw	247
  4744  0006DE  0100               	movlb	0	; () banked
  4745  0006E0  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  4746  0006E2  A4D8               	btfss	status,2,c
  4747  0006E4  D084               	goto	l2783
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;inc\CANlib.h: 873: {
  4751                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4752  0006E6  010F               	movlb	15	; () banked
  4753  0006E8  8705               	bsf	5,3,b	;volatile
  4754                           
  4755                           ; BSR set to: 15
  4756                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4757  0006EA  0100               	movlb	0	; () banked
  4758  0006EC  5173               	movf	CANSetFilter@filter& (0+255),w,b
  4759  0006EE  0100               	movlb	0	; () banked
  4760  0006F0  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4761  0006F2  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4762  0006F4  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4763  0006F6  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4767  0006F8  C07D  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4771  0006FC  0E00               	movlw	0
  4772  0006FE  0100               	movlb	0	; () banked
  4773  000700  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4774  000702  0100               	movlb	0	; () banked
  4775  000704  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4776  000706  0EFF               	movlw	255
  4777  000708  0100               	movlb	0	; () banked
  4778  00070A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4779  00070C  0100               	movlb	0	; () banked
  4780  00070E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4781  000710  0E00               	movlw	0
  4782  000712  0100               	movlb	0	; () banked
  4783  000714  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4784  000716  0100               	movlb	0	; () banked
  4785  000718  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4786  00071A  0E00               	movlw	0
  4787  00071C  0100               	movlb	0	; () banked
  4788  00071E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4789  000720  0100               	movlb	0	; () banked
  4790  000722  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4794  000724  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4795  000728  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4796  00072C  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4797  000730  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4798  000734  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  4799  000738  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4800  00073C  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4801  000740  0100               	movlb	0	; () banked
  4802  000742  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  4803  000744  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4804  000748  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4805  00074C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4806  000750  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4810  000754  C07D  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4814  000758  0100               	movlb	0	; () banked
  4815  00075A  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4816  00075C  D003               	goto	l472
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4820  00075E  010F               	movlb	15	; () banked
  4821  000760  8105               	bsf	5,0,b	;volatile
  4822  000762  D002               	goto	l473
  4823  000764                     l472:
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;inc\CANlib.h: 885: else
  4827                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4828  000764  010F               	movlb	15	; () banked
  4829  000766  9105               	bcf	5,0,b	;volatile
  4830  000768                     l473:
  4831                           
  4832                           ; BSR set to: 15
  4833                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4834  000768  0100               	movlb	0	; () banked
  4835  00076A  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4836  00076C  D003               	goto	l474
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4840  00076E  010F               	movlb	15	; () banked
  4841  000770  8305               	bsf	5,1,b	;volatile
  4842  000772  D002               	goto	l475
  4843  000774                     l474:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;inc\CANlib.h: 890: else
  4847                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4848  000774  010F               	movlb	15	; () banked
  4849  000776  9305               	bcf	5,1,b	;volatile
  4850  000778                     l475:
  4851                           
  4852                           ; BSR set to: 15
  4853                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4854  000778  0100               	movlb	0	; () banked
  4855  00077A  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4856  00077C  D003               	goto	l476
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4860  00077E  010F               	movlb	15	; () banked
  4861  000780  8B05               	bsf	5,5,b	;volatile
  4862  000782  D002               	goto	l477
  4863  000784                     l476:
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;inc\CANlib.h: 895: else
  4867                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4868  000784  010F               	movlb	15	; () banked
  4869  000786  9B05               	bcf	5,5,b	;volatile
  4870  000788                     l477:
  4871                           
  4872                           ; BSR set to: 15
  4873                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  4874  000788  0100               	movlb	0	; () banked
  4875  00078A  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4876  00078C  D003               	goto	l478
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4880  00078E  010F               	movlb	15	; () banked
  4881  000790  8D05               	bsf	5,6,b	;volatile
  4882  000792  D002               	goto	l479
  4883  000794                     l478:
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;inc\CANlib.h: 900: else
  4887                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4888  000794  010F               	movlb	15	; () banked
  4889  000796  9D05               	bcf	5,6,b	;volatile
  4890  000798                     l479:
  4891                           
  4892                           ; BSR set to: 15
  4893                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  4894  000798  0100               	movlb	0	; () banked
  4895  00079A  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4896  00079C  D003               	goto	l480
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4900  00079E  010F               	movlb	15	; () banked
  4901  0007A0  8F05               	bsf	5,7,b	;volatile
  4902  0007A2  D002               	goto	l2777
  4903  0007A4                     l480:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;inc\CANlib.h: 905: else
  4907                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4908  0007A4  010F               	movlb	15	; () banked
  4909  0007A6  9F05               	bcf	5,7,b	;volatile
  4910  0007A8                     l2777:
  4911                           
  4912                           ; BSR set to: 15
  4913                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  4914  0007A8  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4915  0007AC  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4916  0007B0  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4917  0007B4  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4918  0007B8  0E16               	movlw	22
  4919  0007BA  D006               	goto	u2710
  4920  0007BC                     u2715:
  4921  0007BC  0100               	movlb	0	; () banked
  4922  0007BE  90D8               	bcf	status,0,c
  4923  0007C0  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4924  0007C2  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4925  0007C4  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4926  0007C6  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4927  0007C8                     u2710:
  4928  0007C8  2EE8               	decfsz	wreg,f,c
  4929  0007CA  D7F8               	goto	u2715
  4930  0007CC  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4931  0007D0  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4932  0007D4  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4933  0007D8  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  4937  0007DC  0100               	movlb	0	; () banked
  4938  0007DE  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4939  0007E0  0100               	movlb	0	; () banked
  4940  0007E2  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4941  0007E4  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4942  0007E6  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4943  0007E8  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4947  0007EA  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4948  0007EE                     l2783:
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;inc\CANlib.h: 911: }
  4952                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4953  0007EE  0E02               	movlw	2
  4954  0007F0  0100               	movlb	0	; () banked
  4955  0007F2  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4956  0007F4  A4D8               	btfss	status,2,c
  4957  0007F6  D089               	goto	l2817
  4958                           
  4959                           ; BSR set to: 0
  4960  0007F8  0EF7               	movlw	247
  4961  0007FA  0100               	movlb	0	; () banked
  4962  0007FC  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  4963  0007FE  A4D8               	btfss	status,2,c
  4964  000800  D084               	goto	l2817
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;inc\CANlib.h: 915: {
  4968                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4969  000802  010F               	movlb	15	; () banked
  4970  000804  8709               	bsf	9,3,b	;volatile
  4971                           
  4972                           ; BSR set to: 15
  4973                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  4974  000806  0100               	movlb	0	; () banked
  4975  000808  5173               	movf	CANSetFilter@filter& (0+255),w,b
  4976  00080A  0100               	movlb	0	; () banked
  4977  00080C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4978  00080E  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4979  000810  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4980  000812  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4984  000814  C07D  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  4988  000818  0E00               	movlw	0
  4989  00081A  0100               	movlb	0	; () banked
  4990  00081C  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4991  00081E  0100               	movlb	0	; () banked
  4992  000820  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4993  000822  0EFF               	movlw	255
  4994  000824  0100               	movlb	0	; () banked
  4995  000826  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4996  000828  0100               	movlb	0	; () banked
  4997  00082A  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4998  00082C  0E00               	movlw	0
  4999  00082E  0100               	movlb	0	; () banked
  5000  000830  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5001  000832  0100               	movlb	0	; () banked
  5002  000834  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5003  000836  0E00               	movlw	0
  5004  000838  0100               	movlb	0	; () banked
  5005  00083A  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5006  00083C  0100               	movlb	0	; () banked
  5007  00083E  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5008                           
  5009                           ; BSR set to: 0
  5010                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5011  000840  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5012  000844  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5013  000848  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5014  00084C  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5015  000850  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5016  000854  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5017  000858  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5018  00085C  0100               	movlb	0	; () banked
  5019  00085E  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5020  000860  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5021  000864  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5022  000868  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5023  00086C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5027  000870  C07D  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5031  000874  0100               	movlb	0	; () banked
  5032  000876  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5033  000878  D003               	goto	l483
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5037  00087A  010F               	movlb	15	; () banked
  5038  00087C  8109               	bsf	9,0,b	;volatile
  5039  00087E  D002               	goto	l484
  5040  000880                     l483:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;inc\CANlib.h: 927: else
  5044                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5045  000880  010F               	movlb	15	; () banked
  5046  000882  9109               	bcf	9,0,b	;volatile
  5047  000884                     l484:
  5048                           
  5049                           ; BSR set to: 15
  5050                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5051  000884  0100               	movlb	0	; () banked
  5052  000886  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5053  000888  D003               	goto	l485
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5057  00088A  010F               	movlb	15	; () banked
  5058  00088C  8309               	bsf	9,1,b	;volatile
  5059  00088E  D002               	goto	l486
  5060  000890                     l485:
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;inc\CANlib.h: 932: else
  5064                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5065  000890  010F               	movlb	15	; () banked
  5066  000892  9309               	bcf	9,1,b	;volatile
  5067  000894                     l486:
  5068                           
  5069                           ; BSR set to: 15
  5070                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5071  000894  0100               	movlb	0	; () banked
  5072  000896  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5073  000898  D003               	goto	l487
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5077  00089A  010F               	movlb	15	; () banked
  5078  00089C  8B09               	bsf	9,5,b	;volatile
  5079  00089E  D002               	goto	l488
  5080  0008A0                     l487:
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;inc\CANlib.h: 937: else
  5084                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5085  0008A0  010F               	movlb	15	; () banked
  5086  0008A2  9B09               	bcf	9,5,b	;volatile
  5087  0008A4                     l488:
  5088                           
  5089                           ; BSR set to: 15
  5090                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5091  0008A4  0100               	movlb	0	; () banked
  5092  0008A6  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5093  0008A8  D003               	goto	l489
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5097  0008AA  010F               	movlb	15	; () banked
  5098  0008AC  8D09               	bsf	9,6,b	;volatile
  5099  0008AE  D002               	goto	l490
  5100  0008B0                     l489:
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;inc\CANlib.h: 942: else
  5104                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5105  0008B0  010F               	movlb	15	; () banked
  5106  0008B2  9D09               	bcf	9,6,b	;volatile
  5107  0008B4                     l490:
  5108                           
  5109                           ; BSR set to: 15
  5110                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5111  0008B4  0100               	movlb	0	; () banked
  5112  0008B6  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5113  0008B8  D003               	goto	l491
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5117  0008BA  010F               	movlb	15	; () banked
  5118  0008BC  8F09               	bsf	9,7,b	;volatile
  5119  0008BE  D002               	goto	l2811
  5120  0008C0                     l491:
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;inc\CANlib.h: 947: else
  5124                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5125  0008C0  010F               	movlb	15	; () banked
  5126  0008C2  9F09               	bcf	9,7,b	;volatile
  5127  0008C4                     l2811:
  5128                           
  5129                           ; BSR set to: 15
  5130                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5131  0008C4  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5132  0008C8  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5133  0008CC  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5134  0008D0  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5135  0008D4  0E16               	movlw	22
  5136  0008D6  D006               	goto	u2790
  5137  0008D8                     u2795:
  5138  0008D8  0100               	movlb	0	; () banked
  5139  0008DA  90D8               	bcf	status,0,c
  5140  0008DC  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5141  0008DE  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5142  0008E0  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5143  0008E2  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5144  0008E4                     u2790:
  5145  0008E4  2EE8               	decfsz	wreg,f,c
  5146  0008E6  D7F8               	goto	u2795
  5147  0008E8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5148  0008EC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5149  0008F0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5150  0008F4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5154  0008F8  0100               	movlb	0	; () banked
  5155  0008FA  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5156  0008FC  0100               	movlb	0	; () banked
  5157  0008FE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5158  000900  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5159  000902  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5160  000904  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5164  000906  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5165  00090A                     l2817:
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;inc\CANlib.h: 953: }
  5169                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5170  00090A  0E03               	movlw	3
  5171  00090C  0100               	movlb	0	; () banked
  5172  00090E  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5173  000910  A4D8               	btfss	status,2,c
  5174  000912  D089               	goto	l2851
  5175                           
  5176                           ; BSR set to: 0
  5177  000914  0EF7               	movlw	247
  5178  000916  0100               	movlb	0	; () banked
  5179  000918  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5180  00091A  A4D8               	btfss	status,2,c
  5181  00091C  D084               	goto	l2851
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;inc\CANlib.h: 956: {
  5185                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5186  00091E  010F               	movlb	15	; () banked
  5187  000920  870D               	bsf	13,3,b	;volatile
  5188                           
  5189                           ; BSR set to: 15
  5190                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5191  000922  0100               	movlb	0	; () banked
  5192  000924  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5193  000926  0100               	movlb	0	; () banked
  5194  000928  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5195  00092A  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5196  00092C  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5197  00092E  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5201  000930  C07D  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5205  000934  0E00               	movlw	0
  5206  000936  0100               	movlb	0	; () banked
  5207  000938  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5208  00093A  0100               	movlb	0	; () banked
  5209  00093C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5210  00093E  0EFF               	movlw	255
  5211  000940  0100               	movlb	0	; () banked
  5212  000942  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5213  000944  0100               	movlb	0	; () banked
  5214  000946  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5215  000948  0E00               	movlw	0
  5216  00094A  0100               	movlb	0	; () banked
  5217  00094C  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5218  00094E  0100               	movlb	0	; () banked
  5219  000950  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5220  000952  0E00               	movlw	0
  5221  000954  0100               	movlb	0	; () banked
  5222  000956  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5223  000958  0100               	movlb	0	; () banked
  5224  00095A  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5228  00095C  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5229  000960  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5230  000964  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5231  000968  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5232  00096C  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5233  000970  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5234  000974  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5235  000978  0100               	movlb	0	; () banked
  5236  00097A  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5237  00097C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5238  000980  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5239  000984  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5240  000988  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5244  00098C  C07D  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5248  000990  0100               	movlb	0	; () banked
  5249  000992  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5250  000994  D003               	goto	l494
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5254  000996  010F               	movlb	15	; () banked
  5255  000998  810D               	bsf	13,0,b	;volatile
  5256  00099A  D002               	goto	l495
  5257  00099C                     l494:
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;inc\CANlib.h: 968: else
  5261                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5262  00099C  010F               	movlb	15	; () banked
  5263  00099E  910D               	bcf	13,0,b	;volatile
  5264  0009A0                     l495:
  5265                           
  5266                           ; BSR set to: 15
  5267                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5268  0009A0  0100               	movlb	0	; () banked
  5269  0009A2  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5270  0009A4  D003               	goto	l496
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5274  0009A6  010F               	movlb	15	; () banked
  5275  0009A8  830D               	bsf	13,1,b	;volatile
  5276  0009AA  D002               	goto	l497
  5277  0009AC                     l496:
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;inc\CANlib.h: 973: else
  5281                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5282  0009AC  010F               	movlb	15	; () banked
  5283  0009AE  930D               	bcf	13,1,b	;volatile
  5284  0009B0                     l497:
  5285                           
  5286                           ; BSR set to: 15
  5287                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5288  0009B0  0100               	movlb	0	; () banked
  5289  0009B2  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5290  0009B4  D003               	goto	l498
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5294  0009B6  010F               	movlb	15	; () banked
  5295  0009B8  8B0D               	bsf	13,5,b	;volatile
  5296  0009BA  D002               	goto	l499
  5297  0009BC                     l498:
  5298                           
  5299                           ; BSR set to: 0
  5300                           ;inc\CANlib.h: 978: else
  5301                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5302  0009BC  010F               	movlb	15	; () banked
  5303  0009BE  9B0D               	bcf	13,5,b	;volatile
  5304  0009C0                     l499:
  5305                           
  5306                           ; BSR set to: 15
  5307                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5308  0009C0  0100               	movlb	0	; () banked
  5309  0009C2  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5310  0009C4  D003               	goto	l500
  5311                           
  5312                           ; BSR set to: 0
  5313                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5314  0009C6  010F               	movlb	15	; () banked
  5315  0009C8  8D0D               	bsf	13,6,b	;volatile
  5316  0009CA  D002               	goto	l501
  5317  0009CC                     l500:
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;inc\CANlib.h: 983: else
  5321                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5322  0009CC  010F               	movlb	15	; () banked
  5323  0009CE  9D0D               	bcf	13,6,b	;volatile
  5324  0009D0                     l501:
  5325                           
  5326                           ; BSR set to: 15
  5327                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5328  0009D0  0100               	movlb	0	; () banked
  5329  0009D2  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5330  0009D4  D003               	goto	l502
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5334  0009D6  010F               	movlb	15	; () banked
  5335  0009D8  8F0D               	bsf	13,7,b	;volatile
  5336  0009DA  D002               	goto	l2845
  5337  0009DC                     l502:
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;inc\CANlib.h: 988: else
  5341                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5342  0009DC  010F               	movlb	15	; () banked
  5343  0009DE  9F0D               	bcf	13,7,b	;volatile
  5344  0009E0                     l2845:
  5345                           
  5346                           ; BSR set to: 15
  5347                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5348  0009E0  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5349  0009E4  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5350  0009E8  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5351  0009EC  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5352  0009F0  0E16               	movlw	22
  5353  0009F2  D006               	goto	u2870
  5354  0009F4                     u2875:
  5355  0009F4  0100               	movlb	0	; () banked
  5356  0009F6  90D8               	bcf	status,0,c
  5357  0009F8  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5358  0009FA  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5359  0009FC  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5360  0009FE  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5361  000A00                     u2870:
  5362  000A00  2EE8               	decfsz	wreg,f,c
  5363  000A02  D7F8               	goto	u2875
  5364  000A04  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5365  000A08  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5366  000A0C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5367  000A10  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5371  000A14  0100               	movlb	0	; () banked
  5372  000A16  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5373  000A18  0100               	movlb	0	; () banked
  5374  000A1A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5375  000A1C  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5376  000A1E  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5377  000A20  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5381  000A22  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5382  000A26                     l2851:
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;inc\CANlib.h: 994: }
  5386                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5387  000A26  0E04               	movlw	4
  5388  000A28  0100               	movlb	0	; () banked
  5389  000A2A  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5390  000A2C  A4D8               	btfss	status,2,c
  5391  000A2E  D089               	goto	l2885
  5392                           
  5393                           ; BSR set to: 0
  5394  000A30  0EF7               	movlw	247
  5395  000A32  0100               	movlb	0	; () banked
  5396  000A34  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5397  000A36  A4D8               	btfss	status,2,c
  5398  000A38  D084               	goto	l2885
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;inc\CANlib.h: 997: {
  5402                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5403  000A3A  010F               	movlb	15	; () banked
  5404  000A3C  8711               	bsf	17,3,b	;volatile
  5405                           
  5406                           ; BSR set to: 15
  5407                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5408  000A3E  0100               	movlb	0	; () banked
  5409  000A40  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5410  000A42  0100               	movlb	0	; () banked
  5411  000A44  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5412  000A46  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5413  000A48  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5414  000A4A  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5418  000A4C  C07D  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5422  000A50  0E00               	movlw	0
  5423  000A52  0100               	movlb	0	; () banked
  5424  000A54  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5425  000A56  0100               	movlb	0	; () banked
  5426  000A58  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5427  000A5A  0EFF               	movlw	255
  5428  000A5C  0100               	movlb	0	; () banked
  5429  000A5E  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5430  000A60  0100               	movlb	0	; () banked
  5431  000A62  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5432  000A64  0E00               	movlw	0
  5433  000A66  0100               	movlb	0	; () banked
  5434  000A68  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5435  000A6A  0100               	movlb	0	; () banked
  5436  000A6C  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5437  000A6E  0E00               	movlw	0
  5438  000A70  0100               	movlb	0	; () banked
  5439  000A72  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5440  000A74  0100               	movlb	0	; () banked
  5441  000A76  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5445  000A78  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5446  000A7C  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5447  000A80  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5448  000A84  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5449  000A88  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5450  000A8C  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5451  000A90  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5452  000A94  0100               	movlb	0	; () banked
  5453  000A96  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5454  000A98  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5455  000A9C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5456  000AA0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5457  000AA4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5461  000AA8  C07D  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5465  000AAC  0100               	movlb	0	; () banked
  5466  000AAE  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5467  000AB0  D003               	goto	l505
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5471  000AB2  010F               	movlb	15	; () banked
  5472  000AB4  8111               	bsf	17,0,b	;volatile
  5473  000AB6  D002               	goto	l506
  5474  000AB8                     l505:
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;inc\CANlib.h: 1009: else
  5478                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5479  000AB8  010F               	movlb	15	; () banked
  5480  000ABA  9111               	bcf	17,0,b	;volatile
  5481  000ABC                     l506:
  5482                           
  5483                           ; BSR set to: 15
  5484                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5485  000ABC  0100               	movlb	0	; () banked
  5486  000ABE  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5487  000AC0  D003               	goto	l507
  5488                           
  5489                           ; BSR set to: 0
  5490                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5491  000AC2  010F               	movlb	15	; () banked
  5492  000AC4  8311               	bsf	17,1,b	;volatile
  5493  000AC6  D002               	goto	l508
  5494  000AC8                     l507:
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;inc\CANlib.h: 1014: else
  5498                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5499  000AC8  010F               	movlb	15	; () banked
  5500  000ACA  9311               	bcf	17,1,b	;volatile
  5501  000ACC                     l508:
  5502                           
  5503                           ; BSR set to: 15
  5504                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5505  000ACC  0100               	movlb	0	; () banked
  5506  000ACE  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5507  000AD0  D003               	goto	l509
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5511  000AD2  010F               	movlb	15	; () banked
  5512  000AD4  8B11               	bsf	17,5,b	;volatile
  5513  000AD6  D002               	goto	l510
  5514  000AD8                     l509:
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;inc\CANlib.h: 1019: else
  5518                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5519  000AD8  010F               	movlb	15	; () banked
  5520  000ADA  9B11               	bcf	17,5,b	;volatile
  5521  000ADC                     l510:
  5522                           
  5523                           ; BSR set to: 15
  5524                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5525  000ADC  0100               	movlb	0	; () banked
  5526  000ADE  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5527  000AE0  D003               	goto	l511
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5531  000AE2  010F               	movlb	15	; () banked
  5532  000AE4  8D11               	bsf	17,6,b	;volatile
  5533  000AE6  D002               	goto	l512
  5534  000AE8                     l511:
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;inc\CANlib.h: 1024: else
  5538                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5539  000AE8  010F               	movlb	15	; () banked
  5540  000AEA  9D11               	bcf	17,6,b	;volatile
  5541  000AEC                     l512:
  5542                           
  5543                           ; BSR set to: 15
  5544                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5545  000AEC  0100               	movlb	0	; () banked
  5546  000AEE  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5547  000AF0  D003               	goto	l513
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5551  000AF2  010F               	movlb	15	; () banked
  5552  000AF4  8F11               	bsf	17,7,b	;volatile
  5553  000AF6  D002               	goto	l2879
  5554  000AF8                     l513:
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;inc\CANlib.h: 1029: else
  5558                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5559  000AF8  010F               	movlb	15	; () banked
  5560  000AFA  9F11               	bcf	17,7,b	;volatile
  5561  000AFC                     l2879:
  5562                           
  5563                           ; BSR set to: 15
  5564                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5565  000AFC  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5566  000B00  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5567  000B04  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5568  000B08  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5569  000B0C  0E16               	movlw	22
  5570  000B0E  D006               	goto	u2950
  5571  000B10                     u2955:
  5572  000B10  0100               	movlb	0	; () banked
  5573  000B12  90D8               	bcf	status,0,c
  5574  000B14  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5575  000B16  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5576  000B18  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5577  000B1A  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5578  000B1C                     u2950:
  5579  000B1C  2EE8               	decfsz	wreg,f,c
  5580  000B1E  D7F8               	goto	u2955
  5581  000B20  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5582  000B24  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5583  000B28  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5584  000B2C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5588  000B30  0100               	movlb	0	; () banked
  5589  000B32  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5590  000B34  0100               	movlb	0	; () banked
  5591  000B36  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5592  000B38  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5593  000B3A  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5594  000B3C  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5598  000B3E  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5599  000B42                     l2885:
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;inc\CANlib.h: 1035: }
  5603                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5604  000B42  0E05               	movlw	5
  5605  000B44  0100               	movlb	0	; () banked
  5606  000B46  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5607  000B48  A4D8               	btfss	status,2,c
  5608  000B4A  0012               	return	
  5609                           
  5610                           ; BSR set to: 0
  5611  000B4C  0EF7               	movlw	247
  5612  000B4E  0100               	movlb	0	; () banked
  5613  000B50  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5614  000B52  A4D8               	btfss	status,2,c
  5615  000B54  0012               	return	
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;inc\CANlib.h: 1038: {
  5619                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5620  000B56  010F               	movlb	15	; () banked
  5621  000B58  8715               	bsf	21,3,b	;volatile
  5622                           
  5623                           ; BSR set to: 15
  5624                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5625  000B5A  0100               	movlb	0	; () banked
  5626  000B5C  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5627  000B5E  0100               	movlb	0	; () banked
  5628  000B60  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5629  000B62  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5630  000B64  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5631  000B66  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5635  000B68  C07D  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5636                           
  5637                           ; BSR set to: 0
  5638                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5639  000B6C  0E00               	movlw	0
  5640  000B6E  0100               	movlb	0	; () banked
  5641  000B70  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5642  000B72  0100               	movlb	0	; () banked
  5643  000B74  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5644  000B76  0EFF               	movlw	255
  5645  000B78  0100               	movlb	0	; () banked
  5646  000B7A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5647  000B7C  0100               	movlb	0	; () banked
  5648  000B7E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5649  000B80  0E00               	movlw	0
  5650  000B82  0100               	movlb	0	; () banked
  5651  000B84  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5652  000B86  0100               	movlb	0	; () banked
  5653  000B88  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5654  000B8A  0E00               	movlw	0
  5655  000B8C  0100               	movlb	0	; () banked
  5656  000B8E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5657  000B90  0100               	movlb	0	; () banked
  5658  000B92  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5662  000B94  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5663  000B98  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5664  000B9C  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5665  000BA0  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5666  000BA4  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5667  000BA8  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5668  000BAC  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5669  000BB0  0100               	movlb	0	; () banked
  5670  000BB2  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5671  000BB4  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5672  000BB8  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5673  000BBC  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5674  000BC0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5678  000BC4  C07D  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5682  000BC8  0100               	movlb	0	; () banked
  5683  000BCA  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5684  000BCC  D003               	goto	l516
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5688  000BCE  010F               	movlb	15	; () banked
  5689  000BD0  8115               	bsf	21,0,b	;volatile
  5690  000BD2  D002               	goto	l517
  5691  000BD4                     l516:
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;inc\CANlib.h: 1050: else
  5695                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5696  000BD4  010F               	movlb	15	; () banked
  5697  000BD6  9115               	bcf	21,0,b	;volatile
  5698  000BD8                     l517:
  5699                           
  5700                           ; BSR set to: 15
  5701                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5702  000BD8  0100               	movlb	0	; () banked
  5703  000BDA  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5704  000BDC  D003               	goto	l518
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5708  000BDE  010F               	movlb	15	; () banked
  5709  000BE0  8315               	bsf	21,1,b	;volatile
  5710  000BE2  D002               	goto	l519
  5711  000BE4                     l518:
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;inc\CANlib.h: 1055: else
  5715                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5716  000BE4  010F               	movlb	15	; () banked
  5717  000BE6  9315               	bcf	21,1,b	;volatile
  5718  000BE8                     l519:
  5719                           
  5720                           ; BSR set to: 15
  5721                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5722  000BE8  0100               	movlb	0	; () banked
  5723  000BEA  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5724  000BEC  D003               	goto	l520
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5728  000BEE  010F               	movlb	15	; () banked
  5729  000BF0  8B15               	bsf	21,5,b	;volatile
  5730  000BF2  D002               	goto	l521
  5731  000BF4                     l520:
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;inc\CANlib.h: 1060: else
  5735                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5736  000BF4  010F               	movlb	15	; () banked
  5737  000BF6  9B15               	bcf	21,5,b	;volatile
  5738  000BF8                     l521:
  5739                           
  5740                           ; BSR set to: 15
  5741                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5742  000BF8  0100               	movlb	0	; () banked
  5743  000BFA  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5744  000BFC  D003               	goto	l522
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5748  000BFE  010F               	movlb	15	; () banked
  5749  000C00  8D15               	bsf	21,6,b	;volatile
  5750  000C02  D002               	goto	l523
  5751  000C04                     l522:
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;inc\CANlib.h: 1065: else
  5755                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5756  000C04  010F               	movlb	15	; () banked
  5757  000C06  9D15               	bcf	21,6,b	;volatile
  5758  000C08                     l523:
  5759                           
  5760                           ; BSR set to: 15
  5761                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5762  000C08  0100               	movlb	0	; () banked
  5763  000C0A  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5764  000C0C  D003               	goto	l524
  5765                           
  5766                           ; BSR set to: 0
  5767                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5768  000C0E  010F               	movlb	15	; () banked
  5769  000C10  8F15               	bsf	21,7,b	;volatile
  5770  000C12  D002               	goto	l2913
  5771  000C14                     l524:
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;inc\CANlib.h: 1070: else
  5775                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5776  000C14  010F               	movlb	15	; () banked
  5777  000C16  9F15               	bcf	21,7,b	;volatile
  5778  000C18                     l2913:
  5779                           
  5780                           ; BSR set to: 15
  5781                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5782  000C18  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5783  000C1C  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5784  000C20  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5785  000C24  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5786  000C28  0E16               	movlw	22
  5787  000C2A  D006               	goto	u3030
  5788  000C2C                     u3035:
  5789  000C2C  0100               	movlb	0	; () banked
  5790  000C2E  90D8               	bcf	status,0,c
  5791  000C30  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5792  000C32  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5793  000C34  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5794  000C36  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5795  000C38                     u3030:
  5796  000C38  2EE8               	decfsz	wreg,f,c
  5797  000C3A  D7F8               	goto	u3035
  5798  000C3C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5799  000C40  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5800  000C44  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5801  000C48  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5802                           
  5803                           ; BSR set to: 0
  5804                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5805  000C4C  0100               	movlb	0	; () banked
  5806  000C4E  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5807  000C50  0100               	movlb	0	; () banked
  5808  000C52  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5809  000C54  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5810  000C56  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5811  000C58  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5815  000C5A  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5816  000C5E  0012               	return	
  5817  000C60                     __end_of_CANSetFilter:
  5818                           	opt stack 0
  5819                           tblptru	equ	0xFF8
  5820                           tblptrh	equ	0xFF7
  5821                           tblptrl	equ	0xFF6
  5822                           tablat	equ	0xFF5
  5823                           intcon	equ	0xFF2
  5824                           intcon2	equ	0xFF1
  5825                           postinc0	equ	0xFEE
  5826                           wreg	equ	0xFE8
  5827                           postdec1	equ	0xFE5
  5828                           fsr1l	equ	0xFE1
  5829                           indf2	equ	0xFDF
  5830                           fsr2h	equ	0xFDA
  5831                           fsr2l	equ	0xFD9
  5832                           status	equ	0xFD8
  5833                           
  5834 ;; *************** function _CANOperationMode *****************
  5835 ;; Defined at:
  5836 ;;		line 206 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;  mode            1    wreg     enum E16838
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;  mode            1   19[BANK0 ] enum E16838
  5841 ;; Return value:  Size  Location     Type
  5842 ;;		None               void
  5843 ;; Registers used:
  5844 ;;		wreg, status,2, status,0
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5850 ;;      Params:         0       0       0       0
  5851 ;;      Locals:         0       1       0       0
  5852 ;;      Temps:          0       0       0       0
  5853 ;;      Totals:         0       1       0       0
  5854 ;;Total ram usage:        1 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; Hardware stack levels required when called:    4
  5857 ;; This function calls:
  5858 ;;		Nothing
  5859 ;; This function is called by:
  5860 ;;		_CANInitialize
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text9
  5865  002452                     __ptext9:
  5866                           	opt stack 0
  5867  002452                     _CANOperationMode:
  5868                           	opt stack 24
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;incstack = 0
  5872                           ;CANOperationMode@mode stored from wreg
  5873  002452  0100               	movlb	0	; () banked
  5874  002454  6F73               	movwf	CANOperationMode@mode& (0+255),b
  5875                           
  5876                           ;inc\CANlib.h: 208: CANCON = mode;
  5877  002456  C073  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5878  00245A                     l2509:
  5879  00245A  506E               	movf	3950,w,c	;volatile
  5880  00245C  0BE0               	andlw	224
  5881  00245E  0100               	movlb	0	; () banked
  5882  002460  1973               	xorwf	CANOperationMode@mode& (0+255),w,b
  5883  002462  B4D8               	btfsc	status,2,c
  5884  002464  0012               	return	
  5885  002466  D7F9               	goto	l2509
  5886  002468                     __end_of_CANOperationMode:
  5887                           	opt stack 0
  5888                           tblptru	equ	0xFF8
  5889                           tblptrh	equ	0xFF7
  5890                           tblptrl	equ	0xFF6
  5891                           tablat	equ	0xFF5
  5892                           intcon	equ	0xFF2
  5893                           intcon2	equ	0xFF1
  5894                           postinc0	equ	0xFEE
  5895                           wreg	equ	0xFE8
  5896                           postdec1	equ	0xFE5
  5897                           fsr1l	equ	0xFE1
  5898                           indf2	equ	0xFDF
  5899                           fsr2h	equ	0xFDA
  5900                           fsr2l	equ	0xFD9
  5901                           status	equ	0xFD8
  5902                           
  5903 ;; *************** function _calibrazione *****************
  5904 ;; Defined at:
  5905 ;;		line 174 in file "newmain.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;		None
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;		None
  5910 ;; Return value:  Size  Location     Type
  5911 ;;		None               void
  5912 ;; Registers used:
  5913 ;;		wreg, status,2, status,0, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5919 ;;      Params:         0       0       0       0
  5920 ;;      Locals:         0       0       0       0
  5921 ;;      Temps:          0       0       0       0
  5922 ;;      Totals:         0       0       0       0
  5923 ;;Total ram usage:        0 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    5
  5926 ;; This function calls:
  5927 ;;		_BusyADC
  5928 ;;		_ConvertADC
  5929 ;;		_ReadADC
  5930 ;;		___lwdiv
  5931 ;; This function is called by:
  5932 ;;		_main
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text10
  5937  002384                     __ptext10:
  5938                           	opt stack 0
  5939  002384                     _calibrazione:
  5940                           	opt stack 25
  5941                           
  5942                           ;newmain.c: 175: ConvertADC();
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;incstack = 0
  5946  002384  EC67  F012         	call	_ConvertADC	;wreg free
  5947  002388                     l3485:
  5948  002388  EC51  F012         	call	_BusyADC	;wreg free
  5949  00238C  0900               	iorlw	0
  5950  00238E  A4D8               	btfss	status,2,c
  5951  002390  D7FB               	goto	l3485
  5952                           
  5953                           ;newmain.c: 177: ADCResult = ReadADC();
  5954  002392  EC3F  F012         	call	_ReadADC	;wreg free
  5955  002396  C073  F0B1         	movff	?_ReadADC,_ADCResult
  5956  00239A  C074  F0B2         	movff	?_ReadADC+1,_ADCResult+1
  5957                           
  5958                           ;newmain.c: 178: calibration = (ADCResult - 511) / 45;
  5959  00239E  0E01               	movlw	1
  5960  0023A0  0100               	movlb	0	; () banked
  5961  0023A2  25B1               	addwf	_ADCResult& (0+255),w,b
  5962  0023A4  0100               	movlb	0	; () banked
  5963  0023A6  6F73               	movwf	___lwdiv@dividend& (0+255),b
  5964  0023A8  0EFE               	movlw	254
  5965  0023AA  0100               	movlb	0	; () banked
  5966  0023AC  21B2               	addwfc	(_ADCResult+1)& (0+255),w,b
  5967  0023AE  0100               	movlb	0	; () banked
  5968  0023B0  6F74               	movwf	(___lwdiv@dividend+1)& (0+255),b
  5969  0023B2  0E00               	movlw	0
  5970  0023B4  0100               	movlb	0	; () banked
  5971  0023B6  6F76               	movwf	(___lwdiv@divisor+1)& (0+255),b
  5972  0023B8  0E2D               	movlw	45
  5973  0023BA  6F75               	movwf	___lwdiv@divisor& (0+255),b
  5974  0023BC  ECFE  F010         	call	___lwdiv	;wreg free
  5975  0023C0  C073  F00D         	movff	?___lwdiv,_calibration
  5976  0023C4  C074  F00E         	movff	?___lwdiv+1,_calibration+1
  5977  0023C8  0012               	return		;funcret
  5978  0023CA                     __end_of_calibrazione:
  5979                           	opt stack 0
  5980                           tblptru	equ	0xFF8
  5981                           tblptrh	equ	0xFF7
  5982                           tblptrl	equ	0xFF6
  5983                           tablat	equ	0xFF5
  5984                           intcon	equ	0xFF2
  5985                           intcon2	equ	0xFF1
  5986                           postinc0	equ	0xFEE
  5987                           wreg	equ	0xFE8
  5988                           postdec1	equ	0xFE5
  5989                           fsr1l	equ	0xFE1
  5990                           indf2	equ	0xFDF
  5991                           fsr2h	equ	0xFDA
  5992                           fsr2l	equ	0xFD9
  5993                           status	equ	0xFD8
  5994                           
  5995 ;; *************** function ___lwdiv *****************
  5996 ;; Defined at:
  5997 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;  dividend        2   19[BANK0 ] unsigned int 
  6000 ;;  divisor         2   21[BANK0 ] unsigned int 
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;  quotient        2   23[BANK0 ] unsigned int 
  6003 ;;  counter         1   25[BANK0 ] unsigned char 
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  2   19[BANK0 ] unsigned int 
  6006 ;; Registers used:
  6007 ;;		wreg, status,2, status,0
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6013 ;;      Params:         0       4       0       0
  6014 ;;      Locals:         0       3       0       0
  6015 ;;      Temps:          0       0       0       0
  6016 ;;      Totals:         0       7       0       0
  6017 ;;Total ram usage:        7 bytes
  6018 ;; Hardware stack levels used:    1
  6019 ;; Hardware stack levels required when called:    4
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_calibrazione
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text11
  6028  0021FC                     __ptext11:
  6029                           	opt stack 0
  6030  0021FC                     ___lwdiv:
  6031                           	opt stack 25
  6032                           
  6033                           ;incstack = 0
  6034  0021FC  0E00               	movlw	0
  6035  0021FE  0100               	movlb	0	; () banked
  6036  002200  6F78               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6037  002202  0E00               	movlw	0
  6038  002204  6F77               	movwf	___lwdiv@quotient& (0+255),b
  6039                           
  6040                           ; BSR set to: 0
  6041  002206  0100               	movlb	0	; () banked
  6042  002208  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6043  00220A  0100               	movlb	0	; () banked
  6044  00220C  1176               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6045  00220E  B4D8               	btfsc	status,2,c
  6046  002210  D02C               	goto	l1112
  6047                           
  6048                           ; BSR set to: 0
  6049  002212  0E01               	movlw	1
  6050  002214  0100               	movlb	0	; () banked
  6051  002216  6F79               	movwf	___lwdiv@counter& (0+255),b
  6052  002218  D006               	goto	l3243
  6053  00221A                     l3241:
  6054                           
  6055                           ; BSR set to: 0
  6056  00221A  0100               	movlb	0	; () banked
  6057  00221C  90D8               	bcf	status,0,c
  6058  00221E  3775               	rlcf	___lwdiv@divisor& (0+255),f,b
  6059  002220  3776               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6060  002222  0100               	movlb	0	; () banked
  6061  002224  2B79               	incf	___lwdiv@counter& (0+255),f,b
  6062  002226                     l3243:
  6063                           
  6064                           ; BSR set to: 0
  6065  002226  0100               	movlb	0	; () banked
  6066  002228  AF76               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6067  00222A  D7F7               	goto	l3241
  6068  00222C                     l3245:
  6069                           
  6070                           ; BSR set to: 0
  6071  00222C  0100               	movlb	0	; () banked
  6072  00222E  90D8               	bcf	status,0,c
  6073  002230  3777               	rlcf	___lwdiv@quotient& (0+255),f,b
  6074  002232  3778               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6075                           
  6076                           ; BSR set to: 0
  6077  002234  0100               	movlb	0	; () banked
  6078  002236  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6079  002238  0100               	movlb	0	; () banked
  6080  00223A  5D73               	subwf	___lwdiv@dividend& (0+255),w,b
  6081  00223C  0100               	movlb	0	; () banked
  6082  00223E  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6083  002240  0100               	movlb	0	; () banked
  6084  002242  5974               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6085  002244  A0D8               	btfss	status,0,c
  6086  002246  D00A               	goto	l3253
  6087                           
  6088                           ; BSR set to: 0
  6089  002248  0100               	movlb	0	; () banked
  6090  00224A  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6091  00224C  0100               	movlb	0	; () banked
  6092  00224E  5F73               	subwf	___lwdiv@dividend& (0+255),f,b
  6093  002250  0100               	movlb	0	; () banked
  6094  002252  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6095  002254  0100               	movlb	0	; () banked
  6096  002256  5B74               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6097                           
  6098                           ; BSR set to: 0
  6099  002258  0100               	movlb	0	; () banked
  6100  00225A  8177               	bsf	___lwdiv@quotient& (0+255),0,b
  6101  00225C                     l3253:
  6102                           
  6103                           ; BSR set to: 0
  6104  00225C  0100               	movlb	0	; () banked
  6105  00225E  90D8               	bcf	status,0,c
  6106  002260  3376               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6107  002262  3375               	rrcf	___lwdiv@divisor& (0+255),f,b
  6108                           
  6109                           ; BSR set to: 0
  6110  002264  0100               	movlb	0	; () banked
  6111  002266  2F79               	decfsz	___lwdiv@counter& (0+255),f,b
  6112  002268  D7E1               	goto	l3245
  6113  00226A                     l1112:
  6114                           
  6115                           ; BSR set to: 0
  6116  00226A  C077  F073         	movff	___lwdiv@quotient,?___lwdiv
  6117  00226E  C078  F074         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6118                           
  6119                           ; BSR set to: 0
  6120  002272  0012               	return		;funcret
  6121  002274                     __end_of___lwdiv:
  6122                           	opt stack 0
  6123                           tblptru	equ	0xFF8
  6124                           tblptrh	equ	0xFF7
  6125                           tblptrl	equ	0xFF6
  6126                           tablat	equ	0xFF5
  6127                           intcon	equ	0xFF2
  6128                           intcon2	equ	0xFF1
  6129                           postinc0	equ	0xFEE
  6130                           wreg	equ	0xFE8
  6131                           postdec1	equ	0xFE5
  6132                           fsr1l	equ	0xFE1
  6133                           indf2	equ	0xFDF
  6134                           fsr2h	equ	0xFDA
  6135                           fsr2l	equ	0xFD9
  6136                           status	equ	0xFD8
  6137                           
  6138 ;; *************** function _ReadADC *****************
  6139 ;; Defined at:
  6140 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcread.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;		None
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;		None
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  2   19[BANK0 ] int 
  6147 ;; Registers used:
  6148 ;;		wreg, status,2
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6154 ;;      Params:         0       2       0       0
  6155 ;;      Locals:         0       0       0       0
  6156 ;;      Temps:          0       2       0       0
  6157 ;;      Totals:         0       4       0       0
  6158 ;;Total ram usage:        4 bytes
  6159 ;; Hardware stack levels used:    1
  6160 ;; Hardware stack levels required when called:    4
  6161 ;; This function calls:
  6162 ;;		Nothing
  6163 ;; This function is called by:
  6164 ;;		_calibrazione
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	text12
  6169  00247E                     __ptext12:
  6170                           	opt stack 0
  6171  00247E                     _ReadADC:
  6172                           	opt stack 25
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;incstack = 0
  6176  00247E  50C4               	movf	4036,w,c	;volatile
  6177  002480  0100               	movlb	0	; () banked
  6178  002482  6F75               	movwf	??_ReadADC& (0+255),b
  6179  002484  50C3               	movf	4035,w,c	;volatile
  6180  002486  0100               	movlb	0	; () banked
  6181  002488  6F73               	movwf	?_ReadADC& (0+255),b
  6182  00248A  C075  F074         	movff	??_ReadADC,?_ReadADC+1
  6183  00248E  0012               	return	
  6184  002490                     __end_of_ReadADC:
  6185                           	opt stack 0
  6186                           tblptru	equ	0xFF8
  6187                           tblptrh	equ	0xFF7
  6188                           tblptrl	equ	0xFF6
  6189                           tablat	equ	0xFF5
  6190                           intcon	equ	0xFF2
  6191                           intcon2	equ	0xFF1
  6192                           postinc0	equ	0xFEE
  6193                           wreg	equ	0xFE8
  6194                           postdec1	equ	0xFE5
  6195                           fsr1l	equ	0xFE1
  6196                           indf2	equ	0xFDF
  6197                           fsr2h	equ	0xFDA
  6198                           fsr2l	equ	0xFD9
  6199                           status	equ	0xFD8
  6200                           
  6201 ;; *************** function _ConvertADC *****************
  6202 ;; Defined at:
  6203 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcconv.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;		None
  6206 ;; Auto vars:     Size  Location     Type
  6207 ;;		None
  6208 ;; Return value:  Size  Location     Type
  6209 ;;		None               void
  6210 ;; Registers used:
  6211 ;;		None
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6217 ;;      Params:         0       0       0       0
  6218 ;;      Locals:         0       0       0       0
  6219 ;;      Temps:          0       0       0       0
  6220 ;;      Totals:         0       0       0       0
  6221 ;;Total ram usage:        0 bytes
  6222 ;; Hardware stack levels used:    1
  6223 ;; Hardware stack levels required when called:    4
  6224 ;; This function calls:
  6225 ;;		Nothing
  6226 ;; This function is called by:
  6227 ;;		_calibrazione
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           	psect	text13
  6232  0024CE                     __ptext13:
  6233                           	opt stack 0
  6234  0024CE                     _ConvertADC:
  6235                           	opt stack 25
  6236                           
  6237                           ; BSR set to: 0
  6238                           ;incstack = 0
  6239  0024CE  82C2               	bsf	4034,1,c	;volatile
  6240  0024D0  0012               	return		;funcret
  6241  0024D2                     __end_of_ConvertADC:
  6242                           	opt stack 0
  6243                           tblptru	equ	0xFF8
  6244                           tblptrh	equ	0xFF7
  6245                           tblptrl	equ	0xFF6
  6246                           tablat	equ	0xFF5
  6247                           intcon	equ	0xFF2
  6248                           intcon2	equ	0xFF1
  6249                           postinc0	equ	0xFEE
  6250                           wreg	equ	0xFE8
  6251                           postdec1	equ	0xFE5
  6252                           fsr1l	equ	0xFE1
  6253                           indf2	equ	0xFDF
  6254                           fsr2h	equ	0xFDA
  6255                           fsr2l	equ	0xFD9
  6256                           status	equ	0xFD8
  6257                           
  6258 ;; *************** function _BusyADC *****************
  6259 ;; Defined at:
  6260 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcbusy.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;		None
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;		None
  6265 ;; Return value:  Size  Location     Type
  6266 ;;                  1    wreg      unsigned char 
  6267 ;; Registers used:
  6268 ;;		wreg
  6269 ;; Tracked objects:
  6270 ;;		On entry : 0/0
  6271 ;;		On exit  : 0/0
  6272 ;;		Unchanged: 0/0
  6273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6274 ;;      Params:         0       0       0       0
  6275 ;;      Locals:         0       0       0       0
  6276 ;;      Temps:          0       0       0       0
  6277 ;;      Totals:         0       0       0       0
  6278 ;;Total ram usage:        0 bytes
  6279 ;; Hardware stack levels used:    1
  6280 ;; Hardware stack levels required when called:    4
  6281 ;; This function calls:
  6282 ;;		Nothing
  6283 ;; This function is called by:
  6284 ;;		_calibrazione
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           	psect	text14
  6289  0024A2                     __ptext14:
  6290                           	opt stack 0
  6291  0024A2                     _BusyADC:
  6292                           	opt stack 25
  6293                           
  6294                           ;incstack = 0
  6295  0024A2  A2C2               	btfss	4034,1,c	;volatile
  6296  0024A4  D002               	goto	u3500
  6297  0024A6  0E01               	movlw	1
  6298  0024A8  0012               	return	
  6299  0024AA                     u3500:
  6300  0024AA  0E00               	movlw	0
  6301  0024AC  0012               	return	
  6302  0024AE                     __end_of_BusyADC:
  6303                           	opt stack 0
  6304                           tblptru	equ	0xFF8
  6305                           tblptrh	equ	0xFF7
  6306                           tblptrl	equ	0xFF6
  6307                           tablat	equ	0xFF5
  6308                           intcon	equ	0xFF2
  6309                           intcon2	equ	0xFF1
  6310                           postinc0	equ	0xFEE
  6311                           wreg	equ	0xFE8
  6312                           postdec1	equ	0xFE5
  6313                           fsr1l	equ	0xFE1
  6314                           indf2	equ	0xFDF
  6315                           fsr2h	equ	0xFDA
  6316                           fsr2l	equ	0xFD9
  6317                           status	equ	0xFD8
  6318                           
  6319 ;; *************** function ___lmul *****************
  6320 ;; Defined at:
  6321 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  multiplier      4   19[BANK0 ] unsigned long 
  6324 ;;  multiplicand    4   23[BANK0 ] unsigned long 
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;  product         4   27[BANK0 ] unsigned long 
  6327 ;; Return value:  Size  Location     Type
  6328 ;;                  4   19[BANK0 ] unsigned long 
  6329 ;; Registers used:
  6330 ;;		wreg, status,2, status,0
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6336 ;;      Params:         0       8       0       0
  6337 ;;      Locals:         0       4       0       0
  6338 ;;      Temps:          0       0       0       0
  6339 ;;      Totals:         0      12       0       0
  6340 ;;Total ram usage:       12 bytes
  6341 ;; Hardware stack levels used:    1
  6342 ;; Hardware stack levels required when called:    4
  6343 ;; This function calls:
  6344 ;;		Nothing
  6345 ;; This function is called by:
  6346 ;;		_main
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text15
  6351  002274                     __ptext15:
  6352                           	opt stack 0
  6353  002274                     ___lmul:
  6354                           	opt stack 26
  6355                           
  6356                           ;incstack = 0
  6357  002274  0E00               	movlw	0
  6358  002276  0100               	movlb	0	; () banked
  6359  002278  6F7B               	movwf	___lmul@product& (0+255),b
  6360  00227A  0E00               	movlw	0
  6361  00227C  6F7C               	movwf	(___lmul@product+1)& (0+255),b
  6362  00227E  0E00               	movlw	0
  6363  002280  6F7D               	movwf	(___lmul@product+2)& (0+255),b
  6364  002282  0E00               	movlw	0
  6365  002284  6F7E               	movwf	(___lmul@product+3)& (0+255),b
  6366  002286                     l3507:
  6367                           
  6368                           ; BSR set to: 0
  6369  002286  0100               	movlb	0	; () banked
  6370  002288  A173               	btfss	___lmul@multiplier& (0+255),0,b
  6371  00228A  D010               	goto	l3511
  6372                           
  6373                           ; BSR set to: 0
  6374  00228C  0100               	movlb	0	; () banked
  6375  00228E  5177               	movf	___lmul@multiplicand& (0+255),w,b
  6376  002290  0100               	movlb	0	; () banked
  6377  002292  277B               	addwf	___lmul@product& (0+255),f,b
  6378  002294  0100               	movlb	0	; () banked
  6379  002296  5178               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6380  002298  0100               	movlb	0	; () banked
  6381  00229A  237C               	addwfc	(___lmul@product+1)& (0+255),f,b
  6382  00229C  0100               	movlb	0	; () banked
  6383  00229E  5179               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6384  0022A0  0100               	movlb	0	; () banked
  6385  0022A2  237D               	addwfc	(___lmul@product+2)& (0+255),f,b
  6386  0022A4  0100               	movlb	0	; () banked
  6387  0022A6  517A               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6388  0022A8  0100               	movlb	0	; () banked
  6389  0022AA  237E               	addwfc	(___lmul@product+3)& (0+255),f,b
  6390  0022AC                     l3511:
  6391                           
  6392                           ; BSR set to: 0
  6393  0022AC  0100               	movlb	0	; () banked
  6394  0022AE  90D8               	bcf	status,0,c
  6395  0022B0  3777               	rlcf	___lmul@multiplicand& (0+255),f,b
  6396  0022B2  3778               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6397  0022B4  3779               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6398  0022B6  377A               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6399                           
  6400                           ; BSR set to: 0
  6401  0022B8  0100               	movlb	0	; () banked
  6402  0022BA  90D8               	bcf	status,0,c
  6403  0022BC  3376               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6404  0022BE  3375               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6405  0022C0  3374               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6406  0022C2  3373               	rrcf	___lmul@multiplier& (0+255),f,b
  6407  0022C4  0100               	movlb	0	; () banked
  6408  0022C6  5173               	movf	___lmul@multiplier& (0+255),w,b
  6409  0022C8  0100               	movlb	0	; () banked
  6410  0022CA  1174               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6411  0022CC  0100               	movlb	0	; () banked
  6412  0022CE  1175               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6413  0022D0  0100               	movlb	0	; () banked
  6414  0022D2  1176               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6415  0022D4  A4D8               	btfss	status,2,c
  6416  0022D6  D7D7               	goto	l3507
  6417                           
  6418                           ; BSR set to: 0
  6419  0022D8  C07B  F073         	movff	___lmul@product,?___lmul
  6420  0022DC  C07C  F074         	movff	___lmul@product+1,?___lmul+1
  6421  0022E0  C07D  F075         	movff	___lmul@product+2,?___lmul+2
  6422  0022E4  C07E  F076         	movff	___lmul@product+3,?___lmul+3
  6423                           
  6424                           ; BSR set to: 0
  6425  0022E8  0012               	return		;funcret
  6426  0022EA                     __end_of___lmul:
  6427                           	opt stack 0
  6428                           tblptru	equ	0xFF8
  6429                           tblptrh	equ	0xFF7
  6430                           tblptrl	equ	0xFF6
  6431                           tablat	equ	0xFF5
  6432                           intcon	equ	0xFF2
  6433                           intcon2	equ	0xFF1
  6434                           postinc0	equ	0xFEE
  6435                           wreg	equ	0xFE8
  6436                           postdec1	equ	0xFE5
  6437                           fsr1l	equ	0xFE1
  6438                           indf2	equ	0xFDF
  6439                           fsr2h	equ	0xFDA
  6440                           fsr2l	equ	0xFD9
  6441                           status	equ	0xFD8
  6442                           
  6443 ;; *************** function ___lldiv *****************
  6444 ;; Defined at:
  6445 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  dividend        4   31[BANK0 ] unsigned long 
  6448 ;;  divisor         4   35[BANK0 ] unsigned long 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;  quotient        4   39[BANK0 ] unsigned long 
  6451 ;;  counter         1   43[BANK0 ] unsigned char 
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  4   31[BANK0 ] unsigned long 
  6454 ;; Registers used:
  6455 ;;		wreg, status,2, status,0
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6461 ;;      Params:         0       8       0       0
  6462 ;;      Locals:         0       5       0       0
  6463 ;;      Temps:          0       0       0       0
  6464 ;;      Totals:         0      13       0       0
  6465 ;;Total ram usage:       13 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    4
  6468 ;; This function calls:
  6469 ;;		Nothing
  6470 ;; This function is called by:
  6471 ;;		_main
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           	psect	text16
  6476  001F7E                     __ptext16:
  6477                           	opt stack 0
  6478  001F7E                     ___lldiv:
  6479                           	opt stack 26
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;incstack = 0
  6483  001F7E  0E00               	movlw	0
  6484  001F80  0100               	movlb	0	; () banked
  6485  001F82  6F87               	movwf	___lldiv@quotient& (0+255),b
  6486  001F84  0E00               	movlw	0
  6487  001F86  6F88               	movwf	(___lldiv@quotient+1)& (0+255),b
  6488  001F88  0E00               	movlw	0
  6489  001F8A  6F89               	movwf	(___lldiv@quotient+2)& (0+255),b
  6490  001F8C  0E00               	movlw	0
  6491  001F8E  6F8A               	movwf	(___lldiv@quotient+3)& (0+255),b
  6492                           
  6493                           ; BSR set to: 0
  6494  001F90  0100               	movlb	0	; () banked
  6495  001F92  5183               	movf	___lldiv@divisor& (0+255),w,b
  6496  001F94  0100               	movlb	0	; () banked
  6497  001F96  1184               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6498  001F98  0100               	movlb	0	; () banked
  6499  001F9A  1185               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6500  001F9C  0100               	movlb	0	; () banked
  6501  001F9E  1186               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6502  001FA0  B4D8               	btfsc	status,2,c
  6503  001FA2  D042               	goto	l1059
  6504                           
  6505                           ; BSR set to: 0
  6506  001FA4  0E01               	movlw	1
  6507  001FA6  0100               	movlb	0	; () banked
  6508  001FA8  6F8B               	movwf	___lldiv@counter& (0+255),b
  6509  001FAA  D008               	goto	l3523
  6510  001FAC                     l3521:
  6511                           
  6512                           ; BSR set to: 0
  6513  001FAC  0100               	movlb	0	; () banked
  6514  001FAE  90D8               	bcf	status,0,c
  6515  001FB0  3783               	rlcf	___lldiv@divisor& (0+255),f,b
  6516  001FB2  3784               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6517  001FB4  3785               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6518  001FB6  3786               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6519  001FB8  0100               	movlb	0	; () banked
  6520  001FBA  2B8B               	incf	___lldiv@counter& (0+255),f,b
  6521  001FBC                     l3523:
  6522                           
  6523                           ; BSR set to: 0
  6524  001FBC  0100               	movlb	0	; () banked
  6525  001FBE  AF86               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6526  001FC0  D7F5               	goto	l3521
  6527  001FC2                     l3525:
  6528                           
  6529                           ; BSR set to: 0
  6530  001FC2  0100               	movlb	0	; () banked
  6531  001FC4  90D8               	bcf	status,0,c
  6532  001FC6  3787               	rlcf	___lldiv@quotient& (0+255),f,b
  6533  001FC8  3788               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6534  001FCA  3789               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6535  001FCC  378A               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6536                           
  6537                           ; BSR set to: 0
  6538  001FCE  0100               	movlb	0	; () banked
  6539  001FD0  5183               	movf	___lldiv@divisor& (0+255),w,b
  6540  001FD2  0100               	movlb	0	; () banked
  6541  001FD4  5D7F               	subwf	___lldiv@dividend& (0+255),w,b
  6542  001FD6  0100               	movlb	0	; () banked
  6543  001FD8  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6544  001FDA  0100               	movlb	0	; () banked
  6545  001FDC  5980               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6546  001FDE  0100               	movlb	0	; () banked
  6547  001FE0  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6548  001FE2  0100               	movlb	0	; () banked
  6549  001FE4  5981               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6550  001FE6  0100               	movlb	0	; () banked
  6551  001FE8  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6552  001FEA  0100               	movlb	0	; () banked
  6553  001FEC  5982               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6554  001FEE  A0D8               	btfss	status,0,c
  6555  001FF0  D012               	goto	l3533
  6556                           
  6557                           ; BSR set to: 0
  6558  001FF2  0100               	movlb	0	; () banked
  6559  001FF4  5183               	movf	___lldiv@divisor& (0+255),w,b
  6560  001FF6  0100               	movlb	0	; () banked
  6561  001FF8  5F7F               	subwf	___lldiv@dividend& (0+255),f,b
  6562  001FFA  0100               	movlb	0	; () banked
  6563  001FFC  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6564  001FFE  0100               	movlb	0	; () banked
  6565  002000  5B80               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6566  002002  0100               	movlb	0	; () banked
  6567  002004  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6568  002006  0100               	movlb	0	; () banked
  6569  002008  5B81               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6570  00200A  0100               	movlb	0	; () banked
  6571  00200C  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6572  00200E  0100               	movlb	0	; () banked
  6573  002010  5B82               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6574                           
  6575                           ; BSR set to: 0
  6576  002012  0100               	movlb	0	; () banked
  6577  002014  8187               	bsf	___lldiv@quotient& (0+255),0,b
  6578  002016                     l3533:
  6579                           
  6580                           ; BSR set to: 0
  6581  002016  0100               	movlb	0	; () banked
  6582  002018  90D8               	bcf	status,0,c
  6583  00201A  3386               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6584  00201C  3385               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6585  00201E  3384               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6586  002020  3383               	rrcf	___lldiv@divisor& (0+255),f,b
  6587                           
  6588                           ; BSR set to: 0
  6589  002022  0100               	movlb	0	; () banked
  6590  002024  2F8B               	decfsz	___lldiv@counter& (0+255),f,b
  6591  002026  D7CD               	goto	l3525
  6592  002028                     l1059:
  6593                           
  6594                           ; BSR set to: 0
  6595  002028  C087  F07F         	movff	___lldiv@quotient,?___lldiv
  6596  00202C  C088  F080         	movff	___lldiv@quotient+1,?___lldiv+1
  6597  002030  C089  F081         	movff	___lldiv@quotient+2,?___lldiv+2
  6598  002034  C08A  F082         	movff	___lldiv@quotient+3,?___lldiv+3
  6599                           
  6600                           ; BSR set to: 0
  6601  002038  0012               	return		;funcret
  6602  00203A                     __end_of___lldiv:
  6603                           	opt stack 0
  6604                           tblptru	equ	0xFF8
  6605                           tblptrh	equ	0xFF7
  6606                           tblptrl	equ	0xFF6
  6607                           tablat	equ	0xFF5
  6608                           intcon	equ	0xFF2
  6609                           intcon2	equ	0xFF1
  6610                           postinc0	equ	0xFEE
  6611                           wreg	equ	0xFE8
  6612                           postdec1	equ	0xFE5
  6613                           fsr1l	equ	0xFE1
  6614                           indf2	equ	0xFDF
  6615                           fsr2h	equ	0xFDA
  6616                           fsr2l	equ	0xFD9
  6617                           status	equ	0xFD8
  6618                           
  6619 ;; *************** function _CANisTXwarningON *****************
  6620 ;; Defined at:
  6621 ;;		line 1119 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;		None
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;		None
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      unsigned char 
  6628 ;; Registers used:
  6629 ;;		wreg
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6635 ;;      Params:         0       0       0       0
  6636 ;;      Locals:         0       0       0       0
  6637 ;;      Temps:          0       0       0       0
  6638 ;;      Totals:         0       0       0       0
  6639 ;;Total ram usage:        0 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; Hardware stack levels required when called:    4
  6642 ;; This function calls:
  6643 ;;		Nothing
  6644 ;; This function is called by:
  6645 ;;		_main
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text17
  6650  0024AE                     __ptext17:
  6651                           	opt stack 0
  6652  0024AE                     _CANisTXwarningON:
  6653                           	opt stack 26
  6654                           
  6655                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;incstack = 0
  6659  0024AE  A474               	btfss	3956,2,c	;volatile
  6660  0024B0  D002               	goto	u3790
  6661  0024B2  0E01               	movlw	1
  6662  0024B4  0012               	return	
  6663  0024B6                     u3790:
  6664  0024B6  0E00               	movlw	0
  6665  0024B8  0012               	return	
  6666  0024BA                     __end_of_CANisTXwarningON:
  6667                           	opt stack 0
  6668                           tblptru	equ	0xFF8
  6669                           tblptrh	equ	0xFF7
  6670                           tblptrl	equ	0xFF6
  6671                           tablat	equ	0xFF5
  6672                           intcon	equ	0xFF2
  6673                           intcon2	equ	0xFF1
  6674                           postinc0	equ	0xFEE
  6675                           wreg	equ	0xFE8
  6676                           postdec1	equ	0xFE5
  6677                           fsr1l	equ	0xFE1
  6678                           indf2	equ	0xFDF
  6679                           fsr2h	equ	0xFDA
  6680                           fsr2l	equ	0xFD9
  6681                           status	equ	0xFD8
  6682                           
  6683 ;; *************** function _CANisRXwarningON *****************
  6684 ;; Defined at:
  6685 ;;		line 1127 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;		None
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  1    wreg      unsigned char 
  6692 ;; Registers used:
  6693 ;;		wreg
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6699 ;;      Params:         0       0       0       0
  6700 ;;      Locals:         0       0       0       0
  6701 ;;      Temps:          0       0       0       0
  6702 ;;      Totals:         0       0       0       0
  6703 ;;Total ram usage:        0 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:    4
  6706 ;; This function calls:
  6707 ;;		Nothing
  6708 ;; This function is called by:
  6709 ;;		_main
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           	psect	text18
  6714  0024BA                     __ptext18:
  6715                           	opt stack 0
  6716  0024BA                     _CANisRXwarningON:
  6717                           	opt stack 26
  6718                           
  6719                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  6720                           
  6721                           ;incstack = 0
  6722  0024BA  A274               	btfss	3956,1,c	;volatile
  6723  0024BC  D002               	goto	u3800
  6724  0024BE  0E01               	movlw	1
  6725  0024C0  0012               	return	
  6726  0024C2                     u3800:
  6727  0024C2  0E00               	movlw	0
  6728  0024C4  0012               	return	
  6729  0024C6                     __end_of_CANisRXwarningON:
  6730                           	opt stack 0
  6731                           tblptru	equ	0xFF8
  6732                           tblptrh	equ	0xFF7
  6733                           tblptrl	equ	0xFF6
  6734                           tablat	equ	0xFF5
  6735                           intcon	equ	0xFF2
  6736                           intcon2	equ	0xFF1
  6737                           postinc0	equ	0xFEE
  6738                           wreg	equ	0xFE8
  6739                           postdec1	equ	0xFE5
  6740                           fsr1l	equ	0xFE1
  6741                           indf2	equ	0xFDF
  6742                           fsr2h	equ	0xFDA
  6743                           fsr2l	equ	0xFD9
  6744                           status	equ	0xFD8
  6745                           
  6746 ;; *************** function _ISR_bassa *****************
  6747 ;; Defined at:
  6748 ;;		line 93 in file "newmain.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;		None
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;		None
  6753 ;; Return value:  Size  Location     Type
  6754 ;;		None               void
  6755 ;; Registers used:
  6756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6762 ;;      Params:         0       0       0       0
  6763 ;;      Locals:         0       0       0       0
  6764 ;;      Temps:         17       0       0       0
  6765 ;;      Totals:        17       0       0       0
  6766 ;;Total ram usage:       17 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:    3
  6769 ;; This function calls:
  6770 ;;		_CANisRxReady
  6771 ;;		_CANreceiveMessage
  6772 ;;		___wmul
  6773 ;;		i1___lwdiv
  6774 ;; This function is called by:
  6775 ;;		Interrupt level 1
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	intcodelo
  6780  000018                     __pintcodelo:
  6781                           	opt stack 0
  6782  000018                     _ISR_bassa:
  6783                           	opt stack 24
  6784                           
  6785                           ;incstack = 0
  6786  000018  804B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6787  00001A  CFD8 F032          	movff	status,??_ISR_bassa
  6788  00001E  CFE8 F033          	movff	wreg,??_ISR_bassa+1
  6789  000022  CFE0 F034          	movff	bsr,??_ISR_bassa+2
  6790  000026  CFFA F035          	movff	pclath,??_ISR_bassa+3
  6791  00002A  CFFB F036          	movff	pclatu,??_ISR_bassa+4
  6792  00002E  CFE9 F037          	movff	fsr0l,??_ISR_bassa+5
  6793  000032  CFEA F038          	movff	fsr0h,??_ISR_bassa+6
  6794  000036  CFE1 F039          	movff	fsr1l,??_ISR_bassa+7
  6795  00003A  CFE2 F03A          	movff	fsr1h,??_ISR_bassa+8
  6796  00003E  CFD9 F03B          	movff	fsr2l,??_ISR_bassa+9
  6797  000042  CFDA F03C          	movff	fsr2h,??_ISR_bassa+10
  6798  000046  CFF3 F03D          	movff	prodl,??_ISR_bassa+11
  6799  00004A  CFF4 F03E          	movff	prodh,??_ISR_bassa+12
  6800  00004E  CFF6 F03F          	movff	tblptrl,??_ISR_bassa+13
  6801  000052  CFF7 F040          	movff	tblptrh,??_ISR_bassa+14
  6802  000056  CFF8 F041          	movff	tblptru,??_ISR_bassa+15
  6803  00005A  CFF5 F042          	movff	tablat,??_ISR_bassa+16
  6804                           
  6805                           ;newmain.c: 94: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  6806  00005E  A0A4               	btfss	4004,0,c	;volatile
  6807  000060  B2A4               	btfsc	4004,1,c	;volatile
  6808  000062  D001               	goto	i1l3591
  6809  000064  D047               	goto	i1l3617
  6810  000066                     i1l3591:
  6811                           
  6812                           ;newmain.c: 95: if (CANisRxReady()) {
  6813  000066  EC34  F012         	call	_CANisRxReady	;wreg free
  6814  00006A  0900               	iorlw	0
  6815  00006C  B4D8               	btfsc	status,2,c
  6816  00006E  D040               	goto	i1l3613
  6817                           
  6818                           ;newmain.c: 96: CANreceiveMessage(&msg);
  6819  000070  0E16               	movlw	low _msg
  6820  000072  6E25               	movwf	CANreceiveMessage@msg,c
  6821  000074  0E00               	movlw	high _msg
  6822  000076  6E26               	movwf	CANreceiveMessage@msg+1,c
  6823  000078  ECF6  F009         	call	_CANreceiveMessage	;wreg free
  6824                           
  6825                           ;newmain.c: 97: if (msg.RTR == 1) {
  6826  00007C  0424               	decf	_msg+14,w,c
  6827  00007E  A4D8               	btfss	status,2,c
  6828  000080  D00D               	goto	i1l3599
  6829                           
  6830                           ;newmain.c: 98: id = msg.identifier;
  6831  000082  C016  F0A5         	movff	_msg,_id
  6832  000086  C017  F0A6         	movff	_msg+1,_id+1
  6833  00008A  C018  F0A7         	movff	_msg+2,_id+2
  6834  00008E  C019  F0A8         	movff	_msg+3,_id+3
  6835                           
  6836                           ;newmain.c: 99: remote_frame = msg.RTR;
  6837  000092  A024               	btfss	_msg+14,0,c
  6838  000094  D002               	goto	i1u404_20
  6839  000096  824A               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  6840  000098  D001               	goto	i1l3599
  6841  00009A                     i1u404_20:
  6842  00009A  924A               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  6843  00009C                     i1l3599:
  6844                           
  6845                           ;newmain.c: 100: }
  6846                           ;newmain.c: 101: if (msg.identifier == 0b10000000000000000000000000000) {
  6847  00009C  0E10               	movlw	16
  6848  00009E  1819               	xorwf	_msg+3,w,c
  6849  0000A0  1016               	iorwf	_msg,w,c
  6850  0000A2  1017               	iorwf	_msg+1,w,c
  6851  0000A4  1018               	iorwf	_msg+2,w,c
  6852  0000A6  B4D8               	btfsc	status,2,c
  6853                           
  6854                           ;newmain.c: 102: data_array[0] = theorySteering;
  6855  0000A8  C015  F0B3         	movff	_theorySteering,_data_array
  6856                           
  6857                           ;newmain.c: 104: }
  6858                           ;newmain.c: 105: if (msg.identifier == 0b00000000000000000000000000110) {
  6859  0000AC  0E06               	movlw	6
  6860  0000AE  1816               	xorwf	_msg,w,c
  6861  0000B0  1017               	iorwf	_msg+1,w,c
  6862  0000B2  1018               	iorwf	_msg+2,w,c
  6863  0000B4  1019               	iorwf	_msg+3,w,c
  6864  0000B6  A4D8               	btfss	status,2,c
  6865  0000B8  D01B               	goto	i1l3613
  6866                           
  6867                           ;newmain.c: 107: theorySteering = msg.data[0];
  6868  0000BA  C01A  F015         	movff	_msg+4,_theorySteering
  6869                           
  6870                           ;newmain.c: 108: currentSteering = theorySteering + calibration;
  6871  0000BE  5015               	movf	_theorySteering,w,c
  6872  0000C0  240D               	addwf	_calibration,w,c
  6873  0000C2  6E47               	movwf	_currentSteering,c
  6874                           
  6875                           ;newmain.c: 109: currentSteering = (limiteDx * currentSteering) / 180;
  6876  0000C4  C047  F025         	movff	_currentSteering,___wmul@multiplier
  6877  0000C8  6A26               	clrf	___wmul@multiplier+1,c
  6878  0000CA  C043  F027         	movff	_limiteDx,___wmul@multiplicand
  6879  0000CE  C044  F028         	movff	_limiteDx+1,___wmul@multiplicand+1
  6880  0000D2  EC04  F012         	call	___wmul	;wreg free
  6881  0000D6  C025  F02B         	movff	?___wmul,i1___lwdiv@dividend
  6882  0000DA  C026  F02C         	movff	?___wmul+1,i1___lwdiv@dividend+1
  6883  0000DE  0E00               	movlw	0
  6884  0000E0  6E2E               	movwf	i1___lwdiv@divisor+1,c
  6885  0000E2  0EB4               	movlw	180
  6886  0000E4  6E2D               	movwf	i1___lwdiv@divisor,c
  6887  0000E6  EC75  F011         	call	i1___lwdiv	;wreg free
  6888  0000EA  502B               	movf	?i1___lwdiv,w,c
  6889  0000EC  6E47               	movwf	_currentSteering,c
  6890                           
  6891                           ;newmain.c: 110: noChange = 1;
  6892  0000EE  804A               	bsf	_noChange/(0+8),_noChange& (0+7),c
  6893  0000F0                     i1l3613:
  6894                           
  6895                           ;newmain.c: 111: }
  6896                           ;newmain.c: 112: }
  6897                           ;newmain.c: 113: PIR3bits.RXB0IF = 0;
  6898  0000F0  90A4               	bcf	4004,0,c	;volatile
  6899                           
  6900                           ;newmain.c: 114: PIR3bits.RXB1IF = 0;
  6901  0000F2  92A4               	bcf	4004,1,c	;volatile
  6902  0000F4                     i1l3617:
  6903                           
  6904                           ;newmain.c: 115: }
  6905                           ;newmain.c: 116: if (PIR2bits.TMR3IF) {
  6906  0000F4  A2A1               	btfss	4001,1,c	;volatile
  6907  0000F6  D00B               	goto	i1l642
  6908                           
  6909                           ;newmain.c: 117: timeCounter++;
  6910  0000F8  0E01               	movlw	1
  6911  0000FA  2605               	addwf	_timeCounter,f,c
  6912  0000FC  0E00               	movlw	0
  6913  0000FE  2206               	addwfc	_timeCounter+1,f,c
  6914  000100  2207               	addwfc	_timeCounter+2,f,c
  6915  000102  2208               	addwfc	_timeCounter+3,f,c
  6916                           
  6917                           ;newmain.c: 118: TMR3H = 0x63;
  6918  000104  0E63               	movlw	99
  6919  000106  6EB3               	movwf	4019,c	;volatile
  6920                           
  6921                           ;newmain.c: 119: TMR3L = 0xC0;
  6922  000108  0EC0               	movlw	192
  6923  00010A  6EB2               	movwf	4018,c	;volatile
  6924                           
  6925                           ;newmain.c: 120: PIR2bits.TMR3IF = 0;
  6926  00010C  92A1               	bcf	4001,1,c	;volatile
  6927  00010E                     i1l642:
  6928  00010E  C042  FFF5         	movff	??_ISR_bassa+16,tablat
  6929  000112  C041  FFF8         	movff	??_ISR_bassa+15,tblptru
  6930  000116  C040  FFF7         	movff	??_ISR_bassa+14,tblptrh
  6931  00011A  C03F  FFF6         	movff	??_ISR_bassa+13,tblptrl
  6932  00011E  C03E  FFF4         	movff	??_ISR_bassa+12,prodh
  6933  000122  C03D  FFF3         	movff	??_ISR_bassa+11,prodl
  6934  000126  C03C  FFDA         	movff	??_ISR_bassa+10,fsr2h
  6935  00012A  C03B  FFD9         	movff	??_ISR_bassa+9,fsr2l
  6936  00012E  C03A  FFE2         	movff	??_ISR_bassa+8,fsr1h
  6937  000132  C039  FFE1         	movff	??_ISR_bassa+7,fsr1l
  6938  000136  C038  FFEA         	movff	??_ISR_bassa+6,fsr0h
  6939  00013A  C037  FFE9         	movff	??_ISR_bassa+5,fsr0l
  6940  00013E  C036  FFFB         	movff	??_ISR_bassa+4,pclatu
  6941  000142  C035  FFFA         	movff	??_ISR_bassa+3,pclath
  6942  000146  C034  FFE0         	movff	??_ISR_bassa+2,bsr
  6943  00014A  C033  FFE8         	movff	??_ISR_bassa+1,wreg
  6944  00014E  C032  FFD8         	movff	??_ISR_bassa,status
  6945  000152  904B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6946  000154  0010               	retfie	
  6947  000156                     __end_of_ISR_bassa:
  6948                           	opt stack 0
  6949                           pclatu	equ	0xFFB
  6950                           pclath	equ	0xFFA
  6951                           tblptru	equ	0xFF8
  6952                           tblptrh	equ	0xFF7
  6953                           tblptrl	equ	0xFF6
  6954                           tablat	equ	0xFF5
  6955                           prodh	equ	0xFF4
  6956                           prodl	equ	0xFF3
  6957                           intcon	equ	0xFF2
  6958                           intcon2	equ	0xFF1
  6959                           postinc0	equ	0xFEE
  6960                           fsr0h	equ	0xFEA
  6961                           fsr0l	equ	0xFE9
  6962                           wreg	equ	0xFE8
  6963                           postdec1	equ	0xFE5
  6964                           fsr1h	equ	0xFE2
  6965                           fsr1l	equ	0xFE1
  6966                           bsr	equ	0xFE0
  6967                           indf2	equ	0xFDF
  6968                           fsr2h	equ	0xFDA
  6969                           fsr2l	equ	0xFD9
  6970                           status	equ	0xFD8
  6971                           
  6972 ;; *************** function i1___lwdiv *****************
  6973 ;; Defined at:
  6974 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;  dividend        2    6[COMRAM] unsigned int 
  6977 ;;  divisor         2    8[COMRAM] unsigned int 
  6978 ;; Auto vars:     Size  Location     Type
  6979 ;;  __lwdiv         2   10[COMRAM] unsigned int 
  6980 ;;  __lwdiv         1   12[COMRAM] unsigned char 
  6981 ;; Return value:  Size  Location     Type
  6982 ;;                  2    6[COMRAM] unsigned int 
  6983 ;; Registers used:
  6984 ;;		wreg, status,2, status,0
  6985 ;; Tracked objects:
  6986 ;;		On entry : 0/0
  6987 ;;		On exit  : 0/0
  6988 ;;		Unchanged: 0/0
  6989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6990 ;;      Params:         4       0       0       0
  6991 ;;      Locals:         3       0       0       0
  6992 ;;      Temps:          0       0       0       0
  6993 ;;      Totals:         7       0       0       0
  6994 ;;Total ram usage:        7 bytes
  6995 ;; Hardware stack levels used:    1
  6996 ;; Hardware stack levels required when called:    2
  6997 ;; This function calls:
  6998 ;;		Nothing
  6999 ;; This function is called by:
  7000 ;;		_ISR_bassa
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           	psect	text20
  7005  0022EA                     __ptext20:
  7006                           	opt stack 0
  7007  0022EA                     i1___lwdiv:
  7008                           	opt stack 24
  7009                           
  7010                           ;incstack = 0
  7011  0022EA  0E00               	movlw	0
  7012  0022EC  6E30               	movwf	i1___lwdiv@quotient+1,c
  7013  0022EE  0E00               	movlw	0
  7014  0022F0  6E2F               	movwf	i1___lwdiv@quotient,c
  7015  0022F2  502D               	movf	i1___lwdiv@divisor,w,c
  7016  0022F4  102E               	iorwf	i1___lwdiv@divisor+1,w,c
  7017  0022F6  B4D8               	btfsc	status,2,c
  7018  0022F8  D01C               	goto	i1l1112
  7019  0022FA  0E01               	movlw	1
  7020  0022FC  6E31               	movwf	i1___lwdiv@counter,c
  7021  0022FE  D004               	goto	i1l3545
  7022  002300                     i1l3543:
  7023  002300  90D8               	bcf	status,0,c
  7024  002302  362D               	rlcf	i1___lwdiv@divisor,f,c
  7025  002304  362E               	rlcf	i1___lwdiv@divisor+1,f,c
  7026  002306  2A31               	incf	i1___lwdiv@counter,f,c
  7027  002308                     i1l3545:
  7028  002308  AE2E               	btfss	i1___lwdiv@divisor+1,7,c
  7029  00230A  D7FA               	goto	i1l3543
  7030  00230C                     i1l3547:
  7031  00230C  90D8               	bcf	status,0,c
  7032  00230E  362F               	rlcf	i1___lwdiv@quotient,f,c
  7033  002310  3630               	rlcf	i1___lwdiv@quotient+1,f,c
  7034  002312  502D               	movf	i1___lwdiv@divisor,w,c
  7035  002314  5C2B               	subwf	i1___lwdiv@dividend,w,c
  7036  002316  502E               	movf	i1___lwdiv@divisor+1,w,c
  7037  002318  582C               	subwfb	i1___lwdiv@dividend+1,w,c
  7038  00231A  A0D8               	btfss	status,0,c
  7039  00231C  D005               	goto	i1l3555
  7040  00231E  502D               	movf	i1___lwdiv@divisor,w,c
  7041  002320  5E2B               	subwf	i1___lwdiv@dividend,f,c
  7042  002322  502E               	movf	i1___lwdiv@divisor+1,w,c
  7043  002324  5A2C               	subwfb	i1___lwdiv@dividend+1,f,c
  7044  002326  802F               	bsf	i1___lwdiv@quotient,0,c
  7045  002328                     i1l3555:
  7046  002328  90D8               	bcf	status,0,c
  7047  00232A  322E               	rrcf	i1___lwdiv@divisor+1,f,c
  7048  00232C  322D               	rrcf	i1___lwdiv@divisor,f,c
  7049  00232E  2E31               	decfsz	i1___lwdiv@counter,f,c
  7050  002330  D7ED               	goto	i1l3547
  7051  002332                     i1l1112:
  7052  002332  C02F  F02B         	movff	i1___lwdiv@quotient,?i1___lwdiv
  7053  002336  C030  F02C         	movff	i1___lwdiv@quotient+1,?i1___lwdiv+1
  7054  00233A  0012               	return		;funcret
  7055  00233C                     __end_ofi1___lwdiv:
  7056                           	opt stack 0
  7057                           pclatu	equ	0xFFB
  7058                           pclath	equ	0xFFA
  7059                           tblptru	equ	0xFF8
  7060                           tblptrh	equ	0xFF7
  7061                           tblptrl	equ	0xFF6
  7062                           tablat	equ	0xFF5
  7063                           prodh	equ	0xFF4
  7064                           prodl	equ	0xFF3
  7065                           intcon	equ	0xFF2
  7066                           intcon2	equ	0xFF1
  7067                           postinc0	equ	0xFEE
  7068                           fsr0h	equ	0xFEA
  7069                           fsr0l	equ	0xFE9
  7070                           wreg	equ	0xFE8
  7071                           postdec1	equ	0xFE5
  7072                           fsr1h	equ	0xFE2
  7073                           fsr1l	equ	0xFE1
  7074                           bsr	equ	0xFE0
  7075                           indf2	equ	0xFDF
  7076                           fsr2h	equ	0xFDA
  7077                           fsr2l	equ	0xFD9
  7078                           status	equ	0xFD8
  7079                           
  7080 ;; *************** function ___wmul *****************
  7081 ;; Defined at:
  7082 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  multiplier      2    0[COMRAM] unsigned int 
  7085 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;  product         2    4[COMRAM] unsigned int 
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  2    0[COMRAM] unsigned int 
  7090 ;; Registers used:
  7091 ;;		wreg, status,2, status,0, prodl, prodh
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7097 ;;      Params:         4       0       0       0
  7098 ;;      Locals:         2       0       0       0
  7099 ;;      Temps:          0       0       0       0
  7100 ;;      Totals:         6       0       0       0
  7101 ;;Total ram usage:        6 bytes
  7102 ;; Hardware stack levels used:    1
  7103 ;; Hardware stack levels required when called:    2
  7104 ;; This function calls:
  7105 ;;		Nothing
  7106 ;; This function is called by:
  7107 ;;		_ISR_bassa
  7108 ;;		_delay_ms
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           	psect	text21
  7113  002408                     __ptext21:
  7114                           	opt stack 0
  7115  002408                     ___wmul:
  7116                           	opt stack 24
  7117                           
  7118                           ;incstack = 0
  7119  002408  5025               	movf	___wmul@multiplier,w,c
  7120  00240A  0227               	mulwf	___wmul@multiplicand,c
  7121  00240C  CFF3 F029          	movff	prodl,___wmul@product
  7122  002410  CFF4 F02A          	movff	prodh,___wmul@product+1
  7123  002414  5025               	movf	___wmul@multiplier,w,c
  7124  002416  0228               	mulwf	___wmul@multiplicand+1,c
  7125  002418  50F3               	movf	prodl,w,c
  7126  00241A  262A               	addwf	___wmul@product+1,f,c
  7127  00241C  5026               	movf	___wmul@multiplier+1,w,c
  7128  00241E  0227               	mulwf	___wmul@multiplicand,c
  7129  002420  50F3               	movf	prodl,w,c
  7130  002422  262A               	addwf	___wmul@product+1,f,c
  7131  002424  C029  F025         	movff	___wmul@product,?___wmul
  7132  002428  C02A  F026         	movff	___wmul@product+1,?___wmul+1
  7133  00242C  0012               	return	
  7134  00242E                     __end_of___wmul:
  7135                           	opt stack 0
  7136                           pclatu	equ	0xFFB
  7137                           pclath	equ	0xFFA
  7138                           tblptru	equ	0xFF8
  7139                           tblptrh	equ	0xFF7
  7140                           tblptrl	equ	0xFF6
  7141                           tablat	equ	0xFF5
  7142                           prodh	equ	0xFF4
  7143                           prodl	equ	0xFF3
  7144                           intcon	equ	0xFF2
  7145                           intcon2	equ	0xFF1
  7146                           postinc0	equ	0xFEE
  7147                           fsr0h	equ	0xFEA
  7148                           fsr0l	equ	0xFE9
  7149                           wreg	equ	0xFE8
  7150                           postdec1	equ	0xFE5
  7151                           fsr1h	equ	0xFE2
  7152                           fsr1l	equ	0xFE1
  7153                           bsr	equ	0xFE0
  7154                           indf2	equ	0xFDF
  7155                           fsr2h	equ	0xFDA
  7156                           fsr2l	equ	0xFD9
  7157                           status	equ	0xFD8
  7158                           
  7159 ;; *************** function _CANreceiveMessage *****************
  7160 ;; Defined at:
  7161 ;;		line 528 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;  msg             2    0[COMRAM] PTR struct .
  7164 ;;		 -> msg(15), 
  7165 ;; Auto vars:     Size  Location     Type
  7166 ;;  tamp            1   11[COMRAM] unsigned char 
  7167 ;;  error           1   10[COMRAM] unsigned char 
  7168 ;; Return value:  Size  Location     Type
  7169 ;;                  1    wreg      unsigned char 
  7170 ;; Registers used:
  7171 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 0/0
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7177 ;;      Params:         2       0       0       0
  7178 ;;      Locals:         2       0       0       0
  7179 ;;      Temps:          8       0       0       0
  7180 ;;      Totals:        12       0       0       0
  7181 ;;Total ram usage:       12 bytes
  7182 ;; Hardware stack levels used:    1
  7183 ;; Hardware stack levels required when called:    2
  7184 ;; This function calls:
  7185 ;;		Nothing
  7186 ;; This function is called by:
  7187 ;;		_ISR_bassa
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           	psect	text22
  7192  0013EC                     __ptext22:
  7193                           	opt stack 0
  7194  0013EC                     _CANreceiveMessage:
  7195                           	opt stack 24
  7196                           
  7197                           ;inc\CANlib.h: 530: BYTE tamp;
  7198                           ;inc\CANlib.h: 531: BYTE error = 0;
  7199                           
  7200                           ;incstack = 0
  7201  0013EC  0E00               	movlw	0
  7202  0013EE  6E2F               	movwf	CANreceiveMessage@error,c
  7203                           
  7204                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7205  0013F0  BE74               	btfsc	3956,7,c	;volatile
  7206                           
  7207                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7208  0013F2  802F               	bsf	CANreceiveMessage@error,0,c
  7209                           
  7210                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7211  0013F4  BC74               	btfsc	3956,6,c	;volatile
  7212                           
  7213                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7214  0013F6  822F               	bsf	CANreceiveMessage@error,1,c
  7215                           
  7216                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7217  0013F8  010F               	movlb	15	; () banked
  7218  0013FA  AF50               	btfss	80,7,b	;volatile
  7219  0013FC  D143               	goto	i1l408
  7220                           
  7221                           ; BSR set to: 15
  7222                           ;inc\CANlib.h: 541: {
  7223                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7224  0013FE  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7225  001402  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7226  001406  6ADE               	clrf	postinc2,c
  7227  001408  6ADE               	clrf	postinc2,c
  7228  00140A  6ADE               	clrf	postinc2,c
  7229  00140C  6ADD               	clrf	postdec2,c
  7230                           
  7231                           ; BSR set to: 15
  7232                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7233  00140E  EE20 F004          	lfsr	2,4
  7234  001412  5025               	movf	CANreceiveMessage@msg,w,c
  7235  001414  26D9               	addwf	fsr2l,f,c
  7236  001416  5026               	movf	CANreceiveMessage@msg+1,w,c
  7237  001418  22DA               	addwfc	fsr2h,f,c
  7238  00141A  CF56 FFDF          	movff	3926,indf2	;volatile
  7239                           
  7240                           ; BSR set to: 15
  7241                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7242  00141E  EE20 F005          	lfsr	2,5
  7243  001422  5025               	movf	CANreceiveMessage@msg,w,c
  7244  001424  26D9               	addwf	fsr2l,f,c
  7245  001426  5026               	movf	CANreceiveMessage@msg+1,w,c
  7246  001428  22DA               	addwfc	fsr2h,f,c
  7247  00142A  CF57 FFDF          	movff	3927,indf2	;volatile
  7248                           
  7249                           ; BSR set to: 15
  7250                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7251  00142E  EE20 F006          	lfsr	2,6
  7252  001432  5025               	movf	CANreceiveMessage@msg,w,c
  7253  001434  26D9               	addwf	fsr2l,f,c
  7254  001436  5026               	movf	CANreceiveMessage@msg+1,w,c
  7255  001438  22DA               	addwfc	fsr2h,f,c
  7256  00143A  CF58 FFDF          	movff	3928,indf2	;volatile
  7257                           
  7258                           ; BSR set to: 15
  7259                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7260  00143E  EE20 F007          	lfsr	2,7
  7261  001442  5025               	movf	CANreceiveMessage@msg,w,c
  7262  001444  26D9               	addwf	fsr2l,f,c
  7263  001446  5026               	movf	CANreceiveMessage@msg+1,w,c
  7264  001448  22DA               	addwfc	fsr2h,f,c
  7265  00144A  CF59 FFDF          	movff	3929,indf2	;volatile
  7266                           
  7267                           ; BSR set to: 15
  7268                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7269  00144E  EE20 F008          	lfsr	2,8
  7270  001452  5025               	movf	CANreceiveMessage@msg,w,c
  7271  001454  26D9               	addwf	fsr2l,f,c
  7272  001456  5026               	movf	CANreceiveMessage@msg+1,w,c
  7273  001458  22DA               	addwfc	fsr2h,f,c
  7274  00145A  CF5A FFDF          	movff	3930,indf2	;volatile
  7275                           
  7276                           ; BSR set to: 15
  7277                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7278  00145E  EE20 F009          	lfsr	2,9
  7279  001462  5025               	movf	CANreceiveMessage@msg,w,c
  7280  001464  26D9               	addwf	fsr2l,f,c
  7281  001466  5026               	movf	CANreceiveMessage@msg+1,w,c
  7282  001468  22DA               	addwfc	fsr2h,f,c
  7283  00146A  CF5B FFDF          	movff	3931,indf2	;volatile
  7284                           
  7285                           ; BSR set to: 15
  7286                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7287  00146E  EE20 F00A          	lfsr	2,10
  7288  001472  5025               	movf	CANreceiveMessage@msg,w,c
  7289  001474  26D9               	addwf	fsr2l,f,c
  7290  001476  5026               	movf	CANreceiveMessage@msg+1,w,c
  7291  001478  22DA               	addwfc	fsr2h,f,c
  7292  00147A  CF5C FFDF          	movff	3932,indf2	;volatile
  7293                           
  7294                           ; BSR set to: 15
  7295                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7296  00147E  EE20 F00B          	lfsr	2,11
  7297  001482  5025               	movf	CANreceiveMessage@msg,w,c
  7298  001484  26D9               	addwf	fsr2l,f,c
  7299  001486  5026               	movf	CANreceiveMessage@msg+1,w,c
  7300  001488  22DA               	addwfc	fsr2h,f,c
  7301  00148A  CF5D FFDF          	movff	3933,indf2	;volatile
  7302                           
  7303                           ; BSR set to: 15
  7304                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7305  00148E  EE20 F00E          	lfsr	2,14
  7306  001492  5025               	movf	CANreceiveMessage@msg,w,c
  7307  001494  26D9               	addwf	fsr2l,f,c
  7308  001496  5026               	movf	CANreceiveMessage@msg+1,w,c
  7309  001498  22DA               	addwfc	fsr2h,f,c
  7310  00149A  010F               	movlb	15	; () banked
  7311  00149C  AD55               	btfss	85,6,b	;volatile
  7312  00149E  D002               	goto	i1u358_20
  7313  0014A0  0E01               	movlw	1
  7314  0014A2  D001               	goto	i1u358_26
  7315  0014A4                     i1u358_20:
  7316  0014A4  0E00               	movlw	0
  7317  0014A6                     i1u358_26:
  7318  0014A6  6EDF               	movwf	indf2,c
  7319                           
  7320                           ; BSR set to: 15
  7321                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7322  0014A8  EE20 F00D          	lfsr	2,13
  7323  0014AC  5025               	movf	CANreceiveMessage@msg,w,c
  7324  0014AE  26D9               	addwf	fsr2l,f,c
  7325  0014B0  5026               	movf	CANreceiveMessage@msg+1,w,c
  7326  0014B2  22DA               	addwfc	fsr2h,f,c
  7327  0014B4  010F               	movlb	15	; () banked
  7328  0014B6  5155               	movf	85,w,b	;volatile
  7329  0014B8  0B0F               	andlw	15
  7330  0014BA  6EDF               	movwf	indf2,c
  7331                           
  7332                           ; BSR set to: 15
  7333                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7334  0014BC  EE20 F00C          	lfsr	2,12
  7335  0014C0  5025               	movf	CANreceiveMessage@msg,w,c
  7336  0014C2  26D9               	addwf	fsr2l,f,c
  7337  0014C4  5026               	movf	CANreceiveMessage@msg+1,w,c
  7338  0014C6  22DA               	addwfc	fsr2h,f,c
  7339  0014C8  010F               	movlb	15	; () banked
  7340  0014CA  A752               	btfss	82,3,b	;volatile
  7341  0014CC  D002               	goto	i1u359_20
  7342  0014CE  0E01               	movlw	1
  7343  0014D0  D001               	goto	i1u359_26
  7344  0014D2                     i1u359_20:
  7345  0014D2  0E00               	movlw	0
  7346  0014D4                     i1u359_26:
  7347  0014D4  6EDF               	movwf	indf2,c
  7348                           
  7349                           ; BSR set to: 15
  7350                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7351  0014D6  010F               	movlb	15	; () banked
  7352  0014D8  B752               	btfsc	82,3,b	;volatile
  7353  0014DA  D044               	goto	i1l3301
  7354                           
  7355                           ; BSR set to: 15
  7356                           ;inc\CANlib.h: 559: {
  7357                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7358  0014DC  CF51 F027          	movff	3921,??_CANreceiveMessage	;volatile
  7359  0014E0  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7360  0014E2  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7361  0014E4  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7362  0014E6  0E03               	movlw	3
  7363  0014E8                     i1u361_25:
  7364  0014E8  90D8               	bcf	status,0,c
  7365  0014EA  3627               	rlcf	??_CANreceiveMessage,f,c
  7366  0014EC  3628               	rlcf	??_CANreceiveMessage+1,f,c
  7367  0014EE  3629               	rlcf	??_CANreceiveMessage+2,f,c
  7368  0014F0  362A               	rlcf	??_CANreceiveMessage+3,f,c
  7369  0014F2  2EE8               	decfsz	wreg,f,c
  7370  0014F4  D7F9               	goto	i1u361_25
  7371  0014F6  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7372  0014FA  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7373  0014FE  C027  FFDE         	movff	??_CANreceiveMessage,postinc2
  7374  001502  C028  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7375  001506  C029  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7376  00150A  C02A  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7377                           
  7378                           ; BSR set to: 15
  7379                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7380  00150E  010F               	movlb	15	; () banked
  7381  001510  3952               	swapf	82,w,b	;volatile
  7382  001512  42E8               	rrncf	wreg,f,c
  7383  001514  0B07               	andlw	7
  7384  001516  0B07               	andlw	7
  7385  001518  6E30               	movwf	CANreceiveMessage@tamp,c
  7386                           
  7387                           ; BSR set to: 15
  7388                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7389  00151A  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7390  00151E  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7391  001522  CFDE F027          	movff	postinc2,??_CANreceiveMessage
  7392  001526  CFDE F028          	movff	postinc2,??_CANreceiveMessage+1
  7393  00152A  CFDE F029          	movff	postinc2,??_CANreceiveMessage+2
  7394  00152E  CFDE F02A          	movff	postinc2,??_CANreceiveMessage+3
  7395  001532  5030               	movf	CANreceiveMessage@tamp,w,c
  7396  001534  2427               	addwf	??_CANreceiveMessage,w,c
  7397  001536  6E2B               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7398  001538  0E00               	movlw	0
  7399  00153A  2028               	addwfc	??_CANreceiveMessage+1,w,c
  7400  00153C  6E2C               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7401  00153E  0E00               	movlw	0
  7402  001540  2029               	addwfc	??_CANreceiveMessage+2,w,c
  7403  001542  6E2D               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7404  001544  0E00               	movlw	0
  7405  001546  202A               	addwfc	??_CANreceiveMessage+3,w,c
  7406  001548  6E2E               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7407  00154A  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7408  00154E  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7409  001552  C02B  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7410  001556  C02C  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7411  00155A  C02D  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7412  00155E  C02E  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7413                           
  7414                           ;inc\CANlib.h: 563: }
  7415  001562  D08D               	goto	i1l3327
  7416  001564                     i1l3301:
  7417                           
  7418                           ; BSR set to: 15
  7419                           ;inc\CANlib.h: 564: else
  7420                           ;inc\CANlib.h: 565: {
  7421                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7422  001564  CF54 F027          	movff	3924,??_CANreceiveMessage	;volatile
  7423  001568  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7424  00156A  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7425  00156C  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7426  00156E  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7427  001572  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7428  001576  C027  FFDE         	movff	??_CANreceiveMessage,postinc2
  7429  00157A  C028  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7430  00157E  C029  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7431  001582  C02A  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7432                           
  7433                           ; BSR set to: 15
  7434                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7435  001586  CF53 F027          	movff	3923,??_CANreceiveMessage	;volatile
  7436  00158A  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7437  00158C  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7438  00158E  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7439  001590  C029  F02A         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7440  001594  C028  F029         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7441  001598  C027  F028         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7442  00159C  6A27               	clrf	??_CANreceiveMessage,c
  7443  00159E  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7444  0015A2  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7445  0015A6  5027               	movf	??_CANreceiveMessage,w,c
  7446  0015A8  26DE               	addwf	postinc2,f,c
  7447  0015AA  5028               	movf	??_CANreceiveMessage+1,w,c
  7448  0015AC  22DE               	addwfc	postinc2,f,c
  7449  0015AE  5029               	movf	??_CANreceiveMessage+2,w,c
  7450  0015B0  22DE               	addwfc	postinc2,f,c
  7451  0015B2  502A               	movf	??_CANreceiveMessage+3,w,c
  7452  0015B4  22DE               	addwfc	postinc2,f,c
  7453                           
  7454                           ; BSR set to: 15
  7455                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7456  0015B6  010F               	movlb	15	; () banked
  7457  0015B8  A152               	btfss	82,0,b	;volatile
  7458  0015BA  D00C               	goto	i1l3309
  7459                           
  7460                           ; BSR set to: 15
  7461                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7462  0015BC  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7463  0015C0  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7464  0015C4  0E00               	movlw	0
  7465  0015C6  12DE               	iorwf	postinc2,f,c
  7466  0015C8  0E00               	movlw	0
  7467  0015CA  12DE               	iorwf	postinc2,f,c
  7468  0015CC  0E01               	movlw	1
  7469  0015CE  12DE               	iorwf	postinc2,f,c
  7470  0015D0  0E00               	movlw	0
  7471  0015D2  12DE               	iorwf	postinc2,f,c
  7472  0015D4                     i1l3309:
  7473                           
  7474                           ; BSR set to: 15
  7475                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7476  0015D4  010F               	movlb	15	; () banked
  7477  0015D6  A352               	btfss	82,1,b	;volatile
  7478  0015D8  D00C               	goto	i1l3313
  7479                           
  7480                           ; BSR set to: 15
  7481                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7482  0015DA  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7483  0015DE  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7484  0015E2  0E00               	movlw	0
  7485  0015E4  12DE               	iorwf	postinc2,f,c
  7486  0015E6  0E00               	movlw	0
  7487  0015E8  12DE               	iorwf	postinc2,f,c
  7488  0015EA  0E02               	movlw	2
  7489  0015EC  12DE               	iorwf	postinc2,f,c
  7490  0015EE  0E00               	movlw	0
  7491  0015F0  12DE               	iorwf	postinc2,f,c
  7492  0015F2                     i1l3313:
  7493                           
  7494                           ; BSR set to: 15
  7495                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7496  0015F2  010F               	movlb	15	; () banked
  7497  0015F4  AB52               	btfss	82,5,b	;volatile
  7498  0015F6  D00C               	goto	i1l3317
  7499                           
  7500                           ; BSR set to: 15
  7501                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7502  0015F8  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7503  0015FC  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7504  001600  0E00               	movlw	0
  7505  001602  12DE               	iorwf	postinc2,f,c
  7506  001604  0E00               	movlw	0
  7507  001606  12DE               	iorwf	postinc2,f,c
  7508  001608  0E04               	movlw	4
  7509  00160A  12DE               	iorwf	postinc2,f,c
  7510  00160C  0E00               	movlw	0
  7511  00160E  12DE               	iorwf	postinc2,f,c
  7512  001610                     i1l3317:
  7513                           
  7514                           ; BSR set to: 15
  7515                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7516  001610  010F               	movlb	15	; () banked
  7517  001612  AD52               	btfss	82,6,b	;volatile
  7518  001614  D00C               	goto	i1l3321
  7519                           
  7520                           ; BSR set to: 15
  7521                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  7522  001616  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7523  00161A  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7524  00161E  0E00               	movlw	0
  7525  001620  12DE               	iorwf	postinc2,f,c
  7526  001622  0E00               	movlw	0
  7527  001624  12DE               	iorwf	postinc2,f,c
  7528  001626  0E08               	movlw	8
  7529  001628  12DE               	iorwf	postinc2,f,c
  7530  00162A  0E00               	movlw	0
  7531  00162C  12DE               	iorwf	postinc2,f,c
  7532  00162E                     i1l3321:
  7533                           
  7534                           ; BSR set to: 15
  7535                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7536  00162E  010F               	movlb	15	; () banked
  7537  001630  AF52               	btfss	82,7,b	;volatile
  7538  001632  D00C               	goto	i1l3325
  7539                           
  7540                           ; BSR set to: 15
  7541                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  7542  001634  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7543  001638  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7544  00163C  0E00               	movlw	0
  7545  00163E  12DE               	iorwf	postinc2,f,c
  7546  001640  0E00               	movlw	0
  7547  001642  12DE               	iorwf	postinc2,f,c
  7548  001644  0E10               	movlw	16
  7549  001646  12DE               	iorwf	postinc2,f,c
  7550  001648  0E00               	movlw	0
  7551  00164A  12DE               	iorwf	postinc2,f,c
  7552  00164C                     i1l3325:
  7553                           
  7554                           ; BSR set to: 15
  7555                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7556  00164C  CF51 F027          	movff	3921,??_CANreceiveMessage	;volatile
  7557  001650  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7558  001652  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7559  001654  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7560  001656  0E15               	movlw	21
  7561  001658                     i1u367_25:
  7562  001658  90D8               	bcf	status,0,c
  7563  00165A  3627               	rlcf	??_CANreceiveMessage,f,c
  7564  00165C  3628               	rlcf	??_CANreceiveMessage+1,f,c
  7565  00165E  3629               	rlcf	??_CANreceiveMessage+2,f,c
  7566  001660  362A               	rlcf	??_CANreceiveMessage+3,f,c
  7567  001662  2EE8               	decfsz	wreg,f,c
  7568  001664  D7F9               	goto	i1u367_25
  7569  001666  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7570  00166A  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7571  00166E  5027               	movf	??_CANreceiveMessage,w,c
  7572  001670  12DE               	iorwf	postinc2,f,c
  7573  001672  5028               	movf	??_CANreceiveMessage+1,w,c
  7574  001674  12DE               	iorwf	postinc2,f,c
  7575  001676  5029               	movf	??_CANreceiveMessage+2,w,c
  7576  001678  12DE               	iorwf	postinc2,f,c
  7577  00167A  502A               	movf	??_CANreceiveMessage+3,w,c
  7578  00167C  12DE               	iorwf	postinc2,f,c
  7579  00167E                     i1l3327:
  7580                           
  7581                           ; BSR set to: 15
  7582                           ;inc\CANlib.h: 581: }
  7583                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7584  00167E  010F               	movlb	15	; () banked
  7585  001680  9F50               	bcf	80,7,b	;volatile
  7586                           
  7587                           ; BSR set to: 15
  7588                           ;inc\CANlib.h: 584: return (error);
  7589                           ;	Return value of _CANreceiveMessage is never used
  7590  001682  0012               	return	
  7591  001684                     i1l408:
  7592                           
  7593                           ; BSR set to: 15
  7594                           ;inc\CANlib.h: 585: }
  7595                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7596  001684  AE60               	btfss	3936,7,c	;volatile
  7597  001686  0012               	return	
  7598                           
  7599                           ; BSR set to: 15
  7600                           ;inc\CANlib.h: 588: {
  7601                           ;inc\CANlib.h: 589: msg->identifier = 0;
  7602  001688  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7603  00168C  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7604  001690  6ADE               	clrf	postinc2,c
  7605  001692  6ADE               	clrf	postinc2,c
  7606  001694  6ADE               	clrf	postinc2,c
  7607  001696  6ADD               	clrf	postdec2,c
  7608                           
  7609                           ; BSR set to: 15
  7610                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  7611  001698  EE20 F004          	lfsr	2,4
  7612  00169C  5025               	movf	CANreceiveMessage@msg,w,c
  7613  00169E  26D9               	addwf	fsr2l,f,c
  7614  0016A0  5026               	movf	CANreceiveMessage@msg+1,w,c
  7615  0016A2  22DA               	addwfc	fsr2h,f,c
  7616  0016A4  CF66 FFDF          	movff	3942,indf2	;volatile
  7617                           
  7618                           ; BSR set to: 15
  7619                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  7620  0016A8  EE20 F005          	lfsr	2,5
  7621  0016AC  5025               	movf	CANreceiveMessage@msg,w,c
  7622  0016AE  26D9               	addwf	fsr2l,f,c
  7623  0016B0  5026               	movf	CANreceiveMessage@msg+1,w,c
  7624  0016B2  22DA               	addwfc	fsr2h,f,c
  7625  0016B4  CF67 FFDF          	movff	3943,indf2	;volatile
  7626                           
  7627                           ; BSR set to: 15
  7628                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  7629  0016B8  EE20 F006          	lfsr	2,6
  7630  0016BC  5025               	movf	CANreceiveMessage@msg,w,c
  7631  0016BE  26D9               	addwf	fsr2l,f,c
  7632  0016C0  5026               	movf	CANreceiveMessage@msg+1,w,c
  7633  0016C2  22DA               	addwfc	fsr2h,f,c
  7634  0016C4  CF68 FFDF          	movff	3944,indf2	;volatile
  7635                           
  7636                           ; BSR set to: 15
  7637                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  7638  0016C8  EE20 F007          	lfsr	2,7
  7639  0016CC  5025               	movf	CANreceiveMessage@msg,w,c
  7640  0016CE  26D9               	addwf	fsr2l,f,c
  7641  0016D0  5026               	movf	CANreceiveMessage@msg+1,w,c
  7642  0016D2  22DA               	addwfc	fsr2h,f,c
  7643  0016D4  CF69 FFDF          	movff	3945,indf2	;volatile
  7644                           
  7645                           ; BSR set to: 15
  7646                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  7647  0016D8  EE20 F008          	lfsr	2,8
  7648  0016DC  5025               	movf	CANreceiveMessage@msg,w,c
  7649  0016DE  26D9               	addwf	fsr2l,f,c
  7650  0016E0  5026               	movf	CANreceiveMessage@msg+1,w,c
  7651  0016E2  22DA               	addwfc	fsr2h,f,c
  7652  0016E4  CF6A FFDF          	movff	3946,indf2	;volatile
  7653                           
  7654                           ; BSR set to: 15
  7655                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  7656  0016E8  EE20 F009          	lfsr	2,9
  7657  0016EC  5025               	movf	CANreceiveMessage@msg,w,c
  7658  0016EE  26D9               	addwf	fsr2l,f,c
  7659  0016F0  5026               	movf	CANreceiveMessage@msg+1,w,c
  7660  0016F2  22DA               	addwfc	fsr2h,f,c
  7661  0016F4  CF6B FFDF          	movff	3947,indf2	;volatile
  7662                           
  7663                           ; BSR set to: 15
  7664                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  7665  0016F8  EE20 F00A          	lfsr	2,10
  7666  0016FC  5025               	movf	CANreceiveMessage@msg,w,c
  7667  0016FE  26D9               	addwf	fsr2l,f,c
  7668  001700  5026               	movf	CANreceiveMessage@msg+1,w,c
  7669  001702  22DA               	addwfc	fsr2h,f,c
  7670  001704  CF6C FFDF          	movff	3948,indf2	;volatile
  7671                           
  7672                           ; BSR set to: 15
  7673                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  7674  001708  EE20 F00B          	lfsr	2,11
  7675  00170C  5025               	movf	CANreceiveMessage@msg,w,c
  7676  00170E  26D9               	addwf	fsr2l,f,c
  7677  001710  5026               	movf	CANreceiveMessage@msg+1,w,c
  7678  001712  22DA               	addwfc	fsr2h,f,c
  7679  001714  CF6D FFDF          	movff	3949,indf2	;volatile
  7680                           
  7681                           ; BSR set to: 15
  7682                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7683  001718  EE20 F00E          	lfsr	2,14
  7684  00171C  5025               	movf	CANreceiveMessage@msg,w,c
  7685  00171E  26D9               	addwf	fsr2l,f,c
  7686  001720  5026               	movf	CANreceiveMessage@msg+1,w,c
  7687  001722  22DA               	addwfc	fsr2h,f,c
  7688  001724  AC65               	btfss	3941,6,c	;volatile
  7689  001726  D002               	goto	i1u369_20
  7690  001728  0E01               	movlw	1
  7691  00172A  D001               	goto	i1u369_26
  7692  00172C                     i1u369_20:
  7693  00172C  0E00               	movlw	0
  7694  00172E                     i1u369_26:
  7695  00172E  6EDF               	movwf	indf2,c
  7696                           
  7697                           ; BSR set to: 15
  7698                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7699  001730  EE20 F00D          	lfsr	2,13
  7700  001734  5025               	movf	CANreceiveMessage@msg,w,c
  7701  001736  26D9               	addwf	fsr2l,f,c
  7702  001738  5026               	movf	CANreceiveMessage@msg+1,w,c
  7703  00173A  22DA               	addwfc	fsr2h,f,c
  7704  00173C  5065               	movf	3941,w,c	;volatile
  7705  00173E  0B0F               	andlw	15
  7706  001740  6EDF               	movwf	indf2,c
  7707                           
  7708                           ; BSR set to: 15
  7709                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  7710  001742  EE20 F00C          	lfsr	2,12
  7711  001746  5025               	movf	CANreceiveMessage@msg,w,c
  7712  001748  26D9               	addwf	fsr2l,f,c
  7713  00174A  5026               	movf	CANreceiveMessage@msg+1,w,c
  7714  00174C  22DA               	addwfc	fsr2h,f,c
  7715  00174E  A662               	btfss	3938,3,c	;volatile
  7716  001750  D002               	goto	i1u370_20
  7717  001752  0E01               	movlw	1
  7718  001754  D001               	goto	i1u370_26
  7719  001756                     i1u370_20:
  7720  001756  0E00               	movlw	0
  7721  001758                     i1u370_26:
  7722  001758  6EDF               	movwf	indf2,c
  7723                           
  7724                           ; BSR set to: 15
  7725                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  7726  00175A  B662               	btfsc	3938,3,c	;volatile
  7727  00175C  D043               	goto	i1l3363
  7728                           
  7729                           ; BSR set to: 15
  7730                           ;inc\CANlib.h: 606: {
  7731                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7732  00175E  CF61 F027          	movff	3937,??_CANreceiveMessage	;volatile
  7733  001762  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7734  001764  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7735  001766  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7736  001768  0E03               	movlw	3
  7737  00176A                     i1u372_25:
  7738  00176A  90D8               	bcf	status,0,c
  7739  00176C  3627               	rlcf	??_CANreceiveMessage,f,c
  7740  00176E  3628               	rlcf	??_CANreceiveMessage+1,f,c
  7741  001770  3629               	rlcf	??_CANreceiveMessage+2,f,c
  7742  001772  362A               	rlcf	??_CANreceiveMessage+3,f,c
  7743  001774  2EE8               	decfsz	wreg,f,c
  7744  001776  D7F9               	goto	i1u372_25
  7745  001778  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7746  00177C  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7747  001780  C027  FFDE         	movff	??_CANreceiveMessage,postinc2
  7748  001784  C028  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7749  001788  C029  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7750  00178C  C02A  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7751                           
  7752                           ; BSR set to: 15
  7753                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7754  001790  3862               	swapf	3938,w,c	;volatile
  7755  001792  42E8               	rrncf	wreg,f,c
  7756  001794  0B07               	andlw	7
  7757  001796  0B07               	andlw	7
  7758  001798  6E30               	movwf	CANreceiveMessage@tamp,c
  7759                           
  7760                           ; BSR set to: 15
  7761                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  7762  00179A  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7763  00179E  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7764  0017A2  CFDE F027          	movff	postinc2,??_CANreceiveMessage
  7765  0017A6  CFDE F028          	movff	postinc2,??_CANreceiveMessage+1
  7766  0017AA  CFDE F029          	movff	postinc2,??_CANreceiveMessage+2
  7767  0017AE  CFDE F02A          	movff	postinc2,??_CANreceiveMessage+3
  7768  0017B2  5030               	movf	CANreceiveMessage@tamp,w,c
  7769  0017B4  2427               	addwf	??_CANreceiveMessage,w,c
  7770  0017B6  6E2B               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7771  0017B8  0E00               	movlw	0
  7772  0017BA  2028               	addwfc	??_CANreceiveMessage+1,w,c
  7773  0017BC  6E2C               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7774  0017BE  0E00               	movlw	0
  7775  0017C0  2029               	addwfc	??_CANreceiveMessage+2,w,c
  7776  0017C2  6E2D               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7777  0017C4  0E00               	movlw	0
  7778  0017C6  202A               	addwfc	??_CANreceiveMessage+3,w,c
  7779  0017C8  6E2E               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7780  0017CA  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7781  0017CE  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7782  0017D2  C02B  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7783  0017D6  C02C  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7784  0017DA  C02D  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7785  0017DE  C02E  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7786                           
  7787                           ;inc\CANlib.h: 610: }
  7788  0017E2  D088               	goto	i1l3389
  7789  0017E4                     i1l3363:
  7790                           
  7791                           ; BSR set to: 15
  7792                           ;inc\CANlib.h: 611: else
  7793                           ;inc\CANlib.h: 612: {
  7794                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  7795  0017E4  CF64 F027          	movff	3940,??_CANreceiveMessage	;volatile
  7796  0017E8  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7797  0017EA  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7798  0017EC  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7799  0017EE  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7800  0017F2  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7801  0017F6  C027  FFDE         	movff	??_CANreceiveMessage,postinc2
  7802  0017FA  C028  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7803  0017FE  C029  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7804  001802  C02A  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7805                           
  7806                           ; BSR set to: 15
  7807                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7808  001806  CF63 F027          	movff	3939,??_CANreceiveMessage	;volatile
  7809  00180A  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7810  00180C  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7811  00180E  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7812  001810  C029  F02A         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7813  001814  C028  F029         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7814  001818  C027  F028         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7815  00181C  6A27               	clrf	??_CANreceiveMessage,c
  7816  00181E  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7817  001822  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7818  001826  5027               	movf	??_CANreceiveMessage,w,c
  7819  001828  26DE               	addwf	postinc2,f,c
  7820  00182A  5028               	movf	??_CANreceiveMessage+1,w,c
  7821  00182C  22DE               	addwfc	postinc2,f,c
  7822  00182E  5029               	movf	??_CANreceiveMessage+2,w,c
  7823  001830  22DE               	addwfc	postinc2,f,c
  7824  001832  502A               	movf	??_CANreceiveMessage+3,w,c
  7825  001834  22DE               	addwfc	postinc2,f,c
  7826                           
  7827                           ; BSR set to: 15
  7828                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  7829  001836  A062               	btfss	3938,0,c	;volatile
  7830  001838  D00C               	goto	i1l3371
  7831                           
  7832                           ; BSR set to: 15
  7833                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  7834  00183A  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7835  00183E  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7836  001842  0E00               	movlw	0
  7837  001844  12DE               	iorwf	postinc2,f,c
  7838  001846  0E00               	movlw	0
  7839  001848  12DE               	iorwf	postinc2,f,c
  7840  00184A  0E01               	movlw	1
  7841  00184C  12DE               	iorwf	postinc2,f,c
  7842  00184E  0E00               	movlw	0
  7843  001850  12DE               	iorwf	postinc2,f,c
  7844  001852                     i1l3371:
  7845                           
  7846                           ; BSR set to: 15
  7847                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  7848  001852  A262               	btfss	3938,1,c	;volatile
  7849  001854  D00C               	goto	i1l3375
  7850                           
  7851                           ; BSR set to: 15
  7852                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  7853  001856  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7854  00185A  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7855  00185E  0E00               	movlw	0
  7856  001860  12DE               	iorwf	postinc2,f,c
  7857  001862  0E00               	movlw	0
  7858  001864  12DE               	iorwf	postinc2,f,c
  7859  001866  0E02               	movlw	2
  7860  001868  12DE               	iorwf	postinc2,f,c
  7861  00186A  0E00               	movlw	0
  7862  00186C  12DE               	iorwf	postinc2,f,c
  7863  00186E                     i1l3375:
  7864                           
  7865                           ; BSR set to: 15
  7866                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  7867  00186E  AA62               	btfss	3938,5,c	;volatile
  7868  001870  D00C               	goto	i1l3379
  7869                           
  7870                           ; BSR set to: 15
  7871                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  7872  001872  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7873  001876  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7874  00187A  0E00               	movlw	0
  7875  00187C  12DE               	iorwf	postinc2,f,c
  7876  00187E  0E00               	movlw	0
  7877  001880  12DE               	iorwf	postinc2,f,c
  7878  001882  0E04               	movlw	4
  7879  001884  12DE               	iorwf	postinc2,f,c
  7880  001886  0E00               	movlw	0
  7881  001888  12DE               	iorwf	postinc2,f,c
  7882  00188A                     i1l3379:
  7883                           
  7884                           ; BSR set to: 15
  7885                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  7886  00188A  AC62               	btfss	3938,6,c	;volatile
  7887  00188C  D00C               	goto	i1l3383
  7888                           
  7889                           ; BSR set to: 15
  7890                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  7891  00188E  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7892  001892  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7893  001896  0E00               	movlw	0
  7894  001898  12DE               	iorwf	postinc2,f,c
  7895  00189A  0E00               	movlw	0
  7896  00189C  12DE               	iorwf	postinc2,f,c
  7897  00189E  0E08               	movlw	8
  7898  0018A0  12DE               	iorwf	postinc2,f,c
  7899  0018A2  0E00               	movlw	0
  7900  0018A4  12DE               	iorwf	postinc2,f,c
  7901  0018A6                     i1l3383:
  7902                           
  7903                           ; BSR set to: 15
  7904                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  7905  0018A6  AE62               	btfss	3938,7,c	;volatile
  7906  0018A8  D00C               	goto	i1l3387
  7907                           
  7908                           ; BSR set to: 15
  7909                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  7910  0018AA  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7911  0018AE  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7912  0018B2  0E00               	movlw	0
  7913  0018B4  12DE               	iorwf	postinc2,f,c
  7914  0018B6  0E00               	movlw	0
  7915  0018B8  12DE               	iorwf	postinc2,f,c
  7916  0018BA  0E10               	movlw	16
  7917  0018BC  12DE               	iorwf	postinc2,f,c
  7918  0018BE  0E00               	movlw	0
  7919  0018C0  12DE               	iorwf	postinc2,f,c
  7920  0018C2                     i1l3387:
  7921                           
  7922                           ; BSR set to: 15
  7923                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  7924  0018C2  CF61 F027          	movff	3937,??_CANreceiveMessage	;volatile
  7925  0018C6  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7926  0018C8  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7927  0018CA  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7928  0018CC  0E15               	movlw	21
  7929  0018CE                     i1u378_25:
  7930  0018CE  90D8               	bcf	status,0,c
  7931  0018D0  3627               	rlcf	??_CANreceiveMessage,f,c
  7932  0018D2  3628               	rlcf	??_CANreceiveMessage+1,f,c
  7933  0018D4  3629               	rlcf	??_CANreceiveMessage+2,f,c
  7934  0018D6  362A               	rlcf	??_CANreceiveMessage+3,f,c
  7935  0018D8  2EE8               	decfsz	wreg,f,c
  7936  0018DA  D7F9               	goto	i1u378_25
  7937  0018DC  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7938  0018E0  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7939  0018E4  5027               	movf	??_CANreceiveMessage,w,c
  7940  0018E6  12DE               	iorwf	postinc2,f,c
  7941  0018E8  5028               	movf	??_CANreceiveMessage+1,w,c
  7942  0018EA  12DE               	iorwf	postinc2,f,c
  7943  0018EC  5029               	movf	??_CANreceiveMessage+2,w,c
  7944  0018EE  12DE               	iorwf	postinc2,f,c
  7945  0018F0  502A               	movf	??_CANreceiveMessage+3,w,c
  7946  0018F2  12DE               	iorwf	postinc2,f,c
  7947  0018F4                     i1l3389:
  7948                           
  7949                           ; BSR set to: 15
  7950                           ;inc\CANlib.h: 629: }
  7951                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  7952  0018F4  9E60               	bcf	3936,7,c	;volatile
  7953                           
  7954                           ; BSR set to: 15
  7955                           ;inc\CANlib.h: 632: return (error);
  7956                           ;	Return value of _CANreceiveMessage is never used
  7957  0018F6  0012               	return	
  7958  0018F8                     __end_of_CANreceiveMessage:
  7959                           	opt stack 0
  7960                           pclatu	equ	0xFFB
  7961                           pclath	equ	0xFFA
  7962                           tblptru	equ	0xFF8
  7963                           tblptrh	equ	0xFF7
  7964                           tblptrl	equ	0xFF6
  7965                           tablat	equ	0xFF5
  7966                           prodh	equ	0xFF4
  7967                           prodl	equ	0xFF3
  7968                           intcon	equ	0xFF2
  7969                           intcon2	equ	0xFF1
  7970                           postinc0	equ	0xFEE
  7971                           fsr0h	equ	0xFEA
  7972                           fsr0l	equ	0xFE9
  7973                           wreg	equ	0xFE8
  7974                           postdec1	equ	0xFE5
  7975                           fsr1h	equ	0xFE2
  7976                           fsr1l	equ	0xFE1
  7977                           bsr	equ	0xFE0
  7978                           indf2	equ	0xFDF
  7979                           postinc2	equ	0xFDE
  7980                           postdec2	equ	0xFDD
  7981                           fsr2h	equ	0xFDA
  7982                           fsr2l	equ	0xFD9
  7983                           status	equ	0xFD8
  7984                           
  7985 ;; *************** function _CANisRxReady *****************
  7986 ;; Defined at:
  7987 ;;		line 1163 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;		None
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;		None
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  1    wreg      unsigned char 
  7994 ;; Registers used:
  7995 ;;		wreg, status,2
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8001 ;;      Params:         0       0       0       0
  8002 ;;      Locals:         1       0       0       0
  8003 ;;      Temps:          0       0       0       0
  8004 ;;      Totals:         1       0       0       0
  8005 ;;Total ram usage:        1 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; Hardware stack levels required when called:    2
  8008 ;; This function calls:
  8009 ;;		Nothing
  8010 ;; This function is called by:
  8011 ;;		_ISR_bassa
  8012 ;; This function uses a non-reentrant model
  8013 ;;
  8014                           
  8015                           	psect	text23
  8016  002468                     __ptext23:
  8017                           	opt stack 0
  8018  002468                     _CANisRxReady:
  8019                           	opt stack 24
  8020                           
  8021                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8022                           
  8023                           ; BSR set to: 15
  8024                           ;incstack = 0
  8025  002468  0E01               	movlw	1
  8026  00246A  6E25               	movwf	_CANisRxReady$2912,c
  8027  00246C  BE60               	btfsc	3936,7,c	;volatile
  8028  00246E  D005               	goto	i1l559
  8029  002470  010F               	movlb	15	; () banked
  8030  002472  BF50               	btfsc	80,7,b	;volatile
  8031  002474  D002               	goto	i1l559
  8032                           
  8033                           ; BSR set to: 15
  8034  002476  0E00               	movlw	0
  8035  002478  6E25               	movwf	_CANisRxReady$2912,c
  8036  00247A                     i1l559:
  8037  00247A  5025               	movf	_CANisRxReady$2912,w,c
  8038  00247C  0012               	return	
  8039  00247E                     __end_of_CANisRxReady:
  8040                           	opt stack 0
  8041                           pclatu	equ	0xFFB
  8042                           pclath	equ	0xFFA
  8043                           tblptru	equ	0xFF8
  8044                           tblptrh	equ	0xFF7
  8045                           tblptrl	equ	0xFF6
  8046                           tablat	equ	0xFF5
  8047                           prodh	equ	0xFF4
  8048                           prodl	equ	0xFF3
  8049                           intcon	equ	0xFF2
  8050                           intcon2	equ	0xFF1
  8051                           postinc0	equ	0xFEE
  8052                           fsr0h	equ	0xFEA
  8053                           fsr0l	equ	0xFE9
  8054                           wreg	equ	0xFE8
  8055                           postdec1	equ	0xFE5
  8056                           fsr1h	equ	0xFE2
  8057                           fsr1l	equ	0xFE1
  8058                           bsr	equ	0xFE0
  8059                           indf2	equ	0xFDF
  8060                           postinc2	equ	0xFDE
  8061                           postdec2	equ	0xFDD
  8062                           fsr2h	equ	0xFDA
  8063                           fsr2l	equ	0xFD9
  8064                           status	equ	0xFD8
  8065                           
  8066 ;; *************** function _ISR_alta *****************
  8067 ;; Defined at:
  8068 ;;		line 73 in file "newmain.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;		None
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;		None
  8073 ;; Return value:  Size  Location     Type
  8074 ;;		None               void
  8075 ;; Registers used:
  8076 ;;		wreg, status,2, status,0, cstack
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8082 ;;      Params:         0       0       0       0
  8083 ;;      Locals:         0       0       0       0
  8084 ;;      Temps:          0      15       0       0
  8085 ;;      Totals:         0      15       0       0
  8086 ;;Total ram usage:       15 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; Hardware stack levels required when called:    1
  8089 ;; This function calls:
  8090 ;;		_WriteTimer0
  8091 ;; This function is called by:
  8092 ;;		Interrupt level 2
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           	psect	intcode
  8097  000008                     __pintcode:
  8098                           	opt stack 0
  8099  000008                     _ISR_alta:
  8100                           	opt stack 24
  8101                           
  8102                           ;incstack = 0
  8103  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8104  00000A  CFFA F065          	movff	pclath,??_ISR_alta+1
  8105  00000E  CFFB F066          	movff	pclatu,??_ISR_alta+2
  8106  000012  ED1D  F010         	call	int_func,f	;refresh shadow registers
  8107                           pclatu	equ	0xFFB
  8108                           pclath	equ	0xFFA
  8109                           tblptru	equ	0xFF8
  8110                           tblptrh	equ	0xFF7
  8111                           tblptrl	equ	0xFF6
  8112                           tablat	equ	0xFF5
  8113                           prodh	equ	0xFF4
  8114                           prodl	equ	0xFF3
  8115                           intcon	equ	0xFF2
  8116                           intcon2	equ	0xFF1
  8117                           postinc0	equ	0xFEE
  8118                           fsr0h	equ	0xFEA
  8119                           fsr0l	equ	0xFE9
  8120                           wreg	equ	0xFE8
  8121                           postdec1	equ	0xFE5
  8122                           fsr1h	equ	0xFE2
  8123                           fsr1l	equ	0xFE1
  8124                           bsr	equ	0xFE0
  8125                           indf2	equ	0xFDF
  8126                           postinc2	equ	0xFDE
  8127                           postdec2	equ	0xFDD
  8128                           fsr2h	equ	0xFDA
  8129                           fsr2l	equ	0xFD9
  8130                           status	equ	0xFD8
  8131                           
  8132                           	psect	intcode_body
  8133  00203A                     __pintcode_body:
  8134                           	opt stack 24
  8135  00203A                     int_func:
  8136                           	opt stack 24
  8137  00203A  0006               	pop		; remove dummy address from shadow register refresh
  8138  00203C  CFE9 F067          	movff	fsr0l,??_ISR_alta+3
  8139  002040  CFEA F068          	movff	fsr0h,??_ISR_alta+4
  8140  002044  CFE1 F069          	movff	fsr1l,??_ISR_alta+5
  8141  002048  CFE2 F06A          	movff	fsr1h,??_ISR_alta+6
  8142  00204C  CFD9 F06B          	movff	fsr2l,??_ISR_alta+7
  8143  002050  CFDA F06C          	movff	fsr2h,??_ISR_alta+8
  8144  002054  CFF3 F06D          	movff	prodl,??_ISR_alta+9
  8145  002058  CFF4 F06E          	movff	prodh,??_ISR_alta+10
  8146  00205C  CFF6 F06F          	movff	tblptrl,??_ISR_alta+11
  8147  002060  CFF7 F070          	movff	tblptrh,??_ISR_alta+12
  8148  002064  CFF8 F071          	movff	tblptru,??_ISR_alta+13
  8149  002068  CFF5 F072          	movff	tablat,??_ISR_alta+14
  8150                           
  8151                           ;newmain.c: 74: if (noChange == 1) {
  8152  00206C  A04A               	btfss	_noChange/(0+8),_noChange& (0+7),c
  8153  00206E  D021               	goto	i2l3687
  8154                           
  8155                           ;newmain.c: 75: PORTCbits.RC0 = ~PORTCbits.RC0;
  8156  002070  A082               	btfss	3970,0,c	;volatile
  8157  002072  D002               	goto	i2u414_40
  8158  002074  0E01               	movlw	1
  8159  002076  D001               	goto	i2u414_46
  8160  002078                     i2u414_40:
  8161  002078  0E00               	movlw	0
  8162  00207A                     i2u414_46:
  8163  00207A  0AFF               	xorlw	255
  8164  00207C  0100               	movlb	0	; () banked
  8165  00207E  6F64               	movwf	??_ISR_alta& (0+255),b
  8166  002080  5082               	movf	3970,w,c	;volatile
  8167  002082  0100               	movlb	0	; () banked
  8168  002084  1964               	xorwf	??_ISR_alta& (0+255),w,b
  8169  002086  0BFE               	andlw	-2
  8170  002088  1964               	xorwf	??_ISR_alta& (0+255),w,b
  8171  00208A  6E82               	movwf	3970,c	;volatile
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;newmain.c: 76: T0CONbits.TMR0ON = 0;
  8175  00208C  9ED5               	bcf	4053,7,c	;volatile
  8176                           
  8177                           ; BSR set to: 0
  8178                           ;newmain.c: 77: if (PORTCbits.RC0 == 1) {
  8179  00208E  A082               	btfss	3970,0,c	;volatile
  8180  002090  D007               	goto	i2l3681
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;newmain.c: 78: WriteTimer0(Ton);
  8184  002092  C00B  F060         	movff	_Ton,WriteTimer0@timer0
  8185  002096  C00C  F061         	movff	_Ton+1,WriteTimer0@timer0+1
  8186  00209A  EC48  F012         	call	_WriteTimer0	;wreg free
  8187                           
  8188                           ;newmain.c: 79: T0CONbits.TMR0ON = 1;
  8189  00209E  8ED5               	bsf	4053,7,c	;volatile
  8190  0020A0                     i2l3681:
  8191                           
  8192                           ;newmain.c: 80: }
  8193                           ;newmain.c: 81: if (PORTCbits.RC0 == 0) {
  8194  0020A0  B082               	btfsc	3970,0,c	;volatile
  8195  0020A2  D007               	goto	i2l3687
  8196                           
  8197                           ;newmain.c: 82: WriteTimer0(Toff);
  8198  0020A4  C009  F060         	movff	_Toff,WriteTimer0@timer0
  8199  0020A8  C00A  F061         	movff	_Toff+1,WriteTimer0@timer0+1
  8200  0020AC  EC48  F012         	call	_WriteTimer0	;wreg free
  8201                           
  8202                           ;newmain.c: 83: T0CONbits.TMR0ON = 1;
  8203  0020B0  8ED5               	bsf	4053,7,c	;volatile
  8204  0020B2                     i2l3687:
  8205                           
  8206                           ;newmain.c: 84: }
  8207                           ;newmain.c: 85: }
  8208                           ;newmain.c: 86: INTCONbits.TMR0IF = 0;
  8209  0020B2  94F2               	bcf	intcon,2,c	;volatile
  8210  0020B4  C072  FFF5         	movff	??_ISR_alta+14,tablat
  8211  0020B8  C071  FFF8         	movff	??_ISR_alta+13,tblptru
  8212  0020BC  C070  FFF7         	movff	??_ISR_alta+12,tblptrh
  8213  0020C0  C06F  FFF6         	movff	??_ISR_alta+11,tblptrl
  8214  0020C4  C06E  FFF4         	movff	??_ISR_alta+10,prodh
  8215  0020C8  C06D  FFF3         	movff	??_ISR_alta+9,prodl
  8216  0020CC  C06C  FFDA         	movff	??_ISR_alta+8,fsr2h
  8217  0020D0  C06B  FFD9         	movff	??_ISR_alta+7,fsr2l
  8218  0020D4  C06A  FFE2         	movff	??_ISR_alta+6,fsr1h
  8219  0020D8  C069  FFE1         	movff	??_ISR_alta+5,fsr1l
  8220  0020DC  C068  FFEA         	movff	??_ISR_alta+4,fsr0h
  8221  0020E0  C067  FFE9         	movff	??_ISR_alta+3,fsr0l
  8222  0020E4  C066  FFFB         	movff	??_ISR_alta+2,pclatu
  8223  0020E8  C065  FFFA         	movff	??_ISR_alta+1,pclath
  8224  0020EC  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8225  0020EE  0011               	retfie		f
  8226  0020F0                     __end_of_ISR_alta:
  8227                           	opt stack 0
  8228                           pclatu	equ	0xFFB
  8229                           pclath	equ	0xFFA
  8230                           tblptru	equ	0xFF8
  8231                           tblptrh	equ	0xFF7
  8232                           tblptrl	equ	0xFF6
  8233                           tablat	equ	0xFF5
  8234                           prodh	equ	0xFF4
  8235                           prodl	equ	0xFF3
  8236                           intcon	equ	0xFF2
  8237                           intcon2	equ	0xFF1
  8238                           postinc0	equ	0xFEE
  8239                           fsr0h	equ	0xFEA
  8240                           fsr0l	equ	0xFE9
  8241                           wreg	equ	0xFE8
  8242                           postdec1	equ	0xFE5
  8243                           fsr1h	equ	0xFE2
  8244                           fsr1l	equ	0xFE1
  8245                           bsr	equ	0xFE0
  8246                           indf2	equ	0xFDF
  8247                           postinc2	equ	0xFDE
  8248                           postdec2	equ	0xFDD
  8249                           fsr2h	equ	0xFDA
  8250                           fsr2l	equ	0xFD9
  8251                           status	equ	0xFD8
  8252                           
  8253 ;; *************** function _WriteTimer0 *****************
  8254 ;; Defined at:
  8255 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  timer0          2    0[BANK0 ] unsigned int 
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;  timer           2    2[BANK0 ] struct Timers
  8260 ;; Return value:  Size  Location     Type
  8261 ;;		None               void
  8262 ;; Registers used:
  8263 ;;		None
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8269 ;;      Params:         0       2       0       0
  8270 ;;      Locals:         0       2       0       0
  8271 ;;      Temps:          0       0       0       0
  8272 ;;      Totals:         0       4       0       0
  8273 ;;Total ram usage:        4 bytes
  8274 ;; Hardware stack levels used:    1
  8275 ;; This function calls:
  8276 ;;		Nothing
  8277 ;; This function is called by:
  8278 ;;		_ISR_alta
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           	psect	text25
  8283  002490                     __ptext25:
  8284                           	opt stack 0
  8285  002490                     _WriteTimer0:
  8286                           	opt stack 24
  8287                           
  8288                           ;incstack = 0
  8289  002490  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  8290  002494  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  8291  002498  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  8292  00249C  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  8293  0024A0  0012               	return		;funcret
  8294  0024A2                     __end_of_WriteTimer0:
  8295                           	opt stack 0
  8296  0000                     pclatu	equ	0xFFB
  8297                           pclath	equ	0xFFA
  8298                           tblptru	equ	0xFF8
  8299                           tblptrh	equ	0xFF7
  8300                           tblptrl	equ	0xFF6
  8301                           tablat	equ	0xFF5
  8302                           prodh	equ	0xFF4
  8303                           prodl	equ	0xFF3
  8304                           intcon	equ	0xFF2
  8305                           intcon2	equ	0xFF1
  8306                           postinc0	equ	0xFEE
  8307                           fsr0h	equ	0xFEA
  8308                           fsr0l	equ	0xFE9
  8309                           wreg	equ	0xFE8
  8310                           postdec1	equ	0xFE5
  8311                           fsr1h	equ	0xFE2
  8312                           fsr1l	equ	0xFE1
  8313                           bsr	equ	0xFE0
  8314                           indf2	equ	0xFDF
  8315                           postinc2	equ	0xFDE
  8316                           postdec2	equ	0xFDD
  8317                           fsr2h	equ	0xFDA
  8318                           fsr2l	equ	0xFD9
  8319                           status	equ	0xFD8
  8320                           pclatu	equ	0xFFB
  8321                           pclath	equ	0xFFA
  8322                           tblptru	equ	0xFF8
  8323                           tblptrh	equ	0xFF7
  8324                           tblptrl	equ	0xFF6
  8325                           tablat	equ	0xFF5
  8326                           prodh	equ	0xFF4
  8327                           prodl	equ	0xFF3
  8328                           intcon	equ	0xFF2
  8329                           intcon2	equ	0xFF1
  8330                           postinc0	equ	0xFEE
  8331                           fsr0h	equ	0xFEA
  8332                           fsr0l	equ	0xFE9
  8333                           wreg	equ	0xFE8
  8334                           postdec1	equ	0xFE5
  8335                           fsr1h	equ	0xFE2
  8336                           fsr1l	equ	0xFE1
  8337                           bsr	equ	0xFE0
  8338                           indf2	equ	0xFDF
  8339                           postinc2	equ	0xFDE
  8340                           postdec2	equ	0xFDD
  8341                           fsr2h	equ	0xFDA
  8342                           fsr2l	equ	0xFD9
  8343                           status	equ	0xFD8
  8344                           
  8345                           	psect	param0
  8346  0000                     pclatu	equ	0xFFB
  8347                           pclath	equ	0xFFA
  8348                           tblptru	equ	0xFF8
  8349                           tblptrh	equ	0xFF7
  8350                           tblptrl	equ	0xFF6
  8351                           tablat	equ	0xFF5
  8352                           prodh	equ	0xFF4
  8353                           prodl	equ	0xFF3
  8354                           intcon	equ	0xFF2
  8355                           intcon2	equ	0xFF1
  8356                           postinc0	equ	0xFEE
  8357                           fsr0h	equ	0xFEA
  8358                           fsr0l	equ	0xFE9
  8359                           wreg	equ	0xFE8
  8360                           postdec1	equ	0xFE5
  8361                           fsr1h	equ	0xFE2
  8362                           fsr1l	equ	0xFE1
  8363                           bsr	equ	0xFE0
  8364                           indf2	equ	0xFDF
  8365                           postinc2	equ	0xFDE
  8366                           postdec2	equ	0xFDD
  8367                           fsr2h	equ	0xFDA
  8368                           fsr2l	equ	0xFD9
  8369                           status	equ	0xFD8
  8370                           
  8371                           	psect	temp
  8372  00004B                     btemp:
  8373                           	opt stack 0
  8374  00004B                     	ds	1
  8375  0000                     int$flags	set	btemp
  8376                           pclatu	equ	0xFFB
  8377                           pclath	equ	0xFFA
  8378                           tblptru	equ	0xFF8
  8379                           tblptrh	equ	0xFF7
  8380                           tblptrl	equ	0xFF6
  8381                           tablat	equ	0xFF5
  8382                           prodh	equ	0xFF4
  8383                           prodl	equ	0xFF3
  8384                           intcon	equ	0xFF2
  8385                           intcon2	equ	0xFF1
  8386                           postinc0	equ	0xFEE
  8387                           fsr0h	equ	0xFEA
  8388                           fsr0l	equ	0xFE9
  8389                           wreg	equ	0xFE8
  8390                           postdec1	equ	0xFE5
  8391                           fsr1h	equ	0xFE2
  8392                           fsr1l	equ	0xFE1
  8393                           bsr	equ	0xFE0
  8394                           indf2	equ	0xFDF
  8395                           postinc2	equ	0xFDE
  8396                           postdec2	equ	0xFDD
  8397                           fsr2h	equ	0xFDA
  8398                           fsr2l	equ	0xFD9
  8399                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      74
    BANK0           160     49      91
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->i1___lwdiv
    i1___lwdiv->___wmul

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _calibrazione->___lwdiv
    ___lldiv->___lmul

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->_WriteTimer0

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9613
                                             45 BANK0      4     4      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___lldiv
                             ___lmul
                       _calibrazione
            _configurazione_iniziale
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    2419
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2395
                                             19 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    6216
                      _CANInitialize
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             19 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             33 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibrazione                                         0     0      0     366
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     366
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     322
                                             19 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     290
                                             31 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           17    17      0    1790
                                             13 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
                             ___wmul
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (5) i1___lwdiv                                            7     3      4     214
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     415
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            15    15      0     253
                                              4 BANK0     15    15      0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     253
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _calibrazione
     _BusyADC
     _ConvertADC
     _ReadADC
     ___lwdiv
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenADC
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   ___wmul
   i1___lwdiv
     ___wmul (ARG)

 _ISR_alta (ROOT)
   _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     31      5B       4       56.9%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1E      4A       1       78.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A5       9        0.0%
DATA                 0      0      A5      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Dec 13 21:09:35 2015

              ??_CANisTXwarningON 0073              __end_of_CANSetFilter 0C60  
                              _id 00A5                                bsr 000FE0  
             ___wmul@multiplicand 0027                       __CFG_BORV$3 000000  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000                               l400 1338  
                             l401 133C                               l402 1348  
                             l500 09CC                               l501 09D0  
                             l510 0ADC                               l502 09DC  
                             l430 1AF2                               l511 0AE8  
                             l431 1AF6                               l520 0BF4  
                             l512 0AEC                               l432 1B02  
                             l521 0BF8                               l513 0AF8  
                             l505 0AB8                               l441 1C0A  
                             l433 1B06                               l361 0EE4  
                             l522 0C04                               l506 0ABC  
                             l442 1C0E                               l434 1B12  
                             l362 0C76                               l523 0C08  
                             l507 0AC8                               l443 1C1A  
                             l435 1B16                               l371 0E30  
                             l363 0C7A                               l524 0C14  
                             l516 0BD4                               l508 0ACC  
                             l444 1C1E                               l436 1B22  
                             l356 1D52                               l380 0F86  
                             l372 0E34                               l364 0D72  
                             l517 0BD8                               l509 0AD8  
                             l461 064A                               l445 1C2A  
                             l437 1B26                               l357 1D5C  
                             l381 0F90                               l373 0E40  
                             l365 0D02                               l518 0BE4  
                             l462 064E                               l446 1C2E  
                             l438 1B32                               l382 0F9A  
                             l366 0D0C                               l519 0BE8  
                             l463 065A                               l447 1C3A  
                             l391 117E                               l383 0FA4  
                             l367 0D16                               l480 07A4  
                             l472 0764                               l464 065E  
                             l448 1C3E                               l392 1182  
                             l376 1168                               l368 0D20  
                             l473 0768                               l465 066A  
                             l449 1C4A                               l393 127A  
                             l377 0EFA                               l490 08B4  
                             l474 0774                               l466 066E  
                             l554 244C                               l394 120A  
                             l386 10B4                               l378 0EFE  
                             l491 08C0                               l483 0880  
                             l475 0778                               l467 067A  
                             l395 1214                               l387 10B8  
                             l379 0FF6                               l484 0884  
                             l476 0784                               l468 067E  
                             l396 121E                               l388 10C4  
                             l485 0890                               l477 0788  
                             l469 068A                               l397 1228  
                             l645 1E60                               l494 099C  
                             l486 0894                               l478 0794  
                             l495 09A0                               l487 08A0  
                             l479 0798                               l496 09AC  
                             l488 08A4                               l497 09B0  
                             l489 08B0                               l498 09BC  
                             l499 09C0                               l694 21F8  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _Ton 000B              __size_of_WriteTimer0 0012  
                             _msg 0016                               wreg 000FE8  
           _currentSteering_array 0099                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              l1112 226A  
                            l1059 2028                              l3003 0D2A  
                            l3023 0E24                              l3105 10C8  
                            l3029 0E44                              l3241 221A  
                            l2601 1C4E                              l3243 2226  
                            l3155 1232                              l3253 225C  
                            l3245 222C                              l2509 245A  
                            l3181 134C                              l3511 22AC  
                            l2543 1A66                              l2527 19B0  
                            l3175 132C                              l3079 0FAE  
                            l3521 1FAC                              l2625 0218  
                            l3523 1FBC                              l3507 2286  
                            l2811 08C4                              l2715 05B8  
                            l2643 02D0                              l3099 10A8  
                            l3533 2016                              l3525 1FC2  
                            l2661 038A                              l2743 068E  
                            l2575 1B7C                              l2913 0C18  
                            l2817 090A                              l2569 1B36  
                            l2851 0A26                              l3485 2388  
                            l2845 09E0                              l2749 06D4  
                            l2783 07EE                              l2679 0444  
                            l2777 07A8                              l2697 04FE  
                            l3497 2404                              l2963 1D68  
                            l2885 0B42                              l2965 1DAC  
                            l2957 1D4A                              l2879 0AFC  
                            l2959 1D60                              u2100 192C  
                            u2105 1920                              u2115 198C  
                            u2140 19E2                              _LATA 000F89  
                            u3030 0C38                              u2310 1C6E  
                            u2230 1B56                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            u2145 19D6                              _LATE 000F8D  
                            u3035 0C2C                              u2315 1C62  
                            u2235 1B4A                              u2155 1A42  
                            u2500 047A                              u2420 0306  
                            u2340 0194                              u3300 101A  
                            u3160 0D4A                              u2505 046E  
                            u2425 02FA                              u2345 0188  
                            u3305 100E                              u3170 0D96  
                            u2515 04DA                              u2435 0366  
                            u2355 01F4                              u3315 107A  
                            u3500 24AA                              u2540 0534  
                            u2460 03C0                              u2380 024C  
                            u3420 1252                              u3165 0D3E  
                            u2710 07C8                              u2630 06AE  
                            u3430 129E                              u3175 0D8A  
                            u2545 0528                              u2465 03B4  
                            u2385 0240                              u3425 1246  
                            u3185 0DF6                              u3290 0FCE  
                            u2715 07BC                              u2635 06A2  
                            u2555 0594                              u2475 0420  
                            u2395 02AC                              u3435 1292  
                            u3445 12FE                              u3295 0FC2  
                            u3800 24C2                              u2950 0B1C  
                            u2870 0A00                              u2790 08E4  
                            u2955 0B10                              u2875 09F4  
                            u2795 08D8                              u3790 24B6  
             __size_of_CANSetMask 039E                              _Toff 0009  
                            _main 1E5C                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 004B                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0156                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000000  
                 __end_of_BusyADC 24AE                   __end_of_ReadADC 2490  
                _CANOperationMode 2452                   __end_of_OpenADC 21FC  
      __size_of_CANreceiveMessage 050C                             ?_main 0025  
                 __end_of___lldiv 203A                             _T0CON 000FD5  
                           _T3CON 000FB1                   __end_of___lwdiv 2274  
                           i1l408 1684                             i1l642 010E  
                           i1l559 247A                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _TMR3H 000FB3  
                           _TMR3L 000FB2                 _CANisRxReady$2912 0025  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
             ___lmul@multiplicand 0077                __size_of_ISR_bassa 013E  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                CANInitialize@flags 0085  
                __end_of_ISR_alta 20F0                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _timer 00AD  
                      _ConvertADC 24CE                    __pbitbssCOMRAM 0250  
            __end_of_CANisRxReady 247E                             tablat 000FF5  
            __end_of_CANisTxReady 2452                             status 000FD8  
              __size_ofi1___lwdiv 0052                    __CFG_PBADEN$ON 000000  
                 __initialization 233C                      __end_of_main 1F7E  
                          ??_main 008D                     __activetblptr 000002  
               _CANisTxReady$2910 0073                     _counter_array 0091  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _CANCON 000F6F  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
           __size_of_calibrazione 0046                   __CFG_BBSIZ$1024 000000  
                          i1l1112 2332                            i1l3301 1564  
                          i1l3321 162E                            i1l3313 15F2  
                          i1l3325 164C                            i1l3317 1610  
                          i1l3309 15D4                            i1l3327 167E  
                          i1l3371 1852                            i1l3363 17E4  
                          i1l3613 00F0                            i1l3383 18A6  
                          i1l3375 186E                            i1l3543 2300  
                          i1l3545 2308                            i1l3617 00F4  
                          i1l3387 18C2                            i1l3379 188A  
                          i1l3555 2328                            i1l3547 230C  
                          i1l3389 18F4                            i1l3591 0066  
                          i1l3599 009C                            i2l3681 20A0  
                          i2l3687 20B2                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F56                            _RXB0D5 000F6B  
                          _RXB1D1 000F57                            _RXB0D6 000F6C  
                          _RXB1D2 000F58                            _RXB0D7 000F6D  
                          _RXB1D3 000F59                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _TXB1D2 000F38  
                          _TXB0D6 000F4C                            _TXB1D3 000F39  
                          _TXB0D7 000F4D                            _TXB2D0 000F26  
                          _TXB1D4 000F3A                            _TXB2D1 000F27  
                          _TXB1D5 000F3B                            _TXB2D2 000F28  
                          _TXB1D6 000F3C                            _TXB2D3 000F29  
                          _TXB1D7 000F3D                            _TXB2D4 000F2A  
                          _TXB2D5 000F2B                            _TXB2D6 000F2C  
                          _TXB2D7 000F2D                CANsendMessage@data 0077  
              CANsendMessage@tamp 007F                         ??_BusyADC 0073  
                       ??_ReadADC 0075             __size_of_CANSetFilter 0B06  
                       ??_OpenADC 0075                    __CFG_XINST$OFF 000000  
               __end_of_ISR_bassa 0156                            ___lmul 2274  
                          ___wmul 2408                    __CFG_STVREN$ON 000000  
                       ??___lldiv 0087                         ??___lwdiv 0077  
                    ??_CANSetMask 0078                            _errore 0013  
                          clear_0 2342                            clear_1 2350  
        ?_configurazione_iniziale 0025                   __CFG_BOREN$BOHW 000000  
                    _calibrazione 2384                 __end_ofi1___lwdiv 233C  
                    __pdataCOMRAM 0043                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                 _currentSteering 0047                      _CANSetFilter 015A  
                     ?_ConvertADC 0025                        __accesstop 0060  
         __end_of__initialization 2376                __end_of_CANSetMask 1C96  
                   ___rparam_used 000000         __size_of_CANisRXwarningON 000C  
                  __pcstackCOMRAM 0025                         ?_ISR_alta 0025  
           CANSetFilter@numBuffer 007C         __size_of_CANisTXwarningON 000C  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 0024  
        __end_of_CANOperationMode 2468                        __pbssBANK0 0091  
                      _data_array 00B3           __size_of_CANsendMessage 078C  
                         ?___lmul 0073                           ?___wmul 0025  
                      ??_ISR_alta 0064                __size_of_send_data 003E  
                WriteTimer0@timer 0062                     ??_WriteTimer0 0062  
                  ___lmul@product 007B                      _CANisRxReady 2468  
             __size_of_ConvertADC 0004                           _CANSTAT 000F6E  
                    _CANisTxReady 242E                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01C6                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 007A                           _BusyADC 24A2  
                         _ReadADC 247E                        _correzione 0011  
                       _ADCResult 00B1                           _OpenADC 2180  
                         __Hparam 0000                           __Lparam 0000  
                 __size_of___lmul 0076                           ___lldiv 1F7E  
                 __size_of___wmul 0026                           ___lwdiv 21FC  
            CANInitialize@propSeg 008A                           __pcinit 233C  
                         __ramtop 0300                           __ptext0 1E5C  
                         __ptext1 23CA                           __ptext2 0C60  
                         __ptext3 242E                           __ptext4 20F0  
                         __ptext5 2180                           __ptext6 1C96  
                         __ptext7 18F8                           __ptext8 015A  
                         __ptext9 2452                         _T0CONbits 000FD5  
                         _counter 0001                 i1___lwdiv@divisor 002D  
               i1___lwdiv@counter 0031                        _duty_cycle 00A1  
             __end_of_WriteTimer0 24A2            CANreceiveMessage@error 002F  
                         _potenza 0045                    OpenADC@config2 0073  
                  __pintcode_body 203A              end_of_initialization 2376  
               __end_of_send_data 2408                     __Lmediumconst 0000  
                         int_func 203A                  _CANisRXwarningON 24BA  
                   _CANInitialize 1C96                   ___lldiv@divisor 0083  
                 ___lldiv@counter 008B                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                         _ISR_bassa 0018  
                       _PORTAbits 000F80                    CANSetMask@mask 0073  
                       _PORTCbits 000F82                    CANSetMask@tamp 007D  
                  CANSetMask@type 0077                  _CANisTXwarningON 24AE  
                       i1___lwdiv 22EA                      ??_ConvertADC 0073  
__size_of_configurazione_iniziale 0090               _previousTimeCounter 00A9  
         _clock_counter_reference 000F                    _CANsendMessage 0C60  
                CANInitialize@BRP 0084                  CANInitialize@SJW 0083  
                  ?_CANInitialize 0081                    __end_of___lmul 22EA  
                      ?_ISR_bassa 0025                    __end_of___wmul 242E  
                   __pidataCOMRAM 24C6                 __size_of_ISR_alta 20E8  
                     _WriteTimer0 2490                __end_of_ConvertADC 24D2  
             start_initialization 233C                        ?i1___lwdiv 002B  
             CANSetMask@numBuffer 007C            __end_of_CANsendMessage 13EC  
               ?_CANOperationMode 0025                ??_CANOperationMode 0073  
      CANInitialize@FilterConfig1 008B        CANInitialize@FilterConfig2 008C  
                        ??___lmul 007B                          ??___wmul 0029  
                     _calibration 000D                  __CFG_LPT1OSC$OFF 000000  
          CANInitialize@phaseSeg1 0081            CANInitialize@phaseSeg2 0082  
                     __pbssCOMRAM 0001                     __pcstackBANK0 0060  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
                 ?_CANsendMessage 0073                   ??_CANInitialize 0086  
                        ?_BusyADC 0025                          ?_ReadADC 0073  
              CANSetFilter@filter 0073                 OpenADC@portconfig 0074  
                        ?_OpenADC 0073                    _theorySteering 0015  
                ___lwdiv@dividend 0073                         __pintcode 0008  
                        ?___lldiv 007F                          ?___lwdiv 0073  
                     ??_ISR_bassa 0032                       __pintcodelo 0018  
               WriteTimer0@timer0 0060          __end_of_CANisRXwarningON 24C6  
                     _COMSTATbits 000F74                  ___lwdiv@quotient 0077  
         _configurazione_iniziale 20F0                       ??i1___lwdiv 002F  
           CANreceiveMessage@tamp 0030                    ___wmul@product 0029  
                   OpenADC@config 0077                          _IPR2bits 000FA2  
    _delay_quartz_frequency_value 0048                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE2bits 000FA0  
                       _send_data 23CA                          _PIE3bits 000FA3  
        __end_of_CANisTXwarningON 24BA                          i1u404_20 009A  
                        i1u361_25 14E8                          i1u370_20 1756  
                        i1u370_26 1758                          i1u372_25 176A  
                        i1u358_20 14A4                          i1u358_26 14A6  
                        i1u359_20 14D2                          i1u367_25 1658  
                        i1u359_26 14D4                          i1u369_20 172C  
                        i1u369_26 172E                          i1u378_25 18CE  
                        i2u414_40 2078                          i2u414_46 207A  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                    _pastSteering 0049                          _RXF2EIDL 000F0B  
                        _RXF3EIDH 000F0E                          _RXF3EIDL 000F0F  
                        _RXF4EIDH 000F12                          _RXF4EIDL 000F13  
                        _RXF5EIDH 000F16                          _RXF5EIDL 000F17  
                        _RXF0SIDH 000F00                          _RXF0SIDL 000F01  
                        _TXB0EIDH 000F43                          _RXF1SIDH 000F04  
                        _TXB0EIDL 000F44                          _RXF1SIDL 000F05  
                        _TXB1EIDH 000F33                          _RXF2SIDH 000F08  
                        _TXB1EIDL 000F34                          _RXF2SIDL 000F09  
                        _ISR_alta 0008                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _TXERRCNT 000F76                        _ADCON0bits 000FC2  
               ___wmul@multiplier 0025                     ?_calibrazione 0025  
                   ?_CANSetFilter 0073                 ___lmul@multiplier 0073  
                     _INTCON2bits 000FF1                         copy_data0 236A  
                      _CANCONbits 000F6F                          __Hparam0 0000  
                      ?_send_data 0025                  __size_of_BusyADC 000C  
                __size_of_ReadADC 0012                          __Lparam0 0000  
                    _RXB0SIDLbits 000F62                  __size_of_OpenADC 007C  
                    _RXB1SIDLbits 000F52                        _CANSetMask 18F8  
                __size_of___lldiv 00BC                  __size_of___lwdiv 0078  
                    ?_WriteTimer0 0060                    ??_calibrazione 007A  
       ??_configurazione_iniziale 008D                      _RXF0SIDLbits 000F01  
                 ___lwdiv@divisor 0075                      _RXF1SIDLbits 000F05  
                 ___lwdiv@counter 0079                    ??_CANSetFilter 0078  
                        __ptext10 2384                          __ptext11 21FC  
                        __ptext20 22EA                          __ptext12 247E  
                        __ptext21 2408                          __ptext13 24CE  
                        __ptext22 13EC                          __ptext14 24A2  
                        __ptext23 2468                          __ptext15 2274  
                        __ptext16 1F7E                          __ptext25 2490  
                        __ptext17 24AE                          __ptext18 24BA  
                    _RXF2SIDLbits 000F09                          _noChange 0250  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
              i1___lwdiv@dividend 002B                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 0079                      _remote_frame 0251  
                   __size_of_main 0122                          _limiteDx 0043  
            CANreceiveMessage@msg 0025                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 004B         __size_of_CANOperationMode 0016  
                   ?_CANisRxReady 0025                     ?_CANisTxReady 0025  
                     _RXB0DLCbits 000F65                i1___lwdiv@quotient 002F  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 13EC                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                  ??_CANsendMessage 007B  
              ?_CANreceiveMessage 0025          CANsendMessage@identifier 0073  
                        intlevel1 0000                          intlevel2 0000  
                CANSetFilter@tamp 007D                  CANSetFilter@type 0077  
             ??_CANreceiveMessage 0027                  ___lldiv@dividend 007F  
                     _TXB0DLCbits 000F45                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       ??_send_data 0083  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 2180  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 0005              CANOperationMode@mode 0073  
                  ??_CANisRxReady 0025                       ?_CANSetMask 0073  
                  ??_CANisTxReady 0073         __end_of_CANreceiveMessage 18F8  
                ___lldiv@quotient 0087                 ?_CANisRXwarningON 0025  
              ??_CANisRXwarningON 0073              __end_of_calibrazione 23CA  
           __end_of_CANInitialize 1E5C                 ?_CANisTXwarningON 0025  
