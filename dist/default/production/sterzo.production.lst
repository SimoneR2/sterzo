

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Dec 06 15:48:02 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    53                           	psect	param0,global,class=BANK0,space=1,delta=1
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           	psect	idataCOMRAM
    57  0039B2                     __pidataCOMRAM:
    58                           	opt stack 0
    59                           
    60                           ;initializer for _limiteSx
    61  0039B2  00B4               	dw	180
    62                           
    63                           ;initializer for _potenza
    64  0039B4  0002               	dw	2
    65                           
    66                           	psect	idataBANK0
    67  0039BA                     __pidataBANK0:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _currentSteering
    71  0039BA  B4                 	db	180
    72                           
    73                           ;initializer for _delay_quartz_frequency_value
    74  0039BB  10                 	db	16
    75                           
    76                           ;initializer for _pastSteering
    77  0039BC  01                 	db	1
    78                           
    79                           	psect	nvBANK0
    80  0000EA                     __pnvBANK0:
    81                           	opt stack 0
    82  0000EA                     _clock_counter_reference:
    83                           	opt stack 0
    84  0000EA                     	ds	2
    85  0000                     _RXB1CON	set	3920
    86  0000                     _RXB1CONbits	set	3920
    87  0000                     _RXB1D0	set	3926
    88  0000                     _RXB1D1	set	3927
    89  0000                     _RXB1D2	set	3928
    90  0000                     _RXB1D3	set	3929
    91  0000                     _RXB1D4	set	3930
    92  0000                     _RXB1D5	set	3931
    93  0000                     _RXB1D6	set	3932
    94  0000                     _RXB1D7	set	3933
    95  0000                     _RXB1DLC	set	3925
    96  0000                     _RXB1DLCbits	set	3925
    97  0000                     _RXB1EIDH	set	3923
    98  0000                     _RXB1EIDL	set	3924
    99  0000                     _RXB1SIDH	set	3921
   100  0000                     _RXB1SIDL	set	3922
   101  0000                     _RXB1SIDLbits	set	3922
   102  0000                     _RXF0EIDH	set	3842
   103  0000                     _RXF0EIDL	set	3843
   104  0000                     _RXF0SIDH	set	3840
   105  0000                     _RXF0SIDL	set	3841
   106  0000                     _RXF0SIDLbits	set	3841
   107  0000                     _RXF1EIDH	set	3846
   108  0000                     _RXF1EIDL	set	3847
   109  0000                     _RXF1SIDH	set	3844
   110  0000                     _RXF1SIDL	set	3845
   111  0000                     _RXF1SIDLbits	set	3845
   112  0000                     _RXF2EIDH	set	3850
   113  0000                     _RXF2EIDL	set	3851
   114  0000                     _RXF2SIDH	set	3848
   115  0000                     _RXF2SIDL	set	3849
   116  0000                     _RXF2SIDLbits	set	3849
   117  0000                     _RXF3EIDH	set	3854
   118  0000                     _RXF3EIDL	set	3855
   119  0000                     _RXF3SIDH	set	3852
   120  0000                     _RXF3SIDL	set	3853
   121  0000                     _RXF3SIDLbits	set	3853
   122  0000                     _RXF4EIDH	set	3858
   123  0000                     _RXF4EIDL	set	3859
   124  0000                     _RXF4SIDH	set	3856
   125  0000                     _RXF4SIDL	set	3857
   126  0000                     _RXF4SIDLbits	set	3857
   127  0000                     _RXF5EIDH	set	3862
   128  0000                     _RXF5EIDL	set	3863
   129  0000                     _RXF5SIDH	set	3860
   130  0000                     _RXF5SIDL	set	3861
   131  0000                     _RXF5SIDLbits	set	3861
   132  0000                     _RXM0EIDH	set	3866
   133  0000                     _RXM0EIDL	set	3867
   134  0000                     _RXM0SIDH	set	3864
   135  0000                     _RXM0SIDL	set	3865
   136  0000                     _RXM0SIDLbits	set	3865
   137  0000                     _RXM1EIDH	set	3870
   138  0000                     _RXM1EIDL	set	3871
   139  0000                     _RXM1SIDH	set	3868
   140  0000                     _RXM1SIDL	set	3869
   141  0000                     _RXM1SIDLbits	set	3869
   142  0000                     _TXB0CONbits	set	3904
   143  0000                     _TXB0D0	set	3910
   144  0000                     _TXB0D1	set	3911
   145  0000                     _TXB0D2	set	3912
   146  0000                     _TXB0D3	set	3913
   147  0000                     _TXB0D4	set	3914
   148  0000                     _TXB0D5	set	3915
   149  0000                     _TXB0D6	set	3916
   150  0000                     _TXB0D7	set	3917
   151  0000                     _TXB0DLC	set	3909
   152  0000                     _TXB0DLCbits	set	3909
   153  0000                     _TXB0EIDH	set	3907
   154  0000                     _TXB0EIDL	set	3908
   155  0000                     _TXB0SIDH	set	3905
   156  0000                     _TXB0SIDL	set	3906
   157  0000                     _TXB0SIDLbits	set	3906
   158  0000                     _TXB1CONbits	set	3888
   159  0000                     _TXB1D0	set	3894
   160  0000                     _TXB1D1	set	3895
   161  0000                     _TXB1D2	set	3896
   162  0000                     _TXB1D3	set	3897
   163  0000                     _TXB1D4	set	3898
   164  0000                     _TXB1D5	set	3899
   165  0000                     _TXB1D6	set	3900
   166  0000                     _TXB1D7	set	3901
   167  0000                     _TXB1DLC	set	3893
   168  0000                     _TXB1DLCbits	set	3893
   169  0000                     _TXB1EIDH	set	3891
   170  0000                     _TXB1EIDL	set	3892
   171  0000                     _TXB1SIDH	set	3889
   172  0000                     _TXB1SIDL	set	3890
   173  0000                     _TXB1SIDLbits	set	3890
   174  0000                     _TXB2CONbits	set	3872
   175  0000                     _TXB2D0	set	3878
   176  0000                     _TXB2D1	set	3879
   177  0000                     _TXB2D2	set	3880
   178  0000                     _TXB2D3	set	3881
   179  0000                     _TXB2D4	set	3882
   180  0000                     _TXB2D5	set	3883
   181  0000                     _TXB2D6	set	3884
   182  0000                     _TXB2D7	set	3885
   183  0000                     _TXB2DLC	set	3877
   184  0000                     _TXB2DLCbits	set	3877
   185  0000                     _TXB2EIDH	set	3875
   186  0000                     _TXB2EIDL	set	3876
   187  0000                     _TXB2SIDH	set	3873
   188  0000                     _TXB2SIDL	set	3874
   189  0000                     _TXB2SIDLbits	set	3874
   190  0000                     _ADCON0	set	4034
   191  0000                     _ADCON0bits	set	4034
   192  0000                     _ADCON1	set	4033
   193  0000                     _ADCON2	set	4032
   194  0000                     _ADRESH	set	4036
   195  0000                     _ADRESL	set	4035
   196  0000                     _BRGCON1	set	3952
   197  0000                     _BRGCON2	set	3953
   198  0000                     _BRGCON2bits	set	3953
   199  0000                     _BRGCON3	set	3954
   200  0000                     _BRGCON3bits	set	3954
   201  0000                     _CANCON	set	3951
   202  0000                     _CANCONbits	set	3951
   203  0000                     _CANSTAT	set	3950
   204  0000                     _COMSTATbits	set	3956
   205  0000                     _INTCON2bits	set	4081
   206  0000                     _INTCONbits	set	4082
   207  0000                     _IPR2bits	set	4002
   208  0000                     _IPR3bits	set	4005
   209  0000                     _LATA	set	3977
   210  0000                     _LATB	set	3978
   211  0000                     _LATC	set	3979
   212  0000                     _LATD	set	3980
   213  0000                     _LATE	set	3981
   214  0000                     _PIE1bits	set	3997
   215  0000                     _PIE2bits	set	4000
   216  0000                     _PIE3bits	set	4003
   217  0000                     _PIR1bits	set	3998
   218  0000                     _PIR2bits	set	4001
   219  0000                     _PIR3bits	set	4004
   220  0000                     _PORTAbits	set	3968
   221  0000                     _PORTC	set	3970
   222  0000                     _PORTCbits	set	3970
   223  0000                     _RCONbits	set	4048
   224  0000                     _RXB0CON	set	3936
   225  0000                     _RXB0CONbits	set	3936
   226  0000                     _RXB0D0	set	3942
   227  0000                     _RXB0D1	set	3943
   228  0000                     _RXB0D2	set	3944
   229  0000                     _RXB0D3	set	3945
   230  0000                     _RXB0D4	set	3946
   231  0000                     _RXB0D5	set	3947
   232  0000                     _RXB0D6	set	3948
   233  0000                     _RXB0D7	set	3949
   234  0000                     _RXB0DLC	set	3941
   235  0000                     _RXB0DLCbits	set	3941
   236  0000                     _RXB0EIDH	set	3939
   237  0000                     _RXB0EIDL	set	3940
   238  0000                     _RXB0SIDH	set	3937
   239  0000                     _RXB0SIDL	set	3938
   240  0000                     _RXB0SIDLbits	set	3938
   241  0000                     _RXERRCNT	set	3957
   242  0000                     _T0CON	set	4053
   243  0000                     _T0CONbits	set	4053
   244  0000                     _T3CON	set	4017
   245  0000                     _TMR0H	set	4055
   246  0000                     _TMR0L	set	4054
   247  0000                     _TMR3H	set	4019
   248  0000                     _TMR3L	set	4018
   249  0000                     _TRISA	set	3986
   250  0000                     _TRISB	set	3987
   251  0000                     _TRISC	set	3988
   252  0000                     _TRISD	set	3989
   253  0000                     _TRISE	set	3990
   254  0000                     _TXERRCNT	set	3958
   255                           
   256                           ; #config settings
   257  0000                     
   258                           	psect	cinit
   259  00375C                     __pcinit:
   260                           	opt stack 0
   261  00375C                     start_initialization:
   262                           	opt stack 0
   263  00375C                     __initialization:
   264                           	opt stack 0
   265                           
   266                           ; Clear objects allocated to BANK0 (46 bytes)
   267  00375C  EE00  F0B9         	lfsr	0,__pbssBANK0
   268  003760  0E2E               	movlw	46
   269  003762                     clear_0:
   270  003762  6AEE               	clrf	postinc0,c
   271  003764  06E8               	decf	wreg,f,c
   272  003766  E1FD               	bnz	clear_0
   273                           
   274                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   275  003768  6A44               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   276                           
   277                           ; Clear objects allocated to COMRAM (32 bytes)
   278  00376A  EE00  F001         	lfsr	0,__pbssCOMRAM
   279  00376E  0E20               	movlw	32
   280  003770                     clear_1:
   281  003770  6AEE               	clrf	postinc0,c
   282  003772  06E8               	decf	wreg,f,c
   283  003774  E1FD               	bnz	clear_1
   284                           
   285                           ; Initialize objects allocated to BANK0 (3 bytes)
   286                           ; load TBLPTR registers with __pidataBANK0
   287  003776  0EBA               	movlw	low __pidataBANK0
   288  003778  6EF6               	movwf	tblptrl,c
   289  00377A  0E39               	movlw	high __pidataBANK0
   290  00377C  6EF7               	movwf	tblptrh,c
   291  00377E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   292  003780  6EF8               	movwf	tblptru,c
   293  003782  0009               	tblrd		*+	;fetch initializer
   294  003784  CFF5 F0E7          	movff	tablat,__pdataBANK0
   295  003788  0009               	tblrd		*+	;fetch initializer
   296  00378A  CFF5 F0E8          	movff	tablat,__pdataBANK0+1
   297  00378E  0009               	tblrd		*+	;fetch initializer
   298  003790  CFF5 F0E9          	movff	tablat,__pdataBANK0+2
   299                           
   300                           ; Initialize objects allocated to COMRAM (4 bytes)
   301                           ; load TBLPTR registers with __pidataCOMRAM
   302  003794  0EB2               	movlw	low __pidataCOMRAM
   303  003796  6EF6               	movwf	tblptrl,c
   304  003798  0E39               	movlw	high __pidataCOMRAM
   305  00379A  6EF7               	movwf	tblptrh,c
   306  00379C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   307  00379E  6EF8               	movwf	tblptru,c
   308  0037A0  EE00  F040         	lfsr	0,__pdataCOMRAM
   309  0037A4  EE10 F004          	lfsr	1,4
   310  0037A8                     copy_data0:
   311  0037A8  0009               	tblrd		*+
   312  0037AA  CFF5 FFEE          	movff	tablat,postinc0
   313  0037AE  50E5               	movf	postdec1,w,c
   314  0037B0  50E1               	movf	fsr1l,w,c
   315  0037B2  E1FA               	bnz	copy_data0
   316  0037B4                     end_of_initialization:
   317                           	opt stack 0
   318  0037B4                     __end_of__initialization:
   319                           	opt stack 0
   320  0037B4  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   321  0037B6  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   322  0037B8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   323  0037BA  6EF8               	movwf	tblptru,c
   324  0037BC  0100               	movlb	0
   325  0037BE  EF2B  F011         	goto	_main	;jump to C main() function
   326                           tblptru	equ	0xFF8
   327                           tblptrh	equ	0xFF7
   328                           tblptrl	equ	0xFF6
   329                           tablat	equ	0xFF5
   330                           postinc0	equ	0xFEE
   331                           wreg	equ	0xFE8
   332                           postdec1	equ	0xFE5
   333                           fsr1l	equ	0xFE1
   334                           
   335                           	psect	bitbssCOMRAM
   336  000220                     __pbitbssCOMRAM:
   337                           	opt stack 0
   338  000220                     _remote_frame:
   339                           	opt stack 0
   340  000220                     	ds	1
   341                           tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           tblptrl	equ	0xFF6
   344                           tablat	equ	0xFF5
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           postdec1	equ	0xFE5
   348                           fsr1l	equ	0xFE1
   349                           
   350                           	psect	bssCOMRAM
   351  000001                     __pbssCOMRAM:
   352                           	opt stack 0
   353  000001                     _counter:
   354                           	opt stack 0
   355  000001                     	ds	4
   356  000005                     _timeCounter:
   357                           	opt stack 0
   358  000005                     	ds	4
   359  000009                     _calibration:
   360                           	opt stack 0
   361  000009                     	ds	2
   362  00000B                     _limiteDx:
   363                           	opt stack 0
   364  00000B                     	ds	2
   365  00000D                     _periodo:
   366                           	opt stack 0
   367  00000D                     	ds	2
   368  00000F                     _timer1:
   369                           	opt stack 0
   370  00000F                     	ds	2
   371  000011                     _theorySteering:
   372                           	opt stack 0
   373  000011                     	ds	1
   374  000012                     _msg:
   375                           	opt stack 0
   376  000012                     	ds	15
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           postdec1	equ	0xFE5
   384                           fsr1l	equ	0xFE1
   385                           
   386                           	psect	dataCOMRAM
   387  000040                     __pdataCOMRAM:
   388                           	opt stack 0
   389  000040                     _limiteSx:
   390                           	opt stack 0
   391  000040                     	ds	2
   392  000042                     _potenza:
   393                           	opt stack 0
   394  000042                     	ds	2
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           postdec1	equ	0xFE5
   402                           fsr1l	equ	0xFE1
   403                           
   404                           	psect	bssBANK0
   405  0000B9                     __pbssBANK0:
   406                           	opt stack 0
   407  0000B9                     _counter_array:
   408                           	opt stack 0
   409  0000B9                     	ds	8
   410  0000C1                     _currentSteering_array:
   411                           	opt stack 0
   412  0000C1                     	ds	8
   413  0000C9                     _duty_cycle:
   414                           	opt stack 0
   415  0000C9                     	ds	4
   416  0000CD                     _id:
   417                           	opt stack 0
   418  0000CD                     	ds	4
   419  0000D1                     _previousTimeCounter:
   420                           	opt stack 0
   421  0000D1                     	ds	4
   422  0000D5                     _timer:
   423                           	opt stack 0
   424  0000D5                     	ds	4
   425  0000D9                     _ADCResult:
   426                           	opt stack 0
   427  0000D9                     	ds	2
   428  0000DB                     _correzione:
   429                           	opt stack 0
   430  0000DB                     	ds	2
   431  0000DD                     _errore:
   432                           	opt stack 0
   433  0000DD                     	ds	2
   434  0000DF                     _data_array:
   435                           	opt stack 0
   436  0000DF                     	ds	8
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           postdec1	equ	0xFE5
   444                           fsr1l	equ	0xFE1
   445                           
   446                           	psect	dataBANK0
   447  0000E7                     __pdataBANK0:
   448                           	opt stack 0
   449  0000E7                     _currentSteering:
   450                           	opt stack 0
   451  0000E7                     	ds	1
   452  0000E8                     _delay_quartz_frequency_value:
   453                           	opt stack 0
   454  0000E8                     	ds	1
   455  0000E9                     _pastSteering:
   456                           	opt stack 0
   457  0000E9                     	ds	1
   458                           tblptru	equ	0xFF8
   459                           tblptrh	equ	0xFF7
   460                           tblptrl	equ	0xFF6
   461                           tablat	equ	0xFF5
   462                           postinc0	equ	0xFEE
   463                           wreg	equ	0xFE8
   464                           postdec1	equ	0xFE5
   465                           fsr1l	equ	0xFE1
   466                           
   467                           	psect	cstackBANK1
   468  000100                     __pcstackBANK1:
   469                           	opt stack 0
   470  000100                     ?___fladd:
   471                           	opt stack 0
   472  000100                     ___fladd@b:
   473                           	opt stack 0
   474                           
   475                           ; 4 bytes @ 0x0
   476  000100                     	ds	4
   477  000104                     ___fladd@a:
   478                           	opt stack 0
   479                           
   480                           ; 4 bytes @ 0x4
   481  000104                     	ds	4
   482  000108                     ??___fladd:
   483                           
   484                           ; 0 bytes @ 0x8
   485  000108                     	ds	8
   486  000110                     ___fladd@signs:
   487                           	opt stack 0
   488                           
   489                           ; 1 bytes @ 0x10
   490  000110                     	ds	1
   491  000111                     ___fladd@aexp:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0x11
   495  000111                     	ds	1
   496  000112                     ___fladd@bexp:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x12
   500  000112                     	ds	1
   501  000113                     ___fladd@grs:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x13
   505  000113                     	ds	1
   506  000114                     ?___fltol:
   507                           	opt stack 0
   508  000114                     ___fltol@f1:
   509                           	opt stack 0
   510                           
   511                           ; 4 bytes @ 0x14
   512  000114                     	ds	4
   513  000118                     ??___fltol:
   514                           
   515                           ; 0 bytes @ 0x18
   516  000118                     	ds	4
   517  00011C                     ??_main:
   518                           
   519                           ; 0 bytes @ 0x1C
   520  00011C                     	ds	8
   521                           tblptru	equ	0xFF8
   522                           tblptrh	equ	0xFF7
   523                           tblptrl	equ	0xFF6
   524                           tablat	equ	0xFF5
   525                           postinc0	equ	0xFEE
   526                           wreg	equ	0xFE8
   527                           postdec1	equ	0xFE5
   528                           fsr1l	equ	0xFE1
   529                           
   530                           	psect	cstackBANK0
   531  000060                     __pcstackBANK0:
   532                           	opt stack 0
   533  000060                     WriteTimer0@timer0:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x0
   537  000060                     	ds	2
   538  000062                     WriteTimer0@timer:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x2
   542  000062                     	ds	2
   543  000064                     ??_ISR_alta:
   544                           
   545                           ; 0 bytes @ 0x4
   546  000064                     	ds	15
   547  000073                     ?_abs:
   548                           	opt stack 0
   549  000073                     ?_ReadADC:
   550                           	opt stack 0
   551  000073                     ?___awdiv:
   552                           	opt stack 0
   553  000073                     ?___lwdiv:
   554                           	opt stack 0
   555  000073                     ?___lmul:
   556                           	opt stack 0
   557  000073                     CANOperationMode@mode:
   558                           	opt stack 0
   559  000073                     _CANisTxReady$2918:
   560                           	opt stack 0
   561  000073                     OpenADC@config2:
   562                           	opt stack 0
   563  000073                     abs@a:
   564                           	opt stack 0
   565  000073                     ___awdiv@dividend:
   566                           	opt stack 0
   567  000073                     ___lwdiv@dividend:
   568                           	opt stack 0
   569  000073                     CANsendMessage@identifier:
   570                           	opt stack 0
   571  000073                     CANSetMask@mask:
   572                           	opt stack 0
   573  000073                     CANSetFilter@filter:
   574                           	opt stack 0
   575  000073                     ___lmul@multiplier:
   576                           	opt stack 0
   577                           
   578                           ; 4 bytes @ 0x13
   579  000073                     	ds	1
   580  000074                     OpenADC@portconfig:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x14
   584  000074                     	ds	1
   585  000075                     ??_abs:
   586  000075                     ??_ReadADC:
   587  000075                     ??_OpenADC:
   588  000075                     ___awdiv@divisor:
   589                           	opt stack 0
   590  000075                     ___lwdiv@divisor:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x15
   594  000075                     	ds	2
   595  000077                     CANSetMask@type:
   596                           	opt stack 0
   597  000077                     CANSetFilter@type:
   598                           	opt stack 0
   599  000077                     OpenADC@config:
   600                           	opt stack 0
   601  000077                     ___awdiv@counter:
   602                           	opt stack 0
   603  000077                     CANsendMessage@data:
   604                           	opt stack 0
   605  000077                     ___lwdiv@quotient:
   606                           	opt stack 0
   607  000077                     ___lmul@multiplicand:
   608                           	opt stack 0
   609                           
   610                           ; 4 bytes @ 0x17
   611  000077                     	ds	1
   612  000078                     ??_CANSetMask:
   613  000078                     ??_CANSetFilter:
   614  000078                     ___awdiv@sign:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x18
   618  000078                     	ds	1
   619  000079                     CANsendMessage@dataLength:
   620                           	opt stack 0
   621  000079                     ___lwdiv@counter:
   622                           	opt stack 0
   623  000079                     ___awdiv@quotient:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x19
   627  000079                     	ds	1
   628  00007A                     CANsendMessage@flags:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x1A
   632  00007A                     	ds	1
   633  00007B                     ??_CANsendMessage:
   634  00007B                     ?___wmul:
   635                           	opt stack 0
   636  00007B                     ___wmul@multiplier:
   637                           	opt stack 0
   638  00007B                     ___lmul@product:
   639                           	opt stack 0
   640                           
   641                           ; 4 bytes @ 0x1B
   642  00007B                     	ds	1
   643  00007C                     CANSetMask@numBuffer:
   644                           	opt stack 0
   645  00007C                     CANSetFilter@numBuffer:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x1C
   649  00007C                     	ds	1
   650  00007D                     ___wmul@multiplicand:
   651                           	opt stack 0
   652  00007D                     CANSetMask@tamp:
   653                           	opt stack 0
   654  00007D                     CANSetFilter@tamp:
   655                           	opt stack 0
   656                           
   657                           ; 4 bytes @ 0x1D
   658  00007D                     	ds	2
   659  00007F                     ?___lldiv:
   660                           	opt stack 0
   661  00007F                     ___wmul@product:
   662                           	opt stack 0
   663  00007F                     CANsendMessage@tamp:
   664                           	opt stack 0
   665  00007F                     ___lldiv@dividend:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0x1F
   669  00007F                     	ds	2
   670  000081                     CANInitialize@phaseSeg1:
   671                           	opt stack 0
   672  000081                     delay_ms@value_ms:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x21
   676  000081                     	ds	1
   677  000082                     CANInitialize@phaseSeg2:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x22
   681  000082                     	ds	1
   682  000083                     CANInitialize@SJW:
   683                           	opt stack 0
   684  000083                     ___lldiv@divisor:
   685                           	opt stack 0
   686                           
   687                           ; 4 bytes @ 0x23
   688  000083                     	ds	1
   689  000084                     CANInitialize@BRP:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0x24
   693  000084                     	ds	1
   694  000085                     CANInitialize@flags:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x25
   698  000085                     	ds	1
   699  000086                     ??_CANInitialize:
   700                           
   701                           ; 0 bytes @ 0x26
   702  000086                     	ds	1
   703  000087                     ___lldiv@quotient:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x27
   707  000087                     	ds	3
   708  00008A                     CANInitialize@propSeg:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x2A
   712  00008A                     	ds	1
   713  00008B                     CANInitialize@FilterConfig1:
   714                           	opt stack 0
   715  00008B                     ___lldiv@counter:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x2B
   719  00008B                     	ds	1
   720  00008C                     ?___xxtofl:
   721                           	opt stack 0
   722  00008C                     CANInitialize@FilterConfig2:
   723                           	opt stack 0
   724  00008C                     ___xxtofl@val:
   725                           	opt stack 0
   726                           
   727                           ; 4 bytes @ 0x2C
   728  00008C                     	ds	1
   729  00008D                     
   730                           ; 0 bytes @ 0x2D
   731  00008D                     	ds	3
   732  000090                     ??___xxtofl:
   733                           
   734                           ; 0 bytes @ 0x30
   735  000090                     	ds	4
   736  000094                     ___xxtofl@sign:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x34
   740  000094                     	ds	1
   741  000095                     ___xxtofl@exp:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x35
   745  000095                     	ds	1
   746  000096                     ___xxtofl@arg:
   747                           	opt stack 0
   748                           
   749                           ; 4 bytes @ 0x36
   750  000096                     	ds	4
   751  00009A                     ?___fldiv:
   752                           	opt stack 0
   753  00009A                     ?___flmul:
   754                           	opt stack 0
   755  00009A                     ___fldiv@b:
   756                           	opt stack 0
   757  00009A                     ___flmul@b:
   758                           	opt stack 0
   759                           
   760                           ; 4 bytes @ 0x3A
   761  00009A                     	ds	4
   762  00009E                     ___fldiv@a:
   763                           	opt stack 0
   764  00009E                     ___flmul@a:
   765                           	opt stack 0
   766                           
   767                           ; 4 bytes @ 0x3E
   768  00009E                     	ds	4
   769  0000A2                     ??___fldiv:
   770  0000A2                     ??___flmul:
   771                           
   772                           ; 0 bytes @ 0x42
   773  0000A2                     	ds	4
   774  0000A6                     ___fldiv@sign:
   775                           	opt stack 0
   776  0000A6                     ___flmul@sign:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x46
   780  0000A6                     	ds	1
   781  0000A7                     ___fldiv@rem:
   782                           	opt stack 0
   783  0000A7                     ___flmul@grs:
   784                           	opt stack 0
   785                           
   786                           ; 4 bytes @ 0x47
   787  0000A7                     	ds	4
   788  0000AB                     ___flmul@aexp:
   789                           	opt stack 0
   790  0000AB                     ___fldiv@new_exp:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x4B
   794  0000AB                     	ds	1
   795  0000AC                     ___flmul@bexp:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x4C
   799  0000AC                     	ds	1
   800  0000AD                     ___fldiv@grs:
   801                           	opt stack 0
   802  0000AD                     ___flmul@prod:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0x4D
   806  0000AD                     	ds	4
   807  0000B1                     ___fldiv@bexp:
   808                           	opt stack 0
   809  0000B1                     ___flmul@temp:
   810                           	opt stack 0
   811                           
   812                           ; 2 bytes @ 0x51
   813  0000B1                     	ds	1
   814  0000B2                     ___fldiv@aexp:
   815                           	opt stack 0
   816                           
   817                           ; 1 bytes @ 0x52
   818  0000B2                     	ds	1
   819  0000B3                     ?___flneg:
   820                           	opt stack 0
   821  0000B3                     ___flneg@f1:
   822                           	opt stack 0
   823                           
   824                           ; 4 bytes @ 0x53
   825  0000B3                     	ds	4
   826  0000B7                     ___fltol@sign1:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0x57
   830  0000B7                     	ds	1
   831  0000B8                     ___fltol@exp1:
   832                           	opt stack 0
   833                           
   834                           ; 1 bytes @ 0x58
   835  0000B8                     	ds	1
   836                           tblptru	equ	0xFF8
   837                           tblptrh	equ	0xFF7
   838                           tblptrl	equ	0xFF6
   839                           tablat	equ	0xFF5
   840                           postinc0	equ	0xFEE
   841                           wreg	equ	0xFE8
   842                           postdec1	equ	0xFE5
   843                           fsr1l	equ	0xFE1
   844                           
   845                           	psect	cstackCOMRAM
   846  000021                     __pcstackCOMRAM:
   847                           	opt stack 0
   848  000021                     _CANisRxReady$2920:
   849                           	opt stack 0
   850  000021                     CANreceiveMessage@msg:
   851                           	opt stack 0
   852                           
   853                           ; 2 bytes @ 0x0
   854  000021                     	ds	2
   855  000023                     ??_CANreceiveMessage:
   856                           
   857                           ; 0 bytes @ 0x2
   858  000023                     	ds	8
   859  00002B                     CANreceiveMessage@error:
   860                           	opt stack 0
   861                           
   862                           ; 1 bytes @ 0xA
   863  00002B                     	ds	1
   864  00002C                     CANreceiveMessage@tamp:
   865                           	opt stack 0
   866                           
   867                           ; 1 bytes @ 0xB
   868  00002C                     	ds	1
   869  00002D                     ??_ISR_bassa:
   870                           
   871                           ; 0 bytes @ 0xC
   872  00002D                     	ds	19
   873                           tblptru	equ	0xFF8
   874                           tblptrh	equ	0xFF7
   875                           tblptrl	equ	0xFF6
   876                           tablat	equ	0xFF5
   877                           postinc0	equ	0xFEE
   878                           wreg	equ	0xFE8
   879                           postdec1	equ	0xFE5
   880                           fsr1l	equ	0xFE1
   881                           
   882 ;;
   883 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   884 ;;
   885 ;; *************** function _main *****************
   886 ;; Defined at:
   887 ;;		line 110 in file "newmain.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  2  653[None  ] int 
   894 ;; Registers used:
   895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   901 ;;      Params:         0       0       0       0
   902 ;;      Locals:         0       0       0       0
   903 ;;      Temps:          0       0       8       0
   904 ;;      Totals:         0       0       8       0
   905 ;;Total ram usage:        8 bytes
   906 ;; Hardware stack levels required when called:    7
   907 ;; This function calls:
   908 ;;		_CANisRXwarningON
   909 ;;		_CANisTXwarningON
   910 ;;		___awdiv
   911 ;;		___fladd
   912 ;;		___fldiv
   913 ;;		___flmul
   914 ;;		___flneg
   915 ;;		___fltol
   916 ;;		___lldiv
   917 ;;		___lmul
   918 ;;		___wmul
   919 ;;		___xxtofl
   920 ;;		_abs
   921 ;;		_calibrazione
   922 ;;		_configurazione_iniziale
   923 ;;		_delay_ms
   924 ;;		_send_data
   925 ;; This function is called by:
   926 ;;		Startup code after reset
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text0
   931  002256                     __ptext0:
   932                           	opt stack 0
   933  002256                     _main:
   934                           	opt stack 24
   935                           
   936                           ;newmain.c: 111: configurazione_iniziale();
   937                           
   938                           ;incstack = 0
   939  002256  EC70  F019         	call	_configurazione_iniziale	;wreg free
   940                           
   941                           ;newmain.c: 113: PORTC = 0xFF;
   942  00225A  6882               	setf	3970,c	;volatile
   943                           
   944                           ;newmain.c: 114: delay_ms(100);
   945  00225C  0E00               	movlw	0
   946  00225E  0100               	movlb	0	; () banked
   947  002260  6F82               	movwf	(delay_ms@value_ms+1)& (0+255),b
   948  002262  0E64               	movlw	100
   949  002264  6F81               	movwf	delay_ms@value_ms& (0+255),b
   950  002266  EC23  F01C         	call	_delay_ms	;wreg free
   951                           
   952                           ;newmain.c: 115: PORTC = 0x00;
   953  00226A  0E00               	movlw	0
   954  00226C  6E82               	movwf	3970,c	;volatile
   955                           
   956                           ;newmain.c: 116: delay_ms(100);
   957  00226E  0E00               	movlw	0
   958  002270  0100               	movlb	0	; () banked
   959  002272  6F82               	movwf	(delay_ms@value_ms+1)& (0+255),b
   960  002274  0E64               	movlw	100
   961  002276  6F81               	movwf	delay_ms@value_ms& (0+255),b
   962  002278  EC23  F01C         	call	_delay_ms	;wreg free
   963                           
   964                           ;newmain.c: 118: TMR0H = 0xdd;
   965  00227C  0EDD               	movlw	221
   966  00227E  6ED7               	movwf	4055,c	;volatile
   967                           
   968                           ;newmain.c: 119: TMR0L = 0xa0;
   969  002280  0EA0               	movlw	160
   970  002282  6ED6               	movwf	4054,c	;volatile
   971                           
   972                           ;newmain.c: 120: T0CONbits.TMR0ON = 1;
   973  002284  8ED5               	bsf	4053,7,c	;volatile
   974                           
   975                           ;newmain.c: 121: periodo = 0x4588;
   976  002286  0E45               	movlw	69
   977  002288  6E0E               	movwf	_periodo+1,c
   978  00228A  0E88               	movlw	136
   979  00228C  6E0D               	movwf	_periodo,c
   980  00228E                     l5210:
   981                           
   982                           ;newmain.c: 123: calibrazione();
   983  00228E  ECE1  F01B         	call	_calibrazione	;wreg free
   984                           
   985                           ;newmain.c: 124: if (timeCounter - previousTimeCounter > 2) {
   986  002292  C0D1  F11C         	movff	_previousTimeCounter,??_main
   987  002296  C0D2  F11D         	movff	_previousTimeCounter+1,??_main+1
   988  00229A  C0D3  F11E         	movff	_previousTimeCounter+2,??_main+2
   989  00229E  C0D4  F11F         	movff	_previousTimeCounter+3,??_main+3
   990  0022A2  0101               	movlb	1	; () banked
   991  0022A4  1F1C               	comf	??_main& (0+255),f,b
   992  0022A6  1F1D               	comf	(??_main+1)& (0+255),f,b
   993  0022A8  1F1E               	comf	(??_main+2)& (0+255),f,b
   994  0022AA  1F1F               	comf	(??_main+3)& (0+255),f,b
   995  0022AC  2B1C               	incf	??_main& (0+255),f,b
   996  0022AE  0E00               	movlw	0
   997  0022B0  231D               	addwfc	(??_main+1)& (0+255),f,b
   998  0022B2  231E               	addwfc	(??_main+2)& (0+255),f,b
   999  0022B4  231F               	addwfc	(??_main+3)& (0+255),f,b
  1000  0022B6  5005               	movf	_timeCounter,w,c
  1001  0022B8  0101               	movlb	1	; () banked
  1002  0022BA  251C               	addwf	??_main& (0+255),w,b
  1003  0022BC  0101               	movlb	1	; () banked
  1004  0022BE  6F20               	movwf	(??_main+4)& (0+255),b
  1005  0022C0  5006               	movf	_timeCounter+1,w,c
  1006  0022C2  0101               	movlb	1	; () banked
  1007  0022C4  211D               	addwfc	(??_main+1)& (0+255),w,b
  1008  0022C6  0101               	movlb	1	; () banked
  1009  0022C8  6F21               	movwf	(??_main+5)& (0+255),b
  1010  0022CA  5007               	movf	_timeCounter+2,w,c
  1011  0022CC  0101               	movlb	1	; () banked
  1012  0022CE  211E               	addwfc	(??_main+2)& (0+255),w,b
  1013  0022D0  0101               	movlb	1	; () banked
  1014  0022D2  6F22               	movwf	(??_main+6)& (0+255),b
  1015  0022D4  5008               	movf	_timeCounter+3,w,c
  1016  0022D6  0101               	movlb	1	; () banked
  1017  0022D8  211F               	addwfc	(??_main+3)& (0+255),w,b
  1018  0022DA  0101               	movlb	1	; () banked
  1019  0022DC  6F23               	movwf	(??_main+7)& (0+255),b
  1020  0022DE  0101               	movlb	1	; () banked
  1021  0022E0  5123               	movf	(??_main+7)& (0+255),w,b
  1022  0022E2  0101               	movlb	1	; () banked
  1023  0022E4  1122               	iorwf	(??_main+6)& (0+255),w,b
  1024  0022E6  0101               	movlb	1	; () banked
  1025  0022E8  1121               	iorwf	(??_main+5)& (0+255),w,b
  1026  0022EA  E105               	bnz	u6780
  1027  0022EC  0E03               	movlw	3
  1028  0022EE  0101               	movlb	1	; () banked
  1029  0022F0  5D20               	subwf	(??_main+4)& (0+255),w,b
  1030  0022F2  A0D8               	btfss	status,0,c
  1031  0022F4  D0E5               	goto	l5232
  1032  0022F6                     u6780:
  1033                           
  1034                           ; BSR set to: 1
  1035                           ;newmain.c: 125: errore = pastSteering - currentSteering;
  1036  0022F6  0100               	movlb	0	; () banked
  1037  0022F8  51E7               	movf	_currentSteering& (0+255),w,b
  1038  0022FA  0101               	movlb	1	; () banked
  1039  0022FC  6F1C               	movwf	??_main& (0+255),b
  1040  0022FE  6B1D               	clrf	(??_main+1)& (0+255),b
  1041  002300  0101               	movlb	1	; () banked
  1042  002302  1F1C               	comf	??_main& (0+255),f,b
  1043  002304  1F1D               	comf	(??_main+1)& (0+255),f,b
  1044  002306  4B1C               	infsnz	??_main& (0+255),f,b
  1045  002308  2B1D               	incf	(??_main+1)& (0+255),f,b
  1046  00230A  0100               	movlb	0	; () banked
  1047  00230C  51E9               	movf	_pastSteering& (0+255),w,b
  1048  00230E  0101               	movlb	1	; () banked
  1049  002310  251C               	addwf	??_main& (0+255),w,b
  1050  002312  0100               	movlb	0	; () banked
  1051  002314  6FDD               	movwf	_errore& (0+255),b
  1052  002316  0E00               	movlw	0
  1053  002318  0101               	movlb	1	; () banked
  1054  00231A  211D               	addwfc	(??_main+1)& (0+255),w,b
  1055  00231C  0100               	movlb	0	; () banked
  1056  00231E  6FDE               	movwf	(_errore+1)& (0+255),b
  1057                           
  1058                           ; BSR set to: 0
  1059                           ;newmain.c: 126: errore = abs(errore);
  1060  002320  C0DD  F073         	movff	_errore,abs@a
  1061  002324  C0DE  F074         	movff	_errore+1,abs@a+1
  1062  002328  EC77  F01C         	call	_abs	;wreg free
  1063  00232C  C073  F0DD         	movff	?_abs,_errore
  1064  002330  C074  F0DE         	movff	?_abs+1,_errore+1
  1065                           
  1066                           ;newmain.c: 127: correzione = ((errore/15)*(errore/15));
  1067  002334  0E00               	movlw	0
  1068  002336  0100               	movlb	0	; () banked
  1069  002338  6F76               	movwf	(___awdiv@divisor+1)& (0+255),b
  1070  00233A  0E0F               	movlw	15
  1071  00233C  6F75               	movwf	___awdiv@divisor& (0+255),b
  1072  00233E  C0DD  F073         	movff	_errore,___awdiv@dividend
  1073  002342  C0DE  F074         	movff	_errore+1,___awdiv@dividend+1
  1074  002346  ECE3  F019         	call	___awdiv	;wreg free
  1075  00234A  C073  F07B         	movff	?___awdiv,___wmul@multiplier
  1076  00234E  C074  F07C         	movff	?___awdiv+1,___wmul@multiplier+1
  1077  002352  0E00               	movlw	0
  1078  002354  0100               	movlb	0	; () banked
  1079  002356  6F76               	movwf	(___awdiv@divisor+1)& (0+255),b
  1080  002358  0E0F               	movlw	15
  1081  00235A  6F75               	movwf	___awdiv@divisor& (0+255),b
  1082  00235C  C0DD  F073         	movff	_errore,___awdiv@dividend
  1083  002360  C0DE  F074         	movff	_errore+1,___awdiv@dividend+1
  1084  002364  ECE3  F019         	call	___awdiv	;wreg free
  1085  002368  C073  F07D         	movff	?___awdiv,___wmul@multiplicand
  1086  00236C  C074  F07E         	movff	?___awdiv+1,___wmul@multiplicand+1
  1087  002370  EC5C  F01C         	call	___wmul	;wreg free
  1088  002374  C07B  F0DB         	movff	?___wmul,_correzione
  1089  002378  C07C  F0DC         	movff	?___wmul+1,_correzione+1
  1090                           
  1091                           ;newmain.c: 128: if (correzione < 1) {
  1092  00237C  0100               	movlb	0	; () banked
  1093  00237E  BFDC               	btfsc	(_correzione+1)& (0+255),7,b
  1094  002380  D007               	goto	l5222
  1095  002382  0100               	movlb	0	; () banked
  1096  002384  51DC               	movf	(_correzione+1)& (0+255),w,b
  1097  002386  E10B               	bnz	l5224
  1098  002388  0100               	movlb	0	; () banked
  1099  00238A  05DB               	decf	_correzione& (0+255),w,b
  1100  00238C  B0D8               	btfsc	status,0,c
  1101  00238E  D007               	goto	l5224
  1102  002390                     l5222:
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;newmain.c: 129: duty_cycle = currentSteering;
  1106  002390  0100               	movlb	0	; () banked
  1107  002392  51E7               	movf	_currentSteering& (0+255),w,b
  1108  002394  0100               	movlb	0	; () banked
  1109  002396  6FC9               	movwf	_duty_cycle& (0+255),b
  1110  002398  6BCA               	clrf	(_duty_cycle+1)& (0+255),b
  1111  00239A  6BCB               	clrf	(_duty_cycle+2)& (0+255),b
  1112  00239C  6BCC               	clrf	(_duty_cycle+3)& (0+255),b
  1113  00239E                     l5224:
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;newmain.c: 130: }
  1117                           ;newmain.c: 131: if ((pastSteering - currentSteering) > 0) {
  1118  00239E  0100               	movlb	0	; () banked
  1119  0023A0  51E7               	movf	_currentSteering& (0+255),w,b
  1120  0023A2  0101               	movlb	1	; () banked
  1121  0023A4  6F1C               	movwf	??_main& (0+255),b
  1122  0023A6  6B1D               	clrf	(??_main+1)& (0+255),b
  1123  0023A8  0101               	movlb	1	; () banked
  1124  0023AA  1F1C               	comf	??_main& (0+255),f,b
  1125  0023AC  1F1D               	comf	(??_main+1)& (0+255),f,b
  1126  0023AE  4B1C               	infsnz	??_main& (0+255),f,b
  1127  0023B0  2B1D               	incf	(??_main+1)& (0+255),f,b
  1128  0023B2  0100               	movlb	0	; () banked
  1129  0023B4  51E9               	movf	_pastSteering& (0+255),w,b
  1130  0023B6  0101               	movlb	1	; () banked
  1131  0023B8  6F1E               	movwf	(??_main+2)& (0+255),b
  1132  0023BA  6B1F               	clrf	(??_main+3)& (0+255),b
  1133  0023BC  0101               	movlb	1	; () banked
  1134  0023BE  511C               	movf	??_main& (0+255),w,b
  1135  0023C0  0101               	movlb	1	; () banked
  1136  0023C2  271E               	addwf	(??_main+2)& (0+255),f,b
  1137  0023C4  0101               	movlb	1	; () banked
  1138  0023C6  511D               	movf	(??_main+1)& (0+255),w,b
  1139  0023C8  0101               	movlb	1	; () banked
  1140  0023CA  231F               	addwfc	(??_main+3)& (0+255),f,b
  1141  0023CC  0101               	movlb	1	; () banked
  1142  0023CE  BF1F               	btfsc	(??_main+3)& (0+255),7,b
  1143  0023D0  D029               	goto	l657
  1144  0023D2  0101               	movlb	1	; () banked
  1145  0023D4  511F               	movf	(??_main+3)& (0+255),w,b
  1146  0023D6  E104               	bnz	u6800
  1147  0023D8  0101               	movlb	1	; () banked
  1148  0023DA  051E               	decf	(??_main+2)& (0+255),w,b
  1149  0023DC  A0D8               	btfss	status,0,c
  1150  0023DE  D022               	goto	l657
  1151  0023E0                     u6800:
  1152                           
  1153                           ; BSR set to: 1
  1154                           ;newmain.c: 132: duty_cycle = duty_cycle + correzione;
  1155  0023E0  C0DB  F11C         	movff	_correzione,??_main
  1156  0023E4  C0DC  F11D         	movff	_correzione+1,??_main+1
  1157  0023E8  0E00               	movlw	0
  1158  0023EA  0101               	movlb	1	; () banked
  1159  0023EC  BF1D               	btfsc	(??_main+1)& (0+255),7,b
  1160  0023EE  0EFF               	movlw	255
  1161  0023F0  6F1E               	movwf	(??_main+2)& (0+255),b
  1162  0023F2  6F1F               	movwf	(??_main+3)& (0+255),b
  1163  0023F4  0100               	movlb	0	; () banked
  1164  0023F6  51C9               	movf	_duty_cycle& (0+255),w,b
  1165  0023F8  0101               	movlb	1	; () banked
  1166  0023FA  251C               	addwf	??_main& (0+255),w,b
  1167  0023FC  0100               	movlb	0	; () banked
  1168  0023FE  6FC9               	movwf	_duty_cycle& (0+255),b
  1169  002400  0100               	movlb	0	; () banked
  1170  002402  51CA               	movf	(_duty_cycle+1)& (0+255),w,b
  1171  002404  0101               	movlb	1	; () banked
  1172  002406  211D               	addwfc	(??_main+1)& (0+255),w,b
  1173  002408  0100               	movlb	0	; () banked
  1174  00240A  6FCA               	movwf	(_duty_cycle+1)& (0+255),b
  1175  00240C  0100               	movlb	0	; () banked
  1176  00240E  51CB               	movf	(_duty_cycle+2)& (0+255),w,b
  1177  002410  0101               	movlb	1	; () banked
  1178  002412  211E               	addwfc	(??_main+2)& (0+255),w,b
  1179  002414  0100               	movlb	0	; () banked
  1180  002416  6FCB               	movwf	(_duty_cycle+2)& (0+255),b
  1181  002418  0100               	movlb	0	; () banked
  1182  00241A  51CC               	movf	(_duty_cycle+3)& (0+255),w,b
  1183  00241C  0101               	movlb	1	; () banked
  1184  00241E  211F               	addwfc	(??_main+3)& (0+255),w,b
  1185  002420  0100               	movlb	0	; () banked
  1186  002422  6FCC               	movwf	(_duty_cycle+3)& (0+255),b
  1187  002424                     l657:
  1188                           
  1189                           ;newmain.c: 133: }
  1190                           ;newmain.c: 134: if ((pastSteering - currentSteering) < 0) {
  1191  002424  0100               	movlb	0	; () banked
  1192  002426  51E7               	movf	_currentSteering& (0+255),w,b
  1193  002428  0101               	movlb	1	; () banked
  1194  00242A  6F1C               	movwf	??_main& (0+255),b
  1195  00242C  6B1D               	clrf	(??_main+1)& (0+255),b
  1196  00242E  0101               	movlb	1	; () banked
  1197  002430  1F1C               	comf	??_main& (0+255),f,b
  1198  002432  1F1D               	comf	(??_main+1)& (0+255),f,b
  1199  002434  4B1C               	infsnz	??_main& (0+255),f,b
  1200  002436  2B1D               	incf	(??_main+1)& (0+255),f,b
  1201  002438  0100               	movlb	0	; () banked
  1202  00243A  51E9               	movf	_pastSteering& (0+255),w,b
  1203  00243C  0101               	movlb	1	; () banked
  1204  00243E  6F1E               	movwf	(??_main+2)& (0+255),b
  1205  002440  6B1F               	clrf	(??_main+3)& (0+255),b
  1206  002442  0101               	movlb	1	; () banked
  1207  002444  511C               	movf	??_main& (0+255),w,b
  1208  002446  0101               	movlb	1	; () banked
  1209  002448  271E               	addwf	(??_main+2)& (0+255),f,b
  1210  00244A  0101               	movlb	1	; () banked
  1211  00244C  511D               	movf	(??_main+1)& (0+255),w,b
  1212  00244E  0101               	movlb	1	; () banked
  1213  002450  231F               	addwfc	(??_main+3)& (0+255),f,b
  1214  002452  0101               	movlb	1	; () banked
  1215  002454  AF1F               	btfss	(??_main+3)& (0+255),7,b
  1216  002456  D02C               	goto	l5230
  1217                           
  1218                           ; BSR set to: 1
  1219                           ;newmain.c: 135: duty_cycle = duty_cycle - correzione;
  1220  002458  C0DB  F11C         	movff	_correzione,??_main
  1221  00245C  C0DC  F11D         	movff	_correzione+1,??_main+1
  1222  002460  0E00               	movlw	0
  1223  002462  0101               	movlb	1	; () banked
  1224  002464  BF1D               	btfsc	(??_main+1)& (0+255),7,b
  1225  002466  0EFF               	movlw	255
  1226  002468  6F1E               	movwf	(??_main+2)& (0+255),b
  1227  00246A  6F1F               	movwf	(??_main+3)& (0+255),b
  1228  00246C  0101               	movlb	1	; () banked
  1229  00246E  1F1C               	comf	??_main& (0+255),f,b
  1230  002470  1F1D               	comf	(??_main+1)& (0+255),f,b
  1231  002472  1F1E               	comf	(??_main+2)& (0+255),f,b
  1232  002474  1F1F               	comf	(??_main+3)& (0+255),f,b
  1233  002476  2B1C               	incf	??_main& (0+255),f,b
  1234  002478  0E00               	movlw	0
  1235  00247A  231D               	addwfc	(??_main+1)& (0+255),f,b
  1236  00247C  231E               	addwfc	(??_main+2)& (0+255),f,b
  1237  00247E  231F               	addwfc	(??_main+3)& (0+255),f,b
  1238  002480  0100               	movlb	0	; () banked
  1239  002482  51C9               	movf	_duty_cycle& (0+255),w,b
  1240  002484  0101               	movlb	1	; () banked
  1241  002486  251C               	addwf	??_main& (0+255),w,b
  1242  002488  0100               	movlb	0	; () banked
  1243  00248A  6FC9               	movwf	_duty_cycle& (0+255),b
  1244  00248C  0100               	movlb	0	; () banked
  1245  00248E  51CA               	movf	(_duty_cycle+1)& (0+255),w,b
  1246  002490  0101               	movlb	1	; () banked
  1247  002492  211D               	addwfc	(??_main+1)& (0+255),w,b
  1248  002494  0100               	movlb	0	; () banked
  1249  002496  6FCA               	movwf	(_duty_cycle+1)& (0+255),b
  1250  002498  0100               	movlb	0	; () banked
  1251  00249A  51CB               	movf	(_duty_cycle+2)& (0+255),w,b
  1252  00249C  0101               	movlb	1	; () banked
  1253  00249E  211E               	addwfc	(??_main+2)& (0+255),w,b
  1254  0024A0  0100               	movlb	0	; () banked
  1255  0024A2  6FCB               	movwf	(_duty_cycle+2)& (0+255),b
  1256  0024A4  0100               	movlb	0	; () banked
  1257  0024A6  51CC               	movf	(_duty_cycle+3)& (0+255),w,b
  1258  0024A8  0101               	movlb	1	; () banked
  1259  0024AA  211F               	addwfc	(??_main+3)& (0+255),w,b
  1260  0024AC  0100               	movlb	0	; () banked
  1261  0024AE  6FCC               	movwf	(_duty_cycle+3)& (0+255),b
  1262  0024B0                     l5230:
  1263                           
  1264                           ;newmain.c: 136: }
  1265                           ;newmain.c: 138: previousTimeCounter = timeCounter;
  1266  0024B0  C005  F0D1         	movff	_timeCounter,_previousTimeCounter
  1267  0024B4  C006  F0D2         	movff	_timeCounter+1,_previousTimeCounter+1
  1268  0024B8  C007  F0D3         	movff	_timeCounter+2,_previousTimeCounter+2
  1269  0024BC  C008  F0D4         	movff	_timeCounter+3,_previousTimeCounter+3
  1270  0024C0                     l5232:
  1271                           
  1272                           ;newmain.c: 139: }
  1273                           ;newmain.c: 140: if (PORTCbits.RC0 == 0) {
  1274  0024C0  B082               	btfsc	3970,0,c	;volatile
  1275  0024C2  D100               	goto	l5242
  1276                           
  1277                           ;newmain.c: 141: timer = (((duty_cycle * 700) / 90) + 800) / 0.5;
  1278  0024C4  0E00               	movlw	0
  1279  0024C6  0100               	movlb	0	; () banked
  1280  0024C8  6F9E               	movwf	___fldiv@a& (0+255),b
  1281  0024CA  0E00               	movlw	0
  1282  0024CC  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
  1283  0024CE  0E00               	movlw	0
  1284  0024D0  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
  1285  0024D2  0E3F               	movlw	63
  1286  0024D4  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
  1287  0024D6  0E5A               	movlw	90
  1288  0024D8  0100               	movlb	0	; () banked
  1289  0024DA  6F83               	movwf	___lldiv@divisor& (0+255),b
  1290  0024DC  0E00               	movlw	0
  1291  0024DE  6F84               	movwf	(___lldiv@divisor+1)& (0+255),b
  1292  0024E0  0E00               	movlw	0
  1293  0024E2  6F85               	movwf	(___lldiv@divisor+2)& (0+255),b
  1294  0024E4  0E00               	movlw	0
  1295  0024E6  6F86               	movwf	(___lldiv@divisor+3)& (0+255),b
  1296  0024E8  C0C9  F073         	movff	_duty_cycle,___lmul@multiplier
  1297  0024EC  C0CA  F074         	movff	_duty_cycle+1,___lmul@multiplier+1
  1298  0024F0  C0CB  F075         	movff	_duty_cycle+2,___lmul@multiplier+2
  1299  0024F4  C0CC  F076         	movff	_duty_cycle+3,___lmul@multiplier+3
  1300  0024F8  0EBC               	movlw	188
  1301  0024FA  0100               	movlb	0	; () banked
  1302  0024FC  6F77               	movwf	___lmul@multiplicand& (0+255),b
  1303  0024FE  0E02               	movlw	2
  1304  002500  6F78               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1305  002502  0E00               	movlw	0
  1306  002504  6F79               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1307  002506  0E00               	movlw	0
  1308  002508  6F7A               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1309  00250A  EC73  F01B         	call	___lmul	;wreg free
  1310  00250E  C073  F07F         	movff	?___lmul,___lldiv@dividend
  1311  002512  C074  F080         	movff	?___lmul+1,___lldiv@dividend+1
  1312  002516  C075  F081         	movff	?___lmul+2,___lldiv@dividend+2
  1313  00251A  C076  F082         	movff	?___lmul+3,___lldiv@dividend+3
  1314  00251E  EC42  F01A         	call	___lldiv	;wreg free
  1315  002522  0E20               	movlw	32
  1316  002524  0100               	movlb	0	; () banked
  1317  002526  257F               	addwf	?___lldiv& (0+255),w,b
  1318  002528  0100               	movlb	0	; () banked
  1319  00252A  6F8C               	movwf	___xxtofl@val& (0+255),b
  1320  00252C  0E03               	movlw	3
  1321  00252E  0100               	movlb	0	; () banked
  1322  002530  2180               	addwfc	(?___lldiv+1)& (0+255),w,b
  1323  002532  0100               	movlb	0	; () banked
  1324  002534  6F8D               	movwf	(___xxtofl@val+1)& (0+255),b
  1325  002536  0E00               	movlw	0
  1326  002538  0100               	movlb	0	; () banked
  1327  00253A  2181               	addwfc	(?___lldiv+2)& (0+255),w,b
  1328  00253C  0100               	movlb	0	; () banked
  1329  00253E  6F8E               	movwf	(___xxtofl@val+2)& (0+255),b
  1330  002540  0E00               	movlw	0
  1331  002542  0100               	movlb	0	; () banked
  1332  002544  2182               	addwfc	(?___lldiv+3)& (0+255),w,b
  1333  002546  0100               	movlb	0	; () banked
  1334  002548  6F8F               	movwf	(___xxtofl@val+3)& (0+255),b
  1335  00254A  0E00               	movlw	0
  1336  00254C  EC20  F017         	call	___xxtofl
  1337  002550  C08C  F09A         	movff	?___xxtofl,___fldiv@b
  1338  002554  C08D  F09B         	movff	?___xxtofl+1,___fldiv@b+1
  1339  002558  C08E  F09C         	movff	?___xxtofl+2,___fldiv@b+2
  1340  00255C  C08F  F09D         	movff	?___xxtofl+3,___fldiv@b+3
  1341  002560  EC71  F013         	call	___fldiv	;wreg free
  1342  002564  C09A  F114         	movff	?___fldiv,___fltol@f1
  1343  002568  C09B  F115         	movff	?___fldiv+1,___fltol@f1+1
  1344  00256C  C09C  F116         	movff	?___fldiv+2,___fltol@f1+2
  1345  002570  C09D  F117         	movff	?___fldiv+3,___fltol@f1+3
  1346  002574  ECEA  F018         	call	___fltol	;wreg free
  1347  002578  C114  F0D5         	movff	?___fltol,_timer
  1348  00257C  C115  F0D6         	movff	?___fltol+1,_timer+1
  1349  002580  C116  F0D7         	movff	?___fltol+2,_timer+2
  1350  002584  C117  F0D8         	movff	?___fltol+3,_timer+3
  1351                           
  1352                           ;newmain.c: 142: timer1 = 65536 - timer;
  1353  002588  C0D5  F11C         	movff	_timer,??_main
  1354  00258C  C0D6  F11D         	movff	_timer+1,??_main+1
  1355  002590  0101               	movlb	1	; () banked
  1356  002592  1F1C               	comf	??_main& (0+255),f,b
  1357  002594  1F1D               	comf	(??_main+1)& (0+255),f,b
  1358  002596  4B1C               	infsnz	??_main& (0+255),f,b
  1359  002598  2B1D               	incf	(??_main+1)& (0+255),f,b
  1360  00259A  C11C  F00F         	movff	??_main,_timer1
  1361  00259E  C11D  F010         	movff	??_main+1,_timer1+1
  1362                           
  1363                           ; BSR set to: 1
  1364                           ;newmain.c: 143: periodo = 20000 - (timer * 0.5);
  1365  0025A2  0E00               	movlw	0
  1366  0025A4  0101               	movlb	1	; () banked
  1367  0025A6  6F04               	movwf	___fladd@a& (0+255),b
  1368  0025A8  0E40               	movlw	64
  1369  0025AA  6F05               	movwf	(___fladd@a+1)& (0+255),b
  1370  0025AC  0E9C               	movlw	156
  1371  0025AE  6F06               	movwf	(___fladd@a+2)& (0+255),b
  1372  0025B0  0E46               	movlw	70
  1373  0025B2  6F07               	movwf	(___fladd@a+3)& (0+255),b
  1374  0025B4  0E00               	movlw	0
  1375  0025B6  0100               	movlb	0	; () banked
  1376  0025B8  6F9E               	movwf	___flmul@a& (0+255),b
  1377  0025BA  0E00               	movlw	0
  1378  0025BC  6F9F               	movwf	(___flmul@a+1)& (0+255),b
  1379  0025BE  0E00               	movlw	0
  1380  0025C0  6FA0               	movwf	(___flmul@a+2)& (0+255),b
  1381  0025C2  0E3F               	movlw	63
  1382  0025C4  6FA1               	movwf	(___flmul@a+3)& (0+255),b
  1383  0025C6  C0D5  F08C         	movff	_timer,___xxtofl@val
  1384  0025CA  C0D6  F08D         	movff	_timer+1,___xxtofl@val+1
  1385  0025CE  C0D7  F08E         	movff	_timer+2,___xxtofl@val+2
  1386  0025D2  C0D8  F08F         	movff	_timer+3,___xxtofl@val+3
  1387  0025D6  0E00               	movlw	0
  1388  0025D8  EC20  F017         	call	___xxtofl
  1389  0025DC  C08C  F09A         	movff	?___xxtofl,___flmul@b
  1390  0025E0  C08D  F09B         	movff	?___xxtofl+1,___flmul@b+1
  1391  0025E4  C08E  F09C         	movff	?___xxtofl+2,___flmul@b+2
  1392  0025E8  C08F  F09D         	movff	?___xxtofl+3,___flmul@b+3
  1393  0025EC  ECD8  F00E         	call	___flmul	;wreg free
  1394  0025F0  C09A  F0B3         	movff	?___flmul,___flneg@f1
  1395  0025F4  C09B  F0B4         	movff	?___flmul+1,___flneg@f1+1
  1396  0025F8  C09C  F0B5         	movff	?___flmul+2,___flneg@f1+2
  1397  0025FC  C09D  F0B6         	movff	?___flmul+3,___flneg@f1+3
  1398  002600  EC40  F01C         	call	___flneg	;wreg free
  1399  002604  C0B3  F100         	movff	?___flneg,___fladd@b
  1400  002608  C0B4  F101         	movff	?___flneg+1,___fladd@b+1
  1401  00260C  C0B5  F102         	movff	?___flneg+2,___fladd@b+2
  1402  002610  C0B6  F103         	movff	?___flneg+3,___fladd@b+3
  1403  002614  EC84  F00C         	call	___fladd	;wreg free
  1404  002618  C100  F114         	movff	?___fladd,___fltol@f1
  1405  00261C  C101  F115         	movff	?___fladd+1,___fltol@f1+1
  1406  002620  C102  F116         	movff	?___fladd+2,___fltol@f1+2
  1407  002624  C103  F117         	movff	?___fladd+3,___fltol@f1+3
  1408  002628  ECEA  F018         	call	___fltol	;wreg free
  1409  00262C  C114  F00D         	movff	?___fltol,_periodo
  1410  002630  C115  F00E         	movff	?___fltol+1,_periodo+1
  1411                           
  1412                           ;newmain.c: 144: periodo = (65536 - (periodo / 0.5));
  1413  002634  0E00               	movlw	0
  1414  002636  0101               	movlb	1	; () banked
  1415  002638  6F04               	movwf	___fladd@a& (0+255),b
  1416  00263A  0E00               	movlw	0
  1417  00263C  6F05               	movwf	(___fladd@a+1)& (0+255),b
  1418  00263E  0E80               	movlw	128
  1419  002640  6F06               	movwf	(___fladd@a+2)& (0+255),b
  1420  002642  0E47               	movlw	71
  1421  002644  6F07               	movwf	(___fladd@a+3)& (0+255),b
  1422  002646  0E00               	movlw	0
  1423  002648  0100               	movlb	0	; () banked
  1424  00264A  6F9E               	movwf	___fldiv@a& (0+255),b
  1425  00264C  0E00               	movlw	0
  1426  00264E  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
  1427  002650  0E00               	movlw	0
  1428  002652  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
  1429  002654  0E3F               	movlw	63
  1430  002656  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
  1431  002658  C00D  F08C         	movff	_periodo,___xxtofl@val
  1432  00265C  C00E  F08D         	movff	_periodo+1,___xxtofl@val+1
  1433  002660  0100               	movlb	0	; () banked
  1434  002662  6B8E               	clrf	(___xxtofl@val+2)& (0+255),b
  1435  002664  6B8F               	clrf	(___xxtofl@val+3)& (0+255),b
  1436  002666  0E00               	movlw	0
  1437  002668  EC20  F017         	call	___xxtofl
  1438  00266C  C08C  F09A         	movff	?___xxtofl,___fldiv@b
  1439  002670  C08D  F09B         	movff	?___xxtofl+1,___fldiv@b+1
  1440  002674  C08E  F09C         	movff	?___xxtofl+2,___fldiv@b+2
  1441  002678  C08F  F09D         	movff	?___xxtofl+3,___fldiv@b+3
  1442  00267C  EC71  F013         	call	___fldiv	;wreg free
  1443  002680  C09A  F0B3         	movff	?___fldiv,___flneg@f1
  1444  002684  C09B  F0B4         	movff	?___fldiv+1,___flneg@f1+1
  1445  002688  C09C  F0B5         	movff	?___fldiv+2,___flneg@f1+2
  1446  00268C  C09D  F0B6         	movff	?___fldiv+3,___flneg@f1+3
  1447  002690  EC40  F01C         	call	___flneg	;wreg free
  1448  002694  C0B3  F100         	movff	?___flneg,___fladd@b
  1449  002698  C0B4  F101         	movff	?___flneg+1,___fladd@b+1
  1450  00269C  C0B5  F102         	movff	?___flneg+2,___fladd@b+2
  1451  0026A0  C0B6  F103         	movff	?___flneg+3,___fladd@b+3
  1452  0026A4  EC84  F00C         	call	___fladd	;wreg free
  1453  0026A8  C100  F114         	movff	?___fladd,___fltol@f1
  1454  0026AC  C101  F115         	movff	?___fladd+1,___fltol@f1+1
  1455  0026B0  C102  F116         	movff	?___fladd+2,___fltol@f1+2
  1456  0026B4  C103  F117         	movff	?___fladd+3,___fltol@f1+3
  1457  0026B8  ECEA  F018         	call	___fltol	;wreg free
  1458  0026BC  C114  F00D         	movff	?___fltol,_periodo
  1459  0026C0  C115  F00E         	movff	?___fltol+1,_periodo+1
  1460  0026C4                     l5242:
  1461                           
  1462                           ;newmain.c: 145: }
  1463                           ;newmain.c: 146: if (remote_frame == 1) {
  1464  0026C4  B044               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c
  1465                           
  1466                           ;newmain.c: 147: send_data();
  1467  0026C6  EC04  F01C         	call	_send_data	;wreg free
  1468                           
  1469                           ;newmain.c: 148: }
  1470                           ;newmain.c: 149: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
  1471  0026CA  ECCD  F01C         	call	_CANisTXwarningON	;wreg free
  1472  0026CE  06E8               	decf	wreg,f,c
  1473  0026D0  B4D8               	btfsc	status,2,c
  1474  0026D2  D005               	goto	l663
  1475  0026D4  ECD3  F01C         	call	_CANisRXwarningON	;wreg free
  1476  0026D8  06E8               	decf	wreg,f,c
  1477  0026DA  A4D8               	btfss	status,2,c
  1478  0026DC  D5D8               	goto	l5210
  1479  0026DE                     l663:
  1480                           
  1481                           ;newmain.c: 150: PORTAbits.RA5 = 1;
  1482  0026DE  8A80               	bsf	3968,5,c	;volatile
  1483  0026E0  D5D6               	goto	l5210
  1484  0026E2                     __end_of_main:
  1485                           	opt stack 0
  1486                           tblptru	equ	0xFF8
  1487                           tblptrh	equ	0xFF7
  1488                           tblptrl	equ	0xFF6
  1489                           tablat	equ	0xFF5
  1490                           postinc0	equ	0xFEE
  1491                           wreg	equ	0xFE8
  1492                           postdec1	equ	0xFE5
  1493                           fsr1l	equ	0xFE1
  1494                           status	equ	0xFD8
  1495                           
  1496 ;; *************** function _send_data *****************
  1497 ;; Defined at:
  1498 ;;		line 158 in file "newmain.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;		None               void
  1505 ;; Registers used:
  1506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1512 ;;      Params:         0       0       0       0
  1513 ;;      Locals:         0       0       0       0
  1514 ;;      Temps:          0       0       0       0
  1515 ;;      Totals:         0       0       0       0
  1516 ;;Total ram usage:        0 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    5
  1519 ;; This function calls:
  1520 ;;		_CANisTxReady
  1521 ;;		_CANsendMessage
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text1
  1528  003808                     __ptext1:
  1529                           	opt stack 0
  1530  003808                     _send_data:
  1531                           	opt stack 25
  1532                           
  1533                           ;newmain.c: 159: if (CANisTxReady()) {
  1534                           
  1535                           ;incstack = 0
  1536  003808  EC8D  F01C         	call	_CANisTxReady	;wreg free
  1537  00380C  0900               	iorlw	0
  1538  00380E  B4D8               	btfsc	status,2,c
  1539  003810  0012               	return	
  1540                           
  1541                           ;newmain.c: 160: if (remote_frame == 1) {
  1542  003812  A044               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1543  003814  D016               	goto	l4150
  1544                           
  1545                           ;newmain.c: 162: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG &
  1546                           ;newmain.c: 163: CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1547  003816  C0CD  F073         	movff	_id,CANsendMessage@identifier
  1548  00381A  C0CE  F074         	movff	_id+1,CANsendMessage@identifier+1
  1549  00381E  C0CF  F075         	movff	_id+2,CANsendMessage@identifier+2
  1550  003822  C0D0  F076         	movff	_id+3,CANsendMessage@identifier+3
  1551  003826  0EDF               	movlw	low _data_array
  1552  003828  0100               	movlb	0	; () banked
  1553  00382A  6F77               	movwf	CANsendMessage@data& (0+255),b
  1554  00382C  0E00               	movlw	high _data_array
  1555  00382E  0100               	movlb	0	; () banked
  1556  003830  6F78               	movwf	(CANsendMessage@data+1)& (0+255),b
  1557  003832  0E08               	movlw	8
  1558  003834  0100               	movlb	0	; () banked
  1559  003836  6F79               	movwf	CANsendMessage@dataLength& (0+255),b
  1560  003838  0EBC               	movlw	188
  1561  00383A  0100               	movlb	0	; () banked
  1562  00383C  6F7A               	movwf	CANsendMessage@flags& (0+255),b
  1563  00383E  EC38  F006         	call	_CANsendMessage	;wreg free
  1564  003842                     l4150:
  1565                           
  1566                           ;newmain.c: 168: }
  1567                           ;newmain.c: 169: remote_frame = 0;
  1568  003842  9044               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1569  003844  0012               	return	
  1570  003846                     __end_of_send_data:
  1571                           	opt stack 0
  1572                           tblptru	equ	0xFF8
  1573                           tblptrh	equ	0xFF7
  1574                           tblptrl	equ	0xFF6
  1575                           tablat	equ	0xFF5
  1576                           postinc0	equ	0xFEE
  1577                           wreg	equ	0xFE8
  1578                           postdec1	equ	0xFE5
  1579                           fsr1l	equ	0xFE1
  1580                           status	equ	0xFD8
  1581                           
  1582 ;; *************** function _CANsendMessage *****************
  1583 ;; Defined at:
  1584 ;;		line 294 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  identifier      4   19[BANK0 ] unsigned long 
  1587 ;;  data            2   23[BANK0 ] PTR unsigned char 
  1588 ;;		 -> data_array(8), 
  1589 ;;  dataLength      1   25[BANK0 ] unsigned char 
  1590 ;;  flags           1   26[BANK0 ] enum E16866
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  tamp            4   31[BANK0 ] unsigned long 
  1593 ;; Return value:  Size  Location     Type
  1594 ;;		None               void
  1595 ;; Registers used:
  1596 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1602 ;;      Params:         0       8       0       0
  1603 ;;      Locals:         0       4       0       0
  1604 ;;      Temps:          0       4       0       0
  1605 ;;      Totals:         0      16       0       0
  1606 ;;Total ram usage:       16 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    4
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_send_data
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text2
  1617  000C70                     __ptext2:
  1618                           	opt stack 0
  1619  000C70                     _CANsendMessage:
  1620                           	opt stack 25
  1621                           
  1622                           ;inc\CANlib.h: 296: unsigned long tamp;
  1623                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1624                           
  1625                           ;incstack = 0
  1626  000C70  010F               	movlb	15	; () banked
  1627  000C72  B740               	btfsc	64,3,b	;volatile
  1628  000C74  D13F               	goto	l369
  1629                           
  1630                           ; BSR set to: 15
  1631                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1632  000C76  C079  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1633                           
  1634                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1635  000C7A  0100               	movlb	0	; () banked
  1636  000C7C  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1637  000C7E  D003               	goto	l370
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1641  000C80  010F               	movlb	15	; () banked
  1642  000C82  8D45               	bsf	69,6,b	;volatile
  1643  000C84  D002               	goto	l371
  1644  000C86                     l370:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;inc\CANlib.h: 302: else
  1648                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1649  000C86  010F               	movlb	15	; () banked
  1650  000C88  9D45               	bcf	69,6,b	;volatile
  1651  000C8A                     l371:
  1652                           
  1653                           ; BSR set to: 15
  1654                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1655  000C8A  0100               	movlb	0	; () banked
  1656  000C8C  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1657  000C8E  D079               	goto	l372
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;inc\CANlib.h: 306: {
  1661                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1662  000C90  0100               	movlb	0	; () banked
  1663  000C92  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1664  000C94  0100               	movlb	0	; () banked
  1665  000C96  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1666  000C98  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1667  000C9A  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1668  000C9C  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1672  000C9E  C07F  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1676  000CA2  0E00               	movlw	0
  1677  000CA4  0100               	movlb	0	; () banked
  1678  000CA6  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1679  000CA8  0100               	movlb	0	; () banked
  1680  000CAA  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1681  000CAC  0EFF               	movlw	255
  1682  000CAE  0100               	movlb	0	; () banked
  1683  000CB0  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1684  000CB2  0100               	movlb	0	; () banked
  1685  000CB4  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1686  000CB6  0E00               	movlw	0
  1687  000CB8  0100               	movlb	0	; () banked
  1688  000CBA  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1689  000CBC  0100               	movlb	0	; () banked
  1690  000CBE  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1691  000CC0  0E00               	movlw	0
  1692  000CC2  0100               	movlb	0	; () banked
  1693  000CC4  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1694  000CC6  0100               	movlb	0	; () banked
  1695  000CC8  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1699  000CCA  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1700  000CCE  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1701  000CD2  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1702  000CD6  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1703  000CDA  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1704  000CDE  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1705  000CE2  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1706  000CE6  0100               	movlb	0	; () banked
  1707  000CE8  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1708  000CEA  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1709  000CEE  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1710  000CF2  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1711  000CF6  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1715  000CFA  C07F  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1719  000CFE  0E00               	movlw	0
  1720  000D00  010F               	movlb	15	; () banked
  1721  000D02  6F42               	movwf	66,b	;volatile
  1722                           
  1723                           ; BSR set to: 15
  1724                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1725  000D04  010F               	movlb	15	; () banked
  1726  000D06  8742               	bsf	66,3,b	;volatile
  1727                           
  1728                           ; BSR set to: 15
  1729                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1730  000D08  0100               	movlb	0	; () banked
  1731  000D0A  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1732  000D0C  D002               	goto	l373
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1736  000D0E  010F               	movlb	15	; () banked
  1737  000D10  8142               	bsf	66,0,b	;volatile
  1738  000D12                     l373:
  1739                           
  1740                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1741  000D12  0100               	movlb	0	; () banked
  1742  000D14  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1743  000D16  D002               	goto	l374
  1744                           
  1745                           ; BSR set to: 0
  1746                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1747  000D18  010F               	movlb	15	; () banked
  1748  000D1A  8342               	bsf	66,1,b	;volatile
  1749  000D1C                     l374:
  1750                           
  1751                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1752  000D1C  0100               	movlb	0	; () banked
  1753  000D1E  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1754  000D20  D002               	goto	l375
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1758  000D22  010F               	movlb	15	; () banked
  1759  000D24  8B42               	bsf	66,5,b	;volatile
  1760  000D26                     l375:
  1761                           
  1762                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1763  000D26  0100               	movlb	0	; () banked
  1764  000D28  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1765  000D2A  D002               	goto	l376
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1769  000D2C  010F               	movlb	15	; () banked
  1770  000D2E  8D42               	bsf	66,6,b	;volatile
  1771  000D30                     l376:
  1772                           
  1773                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1774  000D30  0100               	movlb	0	; () banked
  1775  000D32  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1776  000D34  D002               	goto	l3650
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1780  000D36  010F               	movlb	15	; () banked
  1781  000D38  8F42               	bsf	66,7,b	;volatile
  1782  000D3A                     l3650:
  1783                           
  1784                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1785  000D3A  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1786  000D3E  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1787  000D42  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1788  000D46  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1789  000D4A  0E16               	movlw	22
  1790  000D4C  D006               	goto	u4240
  1791  000D4E                     u4245:
  1792  000D4E  0100               	movlb	0	; () banked
  1793  000D50  90D8               	bcf	status,0,c
  1794  000D52  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1795  000D54  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1796  000D56  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1797  000D58  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1798  000D5A                     u4240:
  1799  000D5A  2EE8               	decfsz	wreg,f,c
  1800  000D5C  D7F8               	goto	u4245
  1801  000D5E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1802  000D62  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1803  000D66  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1804  000D6A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1808  000D6E  0100               	movlb	0	; () banked
  1809  000D70  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1810  000D72  0100               	movlb	0	; () banked
  1811  000D74  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1812  000D76  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1813  000D78  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1814  000D7A  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1818  000D7C  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1819                           
  1820                           ;inc\CANlib.h: 332: }
  1821  000D80  D059               	goto	l3670
  1822  000D82                     l372:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;inc\CANlib.h: 334: else
  1826                           ;inc\CANlib.h: 336: {
  1827                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1828  000D82  010F               	movlb	15	; () banked
  1829  000D84  9742               	bcf	66,3,b	;volatile
  1830                           
  1831                           ; BSR set to: 15
  1832                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1833  000D86  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1834  000D8A  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1835  000D8E  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1836  000D92  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1837  000D96  0E04               	movlw	4
  1838  000D98  D006               	goto	u4250
  1839  000D9A                     u4255:
  1840  000D9A  0100               	movlb	0	; () banked
  1841  000D9C  90D8               	bcf	status,0,c
  1842  000D9E  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1843  000DA0  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1844  000DA2  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1845  000DA4  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1846  000DA6                     u4250:
  1847  000DA6  2EE8               	decfsz	wreg,f,c
  1848  000DA8  D7F8               	goto	u4255
  1849  000DAA  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1850  000DAE  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1851  000DB2  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1852  000DB6  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1856  000DBA  0100               	movlb	0	; () banked
  1857  000DBC  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1858  000DBE  0100               	movlb	0	; () banked
  1859  000DC0  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1860  000DC2  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1861  000DC4  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1862  000DC6  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1866  000DC8  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1870  000DCC  0E07               	movlw	7
  1871  000DCE  0100               	movlb	0	; () banked
  1872  000DD0  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1873  000DD2  0100               	movlb	0	; () banked
  1874  000DD4  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1875  000DD6  0E00               	movlw	0
  1876  000DD8  0100               	movlb	0	; () banked
  1877  000DDA  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1878  000DDC  0100               	movlb	0	; () banked
  1879  000DDE  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1880  000DE0  0E00               	movlw	0
  1881  000DE2  0100               	movlb	0	; () banked
  1882  000DE4  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1883  000DE6  0100               	movlb	0	; () banked
  1884  000DE8  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1885  000DEA  0E00               	movlw	0
  1886  000DEC  0100               	movlb	0	; () banked
  1887  000DEE  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1888  000DF0  0100               	movlb	0	; () banked
  1889  000DF2  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1893  000DF4  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1894  000DF8  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1895  000DFC  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1896  000E00  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1897  000E04  0E05               	movlw	5
  1898  000E06                     u4265:
  1899  000E06  90D8               	bcf	status,0,c
  1900  000E08  0100               	movlb	0	; () banked
  1901  000E0A  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1902  000E0C  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1903  000E0E  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1904  000E10  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1905  000E12  2EE8               	decfsz	wreg,f,c
  1906  000E14  D7F8               	goto	u4265
  1907  000E16  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1908  000E1A  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1909  000E1E  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1910  000E22  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1914  000E26  010F               	movlb	15	; () banked
  1915  000E28  5142               	movf	66,w,b	;volatile
  1916  000E2A  0B1F               	andlw	31
  1917  000E2C  010F               	movlb	15	; () banked
  1918  000E2E  6F42               	movwf	66,b	;volatile
  1919                           
  1920                           ; BSR set to: 15
  1921                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1922  000E30  C07F  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1923  000E34                     l3670:
  1924                           
  1925                           ;inc\CANlib.h: 347: }
  1926                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1927  000E34  0100               	movlb	0	; () banked
  1928  000E36  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1929  000E38  D003               	goto	l379
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1933  000E3A  010F               	movlb	15	; () banked
  1934  000E3C  8140               	bsf	64,0,b	;volatile
  1935  000E3E  D002               	goto	l380
  1936  000E40                     l379:
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;inc\CANlib.h: 351: else
  1940                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1941  000E40  010F               	movlb	15	; () banked
  1942  000E42  9140               	bcf	64,0,b	;volatile
  1943  000E44                     l380:
  1944                           
  1945                           ; BSR set to: 15
  1946                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1947  000E44  0100               	movlb	0	; () banked
  1948  000E46  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1949  000E48  D003               	goto	l381
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1953  000E4A  010F               	movlb	15	; () banked
  1954  000E4C  8340               	bsf	64,1,b	;volatile
  1955  000E4E  D002               	goto	l3676
  1956  000E50                     l381:
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;inc\CANlib.h: 355: else
  1960                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1961  000E50  010F               	movlb	15	; () banked
  1962  000E52  9340               	bcf	64,1,b	;volatile
  1963  000E54                     l3676:
  1964                           
  1965                           ; BSR set to: 15
  1966                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1967  000E54  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1968  000E58  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1969  000E5C  50DF               	movf	indf2,w,c
  1970  000E5E  010F               	movlb	15	; () banked
  1971  000E60  6F46               	movwf	70,b	;volatile
  1972                           
  1973                           ; BSR set to: 15
  1974                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1975  000E62  0100               	movlb	0	; () banked
  1976  000E64  EE20 F001          	lfsr	2,1
  1977  000E68  5177               	movf	CANsendMessage@data& (0+255),w,b
  1978  000E6A  26D9               	addwf	fsr2l,f,c
  1979  000E6C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1980  000E6E  22DA               	addwfc	fsr2h,f,c
  1981  000E70  50DF               	movf	indf2,w,c
  1982  000E72  010F               	movlb	15	; () banked
  1983  000E74  6F47               	movwf	71,b	;volatile
  1984                           
  1985                           ; BSR set to: 15
  1986                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1987  000E76  0100               	movlb	0	; () banked
  1988  000E78  EE20 F002          	lfsr	2,2
  1989  000E7C  5177               	movf	CANsendMessage@data& (0+255),w,b
  1990  000E7E  26D9               	addwf	fsr2l,f,c
  1991  000E80  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1992  000E82  22DA               	addwfc	fsr2h,f,c
  1993  000E84  50DF               	movf	indf2,w,c
  1994  000E86  010F               	movlb	15	; () banked
  1995  000E88  6F48               	movwf	72,b	;volatile
  1996                           
  1997                           ; BSR set to: 15
  1998                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1999  000E8A  0100               	movlb	0	; () banked
  2000  000E8C  EE20 F003          	lfsr	2,3
  2001  000E90  5177               	movf	CANsendMessage@data& (0+255),w,b
  2002  000E92  26D9               	addwf	fsr2l,f,c
  2003  000E94  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2004  000E96  22DA               	addwfc	fsr2h,f,c
  2005  000E98  50DF               	movf	indf2,w,c
  2006  000E9A  010F               	movlb	15	; () banked
  2007  000E9C  6F49               	movwf	73,b	;volatile
  2008                           
  2009                           ; BSR set to: 15
  2010                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  2011  000E9E  0100               	movlb	0	; () banked
  2012  000EA0  EE20 F004          	lfsr	2,4
  2013  000EA4  5177               	movf	CANsendMessage@data& (0+255),w,b
  2014  000EA6  26D9               	addwf	fsr2l,f,c
  2015  000EA8  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2016  000EAA  22DA               	addwfc	fsr2h,f,c
  2017  000EAC  50DF               	movf	indf2,w,c
  2018  000EAE  010F               	movlb	15	; () banked
  2019  000EB0  6F4A               	movwf	74,b	;volatile
  2020                           
  2021                           ; BSR set to: 15
  2022                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  2023  000EB2  0100               	movlb	0	; () banked
  2024  000EB4  EE20 F005          	lfsr	2,5
  2025  000EB8  5177               	movf	CANsendMessage@data& (0+255),w,b
  2026  000EBA  26D9               	addwf	fsr2l,f,c
  2027  000EBC  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2028  000EBE  22DA               	addwfc	fsr2h,f,c
  2029  000EC0  50DF               	movf	indf2,w,c
  2030  000EC2  010F               	movlb	15	; () banked
  2031  000EC4  6F4B               	movwf	75,b	;volatile
  2032                           
  2033                           ; BSR set to: 15
  2034                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  2035  000EC6  0100               	movlb	0	; () banked
  2036  000EC8  EE20 F006          	lfsr	2,6
  2037  000ECC  5177               	movf	CANsendMessage@data& (0+255),w,b
  2038  000ECE  26D9               	addwf	fsr2l,f,c
  2039  000ED0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2040  000ED2  22DA               	addwfc	fsr2h,f,c
  2041  000ED4  50DF               	movf	indf2,w,c
  2042  000ED6  010F               	movlb	15	; () banked
  2043  000ED8  6F4C               	movwf	76,b	;volatile
  2044                           
  2045                           ; BSR set to: 15
  2046                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  2047  000EDA  0100               	movlb	0	; () banked
  2048  000EDC  EE20 F007          	lfsr	2,7
  2049  000EE0  5177               	movf	CANsendMessage@data& (0+255),w,b
  2050  000EE2  26D9               	addwf	fsr2l,f,c
  2051  000EE4  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2052  000EE6  22DA               	addwfc	fsr2h,f,c
  2053  000EE8  50DF               	movf	indf2,w,c
  2054  000EEA  010F               	movlb	15	; () banked
  2055  000EEC  6F4D               	movwf	77,b	;volatile
  2056                           
  2057                           ; BSR set to: 15
  2058                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2059  000EEE  010F               	movlb	15	; () banked
  2060  000EF0  8740               	bsf	64,3,b	;volatile
  2061                           
  2062                           ; BSR set to: 15
  2063                           ;inc\CANlib.h: 368: return;
  2064  000EF2  0012               	return	
  2065  000EF4                     l369:
  2066                           
  2067                           ; BSR set to: 15
  2068                           ;inc\CANlib.h: 369: }
  2069                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2070  000EF4  010F               	movlb	15	; () banked
  2071  000EF6  B730               	btfsc	48,3,b	;volatile
  2072  000EF8  D13F               	goto	l384
  2073                           
  2074                           ; BSR set to: 15
  2075                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  2076  000EFA  C079  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2077                           
  2078                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  2079  000EFE  0100               	movlb	0	; () banked
  2080  000F00  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  2081  000F02  D003               	goto	l385
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2085  000F04  010F               	movlb	15	; () banked
  2086  000F06  8D35               	bsf	53,6,b	;volatile
  2087  000F08  D002               	goto	l386
  2088  000F0A                     l385:
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;inc\CANlib.h: 378: else
  2092                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2093  000F0A  010F               	movlb	15	; () banked
  2094  000F0C  9D35               	bcf	53,6,b	;volatile
  2095  000F0E                     l386:
  2096                           
  2097                           ; BSR set to: 15
  2098                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2099  000F0E  0100               	movlb	0	; () banked
  2100  000F10  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  2101  000F12  D079               	goto	l387
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;inc\CANlib.h: 382: {
  2105                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  2106  000F14  0100               	movlb	0	; () banked
  2107  000F16  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  2108  000F18  0100               	movlb	0	; () banked
  2109  000F1A  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2110  000F1C  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2111  000F1E  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2112  000F20  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2116  000F22  C07F  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2120  000F26  0E00               	movlw	0
  2121  000F28  0100               	movlb	0	; () banked
  2122  000F2A  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2123  000F2C  0100               	movlb	0	; () banked
  2124  000F2E  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2125  000F30  0EFF               	movlw	255
  2126  000F32  0100               	movlb	0	; () banked
  2127  000F34  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2128  000F36  0100               	movlb	0	; () banked
  2129  000F38  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2130  000F3A  0E00               	movlw	0
  2131  000F3C  0100               	movlb	0	; () banked
  2132  000F3E  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2133  000F40  0100               	movlb	0	; () banked
  2134  000F42  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2135  000F44  0E00               	movlw	0
  2136  000F46  0100               	movlb	0	; () banked
  2137  000F48  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2138  000F4A  0100               	movlb	0	; () banked
  2139  000F4C  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  2143  000F4E  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2144  000F52  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2145  000F56  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2146  000F5A  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2147  000F5E  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  2148  000F62  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2149  000F66  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2150  000F6A  0100               	movlb	0	; () banked
  2151  000F6C  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  2152  000F6E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2153  000F72  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2154  000F76  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2155  000F7A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2159  000F7E  C07F  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2163  000F82  0E00               	movlw	0
  2164  000F84  010F               	movlb	15	; () banked
  2165  000F86  6F32               	movwf	50,b	;volatile
  2166                           
  2167                           ; BSR set to: 15
  2168                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2169  000F88  010F               	movlb	15	; () banked
  2170  000F8A  8732               	bsf	50,3,b	;volatile
  2171                           
  2172                           ; BSR set to: 15
  2173                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2174  000F8C  0100               	movlb	0	; () banked
  2175  000F8E  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2176  000F90  D002               	goto	l388
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2180  000F92  010F               	movlb	15	; () banked
  2181  000F94  8132               	bsf	50,0,b	;volatile
  2182  000F96                     l388:
  2183                           
  2184                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2185  000F96  0100               	movlb	0	; () banked
  2186  000F98  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2187  000F9A  D002               	goto	l389
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2191  000F9C  010F               	movlb	15	; () banked
  2192  000F9E  8332               	bsf	50,1,b	;volatile
  2193  000FA0                     l389:
  2194                           
  2195                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2196  000FA0  0100               	movlb	0	; () banked
  2197  000FA2  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2198  000FA4  D002               	goto	l390
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2202  000FA6  010F               	movlb	15	; () banked
  2203  000FA8  8B32               	bsf	50,5,b	;volatile
  2204  000FAA                     l390:
  2205                           
  2206                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2207  000FAA  0100               	movlb	0	; () banked
  2208  000FAC  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2209  000FAE  D002               	goto	l391
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2213  000FB0  010F               	movlb	15	; () banked
  2214  000FB2  8D32               	bsf	50,6,b	;volatile
  2215  000FB4                     l391:
  2216                           
  2217                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2218  000FB4  0100               	movlb	0	; () banked
  2219  000FB6  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2220  000FB8  D002               	goto	l3726
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2224  000FBA  010F               	movlb	15	; () banked
  2225  000FBC  8F32               	bsf	50,7,b	;volatile
  2226  000FBE                     l3726:
  2227                           
  2228                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2229  000FBE  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2230  000FC2  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2231  000FC6  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2232  000FCA  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2233  000FCE  0E16               	movlw	22
  2234  000FD0  D006               	goto	u4370
  2235  000FD2                     u4375:
  2236  000FD2  0100               	movlb	0	; () banked
  2237  000FD4  90D8               	bcf	status,0,c
  2238  000FD6  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2239  000FD8  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2240  000FDA  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2241  000FDC  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2242  000FDE                     u4370:
  2243  000FDE  2EE8               	decfsz	wreg,f,c
  2244  000FE0  D7F8               	goto	u4375
  2245  000FE2  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2246  000FE6  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2247  000FEA  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2248  000FEE  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2252  000FF2  0100               	movlb	0	; () banked
  2253  000FF4  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2254  000FF6  0100               	movlb	0	; () banked
  2255  000FF8  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2256  000FFA  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2257  000FFC  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2258  000FFE  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2262  001000  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2263                           
  2264                           ;inc\CANlib.h: 407: }
  2265  001004  D059               	goto	l3746
  2266  001006                     l387:
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;inc\CANlib.h: 409: else
  2270                           ;inc\CANlib.h: 411: {
  2271                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2272  001006  010F               	movlb	15	; () banked
  2273  001008  9732               	bcf	50,3,b	;volatile
  2274                           
  2275                           ; BSR set to: 15
  2276                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2277  00100A  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2278  00100E  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2279  001012  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2280  001016  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2281  00101A  0E04               	movlw	4
  2282  00101C  D006               	goto	u4380
  2283  00101E                     u4385:
  2284  00101E  0100               	movlb	0	; () banked
  2285  001020  90D8               	bcf	status,0,c
  2286  001022  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2287  001024  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2288  001026  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2289  001028  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2290  00102A                     u4380:
  2291  00102A  2EE8               	decfsz	wreg,f,c
  2292  00102C  D7F8               	goto	u4385
  2293  00102E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2294  001032  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2295  001036  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2296  00103A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2300  00103E  0100               	movlb	0	; () banked
  2301  001040  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2302  001042  0100               	movlb	0	; () banked
  2303  001044  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2304  001046  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2305  001048  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2306  00104A  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2310  00104C  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2314  001050  0E07               	movlw	7
  2315  001052  0100               	movlb	0	; () banked
  2316  001054  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2317  001056  0100               	movlb	0	; () banked
  2318  001058  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2319  00105A  0E00               	movlw	0
  2320  00105C  0100               	movlb	0	; () banked
  2321  00105E  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2322  001060  0100               	movlb	0	; () banked
  2323  001062  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2324  001064  0E00               	movlw	0
  2325  001066  0100               	movlb	0	; () banked
  2326  001068  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2327  00106A  0100               	movlb	0	; () banked
  2328  00106C  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2329  00106E  0E00               	movlw	0
  2330  001070  0100               	movlb	0	; () banked
  2331  001072  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2332  001074  0100               	movlb	0	; () banked
  2333  001076  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2337  001078  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2338  00107C  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2339  001080  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2340  001084  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2341  001088  0E05               	movlw	5
  2342  00108A                     u4395:
  2343  00108A  90D8               	bcf	status,0,c
  2344  00108C  0100               	movlb	0	; () banked
  2345  00108E  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  2346  001090  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2347  001092  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2348  001094  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2349  001096  2EE8               	decfsz	wreg,f,c
  2350  001098  D7F8               	goto	u4395
  2351  00109A  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2352  00109E  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2353  0010A2  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2354  0010A6  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2358  0010AA  010F               	movlb	15	; () banked
  2359  0010AC  5132               	movf	50,w,b	;volatile
  2360  0010AE  0B1F               	andlw	31
  2361  0010B0  010F               	movlb	15	; () banked
  2362  0010B2  6F32               	movwf	50,b	;volatile
  2363                           
  2364                           ; BSR set to: 15
  2365                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2366  0010B4  C07F  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2367  0010B8                     l3746:
  2368                           
  2369                           ;inc\CANlib.h: 422: }
  2370                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2371  0010B8  0100               	movlb	0	; () banked
  2372  0010BA  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  2373  0010BC  D003               	goto	l394
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2377  0010BE  010F               	movlb	15	; () banked
  2378  0010C0  8130               	bsf	48,0,b	;volatile
  2379  0010C2  D002               	goto	l395
  2380  0010C4                     l394:
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;inc\CANlib.h: 426: else
  2384                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2385  0010C4  010F               	movlb	15	; () banked
  2386  0010C6  9130               	bcf	48,0,b	;volatile
  2387  0010C8                     l395:
  2388                           
  2389                           ; BSR set to: 15
  2390                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2391  0010C8  0100               	movlb	0	; () banked
  2392  0010CA  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  2393  0010CC  D003               	goto	l396
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2397  0010CE  010F               	movlb	15	; () banked
  2398  0010D0  8330               	bsf	48,1,b	;volatile
  2399  0010D2  D002               	goto	l3752
  2400  0010D4                     l396:
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;inc\CANlib.h: 430: else
  2404                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2405  0010D4  010F               	movlb	15	; () banked
  2406  0010D6  9330               	bcf	48,1,b	;volatile
  2407  0010D8                     l3752:
  2408                           
  2409                           ; BSR set to: 15
  2410                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2411  0010D8  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  2412  0010DC  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2413  0010E0  50DF               	movf	indf2,w,c
  2414  0010E2  010F               	movlb	15	; () banked
  2415  0010E4  6F36               	movwf	54,b	;volatile
  2416                           
  2417                           ; BSR set to: 15
  2418                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2419  0010E6  0100               	movlb	0	; () banked
  2420  0010E8  EE20 F001          	lfsr	2,1
  2421  0010EC  5177               	movf	CANsendMessage@data& (0+255),w,b
  2422  0010EE  26D9               	addwf	fsr2l,f,c
  2423  0010F0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2424  0010F2  22DA               	addwfc	fsr2h,f,c
  2425  0010F4  50DF               	movf	indf2,w,c
  2426  0010F6  010F               	movlb	15	; () banked
  2427  0010F8  6F37               	movwf	55,b	;volatile
  2428                           
  2429                           ; BSR set to: 15
  2430                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2431  0010FA  0100               	movlb	0	; () banked
  2432  0010FC  EE20 F002          	lfsr	2,2
  2433  001100  5177               	movf	CANsendMessage@data& (0+255),w,b
  2434  001102  26D9               	addwf	fsr2l,f,c
  2435  001104  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2436  001106  22DA               	addwfc	fsr2h,f,c
  2437  001108  50DF               	movf	indf2,w,c
  2438  00110A  010F               	movlb	15	; () banked
  2439  00110C  6F38               	movwf	56,b	;volatile
  2440                           
  2441                           ; BSR set to: 15
  2442                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2443  00110E  0100               	movlb	0	; () banked
  2444  001110  EE20 F003          	lfsr	2,3
  2445  001114  5177               	movf	CANsendMessage@data& (0+255),w,b
  2446  001116  26D9               	addwf	fsr2l,f,c
  2447  001118  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2448  00111A  22DA               	addwfc	fsr2h,f,c
  2449  00111C  50DF               	movf	indf2,w,c
  2450  00111E  010F               	movlb	15	; () banked
  2451  001120  6F39               	movwf	57,b	;volatile
  2452                           
  2453                           ; BSR set to: 15
  2454                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2455  001122  0100               	movlb	0	; () banked
  2456  001124  EE20 F004          	lfsr	2,4
  2457  001128  5177               	movf	CANsendMessage@data& (0+255),w,b
  2458  00112A  26D9               	addwf	fsr2l,f,c
  2459  00112C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2460  00112E  22DA               	addwfc	fsr2h,f,c
  2461  001130  50DF               	movf	indf2,w,c
  2462  001132  010F               	movlb	15	; () banked
  2463  001134  6F3A               	movwf	58,b	;volatile
  2464                           
  2465                           ; BSR set to: 15
  2466                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2467  001136  0100               	movlb	0	; () banked
  2468  001138  EE20 F005          	lfsr	2,5
  2469  00113C  5177               	movf	CANsendMessage@data& (0+255),w,b
  2470  00113E  26D9               	addwf	fsr2l,f,c
  2471  001140  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2472  001142  22DA               	addwfc	fsr2h,f,c
  2473  001144  50DF               	movf	indf2,w,c
  2474  001146  010F               	movlb	15	; () banked
  2475  001148  6F3B               	movwf	59,b	;volatile
  2476                           
  2477                           ; BSR set to: 15
  2478                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2479  00114A  0100               	movlb	0	; () banked
  2480  00114C  EE20 F006          	lfsr	2,6
  2481  001150  5177               	movf	CANsendMessage@data& (0+255),w,b
  2482  001152  26D9               	addwf	fsr2l,f,c
  2483  001154  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2484  001156  22DA               	addwfc	fsr2h,f,c
  2485  001158  50DF               	movf	indf2,w,c
  2486  00115A  010F               	movlb	15	; () banked
  2487  00115C  6F3C               	movwf	60,b	;volatile
  2488                           
  2489                           ; BSR set to: 15
  2490                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2491  00115E  0100               	movlb	0	; () banked
  2492  001160  EE20 F007          	lfsr	2,7
  2493  001164  5177               	movf	CANsendMessage@data& (0+255),w,b
  2494  001166  26D9               	addwf	fsr2l,f,c
  2495  001168  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2496  00116A  22DA               	addwfc	fsr2h,f,c
  2497  00116C  50DF               	movf	indf2,w,c
  2498  00116E  010F               	movlb	15	; () banked
  2499  001170  6F3D               	movwf	61,b	;volatile
  2500                           
  2501                           ; BSR set to: 15
  2502                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2503  001172  010F               	movlb	15	; () banked
  2504  001174  8730               	bsf	48,3,b	;volatile
  2505                           
  2506                           ; BSR set to: 15
  2507                           ;inc\CANlib.h: 444: return;
  2508  001176  0012               	return	
  2509  001178                     l384:
  2510                           
  2511                           ; BSR set to: 15
  2512                           ;inc\CANlib.h: 445: }
  2513                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2514  001178  010F               	movlb	15	; () banked
  2515  00117A  B720               	btfsc	32,3,b	;volatile
  2516  00117C  0012               	return	
  2517                           
  2518                           ; BSR set to: 15
  2519                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2520  00117E  C079  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2521                           
  2522                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2523  001182  0100               	movlb	0	; () banked
  2524  001184  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  2525  001186  D003               	goto	l399
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2529  001188  010F               	movlb	15	; () banked
  2530  00118A  8D25               	bsf	37,6,b	;volatile
  2531  00118C  D002               	goto	l400
  2532  00118E                     l399:
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;inc\CANlib.h: 454: else
  2536                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2537  00118E  010F               	movlb	15	; () banked
  2538  001190  9D25               	bcf	37,6,b	;volatile
  2539  001192                     l400:
  2540                           
  2541                           ; BSR set to: 15
  2542                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2543  001192  0100               	movlb	0	; () banked
  2544  001194  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  2545  001196  D079               	goto	l401
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;inc\CANlib.h: 458: {
  2549                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2550  001198  0100               	movlb	0	; () banked
  2551  00119A  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  2552  00119C  0100               	movlb	0	; () banked
  2553  00119E  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2554  0011A0  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2555  0011A2  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2556  0011A4  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2560  0011A6  C07F  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2564  0011AA  0E00               	movlw	0
  2565  0011AC  0100               	movlb	0	; () banked
  2566  0011AE  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2567  0011B0  0100               	movlb	0	; () banked
  2568  0011B2  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2569  0011B4  0EFF               	movlw	255
  2570  0011B6  0100               	movlb	0	; () banked
  2571  0011B8  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2572  0011BA  0100               	movlb	0	; () banked
  2573  0011BC  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2574  0011BE  0E00               	movlw	0
  2575  0011C0  0100               	movlb	0	; () banked
  2576  0011C2  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2577  0011C4  0100               	movlb	0	; () banked
  2578  0011C6  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2579  0011C8  0E00               	movlw	0
  2580  0011CA  0100               	movlb	0	; () banked
  2581  0011CC  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2582  0011CE  0100               	movlb	0	; () banked
  2583  0011D0  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2587  0011D2  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2588  0011D6  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2589  0011DA  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2590  0011DE  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2591  0011E2  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  2592  0011E6  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2593  0011EA  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2594  0011EE  0100               	movlb	0	; () banked
  2595  0011F0  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  2596  0011F2  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2597  0011F6  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2598  0011FA  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2599  0011FE  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2603  001202  C07F  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2607  001206  0E00               	movlw	0
  2608  001208  010F               	movlb	15	; () banked
  2609  00120A  6F22               	movwf	34,b	;volatile
  2610                           
  2611                           ; BSR set to: 15
  2612                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2613  00120C  010F               	movlb	15	; () banked
  2614  00120E  8722               	bsf	34,3,b	;volatile
  2615                           
  2616                           ; BSR set to: 15
  2617                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2618  001210  0100               	movlb	0	; () banked
  2619  001212  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2620  001214  D002               	goto	l402
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2624  001216  010F               	movlb	15	; () banked
  2625  001218  8122               	bsf	34,0,b	;volatile
  2626  00121A                     l402:
  2627                           
  2628                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2629  00121A  0100               	movlb	0	; () banked
  2630  00121C  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2631  00121E  D002               	goto	l403
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2635  001220  010F               	movlb	15	; () banked
  2636  001222  8322               	bsf	34,1,b	;volatile
  2637  001224                     l403:
  2638                           
  2639                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2640  001224  0100               	movlb	0	; () banked
  2641  001226  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2642  001228  D002               	goto	l404
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2646  00122A  010F               	movlb	15	; () banked
  2647  00122C  8B22               	bsf	34,5,b	;volatile
  2648  00122E                     l404:
  2649                           
  2650                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2651  00122E  0100               	movlb	0	; () banked
  2652  001230  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2653  001232  D002               	goto	l405
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2657  001234  010F               	movlb	15	; () banked
  2658  001236  8D22               	bsf	34,6,b	;volatile
  2659  001238                     l405:
  2660                           
  2661                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2662  001238  0100               	movlb	0	; () banked
  2663  00123A  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2664  00123C  D002               	goto	l3802
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2668  00123E  010F               	movlb	15	; () banked
  2669  001240  8F22               	bsf	34,7,b	;volatile
  2670  001242                     l3802:
  2671                           
  2672                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2673  001242  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2674  001246  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2675  00124A  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2676  00124E  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2677  001252  0E16               	movlw	22
  2678  001254  D006               	goto	u4500
  2679  001256                     u4505:
  2680  001256  0100               	movlb	0	; () banked
  2681  001258  90D8               	bcf	status,0,c
  2682  00125A  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2683  00125C  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2684  00125E  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2685  001260  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2686  001262                     u4500:
  2687  001262  2EE8               	decfsz	wreg,f,c
  2688  001264  D7F8               	goto	u4505
  2689  001266  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2690  00126A  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2691  00126E  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2692  001272  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2693                           
  2694                           ; BSR set to: 0
  2695                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2696  001276  0100               	movlb	0	; () banked
  2697  001278  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2698  00127A  0100               	movlb	0	; () banked
  2699  00127C  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2700  00127E  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2701  001280  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2702  001282  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2706  001284  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2707                           
  2708                           ;inc\CANlib.h: 483: }
  2709  001288  D059               	goto	l3822
  2710  00128A                     l401:
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;inc\CANlib.h: 485: else
  2714                           ;inc\CANlib.h: 487: {
  2715                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2716  00128A  010F               	movlb	15	; () banked
  2717  00128C  9722               	bcf	34,3,b	;volatile
  2718                           
  2719                           ; BSR set to: 15
  2720                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2721  00128E  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2722  001292  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2723  001296  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2724  00129A  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2725  00129E  0E04               	movlw	4
  2726  0012A0  D006               	goto	u4510
  2727  0012A2                     u4515:
  2728  0012A2  0100               	movlb	0	; () banked
  2729  0012A4  90D8               	bcf	status,0,c
  2730  0012A6  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2731  0012A8  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2732  0012AA  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2733  0012AC  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2734  0012AE                     u4510:
  2735  0012AE  2EE8               	decfsz	wreg,f,c
  2736  0012B0  D7F8               	goto	u4515
  2737  0012B2  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2738  0012B6  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2739  0012BA  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2740  0012BE  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2744  0012C2  0100               	movlb	0	; () banked
  2745  0012C4  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2746  0012C6  0100               	movlb	0	; () banked
  2747  0012C8  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2748  0012CA  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2749  0012CC  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2750  0012CE  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2754  0012D0  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2758  0012D4  0E07               	movlw	7
  2759  0012D6  0100               	movlb	0	; () banked
  2760  0012D8  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2761  0012DA  0100               	movlb	0	; () banked
  2762  0012DC  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2763  0012DE  0E00               	movlw	0
  2764  0012E0  0100               	movlb	0	; () banked
  2765  0012E2  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2766  0012E4  0100               	movlb	0	; () banked
  2767  0012E6  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2768  0012E8  0E00               	movlw	0
  2769  0012EA  0100               	movlb	0	; () banked
  2770  0012EC  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2771  0012EE  0100               	movlb	0	; () banked
  2772  0012F0  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2773  0012F2  0E00               	movlw	0
  2774  0012F4  0100               	movlb	0	; () banked
  2775  0012F6  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2776  0012F8  0100               	movlb	0	; () banked
  2777  0012FA  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2781  0012FC  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2782  001300  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2783  001304  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2784  001308  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2785  00130C  0E05               	movlw	5
  2786  00130E                     u4525:
  2787  00130E  90D8               	bcf	status,0,c
  2788  001310  0100               	movlb	0	; () banked
  2789  001312  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  2790  001314  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2791  001316  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2792  001318  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2793  00131A  2EE8               	decfsz	wreg,f,c
  2794  00131C  D7F8               	goto	u4525
  2795  00131E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2796  001322  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2797  001326  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2798  00132A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2802  00132E  010F               	movlb	15	; () banked
  2803  001330  5122               	movf	34,w,b	;volatile
  2804  001332  0B1F               	andlw	31
  2805  001334  010F               	movlb	15	; () banked
  2806  001336  6F22               	movwf	34,b	;volatile
  2807                           
  2808                           ; BSR set to: 15
  2809                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2810  001338  C07F  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2811  00133C                     l3822:
  2812                           
  2813                           ;inc\CANlib.h: 498: }
  2814                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2815  00133C  0100               	movlb	0	; () banked
  2816  00133E  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  2817  001340  D003               	goto	l408
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2821  001342  010F               	movlb	15	; () banked
  2822  001344  8120               	bsf	32,0,b	;volatile
  2823  001346  D002               	goto	l409
  2824  001348                     l408:
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;inc\CANlib.h: 502: else
  2828                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2829  001348  010F               	movlb	15	; () banked
  2830  00134A  9120               	bcf	32,0,b	;volatile
  2831  00134C                     l409:
  2832                           
  2833                           ; BSR set to: 15
  2834                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2835  00134C  0100               	movlb	0	; () banked
  2836  00134E  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  2837  001350  D003               	goto	l410
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2841  001352  010F               	movlb	15	; () banked
  2842  001354  8320               	bsf	32,1,b	;volatile
  2843  001356  D002               	goto	l3828
  2844  001358                     l410:
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;inc\CANlib.h: 506: else
  2848                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2849  001358  010F               	movlb	15	; () banked
  2850  00135A  9320               	bcf	32,1,b	;volatile
  2851  00135C                     l3828:
  2852                           
  2853                           ; BSR set to: 15
  2854                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2855  00135C  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  2856  001360  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2857  001364  50DF               	movf	indf2,w,c
  2858  001366  010F               	movlb	15	; () banked
  2859  001368  6F26               	movwf	38,b	;volatile
  2860                           
  2861                           ; BSR set to: 15
  2862                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2863  00136A  0100               	movlb	0	; () banked
  2864  00136C  EE20 F001          	lfsr	2,1
  2865  001370  5177               	movf	CANsendMessage@data& (0+255),w,b
  2866  001372  26D9               	addwf	fsr2l,f,c
  2867  001374  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2868  001376  22DA               	addwfc	fsr2h,f,c
  2869  001378  50DF               	movf	indf2,w,c
  2870  00137A  010F               	movlb	15	; () banked
  2871  00137C  6F27               	movwf	39,b	;volatile
  2872                           
  2873                           ; BSR set to: 15
  2874                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2875  00137E  0100               	movlb	0	; () banked
  2876  001380  EE20 F002          	lfsr	2,2
  2877  001384  5177               	movf	CANsendMessage@data& (0+255),w,b
  2878  001386  26D9               	addwf	fsr2l,f,c
  2879  001388  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2880  00138A  22DA               	addwfc	fsr2h,f,c
  2881  00138C  50DF               	movf	indf2,w,c
  2882  00138E  010F               	movlb	15	; () banked
  2883  001390  6F28               	movwf	40,b	;volatile
  2884                           
  2885                           ; BSR set to: 15
  2886                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2887  001392  0100               	movlb	0	; () banked
  2888  001394  EE20 F003          	lfsr	2,3
  2889  001398  5177               	movf	CANsendMessage@data& (0+255),w,b
  2890  00139A  26D9               	addwf	fsr2l,f,c
  2891  00139C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2892  00139E  22DA               	addwfc	fsr2h,f,c
  2893  0013A0  50DF               	movf	indf2,w,c
  2894  0013A2  010F               	movlb	15	; () banked
  2895  0013A4  6F29               	movwf	41,b	;volatile
  2896                           
  2897                           ; BSR set to: 15
  2898                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2899  0013A6  0100               	movlb	0	; () banked
  2900  0013A8  EE20 F004          	lfsr	2,4
  2901  0013AC  5177               	movf	CANsendMessage@data& (0+255),w,b
  2902  0013AE  26D9               	addwf	fsr2l,f,c
  2903  0013B0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2904  0013B2  22DA               	addwfc	fsr2h,f,c
  2905  0013B4  50DF               	movf	indf2,w,c
  2906  0013B6  010F               	movlb	15	; () banked
  2907  0013B8  6F2A               	movwf	42,b	;volatile
  2908                           
  2909                           ; BSR set to: 15
  2910                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2911  0013BA  0100               	movlb	0	; () banked
  2912  0013BC  EE20 F005          	lfsr	2,5
  2913  0013C0  5177               	movf	CANsendMessage@data& (0+255),w,b
  2914  0013C2  26D9               	addwf	fsr2l,f,c
  2915  0013C4  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2916  0013C6  22DA               	addwfc	fsr2h,f,c
  2917  0013C8  50DF               	movf	indf2,w,c
  2918  0013CA  010F               	movlb	15	; () banked
  2919  0013CC  6F2B               	movwf	43,b	;volatile
  2920                           
  2921                           ; BSR set to: 15
  2922                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2923  0013CE  0100               	movlb	0	; () banked
  2924  0013D0  EE20 F006          	lfsr	2,6
  2925  0013D4  5177               	movf	CANsendMessage@data& (0+255),w,b
  2926  0013D6  26D9               	addwf	fsr2l,f,c
  2927  0013D8  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2928  0013DA  22DA               	addwfc	fsr2h,f,c
  2929  0013DC  50DF               	movf	indf2,w,c
  2930  0013DE  010F               	movlb	15	; () banked
  2931  0013E0  6F2C               	movwf	44,b	;volatile
  2932                           
  2933                           ; BSR set to: 15
  2934                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2935  0013E2  0100               	movlb	0	; () banked
  2936  0013E4  EE20 F007          	lfsr	2,7
  2937  0013E8  5177               	movf	CANsendMessage@data& (0+255),w,b
  2938  0013EA  26D9               	addwf	fsr2l,f,c
  2939  0013EC  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2940  0013EE  22DA               	addwfc	fsr2h,f,c
  2941  0013F0  50DF               	movf	indf2,w,c
  2942  0013F2  010F               	movlb	15	; () banked
  2943  0013F4  6F2D               	movwf	45,b	;volatile
  2944                           
  2945                           ; BSR set to: 15
  2946                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2947  0013F6  010F               	movlb	15	; () banked
  2948  0013F8  8720               	bsf	32,3,b	;volatile
  2949                           
  2950                           ; BSR set to: 15
  2951                           ;inc\CANlib.h: 520: return;
  2952  0013FA  0012               	return	
  2953  0013FC                     __end_of_CANsendMessage:
  2954                           	opt stack 0
  2955                           tblptru	equ	0xFF8
  2956                           tblptrh	equ	0xFF7
  2957                           tblptrl	equ	0xFF6
  2958                           tablat	equ	0xFF5
  2959                           postinc0	equ	0xFEE
  2960                           wreg	equ	0xFE8
  2961                           postdec1	equ	0xFE5
  2962                           fsr1l	equ	0xFE1
  2963                           indf2	equ	0xFDF
  2964                           fsr2h	equ	0xFDA
  2965                           fsr2l	equ	0xFD9
  2966                           status	equ	0xFD8
  2967                           
  2968 ;; *************** function _CANisTxReady *****************
  2969 ;; Defined at:
  2970 ;;		line 1154 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      unsigned char 
  2977 ;; Registers used:
  2978 ;;		wreg, status,2
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2984 ;;      Params:         0       0       0       0
  2985 ;;      Locals:         0       1       0       0
  2986 ;;      Temps:          0       0       0       0
  2987 ;;      Totals:         0       1       0       0
  2988 ;;Total ram usage:        1 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    4
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_send_data
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text3
  2999  00391A                     __ptext3:
  3000                           	opt stack 0
  3001  00391A                     _CANisTxReady:
  3002                           	opt stack 25
  3003                           
  3004                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  3005                           
  3006                           ; BSR set to: 15
  3007                           ;incstack = 0
  3008  00391A  0E01               	movlw	1
  3009  00391C  0100               	movlb	0	; () banked
  3010  00391E  6F73               	movwf	_CANisTxReady$2918& (0+255),b
  3011                           
  3012                           ; BSR set to: 0
  3013  003920  010F               	movlb	15	; () banked
  3014  003922  A740               	btfss	64,3,b	;volatile
  3015  003924  D009               	goto	l562
  3016                           
  3017                           ; BSR set to: 15
  3018  003926  010F               	movlb	15	; () banked
  3019  003928  A730               	btfss	48,3,b	;volatile
  3020  00392A  D006               	goto	l562
  3021                           
  3022                           ; BSR set to: 15
  3023  00392C  010F               	movlb	15	; () banked
  3024  00392E  A720               	btfss	32,3,b	;volatile
  3025  003930  D003               	goto	l562
  3026                           
  3027                           ; BSR set to: 15
  3028  003932  0E00               	movlw	0
  3029  003934  0100               	movlb	0	; () banked
  3030  003936  6F73               	movwf	_CANisTxReady$2918& (0+255),b
  3031  003938                     l562:
  3032  003938  0100               	movlb	0	; () banked
  3033  00393A  5173               	movf	_CANisTxReady$2918& (0+255),w,b
  3034  00393C  0012               	return	
  3035  00393E                     __end_of_CANisTxReady:
  3036                           	opt stack 0
  3037                           tblptru	equ	0xFF8
  3038                           tblptrh	equ	0xFF7
  3039                           tblptrl	equ	0xFF6
  3040                           tablat	equ	0xFF5
  3041                           postinc0	equ	0xFEE
  3042                           wreg	equ	0xFE8
  3043                           postdec1	equ	0xFE5
  3044                           fsr1l	equ	0xFE1
  3045                           indf2	equ	0xFDF
  3046                           fsr2h	equ	0xFDA
  3047                           fsr2l	equ	0xFD9
  3048                           status	equ	0xFD8
  3049                           
  3050 ;; *************** function _configurazione_iniziale *****************
  3051 ;; Defined at:
  3052 ;;		line 180 in file "newmain.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;		None               void
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3066 ;;      Params:         0       0       0       0
  3067 ;;      Locals:         0       0       0       0
  3068 ;;      Temps:          0       0       0       0
  3069 ;;      Totals:         0       0       0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    6
  3073 ;; This function calls:
  3074 ;;		_CANInitialize
  3075 ;;		_OpenADC
  3076 ;;		_delay_ms
  3077 ;; This function is called by:
  3078 ;;		_main
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text4
  3083  0032E0                     __ptext4:
  3084                           	opt stack 0
  3085  0032E0                     _configurazione_iniziale:
  3086                           	opt stack 24
  3087                           
  3088                           ;newmain.c: 181: LATA = 0x00;
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;incstack = 0
  3092  0032E0  0E00               	movlw	0
  3093  0032E2  6E89               	movwf	3977,c	;volatile
  3094                           
  3095                           ;newmain.c: 182: TRISA = 0b11111100;
  3096  0032E4  0EFC               	movlw	252
  3097  0032E6  6E92               	movwf	3986,c	;volatile
  3098                           
  3099                           ;newmain.c: 184: LATB = 0x00;
  3100  0032E8  0E00               	movlw	0
  3101  0032EA  6E8A               	movwf	3978,c	;volatile
  3102                           
  3103                           ;newmain.c: 185: TRISB = 0b11111011;
  3104  0032EC  0EFB               	movlw	251
  3105  0032EE  6E93               	movwf	3987,c	;volatile
  3106                           
  3107                           ;newmain.c: 187: LATC = 0x00;
  3108  0032F0  0E00               	movlw	0
  3109  0032F2  6E8B               	movwf	3979,c	;volatile
  3110                           
  3111                           ;newmain.c: 188: TRISC = 0x00;
  3112  0032F4  0E00               	movlw	0
  3113  0032F6  6E94               	movwf	3988,c	;volatile
  3114                           
  3115                           ;newmain.c: 190: LATD = 0x00;
  3116  0032F8  0E00               	movlw	0
  3117  0032FA  6E8C               	movwf	3980,c	;volatile
  3118                           
  3119                           ;newmain.c: 191: TRISD = 0x00;
  3120  0032FC  0E00               	movlw	0
  3121  0032FE  6E95               	movwf	3989,c	;volatile
  3122                           
  3123                           ;newmain.c: 193: LATE = 0x00;
  3124  003300  0E00               	movlw	0
  3125  003302  6E8D               	movwf	3981,c	;volatile
  3126                           
  3127                           ;newmain.c: 194: TRISE = 0xFF;
  3128  003304  6896               	setf	3990,c	;volatile
  3129                           
  3130                           ;newmain.c: 196: PORTC = 0xff;
  3131  003306  6882               	setf	3970,c	;volatile
  3132                           
  3133                           ;newmain.c: 197: delay_ms(100);
  3134  003308  0E00               	movlw	0
  3135  00330A  0100               	movlb	0	; () banked
  3136  00330C  6F82               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3137  00330E  0E64               	movlw	100
  3138  003310  6F81               	movwf	delay_ms@value_ms& (0+255),b
  3139  003312  EC23  F01C         	call	_delay_ms	;wreg free
  3140                           
  3141                           ;newmain.c: 198: PORTC = 0x00;
  3142  003316  0E00               	movlw	0
  3143  003318  6E82               	movwf	3970,c	;volatile
  3144                           
  3145                           ;newmain.c: 199: delay_ms(100);
  3146  00331A  0E00               	movlw	0
  3147  00331C  0100               	movlb	0	; () banked
  3148  00331E  6F82               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3149  003320  0E64               	movlw	100
  3150  003322  6F81               	movwf	delay_ms@value_ms& (0+255),b
  3151  003324  EC23  F01C         	call	_delay_ms	;wreg free
  3152                           
  3153                           ;newmain.c: 200: PORTC = 0xff;
  3154  003328  6882               	setf	3970,c	;volatile
  3155                           
  3156                           ;newmain.c: 201: delay_ms(100);
  3157  00332A  0E00               	movlw	0
  3158  00332C  0100               	movlb	0	; () banked
  3159  00332E  6F82               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3160  003330  0E64               	movlw	100
  3161  003332  6F81               	movwf	delay_ms@value_ms& (0+255),b
  3162  003334  EC23  F01C         	call	_delay_ms	;wreg free
  3163                           
  3164                           ;newmain.c: 202: PORTC = 0x00;
  3165  003338  0E00               	movlw	0
  3166  00333A  6E82               	movwf	3970,c	;volatile
  3167                           
  3168                           ;newmain.c: 203: delay_ms(100);
  3169  00333C  0E00               	movlw	0
  3170  00333E  0100               	movlb	0	; () banked
  3171  003340  6F82               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3172  003342  0E64               	movlw	100
  3173  003344  6F81               	movwf	delay_ms@value_ms& (0+255),b
  3174  003346  EC23  F01C         	call	_delay_ms	;wreg free
  3175                           
  3176                           ;newmain.c: 204: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SA
      +                          MPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3177  00334A  0E06               	movlw	6
  3178  00334C  0100               	movlb	0	; () banked
  3179  00334E  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3180  003350  0E05               	movlw	5
  3181  003352  0100               	movlb	0	; () banked
  3182  003354  6F82               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3183  003356  0E01               	movlw	1
  3184  003358  0100               	movlb	0	; () banked
  3185  00335A  6F83               	movwf	CANInitialize@SJW& (0+255),b
  3186  00335C  0E03               	movlw	3
  3187  00335E  0100               	movlb	0	; () banked
  3188  003360  6F84               	movwf	CANInitialize@BRP& (0+255),b
  3189  003362  0E9D               	movlw	157
  3190  003364  0100               	movlb	0	; () banked
  3191  003366  6F85               	movwf	CANInitialize@flags& (0+255),b
  3192  003368  0E04               	movlw	4
  3193  00336A  EC07  F018         	call	_CANInitialize
  3194                           
  3195                           ;newmain.c: 205: RCONbits.IPEN = 1;
  3196  00336E  8ED0               	bsf	4048,7,c	;volatile
  3197                           
  3198                           ;newmain.c: 206: PIR3bits.RXB1IF = 0;
  3199  003370  92A4               	bcf	4004,1,c	;volatile
  3200                           
  3201                           ;newmain.c: 207: PIR3bits.RXB0IF = 0;
  3202  003372  90A4               	bcf	4004,0,c	;volatile
  3203                           
  3204                           ;newmain.c: 208: PIE3bits.RXB1IE = 1;
  3205  003374  82A3               	bsf	4003,1,c	;volatile
  3206                           
  3207                           ;newmain.c: 209: PIE3bits.RXB0IE = 1;
  3208  003376  80A3               	bsf	4003,0,c	;volatile
  3209                           
  3210                           ;newmain.c: 210: IPR3bits.RXB1IP = 0;
  3211  003378  92A5               	bcf	4005,1,c	;volatile
  3212                           
  3213                           ;newmain.c: 211: IPR3bits.RXB0IP = 0;
  3214  00337A  90A5               	bcf	4005,0,c	;volatile
  3215                           
  3216                           ;newmain.c: 212: INTCONbits.GIEH = 1;
  3217  00337C  8EF2               	bsf	intcon,7,c	;volatile
  3218                           
  3219                           ;newmain.c: 213: INTCONbits.GIEL = 1;
  3220  00337E  8CF2               	bsf	intcon,6,c	;volatile
  3221                           
  3222                           ;newmain.c: 214: INTCON2bits.INTEDG0 = 1;
  3223  003380  8CF1               	bsf	intcon2,6,c	;volatile
  3224                           
  3225                           ;newmain.c: 215: INTCON2bits.TMR0IP = 1;
  3226  003382  84F1               	bsf	intcon2,2,c	;volatile
  3227                           
  3228                           ;newmain.c: 216: INTCONbits.TMR0IF = 0;
  3229  003384  94F2               	bcf	intcon,2,c	;volatile
  3230                           
  3231                           ;newmain.c: 217: INTCONbits.TMR0IE = 1;
  3232  003386  8AF2               	bsf	intcon,5,c	;volatile
  3233                           
  3234                           ;newmain.c: 218: PORTC = 0xff;
  3235  003388  6882               	setf	3970,c	;volatile
  3236                           
  3237                           ;newmain.c: 219: delay_ms(100);
  3238  00338A  0E00               	movlw	0
  3239  00338C  0100               	movlb	0	; () banked
  3240  00338E  6F82               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3241  003390  0E64               	movlw	100
  3242  003392  6F81               	movwf	delay_ms@value_ms& (0+255),b
  3243  003394  EC23  F01C         	call	_delay_ms	;wreg free
  3244                           
  3245                           ;newmain.c: 220: PORTC = 0x00;
  3246  003398  0E00               	movlw	0
  3247  00339A  6E82               	movwf	3970,c	;volatile
  3248                           
  3249                           ;newmain.c: 221: T0CON = 0x80;
  3250  00339C  0E80               	movlw	128
  3251  00339E  6ED5               	movwf	4053,c	;volatile
  3252                           
  3253                           ;newmain.c: 223: T3CON = 0x01;
  3254  0033A0  0E01               	movlw	1
  3255  0033A2  6EB1               	movwf	4017,c	;volatile
  3256                           
  3257                           ;newmain.c: 224: PIR2bits.TMR3IF = 0;
  3258  0033A4  92A1               	bcf	4001,1,c	;volatile
  3259                           
  3260                           ;newmain.c: 225: IPR2bits.TMR3IP = 0;
  3261  0033A6  92A2               	bcf	4002,1,c	;volatile
  3262                           
  3263                           ;newmain.c: 226: TMR3H = 0x63;
  3264  0033A8  0E63               	movlw	99
  3265  0033AA  6EB3               	movwf	4019,c	;volatile
  3266                           
  3267                           ;newmain.c: 227: TMR3L = 0xC0;
  3268  0033AC  0EC0               	movlw	192
  3269  0033AE  6EB2               	movwf	4018,c	;volatile
  3270                           
  3271                           ;newmain.c: 228: PIE2bits.TMR3IE = 1;
  3272  0033B0  82A0               	bsf	4000,1,c	;volatile
  3273                           
  3274                           ;newmain.c: 232: OpenADC(0b11011111 & 0b11111111 & 0b11111101, 0b10001111 & 0b11111100 &
      +                           0b01111111, 0b11111101);
  3275  0033B2  0E0C               	movlw	12
  3276  0033B4  0100               	movlb	0	; () banked
  3277  0033B6  6F73               	movwf	OpenADC@config2& (0+255),b
  3278  0033B8  0EFD               	movlw	253
  3279  0033BA  0100               	movlb	0	; () banked
  3280  0033BC  6F74               	movwf	OpenADC@portconfig& (0+255),b
  3281  0033BE  0EDD               	movlw	221
  3282  0033C0  ECF9  F01A         	call	_OpenADC
  3283  0033C4  0012               	return		;funcret
  3284  0033C6                     __end_of_configurazione_iniziale:
  3285                           	opt stack 0
  3286                           tblptru	equ	0xFF8
  3287                           tblptrh	equ	0xFF7
  3288                           tblptrl	equ	0xFF6
  3289                           tablat	equ	0xFF5
  3290                           intcon	equ	0xFF2
  3291                           intcon2	equ	0xFF1
  3292                           postinc0	equ	0xFEE
  3293                           wreg	equ	0xFE8
  3294                           postdec1	equ	0xFE5
  3295                           fsr1l	equ	0xFE1
  3296                           indf2	equ	0xFDF
  3297                           fsr2h	equ	0xFDA
  3298                           fsr2l	equ	0xFD9
  3299                           status	equ	0xFD8
  3300                           
  3301 ;; *************** function _delay_ms *****************
  3302 ;; Defined at:
  3303 ;;		line 61 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;  value_ms        2   33[BANK0 ] unsigned int 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;		None               void
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3317 ;;      Params:         0       2       0       0
  3318 ;;      Locals:         0       0       0       0
  3319 ;;      Temps:          0       0       0       0
  3320 ;;      Totals:         0       2       0       0
  3321 ;;Total ram usage:        2 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    5
  3324 ;; This function calls:
  3325 ;;		___wmul
  3326 ;; This function is called by:
  3327 ;;		_main
  3328 ;;		_configurazione_iniziale
  3329 ;;		_delay_s
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text5
  3334  003846                     __ptext5:
  3335                           	opt stack 0
  3336  003846                     _delay_ms:
  3337                           	opt stack 25
  3338                           
  3339                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3340                           
  3341                           ;incstack = 0
  3342  003846  C0E8  F07B         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3343  00384A  0100               	movlb	0	; () banked
  3344  00384C  6B7C               	clrf	(___wmul@multiplier+1)& (0+255),b
  3345  00384E  C081  F07D         	movff	delay_ms@value_ms,___wmul@multiplicand
  3346  003852  C082  F07E         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3347  003856  EC5C  F01C         	call	___wmul	;wreg free
  3348  00385A  C07B  F0EA         	movff	?___wmul,_clock_counter_reference	;volatile
  3349  00385E  C07C  F0EB         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3350                           
  3351                           ;src\delay.c: 75: while (clock_counter_reference) {
  3352  003862  D007               	goto	l575
  3353  003864                     l3862:
  3354                           
  3355                           ;src\delay.c: 85: _delay(240);
  3356  003864  0E50               	movlw	80
  3357  003866                     u6867:
  3358  003866  2EE8               	decfsz	wreg,f,c
  3359  003868  D7FE               	goto	u6867
  3360                           
  3361                           ;src\delay.c: 88: clock_counter_reference--;
  3362  00386A  0100               	movlb	0	; () banked
  3363  00386C  07EA               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3364  00386E  A0D8               	btfss	status,0,c
  3365  003870  07EB               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3366  003872                     l575:
  3367  003872  0100               	movlb	0	; () banked
  3368  003874  51EA               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3369  003876  0100               	movlb	0	; () banked
  3370  003878  11EB               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3371  00387A  B4D8               	btfsc	status,2,c
  3372  00387C  0012               	return	
  3373  00387E  D7F2               	goto	l3862
  3374  003880                     __end_of_delay_ms:
  3375                           	opt stack 0
  3376                           tblptru	equ	0xFF8
  3377                           tblptrh	equ	0xFF7
  3378                           tblptrl	equ	0xFF6
  3379                           tablat	equ	0xFF5
  3380                           intcon	equ	0xFF2
  3381                           intcon2	equ	0xFF1
  3382                           postinc0	equ	0xFEE
  3383                           wreg	equ	0xFE8
  3384                           postdec1	equ	0xFE5
  3385                           fsr1l	equ	0xFE1
  3386                           indf2	equ	0xFDF
  3387                           fsr2h	equ	0xFDA
  3388                           fsr2l	equ	0xFD9
  3389                           status	equ	0xFD8
  3390                           
  3391 ;; *************** function ___wmul *****************
  3392 ;; Defined at:
  3393 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  multiplier      2   27[BANK0 ] unsigned int 
  3396 ;;  multiplicand    2   29[BANK0 ] unsigned int 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  product         2   31[BANK0 ] unsigned int 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  2   27[BANK0 ] unsigned int 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0, prodl, prodh
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3408 ;;      Params:         0       4       0       0
  3409 ;;      Locals:         0       2       0       0
  3410 ;;      Temps:          0       0       0       0
  3411 ;;      Totals:         0       6       0       0
  3412 ;;Total ram usage:        6 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    4
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_delay_ms
  3419 ;;		_main
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text6
  3424  0038B8                     __ptext6:
  3425                           	opt stack 0
  3426  0038B8                     ___wmul:
  3427                           	opt stack 25
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;incstack = 0
  3431  0038B8  0100               	movlb	0	; () banked
  3432  0038BA  517B               	movf	___wmul@multiplier& (0+255),w,b
  3433  0038BC  0100               	movlb	0	; () banked
  3434  0038BE  037D               	mulwf	___wmul@multiplicand& (0+255),b
  3435  0038C0  CFF3 F07F          	movff	prodl,___wmul@product
  3436  0038C4  CFF4 F080          	movff	prodh,___wmul@product+1
  3437  0038C8  0100               	movlb	0	; () banked
  3438  0038CA  517B               	movf	___wmul@multiplier& (0+255),w,b
  3439  0038CC  0100               	movlb	0	; () banked
  3440  0038CE  037E               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3441  0038D0  50F3               	movf	prodl,w,c
  3442  0038D2  0100               	movlb	0	; () banked
  3443  0038D4  2780               	addwf	(___wmul@product+1)& (0+255),f,b
  3444  0038D6  0100               	movlb	0	; () banked
  3445  0038D8  517C               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3446  0038DA  0100               	movlb	0	; () banked
  3447  0038DC  037D               	mulwf	___wmul@multiplicand& (0+255),b
  3448  0038DE  50F3               	movf	prodl,w,c
  3449  0038E0  0100               	movlb	0	; () banked
  3450  0038E2  2780               	addwf	(___wmul@product+1)& (0+255),f,b
  3451                           
  3452                           ; BSR set to: 0
  3453  0038E4  C07F  F07B         	movff	___wmul@product,?___wmul
  3454  0038E8  C080  F07C         	movff	___wmul@product+1,?___wmul+1
  3455  0038EC  0012               	return	
  3456  0038EE                     __end_of___wmul:
  3457                           	opt stack 0
  3458                           tblptru	equ	0xFF8
  3459                           tblptrh	equ	0xFF7
  3460                           tblptrl	equ	0xFF6
  3461                           tablat	equ	0xFF5
  3462                           prodh	equ	0xFF4
  3463                           prodl	equ	0xFF3
  3464                           intcon	equ	0xFF2
  3465                           intcon2	equ	0xFF1
  3466                           postinc0	equ	0xFEE
  3467                           wreg	equ	0xFE8
  3468                           postdec1	equ	0xFE5
  3469                           fsr1l	equ	0xFE1
  3470                           indf2	equ	0xFDF
  3471                           fsr2h	equ	0xFDA
  3472                           fsr2l	equ	0xFD9
  3473                           status	equ	0xFD8
  3474                           
  3475 ;; *************** function _OpenADC *****************
  3476 ;; Defined at:
  3477 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcopen.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  config          1    wreg     unsigned char 
  3480 ;;  config2         1   19[BANK0 ] unsigned char 
  3481 ;;  portconfig      1   20[BANK0 ] unsigned char 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  config          1   23[BANK0 ] unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;		None               void
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3493 ;;      Params:         0       2       0       0
  3494 ;;      Locals:         0       1       0       0
  3495 ;;      Temps:          0       2       0       0
  3496 ;;      Totals:         0       5       0       0
  3497 ;;Total ram usage:        5 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    4
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_configurazione_iniziale
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           	psect	text7
  3508  0035F2                     __ptext7:
  3509                           	opt stack 0
  3510  0035F2                     _OpenADC:
  3511                           	opt stack 25
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;incstack = 0
  3515                           ;OpenADC@config stored from wreg
  3516  0035F2  0100               	movlb	0	; () banked
  3517  0035F4  6F77               	movwf	OpenADC@config& (0+255),b
  3518  0035F6  0E00               	movlw	0
  3519  0035F8  6EC2               	movwf	4034,c	;volatile
  3520  0035FA  0E00               	movlw	0
  3521  0035FC  6EC0               	movwf	4032,c	;volatile
  3522  0035FE  0100               	movlb	0	; () banked
  3523  003600  90D8               	bcf	status,0,c
  3524  003602  3173               	rrcf	OpenADC@config2& (0+255),w,b
  3525  003604  0B3C               	andlw	60
  3526  003606  6EC2               	movwf	4034,c	;volatile
  3527                           
  3528                           ; BSR set to: 0
  3529  003608  C073  F075         	movff	OpenADC@config2,??_OpenADC
  3530  00360C  0100               	movlb	0	; () banked
  3531  00360E  3B75               	swapf	??_OpenADC& (0+255),f,b
  3532  003610  0EF0               	movlw	240
  3533  003612  1775               	andwf	??_OpenADC& (0+255),f,b
  3534  003614  0E30               	movlw	48
  3535  003616  0100               	movlb	0	; () banked
  3536  003618  1775               	andwf	??_OpenADC& (0+255),f,b
  3537  00361A  0100               	movlb	0	; () banked
  3538  00361C  5174               	movf	OpenADC@portconfig& (0+255),w,b
  3539  00361E  0B0F               	andlw	15
  3540  003620  0100               	movlb	0	; () banked
  3541  003622  1175               	iorwf	??_OpenADC& (0+255),w,b
  3542  003624  6EC1               	movwf	4033,c	;volatile
  3543                           
  3544                           ; BSR set to: 0
  3545  003626  C077  F075         	movff	OpenADC@config,??_OpenADC
  3546  00362A  0100               	movlb	0	; () banked
  3547  00362C  90D8               	bcf	status,0,c
  3548  00362E  3775               	rlcf	??_OpenADC& (0+255),f,b
  3549  003630  0100               	movlb	0	; () banked
  3550  003632  90D8               	bcf	status,0,c
  3551  003634  3775               	rlcf	??_OpenADC& (0+255),f,b
  3552  003636  0E38               	movlw	56
  3553  003638  0100               	movlb	0	; () banked
  3554  00363A  1775               	andwf	??_OpenADC& (0+255),f,b
  3555  00363C  C077  F076         	movff	OpenADC@config,??_OpenADC+1
  3556  003640  0100               	movlb	0	; () banked
  3557  003642  3B76               	swapf	(??_OpenADC+1)& (0+255),f,b
  3558  003644  0E0F               	movlw	15
  3559  003646  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  3560  003648  0E07               	movlw	7
  3561  00364A  0100               	movlb	0	; () banked
  3562  00364C  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  3563  00364E  0100               	movlb	0	; () banked
  3564  003650  5177               	movf	OpenADC@config& (0+255),w,b
  3565  003652  0B80               	andlw	128
  3566  003654  0100               	movlb	0	; () banked
  3567  003656  1176               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3568  003658  0100               	movlb	0	; () banked
  3569  00365A  1175               	iorwf	??_OpenADC& (0+255),w,b
  3570  00365C  6EC0               	movwf	4032,c	;volatile
  3571                           
  3572                           ; BSR set to: 0
  3573  00365E  0100               	movlb	0	; () banked
  3574  003660  AF73               	btfss	OpenADC@config2& (0+255),7,b
  3575  003662  D003               	goto	l707
  3576                           
  3577                           ; BSR set to: 0
  3578  003664  9C9E               	bcf	3998,6,c	;volatile
  3579  003666  8C9D               	bsf	3997,6,c	;volatile
  3580  003668  8CF2               	bsf	intcon,6,c	;volatile
  3581  00366A                     l707:
  3582                           
  3583                           ; BSR set to: 0
  3584  00366A  80C2               	bsf	4034,0,c	;volatile
  3585                           
  3586                           ; BSR set to: 0
  3587  00366C  0012               	return		;funcret
  3588  00366E                     __end_of_OpenADC:
  3589                           	opt stack 0
  3590                           tblptru	equ	0xFF8
  3591                           tblptrh	equ	0xFF7
  3592                           tblptrl	equ	0xFF6
  3593                           tablat	equ	0xFF5
  3594                           prodh	equ	0xFF4
  3595                           prodl	equ	0xFF3
  3596                           intcon	equ	0xFF2
  3597                           intcon2	equ	0xFF1
  3598                           postinc0	equ	0xFEE
  3599                           wreg	equ	0xFE8
  3600                           postdec1	equ	0xFE5
  3601                           fsr1l	equ	0xFE1
  3602                           indf2	equ	0xFDF
  3603                           fsr2h	equ	0xFDA
  3604                           fsr2l	equ	0xFD9
  3605                           status	equ	0xFD8
  3606                           
  3607 ;; *************** function _CANInitialize *****************
  3608 ;; Defined at:
  3609 ;;		line 218 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;  propSeg         1    wreg     unsigned char 
  3612 ;;  phaseSeg1       1   33[BANK0 ] unsigned char 
  3613 ;;  phaseSeg2       1   34[BANK0 ] unsigned char 
  3614 ;;  SJW             1   35[BANK0 ] unsigned char 
  3615 ;;  BRP             1   36[BANK0 ] unsigned char 
  3616 ;;  flags           1   37[BANK0 ] enum E16844
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  propSeg         1   42[BANK0 ] unsigned char 
  3619 ;;  FilterConfig    1   44[BANK0 ] unsigned char 
  3620 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;		None               void
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3630 ;;      Params:         0       5       0       0
  3631 ;;      Locals:         0       3       0       0
  3632 ;;      Temps:          0       4       0       0
  3633 ;;      Totals:         0      12       0       0
  3634 ;;Total ram usage:       12 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    5
  3637 ;; This function calls:
  3638 ;;		_CANOperationMode
  3639 ;;		_CANSetFilter
  3640 ;;		_CANSetMask
  3641 ;; This function is called by:
  3642 ;;		_configurazione_iniziale
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text8
  3647  00300E                     __ptext8:
  3648                           	opt stack 0
  3649  00300E                     _CANInitialize:
  3650                           	opt stack 24
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;incstack = 0
  3654                           ;CANInitialize@propSeg stored from wreg
  3655  00300E  0100               	movlb	0	; () banked
  3656  003010  6F8A               	movwf	CANInitialize@propSeg& (0+255),b
  3657                           
  3658                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3659                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3660                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3661  003012  0E80               	movlw	128
  3662  003014  EC9F  F01C         	call	_CANOperationMode
  3663                           
  3664                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3665  003018  0E00               	movlw	0
  3666  00301A  6E70               	movwf	3952,c	;volatile
  3667                           
  3668                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3669  00301C  0E00               	movlw	0
  3670  00301E  6E71               	movwf	3953,c	;volatile
  3671                           
  3672                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3673  003020  0E00               	movlw	0
  3674  003022  6E72               	movwf	3954,c	;volatile
  3675                           
  3676                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3677  003024  0100               	movlb	0	; () banked
  3678  003026  4183               	rrncf	CANInitialize@SJW& (0+255),w,b
  3679  003028  42E8               	rrncf	wreg,f,c
  3680  00302A  0BC0               	andlw	192
  3681  00302C  0100               	movlb	0	; () banked
  3682  00302E  6F83               	movwf	CANInitialize@SJW& (0+255),b
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3686  003030  0100               	movlb	0	; () banked
  3687  003032  5183               	movf	CANInitialize@SJW& (0+255),w,b
  3688  003034  1270               	iorwf	3952,f,c	;volatile
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3692  003036  0100               	movlb	0	; () banked
  3693  003038  5184               	movf	CANInitialize@BRP& (0+255),w,b
  3694  00303A  1270               	iorwf	3952,f,c	;volatile
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3698  00303C  0100               	movlb	0	; () banked
  3699  00303E  518A               	movf	CANInitialize@propSeg& (0+255),w,b
  3700  003040  1271               	iorwf	3953,f,c	;volatile
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3704  003042  0100               	movlb	0	; () banked
  3705  003044  3981               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3706  003046  42E8               	rrncf	wreg,f,c
  3707  003048  0BF8               	andlw	248
  3708  00304A  0100               	movlb	0	; () banked
  3709  00304C  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3713  00304E  0100               	movlb	0	; () banked
  3714  003050  5181               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3715  003052  1271               	iorwf	3953,f,c	;volatile
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3719  003054  0100               	movlb	0	; () banked
  3720  003056  A585               	btfss	CANInitialize@flags& (0+255),2,b
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3724  003058  8C71               	bsf	3953,6,c	;volatile
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3728  00305A  0100               	movlb	0	; () banked
  3729  00305C  B185               	btfsc	CANInitialize@flags& (0+255),0,b
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3733  00305E  8E71               	bsf	3953,7,c	;volatile
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3737                           
  3738                           ; BSR set to: 0
  3739  003060  0100               	movlb	0	; () banked
  3740  003062  5182               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3741  003064  1272               	iorwf	3954,f,c	;volatile
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3745  003066  0100               	movlb	0	; () banked
  3746  003068  B385               	btfsc	CANInitialize@flags& (0+255),1,b
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3750  00306A  8C72               	bsf	3954,6,c	;volatile
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3754                           
  3755                           ; BSR set to: 0
  3756  00306C  0100               	movlb	0	; () banked
  3757  00306E  5185               	movf	CANInitialize@flags& (0+255),w,b
  3758  003070  0B60               	andlw	96
  3759  003072  6E60               	movwf	3936,c	;volatile
  3760                           
  3761                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3762  003074  0100               	movlb	0	; () banked
  3763  003076  5185               	movf	CANInitialize@flags& (0+255),w,b
  3764  003078  0B10               	andlw	16
  3765  00307A  0AFF               	xorlw	255
  3766  00307C  B4D8               	btfsc	status,2,c
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3770  00307E  8460               	bsf	3936,2,c	;volatile
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3774  003080  CF60 FF50          	movff	3936,3920	;volatile
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3778  003084  0E00               	movlw	0
  3779  003086  0100               	movlb	0	; () banked
  3780  003088  6F73               	movwf	CANSetMask@mask& (0+255),b
  3781  00308A  0E00               	movlw	0
  3782  00308C  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  3783  00308E  0E00               	movlw	0
  3784  003090  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3785  003092  0E00               	movlw	0
  3786  003094  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3787  003096  0EF7               	movlw	247
  3788  003098  0100               	movlb	0	; () banked
  3789  00309A  6F77               	movwf	CANSetMask@type& (0+255),b
  3790  00309C  0E01               	movlw	1
  3791  00309E  EC51  F015         	call	_CANSetMask
  3792                           
  3793                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3794  0030A2  0E00               	movlw	0
  3795  0030A4  0100               	movlb	0	; () banked
  3796  0030A6  6F73               	movwf	CANSetMask@mask& (0+255),b
  3797  0030A8  0E00               	movlw	0
  3798  0030AA  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  3799  0030AC  0E00               	movlw	0
  3800  0030AE  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3801  0030B0  0E00               	movlw	0
  3802  0030B2  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3803  0030B4  0EF7               	movlw	247
  3804  0030B6  0100               	movlb	0	; () banked
  3805  0030B8  6F77               	movwf	CANSetMask@type& (0+255),b
  3806  0030BA  0E02               	movlw	2
  3807  0030BC  EC51  F015         	call	_CANSetMask
  3808                           
  3809                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3810  0030C0  D00F               	goto	l3610
  3811  0030C2                     l3604:
  3812                           
  3813                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3814  0030C2  0EF7               	movlw	247
  3815  0030C4  0100               	movlb	0	; () banked
  3816  0030C6  6F8B               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3817  0030C8  D007               	goto	l3606
  3818  0030CA                     l364:
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3822  0030CA  0100               	movlb	0	; () banked
  3823  0030CC  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3824                           
  3825                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3826  0030CE  0100               	movlb	0	; () banked
  3827  0030D0  698C               	setf	CANInitialize@FilterConfig2& (0+255),b
  3828                           
  3829                           ;inc\CANlib.h: 273: break;
  3830  0030D2  D028               	goto	l3612
  3831  0030D4                     l365:
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3835  0030D4  0100               	movlb	0	; () banked
  3836  0030D6  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3837  0030D8                     l3606:
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3841  0030D8  0EF7               	movlw	247
  3842  0030DA  0100               	movlb	0	; () banked
  3843  0030DC  6F8C               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;inc\CANlib.h: 278: }
  3847                           
  3848                           ;inc\CANlib.h: 277: break;
  3849  0030DE  D022               	goto	l3612
  3850  0030E0                     l3610:
  3851  0030E0  0E9F               	movlw	159
  3852  0030E2  0100               	movlb	0	; () banked
  3853  0030E4  6F86               	movwf	??_CANInitialize& (0+255),b
  3854  0030E6  0EFF               	movlw	255
  3855  0030E8  0100               	movlb	0	; () banked
  3856  0030EA  6F87               	movwf	(??_CANInitialize+1)& (0+255),b
  3857  0030EC  0100               	movlb	0	; () banked
  3858  0030EE  5185               	movf	CANInitialize@flags& (0+255),w,b
  3859  0030F0  0B60               	andlw	96
  3860  0030F2  0100               	movlb	0	; () banked
  3861  0030F4  6F88               	movwf	(??_CANInitialize+2)& (0+255),b
  3862  0030F6  6B89               	clrf	(??_CANInitialize+3)& (0+255),b
  3863  0030F8  0100               	movlb	0	; () banked
  3864  0030FA  5186               	movf	??_CANInitialize& (0+255),w,b
  3865  0030FC  0100               	movlb	0	; () banked
  3866  0030FE  1388               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3867  003100  0100               	movlb	0	; () banked
  3868  003102  5187               	movf	(??_CANInitialize+1)& (0+255),w,b
  3869  003104  0100               	movlb	0	; () banked
  3870  003106  1389               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3871                           
  3872                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3873                           ; Switch size 1, requested type "space"
  3874                           ; Number of cases is 1, Range of values is 0 to 0
  3875                           ; switch strategies available:
  3876                           ; Name         Instructions Cycles
  3877                           ; simple_byte            4     3 (average)
  3878                           ;	Chosen strategy is simple_byte
  3879  003108  0100               	movlb	0	; () banked
  3880  00310A  5189               	movf	(??_CANInitialize+3)& (0+255),w,b
  3881  00310C  0A00               	xorlw	0	; case 0
  3882  00310E  A4D8               	btfss	status,2,c
  3883  003110  D7E1               	goto	l365
  3884                           
  3885                           ; BSR set to: 0
  3886                           ; Switch size 1, requested type "space"
  3887                           ; Number of cases is 2, Range of values is 191 to 223
  3888                           ; switch strategies available:
  3889                           ; Name         Instructions Cycles
  3890                           ; simple_byte            7     4 (average)
  3891                           ;	Chosen strategy is simple_byte
  3892  003112  0100               	movlb	0	; () banked
  3893  003114  5188               	movf	(??_CANInitialize+2)& (0+255),w,b
  3894  003116  0ABF               	xorlw	191	; case 191
  3895  003118  B4D8               	btfsc	status,2,c
  3896  00311A  D7D7               	goto	l364
  3897  00311C  0A60               	xorlw	96	; case 223
  3898  00311E  B4D8               	btfsc	status,2,c
  3899  003120  D7D0               	goto	l3604
  3900  003122  D7D8               	goto	l365
  3901  003124                     l3612:
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3905  003124  0E00               	movlw	0
  3906  003126  0100               	movlb	0	; () banked
  3907  003128  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3908  00312A  0E00               	movlw	0
  3909  00312C  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3910  00312E  0E00               	movlw	0
  3911  003130  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3912  003132  0E00               	movlw	0
  3913  003134  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3914  003136  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3915  00313A  0E00               	movlw	0
  3916  00313C  ECB5  F000         	call	_CANSetFilter
  3917                           
  3918                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3919  003140  0E00               	movlw	0
  3920  003142  0100               	movlb	0	; () banked
  3921  003144  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3922  003146  0E00               	movlw	0
  3923  003148  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3924  00314A  0E00               	movlw	0
  3925  00314C  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3926  00314E  0E00               	movlw	0
  3927  003150  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3928  003152  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3929  003156  0E01               	movlw	1
  3930  003158  ECB5  F000         	call	_CANSetFilter
  3931                           
  3932                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3933  00315C  0E00               	movlw	0
  3934  00315E  0100               	movlb	0	; () banked
  3935  003160  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3936  003162  0E00               	movlw	0
  3937  003164  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3938  003166  0E00               	movlw	0
  3939  003168  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3940  00316A  0E00               	movlw	0
  3941  00316C  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3942  00316E  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3943  003172  0E02               	movlw	2
  3944  003174  ECB5  F000         	call	_CANSetFilter
  3945                           
  3946                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3947  003178  0E00               	movlw	0
  3948  00317A  0100               	movlb	0	; () banked
  3949  00317C  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3950  00317E  0E00               	movlw	0
  3951  003180  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3952  003182  0E00               	movlw	0
  3953  003184  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3954  003186  0E00               	movlw	0
  3955  003188  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3956  00318A  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3957  00318E  0E03               	movlw	3
  3958  003190  ECB5  F000         	call	_CANSetFilter
  3959                           
  3960                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3961  003194  0E00               	movlw	0
  3962  003196  0100               	movlb	0	; () banked
  3963  003198  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3964  00319A  0E00               	movlw	0
  3965  00319C  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3966  00319E  0E00               	movlw	0
  3967  0031A0  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3968  0031A2  0E00               	movlw	0
  3969  0031A4  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3970  0031A6  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3971  0031AA  0E04               	movlw	4
  3972  0031AC  ECB5  F000         	call	_CANSetFilter
  3973                           
  3974                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3975  0031B0  0E00               	movlw	0
  3976  0031B2  0100               	movlb	0	; () banked
  3977  0031B4  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3978  0031B6  0E00               	movlw	0
  3979  0031B8  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3980  0031BA  0E00               	movlw	0
  3981  0031BC  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3982  0031BE  0E00               	movlw	0
  3983  0031C0  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3984  0031C2  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3985  0031C6  0E05               	movlw	5
  3986  0031C8  ECB5  F000         	call	_CANSetFilter
  3987                           
  3988                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3989  0031CC  0E00               	movlw	0
  3990  0031CE  EC9F  F01C         	call	_CANOperationMode
  3991  0031D2  0012               	return		;funcret
  3992  0031D4                     __end_of_CANInitialize:
  3993                           	opt stack 0
  3994                           tblptru	equ	0xFF8
  3995                           tblptrh	equ	0xFF7
  3996                           tblptrl	equ	0xFF6
  3997                           tablat	equ	0xFF5
  3998                           prodh	equ	0xFF4
  3999                           prodl	equ	0xFF3
  4000                           intcon	equ	0xFF2
  4001                           intcon2	equ	0xFF1
  4002                           postinc0	equ	0xFEE
  4003                           wreg	equ	0xFE8
  4004                           postdec1	equ	0xFE5
  4005                           fsr1l	equ	0xFE1
  4006                           indf2	equ	0xFDF
  4007                           fsr2h	equ	0xFDA
  4008                           fsr2l	equ	0xFD9
  4009                           status	equ	0xFD8
  4010                           
  4011 ;; *************** function _CANSetMask *****************
  4012 ;; Defined at:
  4013 ;;		line 640 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  numBuffer       1    wreg     enum E16878
  4016 ;;  mask            4   19[BANK0 ] unsigned long 
  4017 ;;  type            1   23[BANK0 ] enum E16844
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  numBuffer       1   28[BANK0 ] enum E16878
  4020 ;;  tamp            4   29[BANK0 ] unsigned long 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;		None               void
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4030 ;;      Params:         0       5       0       0
  4031 ;;      Locals:         0       5       0       0
  4032 ;;      Temps:          0       4       0       0
  4033 ;;      Totals:         0      14       0       0
  4034 ;;Total ram usage:       14 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    4
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_CANInitialize
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text9
  4045  002AA2                     __ptext9:
  4046                           	opt stack 0
  4047  002AA2                     _CANSetMask:
  4048                           	opt stack 24
  4049                           
  4050                           ;incstack = 0
  4051                           ;CANSetMask@numBuffer stored from wreg
  4052  002AA2  0100               	movlb	0	; () banked
  4053  002AA4  6F7C               	movwf	CANSetMask@numBuffer& (0+255),b
  4054                           
  4055                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  4056  002AA6  0100               	movlb	0	; () banked
  4057  002AA8  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  4058  002AAA  A4D8               	btfss	status,2,c
  4059  002AAC  D056               	goto	l3168
  4060                           
  4061                           ; BSR set to: 0
  4062  002AAE  0100               	movlb	0	; () banked
  4063  002AB0  2977               	incf	CANSetMask@type& (0+255),w,b
  4064  002AB2  A4D8               	btfss	status,2,c
  4065  002AB4  D052               	goto	l3168
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;inc\CANlib.h: 644: {
  4069                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  4070  002AB6  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  4071  002ABA  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4072  002ABE  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4073  002AC2  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4074  002AC6  0E04               	movlw	4
  4075  002AC8  D006               	goto	u3180
  4076  002ACA                     u3185:
  4077  002ACA  0100               	movlb	0	; () banked
  4078  002ACC  90D8               	bcf	status,0,c
  4079  002ACE  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4080  002AD0  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4081  002AD2  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4082  002AD4  3378               	rrcf	??_CANSetMask& (0+255),f,b
  4083  002AD6                     u3180:
  4084  002AD6  2EE8               	decfsz	wreg,f,c
  4085  002AD8  D7F8               	goto	u3185
  4086  002ADA  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4087  002ADE  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4088  002AE2  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4089  002AE6  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  4093  002AEA  0100               	movlb	0	; () banked
  4094  002AEC  517D               	movf	CANSetMask@tamp& (0+255),w,b
  4095  002AEE  0100               	movlb	0	; () banked
  4096  002AF0  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4097  002AF2  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4098  002AF4  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4099  002AF6  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  4103  002AF8  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  4107  002AFC  0E07               	movlw	7
  4108  002AFE  0100               	movlb	0	; () banked
  4109  002B00  1573               	andwf	CANSetMask@mask& (0+255),w,b
  4110  002B02  0100               	movlb	0	; () banked
  4111  002B04  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4112  002B06  0E00               	movlw	0
  4113  002B08  0100               	movlb	0	; () banked
  4114  002B0A  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4115  002B0C  0100               	movlb	0	; () banked
  4116  002B0E  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4117  002B10  0E00               	movlw	0
  4118  002B12  0100               	movlb	0	; () banked
  4119  002B14  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4120  002B16  0100               	movlb	0	; () banked
  4121  002B18  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4122  002B1A  0E00               	movlw	0
  4123  002B1C  0100               	movlb	0	; () banked
  4124  002B1E  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4125  002B20  0100               	movlb	0	; () banked
  4126  002B22  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  4130  002B24  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  4131  002B28  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4132  002B2C  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4133  002B30  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4134  002B34  0E05               	movlw	5
  4135  002B36                     u3195:
  4136  002B36  90D8               	bcf	status,0,c
  4137  002B38  0100               	movlb	0	; () banked
  4138  002B3A  3778               	rlcf	??_CANSetMask& (0+255),f,b
  4139  002B3C  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4140  002B3E  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4141  002B40  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4142  002B42  2EE8               	decfsz	wreg,f,c
  4143  002B44  D7F8               	goto	u3195
  4144  002B46  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4145  002B4A  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4146  002B4E  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4147  002B52  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4151  002B56  C07D  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4152  002B5A                     l3168:
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;inc\CANlib.h: 652: }
  4156                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4157  002B5A  0E02               	movlw	2
  4158  002B5C  0100               	movlb	0	; () banked
  4159  002B5E  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4160  002B60  A4D8               	btfss	status,2,c
  4161  002B62  D056               	goto	l3184
  4162                           
  4163                           ; BSR set to: 0
  4164  002B64  0100               	movlb	0	; () banked
  4165  002B66  2977               	incf	CANSetMask@type& (0+255),w,b
  4166  002B68  A4D8               	btfss	status,2,c
  4167  002B6A  D052               	goto	l3184
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;inc\CANlib.h: 655: {
  4171                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  4172  002B6C  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  4173  002B70  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4174  002B74  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4175  002B78  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4176  002B7C  0E04               	movlw	4
  4177  002B7E  D006               	goto	u3220
  4178  002B80                     u3225:
  4179  002B80  0100               	movlb	0	; () banked
  4180  002B82  90D8               	bcf	status,0,c
  4181  002B84  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4182  002B86  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4183  002B88  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4184  002B8A  3378               	rrcf	??_CANSetMask& (0+255),f,b
  4185  002B8C                     u3220:
  4186  002B8C  2EE8               	decfsz	wreg,f,c
  4187  002B8E  D7F8               	goto	u3225
  4188  002B90  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4189  002B94  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4190  002B98  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4191  002B9C  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4195  002BA0  0100               	movlb	0	; () banked
  4196  002BA2  517D               	movf	CANSetMask@tamp& (0+255),w,b
  4197  002BA4  0100               	movlb	0	; () banked
  4198  002BA6  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4199  002BA8  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4200  002BAA  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4201  002BAC  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4205  002BAE  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4209  002BB2  0E07               	movlw	7
  4210  002BB4  0100               	movlb	0	; () banked
  4211  002BB6  1573               	andwf	CANSetMask@mask& (0+255),w,b
  4212  002BB8  0100               	movlb	0	; () banked
  4213  002BBA  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4214  002BBC  0E00               	movlw	0
  4215  002BBE  0100               	movlb	0	; () banked
  4216  002BC0  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4217  002BC2  0100               	movlb	0	; () banked
  4218  002BC4  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4219  002BC6  0E00               	movlw	0
  4220  002BC8  0100               	movlb	0	; () banked
  4221  002BCA  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4222  002BCC  0100               	movlb	0	; () banked
  4223  002BCE  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4224  002BD0  0E00               	movlw	0
  4225  002BD2  0100               	movlb	0	; () banked
  4226  002BD4  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4227  002BD6  0100               	movlb	0	; () banked
  4228  002BD8  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4232  002BDA  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  4233  002BDE  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4234  002BE2  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4235  002BE6  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4236  002BEA  0E05               	movlw	5
  4237  002BEC                     u3235:
  4238  002BEC  90D8               	bcf	status,0,c
  4239  002BEE  0100               	movlb	0	; () banked
  4240  002BF0  3778               	rlcf	??_CANSetMask& (0+255),f,b
  4241  002BF2  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4242  002BF4  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4243  002BF6  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4244  002BF8  2EE8               	decfsz	wreg,f,c
  4245  002BFA  D7F8               	goto	u3235
  4246  002BFC  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4247  002C00  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4248  002C04  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4249  002C08  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4253  002C0C  C07D  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4254  002C10                     l3184:
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;inc\CANlib.h: 663: }
  4258                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4259  002C10  0100               	movlb	0	; () banked
  4260  002C12  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  4261  002C14  A4D8               	btfss	status,2,c
  4262  002C16  D087               	goto	l3216
  4263                           
  4264                           ; BSR set to: 0
  4265  002C18  0EF7               	movlw	247
  4266  002C1A  0100               	movlb	0	; () banked
  4267  002C1C  1977               	xorwf	CANSetMask@type& (0+255),w,b
  4268  002C1E  A4D8               	btfss	status,2,c
  4269  002C20  D082               	goto	l3216
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;inc\CANlib.h: 666: {
  4273                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4274  002C22  0100               	movlb	0	; () banked
  4275  002C24  5173               	movf	CANSetMask@mask& (0+255),w,b
  4276  002C26  0100               	movlb	0	; () banked
  4277  002C28  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4278  002C2A  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4279  002C2C  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4280  002C2E  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4284  002C30  C07D  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4288  002C34  0E00               	movlw	0
  4289  002C36  0100               	movlb	0	; () banked
  4290  002C38  1573               	andwf	CANSetMask@mask& (0+255),w,b
  4291  002C3A  0100               	movlb	0	; () banked
  4292  002C3C  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4293  002C3E  0EFF               	movlw	255
  4294  002C40  0100               	movlb	0	; () banked
  4295  002C42  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4296  002C44  0100               	movlb	0	; () banked
  4297  002C46  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4298  002C48  0E00               	movlw	0
  4299  002C4A  0100               	movlb	0	; () banked
  4300  002C4C  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4301  002C4E  0100               	movlb	0	; () banked
  4302  002C50  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4303  002C52  0E00               	movlw	0
  4304  002C54  0100               	movlb	0	; () banked
  4305  002C56  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4306  002C58  0100               	movlb	0	; () banked
  4307  002C5A  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4311  002C5C  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  4312  002C60  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4313  002C64  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4314  002C68  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4315  002C6C  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  4316  002C70  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  4317  002C74  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  4318  002C78  0100               	movlb	0	; () banked
  4319  002C7A  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  4320  002C7C  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4321  002C80  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4322  002C84  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4323  002C88  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4327  002C8C  C07D  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4331  002C90  0100               	movlb	0	; () banked
  4332  002C92  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4333  002C94  D003               	goto	l438
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4337  002C96  010F               	movlb	15	; () banked
  4338  002C98  8119               	bsf	25,0,b	;volatile
  4339  002C9A  D002               	goto	l439
  4340  002C9C                     l438:
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;inc\CANlib.h: 676: else
  4344                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4345  002C9C  010F               	movlb	15	; () banked
  4346  002C9E  9119               	bcf	25,0,b	;volatile
  4347  002CA0                     l439:
  4348                           
  4349                           ; BSR set to: 15
  4350                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4351  002CA0  0100               	movlb	0	; () banked
  4352  002CA2  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4353  002CA4  D003               	goto	l440
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4357  002CA6  010F               	movlb	15	; () banked
  4358  002CA8  8319               	bsf	25,1,b	;volatile
  4359  002CAA  D002               	goto	l441
  4360  002CAC                     l440:
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;inc\CANlib.h: 681: else
  4364                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4365  002CAC  010F               	movlb	15	; () banked
  4366  002CAE  9319               	bcf	25,1,b	;volatile
  4367  002CB0                     l441:
  4368                           
  4369                           ; BSR set to: 15
  4370                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4371  002CB0  0100               	movlb	0	; () banked
  4372  002CB2  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4373  002CB4  D003               	goto	l442
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4377  002CB6  010F               	movlb	15	; () banked
  4378  002CB8  8B19               	bsf	25,5,b	;volatile
  4379  002CBA  D002               	goto	l443
  4380  002CBC                     l442:
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;inc\CANlib.h: 686: else
  4384                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4385  002CBC  010F               	movlb	15	; () banked
  4386  002CBE  9B19               	bcf	25,5,b	;volatile
  4387  002CC0                     l443:
  4388                           
  4389                           ; BSR set to: 15
  4390                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4391  002CC0  0100               	movlb	0	; () banked
  4392  002CC2  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4393  002CC4  D003               	goto	l444
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4397  002CC6  010F               	movlb	15	; () banked
  4398  002CC8  8D19               	bsf	25,6,b	;volatile
  4399  002CCA  D002               	goto	l445
  4400  002CCC                     l444:
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;inc\CANlib.h: 691: else
  4404                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4405  002CCC  010F               	movlb	15	; () banked
  4406  002CCE  9D19               	bcf	25,6,b	;volatile
  4407  002CD0                     l445:
  4408                           
  4409                           ; BSR set to: 15
  4410                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4411  002CD0  0100               	movlb	0	; () banked
  4412  002CD2  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4413  002CD4  D003               	goto	l446
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4417  002CD6  010F               	movlb	15	; () banked
  4418  002CD8  8F19               	bsf	25,7,b	;volatile
  4419  002CDA  D002               	goto	l3210
  4420  002CDC                     l446:
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;inc\CANlib.h: 696: else
  4424                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4425  002CDC  010F               	movlb	15	; () banked
  4426  002CDE  9F19               	bcf	25,7,b	;volatile
  4427  002CE0                     l3210:
  4428                           
  4429                           ; BSR set to: 15
  4430                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4431  002CE0  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  4432  002CE4  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4433  002CE8  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4434  002CEC  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4435  002CF0  0E16               	movlw	22
  4436  002CF2  D006               	goto	u3310
  4437  002CF4                     u3315:
  4438  002CF4  0100               	movlb	0	; () banked
  4439  002CF6  90D8               	bcf	status,0,c
  4440  002CF8  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4441  002CFA  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4442  002CFC  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4443  002CFE  3378               	rrcf	??_CANSetMask& (0+255),f,b
  4444  002D00                     u3310:
  4445  002D00  2EE8               	decfsz	wreg,f,c
  4446  002D02  D7F8               	goto	u3315
  4447  002D04  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4448  002D08  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4449  002D0C  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4450  002D10  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4454  002D14  0100               	movlb	0	; () banked
  4455  002D16  517D               	movf	CANSetMask@tamp& (0+255),w,b
  4456  002D18  0100               	movlb	0	; () banked
  4457  002D1A  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4458  002D1C  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4459  002D1E  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4460  002D20  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4464  002D22  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4465  002D26                     l3216:
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;inc\CANlib.h: 702: }
  4469                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4470  002D26  0E02               	movlw	2
  4471  002D28  0100               	movlb	0	; () banked
  4472  002D2A  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4473  002D2C  A4D8               	btfss	status,2,c
  4474  002D2E  0012               	return	
  4475                           
  4476                           ; BSR set to: 0
  4477  002D30  0EF7               	movlw	247
  4478  002D32  0100               	movlb	0	; () banked
  4479  002D34  1977               	xorwf	CANSetMask@type& (0+255),w,b
  4480  002D36  A4D8               	btfss	status,2,c
  4481  002D38  0012               	return	
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;inc\CANlib.h: 705: {
  4485                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4486  002D3A  0100               	movlb	0	; () banked
  4487  002D3C  5173               	movf	CANSetMask@mask& (0+255),w,b
  4488  002D3E  0100               	movlb	0	; () banked
  4489  002D40  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4490  002D42  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4491  002D44  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4492  002D46  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4496  002D48  C07D  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4500  002D4C  0E00               	movlw	0
  4501  002D4E  0100               	movlb	0	; () banked
  4502  002D50  1573               	andwf	CANSetMask@mask& (0+255),w,b
  4503  002D52  0100               	movlb	0	; () banked
  4504  002D54  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4505  002D56  0EFF               	movlw	255
  4506  002D58  0100               	movlb	0	; () banked
  4507  002D5A  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4508  002D5C  0100               	movlb	0	; () banked
  4509  002D5E  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4510  002D60  0E00               	movlw	0
  4511  002D62  0100               	movlb	0	; () banked
  4512  002D64  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4513  002D66  0100               	movlb	0	; () banked
  4514  002D68  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4515  002D6A  0E00               	movlw	0
  4516  002D6C  0100               	movlb	0	; () banked
  4517  002D6E  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4518  002D70  0100               	movlb	0	; () banked
  4519  002D72  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4523  002D74  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  4524  002D78  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4525  002D7C  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4526  002D80  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4527  002D84  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  4528  002D88  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  4529  002D8C  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  4530  002D90  0100               	movlb	0	; () banked
  4531  002D92  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  4532  002D94  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4533  002D98  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4534  002D9C  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4535  002DA0  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4539  002DA4  C07D  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4543  002DA8  0100               	movlb	0	; () banked
  4544  002DAA  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4545  002DAC  D003               	goto	l449
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4549  002DAE  010F               	movlb	15	; () banked
  4550  002DB0  811D               	bsf	29,0,b	;volatile
  4551  002DB2  D002               	goto	l450
  4552  002DB4                     l449:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;inc\CANlib.h: 715: else
  4556                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4557  002DB4  010F               	movlb	15	; () banked
  4558  002DB6  911D               	bcf	29,0,b	;volatile
  4559  002DB8                     l450:
  4560                           
  4561                           ; BSR set to: 15
  4562                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4563  002DB8  0100               	movlb	0	; () banked
  4564  002DBA  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4565  002DBC  D003               	goto	l451
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4569  002DBE  010F               	movlb	15	; () banked
  4570  002DC0  831D               	bsf	29,1,b	;volatile
  4571  002DC2  D002               	goto	l452
  4572  002DC4                     l451:
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;inc\CANlib.h: 720: else
  4576                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4577  002DC4  010F               	movlb	15	; () banked
  4578  002DC6  931D               	bcf	29,1,b	;volatile
  4579  002DC8                     l452:
  4580                           
  4581                           ; BSR set to: 15
  4582                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4583  002DC8  0100               	movlb	0	; () banked
  4584  002DCA  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4585  002DCC  D003               	goto	l453
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4589  002DCE  010F               	movlb	15	; () banked
  4590  002DD0  8B1D               	bsf	29,5,b	;volatile
  4591  002DD2  D002               	goto	l454
  4592  002DD4                     l453:
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;inc\CANlib.h: 725: else
  4596                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4597  002DD4  010F               	movlb	15	; () banked
  4598  002DD6  9B1D               	bcf	29,5,b	;volatile
  4599  002DD8                     l454:
  4600                           
  4601                           ; BSR set to: 15
  4602                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4603  002DD8  0100               	movlb	0	; () banked
  4604  002DDA  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4605  002DDC  D003               	goto	l455
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4609  002DDE  010F               	movlb	15	; () banked
  4610  002DE0  8D1D               	bsf	29,6,b	;volatile
  4611  002DE2  D002               	goto	l456
  4612  002DE4                     l455:
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;inc\CANlib.h: 730: else
  4616                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4617  002DE4  010F               	movlb	15	; () banked
  4618  002DE6  9D1D               	bcf	29,6,b	;volatile
  4619  002DE8                     l456:
  4620                           
  4621                           ; BSR set to: 15
  4622                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4623  002DE8  0100               	movlb	0	; () banked
  4624  002DEA  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4625  002DEC  D003               	goto	l457
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4629  002DEE  010F               	movlb	15	; () banked
  4630  002DF0  8F1D               	bsf	29,7,b	;volatile
  4631  002DF2  D002               	goto	l3242
  4632  002DF4                     l457:
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;inc\CANlib.h: 735: else
  4636                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4637  002DF4  010F               	movlb	15	; () banked
  4638  002DF6  9F1D               	bcf	29,7,b	;volatile
  4639  002DF8                     l3242:
  4640                           
  4641                           ; BSR set to: 15
  4642                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4643  002DF8  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  4644  002DFC  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4645  002E00  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4646  002E04  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4647  002E08  0E16               	movlw	22
  4648  002E0A  D006               	goto	u3390
  4649  002E0C                     u3395:
  4650  002E0C  0100               	movlb	0	; () banked
  4651  002E0E  90D8               	bcf	status,0,c
  4652  002E10  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4653  002E12  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4654  002E14  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4655  002E16  3378               	rrcf	??_CANSetMask& (0+255),f,b
  4656  002E18                     u3390:
  4657  002E18  2EE8               	decfsz	wreg,f,c
  4658  002E1A  D7F8               	goto	u3395
  4659  002E1C  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4660  002E20  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4661  002E24  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4662  002E28  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4666  002E2C  0100               	movlb	0	; () banked
  4667  002E2E  517D               	movf	CANSetMask@tamp& (0+255),w,b
  4668  002E30  0100               	movlb	0	; () banked
  4669  002E32  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4670  002E34  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4671  002E36  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4672  002E38  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4676  002E3A  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4677  002E3E  0012               	return	
  4678  002E40                     __end_of_CANSetMask:
  4679                           	opt stack 0
  4680                           tblptru	equ	0xFF8
  4681                           tblptrh	equ	0xFF7
  4682                           tblptrl	equ	0xFF6
  4683                           tablat	equ	0xFF5
  4684                           prodh	equ	0xFF4
  4685                           prodl	equ	0xFF3
  4686                           intcon	equ	0xFF2
  4687                           intcon2	equ	0xFF1
  4688                           postinc0	equ	0xFEE
  4689                           wreg	equ	0xFE8
  4690                           postdec1	equ	0xFE5
  4691                           fsr1l	equ	0xFE1
  4692                           indf2	equ	0xFDF
  4693                           fsr2h	equ	0xFDA
  4694                           fsr2l	equ	0xFD9
  4695                           status	equ	0xFD8
  4696                           
  4697 ;; *************** function _CANSetFilter *****************
  4698 ;; Defined at:
  4699 ;;		line 748 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;  numBuffer       1    wreg     enum E16881
  4702 ;;  filter          4   19[BANK0 ] unsigned long 
  4703 ;;  type            1   23[BANK0 ] enum E16844
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  numBuffer       1   28[BANK0 ] enum E16881
  4706 ;;  tamp            4   29[BANK0 ] unsigned long 
  4707 ;; Return value:  Size  Location     Type
  4708 ;;		None               void
  4709 ;; Registers used:
  4710 ;;		wreg, status,2, status,0
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4716 ;;      Params:         0       5       0       0
  4717 ;;      Locals:         0       5       0       0
  4718 ;;      Temps:          0       4       0       0
  4719 ;;      Totals:         0      14       0       0
  4720 ;;Total ram usage:       14 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    4
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_CANInitialize
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           	psect	text10
  4731  00016A                     __ptext10:
  4732                           	opt stack 0
  4733  00016A                     _CANSetFilter:
  4734                           	opt stack 24
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;incstack = 0
  4738                           ;CANSetFilter@numBuffer stored from wreg
  4739  00016A  0100               	movlb	0	; () banked
  4740  00016C  6F7C               	movwf	CANSetFilter@numBuffer& (0+255),b
  4741                           
  4742                           ;inc\CANlib.h: 750: unsigned long tamp;
  4743                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4744  00016E  0100               	movlb	0	; () banked
  4745  000170  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4746  000172  0100               	movlb	0	; () banked
  4747  000174  A4D8               	btfss	status,2,c
  4748  000176  D058               	goto	l3266
  4749                           
  4750                           ; BSR set to: 0
  4751  000178  0100               	movlb	0	; () banked
  4752  00017A  2977               	incf	CANSetFilter@type& (0+255),w,b
  4753  00017C  A4D8               	btfss	status,2,c
  4754  00017E  D054               	goto	l3266
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;inc\CANlib.h: 753: {
  4758                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4759  000180  010F               	movlb	15	; () banked
  4760  000182  9701               	bcf	1,3,b	;volatile
  4761                           
  4762                           ; BSR set to: 15
  4763                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4764  000184  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4765  000188  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4766  00018C  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4767  000190  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4768  000194  0E04               	movlw	4
  4769  000196  D006               	goto	u3420
  4770  000198                     u3425:
  4771  000198  0100               	movlb	0	; () banked
  4772  00019A  90D8               	bcf	status,0,c
  4773  00019C  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4774  00019E  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4775  0001A0  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4776  0001A2  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4777  0001A4                     u3420:
  4778  0001A4  2EE8               	decfsz	wreg,f,c
  4779  0001A6  D7F8               	goto	u3425
  4780  0001A8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4781  0001AC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4782  0001B0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4783  0001B4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4787  0001B8  0100               	movlb	0	; () banked
  4788  0001BA  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4789  0001BC  0100               	movlb	0	; () banked
  4790  0001BE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4791  0001C0  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4792  0001C2  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4793  0001C4  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4797  0001C6  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4801  0001CA  0E07               	movlw	7
  4802  0001CC  0100               	movlb	0	; () banked
  4803  0001CE  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4804  0001D0  0100               	movlb	0	; () banked
  4805  0001D2  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4806  0001D4  0E00               	movlw	0
  4807  0001D6  0100               	movlb	0	; () banked
  4808  0001D8  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4809  0001DA  0100               	movlb	0	; () banked
  4810  0001DC  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4811  0001DE  0E00               	movlw	0
  4812  0001E0  0100               	movlb	0	; () banked
  4813  0001E2  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4814  0001E4  0100               	movlb	0	; () banked
  4815  0001E6  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4816  0001E8  0E00               	movlw	0
  4817  0001EA  0100               	movlb	0	; () banked
  4818  0001EC  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4819  0001EE  0100               	movlb	0	; () banked
  4820  0001F0  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4824  0001F2  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4825  0001F6  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4826  0001FA  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4827  0001FE  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4828  000202  0E05               	movlw	5
  4829  000204                     u3435:
  4830  000204  90D8               	bcf	status,0,c
  4831  000206  0100               	movlb	0	; () banked
  4832  000208  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4833  00020A  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4834  00020C  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4835  00020E  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4836  000210  2EE8               	decfsz	wreg,f,c
  4837  000212  D7F8               	goto	u3435
  4838  000214  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4839  000218  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4840  00021C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4841  000220  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4845  000224  C07D  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4846  000228                     l3266:
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;inc\CANlib.h: 763: }
  4850                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4851  000228  0100               	movlb	0	; () banked
  4852  00022A  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4853  00022C  A4D8               	btfss	status,2,c
  4854  00022E  D058               	goto	l3284
  4855                           
  4856                           ; BSR set to: 0
  4857  000230  0100               	movlb	0	; () banked
  4858  000232  2977               	incf	CANSetFilter@type& (0+255),w,b
  4859  000234  A4D8               	btfss	status,2,c
  4860  000236  D054               	goto	l3284
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;inc\CANlib.h: 766: {
  4864                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4865  000238  010F               	movlb	15	; () banked
  4866  00023A  9705               	bcf	5,3,b	;volatile
  4867                           
  4868                           ; BSR set to: 15
  4869                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4870  00023C  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4871  000240  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4872  000244  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4873  000248  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4874  00024C  0E04               	movlw	4
  4875  00024E  D006               	goto	u3460
  4876  000250                     u3465:
  4877  000250  0100               	movlb	0	; () banked
  4878  000252  90D8               	bcf	status,0,c
  4879  000254  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4880  000256  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4881  000258  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4882  00025A  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4883  00025C                     u3460:
  4884  00025C  2EE8               	decfsz	wreg,f,c
  4885  00025E  D7F8               	goto	u3465
  4886  000260  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4887  000264  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4888  000268  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4889  00026C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4893  000270  0100               	movlb	0	; () banked
  4894  000272  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4895  000274  0100               	movlb	0	; () banked
  4896  000276  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4897  000278  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4898  00027A  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4899  00027C  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4903  00027E  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4907  000282  0E07               	movlw	7
  4908  000284  0100               	movlb	0	; () banked
  4909  000286  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4910  000288  0100               	movlb	0	; () banked
  4911  00028A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4912  00028C  0E00               	movlw	0
  4913  00028E  0100               	movlb	0	; () banked
  4914  000290  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4915  000292  0100               	movlb	0	; () banked
  4916  000294  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4917  000296  0E00               	movlw	0
  4918  000298  0100               	movlb	0	; () banked
  4919  00029A  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4920  00029C  0100               	movlb	0	; () banked
  4921  00029E  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4922  0002A0  0E00               	movlw	0
  4923  0002A2  0100               	movlb	0	; () banked
  4924  0002A4  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4925  0002A6  0100               	movlb	0	; () banked
  4926  0002A8  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4930  0002AA  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4931  0002AE  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4932  0002B2  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4933  0002B6  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4934  0002BA  0E05               	movlw	5
  4935  0002BC                     u3475:
  4936  0002BC  90D8               	bcf	status,0,c
  4937  0002BE  0100               	movlb	0	; () banked
  4938  0002C0  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4939  0002C2  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4940  0002C4  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4941  0002C6  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4942  0002C8  2EE8               	decfsz	wreg,f,c
  4943  0002CA  D7F8               	goto	u3475
  4944  0002CC  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4945  0002D0  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4946  0002D4  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4947  0002D8  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4951  0002DC  C07D  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4952  0002E0                     l3284:
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;inc\CANlib.h: 776: }
  4956                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4957  0002E0  0E02               	movlw	2
  4958  0002E2  0100               	movlb	0	; () banked
  4959  0002E4  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4960  0002E6  A4D8               	btfss	status,2,c
  4961  0002E8  D058               	goto	l3302
  4962                           
  4963                           ; BSR set to: 0
  4964  0002EA  0100               	movlb	0	; () banked
  4965  0002EC  2977               	incf	CANSetFilter@type& (0+255),w,b
  4966  0002EE  A4D8               	btfss	status,2,c
  4967  0002F0  D054               	goto	l3302
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;inc\CANlib.h: 779: {
  4971                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4972  0002F2  010F               	movlb	15	; () banked
  4973  0002F4  9709               	bcf	9,3,b	;volatile
  4974                           
  4975                           ; BSR set to: 15
  4976                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4977  0002F6  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4978  0002FA  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4979  0002FE  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4980  000302  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4981  000306  0E04               	movlw	4
  4982  000308  D006               	goto	u3500
  4983  00030A                     u3505:
  4984  00030A  0100               	movlb	0	; () banked
  4985  00030C  90D8               	bcf	status,0,c
  4986  00030E  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4987  000310  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4988  000312  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4989  000314  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4990  000316                     u3500:
  4991  000316  2EE8               	decfsz	wreg,f,c
  4992  000318  D7F8               	goto	u3505
  4993  00031A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4994  00031E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4995  000322  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4996  000326  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  5000  00032A  0100               	movlb	0	; () banked
  5001  00032C  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5002  00032E  0100               	movlb	0	; () banked
  5003  000330  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5004  000332  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5005  000334  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5006  000336  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  5010  000338  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  5014  00033C  0E07               	movlw	7
  5015  00033E  0100               	movlb	0	; () banked
  5016  000340  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5017  000342  0100               	movlb	0	; () banked
  5018  000344  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5019  000346  0E00               	movlw	0
  5020  000348  0100               	movlb	0	; () banked
  5021  00034A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5022  00034C  0100               	movlb	0	; () banked
  5023  00034E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5024  000350  0E00               	movlw	0
  5025  000352  0100               	movlb	0	; () banked
  5026  000354  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5027  000356  0100               	movlb	0	; () banked
  5028  000358  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5029  00035A  0E00               	movlw	0
  5030  00035C  0100               	movlb	0	; () banked
  5031  00035E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5032  000360  0100               	movlb	0	; () banked
  5033  000362  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  5037  000364  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5038  000368  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5039  00036C  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5040  000370  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5041  000374  0E05               	movlw	5
  5042  000376                     u3515:
  5043  000376  90D8               	bcf	status,0,c
  5044  000378  0100               	movlb	0	; () banked
  5045  00037A  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  5046  00037C  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5047  00037E  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5048  000380  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5049  000382  2EE8               	decfsz	wreg,f,c
  5050  000384  D7F8               	goto	u3515
  5051  000386  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5052  00038A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5053  00038E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5054  000392  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  5058  000396  C07D  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  5059  00039A                     l3302:
  5060                           
  5061                           ; BSR set to: 0
  5062                           ;inc\CANlib.h: 789: }
  5063                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  5064  00039A  0E03               	movlw	3
  5065  00039C  0100               	movlb	0	; () banked
  5066  00039E  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5067  0003A0  A4D8               	btfss	status,2,c
  5068  0003A2  D058               	goto	l3320
  5069                           
  5070                           ; BSR set to: 0
  5071  0003A4  0100               	movlb	0	; () banked
  5072  0003A6  2977               	incf	CANSetFilter@type& (0+255),w,b
  5073  0003A8  A4D8               	btfss	status,2,c
  5074  0003AA  D054               	goto	l3320
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;inc\CANlib.h: 792: {
  5078                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  5079  0003AC  010F               	movlb	15	; () banked
  5080  0003AE  970D               	bcf	13,3,b	;volatile
  5081                           
  5082                           ; BSR set to: 15
  5083                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  5084  0003B0  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5085  0003B4  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5086  0003B8  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5087  0003BC  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5088  0003C0  0E04               	movlw	4
  5089  0003C2  D006               	goto	u3540
  5090  0003C4                     u3545:
  5091  0003C4  0100               	movlb	0	; () banked
  5092  0003C6  90D8               	bcf	status,0,c
  5093  0003C8  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5094  0003CA  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5095  0003CC  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5096  0003CE  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5097  0003D0                     u3540:
  5098  0003D0  2EE8               	decfsz	wreg,f,c
  5099  0003D2  D7F8               	goto	u3545
  5100  0003D4  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5101  0003D8  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5102  0003DC  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5103  0003E0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  5107  0003E4  0100               	movlb	0	; () banked
  5108  0003E6  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5109  0003E8  0100               	movlb	0	; () banked
  5110  0003EA  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5111  0003EC  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5112  0003EE  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5113  0003F0  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  5117  0003F2  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  5121  0003F6  0E07               	movlw	7
  5122  0003F8  0100               	movlb	0	; () banked
  5123  0003FA  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5124  0003FC  0100               	movlb	0	; () banked
  5125  0003FE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5126  000400  0E00               	movlw	0
  5127  000402  0100               	movlb	0	; () banked
  5128  000404  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5129  000406  0100               	movlb	0	; () banked
  5130  000408  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5131  00040A  0E00               	movlw	0
  5132  00040C  0100               	movlb	0	; () banked
  5133  00040E  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5134  000410  0100               	movlb	0	; () banked
  5135  000412  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5136  000414  0E00               	movlw	0
  5137  000416  0100               	movlb	0	; () banked
  5138  000418  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5139  00041A  0100               	movlb	0	; () banked
  5140  00041C  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  5144  00041E  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5145  000422  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5146  000426  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5147  00042A  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5148  00042E  0E05               	movlw	5
  5149  000430                     u3555:
  5150  000430  90D8               	bcf	status,0,c
  5151  000432  0100               	movlb	0	; () banked
  5152  000434  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  5153  000436  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5154  000438  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5155  00043A  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5156  00043C  2EE8               	decfsz	wreg,f,c
  5157  00043E  D7F8               	goto	u3555
  5158  000440  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5159  000444  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5160  000448  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5161  00044C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5165  000450  C07D  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5166  000454                     l3320:
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;inc\CANlib.h: 802: }
  5170                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5171  000454  0E04               	movlw	4
  5172  000456  0100               	movlb	0	; () banked
  5173  000458  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5174  00045A  A4D8               	btfss	status,2,c
  5175  00045C  D058               	goto	l3338
  5176                           
  5177                           ; BSR set to: 0
  5178  00045E  0100               	movlb	0	; () banked
  5179  000460  2977               	incf	CANSetFilter@type& (0+255),w,b
  5180  000462  A4D8               	btfss	status,2,c
  5181  000464  D054               	goto	l3338
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;inc\CANlib.h: 805: {
  5185                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5186  000466  010F               	movlb	15	; () banked
  5187  000468  9711               	bcf	17,3,b	;volatile
  5188                           
  5189                           ; BSR set to: 15
  5190                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5191  00046A  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5192  00046E  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5193  000472  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5194  000476  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5195  00047A  0E04               	movlw	4
  5196  00047C  D006               	goto	u3580
  5197  00047E                     u3585:
  5198  00047E  0100               	movlb	0	; () banked
  5199  000480  90D8               	bcf	status,0,c
  5200  000482  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5201  000484  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5202  000486  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5203  000488  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5204  00048A                     u3580:
  5205  00048A  2EE8               	decfsz	wreg,f,c
  5206  00048C  D7F8               	goto	u3585
  5207  00048E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5208  000492  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5209  000496  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5210  00049A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5214  00049E  0100               	movlb	0	; () banked
  5215  0004A0  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5216  0004A2  0100               	movlb	0	; () banked
  5217  0004A4  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5218  0004A6  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5219  0004A8  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5220  0004AA  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5224  0004AC  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5228  0004B0  0E07               	movlw	7
  5229  0004B2  0100               	movlb	0	; () banked
  5230  0004B4  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5231  0004B6  0100               	movlb	0	; () banked
  5232  0004B8  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5233  0004BA  0E00               	movlw	0
  5234  0004BC  0100               	movlb	0	; () banked
  5235  0004BE  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5236  0004C0  0100               	movlb	0	; () banked
  5237  0004C2  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5238  0004C4  0E00               	movlw	0
  5239  0004C6  0100               	movlb	0	; () banked
  5240  0004C8  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5241  0004CA  0100               	movlb	0	; () banked
  5242  0004CC  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5243  0004CE  0E00               	movlw	0
  5244  0004D0  0100               	movlb	0	; () banked
  5245  0004D2  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5246  0004D4  0100               	movlb	0	; () banked
  5247  0004D6  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5251  0004D8  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5252  0004DC  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5253  0004E0  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5254  0004E4  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5255  0004E8  0E05               	movlw	5
  5256  0004EA                     u3595:
  5257  0004EA  90D8               	bcf	status,0,c
  5258  0004EC  0100               	movlb	0	; () banked
  5259  0004EE  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  5260  0004F0  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5261  0004F2  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5262  0004F4  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5263  0004F6  2EE8               	decfsz	wreg,f,c
  5264  0004F8  D7F8               	goto	u3595
  5265  0004FA  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5266  0004FE  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5267  000502  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5268  000506  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5272  00050A  C07D  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5273  00050E                     l3338:
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;inc\CANlib.h: 815: }
  5277                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5278  00050E  0E05               	movlw	5
  5279  000510  0100               	movlb	0	; () banked
  5280  000512  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5281  000514  A4D8               	btfss	status,2,c
  5282  000516  D058               	goto	l3356
  5283                           
  5284                           ; BSR set to: 0
  5285  000518  0100               	movlb	0	; () banked
  5286  00051A  2977               	incf	CANSetFilter@type& (0+255),w,b
  5287  00051C  A4D8               	btfss	status,2,c
  5288  00051E  D054               	goto	l3356
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;inc\CANlib.h: 818: {
  5292                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5293  000520  010F               	movlb	15	; () banked
  5294  000522  9715               	bcf	21,3,b	;volatile
  5295                           
  5296                           ; BSR set to: 15
  5297                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5298  000524  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5299  000528  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5300  00052C  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5301  000530  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5302  000534  0E04               	movlw	4
  5303  000536  D006               	goto	u3620
  5304  000538                     u3625:
  5305  000538  0100               	movlb	0	; () banked
  5306  00053A  90D8               	bcf	status,0,c
  5307  00053C  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5308  00053E  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5309  000540  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5310  000542  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5311  000544                     u3620:
  5312  000544  2EE8               	decfsz	wreg,f,c
  5313  000546  D7F8               	goto	u3625
  5314  000548  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5315  00054C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5316  000550  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5317  000554  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5321  000558  0100               	movlb	0	; () banked
  5322  00055A  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5323  00055C  0100               	movlb	0	; () banked
  5324  00055E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5325  000560  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5326  000562  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5327  000564  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5331  000566  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5332                           
  5333                           ; BSR set to: 0
  5334                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5335  00056A  0E07               	movlw	7
  5336  00056C  0100               	movlb	0	; () banked
  5337  00056E  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5338  000570  0100               	movlb	0	; () banked
  5339  000572  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5340  000574  0E00               	movlw	0
  5341  000576  0100               	movlb	0	; () banked
  5342  000578  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5343  00057A  0100               	movlb	0	; () banked
  5344  00057C  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5345  00057E  0E00               	movlw	0
  5346  000580  0100               	movlb	0	; () banked
  5347  000582  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5348  000584  0100               	movlb	0	; () banked
  5349  000586  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5350  000588  0E00               	movlw	0
  5351  00058A  0100               	movlb	0	; () banked
  5352  00058C  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5353  00058E  0100               	movlb	0	; () banked
  5354  000590  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5358  000592  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5359  000596  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5360  00059A  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5361  00059E  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5362  0005A2  0E05               	movlw	5
  5363  0005A4                     u3635:
  5364  0005A4  90D8               	bcf	status,0,c
  5365  0005A6  0100               	movlb	0	; () banked
  5366  0005A8  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  5367  0005AA  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5368  0005AC  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5369  0005AE  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5370  0005B0  2EE8               	decfsz	wreg,f,c
  5371  0005B2  D7F8               	goto	u3635
  5372  0005B4  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5373  0005B8  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5374  0005BC  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5375  0005C0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5379  0005C4  C07D  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5380  0005C8                     l3356:
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;inc\CANlib.h: 828: }
  5384                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5385  0005C8  0100               	movlb	0	; () banked
  5386  0005CA  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5387  0005CC  0100               	movlb	0	; () banked
  5388  0005CE  A4D8               	btfss	status,2,c
  5389  0005D0  D089               	goto	l3390
  5390                           
  5391                           ; BSR set to: 0
  5392  0005D2  0EF7               	movlw	247
  5393  0005D4  0100               	movlb	0	; () banked
  5394  0005D6  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5395  0005D8  A4D8               	btfss	status,2,c
  5396  0005DA  D084               	goto	l3390
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;inc\CANlib.h: 832: {
  5400                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5401  0005DC  010F               	movlb	15	; () banked
  5402  0005DE  8701               	bsf	1,3,b	;volatile
  5403                           
  5404                           ; BSR set to: 15
  5405                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5406  0005E0  0100               	movlb	0	; () banked
  5407  0005E2  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5408  0005E4  0100               	movlb	0	; () banked
  5409  0005E6  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5410  0005E8  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5411  0005EA  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5412  0005EC  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5413                           
  5414                           ; BSR set to: 0
  5415                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5416  0005EE  C07D  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5420  0005F2  0E00               	movlw	0
  5421  0005F4  0100               	movlb	0	; () banked
  5422  0005F6  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5423  0005F8  0100               	movlb	0	; () banked
  5424  0005FA  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5425  0005FC  0EFF               	movlw	255
  5426  0005FE  0100               	movlb	0	; () banked
  5427  000600  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5428  000602  0100               	movlb	0	; () banked
  5429  000604  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5430  000606  0E00               	movlw	0
  5431  000608  0100               	movlb	0	; () banked
  5432  00060A  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5433  00060C  0100               	movlb	0	; () banked
  5434  00060E  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5435  000610  0E00               	movlw	0
  5436  000612  0100               	movlb	0	; () banked
  5437  000614  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5438  000616  0100               	movlb	0	; () banked
  5439  000618  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5443  00061A  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5444  00061E  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5445  000622  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5446  000626  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5447  00062A  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5448  00062E  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5449  000632  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5450  000636  0100               	movlb	0	; () banked
  5451  000638  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5452  00063A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5453  00063E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5454  000642  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5455  000646  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5459  00064A  C07D  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5463  00064E  0100               	movlb	0	; () banked
  5464  000650  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5465  000652  D003               	goto	l469
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5469  000654  010F               	movlb	15	; () banked
  5470  000656  8101               	bsf	1,0,b	;volatile
  5471  000658  D002               	goto	l470
  5472  00065A                     l469:
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;inc\CANlib.h: 844: else
  5476                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5477  00065A  010F               	movlb	15	; () banked
  5478  00065C  9101               	bcf	1,0,b	;volatile
  5479  00065E                     l470:
  5480                           
  5481                           ; BSR set to: 15
  5482                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5483  00065E  0100               	movlb	0	; () banked
  5484  000660  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5485  000662  D003               	goto	l471
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5489  000664  010F               	movlb	15	; () banked
  5490  000666  8301               	bsf	1,1,b	;volatile
  5491  000668  D002               	goto	l472
  5492  00066A                     l471:
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;inc\CANlib.h: 849: else
  5496                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5497  00066A  010F               	movlb	15	; () banked
  5498  00066C  9301               	bcf	1,1,b	;volatile
  5499  00066E                     l472:
  5500                           
  5501                           ; BSR set to: 15
  5502                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5503  00066E  0100               	movlb	0	; () banked
  5504  000670  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5505  000672  D003               	goto	l473
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5509  000674  010F               	movlb	15	; () banked
  5510  000676  8B01               	bsf	1,5,b	;volatile
  5511  000678  D002               	goto	l474
  5512  00067A                     l473:
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;inc\CANlib.h: 854: else
  5516                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5517  00067A  010F               	movlb	15	; () banked
  5518  00067C  9B01               	bcf	1,5,b	;volatile
  5519  00067E                     l474:
  5520                           
  5521                           ; BSR set to: 15
  5522                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5523  00067E  0100               	movlb	0	; () banked
  5524  000680  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5525  000682  D003               	goto	l475
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5529  000684  010F               	movlb	15	; () banked
  5530  000686  8D01               	bsf	1,6,b	;volatile
  5531  000688  D002               	goto	l476
  5532  00068A                     l475:
  5533                           
  5534                           ; BSR set to: 0
  5535                           ;inc\CANlib.h: 859: else
  5536                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5537  00068A  010F               	movlb	15	; () banked
  5538  00068C  9D01               	bcf	1,6,b	;volatile
  5539  00068E                     l476:
  5540                           
  5541                           ; BSR set to: 15
  5542                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5543  00068E  0100               	movlb	0	; () banked
  5544  000690  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5545  000692  D003               	goto	l477
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5549  000694  010F               	movlb	15	; () banked
  5550  000696  8F01               	bsf	1,7,b	;volatile
  5551  000698  D002               	goto	l3384
  5552  00069A                     l477:
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;inc\CANlib.h: 864: else
  5556                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5557  00069A  010F               	movlb	15	; () banked
  5558  00069C  9F01               	bcf	1,7,b	;volatile
  5559  00069E                     l3384:
  5560                           
  5561                           ; BSR set to: 15
  5562                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5563  00069E  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5564  0006A2  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5565  0006A6  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5566  0006AA  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5567  0006AE  0E16               	movlw	22
  5568  0006B0  D006               	goto	u3710
  5569  0006B2                     u3715:
  5570  0006B2  0100               	movlb	0	; () banked
  5571  0006B4  90D8               	bcf	status,0,c
  5572  0006B6  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5573  0006B8  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5574  0006BA  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5575  0006BC  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5576  0006BE                     u3710:
  5577  0006BE  2EE8               	decfsz	wreg,f,c
  5578  0006C0  D7F8               	goto	u3715
  5579  0006C2  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5580  0006C6  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5581  0006CA  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5582  0006CE  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5586  0006D2  0100               	movlb	0	; () banked
  5587  0006D4  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5588  0006D6  0100               	movlb	0	; () banked
  5589  0006D8  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5590  0006DA  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5591  0006DC  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5592  0006DE  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5596  0006E0  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5597  0006E4                     l3390:
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;inc\CANlib.h: 870: }
  5601                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5602  0006E4  0100               	movlb	0	; () banked
  5603  0006E6  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5604  0006E8  A4D8               	btfss	status,2,c
  5605  0006EA  D089               	goto	l3424
  5606                           
  5607                           ; BSR set to: 0
  5608  0006EC  0EF7               	movlw	247
  5609  0006EE  0100               	movlb	0	; () banked
  5610  0006F0  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5611  0006F2  A4D8               	btfss	status,2,c
  5612  0006F4  D084               	goto	l3424
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;inc\CANlib.h: 873: {
  5616                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5617  0006F6  010F               	movlb	15	; () banked
  5618  0006F8  8705               	bsf	5,3,b	;volatile
  5619                           
  5620                           ; BSR set to: 15
  5621                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5622  0006FA  0100               	movlb	0	; () banked
  5623  0006FC  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5624  0006FE  0100               	movlb	0	; () banked
  5625  000700  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5626  000702  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5627  000704  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5628  000706  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5632  000708  C07D  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5636  00070C  0E00               	movlw	0
  5637  00070E  0100               	movlb	0	; () banked
  5638  000710  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5639  000712  0100               	movlb	0	; () banked
  5640  000714  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5641  000716  0EFF               	movlw	255
  5642  000718  0100               	movlb	0	; () banked
  5643  00071A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5644  00071C  0100               	movlb	0	; () banked
  5645  00071E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5646  000720  0E00               	movlw	0
  5647  000722  0100               	movlb	0	; () banked
  5648  000724  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5649  000726  0100               	movlb	0	; () banked
  5650  000728  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5651  00072A  0E00               	movlw	0
  5652  00072C  0100               	movlb	0	; () banked
  5653  00072E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5654  000730  0100               	movlb	0	; () banked
  5655  000732  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5659  000734  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5660  000738  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5661  00073C  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5662  000740  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5663  000744  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5664  000748  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5665  00074C  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5666  000750  0100               	movlb	0	; () banked
  5667  000752  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5668  000754  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5669  000758  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5670  00075C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5671  000760  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5675  000764  C07D  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5679  000768  0100               	movlb	0	; () banked
  5680  00076A  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5681  00076C  D003               	goto	l480
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5685  00076E  010F               	movlb	15	; () banked
  5686  000770  8105               	bsf	5,0,b	;volatile
  5687  000772  D002               	goto	l481
  5688  000774                     l480:
  5689                           
  5690                           ; BSR set to: 0
  5691                           ;inc\CANlib.h: 885: else
  5692                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5693  000774  010F               	movlb	15	; () banked
  5694  000776  9105               	bcf	5,0,b	;volatile
  5695  000778                     l481:
  5696                           
  5697                           ; BSR set to: 15
  5698                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5699  000778  0100               	movlb	0	; () banked
  5700  00077A  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5701  00077C  D003               	goto	l482
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5705  00077E  010F               	movlb	15	; () banked
  5706  000780  8305               	bsf	5,1,b	;volatile
  5707  000782  D002               	goto	l483
  5708  000784                     l482:
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;inc\CANlib.h: 890: else
  5712                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5713  000784  010F               	movlb	15	; () banked
  5714  000786  9305               	bcf	5,1,b	;volatile
  5715  000788                     l483:
  5716                           
  5717                           ; BSR set to: 15
  5718                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5719  000788  0100               	movlb	0	; () banked
  5720  00078A  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5721  00078C  D003               	goto	l484
  5722                           
  5723                           ; BSR set to: 0
  5724                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5725  00078E  010F               	movlb	15	; () banked
  5726  000790  8B05               	bsf	5,5,b	;volatile
  5727  000792  D002               	goto	l485
  5728  000794                     l484:
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;inc\CANlib.h: 895: else
  5732                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5733  000794  010F               	movlb	15	; () banked
  5734  000796  9B05               	bcf	5,5,b	;volatile
  5735  000798                     l485:
  5736                           
  5737                           ; BSR set to: 15
  5738                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5739  000798  0100               	movlb	0	; () banked
  5740  00079A  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5741  00079C  D003               	goto	l486
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5745  00079E  010F               	movlb	15	; () banked
  5746  0007A0  8D05               	bsf	5,6,b	;volatile
  5747  0007A2  D002               	goto	l487
  5748  0007A4                     l486:
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;inc\CANlib.h: 900: else
  5752                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5753  0007A4  010F               	movlb	15	; () banked
  5754  0007A6  9D05               	bcf	5,6,b	;volatile
  5755  0007A8                     l487:
  5756                           
  5757                           ; BSR set to: 15
  5758                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5759  0007A8  0100               	movlb	0	; () banked
  5760  0007AA  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5761  0007AC  D003               	goto	l488
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5765  0007AE  010F               	movlb	15	; () banked
  5766  0007B0  8F05               	bsf	5,7,b	;volatile
  5767  0007B2  D002               	goto	l3418
  5768  0007B4                     l488:
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;inc\CANlib.h: 905: else
  5772                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5773  0007B4  010F               	movlb	15	; () banked
  5774  0007B6  9F05               	bcf	5,7,b	;volatile
  5775  0007B8                     l3418:
  5776                           
  5777                           ; BSR set to: 15
  5778                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5779  0007B8  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5780  0007BC  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5781  0007C0  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5782  0007C4  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5783  0007C8  0E16               	movlw	22
  5784  0007CA  D006               	goto	u3790
  5785  0007CC                     u3795:
  5786  0007CC  0100               	movlb	0	; () banked
  5787  0007CE  90D8               	bcf	status,0,c
  5788  0007D0  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5789  0007D2  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5790  0007D4  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5791  0007D6  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5792  0007D8                     u3790:
  5793  0007D8  2EE8               	decfsz	wreg,f,c
  5794  0007DA  D7F8               	goto	u3795
  5795  0007DC  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5796  0007E0  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5797  0007E4  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5798  0007E8  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5799                           
  5800                           ; BSR set to: 0
  5801                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5802  0007EC  0100               	movlb	0	; () banked
  5803  0007EE  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5804  0007F0  0100               	movlb	0	; () banked
  5805  0007F2  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5806  0007F4  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5807  0007F6  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5808  0007F8  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5812  0007FA  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5813  0007FE                     l3424:
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;inc\CANlib.h: 911: }
  5817                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5818  0007FE  0E02               	movlw	2
  5819  000800  0100               	movlb	0	; () banked
  5820  000802  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5821  000804  A4D8               	btfss	status,2,c
  5822  000806  D089               	goto	l3458
  5823                           
  5824                           ; BSR set to: 0
  5825  000808  0EF7               	movlw	247
  5826  00080A  0100               	movlb	0	; () banked
  5827  00080C  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5828  00080E  A4D8               	btfss	status,2,c
  5829  000810  D084               	goto	l3458
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;inc\CANlib.h: 915: {
  5833                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5834  000812  010F               	movlb	15	; () banked
  5835  000814  8709               	bsf	9,3,b	;volatile
  5836                           
  5837                           ; BSR set to: 15
  5838                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5839  000816  0100               	movlb	0	; () banked
  5840  000818  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5841  00081A  0100               	movlb	0	; () banked
  5842  00081C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5843  00081E  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5844  000820  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5845  000822  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5849  000824  C07D  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5853  000828  0E00               	movlw	0
  5854  00082A  0100               	movlb	0	; () banked
  5855  00082C  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5856  00082E  0100               	movlb	0	; () banked
  5857  000830  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5858  000832  0EFF               	movlw	255
  5859  000834  0100               	movlb	0	; () banked
  5860  000836  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5861  000838  0100               	movlb	0	; () banked
  5862  00083A  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5863  00083C  0E00               	movlw	0
  5864  00083E  0100               	movlb	0	; () banked
  5865  000840  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5866  000842  0100               	movlb	0	; () banked
  5867  000844  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5868  000846  0E00               	movlw	0
  5869  000848  0100               	movlb	0	; () banked
  5870  00084A  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5871  00084C  0100               	movlb	0	; () banked
  5872  00084E  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5876  000850  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5877  000854  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5878  000858  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5879  00085C  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5880  000860  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5881  000864  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5882  000868  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5883  00086C  0100               	movlb	0	; () banked
  5884  00086E  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5885  000870  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5886  000874  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5887  000878  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5888  00087C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5892  000880  C07D  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5896  000884  0100               	movlb	0	; () banked
  5897  000886  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5898  000888  D003               	goto	l491
  5899                           
  5900                           ; BSR set to: 0
  5901                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5902  00088A  010F               	movlb	15	; () banked
  5903  00088C  8109               	bsf	9,0,b	;volatile
  5904  00088E  D002               	goto	l492
  5905  000890                     l491:
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;inc\CANlib.h: 927: else
  5909                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5910  000890  010F               	movlb	15	; () banked
  5911  000892  9109               	bcf	9,0,b	;volatile
  5912  000894                     l492:
  5913                           
  5914                           ; BSR set to: 15
  5915                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5916  000894  0100               	movlb	0	; () banked
  5917  000896  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5918  000898  D003               	goto	l493
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5922  00089A  010F               	movlb	15	; () banked
  5923  00089C  8309               	bsf	9,1,b	;volatile
  5924  00089E  D002               	goto	l494
  5925  0008A0                     l493:
  5926                           
  5927                           ; BSR set to: 0
  5928                           ;inc\CANlib.h: 932: else
  5929                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5930  0008A0  010F               	movlb	15	; () banked
  5931  0008A2  9309               	bcf	9,1,b	;volatile
  5932  0008A4                     l494:
  5933                           
  5934                           ; BSR set to: 15
  5935                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5936  0008A4  0100               	movlb	0	; () banked
  5937  0008A6  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5938  0008A8  D003               	goto	l495
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5942  0008AA  010F               	movlb	15	; () banked
  5943  0008AC  8B09               	bsf	9,5,b	;volatile
  5944  0008AE  D002               	goto	l496
  5945  0008B0                     l495:
  5946                           
  5947                           ; BSR set to: 0
  5948                           ;inc\CANlib.h: 937: else
  5949                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5950  0008B0  010F               	movlb	15	; () banked
  5951  0008B2  9B09               	bcf	9,5,b	;volatile
  5952  0008B4                     l496:
  5953                           
  5954                           ; BSR set to: 15
  5955                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5956  0008B4  0100               	movlb	0	; () banked
  5957  0008B6  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5958  0008B8  D003               	goto	l497
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5962  0008BA  010F               	movlb	15	; () banked
  5963  0008BC  8D09               	bsf	9,6,b	;volatile
  5964  0008BE  D002               	goto	l498
  5965  0008C0                     l497:
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;inc\CANlib.h: 942: else
  5969                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5970  0008C0  010F               	movlb	15	; () banked
  5971  0008C2  9D09               	bcf	9,6,b	;volatile
  5972  0008C4                     l498:
  5973                           
  5974                           ; BSR set to: 15
  5975                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5976  0008C4  0100               	movlb	0	; () banked
  5977  0008C6  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5978  0008C8  D003               	goto	l499
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5982  0008CA  010F               	movlb	15	; () banked
  5983  0008CC  8F09               	bsf	9,7,b	;volatile
  5984  0008CE  D002               	goto	l3452
  5985  0008D0                     l499:
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;inc\CANlib.h: 947: else
  5989                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5990  0008D0  010F               	movlb	15	; () banked
  5991  0008D2  9F09               	bcf	9,7,b	;volatile
  5992  0008D4                     l3452:
  5993                           
  5994                           ; BSR set to: 15
  5995                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5996  0008D4  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5997  0008D8  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5998  0008DC  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5999  0008E0  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6000  0008E4  0E16               	movlw	22
  6001  0008E6  D006               	goto	u3870
  6002  0008E8                     u3875:
  6003  0008E8  0100               	movlb	0	; () banked
  6004  0008EA  90D8               	bcf	status,0,c
  6005  0008EC  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6006  0008EE  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6007  0008F0  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6008  0008F2  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  6009  0008F4                     u3870:
  6010  0008F4  2EE8               	decfsz	wreg,f,c
  6011  0008F6  D7F8               	goto	u3875
  6012  0008F8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6013  0008FC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6014  000900  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6015  000904  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  6019  000908  0100               	movlb	0	; () banked
  6020  00090A  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  6021  00090C  0100               	movlb	0	; () banked
  6022  00090E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6023  000910  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6024  000912  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6025  000914  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  6029  000916  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  6030  00091A                     l3458:
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;inc\CANlib.h: 953: }
  6034                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  6035  00091A  0E03               	movlw	3
  6036  00091C  0100               	movlb	0	; () banked
  6037  00091E  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6038  000920  A4D8               	btfss	status,2,c
  6039  000922  D089               	goto	l3492
  6040                           
  6041                           ; BSR set to: 0
  6042  000924  0EF7               	movlw	247
  6043  000926  0100               	movlb	0	; () banked
  6044  000928  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  6045  00092A  A4D8               	btfss	status,2,c
  6046  00092C  D084               	goto	l3492
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;inc\CANlib.h: 956: {
  6050                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  6051  00092E  010F               	movlb	15	; () banked
  6052  000930  870D               	bsf	13,3,b	;volatile
  6053                           
  6054                           ; BSR set to: 15
  6055                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  6056  000932  0100               	movlb	0	; () banked
  6057  000934  5173               	movf	CANSetFilter@filter& (0+255),w,b
  6058  000936  0100               	movlb	0	; () banked
  6059  000938  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6060  00093A  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6061  00093C  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6062  00093E  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6063                           
  6064                           ; BSR set to: 0
  6065                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  6066  000940  C07D  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  6070  000944  0E00               	movlw	0
  6071  000946  0100               	movlb	0	; () banked
  6072  000948  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  6073  00094A  0100               	movlb	0	; () banked
  6074  00094C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6075  00094E  0EFF               	movlw	255
  6076  000950  0100               	movlb	0	; () banked
  6077  000952  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6078  000954  0100               	movlb	0	; () banked
  6079  000956  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6080  000958  0E00               	movlw	0
  6081  00095A  0100               	movlb	0	; () banked
  6082  00095C  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6083  00095E  0100               	movlb	0	; () banked
  6084  000960  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6085  000962  0E00               	movlw	0
  6086  000964  0100               	movlb	0	; () banked
  6087  000966  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6088  000968  0100               	movlb	0	; () banked
  6089  00096A  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6090                           
  6091                           ; BSR set to: 0
  6092                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  6093  00096C  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  6094  000970  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6095  000974  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6096  000978  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6097  00097C  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  6098  000980  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6099  000984  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6100  000988  0100               	movlb	0	; () banked
  6101  00098A  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  6102  00098C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6103  000990  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6104  000994  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6105  000998  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  6109  00099C  C07D  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6110                           
  6111                           ; BSR set to: 0
  6112                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  6113  0009A0  0100               	movlb	0	; () banked
  6114  0009A2  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6115  0009A4  D003               	goto	l502
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6119  0009A6  010F               	movlb	15	; () banked
  6120  0009A8  810D               	bsf	13,0,b	;volatile
  6121  0009AA  D002               	goto	l503
  6122  0009AC                     l502:
  6123                           
  6124                           ; BSR set to: 0
  6125                           ;inc\CANlib.h: 968: else
  6126                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6127  0009AC  010F               	movlb	15	; () banked
  6128  0009AE  910D               	bcf	13,0,b	;volatile
  6129  0009B0                     l503:
  6130                           
  6131                           ; BSR set to: 15
  6132                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  6133  0009B0  0100               	movlb	0	; () banked
  6134  0009B2  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6135  0009B4  D003               	goto	l504
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6139  0009B6  010F               	movlb	15	; () banked
  6140  0009B8  830D               	bsf	13,1,b	;volatile
  6141  0009BA  D002               	goto	l505
  6142  0009BC                     l504:
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;inc\CANlib.h: 973: else
  6146                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6147  0009BC  010F               	movlb	15	; () banked
  6148  0009BE  930D               	bcf	13,1,b	;volatile
  6149  0009C0                     l505:
  6150                           
  6151                           ; BSR set to: 15
  6152                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  6153  0009C0  0100               	movlb	0	; () banked
  6154  0009C2  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6155  0009C4  D003               	goto	l506
  6156                           
  6157                           ; BSR set to: 0
  6158                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6159  0009C6  010F               	movlb	15	; () banked
  6160  0009C8  8B0D               	bsf	13,5,b	;volatile
  6161  0009CA  D002               	goto	l507
  6162  0009CC                     l506:
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;inc\CANlib.h: 978: else
  6166                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6167  0009CC  010F               	movlb	15	; () banked
  6168  0009CE  9B0D               	bcf	13,5,b	;volatile
  6169  0009D0                     l507:
  6170                           
  6171                           ; BSR set to: 15
  6172                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  6173  0009D0  0100               	movlb	0	; () banked
  6174  0009D2  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6175  0009D4  D003               	goto	l508
  6176                           
  6177                           ; BSR set to: 0
  6178                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6179  0009D6  010F               	movlb	15	; () banked
  6180  0009D8  8D0D               	bsf	13,6,b	;volatile
  6181  0009DA  D002               	goto	l509
  6182  0009DC                     l508:
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;inc\CANlib.h: 983: else
  6186                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6187  0009DC  010F               	movlb	15	; () banked
  6188  0009DE  9D0D               	bcf	13,6,b	;volatile
  6189  0009E0                     l509:
  6190                           
  6191                           ; BSR set to: 15
  6192                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6193  0009E0  0100               	movlb	0	; () banked
  6194  0009E2  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6195  0009E4  D003               	goto	l510
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6199  0009E6  010F               	movlb	15	; () banked
  6200  0009E8  8F0D               	bsf	13,7,b	;volatile
  6201  0009EA  D002               	goto	l3486
  6202  0009EC                     l510:
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;inc\CANlib.h: 988: else
  6206                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6207  0009EC  010F               	movlb	15	; () banked
  6208  0009EE  9F0D               	bcf	13,7,b	;volatile
  6209  0009F0                     l3486:
  6210                           
  6211                           ; BSR set to: 15
  6212                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6213  0009F0  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  6214  0009F4  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6215  0009F8  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6216  0009FC  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6217  000A00  0E16               	movlw	22
  6218  000A02  D006               	goto	u3950
  6219  000A04                     u3955:
  6220  000A04  0100               	movlb	0	; () banked
  6221  000A06  90D8               	bcf	status,0,c
  6222  000A08  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6223  000A0A  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6224  000A0C  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6225  000A0E  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  6226  000A10                     u3950:
  6227  000A10  2EE8               	decfsz	wreg,f,c
  6228  000A12  D7F8               	goto	u3955
  6229  000A14  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6230  000A18  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6231  000A1C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6232  000A20  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6233                           
  6234                           ; BSR set to: 0
  6235                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6236  000A24  0100               	movlb	0	; () banked
  6237  000A26  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  6238  000A28  0100               	movlb	0	; () banked
  6239  000A2A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6240  000A2C  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6241  000A2E  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6242  000A30  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6246  000A32  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6247  000A36                     l3492:
  6248                           
  6249                           ; BSR set to: 0
  6250                           ;inc\CANlib.h: 994: }
  6251                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6252  000A36  0E04               	movlw	4
  6253  000A38  0100               	movlb	0	; () banked
  6254  000A3A  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6255  000A3C  A4D8               	btfss	status,2,c
  6256  000A3E  D089               	goto	l3526
  6257                           
  6258                           ; BSR set to: 0
  6259  000A40  0EF7               	movlw	247
  6260  000A42  0100               	movlb	0	; () banked
  6261  000A44  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  6262  000A46  A4D8               	btfss	status,2,c
  6263  000A48  D084               	goto	l3526
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;inc\CANlib.h: 997: {
  6267                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6268  000A4A  010F               	movlb	15	; () banked
  6269  000A4C  8711               	bsf	17,3,b	;volatile
  6270                           
  6271                           ; BSR set to: 15
  6272                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6273  000A4E  0100               	movlb	0	; () banked
  6274  000A50  5173               	movf	CANSetFilter@filter& (0+255),w,b
  6275  000A52  0100               	movlb	0	; () banked
  6276  000A54  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6277  000A56  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6278  000A58  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6279  000A5A  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6283  000A5C  C07D  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6287  000A60  0E00               	movlw	0
  6288  000A62  0100               	movlb	0	; () banked
  6289  000A64  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  6290  000A66  0100               	movlb	0	; () banked
  6291  000A68  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6292  000A6A  0EFF               	movlw	255
  6293  000A6C  0100               	movlb	0	; () banked
  6294  000A6E  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6295  000A70  0100               	movlb	0	; () banked
  6296  000A72  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6297  000A74  0E00               	movlw	0
  6298  000A76  0100               	movlb	0	; () banked
  6299  000A78  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6300  000A7A  0100               	movlb	0	; () banked
  6301  000A7C  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6302  000A7E  0E00               	movlw	0
  6303  000A80  0100               	movlb	0	; () banked
  6304  000A82  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6305  000A84  0100               	movlb	0	; () banked
  6306  000A86  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6310  000A88  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  6311  000A8C  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6312  000A90  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6313  000A94  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6314  000A98  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  6315  000A9C  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6316  000AA0  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6317  000AA4  0100               	movlb	0	; () banked
  6318  000AA6  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  6319  000AA8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6320  000AAC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6321  000AB0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6322  000AB4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6326  000AB8  C07D  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6330  000ABC  0100               	movlb	0	; () banked
  6331  000ABE  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6332  000AC0  D003               	goto	l513
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6336  000AC2  010F               	movlb	15	; () banked
  6337  000AC4  8111               	bsf	17,0,b	;volatile
  6338  000AC6  D002               	goto	l514
  6339  000AC8                     l513:
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;inc\CANlib.h: 1009: else
  6343                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6344  000AC8  010F               	movlb	15	; () banked
  6345  000ACA  9111               	bcf	17,0,b	;volatile
  6346  000ACC                     l514:
  6347                           
  6348                           ; BSR set to: 15
  6349                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6350  000ACC  0100               	movlb	0	; () banked
  6351  000ACE  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6352  000AD0  D003               	goto	l515
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6356  000AD2  010F               	movlb	15	; () banked
  6357  000AD4  8311               	bsf	17,1,b	;volatile
  6358  000AD6  D002               	goto	l516
  6359  000AD8                     l515:
  6360                           
  6361                           ; BSR set to: 0
  6362                           ;inc\CANlib.h: 1014: else
  6363                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6364  000AD8  010F               	movlb	15	; () banked
  6365  000ADA  9311               	bcf	17,1,b	;volatile
  6366  000ADC                     l516:
  6367                           
  6368                           ; BSR set to: 15
  6369                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6370  000ADC  0100               	movlb	0	; () banked
  6371  000ADE  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6372  000AE0  D003               	goto	l517
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6376  000AE2  010F               	movlb	15	; () banked
  6377  000AE4  8B11               	bsf	17,5,b	;volatile
  6378  000AE6  D002               	goto	l518
  6379  000AE8                     l517:
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;inc\CANlib.h: 1019: else
  6383                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6384  000AE8  010F               	movlb	15	; () banked
  6385  000AEA  9B11               	bcf	17,5,b	;volatile
  6386  000AEC                     l518:
  6387                           
  6388                           ; BSR set to: 15
  6389                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6390  000AEC  0100               	movlb	0	; () banked
  6391  000AEE  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6392  000AF0  D003               	goto	l519
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6396  000AF2  010F               	movlb	15	; () banked
  6397  000AF4  8D11               	bsf	17,6,b	;volatile
  6398  000AF6  D002               	goto	l520
  6399  000AF8                     l519:
  6400                           
  6401                           ; BSR set to: 0
  6402                           ;inc\CANlib.h: 1024: else
  6403                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6404  000AF8  010F               	movlb	15	; () banked
  6405  000AFA  9D11               	bcf	17,6,b	;volatile
  6406  000AFC                     l520:
  6407                           
  6408                           ; BSR set to: 15
  6409                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6410  000AFC  0100               	movlb	0	; () banked
  6411  000AFE  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6412  000B00  D003               	goto	l521
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6416  000B02  010F               	movlb	15	; () banked
  6417  000B04  8F11               	bsf	17,7,b	;volatile
  6418  000B06  D002               	goto	l3520
  6419  000B08                     l521:
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;inc\CANlib.h: 1029: else
  6423                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6424  000B08  010F               	movlb	15	; () banked
  6425  000B0A  9F11               	bcf	17,7,b	;volatile
  6426  000B0C                     l3520:
  6427                           
  6428                           ; BSR set to: 15
  6429                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6430  000B0C  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  6431  000B10  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6432  000B14  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6433  000B18  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6434  000B1C  0E16               	movlw	22
  6435  000B1E  D006               	goto	u4030
  6436  000B20                     u4035:
  6437  000B20  0100               	movlb	0	; () banked
  6438  000B22  90D8               	bcf	status,0,c
  6439  000B24  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6440  000B26  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6441  000B28  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6442  000B2A  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  6443  000B2C                     u4030:
  6444  000B2C  2EE8               	decfsz	wreg,f,c
  6445  000B2E  D7F8               	goto	u4035
  6446  000B30  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6447  000B34  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6448  000B38  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6449  000B3C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6453  000B40  0100               	movlb	0	; () banked
  6454  000B42  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  6455  000B44  0100               	movlb	0	; () banked
  6456  000B46  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6457  000B48  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6458  000B4A  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6459  000B4C  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6460                           
  6461                           ; BSR set to: 0
  6462                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6463  000B4E  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6464  000B52                     l3526:
  6465                           
  6466                           ; BSR set to: 0
  6467                           ;inc\CANlib.h: 1035: }
  6468                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6469  000B52  0E05               	movlw	5
  6470  000B54  0100               	movlb	0	; () banked
  6471  000B56  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6472  000B58  A4D8               	btfss	status,2,c
  6473  000B5A  0012               	return	
  6474                           
  6475                           ; BSR set to: 0
  6476  000B5C  0EF7               	movlw	247
  6477  000B5E  0100               	movlb	0	; () banked
  6478  000B60  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  6479  000B62  A4D8               	btfss	status,2,c
  6480  000B64  0012               	return	
  6481                           
  6482                           ; BSR set to: 0
  6483                           ;inc\CANlib.h: 1038: {
  6484                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6485  000B66  010F               	movlb	15	; () banked
  6486  000B68  8715               	bsf	21,3,b	;volatile
  6487                           
  6488                           ; BSR set to: 15
  6489                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6490  000B6A  0100               	movlb	0	; () banked
  6491  000B6C  5173               	movf	CANSetFilter@filter& (0+255),w,b
  6492  000B6E  0100               	movlb	0	; () banked
  6493  000B70  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6494  000B72  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6495  000B74  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6496  000B76  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6500  000B78  C07D  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6504  000B7C  0E00               	movlw	0
  6505  000B7E  0100               	movlb	0	; () banked
  6506  000B80  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  6507  000B82  0100               	movlb	0	; () banked
  6508  000B84  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6509  000B86  0EFF               	movlw	255
  6510  000B88  0100               	movlb	0	; () banked
  6511  000B8A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6512  000B8C  0100               	movlb	0	; () banked
  6513  000B8E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6514  000B90  0E00               	movlw	0
  6515  000B92  0100               	movlb	0	; () banked
  6516  000B94  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6517  000B96  0100               	movlb	0	; () banked
  6518  000B98  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6519  000B9A  0E00               	movlw	0
  6520  000B9C  0100               	movlb	0	; () banked
  6521  000B9E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6522  000BA0  0100               	movlb	0	; () banked
  6523  000BA2  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6527  000BA4  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  6528  000BA8  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6529  000BAC  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6530  000BB0  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6531  000BB4  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  6532  000BB8  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6533  000BBC  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6534  000BC0  0100               	movlb	0	; () banked
  6535  000BC2  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  6536  000BC4  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6537  000BC8  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6538  000BCC  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6539  000BD0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6543  000BD4  C07D  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6547  000BD8  0100               	movlb	0	; () banked
  6548  000BDA  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6549  000BDC  D003               	goto	l524
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6553  000BDE  010F               	movlb	15	; () banked
  6554  000BE0  8115               	bsf	21,0,b	;volatile
  6555  000BE2  D002               	goto	l525
  6556  000BE4                     l524:
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;inc\CANlib.h: 1050: else
  6560                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6561  000BE4  010F               	movlb	15	; () banked
  6562  000BE6  9115               	bcf	21,0,b	;volatile
  6563  000BE8                     l525:
  6564                           
  6565                           ; BSR set to: 15
  6566                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6567  000BE8  0100               	movlb	0	; () banked
  6568  000BEA  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6569  000BEC  D003               	goto	l526
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6573  000BEE  010F               	movlb	15	; () banked
  6574  000BF0  8315               	bsf	21,1,b	;volatile
  6575  000BF2  D002               	goto	l527
  6576  000BF4                     l526:
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;inc\CANlib.h: 1055: else
  6580                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6581  000BF4  010F               	movlb	15	; () banked
  6582  000BF6  9315               	bcf	21,1,b	;volatile
  6583  000BF8                     l527:
  6584                           
  6585                           ; BSR set to: 15
  6586                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6587  000BF8  0100               	movlb	0	; () banked
  6588  000BFA  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6589  000BFC  D003               	goto	l528
  6590                           
  6591                           ; BSR set to: 0
  6592                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6593  000BFE  010F               	movlb	15	; () banked
  6594  000C00  8B15               	bsf	21,5,b	;volatile
  6595  000C02  D002               	goto	l529
  6596  000C04                     l528:
  6597                           
  6598                           ; BSR set to: 0
  6599                           ;inc\CANlib.h: 1060: else
  6600                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6601  000C04  010F               	movlb	15	; () banked
  6602  000C06  9B15               	bcf	21,5,b	;volatile
  6603  000C08                     l529:
  6604                           
  6605                           ; BSR set to: 15
  6606                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6607  000C08  0100               	movlb	0	; () banked
  6608  000C0A  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6609  000C0C  D003               	goto	l530
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6613  000C0E  010F               	movlb	15	; () banked
  6614  000C10  8D15               	bsf	21,6,b	;volatile
  6615  000C12  D002               	goto	l531
  6616  000C14                     l530:
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;inc\CANlib.h: 1065: else
  6620                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6621  000C14  010F               	movlb	15	; () banked
  6622  000C16  9D15               	bcf	21,6,b	;volatile
  6623  000C18                     l531:
  6624                           
  6625                           ; BSR set to: 15
  6626                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6627  000C18  0100               	movlb	0	; () banked
  6628  000C1A  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6629  000C1C  D003               	goto	l532
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6633  000C1E  010F               	movlb	15	; () banked
  6634  000C20  8F15               	bsf	21,7,b	;volatile
  6635  000C22  D002               	goto	l3554
  6636  000C24                     l532:
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;inc\CANlib.h: 1070: else
  6640                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6641  000C24  010F               	movlb	15	; () banked
  6642  000C26  9F15               	bcf	21,7,b	;volatile
  6643  000C28                     l3554:
  6644                           
  6645                           ; BSR set to: 15
  6646                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6647  000C28  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  6648  000C2C  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6649  000C30  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6650  000C34  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6651  000C38  0E16               	movlw	22
  6652  000C3A  D006               	goto	u4110
  6653  000C3C                     u4115:
  6654  000C3C  0100               	movlb	0	; () banked
  6655  000C3E  90D8               	bcf	status,0,c
  6656  000C40  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6657  000C42  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6658  000C44  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6659  000C46  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  6660  000C48                     u4110:
  6661  000C48  2EE8               	decfsz	wreg,f,c
  6662  000C4A  D7F8               	goto	u4115
  6663  000C4C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6664  000C50  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6665  000C54  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6666  000C58  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6670  000C5C  0100               	movlb	0	; () banked
  6671  000C5E  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  6672  000C60  0100               	movlb	0	; () banked
  6673  000C62  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6674  000C64  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6675  000C66  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6676  000C68  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6680  000C6A  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6681  000C6E  0012               	return	
  6682  000C70                     __end_of_CANSetFilter:
  6683                           	opt stack 0
  6684                           tblptru	equ	0xFF8
  6685                           tblptrh	equ	0xFF7
  6686                           tblptrl	equ	0xFF6
  6687                           tablat	equ	0xFF5
  6688                           prodh	equ	0xFF4
  6689                           prodl	equ	0xFF3
  6690                           intcon	equ	0xFF2
  6691                           intcon2	equ	0xFF1
  6692                           postinc0	equ	0xFEE
  6693                           wreg	equ	0xFE8
  6694                           postdec1	equ	0xFE5
  6695                           fsr1l	equ	0xFE1
  6696                           indf2	equ	0xFDF
  6697                           fsr2h	equ	0xFDA
  6698                           fsr2l	equ	0xFD9
  6699                           status	equ	0xFD8
  6700                           
  6701 ;; *************** function _CANOperationMode *****************
  6702 ;; Defined at:
  6703 ;;		line 206 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  mode            1    wreg     enum E16838
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;  mode            1   19[BANK0 ] enum E16838
  6708 ;; Return value:  Size  Location     Type
  6709 ;;		None               void
  6710 ;; Registers used:
  6711 ;;		wreg, status,2, status,0
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6717 ;;      Params:         0       0       0       0
  6718 ;;      Locals:         0       1       0       0
  6719 ;;      Temps:          0       0       0       0
  6720 ;;      Totals:         0       1       0       0
  6721 ;;Total ram usage:        1 bytes
  6722 ;; Hardware stack levels used:    1
  6723 ;; Hardware stack levels required when called:    4
  6724 ;; This function calls:
  6725 ;;		Nothing
  6726 ;; This function is called by:
  6727 ;;		_CANInitialize
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731                           	psect	text11
  6732  00393E                     __ptext11:
  6733                           	opt stack 0
  6734  00393E                     _CANOperationMode:
  6735                           	opt stack 24
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;incstack = 0
  6739                           ;CANOperationMode@mode stored from wreg
  6740  00393E  0100               	movlb	0	; () banked
  6741  003940  6F73               	movwf	CANOperationMode@mode& (0+255),b
  6742                           
  6743                           ;inc\CANlib.h: 208: CANCON = mode;
  6744  003942  C073  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6745  003946                     l3150:
  6746  003946  506E               	movf	3950,w,c	;volatile
  6747  003948  0BE0               	andlw	224
  6748  00394A  0100               	movlb	0	; () banked
  6749  00394C  1973               	xorwf	CANOperationMode@mode& (0+255),w,b
  6750  00394E  B4D8               	btfsc	status,2,c
  6751  003950  0012               	return	
  6752  003952  D7F9               	goto	l3150
  6753  003954                     __end_of_CANOperationMode:
  6754                           	opt stack 0
  6755                           tblptru	equ	0xFF8
  6756                           tblptrh	equ	0xFF7
  6757                           tblptrl	equ	0xFF6
  6758                           tablat	equ	0xFF5
  6759                           prodh	equ	0xFF4
  6760                           prodl	equ	0xFF3
  6761                           intcon	equ	0xFF2
  6762                           intcon2	equ	0xFF1
  6763                           postinc0	equ	0xFEE
  6764                           wreg	equ	0xFE8
  6765                           postdec1	equ	0xFE5
  6766                           fsr1l	equ	0xFE1
  6767                           indf2	equ	0xFDF
  6768                           fsr2h	equ	0xFDA
  6769                           fsr2l	equ	0xFD9
  6770                           status	equ	0xFD8
  6771                           
  6772 ;; *************** function _calibrazione *****************
  6773 ;; Defined at:
  6774 ;;		line 173 in file "newmain.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;		None
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;		None
  6779 ;; Return value:  Size  Location     Type
  6780 ;;		None               void
  6781 ;; Registers used:
  6782 ;;		wreg, status,2, status,0, cstack
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6788 ;;      Params:         0       0       0       0
  6789 ;;      Locals:         0       0       0       0
  6790 ;;      Temps:          0       0       0       0
  6791 ;;      Totals:         0       0       0       0
  6792 ;;Total ram usage:        0 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    5
  6795 ;; This function calls:
  6796 ;;		_BusyADC
  6797 ;;		_ConvertADC
  6798 ;;		_ReadADC
  6799 ;;		___lwdiv
  6800 ;; This function is called by:
  6801 ;;		_main
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805                           	psect	text12
  6806  0037C2                     __ptext12:
  6807                           	opt stack 0
  6808  0037C2                     _calibrazione:
  6809                           	opt stack 25
  6810                           
  6811                           ;newmain.c: 174: ConvertADC();
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;incstack = 0
  6815  0037C2  ECDB  F01C         	call	_ConvertADC	;wreg free
  6816  0037C6                     l4134:
  6817  0037C6  ECC7  F01C         	call	_BusyADC	;wreg free
  6818  0037CA  0900               	iorlw	0
  6819  0037CC  A4D8               	btfss	status,2,c
  6820  0037CE  D7FB               	goto	l4134
  6821                           
  6822                           ;newmain.c: 176: ADCResult = ReadADC();
  6823  0037D0  ECB5  F01C         	call	_ReadADC	;wreg free
  6824  0037D4  C073  F0D9         	movff	?_ReadADC,_ADCResult
  6825  0037D8  C074  F0DA         	movff	?_ReadADC+1,_ADCResult+1
  6826                           
  6827                           ;newmain.c: 177: calibration = (ADCResult - 511) / 45;
  6828  0037DC  0E01               	movlw	1
  6829  0037DE  0100               	movlb	0	; () banked
  6830  0037E0  25D9               	addwf	_ADCResult& (0+255),w,b
  6831  0037E2  0100               	movlb	0	; () banked
  6832  0037E4  6F73               	movwf	___lwdiv@dividend& (0+255),b
  6833  0037E6  0EFE               	movlw	254
  6834  0037E8  0100               	movlb	0	; () banked
  6835  0037EA  21DA               	addwfc	(_ADCResult+1)& (0+255),w,b
  6836  0037EC  0100               	movlb	0	; () banked
  6837  0037EE  6F74               	movwf	(___lwdiv@dividend+1)& (0+255),b
  6838  0037F0  0E00               	movlw	0
  6839  0037F2  0100               	movlb	0	; () banked
  6840  0037F4  6F76               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6841  0037F6  0E2D               	movlw	45
  6842  0037F8  6F75               	movwf	___lwdiv@divisor& (0+255),b
  6843  0037FA  EC37  F01B         	call	___lwdiv	;wreg free
  6844  0037FE  C073  F009         	movff	?___lwdiv,_calibration
  6845  003802  C074  F00A         	movff	?___lwdiv+1,_calibration+1
  6846  003806  0012               	return		;funcret
  6847  003808                     __end_of_calibrazione:
  6848                           	opt stack 0
  6849                           tblptru	equ	0xFF8
  6850                           tblptrh	equ	0xFF7
  6851                           tblptrl	equ	0xFF6
  6852                           tablat	equ	0xFF5
  6853                           prodh	equ	0xFF4
  6854                           prodl	equ	0xFF3
  6855                           intcon	equ	0xFF2
  6856                           intcon2	equ	0xFF1
  6857                           postinc0	equ	0xFEE
  6858                           wreg	equ	0xFE8
  6859                           postdec1	equ	0xFE5
  6860                           fsr1l	equ	0xFE1
  6861                           indf2	equ	0xFDF
  6862                           fsr2h	equ	0xFDA
  6863                           fsr2l	equ	0xFD9
  6864                           status	equ	0xFD8
  6865                           
  6866 ;; *************** function ___lwdiv *****************
  6867 ;; Defined at:
  6868 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;  dividend        2   19[BANK0 ] unsigned int 
  6871 ;;  divisor         2   21[BANK0 ] unsigned int 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;  quotient        2   23[BANK0 ] unsigned int 
  6874 ;;  counter         1   25[BANK0 ] unsigned char 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  2   19[BANK0 ] unsigned int 
  6877 ;; Registers used:
  6878 ;;		wreg, status,2, status,0
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6884 ;;      Params:         0       4       0       0
  6885 ;;      Locals:         0       3       0       0
  6886 ;;      Temps:          0       0       0       0
  6887 ;;      Totals:         0       7       0       0
  6888 ;;Total ram usage:        7 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; Hardware stack levels required when called:    4
  6891 ;; This function calls:
  6892 ;;		Nothing
  6893 ;; This function is called by:
  6894 ;;		_calibrazione
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           	psect	text13
  6899  00366E                     __ptext13:
  6900                           	opt stack 0
  6901  00366E                     ___lwdiv:
  6902                           	opt stack 25
  6903                           
  6904                           ;incstack = 0
  6905  00366E  0E00               	movlw	0
  6906  003670  0100               	movlb	0	; () banked
  6907  003672  6F78               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6908  003674  0E00               	movlw	0
  6909  003676  6F77               	movwf	___lwdiv@quotient& (0+255),b
  6910                           
  6911                           ; BSR set to: 0
  6912  003678  0100               	movlb	0	; () banked
  6913  00367A  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6914  00367C  0100               	movlb	0	; () banked
  6915  00367E  1176               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6916  003680  B4D8               	btfsc	status,2,c
  6917  003682  D02C               	goto	l1129
  6918                           
  6919                           ; BSR set to: 0
  6920  003684  0E01               	movlw	1
  6921  003686  0100               	movlb	0	; () banked
  6922  003688  6F79               	movwf	___lwdiv@counter& (0+255),b
  6923  00368A  D006               	goto	l3896
  6924  00368C                     l3894:
  6925                           
  6926                           ; BSR set to: 0
  6927  00368C  0100               	movlb	0	; () banked
  6928  00368E  90D8               	bcf	status,0,c
  6929  003690  3775               	rlcf	___lwdiv@divisor& (0+255),f,b
  6930  003692  3776               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6931  003694  0100               	movlb	0	; () banked
  6932  003696  2B79               	incf	___lwdiv@counter& (0+255),f,b
  6933  003698                     l3896:
  6934                           
  6935                           ; BSR set to: 0
  6936  003698  0100               	movlb	0	; () banked
  6937  00369A  AF76               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6938  00369C  D7F7               	goto	l3894
  6939  00369E                     l3898:
  6940                           
  6941                           ; BSR set to: 0
  6942  00369E  0100               	movlb	0	; () banked
  6943  0036A0  90D8               	bcf	status,0,c
  6944  0036A2  3777               	rlcf	___lwdiv@quotient& (0+255),f,b
  6945  0036A4  3778               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6946                           
  6947                           ; BSR set to: 0
  6948  0036A6  0100               	movlb	0	; () banked
  6949  0036A8  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6950  0036AA  0100               	movlb	0	; () banked
  6951  0036AC  5D73               	subwf	___lwdiv@dividend& (0+255),w,b
  6952  0036AE  0100               	movlb	0	; () banked
  6953  0036B0  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6954  0036B2  0100               	movlb	0	; () banked
  6955  0036B4  5974               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6956  0036B6  A0D8               	btfss	status,0,c
  6957  0036B8  D00A               	goto	l3906
  6958                           
  6959                           ; BSR set to: 0
  6960  0036BA  0100               	movlb	0	; () banked
  6961  0036BC  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6962  0036BE  0100               	movlb	0	; () banked
  6963  0036C0  5F73               	subwf	___lwdiv@dividend& (0+255),f,b
  6964  0036C2  0100               	movlb	0	; () banked
  6965  0036C4  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6966  0036C6  0100               	movlb	0	; () banked
  6967  0036C8  5B74               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6968                           
  6969                           ; BSR set to: 0
  6970  0036CA  0100               	movlb	0	; () banked
  6971  0036CC  8177               	bsf	___lwdiv@quotient& (0+255),0,b
  6972  0036CE                     l3906:
  6973                           
  6974                           ; BSR set to: 0
  6975  0036CE  0100               	movlb	0	; () banked
  6976  0036D0  90D8               	bcf	status,0,c
  6977  0036D2  3376               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6978  0036D4  3375               	rrcf	___lwdiv@divisor& (0+255),f,b
  6979                           
  6980                           ; BSR set to: 0
  6981  0036D6  0100               	movlb	0	; () banked
  6982  0036D8  2F79               	decfsz	___lwdiv@counter& (0+255),f,b
  6983  0036DA  D7E1               	goto	l3898
  6984  0036DC                     l1129:
  6985                           
  6986                           ; BSR set to: 0
  6987  0036DC  C077  F073         	movff	___lwdiv@quotient,?___lwdiv
  6988  0036E0  C078  F074         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6989                           
  6990                           ; BSR set to: 0
  6991  0036E4  0012               	return		;funcret
  6992  0036E6                     __end_of___lwdiv:
  6993                           	opt stack 0
  6994                           tblptru	equ	0xFF8
  6995                           tblptrh	equ	0xFF7
  6996                           tblptrl	equ	0xFF6
  6997                           tablat	equ	0xFF5
  6998                           prodh	equ	0xFF4
  6999                           prodl	equ	0xFF3
  7000                           intcon	equ	0xFF2
  7001                           intcon2	equ	0xFF1
  7002                           postinc0	equ	0xFEE
  7003                           wreg	equ	0xFE8
  7004                           postdec1	equ	0xFE5
  7005                           fsr1l	equ	0xFE1
  7006                           indf2	equ	0xFDF
  7007                           fsr2h	equ	0xFDA
  7008                           fsr2l	equ	0xFD9
  7009                           status	equ	0xFD8
  7010                           
  7011 ;; *************** function _ReadADC *****************
  7012 ;; Defined at:
  7013 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcread.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;		None
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  2   19[BANK0 ] int 
  7020 ;; Registers used:
  7021 ;;		wreg, status,2
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7027 ;;      Params:         0       2       0       0
  7028 ;;      Locals:         0       0       0       0
  7029 ;;      Temps:          0       2       0       0
  7030 ;;      Totals:         0       4       0       0
  7031 ;;Total ram usage:        4 bytes
  7032 ;; Hardware stack levels used:    1
  7033 ;; Hardware stack levels required when called:    4
  7034 ;; This function calls:
  7035 ;;		Nothing
  7036 ;; This function is called by:
  7037 ;;		_calibrazione
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text14
  7042  00396A                     __ptext14:
  7043                           	opt stack 0
  7044  00396A                     _ReadADC:
  7045                           	opt stack 25
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;incstack = 0
  7049  00396A  50C4               	movf	4036,w,c	;volatile
  7050  00396C  0100               	movlb	0	; () banked
  7051  00396E  6F75               	movwf	??_ReadADC& (0+255),b
  7052  003970  50C3               	movf	4035,w,c	;volatile
  7053  003972  0100               	movlb	0	; () banked
  7054  003974  6F73               	movwf	?_ReadADC& (0+255),b
  7055  003976  C075  F074         	movff	??_ReadADC,?_ReadADC+1
  7056  00397A  0012               	return	
  7057  00397C                     __end_of_ReadADC:
  7058                           	opt stack 0
  7059                           tblptru	equ	0xFF8
  7060                           tblptrh	equ	0xFF7
  7061                           tblptrl	equ	0xFF6
  7062                           tablat	equ	0xFF5
  7063                           prodh	equ	0xFF4
  7064                           prodl	equ	0xFF3
  7065                           intcon	equ	0xFF2
  7066                           intcon2	equ	0xFF1
  7067                           postinc0	equ	0xFEE
  7068                           wreg	equ	0xFE8
  7069                           postdec1	equ	0xFE5
  7070                           fsr1l	equ	0xFE1
  7071                           indf2	equ	0xFDF
  7072                           fsr2h	equ	0xFDA
  7073                           fsr2l	equ	0xFD9
  7074                           status	equ	0xFD8
  7075                           
  7076 ;; *************** function _ConvertADC *****************
  7077 ;; Defined at:
  7078 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcconv.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;		None
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;		None
  7083 ;; Return value:  Size  Location     Type
  7084 ;;		None               void
  7085 ;; Registers used:
  7086 ;;		None
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7092 ;;      Params:         0       0       0       0
  7093 ;;      Locals:         0       0       0       0
  7094 ;;      Temps:          0       0       0       0
  7095 ;;      Totals:         0       0       0       0
  7096 ;;Total ram usage:        0 bytes
  7097 ;; Hardware stack levels used:    1
  7098 ;; Hardware stack levels required when called:    4
  7099 ;; This function calls:
  7100 ;;		Nothing
  7101 ;; This function is called by:
  7102 ;;		_calibrazione
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text15
  7107  0039B6                     __ptext15:
  7108                           	opt stack 0
  7109  0039B6                     _ConvertADC:
  7110                           	opt stack 25
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;incstack = 0
  7114  0039B6  82C2               	bsf	4034,1,c	;volatile
  7115  0039B8  0012               	return		;funcret
  7116  0039BA                     __end_of_ConvertADC:
  7117                           	opt stack 0
  7118                           tblptru	equ	0xFF8
  7119                           tblptrh	equ	0xFF7
  7120                           tblptrl	equ	0xFF6
  7121                           tablat	equ	0xFF5
  7122                           prodh	equ	0xFF4
  7123                           prodl	equ	0xFF3
  7124                           intcon	equ	0xFF2
  7125                           intcon2	equ	0xFF1
  7126                           postinc0	equ	0xFEE
  7127                           wreg	equ	0xFE8
  7128                           postdec1	equ	0xFE5
  7129                           fsr1l	equ	0xFE1
  7130                           indf2	equ	0xFDF
  7131                           fsr2h	equ	0xFDA
  7132                           fsr2l	equ	0xFD9
  7133                           status	equ	0xFD8
  7134                           
  7135 ;; *************** function _BusyADC *****************
  7136 ;; Defined at:
  7137 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcbusy.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;		None
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;		None
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  1    wreg      unsigned char 
  7144 ;; Registers used:
  7145 ;;		wreg
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7151 ;;      Params:         0       0       0       0
  7152 ;;      Locals:         0       0       0       0
  7153 ;;      Temps:          0       0       0       0
  7154 ;;      Totals:         0       0       0       0
  7155 ;;Total ram usage:        0 bytes
  7156 ;; Hardware stack levels used:    1
  7157 ;; Hardware stack levels required when called:    4
  7158 ;; This function calls:
  7159 ;;		Nothing
  7160 ;; This function is called by:
  7161 ;;		_calibrazione
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           	psect	text16
  7166  00398E                     __ptext16:
  7167                           	opt stack 0
  7168  00398E                     _BusyADC:
  7169                           	opt stack 25
  7170                           
  7171                           ;incstack = 0
  7172  00398E  A2C2               	btfss	4034,1,c	;volatile
  7173  003990  D002               	goto	u4590
  7174  003992  0E01               	movlw	1
  7175  003994  0012               	return	
  7176  003996                     u4590:
  7177  003996  0E00               	movlw	0
  7178  003998  0012               	return	
  7179  00399A                     __end_of_BusyADC:
  7180                           	opt stack 0
  7181                           tblptru	equ	0xFF8
  7182                           tblptrh	equ	0xFF7
  7183                           tblptrl	equ	0xFF6
  7184                           tablat	equ	0xFF5
  7185                           prodh	equ	0xFF4
  7186                           prodl	equ	0xFF3
  7187                           intcon	equ	0xFF2
  7188                           intcon2	equ	0xFF1
  7189                           postinc0	equ	0xFEE
  7190                           wreg	equ	0xFE8
  7191                           postdec1	equ	0xFE5
  7192                           fsr1l	equ	0xFE1
  7193                           indf2	equ	0xFDF
  7194                           fsr2h	equ	0xFDA
  7195                           fsr2l	equ	0xFD9
  7196                           status	equ	0xFD8
  7197                           
  7198 ;; *************** function _abs *****************
  7199 ;; Defined at:
  7200 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;  a               2   19[BANK0 ] int 
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;		None
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  2   19[BANK0 ] int 
  7207 ;; Registers used:
  7208 ;;		wreg, status,2, status,0
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7214 ;;      Params:         0       2       0       0
  7215 ;;      Locals:         0       0       0       0
  7216 ;;      Temps:          0       2       0       0
  7217 ;;      Totals:         0       4       0       0
  7218 ;;Total ram usage:        4 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; Hardware stack levels required when called:    4
  7221 ;; This function calls:
  7222 ;;		Nothing
  7223 ;; This function is called by:
  7224 ;;		_main
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           	psect	text17
  7229  0038EE                     __ptext17:
  7230                           	opt stack 0
  7231  0038EE                     _abs:
  7232                           	opt stack 26
  7233                           
  7234                           ;incstack = 0
  7235  0038EE  0100               	movlb	0	; () banked
  7236  0038F0  AF74               	btfss	(abs@a+1)& (0+255),7,b
  7237  0038F2  D00E               	goto	l772
  7238                           
  7239                           ; BSR set to: 0
  7240  0038F4  C073  F075         	movff	abs@a,??_abs
  7241  0038F8  C074  F076         	movff	abs@a+1,??_abs+1
  7242  0038FC  0100               	movlb	0	; () banked
  7243  0038FE  1F75               	comf	??_abs& (0+255),f,b
  7244  003900  1F76               	comf	(??_abs+1)& (0+255),f,b
  7245  003902  4B75               	infsnz	??_abs& (0+255),f,b
  7246  003904  2B76               	incf	(??_abs+1)& (0+255),f,b
  7247  003906  C075  F073         	movff	??_abs,?_abs
  7248  00390A  C076  F074         	movff	??_abs+1,?_abs+1
  7249  00390E  0012               	return	
  7250  003910                     l772:
  7251                           
  7252                           ; BSR set to: 0
  7253  003910  C073  F073         	movff	abs@a,?_abs
  7254  003914  C074  F074         	movff	abs@a+1,?_abs+1
  7255                           
  7256                           ; BSR set to: 0
  7257  003918  0012               	return		;funcret
  7258  00391A                     __end_of_abs:
  7259                           	opt stack 0
  7260                           tblptru	equ	0xFF8
  7261                           tblptrh	equ	0xFF7
  7262                           tblptrl	equ	0xFF6
  7263                           tablat	equ	0xFF5
  7264                           prodh	equ	0xFF4
  7265                           prodl	equ	0xFF3
  7266                           intcon	equ	0xFF2
  7267                           intcon2	equ	0xFF1
  7268                           postinc0	equ	0xFEE
  7269                           wreg	equ	0xFE8
  7270                           postdec1	equ	0xFE5
  7271                           fsr1l	equ	0xFE1
  7272                           indf2	equ	0xFDF
  7273                           fsr2h	equ	0xFDA
  7274                           fsr2l	equ	0xFD9
  7275                           status	equ	0xFD8
  7276                           
  7277 ;; *************** function ___xxtofl *****************
  7278 ;; Defined at:
  7279 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;  sign            1    wreg     unsigned char 
  7282 ;;  val             4   44[BANK0 ] long 
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;  sign            1   52[BANK0 ] unsigned char 
  7285 ;;  arg             4   54[BANK0 ] unsigned long 
  7286 ;;  exp             1   53[BANK0 ] unsigned char 
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  4   44[BANK0 ] unsigned char 
  7289 ;; Registers used:
  7290 ;;		wreg, status,2, status,0
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7296 ;;      Params:         0       4       0       0
  7297 ;;      Locals:         0       6       0       0
  7298 ;;      Temps:          0       4       0       0
  7299 ;;      Totals:         0      14       0       0
  7300 ;;Total ram usage:       14 bytes
  7301 ;; Hardware stack levels used:    1
  7302 ;; Hardware stack levels required when called:    4
  7303 ;; This function calls:
  7304 ;;		Nothing
  7305 ;; This function is called by:
  7306 ;;		_main
  7307 ;; This function uses a non-reentrant model
  7308 ;;
  7309                           
  7310                           	psect	text18
  7311  002E40                     __ptext18:
  7312                           	opt stack 0
  7313  002E40                     ___xxtofl:
  7314                           	opt stack 26
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;incstack = 0
  7318                           ;___xxtofl@sign stored from wreg
  7319  002E40  0100               	movlb	0	; () banked
  7320  002E42  6F94               	movwf	___xxtofl@sign& (0+255),b
  7321  002E44  0100               	movlb	0	; () banked
  7322  002E46  5194               	movf	___xxtofl@sign& (0+255),w,b
  7323  002E48  0100               	movlb	0	; () banked
  7324  002E4A  B4D8               	btfsc	status,2,c
  7325  002E4C  D01E               	goto	l1274
  7326                           
  7327                           ; BSR set to: 0
  7328  002E4E  0100               	movlb	0	; () banked
  7329  002E50  AF8F               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7330  002E52  D01B               	goto	l1274
  7331                           
  7332                           ; BSR set to: 0
  7333  002E54  C08C  F090         	movff	___xxtofl@val,??___xxtofl
  7334  002E58  C08D  F091         	movff	___xxtofl@val+1,??___xxtofl+1
  7335  002E5C  C08E  F092         	movff	___xxtofl@val+2,??___xxtofl+2
  7336  002E60  C08F  F093         	movff	___xxtofl@val+3,??___xxtofl+3
  7337  002E64  0100               	movlb	0	; () banked
  7338  002E66  1F90               	comf	??___xxtofl& (0+255),f,b
  7339  002E68  1F91               	comf	(??___xxtofl+1)& (0+255),f,b
  7340  002E6A  1F92               	comf	(??___xxtofl+2)& (0+255),f,b
  7341  002E6C  1F93               	comf	(??___xxtofl+3)& (0+255),f,b
  7342  002E6E  2B90               	incf	??___xxtofl& (0+255),f,b
  7343  002E70  0E00               	movlw	0
  7344  002E72  2391               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7345  002E74  2392               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7346  002E76  2393               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7347  002E78  C090  F096         	movff	??___xxtofl,___xxtofl@arg
  7348  002E7C  C091  F097         	movff	??___xxtofl+1,___xxtofl@arg+1
  7349  002E80  C092  F098         	movff	??___xxtofl+2,___xxtofl@arg+2
  7350  002E84  C093  F099         	movff	??___xxtofl+3,___xxtofl@arg+3
  7351  002E88  D008               	goto	l4754
  7352  002E8A                     l1274:
  7353                           
  7354                           ; BSR set to: 0
  7355  002E8A  C08C  F096         	movff	___xxtofl@val,___xxtofl@arg
  7356  002E8E  C08D  F097         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7357  002E92  C08E  F098         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7358  002E96  C08F  F099         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7359  002E9A                     l4754:
  7360                           
  7361                           ; BSR set to: 0
  7362  002E9A  0100               	movlb	0	; () banked
  7363  002E9C  518C               	movf	___xxtofl@val& (0+255),w,b
  7364  002E9E  0100               	movlb	0	; () banked
  7365  002EA0  118D               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7366  002EA2  0100               	movlb	0	; () banked
  7367  002EA4  118E               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7368  002EA6  0100               	movlb	0	; () banked
  7369  002EA8  118F               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7370  002EAA  A4D8               	btfss	status,2,c
  7371  002EAC  D00A               	goto	l4760
  7372                           
  7373                           ; BSR set to: 0
  7374  002EAE  0E00               	movlw	0
  7375  002EB0  0100               	movlb	0	; () banked
  7376  002EB2  6F8C               	movwf	?___xxtofl& (0+255),b
  7377  002EB4  0E00               	movlw	0
  7378  002EB6  6F8D               	movwf	(?___xxtofl+1)& (0+255),b
  7379  002EB8  0E00               	movlw	0
  7380  002EBA  6F8E               	movwf	(?___xxtofl+2)& (0+255),b
  7381  002EBC  0E00               	movlw	0
  7382  002EBE  6F8F               	movwf	(?___xxtofl+3)& (0+255),b
  7383                           
  7384                           ; BSR set to: 0
  7385  002EC0  0012               	return	
  7386  002EC2                     l4760:
  7387                           
  7388                           ; BSR set to: 0
  7389  002EC2  0E96               	movlw	150
  7390  002EC4  0100               	movlb	0	; () banked
  7391  002EC6  6F95               	movwf	___xxtofl@exp& (0+255),b
  7392  002EC8  D008               	goto	l4764
  7393  002ECA                     l4762:
  7394                           
  7395                           ; BSR set to: 0
  7396  002ECA  0100               	movlb	0	; () banked
  7397  002ECC  2B95               	incf	___xxtofl@exp& (0+255),f,b
  7398  002ECE  0100               	movlb	0	; () banked
  7399  002ED0  90D8               	bcf	status,0,c
  7400  002ED2  3399               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7401  002ED4  3398               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7402  002ED6  3397               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7403  002ED8  3396               	rrcf	___xxtofl@arg& (0+255),f,b
  7404  002EDA                     l4764:
  7405                           
  7406                           ; BSR set to: 0
  7407  002EDA  0E00               	movlw	0
  7408  002EDC  0100               	movlb	0	; () banked
  7409  002EDE  1596               	andwf	___xxtofl@arg& (0+255),w,b
  7410  002EE0  0100               	movlb	0	; () banked
  7411  002EE2  6F90               	movwf	??___xxtofl& (0+255),b
  7412  002EE4  0E00               	movlw	0
  7413  002EE6  0100               	movlb	0	; () banked
  7414  002EE8  1597               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7415  002EEA  0100               	movlb	0	; () banked
  7416  002EEC  6F91               	movwf	(??___xxtofl+1)& (0+255),b
  7417  002EEE  0E00               	movlw	0
  7418  002EF0  0100               	movlb	0	; () banked
  7419  002EF2  1598               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7420  002EF4  0100               	movlb	0	; () banked
  7421  002EF6  6F92               	movwf	(??___xxtofl+2)& (0+255),b
  7422  002EF8  0EFE               	movlw	254
  7423  002EFA  0100               	movlb	0	; () banked
  7424  002EFC  1599               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7425  002EFE  0100               	movlb	0	; () banked
  7426  002F00  6F93               	movwf	(??___xxtofl+3)& (0+255),b
  7427  002F02  0100               	movlb	0	; () banked
  7428  002F04  5190               	movf	??___xxtofl& (0+255),w,b
  7429  002F06  0100               	movlb	0	; () banked
  7430  002F08  1191               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7431  002F0A  0100               	movlb	0	; () banked
  7432  002F0C  1192               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7433  002F0E  0100               	movlb	0	; () banked
  7434  002F10  1193               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7435  002F12  B4D8               	btfsc	status,2,c
  7436  002F14  D010               	goto	l1281
  7437  002F16  D7D9               	goto	l4762
  7438  002F18                     l4766:
  7439                           
  7440                           ; BSR set to: 0
  7441  002F18  0100               	movlb	0	; () banked
  7442  002F1A  2B95               	incf	___xxtofl@exp& (0+255),f,b
  7443                           
  7444                           ; BSR set to: 0
  7445  002F1C  0E01               	movlw	1
  7446  002F1E  0100               	movlb	0	; () banked
  7447  002F20  2796               	addwf	___xxtofl@arg& (0+255),f,b
  7448  002F22  0E00               	movlw	0
  7449  002F24  2397               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7450  002F26  2398               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7451  002F28  2399               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7452                           
  7453                           ; BSR set to: 0
  7454  002F2A  0100               	movlb	0	; () banked
  7455  002F2C  90D8               	bcf	status,0,c
  7456  002F2E  3399               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7457  002F30  3398               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7458  002F32  3397               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7459  002F34  3396               	rrcf	___xxtofl@arg& (0+255),f,b
  7460  002F36                     l1281:
  7461                           
  7462                           ; BSR set to: 0
  7463  002F36  0E00               	movlw	0
  7464  002F38  0100               	movlb	0	; () banked
  7465  002F3A  1596               	andwf	___xxtofl@arg& (0+255),w,b
  7466  002F3C  0100               	movlb	0	; () banked
  7467  002F3E  6F90               	movwf	??___xxtofl& (0+255),b
  7468  002F40  0E00               	movlw	0
  7469  002F42  0100               	movlb	0	; () banked
  7470  002F44  1597               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7471  002F46  0100               	movlb	0	; () banked
  7472  002F48  6F91               	movwf	(??___xxtofl+1)& (0+255),b
  7473  002F4A  0E00               	movlw	0
  7474  002F4C  0100               	movlb	0	; () banked
  7475  002F4E  1598               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7476  002F50  0100               	movlb	0	; () banked
  7477  002F52  6F92               	movwf	(??___xxtofl+2)& (0+255),b
  7478  002F54  0EFF               	movlw	255
  7479  002F56  0100               	movlb	0	; () banked
  7480  002F58  1599               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7481  002F5A  0100               	movlb	0	; () banked
  7482  002F5C  6F93               	movwf	(??___xxtofl+3)& (0+255),b
  7483  002F5E  0100               	movlb	0	; () banked
  7484  002F60  5190               	movf	??___xxtofl& (0+255),w,b
  7485  002F62  0100               	movlb	0	; () banked
  7486  002F64  1191               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7487  002F66  0100               	movlb	0	; () banked
  7488  002F68  1192               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7489  002F6A  0100               	movlb	0	; () banked
  7490  002F6C  1193               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7491  002F6E  B4D8               	btfsc	status,2,c
  7492  002F70  D009               	goto	l4774
  7493  002F72  D7D2               	goto	l4766
  7494  002F74                     l4772:
  7495                           
  7496                           ; BSR set to: 0
  7497  002F74  0100               	movlb	0	; () banked
  7498  002F76  0795               	decf	___xxtofl@exp& (0+255),f,b
  7499  002F78  0100               	movlb	0	; () banked
  7500  002F7A  90D8               	bcf	status,0,c
  7501  002F7C  3796               	rlcf	___xxtofl@arg& (0+255),f,b
  7502  002F7E  3797               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7503  002F80  3798               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7504  002F82  3799               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7505  002F84                     l4774:
  7506                           
  7507                           ; BSR set to: 0
  7508  002F84  0100               	movlb	0	; () banked
  7509  002F86  BF98               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7510  002F88  D004               	goto	l1288
  7511                           
  7512                           ; BSR set to: 0
  7513  002F8A  0E02               	movlw	2
  7514  002F8C  0100               	movlb	0	; () banked
  7515  002F8E  6195               	cpfslt	___xxtofl@exp& (0+255),b
  7516  002F90  D7F1               	goto	l4772
  7517  002F92                     l1288:
  7518                           
  7519                           ; BSR set to: 0
  7520  002F92  0100               	movlb	0	; () banked
  7521  002F94  B195               	btfsc	___xxtofl@exp& (0+255),0,b
  7522  002F96  D009               	goto	l1289
  7523                           
  7524                           ; BSR set to: 0
  7525  002F98  0EFF               	movlw	255
  7526  002F9A  0100               	movlb	0	; () banked
  7527  002F9C  1796               	andwf	___xxtofl@arg& (0+255),f,b
  7528  002F9E  0EFF               	movlw	255
  7529  002FA0  1797               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  7530  002FA2  0E7F               	movlw	127
  7531  002FA4  1798               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  7532  002FA6  0EFF               	movlw	255
  7533  002FA8  1799               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  7534  002FAA                     l1289:
  7535                           
  7536                           ; BSR set to: 0
  7537  002FAA  0100               	movlb	0	; () banked
  7538  002FAC  90D8               	bcf	status,0,c
  7539  002FAE  3395               	rrcf	___xxtofl@exp& (0+255),f,b
  7540  002FB0  C095  F090         	movff	___xxtofl@exp,??___xxtofl
  7541  002FB4  0100               	movlb	0	; () banked
  7542  002FB6  6B91               	clrf	(??___xxtofl+1)& (0+255),b
  7543  002FB8  6B92               	clrf	(??___xxtofl+2)& (0+255),b
  7544  002FBA  6B93               	clrf	(??___xxtofl+3)& (0+255),b
  7545  002FBC  C090  F093         	movff	??___xxtofl,??___xxtofl+3
  7546  002FC0  0100               	movlb	0	; () banked
  7547  002FC2  6B92               	clrf	(??___xxtofl+2)& (0+255),b
  7548  002FC4  6B91               	clrf	(??___xxtofl+1)& (0+255),b
  7549  002FC6  6B90               	clrf	??___xxtofl& (0+255),b
  7550  002FC8  0100               	movlb	0	; () banked
  7551  002FCA  5190               	movf	??___xxtofl& (0+255),w,b
  7552  002FCC  0100               	movlb	0	; () banked
  7553  002FCE  1396               	iorwf	___xxtofl@arg& (0+255),f,b
  7554  002FD0  0100               	movlb	0	; () banked
  7555  002FD2  5191               	movf	(??___xxtofl+1)& (0+255),w,b
  7556  002FD4  0100               	movlb	0	; () banked
  7557  002FD6  1397               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  7558  002FD8  0100               	movlb	0	; () banked
  7559  002FDA  5192               	movf	(??___xxtofl+2)& (0+255),w,b
  7560  002FDC  0100               	movlb	0	; () banked
  7561  002FDE  1398               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  7562  002FE0  0100               	movlb	0	; () banked
  7563  002FE2  5193               	movf	(??___xxtofl+3)& (0+255),w,b
  7564  002FE4  0100               	movlb	0	; () banked
  7565  002FE6  1399               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  7566                           
  7567                           ; BSR set to: 0
  7568  002FE8  0100               	movlb	0	; () banked
  7569  002FEA  5194               	movf	___xxtofl@sign& (0+255),w,b
  7570  002FEC  0100               	movlb	0	; () banked
  7571  002FEE  B4D8               	btfsc	status,2,c
  7572  002FF0  D005               	goto	l4786
  7573                           
  7574                           ; BSR set to: 0
  7575  002FF2  0100               	movlb	0	; () banked
  7576  002FF4  AF8F               	btfss	(___xxtofl@val+3)& (0+255),7,b
  7577  002FF6  D002               	goto	l4786
  7578                           
  7579                           ; BSR set to: 0
  7580  002FF8  0100               	movlb	0	; () banked
  7581  002FFA  8F99               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  7582  002FFC                     l4786:
  7583                           
  7584                           ; BSR set to: 0
  7585  002FFC  C096  F08C         	movff	___xxtofl@arg,?___xxtofl
  7586  003000  C097  F08D         	movff	___xxtofl@arg+1,?___xxtofl+1
  7587  003004  C098  F08E         	movff	___xxtofl@arg+2,?___xxtofl+2
  7588  003008  C099  F08F         	movff	___xxtofl@arg+3,?___xxtofl+3
  7589  00300C  0012               	return	
  7590  00300E                     __end_of___xxtofl:
  7591                           	opt stack 0
  7592                           tblptru	equ	0xFF8
  7593                           tblptrh	equ	0xFF7
  7594                           tblptrl	equ	0xFF6
  7595                           tablat	equ	0xFF5
  7596                           prodh	equ	0xFF4
  7597                           prodl	equ	0xFF3
  7598                           intcon	equ	0xFF2
  7599                           intcon2	equ	0xFF1
  7600                           postinc0	equ	0xFEE
  7601                           wreg	equ	0xFE8
  7602                           postdec1	equ	0xFE5
  7603                           fsr1l	equ	0xFE1
  7604                           indf2	equ	0xFDF
  7605                           fsr2h	equ	0xFDA
  7606                           fsr2l	equ	0xFD9
  7607                           status	equ	0xFD8
  7608                           
  7609 ;; *************** function ___lmul *****************
  7610 ;; Defined at:
  7611 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  multiplier      4   19[BANK0 ] unsigned long 
  7614 ;;  multiplicand    4   23[BANK0 ] unsigned long 
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;  product         4   27[BANK0 ] unsigned long 
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  4   19[BANK0 ] unsigned long 
  7619 ;; Registers used:
  7620 ;;		wreg, status,2, status,0
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7626 ;;      Params:         0       8       0       0
  7627 ;;      Locals:         0       4       0       0
  7628 ;;      Temps:          0       0       0       0
  7629 ;;      Totals:         0      12       0       0
  7630 ;;Total ram usage:       12 bytes
  7631 ;; Hardware stack levels used:    1
  7632 ;; Hardware stack levels required when called:    4
  7633 ;; This function calls:
  7634 ;;		Nothing
  7635 ;; This function is called by:
  7636 ;;		_main
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text19
  7641  0036E6                     __ptext19:
  7642                           	opt stack 0
  7643  0036E6                     ___lmul:
  7644                           	opt stack 26
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;incstack = 0
  7648  0036E6  0E00               	movlw	0
  7649  0036E8  0100               	movlb	0	; () banked
  7650  0036EA  6F7B               	movwf	___lmul@product& (0+255),b
  7651  0036EC  0E00               	movlw	0
  7652  0036EE  6F7C               	movwf	(___lmul@product+1)& (0+255),b
  7653  0036F0  0E00               	movlw	0
  7654  0036F2  6F7D               	movwf	(___lmul@product+2)& (0+255),b
  7655  0036F4  0E00               	movlw	0
  7656  0036F6  6F7E               	movwf	(___lmul@product+3)& (0+255),b
  7657  0036F8                     l4154:
  7658                           
  7659                           ; BSR set to: 0
  7660  0036F8  0100               	movlb	0	; () banked
  7661  0036FA  A173               	btfss	___lmul@multiplier& (0+255),0,b
  7662  0036FC  D010               	goto	l4158
  7663                           
  7664                           ; BSR set to: 0
  7665  0036FE  0100               	movlb	0	; () banked
  7666  003700  5177               	movf	___lmul@multiplicand& (0+255),w,b
  7667  003702  0100               	movlb	0	; () banked
  7668  003704  277B               	addwf	___lmul@product& (0+255),f,b
  7669  003706  0100               	movlb	0	; () banked
  7670  003708  5178               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  7671  00370A  0100               	movlb	0	; () banked
  7672  00370C  237C               	addwfc	(___lmul@product+1)& (0+255),f,b
  7673  00370E  0100               	movlb	0	; () banked
  7674  003710  5179               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  7675  003712  0100               	movlb	0	; () banked
  7676  003714  237D               	addwfc	(___lmul@product+2)& (0+255),f,b
  7677  003716  0100               	movlb	0	; () banked
  7678  003718  517A               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  7679  00371A  0100               	movlb	0	; () banked
  7680  00371C  237E               	addwfc	(___lmul@product+3)& (0+255),f,b
  7681  00371E                     l4158:
  7682                           
  7683                           ; BSR set to: 0
  7684  00371E  0100               	movlb	0	; () banked
  7685  003720  90D8               	bcf	status,0,c
  7686  003722  3777               	rlcf	___lmul@multiplicand& (0+255),f,b
  7687  003724  3778               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  7688  003726  3779               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  7689  003728  377A               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  7690                           
  7691                           ; BSR set to: 0
  7692  00372A  0100               	movlb	0	; () banked
  7693  00372C  90D8               	bcf	status,0,c
  7694  00372E  3376               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  7695  003730  3375               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  7696  003732  3374               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  7697  003734  3373               	rrcf	___lmul@multiplier& (0+255),f,b
  7698  003736  0100               	movlb	0	; () banked
  7699  003738  5173               	movf	___lmul@multiplier& (0+255),w,b
  7700  00373A  0100               	movlb	0	; () banked
  7701  00373C  1174               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  7702  00373E  0100               	movlb	0	; () banked
  7703  003740  1175               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  7704  003742  0100               	movlb	0	; () banked
  7705  003744  1176               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  7706  003746  A4D8               	btfss	status,2,c
  7707  003748  D7D7               	goto	l4154
  7708                           
  7709                           ; BSR set to: 0
  7710  00374A  C07B  F073         	movff	___lmul@product,?___lmul
  7711  00374E  C07C  F074         	movff	___lmul@product+1,?___lmul+1
  7712  003752  C07D  F075         	movff	___lmul@product+2,?___lmul+2
  7713  003756  C07E  F076         	movff	___lmul@product+3,?___lmul+3
  7714                           
  7715                           ; BSR set to: 0
  7716  00375A  0012               	return		;funcret
  7717  00375C                     __end_of___lmul:
  7718                           	opt stack 0
  7719                           tblptru	equ	0xFF8
  7720                           tblptrh	equ	0xFF7
  7721                           tblptrl	equ	0xFF6
  7722                           tablat	equ	0xFF5
  7723                           prodh	equ	0xFF4
  7724                           prodl	equ	0xFF3
  7725                           intcon	equ	0xFF2
  7726                           intcon2	equ	0xFF1
  7727                           postinc0	equ	0xFEE
  7728                           wreg	equ	0xFE8
  7729                           postdec1	equ	0xFE5
  7730                           fsr1l	equ	0xFE1
  7731                           indf2	equ	0xFDF
  7732                           fsr2h	equ	0xFDA
  7733                           fsr2l	equ	0xFD9
  7734                           status	equ	0xFD8
  7735                           
  7736 ;; *************** function ___lldiv *****************
  7737 ;; Defined at:
  7738 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;  dividend        4   31[BANK0 ] unsigned long 
  7741 ;;  divisor         4   35[BANK0 ] unsigned long 
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;  quotient        4   39[BANK0 ] unsigned long 
  7744 ;;  counter         1   43[BANK0 ] unsigned char 
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  4   31[BANK0 ] unsigned long 
  7747 ;; Registers used:
  7748 ;;		wreg, status,2, status,0
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7754 ;;      Params:         0       8       0       0
  7755 ;;      Locals:         0       5       0       0
  7756 ;;      Temps:          0       0       0       0
  7757 ;;      Totals:         0      13       0       0
  7758 ;;Total ram usage:       13 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:    4
  7761 ;; This function calls:
  7762 ;;		Nothing
  7763 ;; This function is called by:
  7764 ;;		_main
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text20
  7769  003484                     __ptext20:
  7770                           	opt stack 0
  7771  003484                     ___lldiv:
  7772                           	opt stack 26
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;incstack = 0
  7776  003484  0E00               	movlw	0
  7777  003486  0100               	movlb	0	; () banked
  7778  003488  6F87               	movwf	___lldiv@quotient& (0+255),b
  7779  00348A  0E00               	movlw	0
  7780  00348C  6F88               	movwf	(___lldiv@quotient+1)& (0+255),b
  7781  00348E  0E00               	movlw	0
  7782  003490  6F89               	movwf	(___lldiv@quotient+2)& (0+255),b
  7783  003492  0E00               	movlw	0
  7784  003494  6F8A               	movwf	(___lldiv@quotient+3)& (0+255),b
  7785                           
  7786                           ; BSR set to: 0
  7787  003496  0100               	movlb	0	; () banked
  7788  003498  5183               	movf	___lldiv@divisor& (0+255),w,b
  7789  00349A  0100               	movlb	0	; () banked
  7790  00349C  1184               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  7791  00349E  0100               	movlb	0	; () banked
  7792  0034A0  1185               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  7793  0034A2  0100               	movlb	0	; () banked
  7794  0034A4  1186               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  7795  0034A6  B4D8               	btfsc	status,2,c
  7796  0034A8  D042               	goto	l1076
  7797                           
  7798                           ; BSR set to: 0
  7799  0034AA  0E01               	movlw	1
  7800  0034AC  0100               	movlb	0	; () banked
  7801  0034AE  6F8B               	movwf	___lldiv@counter& (0+255),b
  7802  0034B0  D008               	goto	l4734
  7803  0034B2                     l4732:
  7804                           
  7805                           ; BSR set to: 0
  7806  0034B2  0100               	movlb	0	; () banked
  7807  0034B4  90D8               	bcf	status,0,c
  7808  0034B6  3783               	rlcf	___lldiv@divisor& (0+255),f,b
  7809  0034B8  3784               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  7810  0034BA  3785               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  7811  0034BC  3786               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  7812  0034BE  0100               	movlb	0	; () banked
  7813  0034C0  2B8B               	incf	___lldiv@counter& (0+255),f,b
  7814  0034C2                     l4734:
  7815                           
  7816                           ; BSR set to: 0
  7817  0034C2  0100               	movlb	0	; () banked
  7818  0034C4  AF86               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  7819  0034C6  D7F5               	goto	l4732
  7820  0034C8                     l4736:
  7821                           
  7822                           ; BSR set to: 0
  7823  0034C8  0100               	movlb	0	; () banked
  7824  0034CA  90D8               	bcf	status,0,c
  7825  0034CC  3787               	rlcf	___lldiv@quotient& (0+255),f,b
  7826  0034CE  3788               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  7827  0034D0  3789               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  7828  0034D2  378A               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  7829                           
  7830                           ; BSR set to: 0
  7831  0034D4  0100               	movlb	0	; () banked
  7832  0034D6  5183               	movf	___lldiv@divisor& (0+255),w,b
  7833  0034D8  0100               	movlb	0	; () banked
  7834  0034DA  5D7F               	subwf	___lldiv@dividend& (0+255),w,b
  7835  0034DC  0100               	movlb	0	; () banked
  7836  0034DE  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7837  0034E0  0100               	movlb	0	; () banked
  7838  0034E2  5980               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  7839  0034E4  0100               	movlb	0	; () banked
  7840  0034E6  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7841  0034E8  0100               	movlb	0	; () banked
  7842  0034EA  5981               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  7843  0034EC  0100               	movlb	0	; () banked
  7844  0034EE  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7845  0034F0  0100               	movlb	0	; () banked
  7846  0034F2  5982               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  7847  0034F4  A0D8               	btfss	status,0,c
  7848  0034F6  D012               	goto	l4744
  7849                           
  7850                           ; BSR set to: 0
  7851  0034F8  0100               	movlb	0	; () banked
  7852  0034FA  5183               	movf	___lldiv@divisor& (0+255),w,b
  7853  0034FC  0100               	movlb	0	; () banked
  7854  0034FE  5F7F               	subwf	___lldiv@dividend& (0+255),f,b
  7855  003500  0100               	movlb	0	; () banked
  7856  003502  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  7857  003504  0100               	movlb	0	; () banked
  7858  003506  5B80               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  7859  003508  0100               	movlb	0	; () banked
  7860  00350A  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  7861  00350C  0100               	movlb	0	; () banked
  7862  00350E  5B81               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  7863  003510  0100               	movlb	0	; () banked
  7864  003512  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  7865  003514  0100               	movlb	0	; () banked
  7866  003516  5B82               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  7867                           
  7868                           ; BSR set to: 0
  7869  003518  0100               	movlb	0	; () banked
  7870  00351A  8187               	bsf	___lldiv@quotient& (0+255),0,b
  7871  00351C                     l4744:
  7872                           
  7873                           ; BSR set to: 0
  7874  00351C  0100               	movlb	0	; () banked
  7875  00351E  90D8               	bcf	status,0,c
  7876  003520  3386               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  7877  003522  3385               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  7878  003524  3384               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  7879  003526  3383               	rrcf	___lldiv@divisor& (0+255),f,b
  7880                           
  7881                           ; BSR set to: 0
  7882  003528  0100               	movlb	0	; () banked
  7883  00352A  2F8B               	decfsz	___lldiv@counter& (0+255),f,b
  7884  00352C  D7CD               	goto	l4736
  7885  00352E                     l1076:
  7886                           
  7887                           ; BSR set to: 0
  7888  00352E  C087  F07F         	movff	___lldiv@quotient,?___lldiv
  7889  003532  C088  F080         	movff	___lldiv@quotient+1,?___lldiv+1
  7890  003536  C089  F081         	movff	___lldiv@quotient+2,?___lldiv+2
  7891  00353A  C08A  F082         	movff	___lldiv@quotient+3,?___lldiv+3
  7892                           
  7893                           ; BSR set to: 0
  7894  00353E  0012               	return		;funcret
  7895  003540                     __end_of___lldiv:
  7896                           	opt stack 0
  7897                           tblptru	equ	0xFF8
  7898                           tblptrh	equ	0xFF7
  7899                           tblptrl	equ	0xFF6
  7900                           tablat	equ	0xFF5
  7901                           prodh	equ	0xFF4
  7902                           prodl	equ	0xFF3
  7903                           intcon	equ	0xFF2
  7904                           intcon2	equ	0xFF1
  7905                           postinc0	equ	0xFEE
  7906                           wreg	equ	0xFE8
  7907                           postdec1	equ	0xFE5
  7908                           fsr1l	equ	0xFE1
  7909                           indf2	equ	0xFDF
  7910                           fsr2h	equ	0xFDA
  7911                           fsr2l	equ	0xFD9
  7912                           status	equ	0xFD8
  7913                           
  7914 ;; *************** function ___fltol *****************
  7915 ;; Defined at:
  7916 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;  f1              4   20[BANK1 ] unsigned long 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;  exp1            1   88[BANK0 ] unsigned char 
  7921 ;;  sign1           1   87[BANK0 ] unsigned char 
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  4   20[BANK1 ] long 
  7924 ;; Registers used:
  7925 ;;		wreg, status,2, status,0
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7931 ;;      Params:         0       0       4       0
  7932 ;;      Locals:         0       2       0       0
  7933 ;;      Temps:          0       0       4       0
  7934 ;;      Totals:         0       2       8       0
  7935 ;;Total ram usage:       10 bytes
  7936 ;; Hardware stack levels used:    1
  7937 ;; Hardware stack levels required when called:    4
  7938 ;; This function calls:
  7939 ;;		Nothing
  7940 ;; This function is called by:
  7941 ;;		_main
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945                           	psect	text21
  7946  0031D4                     __ptext21:
  7947                           	opt stack 0
  7948  0031D4                     ___fltol:
  7949                           	opt stack 26
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;incstack = 0
  7953  0031D4  0101               	movlb	1	; () banked
  7954  0031D6  3516               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7955  0031D8  3517               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7956  0031DA  0100               	movlb	0	; () banked
  7957  0031DC  6FB8               	movwf	___fltol@exp1& (0+255),b
  7958  0031DE  0100               	movlb	0	; () banked
  7959  0031E0  51B8               	movf	___fltol@exp1& (0+255),w,b
  7960  0031E2  A4D8               	btfss	status,2,c
  7961  0031E4  D00A               	goto	l5144
  7962                           
  7963                           ; BSR set to: 0
  7964  0031E6  0E00               	movlw	0
  7965  0031E8  0101               	movlb	1	; () banked
  7966  0031EA  6F14               	movwf	?___fltol& (0+255),b
  7967  0031EC  0E00               	movlw	0
  7968  0031EE  6F15               	movwf	(?___fltol+1)& (0+255),b
  7969  0031F0  0E00               	movlw	0
  7970  0031F2  6F16               	movwf	(?___fltol+2)& (0+255),b
  7971  0031F4  0E00               	movlw	0
  7972  0031F6  6F17               	movwf	(?___fltol+3)& (0+255),b
  7973                           
  7974                           ; BSR set to: 1
  7975  0031F8  0012               	return	
  7976  0031FA                     l5144:
  7977  0031FA  C114  F118         	movff	___fltol@f1,??___fltol
  7978  0031FE  C115  F119         	movff	___fltol@f1+1,??___fltol+1
  7979  003202  C116  F11A         	movff	___fltol@f1+2,??___fltol+2
  7980  003206  C117  F11B         	movff	___fltol@f1+3,??___fltol+3
  7981  00320A  0E20               	movlw	32
  7982  00320C  D006               	goto	u6690
  7983  00320E                     u6695:
  7984  00320E  0101               	movlb	1	; () banked
  7985  003210  90D8               	bcf	status,0,c
  7986  003212  331B               	rrcf	(??___fltol+3)& (0+255),f,b
  7987  003214  331A               	rrcf	(??___fltol+2)& (0+255),f,b
  7988  003216  3319               	rrcf	(??___fltol+1)& (0+255),f,b
  7989  003218  3318               	rrcf	??___fltol& (0+255),f,b
  7990  00321A                     u6690:
  7991  00321A  2EE8               	decfsz	wreg,f,c
  7992  00321C  D7F8               	goto	u6695
  7993  00321E  0101               	movlb	1	; () banked
  7994  003220  5118               	movf	??___fltol& (0+255),w,b
  7995  003222  0100               	movlb	0	; () banked
  7996  003224  6FB7               	movwf	___fltol@sign1& (0+255),b
  7997                           
  7998                           ; BSR set to: 0
  7999  003226  0101               	movlb	1	; () banked
  8000  003228  8F16               	bsf	(___fltol@f1+2)& (0+255),7,b
  8001                           
  8002                           ; BSR set to: 1
  8003  00322A  0EFF               	movlw	255
  8004  00322C  0101               	movlb	1	; () banked
  8005  00322E  1714               	andwf	___fltol@f1& (0+255),f,b
  8006  003230  0EFF               	movlw	255
  8007  003232  1715               	andwf	(___fltol@f1+1)& (0+255),f,b
  8008  003234  0EFF               	movlw	255
  8009  003236  1716               	andwf	(___fltol@f1+2)& (0+255),f,b
  8010  003238  0E00               	movlw	0
  8011  00323A  1717               	andwf	(___fltol@f1+3)& (0+255),f,b
  8012                           
  8013                           ; BSR set to: 1
  8014  00323C  0E96               	movlw	150
  8015  00323E  0100               	movlb	0	; () banked
  8016  003240  5FB8               	subwf	___fltol@exp1& (0+255),f,b
  8017                           
  8018                           ; BSR set to: 0
  8019  003242  0100               	movlb	0	; () banked
  8020  003244  AFB8               	btfss	___fltol@exp1& (0+255),7,b
  8021  003246  D01A               	goto	l5164
  8022                           
  8023                           ; BSR set to: 0
  8024  003248  0100               	movlb	0	; () banked
  8025  00324A  51B8               	movf	___fltol@exp1& (0+255),w,b
  8026  00324C  0A80               	xorlw	128
  8027  00324E  0F97               	addlw	151
  8028  003250  B0D8               	btfsc	status,0,c
  8029  003252  D00A               	goto	l5160
  8030                           
  8031                           ; BSR set to: 0
  8032  003254  0E00               	movlw	0
  8033  003256  0101               	movlb	1	; () banked
  8034  003258  6F14               	movwf	?___fltol& (0+255),b
  8035  00325A  0E00               	movlw	0
  8036  00325C  6F15               	movwf	(?___fltol+1)& (0+255),b
  8037  00325E  0E00               	movlw	0
  8038  003260  6F16               	movwf	(?___fltol+2)& (0+255),b
  8039  003262  0E00               	movlw	0
  8040  003264  6F17               	movwf	(?___fltol+3)& (0+255),b
  8041                           
  8042                           ; BSR set to: 1
  8043  003266  0012               	return	
  8044  003268                     l5160:
  8045  003268  0101               	movlb	1	; () banked
  8046  00326A  90D8               	bcf	status,0,c
  8047  00326C  3317               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8048  00326E  3316               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8049  003270  3315               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8050  003272  3314               	rrcf	___fltol@f1& (0+255),f,b
  8051                           
  8052                           ; BSR set to: 1
  8053  003274  0100               	movlb	0	; () banked
  8054  003276  3FB8               	incfsz	___fltol@exp1& (0+255),f,b
  8055  003278  D7F7               	goto	l5160
  8056                           
  8057                           ; BSR set to: 0
  8058  00327A  D01B               	goto	l5174
  8059  00327C                     l5164:
  8060                           
  8061                           ; BSR set to: 0
  8062  00327C  0E1F               	movlw	31
  8063  00327E  0100               	movlb	0	; () banked
  8064  003280  65B8               	cpfsgt	___fltol@exp1& (0+255),b
  8065  003282  D012               	goto	l5172
  8066                           
  8067                           ; BSR set to: 0
  8068  003284  0E00               	movlw	0
  8069  003286  0101               	movlb	1	; () banked
  8070  003288  6F14               	movwf	?___fltol& (0+255),b
  8071  00328A  0E00               	movlw	0
  8072  00328C  6F15               	movwf	(?___fltol+1)& (0+255),b
  8073  00328E  0E00               	movlw	0
  8074  003290  6F16               	movwf	(?___fltol+2)& (0+255),b
  8075  003292  0E00               	movlw	0
  8076  003294  6F17               	movwf	(?___fltol+3)& (0+255),b
  8077                           
  8078                           ; BSR set to: 1
  8079  003296  0012               	return	
  8080  003298                     l5170:
  8081  003298  0101               	movlb	1	; () banked
  8082  00329A  90D8               	bcf	status,0,c
  8083  00329C  3714               	rlcf	___fltol@f1& (0+255),f,b
  8084  00329E  3715               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8085  0032A0  3716               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8086  0032A2  3717               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8087  0032A4  0100               	movlb	0	; () banked
  8088  0032A6  07B8               	decf	___fltol@exp1& (0+255),f,b
  8089  0032A8                     l5172:
  8090  0032A8  0100               	movlb	0	; () banked
  8091  0032AA  51B8               	movf	___fltol@exp1& (0+255),w,b
  8092  0032AC  0100               	movlb	0	; () banked
  8093  0032AE  A4D8               	btfss	status,2,c
  8094  0032B0  D7F3               	goto	l5170
  8095  0032B2                     l5174:
  8096                           
  8097                           ; BSR set to: 0
  8098  0032B2  0100               	movlb	0	; () banked
  8099  0032B4  51B7               	movf	___fltol@sign1& (0+255),w,b
  8100  0032B6  0100               	movlb	0	; () banked
  8101  0032B8  B4D8               	btfsc	status,2,c
  8102  0032BA  D009               	goto	l5178
  8103                           
  8104                           ; BSR set to: 0
  8105  0032BC  0101               	movlb	1	; () banked
  8106  0032BE  1F17               	comf	(___fltol@f1+3)& (0+255),f,b
  8107  0032C0  1F16               	comf	(___fltol@f1+2)& (0+255),f,b
  8108  0032C2  1F15               	comf	(___fltol@f1+1)& (0+255),f,b
  8109  0032C4  6D14               	negf	___fltol@f1& (0+255),b
  8110  0032C6  0E00               	movlw	0
  8111  0032C8  2315               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8112  0032CA  2316               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8113  0032CC  2317               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8114  0032CE                     l5178:
  8115  0032CE  C114  F114         	movff	___fltol@f1,?___fltol
  8116  0032D2  C115  F115         	movff	___fltol@f1+1,?___fltol+1
  8117  0032D6  C116  F116         	movff	___fltol@f1+2,?___fltol+2
  8118  0032DA  C117  F117         	movff	___fltol@f1+3,?___fltol+3
  8119  0032DE  0012               	return	
  8120  0032E0                     __end_of___fltol:
  8121                           	opt stack 0
  8122                           tblptru	equ	0xFF8
  8123                           tblptrh	equ	0xFF7
  8124                           tblptrl	equ	0xFF6
  8125                           tablat	equ	0xFF5
  8126                           prodh	equ	0xFF4
  8127                           prodl	equ	0xFF3
  8128                           intcon	equ	0xFF2
  8129                           intcon2	equ	0xFF1
  8130                           postinc0	equ	0xFEE
  8131                           wreg	equ	0xFE8
  8132                           postdec1	equ	0xFE5
  8133                           fsr1l	equ	0xFE1
  8134                           indf2	equ	0xFDF
  8135                           fsr2h	equ	0xFDA
  8136                           fsr2l	equ	0xFD9
  8137                           status	equ	0xFD8
  8138                           
  8139 ;; *************** function ___flneg *****************
  8140 ;; Defined at:
  8141 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;  f1              4   83[BANK0 ] long 
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;		None
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  4   83[BANK0 ] long 
  8148 ;; Registers used:
  8149 ;;		wreg, status,2, status,0
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8155 ;;      Params:         0       4       0       0
  8156 ;;      Locals:         0       0       0       0
  8157 ;;      Temps:          0       0       0       0
  8158 ;;      Totals:         0       4       0       0
  8159 ;;Total ram usage:        4 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; Hardware stack levels required when called:    4
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_main
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           	psect	text22
  8170  003880                     __ptext22:
  8171                           	opt stack 0
  8172  003880                     ___flneg:
  8173                           	opt stack 26
  8174                           
  8175                           ;incstack = 0
  8176  003880  0100               	movlb	0	; () banked
  8177  003882  51B3               	movf	___flneg@f1& (0+255),w,b
  8178  003884  0100               	movlb	0	; () banked
  8179  003886  11B4               	iorwf	(___flneg@f1+1)& (0+255),w,b
  8180  003888  0100               	movlb	0	; () banked
  8181  00388A  11B5               	iorwf	(___flneg@f1+2)& (0+255),w,b
  8182  00388C  0100               	movlb	0	; () banked
  8183  00388E  11B6               	iorwf	(___flneg@f1+3)& (0+255),w,b
  8184  003890  B4D8               	btfsc	status,2,c
  8185  003892  D009               	goto	l4678
  8186                           
  8187                           ; BSR set to: 0
  8188  003894  0E00               	movlw	0
  8189  003896  0100               	movlb	0	; () banked
  8190  003898  1BB3               	xorwf	___flneg@f1& (0+255),f,b
  8191  00389A  0E00               	movlw	0
  8192  00389C  1BB4               	xorwf	(___flneg@f1+1)& (0+255),f,b
  8193  00389E  0E00               	movlw	0
  8194  0038A0  1BB5               	xorwf	(___flneg@f1+2)& (0+255),f,b
  8195  0038A2  0E80               	movlw	128
  8196  0038A4  1BB6               	xorwf	(___flneg@f1+3)& (0+255),f,b
  8197  0038A6                     l4678:
  8198                           
  8199                           ; BSR set to: 0
  8200  0038A6  C0B3  F0B3         	movff	___flneg@f1,?___flneg
  8201  0038AA  C0B4  F0B4         	movff	___flneg@f1+1,?___flneg+1
  8202  0038AE  C0B5  F0B5         	movff	___flneg@f1+2,?___flneg+2
  8203  0038B2  C0B6  F0B6         	movff	___flneg@f1+3,?___flneg+3
  8204  0038B6  0012               	return	
  8205  0038B8                     __end_of___flneg:
  8206                           	opt stack 0
  8207                           tblptru	equ	0xFF8
  8208                           tblptrh	equ	0xFF7
  8209                           tblptrl	equ	0xFF6
  8210                           tablat	equ	0xFF5
  8211                           prodh	equ	0xFF4
  8212                           prodl	equ	0xFF3
  8213                           intcon	equ	0xFF2
  8214                           intcon2	equ	0xFF1
  8215                           postinc0	equ	0xFEE
  8216                           wreg	equ	0xFE8
  8217                           postdec1	equ	0xFE5
  8218                           fsr1l	equ	0xFE1
  8219                           indf2	equ	0xFDF
  8220                           fsr2h	equ	0xFDA
  8221                           fsr2l	equ	0xFD9
  8222                           status	equ	0xFD8
  8223                           
  8224 ;; *************** function ___flmul *****************
  8225 ;; Defined at:
  8226 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;  b               4   58[BANK0 ] long 
  8229 ;;  a               4   62[BANK0 ] long 
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;  prod            4   77[BANK0 ] struct .
  8232 ;;  grs             4   71[BANK0 ] unsigned long 
  8233 ;;  temp            2   81[BANK0 ] struct .
  8234 ;;  bexp            1   76[BANK0 ] unsigned char 
  8235 ;;  aexp            1   75[BANK0 ] unsigned char 
  8236 ;;  sign            1   70[BANK0 ] unsigned char 
  8237 ;; Return value:  Size  Location     Type
  8238 ;;                  4   58[BANK0 ] unsigned char 
  8239 ;; Registers used:
  8240 ;;		wreg, status,2, status,0, prodl, prodh
  8241 ;; Tracked objects:
  8242 ;;		On entry : 0/0
  8243 ;;		On exit  : 0/0
  8244 ;;		Unchanged: 0/0
  8245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8246 ;;      Params:         0       8       0       0
  8247 ;;      Locals:         0      13       0       0
  8248 ;;      Temps:          0       4       0       0
  8249 ;;      Totals:         0      25       0       0
  8250 ;;Total ram usage:       25 bytes
  8251 ;; Hardware stack levels used:    1
  8252 ;; Hardware stack levels required when called:    4
  8253 ;; This function calls:
  8254 ;;		Nothing
  8255 ;; This function is called by:
  8256 ;;		_main
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           	psect	text23
  8261  001DB0                     __ptext23:
  8262                           	opt stack 0
  8263  001DB0                     ___flmul:
  8264                           	opt stack 26
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;incstack = 0
  8268  001DB0  0100               	movlb	0	; () banked
  8269  001DB2  519D               	movf	(___flmul@b+3)& (0+255),w,b
  8270  001DB4  0B80               	andlw	128
  8271  001DB6  0100               	movlb	0	; () banked
  8272  001DB8  6FA6               	movwf	___flmul@sign& (0+255),b
  8273  001DBA  0100               	movlb	0	; () banked
  8274  001DBC  519D               	movf	(___flmul@b+3)& (0+255),w,b
  8275  001DBE  259D               	addwf	(___flmul@b+3)& (0+255),w,b
  8276  001DC0  0100               	movlb	0	; () banked
  8277  001DC2  6FAC               	movwf	___flmul@bexp& (0+255),b
  8278                           
  8279                           ; BSR set to: 0
  8280  001DC4  0100               	movlb	0	; () banked
  8281  001DC6  AF9C               	btfss	(___flmul@b+2)& (0+255),7,b
  8282  001DC8  D002               	goto	l4506
  8283                           
  8284                           ; BSR set to: 0
  8285  001DCA  0100               	movlb	0	; () banked
  8286  001DCC  81AC               	bsf	___flmul@bexp& (0+255),0,b
  8287  001DCE                     l4506:
  8288                           
  8289                           ; BSR set to: 0
  8290  001DCE  0100               	movlb	0	; () banked
  8291  001DD0  51AC               	movf	___flmul@bexp& (0+255),w,b
  8292  001DD2  0100               	movlb	0	; () banked
  8293  001DD4  B4D8               	btfsc	status,2,c
  8294  001DD6  D010               	goto	l4514
  8295                           
  8296                           ; BSR set to: 0
  8297  001DD8  0100               	movlb	0	; () banked
  8298  001DDA  29AC               	incf	___flmul@bexp& (0+255),w,b
  8299  001DDC  A4D8               	btfss	status,2,c
  8300  001DDE  D009               	goto	l4512
  8301                           
  8302                           ; BSR set to: 0
  8303  001DE0  0E00               	movlw	0
  8304  001DE2  0100               	movlb	0	; () banked
  8305  001DE4  6F9A               	movwf	___flmul@b& (0+255),b
  8306  001DE6  0E00               	movlw	0
  8307  001DE8  6F9B               	movwf	(___flmul@b+1)& (0+255),b
  8308  001DEA  0E00               	movlw	0
  8309  001DEC  6F9C               	movwf	(___flmul@b+2)& (0+255),b
  8310  001DEE  0E00               	movlw	0
  8311  001DF0  6F9D               	movwf	(___flmul@b+3)& (0+255),b
  8312  001DF2                     l4512:
  8313                           
  8314                           ; BSR set to: 0
  8315  001DF2  0100               	movlb	0	; () banked
  8316  001DF4  8F9C               	bsf	(___flmul@b+2)& (0+255),7,b
  8317  001DF6  D009               	goto	l4516
  8318  001DF8                     l4514:
  8319                           
  8320                           ; BSR set to: 0
  8321  001DF8  0E00               	movlw	0
  8322  001DFA  0100               	movlb	0	; () banked
  8323  001DFC  6F9A               	movwf	___flmul@b& (0+255),b
  8324  001DFE  0E00               	movlw	0
  8325  001E00  6F9B               	movwf	(___flmul@b+1)& (0+255),b
  8326  001E02  0E00               	movlw	0
  8327  001E04  6F9C               	movwf	(___flmul@b+2)& (0+255),b
  8328  001E06  0E00               	movlw	0
  8329  001E08  6F9D               	movwf	(___flmul@b+3)& (0+255),b
  8330  001E0A                     l4516:
  8331                           
  8332                           ; BSR set to: 0
  8333  001E0A  0100               	movlb	0	; () banked
  8334  001E0C  51A1               	movf	(___flmul@a+3)& (0+255),w,b
  8335  001E0E  0B80               	andlw	128
  8336  001E10  0100               	movlb	0	; () banked
  8337  001E12  1BA6               	xorwf	___flmul@sign& (0+255),f,b
  8338                           
  8339                           ; BSR set to: 0
  8340  001E14  0100               	movlb	0	; () banked
  8341  001E16  51A1               	movf	(___flmul@a+3)& (0+255),w,b
  8342  001E18  25A1               	addwf	(___flmul@a+3)& (0+255),w,b
  8343  001E1A  0100               	movlb	0	; () banked
  8344  001E1C  6FAB               	movwf	___flmul@aexp& (0+255),b
  8345                           
  8346                           ; BSR set to: 0
  8347  001E1E  0100               	movlb	0	; () banked
  8348  001E20  AFA0               	btfss	(___flmul@a+2)& (0+255),7,b
  8349  001E22  D002               	goto	l4524
  8350                           
  8351                           ; BSR set to: 0
  8352  001E24  0100               	movlb	0	; () banked
  8353  001E26  81AB               	bsf	___flmul@aexp& (0+255),0,b
  8354  001E28                     l4524:
  8355                           
  8356                           ; BSR set to: 0
  8357  001E28  0100               	movlb	0	; () banked
  8358  001E2A  51AB               	movf	___flmul@aexp& (0+255),w,b
  8359  001E2C  0100               	movlb	0	; () banked
  8360  001E2E  B4D8               	btfsc	status,2,c
  8361  001E30  D010               	goto	l4532
  8362                           
  8363                           ; BSR set to: 0
  8364  001E32  0100               	movlb	0	; () banked
  8365  001E34  29AB               	incf	___flmul@aexp& (0+255),w,b
  8366  001E36  A4D8               	btfss	status,2,c
  8367  001E38  D009               	goto	l4530
  8368                           
  8369                           ; BSR set to: 0
  8370  001E3A  0E00               	movlw	0
  8371  001E3C  0100               	movlb	0	; () banked
  8372  001E3E  6F9E               	movwf	___flmul@a& (0+255),b
  8373  001E40  0E00               	movlw	0
  8374  001E42  6F9F               	movwf	(___flmul@a+1)& (0+255),b
  8375  001E44  0E00               	movlw	0
  8376  001E46  6FA0               	movwf	(___flmul@a+2)& (0+255),b
  8377  001E48  0E00               	movlw	0
  8378  001E4A  6FA1               	movwf	(___flmul@a+3)& (0+255),b
  8379  001E4C                     l4530:
  8380                           
  8381                           ; BSR set to: 0
  8382  001E4C  0100               	movlb	0	; () banked
  8383  001E4E  8FA0               	bsf	(___flmul@a+2)& (0+255),7,b
  8384  001E50  D009               	goto	l1252
  8385  001E52                     l4532:
  8386                           
  8387                           ; BSR set to: 0
  8388  001E52  0E00               	movlw	0
  8389  001E54  0100               	movlb	0	; () banked
  8390  001E56  6F9E               	movwf	___flmul@a& (0+255),b
  8391  001E58  0E00               	movlw	0
  8392  001E5A  6F9F               	movwf	(___flmul@a+1)& (0+255),b
  8393  001E5C  0E00               	movlw	0
  8394  001E5E  6FA0               	movwf	(___flmul@a+2)& (0+255),b
  8395  001E60  0E00               	movlw	0
  8396  001E62  6FA1               	movwf	(___flmul@a+3)& (0+255),b
  8397  001E64                     l1252:
  8398                           
  8399                           ; BSR set to: 0
  8400  001E64  0100               	movlb	0	; () banked
  8401  001E66  51AB               	movf	___flmul@aexp& (0+255),w,b
  8402  001E68  0100               	movlb	0	; () banked
  8403  001E6A  B4D8               	btfsc	status,2,c
  8404  001E6C  D005               	goto	l4536
  8405                           
  8406                           ; BSR set to: 0
  8407  001E6E  0100               	movlb	0	; () banked
  8408  001E70  51AC               	movf	___flmul@bexp& (0+255),w,b
  8409  001E72  0100               	movlb	0	; () banked
  8410  001E74  A4D8               	btfss	status,2,c
  8411  001E76  D00A               	goto	l4540
  8412  001E78                     l4536:
  8413                           
  8414                           ; BSR set to: 0
  8415  001E78  0E00               	movlw	0
  8416  001E7A  0100               	movlb	0	; () banked
  8417  001E7C  6F9A               	movwf	?___flmul& (0+255),b
  8418  001E7E  0E00               	movlw	0
  8419  001E80  6F9B               	movwf	(?___flmul+1)& (0+255),b
  8420  001E82  0E00               	movlw	0
  8421  001E84  6F9C               	movwf	(?___flmul+2)& (0+255),b
  8422  001E86  0E00               	movlw	0
  8423  001E88  6F9D               	movwf	(?___flmul+3)& (0+255),b
  8424                           
  8425                           ; BSR set to: 0
  8426  001E8A  0012               	return	
  8427  001E8C                     l4540:
  8428                           
  8429                           ; BSR set to: 0
  8430  001E8C  0100               	movlb	0	; () banked
  8431  001E8E  51A0               	movf	(___flmul@a+2)& (0+255),w,b
  8432  001E90  0100               	movlb	0	; () banked
  8433  001E92  039A               	mulwf	___flmul@b& (0+255),b
  8434  001E94  CFF3 F0B1          	movff	prodl,___flmul@temp
  8435  001E98  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8436                           
  8437                           ; BSR set to: 0
  8438  001E9C  0100               	movlb	0	; () banked
  8439  001E9E  51B1               	movf	___flmul@temp& (0+255),w,b
  8440  001EA0  0100               	movlb	0	; () banked
  8441  001EA2  6FA7               	movwf	___flmul@grs& (0+255),b
  8442  001EA4  6BA8               	clrf	(___flmul@grs+1)& (0+255),b
  8443  001EA6  6BA9               	clrf	(___flmul@grs+2)& (0+255),b
  8444  001EA8  6BAA               	clrf	(___flmul@grs+3)& (0+255),b
  8445                           
  8446                           ; BSR set to: 0
  8447  001EAA  0100               	movlb	0	; () banked
  8448  001EAC  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8449  001EAE  0100               	movlb	0	; () banked
  8450  001EB0  6FAD               	movwf	___flmul@prod& (0+255),b
  8451  001EB2  6BAE               	clrf	(___flmul@prod+1)& (0+255),b
  8452  001EB4  6BAF               	clrf	(___flmul@prod+2)& (0+255),b
  8453  001EB6  6BB0               	clrf	(___flmul@prod+3)& (0+255),b
  8454  001EB8  0100               	movlb	0	; () banked
  8455  001EBA  519F               	movf	(___flmul@a+1)& (0+255),w,b
  8456  001EBC  0100               	movlb	0	; () banked
  8457  001EBE  039B               	mulwf	(___flmul@b+1)& (0+255),b
  8458  001EC0  CFF3 F0B1          	movff	prodl,___flmul@temp
  8459  001EC4  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8460                           
  8461                           ; BSR set to: 0
  8462  001EC8  0100               	movlb	0	; () banked
  8463  001ECA  51B1               	movf	___flmul@temp& (0+255),w,b
  8464  001ECC  0100               	movlb	0	; () banked
  8465  001ECE  27A7               	addwf	___flmul@grs& (0+255),f,b
  8466  001ED0  0E00               	movlw	0
  8467  001ED2  23A8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8468  001ED4  23A9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8469  001ED6  23AA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8470                           
  8471                           ; BSR set to: 0
  8472  001ED8  0100               	movlb	0	; () banked
  8473  001EDA  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8474  001EDC  0100               	movlb	0	; () banked
  8475  001EDE  27AD               	addwf	___flmul@prod& (0+255),f,b
  8476  001EE0  0E00               	movlw	0
  8477  001EE2  23AE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8478  001EE4  23AF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8479  001EE6  23B0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8480  001EE8  0100               	movlb	0	; () banked
  8481  001EEA  519E               	movf	___flmul@a& (0+255),w,b
  8482  001EEC  0100               	movlb	0	; () banked
  8483  001EEE  039C               	mulwf	(___flmul@b+2)& (0+255),b
  8484  001EF0  CFF3 F0B1          	movff	prodl,___flmul@temp
  8485  001EF4  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8486                           
  8487                           ; BSR set to: 0
  8488  001EF8  0100               	movlb	0	; () banked
  8489  001EFA  51B1               	movf	___flmul@temp& (0+255),w,b
  8490  001EFC  0100               	movlb	0	; () banked
  8491  001EFE  27A7               	addwf	___flmul@grs& (0+255),f,b
  8492  001F00  0E00               	movlw	0
  8493  001F02  23A8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8494  001F04  23A9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8495  001F06  23AA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8496                           
  8497                           ; BSR set to: 0
  8498  001F08  0100               	movlb	0	; () banked
  8499  001F0A  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8500  001F0C  0100               	movlb	0	; () banked
  8501  001F0E  27AD               	addwf	___flmul@prod& (0+255),f,b
  8502  001F10  0E00               	movlw	0
  8503  001F12  23AE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8504  001F14  23AF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8505  001F16  23B0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8506                           
  8507                           ; BSR set to: 0
  8508  001F18  C0A9  F0AA         	movff	___flmul@grs+2,___flmul@grs+3
  8509  001F1C  C0A8  F0A9         	movff	___flmul@grs+1,___flmul@grs+2
  8510  001F20  C0A7  F0A8         	movff	___flmul@grs,___flmul@grs+1
  8511  001F24  0100               	movlb	0	; () banked
  8512  001F26  6BA7               	clrf	___flmul@grs& (0+255),b
  8513                           
  8514                           ; BSR set to: 0
  8515  001F28  0100               	movlb	0	; () banked
  8516  001F2A  519E               	movf	___flmul@a& (0+255),w,b
  8517  001F2C  0100               	movlb	0	; () banked
  8518  001F2E  039B               	mulwf	(___flmul@b+1)& (0+255),b
  8519  001F30  CFF3 F0B1          	movff	prodl,___flmul@temp
  8520  001F34  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8521                           
  8522                           ; BSR set to: 0
  8523  001F38  0100               	movlb	0	; () banked
  8524  001F3A  51B1               	movf	___flmul@temp& (0+255),w,b
  8525  001F3C  0100               	movlb	0	; () banked
  8526  001F3E  27A7               	addwf	___flmul@grs& (0+255),f,b
  8527  001F40  0100               	movlb	0	; () banked
  8528  001F42  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8529  001F44  0100               	movlb	0	; () banked
  8530  001F46  23A8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8531  001F48  0E00               	movlw	0
  8532  001F4A  0100               	movlb	0	; () banked
  8533  001F4C  23A9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8534  001F4E  0E00               	movlw	0
  8535  001F50  0100               	movlb	0	; () banked
  8536  001F52  23AA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8537                           
  8538                           ; BSR set to: 0
  8539  001F54  0100               	movlb	0	; () banked
  8540  001F56  519F               	movf	(___flmul@a+1)& (0+255),w,b
  8541  001F58  0100               	movlb	0	; () banked
  8542  001F5A  039A               	mulwf	___flmul@b& (0+255),b
  8543  001F5C  CFF3 F0B1          	movff	prodl,___flmul@temp
  8544  001F60  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8545                           
  8546                           ; BSR set to: 0
  8547  001F64  0100               	movlb	0	; () banked
  8548  001F66  51B1               	movf	___flmul@temp& (0+255),w,b
  8549  001F68  0100               	movlb	0	; () banked
  8550  001F6A  27A7               	addwf	___flmul@grs& (0+255),f,b
  8551  001F6C  0100               	movlb	0	; () banked
  8552  001F6E  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8553  001F70  0100               	movlb	0	; () banked
  8554  001F72  23A8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8555  001F74  0E00               	movlw	0
  8556  001F76  0100               	movlb	0	; () banked
  8557  001F78  23A9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8558  001F7A  0E00               	movlw	0
  8559  001F7C  0100               	movlb	0	; () banked
  8560  001F7E  23AA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8561                           
  8562                           ; BSR set to: 0
  8563  001F80  C0A9  F0AA         	movff	___flmul@grs+2,___flmul@grs+3
  8564  001F84  C0A8  F0A9         	movff	___flmul@grs+1,___flmul@grs+2
  8565  001F88  C0A7  F0A8         	movff	___flmul@grs,___flmul@grs+1
  8566  001F8C  0100               	movlb	0	; () banked
  8567  001F8E  6BA7               	clrf	___flmul@grs& (0+255),b
  8568  001F90  0100               	movlb	0	; () banked
  8569  001F92  519E               	movf	___flmul@a& (0+255),w,b
  8570  001F94  0100               	movlb	0	; () banked
  8571  001F96  039A               	mulwf	___flmul@b& (0+255),b
  8572  001F98  CFF3 F0B1          	movff	prodl,___flmul@temp
  8573  001F9C  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8574                           
  8575                           ; BSR set to: 0
  8576  001FA0  0100               	movlb	0	; () banked
  8577  001FA2  51B1               	movf	___flmul@temp& (0+255),w,b
  8578  001FA4  0100               	movlb	0	; () banked
  8579  001FA6  27A7               	addwf	___flmul@grs& (0+255),f,b
  8580  001FA8  0100               	movlb	0	; () banked
  8581  001FAA  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8582  001FAC  0100               	movlb	0	; () banked
  8583  001FAE  23A8               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8584  001FB0  0E00               	movlw	0
  8585  001FB2  0100               	movlb	0	; () banked
  8586  001FB4  23A9               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8587  001FB6  0E00               	movlw	0
  8588  001FB8  0100               	movlb	0	; () banked
  8589  001FBA  23AA               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8590                           
  8591                           ; BSR set to: 0
  8592  001FBC  0100               	movlb	0	; () banked
  8593  001FBE  51A0               	movf	(___flmul@a+2)& (0+255),w,b
  8594  001FC0  0100               	movlb	0	; () banked
  8595  001FC2  039B               	mulwf	(___flmul@b+1)& (0+255),b
  8596  001FC4  CFF3 F0B1          	movff	prodl,___flmul@temp
  8597  001FC8  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8598  001FCC  0100               	movlb	0	; () banked
  8599  001FCE  51B1               	movf	___flmul@temp& (0+255),w,b
  8600  001FD0  0100               	movlb	0	; () banked
  8601  001FD2  27AD               	addwf	___flmul@prod& (0+255),f,b
  8602  001FD4  0100               	movlb	0	; () banked
  8603  001FD6  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8604  001FD8  0100               	movlb	0	; () banked
  8605  001FDA  23AE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8606  001FDC  0E00               	movlw	0
  8607  001FDE  0100               	movlb	0	; () banked
  8608  001FE0  23AF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8609  001FE2  0E00               	movlw	0
  8610  001FE4  0100               	movlb	0	; () banked
  8611  001FE6  23B0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8612                           
  8613                           ; BSR set to: 0
  8614  001FE8  0100               	movlb	0	; () banked
  8615  001FEA  519F               	movf	(___flmul@a+1)& (0+255),w,b
  8616  001FEC  0100               	movlb	0	; () banked
  8617  001FEE  039C               	mulwf	(___flmul@b+2)& (0+255),b
  8618  001FF0  CFF3 F0B1          	movff	prodl,___flmul@temp
  8619  001FF4  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8620                           
  8621                           ; BSR set to: 0
  8622  001FF8  0100               	movlb	0	; () banked
  8623  001FFA  51B1               	movf	___flmul@temp& (0+255),w,b
  8624  001FFC  0100               	movlb	0	; () banked
  8625  001FFE  27AD               	addwf	___flmul@prod& (0+255),f,b
  8626  002000  0100               	movlb	0	; () banked
  8627  002002  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8628  002004  0100               	movlb	0	; () banked
  8629  002006  23AE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8630  002008  0E00               	movlw	0
  8631  00200A  0100               	movlb	0	; () banked
  8632  00200C  23AF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8633  00200E  0E00               	movlw	0
  8634  002010  0100               	movlb	0	; () banked
  8635  002012  23B0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8636  002014  0100               	movlb	0	; () banked
  8637  002016  51A0               	movf	(___flmul@a+2)& (0+255),w,b
  8638  002018  0100               	movlb	0	; () banked
  8639  00201A  039C               	mulwf	(___flmul@b+2)& (0+255),b
  8640  00201C  CFF3 F0B1          	movff	prodl,___flmul@temp
  8641  002020  CFF4 F0B2          	movff	prodh,___flmul@temp+1
  8642                           
  8643                           ; BSR set to: 0
  8644  002024  0100               	movlb	0	; () banked
  8645  002026  51B1               	movf	___flmul@temp& (0+255),w,b
  8646  002028  0100               	movlb	0	; () banked
  8647  00202A  6FA2               	movwf	??___flmul& (0+255),b
  8648  00202C  0100               	movlb	0	; () banked
  8649  00202E  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8650  002030  0100               	movlb	0	; () banked
  8651  002032  6FA3               	movwf	(??___flmul+1)& (0+255),b
  8652  002034  0100               	movlb	0	; () banked
  8653  002036  6BA4               	clrf	(??___flmul+2)& (0+255),b
  8654  002038  0100               	movlb	0	; () banked
  8655  00203A  6BA5               	clrf	(??___flmul+3)& (0+255),b
  8656  00203C  C0A4  F0A5         	movff	??___flmul+2,??___flmul+3
  8657  002040  C0A3  F0A4         	movff	??___flmul+1,??___flmul+2
  8658  002044  C0A2  F0A3         	movff	??___flmul,??___flmul+1
  8659  002048  0100               	movlb	0	; () banked
  8660  00204A  6BA2               	clrf	??___flmul& (0+255),b
  8661  00204C  0100               	movlb	0	; () banked
  8662  00204E  51A2               	movf	??___flmul& (0+255),w,b
  8663  002050  0100               	movlb	0	; () banked
  8664  002052  27AD               	addwf	___flmul@prod& (0+255),f,b
  8665  002054  0100               	movlb	0	; () banked
  8666  002056  51A3               	movf	(??___flmul+1)& (0+255),w,b
  8667  002058  0100               	movlb	0	; () banked
  8668  00205A  23AE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8669  00205C  0100               	movlb	0	; () banked
  8670  00205E  51A4               	movf	(??___flmul+2)& (0+255),w,b
  8671  002060  0100               	movlb	0	; () banked
  8672  002062  23AF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8673  002064  0100               	movlb	0	; () banked
  8674  002066  51A5               	movf	(??___flmul+3)& (0+255),w,b
  8675  002068  0100               	movlb	0	; () banked
  8676  00206A  23B0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8677                           
  8678                           ; BSR set to: 0
  8679  00206C  C0A7  F0A2         	movff	___flmul@grs,??___flmul
  8680  002070  C0A8  F0A3         	movff	___flmul@grs+1,??___flmul+1
  8681  002074  C0A9  F0A4         	movff	___flmul@grs+2,??___flmul+2
  8682  002078  C0AA  F0A5         	movff	___flmul@grs+3,??___flmul+3
  8683  00207C  0E19               	movlw	25
  8684  00207E  D006               	goto	u5680
  8685  002080                     u5685:
  8686  002080  0100               	movlb	0	; () banked
  8687  002082  90D8               	bcf	status,0,c
  8688  002084  33A5               	rrcf	(??___flmul+3)& (0+255),f,b
  8689  002086  33A4               	rrcf	(??___flmul+2)& (0+255),f,b
  8690  002088  33A3               	rrcf	(??___flmul+1)& (0+255),f,b
  8691  00208A  33A2               	rrcf	??___flmul& (0+255),f,b
  8692  00208C                     u5680:
  8693  00208C  2EE8               	decfsz	wreg,f,c
  8694  00208E  D7F8               	goto	u5685
  8695  002090  0100               	movlb	0	; () banked
  8696  002092  51A2               	movf	??___flmul& (0+255),w,b
  8697  002094  0100               	movlb	0	; () banked
  8698  002096  27AD               	addwf	___flmul@prod& (0+255),f,b
  8699  002098  0100               	movlb	0	; () banked
  8700  00209A  51A3               	movf	(??___flmul+1)& (0+255),w,b
  8701  00209C  0100               	movlb	0	; () banked
  8702  00209E  23AE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8703  0020A0  0100               	movlb	0	; () banked
  8704  0020A2  51A4               	movf	(??___flmul+2)& (0+255),w,b
  8705  0020A4  0100               	movlb	0	; () banked
  8706  0020A6  23AF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8707  0020A8  0100               	movlb	0	; () banked
  8708  0020AA  51A5               	movf	(??___flmul+3)& (0+255),w,b
  8709  0020AC  0100               	movlb	0	; () banked
  8710  0020AE  23B0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8711                           
  8712                           ; BSR set to: 0
  8713  0020B0  C0A9  F0AA         	movff	___flmul@grs+2,___flmul@grs+3
  8714  0020B4  C0A8  F0A9         	movff	___flmul@grs+1,___flmul@grs+2
  8715  0020B8  C0A7  F0A8         	movff	___flmul@grs,___flmul@grs+1
  8716  0020BC  0100               	movlb	0	; () banked
  8717  0020BE  6BA7               	clrf	___flmul@grs& (0+255),b
  8718                           
  8719                           ; BSR set to: 0
  8720  0020C0  0100               	movlb	0	; () banked
  8721  0020C2  51AB               	movf	___flmul@aexp& (0+255),w,b
  8722  0020C4  C0AC  F0A2         	movff	___flmul@bexp,??___flmul
  8723  0020C8  0100               	movlb	0	; () banked
  8724  0020CA  6BA3               	clrf	(??___flmul+1)& (0+255),b
  8725  0020CC  0100               	movlb	0	; () banked
  8726  0020CE  27A2               	addwf	??___flmul& (0+255),f,b
  8727  0020D0  0E00               	movlw	0
  8728  0020D2  23A3               	addwfc	(??___flmul+1)& (0+255),f,b
  8729  0020D4  0E82               	movlw	130
  8730  0020D6  0100               	movlb	0	; () banked
  8731  0020D8  25A2               	addwf	??___flmul& (0+255),w,b
  8732  0020DA  0100               	movlb	0	; () banked
  8733  0020DC  6FB1               	movwf	___flmul@temp& (0+255),b
  8734  0020DE  0EFF               	movlw	255
  8735  0020E0  0100               	movlb	0	; () banked
  8736  0020E2  21A3               	addwfc	(??___flmul+1)& (0+255),w,b
  8737  0020E4  0100               	movlb	0	; () banked
  8738  0020E6  6FB2               	movwf	(___flmul@temp+1)& (0+255),b
  8739  0020E8  D015               	goto	l4588
  8740  0020EA                     l4582:
  8741                           
  8742                           ; BSR set to: 0
  8743  0020EA  0100               	movlb	0	; () banked
  8744  0020EC  90D8               	bcf	status,0,c
  8745  0020EE  37AD               	rlcf	___flmul@prod& (0+255),f,b
  8746  0020F0  37AE               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8747  0020F2  37AF               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8748  0020F4  37B0               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8749                           
  8750                           ; BSR set to: 0
  8751  0020F6  0100               	movlb	0	; () banked
  8752  0020F8  AFAA               	btfss	(___flmul@grs+3)& (0+255),7,b
  8753  0020FA  D002               	goto	l1259
  8754                           
  8755                           ; BSR set to: 0
  8756  0020FC  0100               	movlb	0	; () banked
  8757  0020FE  81AD               	bsf	___flmul@prod& (0+255),0,b
  8758  002100                     l1259:
  8759                           
  8760                           ; BSR set to: 0
  8761  002100  0100               	movlb	0	; () banked
  8762  002102  90D8               	bcf	status,0,c
  8763  002104  37A7               	rlcf	___flmul@grs& (0+255),f,b
  8764  002106  37A8               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8765  002108  37A9               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8766  00210A  37AA               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8767  00210C  0100               	movlb	0	; () banked
  8768  00210E  07B1               	decf	___flmul@temp& (0+255),f,b
  8769  002110  A0D8               	btfss	status,0,c
  8770  002112  07B2               	decf	(___flmul@temp+1)& (0+255),f,b
  8771  002114                     l4588:
  8772                           
  8773                           ; BSR set to: 0
  8774  002114  0100               	movlb	0	; () banked
  8775  002116  AFAF               	btfss	(___flmul@prod+2)& (0+255),7,b
  8776  002118  D7E8               	goto	l4582
  8777                           
  8778                           ; BSR set to: 0
  8779                           
  8780                           ; BSR set to: 0
  8781  00211A  0E00               	movlw	0
  8782  00211C  0100               	movlb	0	; () banked
  8783  00211E  6FAB               	movwf	___flmul@aexp& (0+255),b
  8784                           
  8785                           ; BSR set to: 0
  8786  002120  0100               	movlb	0	; () banked
  8787  002122  AFAA               	btfss	(___flmul@grs+3)& (0+255),7,b
  8788  002124  D024               	goto	l1261
  8789                           
  8790                           ; BSR set to: 0
  8791  002126  0EFF               	movlw	255
  8792  002128  0100               	movlb	0	; () banked
  8793  00212A  15A7               	andwf	___flmul@grs& (0+255),w,b
  8794  00212C  0100               	movlb	0	; () banked
  8795  00212E  6FA2               	movwf	??___flmul& (0+255),b
  8796  002130  0EFF               	movlw	255
  8797  002132  0100               	movlb	0	; () banked
  8798  002134  15A8               	andwf	(___flmul@grs+1)& (0+255),w,b
  8799  002136  0100               	movlb	0	; () banked
  8800  002138  6FA3               	movwf	(??___flmul+1)& (0+255),b
  8801  00213A  0EFF               	movlw	255
  8802  00213C  0100               	movlb	0	; () banked
  8803  00213E  15A9               	andwf	(___flmul@grs+2)& (0+255),w,b
  8804  002140  0100               	movlb	0	; () banked
  8805  002142  6FA4               	movwf	(??___flmul+2)& (0+255),b
  8806  002144  0E7F               	movlw	127
  8807  002146  0100               	movlb	0	; () banked
  8808  002148  15AA               	andwf	(___flmul@grs+3)& (0+255),w,b
  8809  00214A  0100               	movlb	0	; () banked
  8810  00214C  6FA5               	movwf	(??___flmul+3)& (0+255),b
  8811  00214E  0100               	movlb	0	; () banked
  8812  002150  51A2               	movf	??___flmul& (0+255),w,b
  8813  002152  0100               	movlb	0	; () banked
  8814  002154  11A3               	iorwf	(??___flmul+1)& (0+255),w,b
  8815  002156  0100               	movlb	0	; () banked
  8816  002158  11A4               	iorwf	(??___flmul+2)& (0+255),w,b
  8817  00215A  0100               	movlb	0	; () banked
  8818  00215C  11A5               	iorwf	(??___flmul+3)& (0+255),w,b
  8819  00215E  A4D8               	btfss	status,2,c
  8820  002160  D003               	goto	l4598
  8821                           
  8822                           ; BSR set to: 0
  8823                           
  8824                           ; BSR set to: 0
  8825  002162  0100               	movlb	0	; () banked
  8826  002164  A1AD               	btfss	___flmul@prod& (0+255),0,b
  8827  002166  D003               	goto	l1261
  8828  002168                     l4598:
  8829                           
  8830                           ; BSR set to: 0
  8831  002168  0E01               	movlw	1
  8832  00216A  0100               	movlb	0	; () banked
  8833  00216C  6FAB               	movwf	___flmul@aexp& (0+255),b
  8834  00216E                     l1261:
  8835                           
  8836                           ; BSR set to: 0
  8837  00216E  0100               	movlb	0	; () banked
  8838  002170  51AB               	movf	___flmul@aexp& (0+255),w,b
  8839  002172  0100               	movlb	0	; () banked
  8840  002174  B4D8               	btfsc	status,2,c
  8841  002176  D023               	goto	l4608
  8842                           
  8843                           ; BSR set to: 0
  8844  002178  0E01               	movlw	1
  8845  00217A  0100               	movlb	0	; () banked
  8846  00217C  27AD               	addwf	___flmul@prod& (0+255),f,b
  8847  00217E  0E00               	movlw	0
  8848  002180  23AE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8849  002182  23AF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8850  002184  23B0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8851                           
  8852                           ; BSR set to: 0
  8853  002186  0100               	movlb	0	; () banked
  8854  002188  A1B0               	btfss	(___flmul@prod+3)& (0+255),0,b
  8855  00218A  D019               	goto	l4608
  8856                           
  8857                           ; BSR set to: 0
  8858  00218C  C0AD  F0A2         	movff	___flmul@prod,??___flmul
  8859  002190  C0AE  F0A3         	movff	___flmul@prod+1,??___flmul+1
  8860  002194  C0AF  F0A4         	movff	___flmul@prod+2,??___flmul+2
  8861  002198  C0B0  F0A5         	movff	___flmul@prod+3,??___flmul+3
  8862  00219C  0100               	movlb	0	; () banked
  8863  00219E  35A5               	rlcf	(??___flmul+3)& (0+255),w,b
  8864  0021A0  33A5               	rrcf	(??___flmul+3)& (0+255),f,b
  8865  0021A2  33A4               	rrcf	(??___flmul+2)& (0+255),f,b
  8866  0021A4  33A3               	rrcf	(??___flmul+1)& (0+255),f,b
  8867  0021A6  33A2               	rrcf	??___flmul& (0+255),f,b
  8868  0021A8  C0A2  F0AD         	movff	??___flmul,___flmul@prod
  8869  0021AC  C0A3  F0AE         	movff	??___flmul+1,___flmul@prod+1
  8870  0021B0  C0A4  F0AF         	movff	??___flmul+2,___flmul@prod+2
  8871  0021B4  C0A5  F0B0         	movff	??___flmul+3,___flmul@prod+3
  8872                           
  8873                           ; BSR set to: 0
  8874  0021B8  0100               	movlb	0	; () banked
  8875  0021BA  4BB1               	infsnz	___flmul@temp& (0+255),f,b
  8876  0021BC  2BB2               	incf	(___flmul@temp+1)& (0+255),f,b
  8877  0021BE                     l4608:
  8878                           
  8879                           ; BSR set to: 0
  8880  0021BE  0100               	movlb	0	; () banked
  8881  0021C0  BFB2               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8882  0021C2  D010               	goto	l4612
  8883  0021C4  0100               	movlb	0	; () banked
  8884  0021C6  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8885  0021C8  E104               	bnz	u5760
  8886  0021CA  0100               	movlb	0	; () banked
  8887  0021CC  29B1               	incf	___flmul@temp& (0+255),w,b
  8888  0021CE  A0D8               	btfss	status,0,c
  8889  0021D0  D009               	goto	l4612
  8890  0021D2                     u5760:
  8891                           
  8892                           ; BSR set to: 0
  8893  0021D2  0E00               	movlw	0
  8894  0021D4  0100               	movlb	0	; () banked
  8895  0021D6  6FAD               	movwf	___flmul@prod& (0+255),b
  8896  0021D8  0E00               	movlw	0
  8897  0021DA  6FAE               	movwf	(___flmul@prod+1)& (0+255),b
  8898  0021DC  0E80               	movlw	128
  8899  0021DE  6FAF               	movwf	(___flmul@prod+2)& (0+255),b
  8900  0021E0  0E7F               	movlw	127
  8901  0021E2  D02B               	goto	L1
  8902  0021E4                     l4612:
  8903                           
  8904                           ; BSR set to: 0
  8905  0021E4  0100               	movlb	0	; () banked
  8906  0021E6  BFB2               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8907  0021E8  D007               	goto	l4614
  8908  0021EA  0100               	movlb	0	; () banked
  8909  0021EC  51B2               	movf	(___flmul@temp+1)& (0+255),w,b
  8910  0021EE  E111               	bnz	l1269
  8911  0021F0  0100               	movlb	0	; () banked
  8912  0021F2  05B1               	decf	___flmul@temp& (0+255),w,b
  8913  0021F4  B0D8               	btfsc	status,0,c
  8914  0021F6  D00D               	goto	l1269
  8915  0021F8                     l4614:
  8916                           
  8917                           ; BSR set to: 0
  8918  0021F8  0E00               	movlw	0
  8919  0021FA  0100               	movlb	0	; () banked
  8920  0021FC  6FAD               	movwf	___flmul@prod& (0+255),b
  8921  0021FE  0E00               	movlw	0
  8922  002200  6FAE               	movwf	(___flmul@prod+1)& (0+255),b
  8923  002202  0E00               	movlw	0
  8924  002204  6FAF               	movwf	(___flmul@prod+2)& (0+255),b
  8925  002206  0E00               	movlw	0
  8926  002208  6FB0               	movwf	(___flmul@prod+3)& (0+255),b
  8927  00220A  0E00               	movlw	0
  8928  00220C  0100               	movlb	0	; () banked
  8929  00220E  6FA6               	movwf	___flmul@sign& (0+255),b
  8930  002210  D015               	goto	l4624
  8931  002212                     l1269:
  8932                           
  8933                           ; BSR set to: 0
  8934  002212  C0B1  F0AC         	movff	___flmul@temp,___flmul@bexp
  8935                           
  8936                           ; BSR set to: 0
  8937  002216  0EFF               	movlw	255
  8938  002218  0100               	movlb	0	; () banked
  8939  00221A  17AD               	andwf	___flmul@prod& (0+255),f,b
  8940  00221C  0EFF               	movlw	255
  8941  00221E  17AE               	andwf	(___flmul@prod+1)& (0+255),f,b
  8942  002220  0E7F               	movlw	127
  8943  002222  17AF               	andwf	(___flmul@prod+2)& (0+255),f,b
  8944  002224  0E00               	movlw	0
  8945  002226  17B0               	andwf	(___flmul@prod+3)& (0+255),f,b
  8946                           
  8947                           ; BSR set to: 0
  8948  002228  0100               	movlb	0	; () banked
  8949  00222A  A1AC               	btfss	___flmul@bexp& (0+255),0,b
  8950  00222C  D002               	goto	l4622
  8951                           
  8952                           ; BSR set to: 0
  8953  00222E  0100               	movlb	0	; () banked
  8954  002230  8FAF               	bsf	(___flmul@prod+2)& (0+255),7,b
  8955  002232                     l4622:
  8956                           
  8957                           ; BSR set to: 0
  8958  002232  0100               	movlb	0	; () banked
  8959  002234  90D8               	bcf	status,0,c
  8960  002236  31AC               	rrcf	___flmul@bexp& (0+255),w,b
  8961  002238  0100               	movlb	0	; () banked
  8962  00223A                     L1:
  8963  00223A  6FB0               	movwf	(___flmul@prod+3)& (0+255),b
  8964  00223C                     l4624:
  8965                           
  8966                           ; BSR set to: 0
  8967  00223C  0100               	movlb	0	; () banked
  8968  00223E  51A6               	movf	___flmul@sign& (0+255),w,b
  8969  002240  0100               	movlb	0	; () banked
  8970  002242  13B0               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8971                           
  8972                           ; BSR set to: 0
  8973  002244  C0AD  F09A         	movff	___flmul@prod,?___flmul
  8974  002248  C0AE  F09B         	movff	___flmul@prod+1,?___flmul+1
  8975  00224C  C0AF  F09C         	movff	___flmul@prod+2,?___flmul+2
  8976  002250  C0B0  F09D         	movff	___flmul@prod+3,?___flmul+3
  8977  002254  0012               	return	
  8978  002256                     __end_of___flmul:
  8979                           	opt stack 0
  8980                           tblptru	equ	0xFF8
  8981                           tblptrh	equ	0xFF7
  8982                           tblptrl	equ	0xFF6
  8983                           tablat	equ	0xFF5
  8984                           prodh	equ	0xFF4
  8985                           prodl	equ	0xFF3
  8986                           intcon	equ	0xFF2
  8987                           intcon2	equ	0xFF1
  8988                           postinc0	equ	0xFEE
  8989                           wreg	equ	0xFE8
  8990                           postdec1	equ	0xFE5
  8991                           fsr1l	equ	0xFE1
  8992                           indf2	equ	0xFDF
  8993                           fsr2h	equ	0xFDA
  8994                           fsr2l	equ	0xFD9
  8995                           status	equ	0xFD8
  8996                           
  8997 ;; *************** function ___fldiv *****************
  8998 ;; Defined at:
  8999 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;  b               4   58[BANK0 ] unsigned char 
  9002 ;;  a               4   62[BANK0 ] unsigned char 
  9003 ;; Auto vars:     Size  Location     Type
  9004 ;;  grs             4   77[BANK0 ] unsigned long 
  9005 ;;  rem             4   71[BANK0 ] unsigned long 
  9006 ;;  new_exp         2   75[BANK0 ] int 
  9007 ;;  aexp            1   82[BANK0 ] unsigned char 
  9008 ;;  bexp            1   81[BANK0 ] unsigned char 
  9009 ;;  sign            1   70[BANK0 ] unsigned char 
  9010 ;; Return value:  Size  Location     Type
  9011 ;;                  4   58[BANK0 ] unsigned char 
  9012 ;; Registers used:
  9013 ;;		wreg, status,2, status,0
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9019 ;;      Params:         0       8       0       0
  9020 ;;      Locals:         0      13       0       0
  9021 ;;      Temps:          0       4       0       0
  9022 ;;      Totals:         0      25       0       0
  9023 ;;Total ram usage:       25 bytes
  9024 ;; Hardware stack levels used:    1
  9025 ;; Hardware stack levels required when called:    4
  9026 ;; This function calls:
  9027 ;;		Nothing
  9028 ;; This function is called by:
  9029 ;;		_main
  9030 ;; This function uses a non-reentrant model
  9031 ;;
  9032                           
  9033                           	psect	text24
  9034  0026E2                     __ptext24:
  9035                           	opt stack 0
  9036  0026E2                     ___fldiv:
  9037                           	opt stack 26
  9038                           
  9039                           ; BSR set to: 0
  9040                           ;incstack = 0
  9041  0026E2  0100               	movlb	0	; () banked
  9042  0026E4  519D               	movf	(___fldiv@b+3)& (0+255),w,b
  9043  0026E6  0B80               	andlw	128
  9044  0026E8  0100               	movlb	0	; () banked
  9045  0026EA  6FA6               	movwf	___fldiv@sign& (0+255),b
  9046  0026EC  0100               	movlb	0	; () banked
  9047  0026EE  519D               	movf	(___fldiv@b+3)& (0+255),w,b
  9048  0026F0  259D               	addwf	(___fldiv@b+3)& (0+255),w,b
  9049  0026F2  0100               	movlb	0	; () banked
  9050  0026F4  6FB1               	movwf	___fldiv@bexp& (0+255),b
  9051                           
  9052                           ; BSR set to: 0
  9053  0026F6  0100               	movlb	0	; () banked
  9054  0026F8  AF9C               	btfss	(___fldiv@b+2)& (0+255),7,b
  9055  0026FA  D002               	goto	l4370
  9056                           
  9057                           ; BSR set to: 0
  9058  0026FC  0100               	movlb	0	; () banked
  9059  0026FE  81B1               	bsf	___fldiv@bexp& (0+255),0,b
  9060  002700                     l4370:
  9061                           
  9062                           ; BSR set to: 0
  9063  002700  0100               	movlb	0	; () banked
  9064  002702  51B1               	movf	___fldiv@bexp& (0+255),w,b
  9065  002704  0100               	movlb	0	; () banked
  9066  002706  B4D8               	btfsc	status,2,c
  9067  002708  D012               	goto	l4380
  9068                           
  9069                           ; BSR set to: 0
  9070  00270A  0100               	movlb	0	; () banked
  9071  00270C  29B1               	incf	___fldiv@bexp& (0+255),w,b
  9072  00270E  A4D8               	btfss	status,2,c
  9073  002710  D009               	goto	l4376
  9074                           
  9075                           ; BSR set to: 0
  9076  002712  0E00               	movlw	0
  9077  002714  0100               	movlb	0	; () banked
  9078  002716  6F9A               	movwf	___fldiv@b& (0+255),b
  9079  002718  0E00               	movlw	0
  9080  00271A  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
  9081  00271C  0E00               	movlw	0
  9082  00271E  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
  9083  002720  0E00               	movlw	0
  9084  002722  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9085  002724                     l4376:
  9086                           
  9087                           ; BSR set to: 0
  9088  002724  0100               	movlb	0	; () banked
  9089  002726  8F9C               	bsf	(___fldiv@b+2)& (0+255),7,b
  9090                           
  9091                           ; BSR set to: 0
  9092  002728  0E00               	movlw	0
  9093  00272A  0100               	movlb	0	; () banked
  9094  00272C  D008               	goto	L2
  9095  00272E                     l4380:
  9096                           
  9097                           ; BSR set to: 0
  9098  00272E  0E00               	movlw	0
  9099  002730  0100               	movlb	0	; () banked
  9100  002732  6F9A               	movwf	___fldiv@b& (0+255),b
  9101  002734  0E00               	movlw	0
  9102  002736  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
  9103  002738  0E00               	movlw	0
  9104  00273A  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
  9105  00273C  0E00               	movlw	0
  9106  00273E                     L2:
  9107  00273E  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9108                           
  9109                           ; BSR set to: 0
  9110                           
  9111                           ; BSR set to: 0
  9112  002740  0100               	movlb	0	; () banked
  9113  002742  51A1               	movf	(___fldiv@a+3)& (0+255),w,b
  9114  002744  0B80               	andlw	128
  9115  002746  0100               	movlb	0	; () banked
  9116  002748  1BA6               	xorwf	___fldiv@sign& (0+255),f,b
  9117                           
  9118                           ; BSR set to: 0
  9119  00274A  0100               	movlb	0	; () banked
  9120  00274C  51A1               	movf	(___fldiv@a+3)& (0+255),w,b
  9121  00274E  25A1               	addwf	(___fldiv@a+3)& (0+255),w,b
  9122  002750  0100               	movlb	0	; () banked
  9123  002752  6FB2               	movwf	___fldiv@aexp& (0+255),b
  9124                           
  9125                           ; BSR set to: 0
  9126  002754  0100               	movlb	0	; () banked
  9127  002756  AFA0               	btfss	(___fldiv@a+2)& (0+255),7,b
  9128  002758  D002               	goto	l4390
  9129                           
  9130                           ; BSR set to: 0
  9131  00275A  0100               	movlb	0	; () banked
  9132  00275C  81B2               	bsf	___fldiv@aexp& (0+255),0,b
  9133  00275E                     l4390:
  9134                           
  9135                           ; BSR set to: 0
  9136  00275E  0100               	movlb	0	; () banked
  9137  002760  51B2               	movf	___fldiv@aexp& (0+255),w,b
  9138  002762  0100               	movlb	0	; () banked
  9139  002764  B4D8               	btfsc	status,2,c
  9140  002766  D012               	goto	l4400
  9141                           
  9142                           ; BSR set to: 0
  9143  002768  0100               	movlb	0	; () banked
  9144  00276A  29B2               	incf	___fldiv@aexp& (0+255),w,b
  9145  00276C  A4D8               	btfss	status,2,c
  9146  00276E  D009               	goto	l4396
  9147                           
  9148                           ; BSR set to: 0
  9149  002770  0E00               	movlw	0
  9150  002772  0100               	movlb	0	; () banked
  9151  002774  6F9E               	movwf	___fldiv@a& (0+255),b
  9152  002776  0E00               	movlw	0
  9153  002778  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
  9154  00277A  0E00               	movlw	0
  9155  00277C  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
  9156  00277E  0E00               	movlw	0
  9157  002780  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
  9158  002782                     l4396:
  9159                           
  9160                           ; BSR set to: 0
  9161  002782  0100               	movlb	0	; () banked
  9162  002784  8FA0               	bsf	(___fldiv@a+2)& (0+255),7,b
  9163                           
  9164                           ; BSR set to: 0
  9165  002786  0E00               	movlw	0
  9166  002788  0100               	movlb	0	; () banked
  9167  00278A  D008               	goto	L3
  9168  00278C                     l4400:
  9169                           
  9170                           ; BSR set to: 0
  9171  00278C  0E00               	movlw	0
  9172  00278E  0100               	movlb	0	; () banked
  9173  002790  6F9E               	movwf	___fldiv@a& (0+255),b
  9174  002792  0E00               	movlw	0
  9175  002794  6F9F               	movwf	(___fldiv@a+1)& (0+255),b
  9176  002796  0E00               	movlw	0
  9177  002798  6FA0               	movwf	(___fldiv@a+2)& (0+255),b
  9178  00279A  0E00               	movlw	0
  9179  00279C                     L3:
  9180  00279C  6FA1               	movwf	(___fldiv@a+3)& (0+255),b
  9181                           
  9182                           ; BSR set to: 0
  9183                           
  9184                           ; BSR set to: 0
  9185  00279E  0100               	movlb	0	; () banked
  9186  0027A0  519E               	movf	___fldiv@a& (0+255),w,b
  9187  0027A2  0100               	movlb	0	; () banked
  9188  0027A4  119F               	iorwf	(___fldiv@a+1)& (0+255),w,b
  9189  0027A6  0100               	movlb	0	; () banked
  9190  0027A8  11A0               	iorwf	(___fldiv@a+2)& (0+255),w,b
  9191  0027AA  0100               	movlb	0	; () banked
  9192  0027AC  11A1               	iorwf	(___fldiv@a+3)& (0+255),w,b
  9193  0027AE  A4D8               	btfss	status,2,c
  9194  0027B0  D017               	goto	l4412
  9195                           
  9196                           ; BSR set to: 0
  9197  0027B2  0E00               	movlw	0
  9198  0027B4  0100               	movlb	0	; () banked
  9199  0027B6  6F9A               	movwf	___fldiv@b& (0+255),b
  9200  0027B8  0E00               	movlw	0
  9201  0027BA  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
  9202  0027BC  0E00               	movlw	0
  9203  0027BE  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
  9204  0027C0  0E00               	movlw	0
  9205  0027C2  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9206                           
  9207                           ; BSR set to: 0
  9208  0027C4  0100               	movlb	0	; () banked
  9209  0027C6  0E80               	movlw	128
  9210  0027C8  139C               	iorwf	(___fldiv@b+2)& (0+255),f,b
  9211  0027CA  0E7F               	movlw	127
  9212  0027CC  139D               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9213                           
  9214                           ; BSR set to: 0
  9215  0027CE  C09A  F09A         	movff	___fldiv@b,?___fldiv
  9216  0027D2  C09B  F09B         	movff	___fldiv@b+1,?___fldiv+1
  9217  0027D6  C09C  F09C         	movff	___fldiv@b+2,?___fldiv+2
  9218  0027DA  C09D  F09D         	movff	___fldiv@b+3,?___fldiv+3
  9219                           
  9220                           ; BSR set to: 0
  9221  0027DE  0012               	return	
  9222  0027E0                     l4412:
  9223                           
  9224                           ; BSR set to: 0
  9225  0027E0  0100               	movlb	0	; () banked
  9226  0027E2  51B1               	movf	___fldiv@bexp& (0+255),w,b
  9227  0027E4  0100               	movlb	0	; () banked
  9228  0027E6  A4D8               	btfss	status,2,c
  9229  0027E8  D012               	goto	l4420
  9230                           
  9231                           ; BSR set to: 0
  9232  0027EA  0E00               	movlw	0
  9233  0027EC  0100               	movlb	0	; () banked
  9234  0027EE  6F9A               	movwf	___fldiv@b& (0+255),b
  9235  0027F0  0E00               	movlw	0
  9236  0027F2  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
  9237  0027F4  0E00               	movlw	0
  9238  0027F6  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
  9239  0027F8  0E00               	movlw	0
  9240  0027FA  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9241                           
  9242                           ; BSR set to: 0
  9243  0027FC  C09A  F09A         	movff	___fldiv@b,?___fldiv
  9244  002800  C09B  F09B         	movff	___fldiv@b+1,?___fldiv+1
  9245  002804  C09C  F09C         	movff	___fldiv@b+2,?___fldiv+2
  9246  002808  C09D  F09D         	movff	___fldiv@b+3,?___fldiv+3
  9247                           
  9248                           ; BSR set to: 0
  9249  00280C  0012               	return	
  9250  00280E                     l4420:
  9251                           
  9252                           ; BSR set to: 0
  9253  00280E  0100               	movlb	0	; () banked
  9254  002810  51B2               	movf	___fldiv@aexp& (0+255),w,b
  9255  002812  0100               	movlb	0	; () banked
  9256  002814  6FA2               	movwf	??___fldiv& (0+255),b
  9257  002816  6BA3               	clrf	(??___fldiv+1)& (0+255),b
  9258  002818  0100               	movlb	0	; () banked
  9259  00281A  1FA2               	comf	??___fldiv& (0+255),f,b
  9260  00281C  1FA3               	comf	(??___fldiv+1)& (0+255),f,b
  9261  00281E  4BA2               	infsnz	??___fldiv& (0+255),f,b
  9262  002820  2BA3               	incf	(??___fldiv+1)& (0+255),f,b
  9263  002822  0100               	movlb	0	; () banked
  9264  002824  51B1               	movf	___fldiv@bexp& (0+255),w,b
  9265  002826  0100               	movlb	0	; () banked
  9266  002828  6FA4               	movwf	(??___fldiv+2)& (0+255),b
  9267  00282A  6BA5               	clrf	(??___fldiv+3)& (0+255),b
  9268  00282C  0100               	movlb	0	; () banked
  9269  00282E  51A2               	movf	??___fldiv& (0+255),w,b
  9270  002830  0100               	movlb	0	; () banked
  9271  002832  27A4               	addwf	(??___fldiv+2)& (0+255),f,b
  9272  002834  0100               	movlb	0	; () banked
  9273  002836  51A3               	movf	(??___fldiv+1)& (0+255),w,b
  9274  002838  0100               	movlb	0	; () banked
  9275  00283A  23A5               	addwfc	(??___fldiv+3)& (0+255),f,b
  9276  00283C  0E7F               	movlw	127
  9277  00283E  0100               	movlb	0	; () banked
  9278  002840  25A4               	addwf	(??___fldiv+2)& (0+255),w,b
  9279  002842  0100               	movlb	0	; () banked
  9280  002844  6FAB               	movwf	___fldiv@new_exp& (0+255),b
  9281  002846  0E00               	movlw	0
  9282  002848  0100               	movlb	0	; () banked
  9283  00284A  21A5               	addwfc	(??___fldiv+3)& (0+255),w,b
  9284  00284C  0100               	movlb	0	; () banked
  9285  00284E  6FAC               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9286                           
  9287                           ; BSR set to: 0
  9288  002850  C09A  F0A7         	movff	___fldiv@b,___fldiv@rem
  9289  002854  C09B  F0A8         	movff	___fldiv@b+1,___fldiv@rem+1
  9290  002858  C09C  F0A9         	movff	___fldiv@b+2,___fldiv@rem+2
  9291  00285C  C09D  F0AA         	movff	___fldiv@b+3,___fldiv@rem+3
  9292                           
  9293                           ; BSR set to: 0
  9294  002860  0E00               	movlw	0
  9295  002862  0100               	movlb	0	; () banked
  9296  002864  6F9A               	movwf	___fldiv@b& (0+255),b
  9297  002866  0E00               	movlw	0
  9298  002868  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
  9299  00286A  0E00               	movlw	0
  9300  00286C  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
  9301  00286E  0E00               	movlw	0
  9302  002870  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9303                           
  9304                           ; BSR set to: 0
  9305  002872  0E00               	movlw	0
  9306  002874  0100               	movlb	0	; () banked
  9307  002876  6FAD               	movwf	___fldiv@grs& (0+255),b
  9308  002878  0E00               	movlw	0
  9309  00287A  6FAE               	movwf	(___fldiv@grs+1)& (0+255),b
  9310  00287C  0E00               	movlw	0
  9311  00287E  6FAF               	movwf	(___fldiv@grs+2)& (0+255),b
  9312  002880  0E00               	movlw	0
  9313  002882  6FB0               	movwf	(___fldiv@grs+3)& (0+255),b
  9314                           
  9315                           ; BSR set to: 0
  9316  002884  0E00               	movlw	0
  9317  002886  0100               	movlb	0	; () banked
  9318  002888  6FB2               	movwf	___fldiv@aexp& (0+255),b
  9319  00288A  D042               	goto	l1222
  9320  00288C                     l4430:
  9321                           
  9322                           ; BSR set to: 0
  9323  00288C  0100               	movlb	0	; () banked
  9324  00288E  51B2               	movf	___fldiv@aexp& (0+255),w,b
  9325  002890  0100               	movlb	0	; () banked
  9326  002892  B4D8               	btfsc	status,2,c
  9327  002894  D017               	goto	l4438
  9328                           
  9329                           ; BSR set to: 0
  9330  002896  0100               	movlb	0	; () banked
  9331  002898  90D8               	bcf	status,0,c
  9332  00289A  37A7               	rlcf	___fldiv@rem& (0+255),f,b
  9333  00289C  37A8               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9334  00289E  37A9               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9335  0028A0  37AA               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9336  0028A2  0100               	movlb	0	; () banked
  9337  0028A4  90D8               	bcf	status,0,c
  9338  0028A6  379A               	rlcf	___fldiv@b& (0+255),f,b
  9339  0028A8  379B               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9340  0028AA  379C               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9341  0028AC  379D               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9342                           
  9343                           ; BSR set to: 0
  9344  0028AE  0100               	movlb	0	; () banked
  9345  0028B0  AFB0               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9346  0028B2  D002               	goto	l1225
  9347                           
  9348                           ; BSR set to: 0
  9349  0028B4  0100               	movlb	0	; () banked
  9350  0028B6  819A               	bsf	___fldiv@b& (0+255),0,b
  9351  0028B8                     l1225:
  9352                           
  9353                           ; BSR set to: 0
  9354  0028B8  0100               	movlb	0	; () banked
  9355  0028BA  90D8               	bcf	status,0,c
  9356  0028BC  37AD               	rlcf	___fldiv@grs& (0+255),f,b
  9357  0028BE  37AE               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9358  0028C0  37AF               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9359  0028C2  37B0               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9360  0028C4                     l4438:
  9361                           
  9362                           ; BSR set to: 0
  9363  0028C4  0100               	movlb	0	; () banked
  9364  0028C6  519E               	movf	___fldiv@a& (0+255),w,b
  9365  0028C8  0100               	movlb	0	; () banked
  9366  0028CA  5DA7               	subwf	___fldiv@rem& (0+255),w,b
  9367  0028CC  0100               	movlb	0	; () banked
  9368  0028CE  519F               	movf	(___fldiv@a+1)& (0+255),w,b
  9369  0028D0  0100               	movlb	0	; () banked
  9370  0028D2  59A8               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9371  0028D4  0100               	movlb	0	; () banked
  9372  0028D6  51A0               	movf	(___fldiv@a+2)& (0+255),w,b
  9373  0028D8  0100               	movlb	0	; () banked
  9374  0028DA  59A9               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9375  0028DC  0100               	movlb	0	; () banked
  9376  0028DE  51A1               	movf	(___fldiv@a+3)& (0+255),w,b
  9377  0028E0  0100               	movlb	0	; () banked
  9378  0028E2  59AA               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9379  0028E4  A0D8               	btfss	status,0,c
  9380  0028E6  D012               	goto	l4444
  9381                           
  9382                           ; BSR set to: 0
  9383  0028E8  0100               	movlb	0	; () banked
  9384  0028EA  8DB0               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9385                           
  9386                           ; BSR set to: 0
  9387  0028EC  0100               	movlb	0	; () banked
  9388  0028EE  519E               	movf	___fldiv@a& (0+255),w,b
  9389  0028F0  0100               	movlb	0	; () banked
  9390  0028F2  5FA7               	subwf	___fldiv@rem& (0+255),f,b
  9391  0028F4  0100               	movlb	0	; () banked
  9392  0028F6  519F               	movf	(___fldiv@a+1)& (0+255),w,b
  9393  0028F8  0100               	movlb	0	; () banked
  9394  0028FA  5BA8               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9395  0028FC  0100               	movlb	0	; () banked
  9396  0028FE  51A0               	movf	(___fldiv@a+2)& (0+255),w,b
  9397  002900  0100               	movlb	0	; () banked
  9398  002902  5BA9               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9399  002904  0100               	movlb	0	; () banked
  9400  002906  51A1               	movf	(___fldiv@a+3)& (0+255),w,b
  9401  002908  0100               	movlb	0	; () banked
  9402  00290A  5BAA               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9403  00290C                     l4444:
  9404                           
  9405                           ; BSR set to: 0
  9406  00290C  0100               	movlb	0	; () banked
  9407  00290E  2BB2               	incf	___fldiv@aexp& (0+255),f,b
  9408  002910                     l1222:
  9409                           
  9410                           ; BSR set to: 0
  9411  002910  0E19               	movlw	25
  9412  002912  0100               	movlb	0	; () banked
  9413  002914  65B2               	cpfsgt	___fldiv@aexp& (0+255),b
  9414  002916  D7BA               	goto	l4430
  9415                           
  9416                           ; BSR set to: 0
  9417                           
  9418                           ; BSR set to: 0
  9419  002918  0100               	movlb	0	; () banked
  9420  00291A  51A7               	movf	___fldiv@rem& (0+255),w,b
  9421  00291C  0100               	movlb	0	; () banked
  9422  00291E  11A8               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9423  002920  0100               	movlb	0	; () banked
  9424  002922  11A9               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9425  002924  0100               	movlb	0	; () banked
  9426  002926  11AA               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9427  002928  B4D8               	btfsc	status,2,c
  9428  00292A  D018               	goto	l4456
  9429                           
  9430                           ; BSR set to: 0
  9431  00292C  0100               	movlb	0	; () banked
  9432  00292E  81AD               	bsf	___fldiv@grs& (0+255),0,b
  9433                           
  9434                           ; BSR set to: 0
  9435  002930  D015               	goto	l4456
  9436  002932                     l4450:
  9437                           
  9438                           ; BSR set to: 0
  9439  002932  0100               	movlb	0	; () banked
  9440  002934  90D8               	bcf	status,0,c
  9441  002936  379A               	rlcf	___fldiv@b& (0+255),f,b
  9442  002938  379B               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9443  00293A  379C               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9444  00293C  379D               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9445                           
  9446                           ; BSR set to: 0
  9447  00293E  0100               	movlb	0	; () banked
  9448  002940  AFB0               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9449  002942  D002               	goto	l1231
  9450                           
  9451                           ; BSR set to: 0
  9452  002944  0100               	movlb	0	; () banked
  9453  002946  819A               	bsf	___fldiv@b& (0+255),0,b
  9454  002948                     l1231:
  9455                           
  9456                           ; BSR set to: 0
  9457  002948  0100               	movlb	0	; () banked
  9458  00294A  90D8               	bcf	status,0,c
  9459  00294C  37AD               	rlcf	___fldiv@grs& (0+255),f,b
  9460  00294E  37AE               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9461  002950  37AF               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9462  002952  37B0               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9463  002954  0100               	movlb	0	; () banked
  9464  002956  07AB               	decf	___fldiv@new_exp& (0+255),f,b
  9465  002958  A0D8               	btfss	status,0,c
  9466  00295A  07AC               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9467  00295C                     l4456:
  9468                           
  9469                           ; BSR set to: 0
  9470  00295C  0100               	movlb	0	; () banked
  9471  00295E  AF9C               	btfss	(___fldiv@b+2)& (0+255),7,b
  9472  002960  D7E8               	goto	l4450
  9473                           
  9474                           ; BSR set to: 0
  9475                           
  9476                           ; BSR set to: 0
  9477  002962  0E00               	movlw	0
  9478  002964  0100               	movlb	0	; () banked
  9479  002966  6FB2               	movwf	___fldiv@aexp& (0+255),b
  9480                           
  9481                           ; BSR set to: 0
  9482  002968  0100               	movlb	0	; () banked
  9483  00296A  AFB0               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9484  00296C  D024               	goto	l1233
  9485                           
  9486                           ; BSR set to: 0
  9487  00296E  0EFF               	movlw	255
  9488  002970  0100               	movlb	0	; () banked
  9489  002972  15AD               	andwf	___fldiv@grs& (0+255),w,b
  9490  002974  0100               	movlb	0	; () banked
  9491  002976  6FA2               	movwf	??___fldiv& (0+255),b
  9492  002978  0EFF               	movlw	255
  9493  00297A  0100               	movlb	0	; () banked
  9494  00297C  15AE               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9495  00297E  0100               	movlb	0	; () banked
  9496  002980  6FA3               	movwf	(??___fldiv+1)& (0+255),b
  9497  002982  0EFF               	movlw	255
  9498  002984  0100               	movlb	0	; () banked
  9499  002986  15AF               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9500  002988  0100               	movlb	0	; () banked
  9501  00298A  6FA4               	movwf	(??___fldiv+2)& (0+255),b
  9502  00298C  0E7F               	movlw	127
  9503  00298E  0100               	movlb	0	; () banked
  9504  002990  15B0               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9505  002992  0100               	movlb	0	; () banked
  9506  002994  6FA5               	movwf	(??___fldiv+3)& (0+255),b
  9507  002996  0100               	movlb	0	; () banked
  9508  002998  51A2               	movf	??___fldiv& (0+255),w,b
  9509  00299A  0100               	movlb	0	; () banked
  9510  00299C  11A3               	iorwf	(??___fldiv+1)& (0+255),w,b
  9511  00299E  0100               	movlb	0	; () banked
  9512  0029A0  11A4               	iorwf	(??___fldiv+2)& (0+255),w,b
  9513  0029A2  0100               	movlb	0	; () banked
  9514  0029A4  11A5               	iorwf	(??___fldiv+3)& (0+255),w,b
  9515  0029A6  A4D8               	btfss	status,2,c
  9516  0029A8  D003               	goto	l4466
  9517                           
  9518                           ; BSR set to: 0
  9519                           
  9520                           ; BSR set to: 0
  9521  0029AA  0100               	movlb	0	; () banked
  9522  0029AC  A19A               	btfss	___fldiv@b& (0+255),0,b
  9523  0029AE  D003               	goto	l1233
  9524  0029B0                     l4466:
  9525                           
  9526                           ; BSR set to: 0
  9527  0029B0  0E01               	movlw	1
  9528  0029B2  0100               	movlb	0	; () banked
  9529  0029B4  6FB2               	movwf	___fldiv@aexp& (0+255),b
  9530  0029B6                     l1233:
  9531                           
  9532                           ; BSR set to: 0
  9533  0029B6  0100               	movlb	0	; () banked
  9534  0029B8  51B2               	movf	___fldiv@aexp& (0+255),w,b
  9535  0029BA  0100               	movlb	0	; () banked
  9536  0029BC  B4D8               	btfsc	status,2,c
  9537  0029BE  D023               	goto	l4476
  9538                           
  9539                           ; BSR set to: 0
  9540  0029C0  0E01               	movlw	1
  9541  0029C2  0100               	movlb	0	; () banked
  9542  0029C4  279A               	addwf	___fldiv@b& (0+255),f,b
  9543  0029C6  0E00               	movlw	0
  9544  0029C8  239B               	addwfc	(___fldiv@b+1)& (0+255),f,b
  9545  0029CA  239C               	addwfc	(___fldiv@b+2)& (0+255),f,b
  9546  0029CC  239D               	addwfc	(___fldiv@b+3)& (0+255),f,b
  9547                           
  9548                           ; BSR set to: 0
  9549  0029CE  0100               	movlb	0	; () banked
  9550  0029D0  A19D               	btfss	(___fldiv@b+3)& (0+255),0,b
  9551  0029D2  D019               	goto	l4476
  9552                           
  9553                           ; BSR set to: 0
  9554  0029D4  C09A  F0A2         	movff	___fldiv@b,??___fldiv
  9555  0029D8  C09B  F0A3         	movff	___fldiv@b+1,??___fldiv+1
  9556  0029DC  C09C  F0A4         	movff	___fldiv@b+2,??___fldiv+2
  9557  0029E0  C09D  F0A5         	movff	___fldiv@b+3,??___fldiv+3
  9558  0029E4  0100               	movlb	0	; () banked
  9559  0029E6  35A5               	rlcf	(??___fldiv+3)& (0+255),w,b
  9560  0029E8  33A5               	rrcf	(??___fldiv+3)& (0+255),f,b
  9561  0029EA  33A4               	rrcf	(??___fldiv+2)& (0+255),f,b
  9562  0029EC  33A3               	rrcf	(??___fldiv+1)& (0+255),f,b
  9563  0029EE  33A2               	rrcf	??___fldiv& (0+255),f,b
  9564  0029F0  C0A2  F09A         	movff	??___fldiv,___fldiv@b
  9565  0029F4  C0A3  F09B         	movff	??___fldiv+1,___fldiv@b+1
  9566  0029F8  C0A4  F09C         	movff	??___fldiv+2,___fldiv@b+2
  9567  0029FC  C0A5  F09D         	movff	??___fldiv+3,___fldiv@b+3
  9568                           
  9569                           ; BSR set to: 0
  9570  002A00  0100               	movlb	0	; () banked
  9571  002A02  4BAB               	infsnz	___fldiv@new_exp& (0+255),f,b
  9572  002A04  2BAC               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9573  002A06                     l4476:
  9574                           
  9575                           ; BSR set to: 0
  9576  002A06  0100               	movlb	0	; () banked
  9577  002A08  BFAC               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9578  002A0A  D014               	goto	l4480
  9579  002A0C  0100               	movlb	0	; () banked
  9580  002A0E  51AC               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9581  002A10  E104               	bnz	u5570
  9582  002A12  0100               	movlb	0	; () banked
  9583  002A14  29AB               	incf	___fldiv@new_exp& (0+255),w,b
  9584  002A16  A0D8               	btfss	status,0,c
  9585  002A18  D00D               	goto	l4480
  9586  002A1A                     u5570:
  9587                           
  9588                           ; BSR set to: 0
  9589  002A1A  0E00               	movlw	0
  9590  002A1C  0100               	movlb	0	; () banked
  9591  002A1E  6FAC               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9592  002A20  69AB               	setf	___fldiv@new_exp& (0+255),b
  9593  002A22  0E00               	movlw	0
  9594  002A24  0100               	movlb	0	; () banked
  9595  002A26  6F9A               	movwf	___fldiv@b& (0+255),b
  9596  002A28  0E00               	movlw	0
  9597  002A2A  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
  9598  002A2C  0E00               	movlw	0
  9599  002A2E  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
  9600  002A30  0E00               	movlw	0
  9601  002A32  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9602  002A34                     l4480:
  9603                           
  9604                           ; BSR set to: 0
  9605  002A34  0100               	movlb	0	; () banked
  9606  002A36  BFAC               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9607  002A38  D007               	goto	l4482
  9608  002A3A  0100               	movlb	0	; () banked
  9609  002A3C  51AC               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9610  002A3E  E115               	bnz	l4484
  9611  002A40  0100               	movlb	0	; () banked
  9612  002A42  05AB               	decf	___fldiv@new_exp& (0+255),w,b
  9613  002A44  B0D8               	btfsc	status,0,c
  9614  002A46  D011               	goto	l4484
  9615  002A48                     l4482:
  9616                           
  9617                           ; BSR set to: 0
  9618  002A48  0E00               	movlw	0
  9619  002A4A  0100               	movlb	0	; () banked
  9620  002A4C  6FAC               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9621  002A4E  0E00               	movlw	0
  9622  002A50  6FAB               	movwf	___fldiv@new_exp& (0+255),b
  9623  002A52  0E00               	movlw	0
  9624  002A54  0100               	movlb	0	; () banked
  9625  002A56  6F9A               	movwf	___fldiv@b& (0+255),b
  9626  002A58  0E00               	movlw	0
  9627  002A5A  6F9B               	movwf	(___fldiv@b+1)& (0+255),b
  9628  002A5C  0E00               	movlw	0
  9629  002A5E  6F9C               	movwf	(___fldiv@b+2)& (0+255),b
  9630  002A60  0E00               	movlw	0
  9631  002A62  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9632  002A64  0E00               	movlw	0
  9633  002A66  0100               	movlb	0	; () banked
  9634  002A68  6FA6               	movwf	___fldiv@sign& (0+255),b
  9635  002A6A                     l4484:
  9636                           
  9637                           ; BSR set to: 0
  9638  002A6A  C0AB  F0B1         	movff	___fldiv@new_exp,___fldiv@bexp
  9639                           
  9640                           ; BSR set to: 0
  9641  002A6E  0100               	movlb	0	; () banked
  9642  002A70  A1B1               	btfss	___fldiv@bexp& (0+255),0,b
  9643  002A72  D003               	goto	l4490
  9644                           
  9645                           ; BSR set to: 0
  9646  002A74  0100               	movlb	0	; () banked
  9647  002A76  8F9C               	bsf	(___fldiv@b+2)& (0+255),7,b
  9648  002A78  D002               	goto	l4492
  9649  002A7A                     l4490:
  9650                           
  9651                           ; BSR set to: 0
  9652  002A7A  0100               	movlb	0	; () banked
  9653  002A7C  9F9C               	bcf	(___fldiv@b+2)& (0+255),7,b
  9654  002A7E                     l4492:
  9655                           
  9656                           ; BSR set to: 0
  9657  002A7E  0100               	movlb	0	; () banked
  9658  002A80  90D8               	bcf	status,0,c
  9659  002A82  31B1               	rrcf	___fldiv@bexp& (0+255),w,b
  9660  002A84  0100               	movlb	0	; () banked
  9661  002A86  6F9D               	movwf	(___fldiv@b+3)& (0+255),b
  9662                           
  9663                           ; BSR set to: 0
  9664  002A88  0100               	movlb	0	; () banked
  9665  002A8A  51A6               	movf	___fldiv@sign& (0+255),w,b
  9666  002A8C  0100               	movlb	0	; () banked
  9667  002A8E  139D               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9668                           
  9669                           ; BSR set to: 0
  9670  002A90  C09A  F09A         	movff	___fldiv@b,?___fldiv
  9671  002A94  C09B  F09B         	movff	___fldiv@b+1,?___fldiv+1
  9672  002A98  C09C  F09C         	movff	___fldiv@b+2,?___fldiv+2
  9673  002A9C  C09D  F09D         	movff	___fldiv@b+3,?___fldiv+3
  9674  002AA0  0012               	return	
  9675  002AA2                     __end_of___fldiv:
  9676                           	opt stack 0
  9677                           tblptru	equ	0xFF8
  9678                           tblptrh	equ	0xFF7
  9679                           tblptrl	equ	0xFF6
  9680                           tablat	equ	0xFF5
  9681                           prodh	equ	0xFF4
  9682                           prodl	equ	0xFF3
  9683                           intcon	equ	0xFF2
  9684                           intcon2	equ	0xFF1
  9685                           postinc0	equ	0xFEE
  9686                           wreg	equ	0xFE8
  9687                           postdec1	equ	0xFE5
  9688                           fsr1l	equ	0xFE1
  9689                           indf2	equ	0xFDF
  9690                           fsr2h	equ	0xFDA
  9691                           fsr2l	equ	0xFD9
  9692                           status	equ	0xFD8
  9693                           
  9694 ;; *************** function ___fladd *****************
  9695 ;; Defined at:
  9696 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;  b               4    0[BANK1 ] unsigned char 
  9699 ;;  a               4    4[BANK1 ] unsigned char 
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;  grs             1   19[BANK1 ] unsigned char 
  9702 ;;  bexp            1   18[BANK1 ] unsigned char 
  9703 ;;  aexp            1   17[BANK1 ] unsigned char 
  9704 ;;  signs           1   16[BANK1 ] unsigned char 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  4    0[BANK1 ] unsigned char 
  9707 ;; Registers used:
  9708 ;;		wreg, status,2, status,0
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9714 ;;      Params:         0       0       8       0
  9715 ;;      Locals:         0       0       4       0
  9716 ;;      Temps:          0       0       8       0
  9717 ;;      Totals:         0       0      20       0
  9718 ;;Total ram usage:       20 bytes
  9719 ;; Hardware stack levels used:    1
  9720 ;; Hardware stack levels required when called:    4
  9721 ;; This function calls:
  9722 ;;		Nothing
  9723 ;; This function is called by:
  9724 ;;		_main
  9725 ;; This function uses a non-reentrant model
  9726 ;;
  9727                           
  9728                           	psect	text25
  9729  001908                     __ptext25:
  9730                           	opt stack 0
  9731  001908                     ___fladd:
  9732                           	opt stack 26
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;incstack = 0
  9736  001908  0101               	movlb	1	; () banked
  9737  00190A  5103               	movf	(___fladd@b+3)& (0+255),w,b
  9738  00190C  0B80               	andlw	128
  9739  00190E  0101               	movlb	1	; () banked
  9740  001910  6F10               	movwf	___fladd@signs& (0+255),b
  9741  001912  0101               	movlb	1	; () banked
  9742  001914  5103               	movf	(___fladd@b+3)& (0+255),w,b
  9743  001916  2503               	addwf	(___fladd@b+3)& (0+255),w,b
  9744  001918  0101               	movlb	1	; () banked
  9745  00191A  6F12               	movwf	___fladd@bexp& (0+255),b
  9746                           
  9747                           ; BSR set to: 1
  9748  00191C  0101               	movlb	1	; () banked
  9749  00191E  AF02               	btfss	(___fladd@b+2)& (0+255),7,b
  9750  001920  D002               	goto	l4942
  9751                           
  9752                           ; BSR set to: 1
  9753  001922  0101               	movlb	1	; () banked
  9754  001924  8112               	bsf	___fladd@bexp& (0+255),0,b
  9755  001926                     l4942:
  9756                           
  9757                           ; BSR set to: 1
  9758  001926  0101               	movlb	1	; () banked
  9759  001928  5112               	movf	___fladd@bexp& (0+255),w,b
  9760  00192A  0101               	movlb	1	; () banked
  9761  00192C  B4D8               	btfsc	status,2,c
  9762  00192E  D012               	goto	l4952
  9763                           
  9764                           ; BSR set to: 1
  9765  001930  0101               	movlb	1	; () banked
  9766  001932  2912               	incf	___fladd@bexp& (0+255),w,b
  9767  001934  A4D8               	btfss	status,2,c
  9768  001936  D009               	goto	l4948
  9769                           
  9770                           ; BSR set to: 1
  9771  001938  0E00               	movlw	0
  9772  00193A  0101               	movlb	1	; () banked
  9773  00193C  6F00               	movwf	___fladd@b& (0+255),b
  9774  00193E  0E00               	movlw	0
  9775  001940  6F01               	movwf	(___fladd@b+1)& (0+255),b
  9776  001942  0E00               	movlw	0
  9777  001944  6F02               	movwf	(___fladd@b+2)& (0+255),b
  9778  001946  0E00               	movlw	0
  9779  001948  6F03               	movwf	(___fladd@b+3)& (0+255),b
  9780  00194A                     l4948:
  9781                           
  9782                           ; BSR set to: 1
  9783  00194A  0101               	movlb	1	; () banked
  9784  00194C  8F02               	bsf	(___fladd@b+2)& (0+255),7,b
  9785                           
  9786                           ; BSR set to: 1
  9787  00194E  0E00               	movlw	0
  9788  001950  0101               	movlb	1	; () banked
  9789  001952  D008               	goto	L4
  9790  001954                     l4952:
  9791                           
  9792                           ; BSR set to: 1
  9793  001954  0E00               	movlw	0
  9794  001956  0101               	movlb	1	; () banked
  9795  001958  6F00               	movwf	___fladd@b& (0+255),b
  9796  00195A  0E00               	movlw	0
  9797  00195C  6F01               	movwf	(___fladd@b+1)& (0+255),b
  9798  00195E  0E00               	movlw	0
  9799  001960  6F02               	movwf	(___fladd@b+2)& (0+255),b
  9800  001962  0E00               	movlw	0
  9801  001964                     L4:
  9802  001964  6F03               	movwf	(___fladd@b+3)& (0+255),b
  9803                           
  9804                           ; BSR set to: 1
  9805                           
  9806                           ; BSR set to: 1
  9807  001966  0101               	movlb	1	; () banked
  9808  001968  5107               	movf	(___fladd@a+3)& (0+255),w,b
  9809  00196A  0B80               	andlw	128
  9810  00196C  0101               	movlb	1	; () banked
  9811  00196E  6F11               	movwf	___fladd@aexp& (0+255),b
  9812                           
  9813                           ; BSR set to: 1
  9814  001970  0101               	movlb	1	; () banked
  9815  001972  5110               	movf	___fladd@signs& (0+255),w,b
  9816  001974  0101               	movlb	1	; () banked
  9817  001976  1911               	xorwf	___fladd@aexp& (0+255),w,b
  9818  001978  B4D8               	btfsc	status,2,c
  9819  00197A  D002               	goto	l4960
  9820                           
  9821                           ; BSR set to: 1
  9822  00197C  0101               	movlb	1	; () banked
  9823  00197E  8D10               	bsf	___fladd@signs& (0+255),6,b
  9824  001980                     l4960:
  9825                           
  9826                           ; BSR set to: 1
  9827  001980  0101               	movlb	1	; () banked
  9828  001982  5107               	movf	(___fladd@a+3)& (0+255),w,b
  9829  001984  2507               	addwf	(___fladd@a+3)& (0+255),w,b
  9830  001986  0101               	movlb	1	; () banked
  9831  001988  6F11               	movwf	___fladd@aexp& (0+255),b
  9832                           
  9833                           ; BSR set to: 1
  9834  00198A  0101               	movlb	1	; () banked
  9835  00198C  AF06               	btfss	(___fladd@a+2)& (0+255),7,b
  9836  00198E  D002               	goto	l4966
  9837                           
  9838                           ; BSR set to: 1
  9839  001990  0101               	movlb	1	; () banked
  9840  001992  8111               	bsf	___fladd@aexp& (0+255),0,b
  9841  001994                     l4966:
  9842                           
  9843                           ; BSR set to: 1
  9844  001994  0101               	movlb	1	; () banked
  9845  001996  5111               	movf	___fladd@aexp& (0+255),w,b
  9846  001998  0101               	movlb	1	; () banked
  9847  00199A  B4D8               	btfsc	status,2,c
  9848  00199C  D012               	goto	l4976
  9849                           
  9850                           ; BSR set to: 1
  9851  00199E  0101               	movlb	1	; () banked
  9852  0019A0  2911               	incf	___fladd@aexp& (0+255),w,b
  9853  0019A2  A4D8               	btfss	status,2,c
  9854  0019A4  D009               	goto	l4972
  9855                           
  9856                           ; BSR set to: 1
  9857  0019A6  0E00               	movlw	0
  9858  0019A8  0101               	movlb	1	; () banked
  9859  0019AA  6F04               	movwf	___fladd@a& (0+255),b
  9860  0019AC  0E00               	movlw	0
  9861  0019AE  6F05               	movwf	(___fladd@a+1)& (0+255),b
  9862  0019B0  0E00               	movlw	0
  9863  0019B2  6F06               	movwf	(___fladd@a+2)& (0+255),b
  9864  0019B4  0E00               	movlw	0
  9865  0019B6  6F07               	movwf	(___fladd@a+3)& (0+255),b
  9866  0019B8                     l4972:
  9867                           
  9868                           ; BSR set to: 1
  9869  0019B8  0101               	movlb	1	; () banked
  9870  0019BA  8F06               	bsf	(___fladd@a+2)& (0+255),7,b
  9871                           
  9872                           ; BSR set to: 1
  9873  0019BC  0E00               	movlw	0
  9874  0019BE  0101               	movlb	1	; () banked
  9875  0019C0  D008               	goto	L5
  9876  0019C2                     l4976:
  9877                           
  9878                           ; BSR set to: 1
  9879  0019C2  0E00               	movlw	0
  9880  0019C4  0101               	movlb	1	; () banked
  9881  0019C6  6F04               	movwf	___fladd@a& (0+255),b
  9882  0019C8  0E00               	movlw	0
  9883  0019CA  6F05               	movwf	(___fladd@a+1)& (0+255),b
  9884  0019CC  0E00               	movlw	0
  9885  0019CE  6F06               	movwf	(___fladd@a+2)& (0+255),b
  9886  0019D0  0E00               	movlw	0
  9887  0019D2                     L5:
  9888  0019D2  6F07               	movwf	(___fladd@a+3)& (0+255),b
  9889                           
  9890                           ; BSR set to: 1
  9891                           
  9892                           ; BSR set to: 1
  9893  0019D4  0101               	movlb	1	; () banked
  9894  0019D6  5112               	movf	___fladd@bexp& (0+255),w,b
  9895  0019D8  0101               	movlb	1	; () banked
  9896  0019DA  5D11               	subwf	___fladd@aexp& (0+255),w,b
  9897  0019DC  B0D8               	btfsc	status,0,c
  9898  0019DE  D024               	goto	l5014
  9899                           
  9900                           ; BSR set to: 1
  9901  0019E0  0101               	movlb	1	; () banked
  9902  0019E2  AD10               	btfss	___fladd@signs& (0+255),6,b
  9903  0019E4  D003               	goto	l4984
  9904                           
  9905                           ; BSR set to: 1
  9906  0019E6  0E80               	movlw	128
  9907  0019E8  0101               	movlb	1	; () banked
  9908  0019EA  1B10               	xorwf	___fladd@signs& (0+255),f,b
  9909  0019EC                     l4984:
  9910                           
  9911                           ; BSR set to: 1
  9912  0019EC  C112  F113         	movff	___fladd@bexp,___fladd@grs
  9913                           
  9914                           ; BSR set to: 1
  9915  0019F0  C111  F112         	movff	___fladd@aexp,___fladd@bexp
  9916                           
  9917                           ; BSR set to: 1
  9918  0019F4  C113  F111         	movff	___fladd@grs,___fladd@aexp
  9919                           
  9920                           ; BSR set to: 1
  9921  0019F8  C100  F113         	movff	___fladd@b,___fladd@grs
  9922                           
  9923                           ; BSR set to: 1
  9924  0019FC  C104  F100         	movff	___fladd@a,___fladd@b
  9925                           
  9926                           ; BSR set to: 1
  9927  001A00  C113  F104         	movff	___fladd@grs,___fladd@a
  9928                           
  9929                           ; BSR set to: 1
  9930  001A04  C101  F113         	movff	___fladd@b+1,___fladd@grs
  9931                           
  9932                           ; BSR set to: 1
  9933  001A08  C105  F101         	movff	___fladd@a+1,___fladd@b+1
  9934                           
  9935                           ; BSR set to: 1
  9936  001A0C  C113  F105         	movff	___fladd@grs,___fladd@a+1
  9937                           
  9938                           ; BSR set to: 1
  9939  001A10  C102  F113         	movff	___fladd@b+2,___fladd@grs
  9940                           
  9941                           ; BSR set to: 1
  9942  001A14  C106  F102         	movff	___fladd@a+2,___fladd@b+2
  9943                           
  9944                           ; BSR set to: 1
  9945  001A18  C113  F106         	movff	___fladd@grs,___fladd@a+2
  9946                           
  9947                           ; BSR set to: 1
  9948  001A1C  C103  F113         	movff	___fladd@b+3,___fladd@grs
  9949                           
  9950                           ; BSR set to: 1
  9951  001A20  C107  F103         	movff	___fladd@a+3,___fladd@b+3
  9952                           
  9953                           ; BSR set to: 1
  9954  001A24  C113  F107         	movff	___fladd@grs,___fladd@a+3
  9955  001A28                     l5014:
  9956                           
  9957                           ; BSR set to: 1
  9958  001A28  0E00               	movlw	0
  9959  001A2A  0101               	movlb	1	; () banked
  9960  001A2C  6F13               	movwf	___fladd@grs& (0+255),b
  9961                           
  9962                           ; BSR set to: 1
  9963  001A2E  0101               	movlb	1	; () banked
  9964  001A30  5112               	movf	___fladd@bexp& (0+255),w,b
  9965  001A32  0101               	movlb	1	; () banked
  9966  001A34  6F08               	movwf	??___fladd& (0+255),b
  9967  001A36  6B09               	clrf	(??___fladd+1)& (0+255),b
  9968  001A38  0101               	movlb	1	; () banked
  9969  001A3A  1F08               	comf	??___fladd& (0+255),f,b
  9970  001A3C  1F09               	comf	(??___fladd+1)& (0+255),f,b
  9971  001A3E  4B08               	infsnz	??___fladd& (0+255),f,b
  9972  001A40  2B09               	incf	(??___fladd+1)& (0+255),f,b
  9973  001A42  0101               	movlb	1	; () banked
  9974  001A44  5111               	movf	___fladd@aexp& (0+255),w,b
  9975  001A46  0101               	movlb	1	; () banked
  9976  001A48  6F0A               	movwf	(??___fladd+2)& (0+255),b
  9977  001A4A  6B0B               	clrf	(??___fladd+3)& (0+255),b
  9978  001A4C  0101               	movlb	1	; () banked
  9979  001A4E  5108               	movf	??___fladd& (0+255),w,b
  9980  001A50  0101               	movlb	1	; () banked
  9981  001A52  270A               	addwf	(??___fladd+2)& (0+255),f,b
  9982  001A54  0101               	movlb	1	; () banked
  9983  001A56  5109               	movf	(??___fladd+1)& (0+255),w,b
  9984  001A58  0101               	movlb	1	; () banked
  9985  001A5A  230B               	addwfc	(??___fladd+3)& (0+255),f,b
  9986  001A5C  0101               	movlb	1	; () banked
  9987  001A5E  BF0B               	btfsc	(??___fladd+3)& (0+255),7,b
  9988  001A60  D03D               	goto	l1167
  9989  001A62  0101               	movlb	1	; () banked
  9990  001A64  510B               	movf	(??___fladd+3)& (0+255),w,b
  9991  001A66  E105               	bnz	u6380
  9992  001A68  0E1A               	movlw	26
  9993  001A6A  0101               	movlb	1	; () banked
  9994  001A6C  5D0A               	subwf	(??___fladd+2)& (0+255),w,b
  9995  001A6E  A0D8               	btfss	status,0,c
  9996  001A70  D035               	goto	l1167
  9997  001A72                     u6380:
  9998                           
  9999                           ; BSR set to: 1
 10000  001A72  0101               	movlb	1	; () banked
 10001  001A74  5100               	movf	___fladd@b& (0+255),w,b
 10002  001A76  0101               	movlb	1	; () banked
 10003  001A78  1101               	iorwf	(___fladd@b+1)& (0+255),w,b
 10004  001A7A  0101               	movlb	1	; () banked
 10005  001A7C  1102               	iorwf	(___fladd@b+2)& (0+255),w,b
 10006  001A7E  0101               	movlb	1	; () banked
 10007  001A80  1103               	iorwf	(___fladd@b+3)& (0+255),w,b
 10008  001A82  B4D8               	btfsc	status,2,c
 10009  001A84  D002               	goto	u6390
 10010  001A86  0E01               	movlw	1
 10011  001A88  D001               	goto	u6400
 10012  001A8A                     u6390:
 10013  001A8A  0E00               	movlw	0
 10014  001A8C                     u6400:
 10015  001A8C  0101               	movlb	1	; () banked
 10016  001A8E  6F13               	movwf	___fladd@grs& (0+255),b
 10017                           
 10018                           ; BSR set to: 1
 10019  001A90  0E00               	movlw	0
 10020  001A92  0101               	movlb	1	; () banked
 10021  001A94  6F00               	movwf	___fladd@b& (0+255),b
 10022  001A96  0E00               	movlw	0
 10023  001A98  6F01               	movwf	(___fladd@b+1)& (0+255),b
 10024  001A9A  0E00               	movlw	0
 10025  001A9C  6F02               	movwf	(___fladd@b+2)& (0+255),b
 10026  001A9E  0E00               	movlw	0
 10027  001AA0  6F03               	movwf	(___fladd@b+3)& (0+255),b
 10028                           
 10029                           ; BSR set to: 1
 10030  001AA2  C111  F112         	movff	___fladd@aexp,___fladd@bexp
 10031  001AA6  D020               	goto	l1166
 10032  001AA8                     l1168:
 10033                           
 10034                           ; BSR set to: 1
 10035  001AA8  0101               	movlb	1	; () banked
 10036  001AAA  A113               	btfss	___fladd@grs& (0+255),0,b
 10037  001AAC  D007               	goto	l5026
 10038                           
 10039                           ; BSR set to: 1
 10040  001AAE  0101               	movlb	1	; () banked
 10041  001AB0  90D8               	bcf	status,0,c
 10042  001AB2  3113               	rrcf	___fladd@grs& (0+255),w,b
 10043  001AB4  0901               	iorlw	1
 10044  001AB6  0101               	movlb	1	; () banked
 10045  001AB8  6F13               	movwf	___fladd@grs& (0+255),b
 10046  001ABA  D003               	goto	l5028
 10047  001ABC                     l5026:
 10048                           
 10049                           ; BSR set to: 1
 10050  001ABC  0101               	movlb	1	; () banked
 10051  001ABE  90D8               	bcf	status,0,c
 10052  001AC0  3313               	rrcf	___fladd@grs& (0+255),f,b
 10053  001AC2                     l5028:
 10054                           
 10055                           ; BSR set to: 1
 10056  001AC2  0101               	movlb	1	; () banked
 10057  001AC4  A100               	btfss	___fladd@b& (0+255),0,b
 10058  001AC6  D002               	goto	l5032
 10059                           
 10060                           ; BSR set to: 1
 10061  001AC8  0101               	movlb	1	; () banked
 10062  001ACA  8F13               	bsf	___fladd@grs& (0+255),7,b
 10063  001ACC                     l5032:
 10064                           
 10065                           ; BSR set to: 1
 10066  001ACC  0101               	movlb	1	; () banked
 10067  001ACE  3503               	rlcf	(___fladd@b+3)& (0+255),w,b
 10068  001AD0  3303               	rrcf	(___fladd@b+3)& (0+255),f,b
 10069  001AD2  3302               	rrcf	(___fladd@b+2)& (0+255),f,b
 10070  001AD4  3301               	rrcf	(___fladd@b+1)& (0+255),f,b
 10071  001AD6  3300               	rrcf	___fladd@b& (0+255),f,b
 10072                           
 10073                           ; BSR set to: 1
 10074  001AD8  0101               	movlb	1	; () banked
 10075  001ADA  2B12               	incf	___fladd@bexp& (0+255),f,b
 10076  001ADC                     l1167:
 10077                           
 10078                           ; BSR set to: 1
 10079  001ADC  0101               	movlb	1	; () banked
 10080  001ADE  5111               	movf	___fladd@aexp& (0+255),w,b
 10081  001AE0  0101               	movlb	1	; () banked
 10082  001AE2  5D12               	subwf	___fladd@bexp& (0+255),w,b
 10083  001AE4  A0D8               	btfss	status,0,c
 10084  001AE6  D7E0               	goto	l1168
 10085  001AE8                     l1166:
 10086                           
 10087                           ; BSR set to: 1
 10088  001AE8  0101               	movlb	1	; () banked
 10089  001AEA  BD10               	btfsc	___fladd@signs& (0+255),6,b
 10090  001AEC  D03F               	goto	l5060
 10091                           
 10092                           ; BSR set to: 1
 10093  001AEE  0101               	movlb	1	; () banked
 10094  001AF0  5112               	movf	___fladd@bexp& (0+255),w,b
 10095  001AF2  0101               	movlb	1	; () banked
 10096  001AF4  A4D8               	btfss	status,2,c
 10097  001AF6  D00A               	goto	l5042
 10098                           
 10099                           ; BSR set to: 1
 10100  001AF8  0E00               	movlw	0
 10101  001AFA  0101               	movlb	1	; () banked
 10102  001AFC  6F00               	movwf	?___fladd& (0+255),b
 10103  001AFE  0E00               	movlw	0
 10104  001B00  6F01               	movwf	(?___fladd+1)& (0+255),b
 10105  001B02  0E00               	movlw	0
 10106  001B04  6F02               	movwf	(?___fladd+2)& (0+255),b
 10107  001B06  0E00               	movlw	0
 10108  001B08  6F03               	movwf	(?___fladd+3)& (0+255),b
 10109                           
 10110                           ; BSR set to: 1
 10111  001B0A  0012               	return	
 10112  001B0C                     l5042:
 10113                           
 10114                           ; BSR set to: 1
 10115  001B0C  0101               	movlb	1	; () banked
 10116  001B0E  5104               	movf	___fladd@a& (0+255),w,b
 10117  001B10  0101               	movlb	1	; () banked
 10118  001B12  2700               	addwf	___fladd@b& (0+255),f,b
 10119  001B14  0101               	movlb	1	; () banked
 10120  001B16  5105               	movf	(___fladd@a+1)& (0+255),w,b
 10121  001B18  0101               	movlb	1	; () banked
 10122  001B1A  2301               	addwfc	(___fladd@b+1)& (0+255),f,b
 10123  001B1C  0101               	movlb	1	; () banked
 10124  001B1E  5106               	movf	(___fladd@a+2)& (0+255),w,b
 10125  001B20  0101               	movlb	1	; () banked
 10126  001B22  2302               	addwfc	(___fladd@b+2)& (0+255),f,b
 10127  001B24  0101               	movlb	1	; () banked
 10128  001B26  5107               	movf	(___fladd@a+3)& (0+255),w,b
 10129  001B28  0101               	movlb	1	; () banked
 10130  001B2A  2303               	addwfc	(___fladd@b+3)& (0+255),f,b
 10131                           
 10132                           ; BSR set to: 1
 10133  001B2C  0101               	movlb	1	; () banked
 10134  001B2E  A103               	btfss	(___fladd@b+3)& (0+255),0,b
 10135  001B30  D0CC               	goto	l5096
 10136                           
 10137                           ; BSR set to: 1
 10138  001B32  0101               	movlb	1	; () banked
 10139  001B34  A113               	btfss	___fladd@grs& (0+255),0,b
 10140  001B36  D009               	goto	l5050
 10141                           
 10142                           ; BSR set to: 1
 10143  001B38  0101               	movlb	1	; () banked
 10144  001B3A  90D8               	bcf	status,0,c
 10145  001B3C  3313               	rrcf	___fladd@grs& (0+255),f,b
 10146  001B3E  0101               	movlb	1	; () banked
 10147  001B40  5113               	movf	___fladd@grs& (0+255),w,b
 10148  001B42  0901               	iorlw	1
 10149  001B44  0101               	movlb	1	; () banked
 10150  001B46  6F13               	movwf	___fladd@grs& (0+255),b
 10151  001B48  D003               	goto	l5052
 10152  001B4A                     l5050:
 10153                           
 10154                           ; BSR set to: 1
 10155  001B4A  0101               	movlb	1	; () banked
 10156  001B4C  90D8               	bcf	status,0,c
 10157  001B4E  3313               	rrcf	___fladd@grs& (0+255),f,b
 10158  001B50                     l5052:
 10159                           
 10160                           ; BSR set to: 1
 10161  001B50  0101               	movlb	1	; () banked
 10162  001B52  A100               	btfss	___fladd@b& (0+255),0,b
 10163  001B54  D002               	goto	l5056
 10164                           
 10165                           ; BSR set to: 1
 10166  001B56  0101               	movlb	1	; () banked
 10167  001B58  8F13               	bsf	___fladd@grs& (0+255),7,b
 10168  001B5A                     l5056:
 10169                           
 10170                           ; BSR set to: 1
 10171  001B5A  0101               	movlb	1	; () banked
 10172  001B5C  3503               	rlcf	(___fladd@b+3)& (0+255),w,b
 10173  001B5E  3303               	rrcf	(___fladd@b+3)& (0+255),f,b
 10174  001B60  3302               	rrcf	(___fladd@b+2)& (0+255),f,b
 10175  001B62  3301               	rrcf	(___fladd@b+1)& (0+255),f,b
 10176  001B64  3300               	rrcf	___fladd@b& (0+255),f,b
 10177                           
 10178                           ; BSR set to: 1
 10179  001B66  0101               	movlb	1	; () banked
 10180  001B68  2B12               	incf	___fladd@bexp& (0+255),f,b
 10181                           
 10182                           ; BSR set to: 1
 10183  001B6A  D0AF               	goto	l5096
 10184  001B6C                     l5060:
 10185                           
 10186                           ; BSR set to: 1
 10187  001B6C  0101               	movlb	1	; () banked
 10188  001B6E  5104               	movf	___fladd@a& (0+255),w,b
 10189  001B70  0101               	movlb	1	; () banked
 10190  001B72  5D00               	subwf	___fladd@b& (0+255),w,b
 10191  001B74  0101               	movlb	1	; () banked
 10192  001B76  5105               	movf	(___fladd@a+1)& (0+255),w,b
 10193  001B78  0101               	movlb	1	; () banked
 10194  001B7A  5901               	subwfb	(___fladd@b+1)& (0+255),w,b
 10195  001B7C  0101               	movlb	1	; () banked
 10196  001B7E  5106               	movf	(___fladd@a+2)& (0+255),w,b
 10197  001B80  0101               	movlb	1	; () banked
 10198  001B82  5902               	subwfb	(___fladd@b+2)& (0+255),w,b
 10199  001B84  0101               	movlb	1	; () banked
 10200  001B86  5103               	movf	(___fladd@b+3)& (0+255),w,b
 10201  001B88  0A80               	xorlw	128
 10202  001B8A  0101               	movlb	1	; () banked
 10203  001B8C  6F08               	movwf	??___fladd& (0+255),b
 10204  001B8E  0101               	movlb	1	; () banked
 10205  001B90  5107               	movf	(___fladd@a+3)& (0+255),w,b
 10206  001B92  0A80               	xorlw	128
 10207  001B94  0101               	movlb	1	; () banked
 10208  001B96  5908               	subwfb	??___fladd& (0+255),w,b
 10209  001B98  B0D8               	btfsc	status,0,c
 10210  001B9A  D050               	goto	l5070
 10211                           
 10212                           ; BSR set to: 1
 10213  001B9C  C100  F108         	movff	___fladd@b,??___fladd
 10214  001BA0  C101  F109         	movff	___fladd@b+1,??___fladd+1
 10215  001BA4  C102  F10A         	movff	___fladd@b+2,??___fladd+2
 10216  001BA8  C103  F10B         	movff	___fladd@b+3,??___fladd+3
 10217  001BAC  0101               	movlb	1	; () banked
 10218  001BAE  1F08               	comf	??___fladd& (0+255),f,b
 10219  001BB0  1F09               	comf	(??___fladd+1)& (0+255),f,b
 10220  001BB2  1F0A               	comf	(??___fladd+2)& (0+255),f,b
 10221  001BB4  1F0B               	comf	(??___fladd+3)& (0+255),f,b
 10222  001BB6  2B08               	incf	??___fladd& (0+255),f,b
 10223  001BB8  0E00               	movlw	0
 10224  001BBA  2309               	addwfc	(??___fladd+1)& (0+255),f,b
 10225  001BBC  230A               	addwfc	(??___fladd+2)& (0+255),f,b
 10226  001BBE  230B               	addwfc	(??___fladd+3)& (0+255),f,b
 10227  001BC0  0101               	movlb	1	; () banked
 10228  001BC2  5104               	movf	___fladd@a& (0+255),w,b
 10229  001BC4  0101               	movlb	1	; () banked
 10230  001BC6  2508               	addwf	??___fladd& (0+255),w,b
 10231  001BC8  0101               	movlb	1	; () banked
 10232  001BCA  6F0C               	movwf	(??___fladd+4)& (0+255),b
 10233  001BCC  0101               	movlb	1	; () banked
 10234  001BCE  5105               	movf	(___fladd@a+1)& (0+255),w,b
 10235  001BD0  0101               	movlb	1	; () banked
 10236  001BD2  2109               	addwfc	(??___fladd+1)& (0+255),w,b
 10237  001BD4  0101               	movlb	1	; () banked
 10238  001BD6  6F0D               	movwf	(??___fladd+5)& (0+255),b
 10239  001BD8  0101               	movlb	1	; () banked
 10240  001BDA  5106               	movf	(___fladd@a+2)& (0+255),w,b
 10241  001BDC  0101               	movlb	1	; () banked
 10242  001BDE  210A               	addwfc	(??___fladd+2)& (0+255),w,b
 10243  001BE0  0101               	movlb	1	; () banked
 10244  001BE2  6F0E               	movwf	(??___fladd+6)& (0+255),b
 10245  001BE4  0101               	movlb	1	; () banked
 10246  001BE6  5107               	movf	(___fladd@a+3)& (0+255),w,b
 10247  001BE8  0101               	movlb	1	; () banked
 10248  001BEA  210B               	addwfc	(??___fladd+3)& (0+255),w,b
 10249  001BEC  0101               	movlb	1	; () banked
 10250  001BEE  6F0F               	movwf	(??___fladd+7)& (0+255),b
 10251  001BF0  0EFF               	movlw	255
 10252  001BF2  0101               	movlb	1	; () banked
 10253  001BF4  250C               	addwf	(??___fladd+4)& (0+255),w,b
 10254  001BF6  0101               	movlb	1	; () banked
 10255  001BF8  6F00               	movwf	___fladd@b& (0+255),b
 10256  001BFA  0EFF               	movlw	255
 10257  001BFC  0101               	movlb	1	; () banked
 10258  001BFE  210D               	addwfc	(??___fladd+5)& (0+255),w,b
 10259  001C00  0101               	movlb	1	; () banked
 10260  001C02  6F01               	movwf	(___fladd@b+1)& (0+255),b
 10261  001C04  0EFF               	movlw	255
 10262  001C06  0101               	movlb	1	; () banked
 10263  001C08  210E               	addwfc	(??___fladd+6)& (0+255),w,b
 10264  001C0A  0101               	movlb	1	; () banked
 10265  001C0C  6F02               	movwf	(___fladd@b+2)& (0+255),b
 10266  001C0E  0EFF               	movlw	255
 10267  001C10  0101               	movlb	1	; () banked
 10268  001C12  210F               	addwfc	(??___fladd+7)& (0+255),w,b
 10269  001C14  0101               	movlb	1	; () banked
 10270  001C16  6F03               	movwf	(___fladd@b+3)& (0+255),b
 10271  001C18  0E80               	movlw	128
 10272  001C1A  0101               	movlb	1	; () banked
 10273  001C1C  1B10               	xorwf	___fladd@signs& (0+255),f,b
 10274                           
 10275                           ; BSR set to: 1
 10276  001C1E  0101               	movlb	1	; () banked
 10277  001C20  6D13               	negf	___fladd@grs& (0+255),b
 10278                           
 10279                           ; BSR set to: 1
 10280  001C22  0101               	movlb	1	; () banked
 10281  001C24  5113               	movf	___fladd@grs& (0+255),w,b
 10282  001C26  0101               	movlb	1	; () banked
 10283  001C28  A4D8               	btfss	status,2,c
 10284  001C2A  D018               	goto	l1183
 10285                           
 10286                           ; BSR set to: 1
 10287  001C2C  0E01               	movlw	1
 10288  001C2E  0101               	movlb	1	; () banked
 10289  001C30  2700               	addwf	___fladd@b& (0+255),f,b
 10290  001C32  0E00               	movlw	0
 10291  001C34  2301               	addwfc	(___fladd@b+1)& (0+255),f,b
 10292  001C36  2302               	addwfc	(___fladd@b+2)& (0+255),f,b
 10293  001C38  2303               	addwfc	(___fladd@b+3)& (0+255),f,b
 10294                           
 10295                           ; BSR set to: 1
 10296  001C3A  D010               	goto	l1183
 10297  001C3C                     l5070:
 10298                           
 10299                           ; BSR set to: 1
 10300  001C3C  0101               	movlb	1	; () banked
 10301  001C3E  5104               	movf	___fladd@a& (0+255),w,b
 10302  001C40  0101               	movlb	1	; () banked
 10303  001C42  5F00               	subwf	___fladd@b& (0+255),f,b
 10304  001C44  0101               	movlb	1	; () banked
 10305  001C46  5105               	movf	(___fladd@a+1)& (0+255),w,b
 10306  001C48  0101               	movlb	1	; () banked
 10307  001C4A  5B01               	subwfb	(___fladd@b+1)& (0+255),f,b
 10308  001C4C  0101               	movlb	1	; () banked
 10309  001C4E  5106               	movf	(___fladd@a+2)& (0+255),w,b
 10310  001C50  0101               	movlb	1	; () banked
 10311  001C52  5B02               	subwfb	(___fladd@b+2)& (0+255),f,b
 10312  001C54  0101               	movlb	1	; () banked
 10313  001C56  5107               	movf	(___fladd@a+3)& (0+255),w,b
 10314  001C58  0101               	movlb	1	; () banked
 10315  001C5A  5B03               	subwfb	(___fladd@b+3)& (0+255),f,b
 10316  001C5C                     l1183:
 10317                           
 10318                           ; BSR set to: 1
 10319  001C5C  0101               	movlb	1	; () banked
 10320  001C5E  5100               	movf	___fladd@b& (0+255),w,b
 10321  001C60  0101               	movlb	1	; () banked
 10322  001C62  1101               	iorwf	(___fladd@b+1)& (0+255),w,b
 10323  001C64  0101               	movlb	1	; () banked
 10324  001C66  1102               	iorwf	(___fladd@b+2)& (0+255),w,b
 10325  001C68  0101               	movlb	1	; () banked
 10326  001C6A  1103               	iorwf	(___fladd@b+3)& (0+255),w,b
 10327  001C6C  A4D8               	btfss	status,2,c
 10328  001C6E  D02A               	goto	l5094
 10329                           
 10330                           ; BSR set to: 1
 10331  001C70  0101               	movlb	1	; () banked
 10332  001C72  5113               	movf	___fladd@grs& (0+255),w,b
 10333  001C74  0101               	movlb	1	; () banked
 10334  001C76  A4D8               	btfss	status,2,c
 10335  001C78  D025               	goto	l5094
 10336                           
 10337                           ; BSR set to: 1
 10338  001C7A  0E00               	movlw	0
 10339  001C7C  0101               	movlb	1	; () banked
 10340  001C7E  6F00               	movwf	?___fladd& (0+255),b
 10341  001C80  0E00               	movlw	0
 10342  001C82  6F01               	movwf	(?___fladd+1)& (0+255),b
 10343  001C84  0E00               	movlw	0
 10344  001C86  6F02               	movwf	(?___fladd+2)& (0+255),b
 10345  001C88  0E00               	movlw	0
 10346  001C8A  6F03               	movwf	(?___fladd+3)& (0+255),b
 10347                           
 10348                           ; BSR set to: 1
 10349  001C8C  0012               	return	
 10350  001C8E                     l5078:
 10351                           
 10352                           ; BSR set to: 1
 10353  001C8E  0101               	movlb	1	; () banked
 10354  001C90  90D8               	bcf	status,0,c
 10355  001C92  3700               	rlcf	___fladd@b& (0+255),f,b
 10356  001C94  3701               	rlcf	(___fladd@b+1)& (0+255),f,b
 10357  001C96  3702               	rlcf	(___fladd@b+2)& (0+255),f,b
 10358  001C98  3703               	rlcf	(___fladd@b+3)& (0+255),f,b
 10359                           
 10360                           ; BSR set to: 1
 10361  001C9A  0101               	movlb	1	; () banked
 10362  001C9C  AF13               	btfss	___fladd@grs& (0+255),7,b
 10363  001C9E  D002               	goto	l5084
 10364                           
 10365                           ; BSR set to: 1
 10366  001CA0  0101               	movlb	1	; () banked
 10367  001CA2  8100               	bsf	___fladd@b& (0+255),0,b
 10368  001CA4                     l5084:
 10369                           
 10370                           ; BSR set to: 1
 10371  001CA4  0101               	movlb	1	; () banked
 10372  001CA6  A113               	btfss	___fladd@grs& (0+255),0,b
 10373  001CA8  D003               	goto	l5088
 10374                           
 10375                           ; BSR set to: 1
 10376  001CAA  80D8               	bsf	status,0,c
 10377  001CAC  0101               	movlb	1	; () banked
 10378  001CAE  D002               	goto	L6
 10379  001CB0                     l5088:
 10380                           
 10381                           ; BSR set to: 1
 10382  001CB0  0101               	movlb	1	; () banked
 10383  001CB2  90D8               	bcf	status,0,c
 10384  001CB4                     L6:
 10385  001CB4  3713               	rlcf	___fladd@grs& (0+255),f,b
 10386                           
 10387                           ; BSR set to: 1
 10388                           
 10389                           ; BSR set to: 1
 10390  001CB6  0101               	movlb	1	; () banked
 10391  001CB8  5112               	movf	___fladd@bexp& (0+255),w,b
 10392  001CBA  0101               	movlb	1	; () banked
 10393  001CBC  B4D8               	btfsc	status,2,c
 10394  001CBE  D002               	goto	l5094
 10395                           
 10396                           ; BSR set to: 1
 10397  001CC0  0101               	movlb	1	; () banked
 10398  001CC2  0712               	decf	___fladd@bexp& (0+255),f,b
 10399  001CC4                     l5094:
 10400                           
 10401                           ; BSR set to: 1
 10402  001CC4  0101               	movlb	1	; () banked
 10403  001CC6  AF02               	btfss	(___fladd@b+2)& (0+255),7,b
 10404  001CC8  D7E2               	goto	l5078
 10405  001CCA                     l5096:
 10406                           
 10407                           ; BSR set to: 1
 10408  001CCA  0E00               	movlw	0
 10409  001CCC  0101               	movlb	1	; () banked
 10410  001CCE  6F11               	movwf	___fladd@aexp& (0+255),b
 10411                           
 10412                           ; BSR set to: 1
 10413  001CD0  0101               	movlb	1	; () banked
 10414  001CD2  AF13               	btfss	___fladd@grs& (0+255),7,b
 10415  001CD4  D00D               	goto	l1192
 10416                           
 10417                           ; BSR set to: 1
 10418  001CD6  C113  F108         	movff	___fladd@grs,??___fladd
 10419  001CDA  0E7F               	movlw	127
 10420  001CDC  0101               	movlb	1	; () banked
 10421  001CDE  1708               	andwf	??___fladd& (0+255),f,b
 10422  001CE0  A4D8               	btfss	status,2,c
 10423  001CE2  D003               	goto	l5104
 10424                           
 10425                           ; BSR set to: 1
 10426                           
 10427                           ; BSR set to: 1
 10428  001CE4  0101               	movlb	1	; () banked
 10429  001CE6  A100               	btfss	___fladd@b& (0+255),0,b
 10430  001CE8  D003               	goto	l1192
 10431  001CEA                     l5104:
 10432                           
 10433                           ; BSR set to: 1
 10434  001CEA  0E01               	movlw	1
 10435  001CEC  0101               	movlb	1	; () banked
 10436  001CEE  6F11               	movwf	___fladd@aexp& (0+255),b
 10437  001CF0                     l1192:
 10438                           
 10439                           ; BSR set to: 1
 10440  001CF0  0101               	movlb	1	; () banked
 10441  001CF2  5111               	movf	___fladd@aexp& (0+255),w,b
 10442  001CF4  0101               	movlb	1	; () banked
 10443  001CF6  B4D8               	btfsc	status,2,c
 10444  001CF8  D026               	goto	l5114
 10445                           
 10446                           ; BSR set to: 1
 10447  001CFA  0E01               	movlw	1
 10448  001CFC  0101               	movlb	1	; () banked
 10449  001CFE  2700               	addwf	___fladd@b& (0+255),f,b
 10450  001D00  0E00               	movlw	0
 10451  001D02  2301               	addwfc	(___fladd@b+1)& (0+255),f,b
 10452  001D04  2302               	addwfc	(___fladd@b+2)& (0+255),f,b
 10453  001D06  2303               	addwfc	(___fladd@b+3)& (0+255),f,b
 10454                           
 10455                           ; BSR set to: 1
 10456  001D08  0101               	movlb	1	; () banked
 10457  001D0A  A103               	btfss	(___fladd@b+3)& (0+255),0,b
 10458  001D0C  D01C               	goto	l5114
 10459                           
 10460                           ; BSR set to: 1
 10461  001D0E  C100  F108         	movff	___fladd@b,??___fladd
 10462  001D12  C101  F109         	movff	___fladd@b+1,??___fladd+1
 10463  001D16  C102  F10A         	movff	___fladd@b+2,??___fladd+2
 10464  001D1A  C103  F10B         	movff	___fladd@b+3,??___fladd+3
 10465  001D1E  0101               	movlb	1	; () banked
 10466  001D20  350B               	rlcf	(??___fladd+3)& (0+255),w,b
 10467  001D22  330B               	rrcf	(??___fladd+3)& (0+255),f,b
 10468  001D24  330A               	rrcf	(??___fladd+2)& (0+255),f,b
 10469  001D26  3309               	rrcf	(??___fladd+1)& (0+255),f,b
 10470  001D28  3308               	rrcf	??___fladd& (0+255),f,b
 10471  001D2A  C108  F100         	movff	??___fladd,___fladd@b
 10472  001D2E  C109  F101         	movff	??___fladd+1,___fladd@b+1
 10473  001D32  C10A  F102         	movff	??___fladd+2,___fladd@b+2
 10474  001D36  C10B  F103         	movff	??___fladd+3,___fladd@b+3
 10475  001D3A  0101               	movlb	1	; () banked
 10476  001D3C  2912               	incf	___fladd@bexp& (0+255),w,b
 10477  001D3E  B4D8               	btfsc	status,2,c
 10478  001D40  D002               	goto	l5114
 10479                           
 10480                           ; BSR set to: 1
 10481  001D42  0101               	movlb	1	; () banked
 10482  001D44  2B12               	incf	___fladd@bexp& (0+255),f,b
 10483  001D46                     l5114:
 10484                           
 10485                           ; BSR set to: 1
 10486  001D46  0101               	movlb	1	; () banked
 10487  001D48  2912               	incf	___fladd@bexp& (0+255),w,b
 10488  001D4A  B4D8               	btfsc	status,2,c
 10489  001D4C  D005               	goto	l5118
 10490                           
 10491                           ; BSR set to: 1
 10492  001D4E  0101               	movlb	1	; () banked
 10493  001D50  5112               	movf	___fladd@bexp& (0+255),w,b
 10494  001D52  0101               	movlb	1	; () banked
 10495  001D54  A4D8               	btfss	status,2,c
 10496  001D56  D011               	goto	l5122
 10497  001D58                     l5118:
 10498                           
 10499                           ; BSR set to: 1
 10500  001D58  0E00               	movlw	0
 10501  001D5A  0101               	movlb	1	; () banked
 10502  001D5C  6F00               	movwf	___fladd@b& (0+255),b
 10503  001D5E  0E00               	movlw	0
 10504  001D60  6F01               	movwf	(___fladd@b+1)& (0+255),b
 10505  001D62  0E00               	movlw	0
 10506  001D64  6F02               	movwf	(___fladd@b+2)& (0+255),b
 10507  001D66  0E00               	movlw	0
 10508  001D68  6F03               	movwf	(___fladd@b+3)& (0+255),b
 10509  001D6A  0101               	movlb	1	; () banked
 10510  001D6C  5112               	movf	___fladd@bexp& (0+255),w,b
 10511  001D6E  0101               	movlb	1	; () banked
 10512  001D70  A4D8               	btfss	status,2,c
 10513  001D72  D003               	goto	l5122
 10514                           
 10515                           ; BSR set to: 1
 10516  001D74  0E00               	movlw	0
 10517  001D76  0101               	movlb	1	; () banked
 10518  001D78  6F10               	movwf	___fladd@signs& (0+255),b
 10519  001D7A                     l5122:
 10520                           
 10521                           ; BSR set to: 1
 10522  001D7A  0101               	movlb	1	; () banked
 10523  001D7C  A112               	btfss	___fladd@bexp& (0+255),0,b
 10524  001D7E  D003               	goto	l5126
 10525                           
 10526                           ; BSR set to: 1
 10527  001D80  0101               	movlb	1	; () banked
 10528  001D82  8F02               	bsf	(___fladd@b+2)& (0+255),7,b
 10529  001D84  D002               	goto	l5128
 10530  001D86                     l5126:
 10531                           
 10532                           ; BSR set to: 1
 10533  001D86  0101               	movlb	1	; () banked
 10534  001D88  9F02               	bcf	(___fladd@b+2)& (0+255),7,b
 10535  001D8A                     l5128:
 10536                           
 10537                           ; BSR set to: 1
 10538  001D8A  0101               	movlb	1	; () banked
 10539  001D8C  90D8               	bcf	status,0,c
 10540  001D8E  3112               	rrcf	___fladd@bexp& (0+255),w,b
 10541  001D90  0101               	movlb	1	; () banked
 10542  001D92  6F03               	movwf	(___fladd@b+3)& (0+255),b
 10543                           
 10544                           ; BSR set to: 1
 10545  001D94  0101               	movlb	1	; () banked
 10546  001D96  AF10               	btfss	___fladd@signs& (0+255),7,b
 10547  001D98  D002               	goto	l5134
 10548                           
 10549                           ; BSR set to: 1
 10550  001D9A  0101               	movlb	1	; () banked
 10551  001D9C  8F03               	bsf	(___fladd@b+3)& (0+255),7,b
 10552  001D9E                     l5134:
 10553                           
 10554                           ; BSR set to: 1
 10555  001D9E  C100  F100         	movff	___fladd@b,?___fladd
 10556  001DA2  C101  F101         	movff	___fladd@b+1,?___fladd+1
 10557  001DA6  C102  F102         	movff	___fladd@b+2,?___fladd+2
 10558  001DAA  C103  F103         	movff	___fladd@b+3,?___fladd+3
 10559  001DAE  0012               	return	
 10560  001DB0                     __end_of___fladd:
 10561                           	opt stack 0
 10562                           tblptru	equ	0xFF8
 10563                           tblptrh	equ	0xFF7
 10564                           tblptrl	equ	0xFF6
 10565                           tablat	equ	0xFF5
 10566                           prodh	equ	0xFF4
 10567                           prodl	equ	0xFF3
 10568                           intcon	equ	0xFF2
 10569                           intcon2	equ	0xFF1
 10570                           postinc0	equ	0xFEE
 10571                           wreg	equ	0xFE8
 10572                           postdec1	equ	0xFE5
 10573                           fsr1l	equ	0xFE1
 10574                           indf2	equ	0xFDF
 10575                           fsr2h	equ	0xFDA
 10576                           fsr2l	equ	0xFD9
 10577                           status	equ	0xFD8
 10578                           
 10579 ;; *************** function ___awdiv *****************
 10580 ;; Defined at:
 10581 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;  dividend        2   19[BANK0 ] int 
 10584 ;;  divisor         2   21[BANK0 ] int 
 10585 ;; Auto vars:     Size  Location     Type
 10586 ;;  quotient        2   25[BANK0 ] int 
 10587 ;;  sign            1   24[BANK0 ] unsigned char 
 10588 ;;  counter         1   23[BANK0 ] unsigned char 
 10589 ;; Return value:  Size  Location     Type
 10590 ;;                  2   19[BANK0 ] int 
 10591 ;; Registers used:
 10592 ;;		wreg, status,2, status,0
 10593 ;; Tracked objects:
 10594 ;;		On entry : 0/0
 10595 ;;		On exit  : 0/0
 10596 ;;		Unchanged: 0/0
 10597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10598 ;;      Params:         0       4       0       0
 10599 ;;      Locals:         0       4       0       0
 10600 ;;      Temps:          0       0       0       0
 10601 ;;      Totals:         0       8       0       0
 10602 ;;Total ram usage:        8 bytes
 10603 ;; Hardware stack levels used:    1
 10604 ;; Hardware stack levels required when called:    4
 10605 ;; This function calls:
 10606 ;;		Nothing
 10607 ;; This function is called by:
 10608 ;;		_main
 10609 ;; This function uses a non-reentrant model
 10610 ;;
 10611                           
 10612                           	psect	text26
 10613  0033C6                     __ptext26:
 10614                           	opt stack 0
 10615  0033C6                     ___awdiv:
 10616                           	opt stack 26
 10617                           
 10618                           ; BSR set to: 1
 10619                           ;incstack = 0
 10620  0033C6  0E00               	movlw	0
 10621  0033C8  0100               	movlb	0	; () banked
 10622  0033CA  6F78               	movwf	___awdiv@sign& (0+255),b
 10623                           
 10624                           ; BSR set to: 0
 10625  0033CC  0100               	movlb	0	; () banked
 10626  0033CE  AF76               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10627  0033D0  D008               	goto	l4638
 10628                           
 10629                           ; BSR set to: 0
 10630  0033D2  0100               	movlb	0	; () banked
 10631  0033D4  6D75               	negf	___awdiv@divisor& (0+255),b
 10632  0033D6  1F76               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10633  0033D8  B0D8               	btfsc	status,0,c
 10634  0033DA  2B76               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10635                           
 10636                           ; BSR set to: 0
 10637  0033DC  0E01               	movlw	1
 10638  0033DE  0100               	movlb	0	; () banked
 10639  0033E0  6F78               	movwf	___awdiv@sign& (0+255),b
 10640  0033E2                     l4638:
 10641                           
 10642                           ; BSR set to: 0
 10643  0033E2  0100               	movlb	0	; () banked
 10644  0033E4  AF74               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10645  0033E6  D008               	goto	l4644
 10646                           
 10647                           ; BSR set to: 0
 10648  0033E8  0100               	movlb	0	; () banked
 10649  0033EA  6D73               	negf	___awdiv@dividend& (0+255),b
 10650  0033EC  1F74               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10651  0033EE  B0D8               	btfsc	status,0,c
 10652  0033F0  2B74               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10653                           
 10654                           ; BSR set to: 0
 10655  0033F2  0E01               	movlw	1
 10656  0033F4  0100               	movlb	0	; () banked
 10657  0033F6  1B78               	xorwf	___awdiv@sign& (0+255),f,b
 10658  0033F8                     l4644:
 10659                           
 10660                           ; BSR set to: 0
 10661  0033F8  0E00               	movlw	0
 10662  0033FA  0100               	movlb	0	; () banked
 10663  0033FC  6F7A               	movwf	(___awdiv@quotient+1)& (0+255),b
 10664  0033FE  0E00               	movlw	0
 10665  003400  6F79               	movwf	___awdiv@quotient& (0+255),b
 10666                           
 10667                           ; BSR set to: 0
 10668  003402  0100               	movlb	0	; () banked
 10669  003404  5175               	movf	___awdiv@divisor& (0+255),w,b
 10670  003406  0100               	movlb	0	; () banked
 10671  003408  1176               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10672  00340A  B4D8               	btfsc	status,2,c
 10673  00340C  D02C               	goto	l4666
 10674                           
 10675                           ; BSR set to: 0
 10676  00340E  0E01               	movlw	1
 10677  003410  0100               	movlb	0	; () banked
 10678  003412  6F77               	movwf	___awdiv@counter& (0+255),b
 10679  003414  D006               	goto	l4652
 10680  003416                     l4650:
 10681                           
 10682                           ; BSR set to: 0
 10683  003416  0100               	movlb	0	; () banked
 10684  003418  90D8               	bcf	status,0,c
 10685  00341A  3775               	rlcf	___awdiv@divisor& (0+255),f,b
 10686  00341C  3776               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10687  00341E  0100               	movlb	0	; () banked
 10688  003420  2B77               	incf	___awdiv@counter& (0+255),f,b
 10689  003422                     l4652:
 10690                           
 10691                           ; BSR set to: 0
 10692  003422  0100               	movlb	0	; () banked
 10693  003424  AF76               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10694  003426  D7F7               	goto	l4650
 10695  003428                     l4654:
 10696                           
 10697                           ; BSR set to: 0
 10698  003428  0100               	movlb	0	; () banked
 10699  00342A  90D8               	bcf	status,0,c
 10700  00342C  3779               	rlcf	___awdiv@quotient& (0+255),f,b
 10701  00342E  377A               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10702                           
 10703                           ; BSR set to: 0
 10704  003430  0100               	movlb	0	; () banked
 10705  003432  5175               	movf	___awdiv@divisor& (0+255),w,b
 10706  003434  0100               	movlb	0	; () banked
 10707  003436  5D73               	subwf	___awdiv@dividend& (0+255),w,b
 10708  003438  0100               	movlb	0	; () banked
 10709  00343A  5176               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10710  00343C  0100               	movlb	0	; () banked
 10711  00343E  5974               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10712  003440  A0D8               	btfss	status,0,c
 10713  003442  D00A               	goto	l4662
 10714                           
 10715                           ; BSR set to: 0
 10716  003444  0100               	movlb	0	; () banked
 10717  003446  5175               	movf	___awdiv@divisor& (0+255),w,b
 10718  003448  0100               	movlb	0	; () banked
 10719  00344A  5F73               	subwf	___awdiv@dividend& (0+255),f,b
 10720  00344C  0100               	movlb	0	; () banked
 10721  00344E  5176               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10722  003450  0100               	movlb	0	; () banked
 10723  003452  5B74               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10724                           
 10725                           ; BSR set to: 0
 10726  003454  0100               	movlb	0	; () banked
 10727  003456  8179               	bsf	___awdiv@quotient& (0+255),0,b
 10728  003458                     l4662:
 10729                           
 10730                           ; BSR set to: 0
 10731  003458  0100               	movlb	0	; () banked
 10732  00345A  90D8               	bcf	status,0,c
 10733  00345C  3376               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10734  00345E  3375               	rrcf	___awdiv@divisor& (0+255),f,b
 10735                           
 10736                           ; BSR set to: 0
 10737  003460  0100               	movlb	0	; () banked
 10738  003462  2F77               	decfsz	___awdiv@counter& (0+255),f,b
 10739  003464  D7E1               	goto	l4654
 10740  003466                     l4666:
 10741                           
 10742                           ; BSR set to: 0
 10743  003466  0100               	movlb	0	; () banked
 10744  003468  5178               	movf	___awdiv@sign& (0+255),w,b
 10745  00346A  0100               	movlb	0	; () banked
 10746  00346C  B4D8               	btfsc	status,2,c
 10747  00346E  D005               	goto	l4670
 10748                           
 10749                           ; BSR set to: 0
 10750  003470  0100               	movlb	0	; () banked
 10751  003472  6D79               	negf	___awdiv@quotient& (0+255),b
 10752  003474  1F7A               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10753  003476  B0D8               	btfsc	status,0,c
 10754  003478  2B7A               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10755  00347A                     l4670:
 10756                           
 10757                           ; BSR set to: 0
 10758  00347A  C079  F073         	movff	___awdiv@quotient,?___awdiv
 10759  00347E  C07A  F074         	movff	___awdiv@quotient+1,?___awdiv+1
 10760  003482  0012               	return	
 10761  003484                     __end_of___awdiv:
 10762                           	opt stack 0
 10763                           tblptru	equ	0xFF8
 10764                           tblptrh	equ	0xFF7
 10765                           tblptrl	equ	0xFF6
 10766                           tablat	equ	0xFF5
 10767                           prodh	equ	0xFF4
 10768                           prodl	equ	0xFF3
 10769                           intcon	equ	0xFF2
 10770                           intcon2	equ	0xFF1
 10771                           postinc0	equ	0xFEE
 10772                           wreg	equ	0xFE8
 10773                           postdec1	equ	0xFE5
 10774                           fsr1l	equ	0xFE1
 10775                           indf2	equ	0xFDF
 10776                           fsr2h	equ	0xFDA
 10777                           fsr2l	equ	0xFD9
 10778                           status	equ	0xFD8
 10779                           
 10780 ;; *************** function _CANisTXwarningON *****************
 10781 ;; Defined at:
 10782 ;;		line 1119 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;		None
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;		None
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  1    wreg      unsigned char 
 10789 ;; Registers used:
 10790 ;;		wreg
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10796 ;;      Params:         0       0       0       0
 10797 ;;      Locals:         0       0       0       0
 10798 ;;      Temps:          0       0       0       0
 10799 ;;      Totals:         0       0       0       0
 10800 ;;Total ram usage:        0 bytes
 10801 ;; Hardware stack levels used:    1
 10802 ;; Hardware stack levels required when called:    4
 10803 ;; This function calls:
 10804 ;;		Nothing
 10805 ;; This function is called by:
 10806 ;;		_main
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           
 10810                           	psect	text27
 10811  00399A                     __ptext27:
 10812                           	opt stack 0
 10813  00399A                     _CANisTXwarningON:
 10814                           	opt stack 26
 10815                           
 10816                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
 10817                           
 10818                           ; BSR set to: 0
 10819                           ;incstack = 0
 10820  00399A  A474               	btfss	3956,2,c	;volatile
 10821  00399C  D002               	goto	u4880
 10822  00399E  0E01               	movlw	1
 10823  0039A0  0012               	return	
 10824  0039A2                     u4880:
 10825  0039A2  0E00               	movlw	0
 10826  0039A4  0012               	return	
 10827  0039A6                     __end_of_CANisTXwarningON:
 10828                           	opt stack 0
 10829                           tblptru	equ	0xFF8
 10830                           tblptrh	equ	0xFF7
 10831                           tblptrl	equ	0xFF6
 10832                           tablat	equ	0xFF5
 10833                           prodh	equ	0xFF4
 10834                           prodl	equ	0xFF3
 10835                           intcon	equ	0xFF2
 10836                           intcon2	equ	0xFF1
 10837                           postinc0	equ	0xFEE
 10838                           wreg	equ	0xFE8
 10839                           postdec1	equ	0xFE5
 10840                           fsr1l	equ	0xFE1
 10841                           indf2	equ	0xFDF
 10842                           fsr2h	equ	0xFDA
 10843                           fsr2l	equ	0xFD9
 10844                           status	equ	0xFD8
 10845                           
 10846 ;; *************** function _CANisRXwarningON *****************
 10847 ;; Defined at:
 10848 ;;		line 1127 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 10849 ;; Parameters:    Size  Location     Type
 10850 ;;		None
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;		None
 10853 ;; Return value:  Size  Location     Type
 10854 ;;                  1    wreg      unsigned char 
 10855 ;; Registers used:
 10856 ;;		wreg
 10857 ;; Tracked objects:
 10858 ;;		On entry : 0/0
 10859 ;;		On exit  : 0/0
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10862 ;;      Params:         0       0       0       0
 10863 ;;      Locals:         0       0       0       0
 10864 ;;      Temps:          0       0       0       0
 10865 ;;      Totals:         0       0       0       0
 10866 ;;Total ram usage:        0 bytes
 10867 ;; Hardware stack levels used:    1
 10868 ;; Hardware stack levels required when called:    4
 10869 ;; This function calls:
 10870 ;;		Nothing
 10871 ;; This function is called by:
 10872 ;;		_main
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           	psect	text28
 10877  0039A6                     __ptext28:
 10878                           	opt stack 0
 10879  0039A6                     _CANisRXwarningON:
 10880                           	opt stack 26
 10881                           
 10882                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
 10883                           
 10884                           ;incstack = 0
 10885  0039A6  A274               	btfss	3956,1,c	;volatile
 10886  0039A8  D002               	goto	u4890
 10887  0039AA  0E01               	movlw	1
 10888  0039AC  0012               	return	
 10889  0039AE                     u4890:
 10890  0039AE  0E00               	movlw	0
 10891  0039B0  0012               	return	
 10892  0039B2                     __end_of_CANisRXwarningON:
 10893                           	opt stack 0
 10894                           tblptru	equ	0xFF8
 10895                           tblptrh	equ	0xFF7
 10896                           tblptrl	equ	0xFF6
 10897                           tablat	equ	0xFF5
 10898                           prodh	equ	0xFF4
 10899                           prodl	equ	0xFF3
 10900                           intcon	equ	0xFF2
 10901                           intcon2	equ	0xFF1
 10902                           postinc0	equ	0xFEE
 10903                           wreg	equ	0xFE8
 10904                           postdec1	equ	0xFE5
 10905                           fsr1l	equ	0xFE1
 10906                           indf2	equ	0xFDF
 10907                           fsr2h	equ	0xFDA
 10908                           fsr2l	equ	0xFD9
 10909                           status	equ	0xFD8
 10910                           
 10911 ;; *************** function _ISR_bassa *****************
 10912 ;; Defined at:
 10913 ;;		line 75 in file "newmain.c"
 10914 ;; Parameters:    Size  Location     Type
 10915 ;;		None
 10916 ;; Auto vars:     Size  Location     Type
 10917 ;;		None
 10918 ;; Return value:  Size  Location     Type
 10919 ;;		None               void
 10920 ;; Registers used:
 10921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10922 ;; Tracked objects:
 10923 ;;		On entry : 0/0
 10924 ;;		On exit  : 0/0
 10925 ;;		Unchanged: 0/0
 10926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10927 ;;      Params:         0       0       0       0
 10928 ;;      Locals:         0       0       0       0
 10929 ;;      Temps:         19       0       0       0
 10930 ;;      Totals:        19       0       0       0
 10931 ;;Total ram usage:       19 bytes
 10932 ;; Hardware stack levels used:    1
 10933 ;; Hardware stack levels required when called:    3
 10934 ;; This function calls:
 10935 ;;		_CANisRxReady
 10936 ;;		_CANreceiveMessage
 10937 ;; This function is called by:
 10938 ;;		Interrupt level 1
 10939 ;; This function uses a non-reentrant model
 10940 ;;
 10941                           
 10942                           	psect	intcodelo
 10943  000018                     __pintcodelo:
 10944                           	opt stack 0
 10945  000018                     _ISR_bassa:
 10946                           	opt stack 24
 10947                           
 10948                           ;incstack = 0
 10949  000018  8045               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 10950  00001A  CFD8 F02F          	movff	status,??_ISR_bassa+2
 10951  00001E  CFE8 F030          	movff	wreg,??_ISR_bassa+3
 10952  000022  CFE0 F031          	movff	bsr,??_ISR_bassa+4
 10953  000026  CFFA F032          	movff	pclath,??_ISR_bassa+5
 10954  00002A  CFFB F033          	movff	pclatu,??_ISR_bassa+6
 10955  00002E  CFE9 F034          	movff	fsr0l,??_ISR_bassa+7
 10956  000032  CFEA F035          	movff	fsr0h,??_ISR_bassa+8
 10957  000036  CFE1 F036          	movff	fsr1l,??_ISR_bassa+9
 10958  00003A  CFE2 F037          	movff	fsr1h,??_ISR_bassa+10
 10959  00003E  CFD9 F038          	movff	fsr2l,??_ISR_bassa+11
 10960  000042  CFDA F039          	movff	fsr2h,??_ISR_bassa+12
 10961  000046  CFF3 F03A          	movff	prodl,??_ISR_bassa+13
 10962  00004A  CFF4 F03B          	movff	prodh,??_ISR_bassa+14
 10963  00004E  CFF6 F03C          	movff	tblptrl,??_ISR_bassa+15
 10964  000052  CFF7 F03D          	movff	tblptrh,??_ISR_bassa+16
 10965  000056  CFF8 F03E          	movff	tblptru,??_ISR_bassa+17
 10966  00005A  CFF5 F03F          	movff	tablat,??_ISR_bassa+18
 10967                           
 10968                           ;newmain.c: 76: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 10969  00005E  A0A4               	btfss	4004,0,c	;volatile
 10970  000060  B2A4               	btfsc	4004,1,c	;volatile
 10971  000062  D001               	goto	i1l4822
 10972  000064  D04F               	goto	i1l4854
 10973  000066                     i1l4822:
 10974                           
 10975                           ;newmain.c: 77: if (CANisRxReady()) {
 10976  000066  ECAA  F01C         	call	_CANisRxReady	;wreg free
 10977  00006A  0900               	iorlw	0
 10978  00006C  B4D8               	btfsc	status,2,c
 10979  00006E  D048               	goto	i1l4850
 10980                           
 10981                           ;newmain.c: 78: CANreceiveMessage(&msg);
 10982  000070  0E12               	movlw	low _msg
 10983  000072  6E21               	movwf	CANreceiveMessage@msg,c
 10984  000074  0E00               	movlw	high _msg
 10985  000076  6E22               	movwf	CANreceiveMessage@msg+1,c
 10986  000078  ECFE  F009         	call	_CANreceiveMessage	;wreg free
 10987                           
 10988                           ;newmain.c: 79: if (msg.RTR == 1) {
 10989  00007C  0420               	decf	_msg+14,w,c
 10990  00007E  A4D8               	btfss	status,2,c
 10991  000080  D00D               	goto	i1l4830
 10992                           
 10993                           ;newmain.c: 80: id = msg.identifier;
 10994  000082  C012  F0CD         	movff	_msg,_id
 10995  000086  C013  F0CE         	movff	_msg+1,_id+1
 10996  00008A  C014  F0CF         	movff	_msg+2,_id+2
 10997  00008E  C015  F0D0         	movff	_msg+3,_id+3
 10998                           
 10999                           ;newmain.c: 81: remote_frame = msg.RTR;
 11000  000092  A020               	btfss	_msg+14,0,c
 11001  000094  D002               	goto	i1u614_20
 11002  000096  8044               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
 11003  000098  D001               	goto	i1l4830
 11004  00009A                     i1u614_20:
 11005  00009A  9044               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
 11006  00009C                     i1l4830:
 11007                           
 11008                           ;newmain.c: 82: }
 11009                           ;newmain.c: 83: if (msg.identifier == 0b10000000000000000000000000000) {
 11010  00009C  0E10               	movlw	16
 11011  00009E  1815               	xorwf	_msg+3,w,c
 11012  0000A0  1012               	iorwf	_msg,w,c
 11013  0000A2  1013               	iorwf	_msg+1,w,c
 11014  0000A4  1014               	iorwf	_msg+2,w,c
 11015  0000A6  A4D8               	btfss	status,2,c
 11016  0000A8  D016               	goto	i1l4842
 11017                           
 11018                           ;newmain.c: 84: data_array[0] = theorySteering;
 11019  0000AA  C011  F0DF         	movff	_theorySteering,_data_array
 11020                           
 11021                           ;newmain.c: 85: if (theorySteering <= limiteDx) {
 11022  0000AE  5011               	movf	_theorySteering,w,c
 11023  0000B0  6E2D               	movwf	??_ISR_bassa& (0+255),c
 11024  0000B2  6A2E               	clrf	(??_ISR_bassa+1)& (0+255),c
 11025  0000B4  502D               	movf	??_ISR_bassa,w,c
 11026  0000B6  5C0B               	subwf	_limiteDx,w,c
 11027  0000B8  502E               	movf	??_ISR_bassa+1,w,c
 11028  0000BA  580C               	subwfb	_limiteDx+1,w,c
 11029  0000BC  B0D8               	btfsc	status,0,c
 11030                           
 11031                           ;newmain.c: 86: theorySteering = limiteDx;
 11032  0000BE  C00B  F011         	movff	_limiteDx,_theorySteering
 11033                           
 11034                           ;newmain.c: 87: }
 11035                           ;newmain.c: 88: if (theorySteering >= limiteSx) {
 11036  0000C2  5011               	movf	_theorySteering,w,c
 11037  0000C4  6E2D               	movwf	??_ISR_bassa& (0+255),c
 11038  0000C6  6A2E               	clrf	(??_ISR_bassa+1)& (0+255),c
 11039  0000C8  5040               	movf	_limiteSx,w,c
 11040  0000CA  5C2D               	subwf	??_ISR_bassa,w,c
 11041  0000CC  5041               	movf	_limiteSx+1,w,c
 11042  0000CE  582E               	subwfb	??_ISR_bassa+1,w,c
 11043  0000D0  B0D8               	btfsc	status,0,c
 11044                           
 11045                           ;newmain.c: 89: theorySteering = limiteSx;
 11046  0000D2  C040  F011         	movff	_limiteSx,_theorySteering
 11047  0000D6                     i1l4842:
 11048                           
 11049                           ;newmain.c: 90: }
 11050                           ;newmain.c: 91: }
 11051                           ;newmain.c: 92: if (msg.identifier == 0b00000000000000000000000000011) {
 11052  0000D6  0E03               	movlw	3
 11053  0000D8  1812               	xorwf	_msg,w,c
 11054  0000DA  1013               	iorwf	_msg+1,w,c
 11055  0000DC  1014               	iorwf	_msg+2,w,c
 11056  0000DE  1015               	iorwf	_msg+3,w,c
 11057  0000E0  A4D8               	btfss	status,2,c
 11058  0000E2  D00E               	goto	i1l4850
 11059                           
 11060                           ;newmain.c: 94: theorySteering = msg.data[0];
 11061  0000E4  C016  F011         	movff	_msg+4,_theorySteering
 11062                           
 11063                           ;newmain.c: 95: currentSteering = theorySteering + calibration;
 11064  0000E8  5011               	movf	_theorySteering,w,c
 11065  0000EA  2409               	addwf	_calibration,w,c
 11066  0000EC  0100               	movlb	0	; () banked
 11067  0000EE  6FE7               	movwf	_currentSteering& (0+255),b
 11068                           
 11069                           ; BSR set to: 0
 11070                           ;newmain.c: 96: previousTimeCounter = timeCounter;
 11071  0000F0  C005  F0D1         	movff	_timeCounter,_previousTimeCounter
 11072  0000F4  C006  F0D2         	movff	_timeCounter+1,_previousTimeCounter+1
 11073  0000F8  C007  F0D3         	movff	_timeCounter+2,_previousTimeCounter+2
 11074  0000FC  C008  F0D4         	movff	_timeCounter+3,_previousTimeCounter+3
 11075  000100                     i1l4850:
 11076                           
 11077                           ;newmain.c: 97: }
 11078                           ;newmain.c: 98: }
 11079                           ;newmain.c: 99: PIR3bits.RXB0IF = 0;
 11080  000100  90A4               	bcf	4004,0,c	;volatile
 11081                           
 11082                           ;newmain.c: 100: PIR3bits.RXB1IF = 0;
 11083  000102  92A4               	bcf	4004,1,c	;volatile
 11084  000104                     i1l4854:
 11085                           
 11086                           ;newmain.c: 101: }
 11087                           ;newmain.c: 102: if (PIR2bits.TMR3IF) {
 11088  000104  A2A1               	btfss	4001,1,c	;volatile
 11089  000106  D00B               	goto	i1l651
 11090                           
 11091                           ;newmain.c: 103: timeCounter++;
 11092  000108  0E01               	movlw	1
 11093  00010A  2605               	addwf	_timeCounter,f,c
 11094  00010C  0E00               	movlw	0
 11095  00010E  2206               	addwfc	_timeCounter+1,f,c
 11096  000110  2207               	addwfc	_timeCounter+2,f,c
 11097  000112  2208               	addwfc	_timeCounter+3,f,c
 11098                           
 11099                           ;newmain.c: 104: TMR3H = 0x63;
 11100  000114  0E63               	movlw	99
 11101  000116  6EB3               	movwf	4019,c	;volatile
 11102                           
 11103                           ;newmain.c: 105: TMR3L = 0xC0;
 11104  000118  0EC0               	movlw	192
 11105  00011A  6EB2               	movwf	4018,c	;volatile
 11106                           
 11107                           ;newmain.c: 106: PIR2bits.TMR3IF = 0;
 11108  00011C  92A1               	bcf	4001,1,c	;volatile
 11109  00011E                     i1l651:
 11110  00011E  C03F  FFF5         	movff	??_ISR_bassa+18,tablat
 11111  000122  C03E  FFF8         	movff	??_ISR_bassa+17,tblptru
 11112  000126  C03D  FFF7         	movff	??_ISR_bassa+16,tblptrh
 11113  00012A  C03C  FFF6         	movff	??_ISR_bassa+15,tblptrl
 11114  00012E  C03B  FFF4         	movff	??_ISR_bassa+14,prodh
 11115  000132  C03A  FFF3         	movff	??_ISR_bassa+13,prodl
 11116  000136  C039  FFDA         	movff	??_ISR_bassa+12,fsr2h
 11117  00013A  C038  FFD9         	movff	??_ISR_bassa+11,fsr2l
 11118  00013E  C037  FFE2         	movff	??_ISR_bassa+10,fsr1h
 11119  000142  C036  FFE1         	movff	??_ISR_bassa+9,fsr1l
 11120  000146  C035  FFEA         	movff	??_ISR_bassa+8,fsr0h
 11121  00014A  C034  FFE9         	movff	??_ISR_bassa+7,fsr0l
 11122  00014E  C033  FFFB         	movff	??_ISR_bassa+6,pclatu
 11123  000152  C032  FFFA         	movff	??_ISR_bassa+5,pclath
 11124  000156  C031  FFE0         	movff	??_ISR_bassa+4,bsr
 11125  00015A  C030  FFE8         	movff	??_ISR_bassa+3,wreg
 11126  00015E  C02F  FFD8         	movff	??_ISR_bassa+2,status
 11127  000162  9045               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 11128  000164  0010               	retfie	
 11129  000166                     __end_of_ISR_bassa:
 11130                           	opt stack 0
 11131                           pclatu	equ	0xFFB
 11132                           pclath	equ	0xFFA
 11133                           tblptru	equ	0xFF8
 11134                           tblptrh	equ	0xFF7
 11135                           tblptrl	equ	0xFF6
 11136                           tablat	equ	0xFF5
 11137                           prodh	equ	0xFF4
 11138                           prodl	equ	0xFF3
 11139                           intcon	equ	0xFF2
 11140                           intcon2	equ	0xFF1
 11141                           postinc0	equ	0xFEE
 11142                           fsr0h	equ	0xFEA
 11143                           fsr0l	equ	0xFE9
 11144                           wreg	equ	0xFE8
 11145                           postdec1	equ	0xFE5
 11146                           fsr1h	equ	0xFE2
 11147                           fsr1l	equ	0xFE1
 11148                           bsr	equ	0xFE0
 11149                           indf2	equ	0xFDF
 11150                           fsr2h	equ	0xFDA
 11151                           fsr2l	equ	0xFD9
 11152                           status	equ	0xFD8
 11153                           
 11154 ;; *************** function _CANreceiveMessage *****************
 11155 ;; Defined at:
 11156 ;;		line 528 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 11157 ;; Parameters:    Size  Location     Type
 11158 ;;  msg             2    0[COMRAM] PTR struct .
 11159 ;;		 -> msg(15), 
 11160 ;; Auto vars:     Size  Location     Type
 11161 ;;  tamp            1   11[COMRAM] unsigned char 
 11162 ;;  error           1   10[COMRAM] unsigned char 
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  1    wreg      unsigned char 
 11165 ;; Registers used:
 11166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11172 ;;      Params:         2       0       0       0
 11173 ;;      Locals:         2       0       0       0
 11174 ;;      Temps:          8       0       0       0
 11175 ;;      Totals:        12       0       0       0
 11176 ;;Total ram usage:       12 bytes
 11177 ;; Hardware stack levels used:    1
 11178 ;; Hardware stack levels required when called:    2
 11179 ;; This function calls:
 11180 ;;		Nothing
 11181 ;; This function is called by:
 11182 ;;		_ISR_bassa
 11183 ;; This function uses a non-reentrant model
 11184 ;;
 11185                           
 11186                           	psect	text30
 11187  0013FC                     __ptext30:
 11188                           	opt stack 0
 11189  0013FC                     _CANreceiveMessage:
 11190                           	opt stack 24
 11191                           
 11192                           ;inc\CANlib.h: 530: BYTE tamp;
 11193                           ;inc\CANlib.h: 531: BYTE error = 0;
 11194                           
 11195                           ;incstack = 0
 11196  0013FC  0E00               	movlw	0
 11197  0013FE  6E2B               	movwf	CANreceiveMessage@error,c
 11198                           
 11199                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 11200  001400  BE74               	btfsc	3956,7,c	;volatile
 11201                           
 11202                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 11203  001402  802B               	bsf	CANreceiveMessage@error,0,c
 11204                           
 11205                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 11206  001404  BC74               	btfsc	3956,6,c	;volatile
 11207                           
 11208                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 11209  001406  822B               	bsf	CANreceiveMessage@error,1,c
 11210                           
 11211                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 11212  001408  010F               	movlb	15	; () banked
 11213  00140A  AF50               	btfss	80,7,b	;volatile
 11214  00140C  D143               	goto	i1l416
 11215                           
 11216                           ; BSR set to: 15
 11217                           ;inc\CANlib.h: 541: {
 11218                           ;inc\CANlib.h: 542: msg->identifier = 0;
 11219  00140E  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11220  001412  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11221  001416  6ADE               	clrf	postinc2,c
 11222  001418  6ADE               	clrf	postinc2,c
 11223  00141A  6ADE               	clrf	postinc2,c
 11224  00141C  6ADD               	clrf	postdec2,c
 11225                           
 11226                           ; BSR set to: 15
 11227                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 11228  00141E  EE20 F004          	lfsr	2,4
 11229  001422  5021               	movf	CANreceiveMessage@msg,w,c
 11230  001424  26D9               	addwf	fsr2l,f,c
 11231  001426  5022               	movf	CANreceiveMessage@msg+1,w,c
 11232  001428  22DA               	addwfc	fsr2h,f,c
 11233  00142A  CF56 FFDF          	movff	3926,indf2	;volatile
 11234                           
 11235                           ; BSR set to: 15
 11236                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 11237  00142E  EE20 F005          	lfsr	2,5
 11238  001432  5021               	movf	CANreceiveMessage@msg,w,c
 11239  001434  26D9               	addwf	fsr2l,f,c
 11240  001436  5022               	movf	CANreceiveMessage@msg+1,w,c
 11241  001438  22DA               	addwfc	fsr2h,f,c
 11242  00143A  CF57 FFDF          	movff	3927,indf2	;volatile
 11243                           
 11244                           ; BSR set to: 15
 11245                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 11246  00143E  EE20 F006          	lfsr	2,6
 11247  001442  5021               	movf	CANreceiveMessage@msg,w,c
 11248  001444  26D9               	addwf	fsr2l,f,c
 11249  001446  5022               	movf	CANreceiveMessage@msg+1,w,c
 11250  001448  22DA               	addwfc	fsr2h,f,c
 11251  00144A  CF58 FFDF          	movff	3928,indf2	;volatile
 11252                           
 11253                           ; BSR set to: 15
 11254                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 11255  00144E  EE20 F007          	lfsr	2,7
 11256  001452  5021               	movf	CANreceiveMessage@msg,w,c
 11257  001454  26D9               	addwf	fsr2l,f,c
 11258  001456  5022               	movf	CANreceiveMessage@msg+1,w,c
 11259  001458  22DA               	addwfc	fsr2h,f,c
 11260  00145A  CF59 FFDF          	movff	3929,indf2	;volatile
 11261                           
 11262                           ; BSR set to: 15
 11263                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 11264  00145E  EE20 F008          	lfsr	2,8
 11265  001462  5021               	movf	CANreceiveMessage@msg,w,c
 11266  001464  26D9               	addwf	fsr2l,f,c
 11267  001466  5022               	movf	CANreceiveMessage@msg+1,w,c
 11268  001468  22DA               	addwfc	fsr2h,f,c
 11269  00146A  CF5A FFDF          	movff	3930,indf2	;volatile
 11270                           
 11271                           ; BSR set to: 15
 11272                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 11273  00146E  EE20 F009          	lfsr	2,9
 11274  001472  5021               	movf	CANreceiveMessage@msg,w,c
 11275  001474  26D9               	addwf	fsr2l,f,c
 11276  001476  5022               	movf	CANreceiveMessage@msg+1,w,c
 11277  001478  22DA               	addwfc	fsr2h,f,c
 11278  00147A  CF5B FFDF          	movff	3931,indf2	;volatile
 11279                           
 11280                           ; BSR set to: 15
 11281                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 11282  00147E  EE20 F00A          	lfsr	2,10
 11283  001482  5021               	movf	CANreceiveMessage@msg,w,c
 11284  001484  26D9               	addwf	fsr2l,f,c
 11285  001486  5022               	movf	CANreceiveMessage@msg+1,w,c
 11286  001488  22DA               	addwfc	fsr2h,f,c
 11287  00148A  CF5C FFDF          	movff	3932,indf2	;volatile
 11288                           
 11289                           ; BSR set to: 15
 11290                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 11291  00148E  EE20 F00B          	lfsr	2,11
 11292  001492  5021               	movf	CANreceiveMessage@msg,w,c
 11293  001494  26D9               	addwf	fsr2l,f,c
 11294  001496  5022               	movf	CANreceiveMessage@msg+1,w,c
 11295  001498  22DA               	addwfc	fsr2h,f,c
 11296  00149A  CF5D FFDF          	movff	3933,indf2	;volatile
 11297                           
 11298                           ; BSR set to: 15
 11299                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 11300  00149E  EE20 F00E          	lfsr	2,14
 11301  0014A2  5021               	movf	CANreceiveMessage@msg,w,c
 11302  0014A4  26D9               	addwf	fsr2l,f,c
 11303  0014A6  5022               	movf	CANreceiveMessage@msg+1,w,c
 11304  0014A8  22DA               	addwfc	fsr2h,f,c
 11305  0014AA  010F               	movlb	15	; () banked
 11306  0014AC  AD55               	btfss	85,6,b	;volatile
 11307  0014AE  D002               	goto	i1u467_20
 11308  0014B0  0E01               	movlw	1
 11309  0014B2  D001               	goto	i1u467_26
 11310  0014B4                     i1u467_20:
 11311  0014B4  0E00               	movlw	0
 11312  0014B6                     i1u467_26:
 11313  0014B6  6EDF               	movwf	indf2,c
 11314                           
 11315                           ; BSR set to: 15
 11316                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 11317  0014B8  EE20 F00D          	lfsr	2,13
 11318  0014BC  5021               	movf	CANreceiveMessage@msg,w,c
 11319  0014BE  26D9               	addwf	fsr2l,f,c
 11320  0014C0  5022               	movf	CANreceiveMessage@msg+1,w,c
 11321  0014C2  22DA               	addwfc	fsr2h,f,c
 11322  0014C4  010F               	movlb	15	; () banked
 11323  0014C6  5155               	movf	85,w,b	;volatile
 11324  0014C8  0B0F               	andlw	15
 11325  0014CA  6EDF               	movwf	indf2,c
 11326                           
 11327                           ; BSR set to: 15
 11328                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 11329  0014CC  EE20 F00C          	lfsr	2,12
 11330  0014D0  5021               	movf	CANreceiveMessage@msg,w,c
 11331  0014D2  26D9               	addwf	fsr2l,f,c
 11332  0014D4  5022               	movf	CANreceiveMessage@msg+1,w,c
 11333  0014D6  22DA               	addwfc	fsr2h,f,c
 11334  0014D8  010F               	movlb	15	; () banked
 11335  0014DA  A752               	btfss	82,3,b	;volatile
 11336  0014DC  D002               	goto	i1u468_20
 11337  0014DE  0E01               	movlw	1
 11338  0014E0  D001               	goto	i1u468_26
 11339  0014E2                     i1u468_20:
 11340  0014E2  0E00               	movlw	0
 11341  0014E4                     i1u468_26:
 11342  0014E4  6EDF               	movwf	indf2,c
 11343                           
 11344                           ; BSR set to: 15
 11345                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 11346  0014E6  010F               	movlb	15	; () banked
 11347  0014E8  B752               	btfsc	82,3,b	;volatile
 11348  0014EA  D044               	goto	i1l3954
 11349                           
 11350                           ; BSR set to: 15
 11351                           ;inc\CANlib.h: 559: {
 11352                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 11353  0014EC  CF51 F023          	movff	3921,??_CANreceiveMessage	;volatile
 11354  0014F0  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11355  0014F2  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11356  0014F4  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11357  0014F6  0E03               	movlw	3
 11358  0014F8                     i1u470_25:
 11359  0014F8  90D8               	bcf	status,0,c
 11360  0014FA  3623               	rlcf	??_CANreceiveMessage,f,c
 11361  0014FC  3624               	rlcf	??_CANreceiveMessage+1,f,c
 11362  0014FE  3625               	rlcf	??_CANreceiveMessage+2,f,c
 11363  001500  3626               	rlcf	??_CANreceiveMessage+3,f,c
 11364  001502  2EE8               	decfsz	wreg,f,c
 11365  001504  D7F9               	goto	i1u470_25
 11366  001506  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11367  00150A  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11368  00150E  C023  FFDE         	movff	??_CANreceiveMessage,postinc2
 11369  001512  C024  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 11370  001516  C025  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 11371  00151A  C026  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 11372                           
 11373                           ; BSR set to: 15
 11374                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 11375  00151E  010F               	movlb	15	; () banked
 11376  001520  3952               	swapf	82,w,b	;volatile
 11377  001522  42E8               	rrncf	wreg,f,c
 11378  001524  0B07               	andlw	7
 11379  001526  0B07               	andlw	7
 11380  001528  6E2C               	movwf	CANreceiveMessage@tamp,c
 11381                           
 11382                           ; BSR set to: 15
 11383                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 11384  00152A  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11385  00152E  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11386  001532  CFDE F023          	movff	postinc2,??_CANreceiveMessage
 11387  001536  CFDE F024          	movff	postinc2,??_CANreceiveMessage+1
 11388  00153A  CFDE F025          	movff	postinc2,??_CANreceiveMessage+2
 11389  00153E  CFDE F026          	movff	postinc2,??_CANreceiveMessage+3
 11390  001542  502C               	movf	CANreceiveMessage@tamp,w,c
 11391  001544  2423               	addwf	??_CANreceiveMessage,w,c
 11392  001546  6E27               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 11393  001548  0E00               	movlw	0
 11394  00154A  2024               	addwfc	??_CANreceiveMessage+1,w,c
 11395  00154C  6E28               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 11396  00154E  0E00               	movlw	0
 11397  001550  2025               	addwfc	??_CANreceiveMessage+2,w,c
 11398  001552  6E29               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 11399  001554  0E00               	movlw	0
 11400  001556  2026               	addwfc	??_CANreceiveMessage+3,w,c
 11401  001558  6E2A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 11402  00155A  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11403  00155E  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11404  001562  C027  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 11405  001566  C028  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 11406  00156A  C029  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 11407  00156E  C02A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 11408                           
 11409                           ;inc\CANlib.h: 563: }
 11410  001572  D08D               	goto	i1l3980
 11411  001574                     i1l3954:
 11412                           
 11413                           ; BSR set to: 15
 11414                           ;inc\CANlib.h: 564: else
 11415                           ;inc\CANlib.h: 565: {
 11416                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 11417  001574  CF54 F023          	movff	3924,??_CANreceiveMessage	;volatile
 11418  001578  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11419  00157A  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11420  00157C  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11421  00157E  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11422  001582  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11423  001586  C023  FFDE         	movff	??_CANreceiveMessage,postinc2
 11424  00158A  C024  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 11425  00158E  C025  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 11426  001592  C026  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 11427                           
 11428                           ; BSR set to: 15
 11429                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 11430  001596  CF53 F023          	movff	3923,??_CANreceiveMessage	;volatile
 11431  00159A  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11432  00159C  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11433  00159E  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11434  0015A0  C025  F026         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 11435  0015A4  C024  F025         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 11436  0015A8  C023  F024         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 11437  0015AC  6A23               	clrf	??_CANreceiveMessage,c
 11438  0015AE  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11439  0015B2  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11440  0015B6  5023               	movf	??_CANreceiveMessage,w,c
 11441  0015B8  26DE               	addwf	postinc2,f,c
 11442  0015BA  5024               	movf	??_CANreceiveMessage+1,w,c
 11443  0015BC  22DE               	addwfc	postinc2,f,c
 11444  0015BE  5025               	movf	??_CANreceiveMessage+2,w,c
 11445  0015C0  22DE               	addwfc	postinc2,f,c
 11446  0015C2  5026               	movf	??_CANreceiveMessage+3,w,c
 11447  0015C4  22DE               	addwfc	postinc2,f,c
 11448                           
 11449                           ; BSR set to: 15
 11450                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 11451  0015C6  010F               	movlb	15	; () banked
 11452  0015C8  A152               	btfss	82,0,b	;volatile
 11453  0015CA  D00C               	goto	i1l3962
 11454                           
 11455                           ; BSR set to: 15
 11456                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 11457  0015CC  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11458  0015D0  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11459  0015D4  0E00               	movlw	0
 11460  0015D6  12DE               	iorwf	postinc2,f,c
 11461  0015D8  0E00               	movlw	0
 11462  0015DA  12DE               	iorwf	postinc2,f,c
 11463  0015DC  0E01               	movlw	1
 11464  0015DE  12DE               	iorwf	postinc2,f,c
 11465  0015E0  0E00               	movlw	0
 11466  0015E2  12DE               	iorwf	postinc2,f,c
 11467  0015E4                     i1l3962:
 11468                           
 11469                           ; BSR set to: 15
 11470                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 11471  0015E4  010F               	movlb	15	; () banked
 11472  0015E6  A352               	btfss	82,1,b	;volatile
 11473  0015E8  D00C               	goto	i1l3966
 11474                           
 11475                           ; BSR set to: 15
 11476                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 11477  0015EA  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11478  0015EE  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11479  0015F2  0E00               	movlw	0
 11480  0015F4  12DE               	iorwf	postinc2,f,c
 11481  0015F6  0E00               	movlw	0
 11482  0015F8  12DE               	iorwf	postinc2,f,c
 11483  0015FA  0E02               	movlw	2
 11484  0015FC  12DE               	iorwf	postinc2,f,c
 11485  0015FE  0E00               	movlw	0
 11486  001600  12DE               	iorwf	postinc2,f,c
 11487  001602                     i1l3966:
 11488                           
 11489                           ; BSR set to: 15
 11490                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 11491  001602  010F               	movlb	15	; () banked
 11492  001604  AB52               	btfss	82,5,b	;volatile
 11493  001606  D00C               	goto	i1l3970
 11494                           
 11495                           ; BSR set to: 15
 11496                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 11497  001608  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11498  00160C  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11499  001610  0E00               	movlw	0
 11500  001612  12DE               	iorwf	postinc2,f,c
 11501  001614  0E00               	movlw	0
 11502  001616  12DE               	iorwf	postinc2,f,c
 11503  001618  0E04               	movlw	4
 11504  00161A  12DE               	iorwf	postinc2,f,c
 11505  00161C  0E00               	movlw	0
 11506  00161E  12DE               	iorwf	postinc2,f,c
 11507  001620                     i1l3970:
 11508                           
 11509                           ; BSR set to: 15
 11510                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 11511  001620  010F               	movlb	15	; () banked
 11512  001622  AD52               	btfss	82,6,b	;volatile
 11513  001624  D00C               	goto	i1l3974
 11514                           
 11515                           ; BSR set to: 15
 11516                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 11517  001626  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11518  00162A  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11519  00162E  0E00               	movlw	0
 11520  001630  12DE               	iorwf	postinc2,f,c
 11521  001632  0E00               	movlw	0
 11522  001634  12DE               	iorwf	postinc2,f,c
 11523  001636  0E08               	movlw	8
 11524  001638  12DE               	iorwf	postinc2,f,c
 11525  00163A  0E00               	movlw	0
 11526  00163C  12DE               	iorwf	postinc2,f,c
 11527  00163E                     i1l3974:
 11528                           
 11529                           ; BSR set to: 15
 11530                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 11531  00163E  010F               	movlb	15	; () banked
 11532  001640  AF52               	btfss	82,7,b	;volatile
 11533  001642  D00C               	goto	i1l3978
 11534                           
 11535                           ; BSR set to: 15
 11536                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 11537  001644  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11538  001648  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11539  00164C  0E00               	movlw	0
 11540  00164E  12DE               	iorwf	postinc2,f,c
 11541  001650  0E00               	movlw	0
 11542  001652  12DE               	iorwf	postinc2,f,c
 11543  001654  0E10               	movlw	16
 11544  001656  12DE               	iorwf	postinc2,f,c
 11545  001658  0E00               	movlw	0
 11546  00165A  12DE               	iorwf	postinc2,f,c
 11547  00165C                     i1l3978:
 11548                           
 11549                           ; BSR set to: 15
 11550                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 11551  00165C  CF51 F023          	movff	3921,??_CANreceiveMessage	;volatile
 11552  001660  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11553  001662  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11554  001664  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11555  001666  0E15               	movlw	21
 11556  001668                     i1u476_25:
 11557  001668  90D8               	bcf	status,0,c
 11558  00166A  3623               	rlcf	??_CANreceiveMessage,f,c
 11559  00166C  3624               	rlcf	??_CANreceiveMessage+1,f,c
 11560  00166E  3625               	rlcf	??_CANreceiveMessage+2,f,c
 11561  001670  3626               	rlcf	??_CANreceiveMessage+3,f,c
 11562  001672  2EE8               	decfsz	wreg,f,c
 11563  001674  D7F9               	goto	i1u476_25
 11564  001676  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11565  00167A  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11566  00167E  5023               	movf	??_CANreceiveMessage,w,c
 11567  001680  12DE               	iorwf	postinc2,f,c
 11568  001682  5024               	movf	??_CANreceiveMessage+1,w,c
 11569  001684  12DE               	iorwf	postinc2,f,c
 11570  001686  5025               	movf	??_CANreceiveMessage+2,w,c
 11571  001688  12DE               	iorwf	postinc2,f,c
 11572  00168A  5026               	movf	??_CANreceiveMessage+3,w,c
 11573  00168C  12DE               	iorwf	postinc2,f,c
 11574  00168E                     i1l3980:
 11575                           
 11576                           ; BSR set to: 15
 11577                           ;inc\CANlib.h: 581: }
 11578                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 11579  00168E  010F               	movlb	15	; () banked
 11580  001690  9F50               	bcf	80,7,b	;volatile
 11581                           
 11582                           ; BSR set to: 15
 11583                           ;inc\CANlib.h: 584: return (error);
 11584                           ;	Return value of _CANreceiveMessage is never used
 11585  001692  0012               	return	
 11586  001694                     i1l416:
 11587                           
 11588                           ; BSR set to: 15
 11589                           ;inc\CANlib.h: 585: }
 11590                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 11591  001694  AE60               	btfss	3936,7,c	;volatile
 11592  001696  0012               	return	
 11593                           
 11594                           ; BSR set to: 15
 11595                           ;inc\CANlib.h: 588: {
 11596                           ;inc\CANlib.h: 589: msg->identifier = 0;
 11597  001698  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11598  00169C  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11599  0016A0  6ADE               	clrf	postinc2,c
 11600  0016A2  6ADE               	clrf	postinc2,c
 11601  0016A4  6ADE               	clrf	postinc2,c
 11602  0016A6  6ADD               	clrf	postdec2,c
 11603                           
 11604                           ; BSR set to: 15
 11605                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 11606  0016A8  EE20 F004          	lfsr	2,4
 11607  0016AC  5021               	movf	CANreceiveMessage@msg,w,c
 11608  0016AE  26D9               	addwf	fsr2l,f,c
 11609  0016B0  5022               	movf	CANreceiveMessage@msg+1,w,c
 11610  0016B2  22DA               	addwfc	fsr2h,f,c
 11611  0016B4  CF66 FFDF          	movff	3942,indf2	;volatile
 11612                           
 11613                           ; BSR set to: 15
 11614                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 11615  0016B8  EE20 F005          	lfsr	2,5
 11616  0016BC  5021               	movf	CANreceiveMessage@msg,w,c
 11617  0016BE  26D9               	addwf	fsr2l,f,c
 11618  0016C0  5022               	movf	CANreceiveMessage@msg+1,w,c
 11619  0016C2  22DA               	addwfc	fsr2h,f,c
 11620  0016C4  CF67 FFDF          	movff	3943,indf2	;volatile
 11621                           
 11622                           ; BSR set to: 15
 11623                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 11624  0016C8  EE20 F006          	lfsr	2,6
 11625  0016CC  5021               	movf	CANreceiveMessage@msg,w,c
 11626  0016CE  26D9               	addwf	fsr2l,f,c
 11627  0016D0  5022               	movf	CANreceiveMessage@msg+1,w,c
 11628  0016D2  22DA               	addwfc	fsr2h,f,c
 11629  0016D4  CF68 FFDF          	movff	3944,indf2	;volatile
 11630                           
 11631                           ; BSR set to: 15
 11632                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 11633  0016D8  EE20 F007          	lfsr	2,7
 11634  0016DC  5021               	movf	CANreceiveMessage@msg,w,c
 11635  0016DE  26D9               	addwf	fsr2l,f,c
 11636  0016E0  5022               	movf	CANreceiveMessage@msg+1,w,c
 11637  0016E2  22DA               	addwfc	fsr2h,f,c
 11638  0016E4  CF69 FFDF          	movff	3945,indf2	;volatile
 11639                           
 11640                           ; BSR set to: 15
 11641                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 11642  0016E8  EE20 F008          	lfsr	2,8
 11643  0016EC  5021               	movf	CANreceiveMessage@msg,w,c
 11644  0016EE  26D9               	addwf	fsr2l,f,c
 11645  0016F0  5022               	movf	CANreceiveMessage@msg+1,w,c
 11646  0016F2  22DA               	addwfc	fsr2h,f,c
 11647  0016F4  CF6A FFDF          	movff	3946,indf2	;volatile
 11648                           
 11649                           ; BSR set to: 15
 11650                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 11651  0016F8  EE20 F009          	lfsr	2,9
 11652  0016FC  5021               	movf	CANreceiveMessage@msg,w,c
 11653  0016FE  26D9               	addwf	fsr2l,f,c
 11654  001700  5022               	movf	CANreceiveMessage@msg+1,w,c
 11655  001702  22DA               	addwfc	fsr2h,f,c
 11656  001704  CF6B FFDF          	movff	3947,indf2	;volatile
 11657                           
 11658                           ; BSR set to: 15
 11659                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 11660  001708  EE20 F00A          	lfsr	2,10
 11661  00170C  5021               	movf	CANreceiveMessage@msg,w,c
 11662  00170E  26D9               	addwf	fsr2l,f,c
 11663  001710  5022               	movf	CANreceiveMessage@msg+1,w,c
 11664  001712  22DA               	addwfc	fsr2h,f,c
 11665  001714  CF6C FFDF          	movff	3948,indf2	;volatile
 11666                           
 11667                           ; BSR set to: 15
 11668                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 11669  001718  EE20 F00B          	lfsr	2,11
 11670  00171C  5021               	movf	CANreceiveMessage@msg,w,c
 11671  00171E  26D9               	addwf	fsr2l,f,c
 11672  001720  5022               	movf	CANreceiveMessage@msg+1,w,c
 11673  001722  22DA               	addwfc	fsr2h,f,c
 11674  001724  CF6D FFDF          	movff	3949,indf2	;volatile
 11675                           
 11676                           ; BSR set to: 15
 11677                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 11678  001728  EE20 F00E          	lfsr	2,14
 11679  00172C  5021               	movf	CANreceiveMessage@msg,w,c
 11680  00172E  26D9               	addwf	fsr2l,f,c
 11681  001730  5022               	movf	CANreceiveMessage@msg+1,w,c
 11682  001732  22DA               	addwfc	fsr2h,f,c
 11683  001734  AC65               	btfss	3941,6,c	;volatile
 11684  001736  D002               	goto	i1u478_20
 11685  001738  0E01               	movlw	1
 11686  00173A  D001               	goto	i1u478_26
 11687  00173C                     i1u478_20:
 11688  00173C  0E00               	movlw	0
 11689  00173E                     i1u478_26:
 11690  00173E  6EDF               	movwf	indf2,c
 11691                           
 11692                           ; BSR set to: 15
 11693                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 11694  001740  EE20 F00D          	lfsr	2,13
 11695  001744  5021               	movf	CANreceiveMessage@msg,w,c
 11696  001746  26D9               	addwf	fsr2l,f,c
 11697  001748  5022               	movf	CANreceiveMessage@msg+1,w,c
 11698  00174A  22DA               	addwfc	fsr2h,f,c
 11699  00174C  5065               	movf	3941,w,c	;volatile
 11700  00174E  0B0F               	andlw	15
 11701  001750  6EDF               	movwf	indf2,c
 11702                           
 11703                           ; BSR set to: 15
 11704                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 11705  001752  EE20 F00C          	lfsr	2,12
 11706  001756  5021               	movf	CANreceiveMessage@msg,w,c
 11707  001758  26D9               	addwf	fsr2l,f,c
 11708  00175A  5022               	movf	CANreceiveMessage@msg+1,w,c
 11709  00175C  22DA               	addwfc	fsr2h,f,c
 11710  00175E  A662               	btfss	3938,3,c	;volatile
 11711  001760  D002               	goto	i1u479_20
 11712  001762  0E01               	movlw	1
 11713  001764  D001               	goto	i1u479_26
 11714  001766                     i1u479_20:
 11715  001766  0E00               	movlw	0
 11716  001768                     i1u479_26:
 11717  001768  6EDF               	movwf	indf2,c
 11718                           
 11719                           ; BSR set to: 15
 11720                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 11721  00176A  B662               	btfsc	3938,3,c	;volatile
 11722  00176C  D043               	goto	i1l4016
 11723                           
 11724                           ; BSR set to: 15
 11725                           ;inc\CANlib.h: 606: {
 11726                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 11727  00176E  CF61 F023          	movff	3937,??_CANreceiveMessage	;volatile
 11728  001772  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11729  001774  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11730  001776  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11731  001778  0E03               	movlw	3
 11732  00177A                     i1u481_25:
 11733  00177A  90D8               	bcf	status,0,c
 11734  00177C  3623               	rlcf	??_CANreceiveMessage,f,c
 11735  00177E  3624               	rlcf	??_CANreceiveMessage+1,f,c
 11736  001780  3625               	rlcf	??_CANreceiveMessage+2,f,c
 11737  001782  3626               	rlcf	??_CANreceiveMessage+3,f,c
 11738  001784  2EE8               	decfsz	wreg,f,c
 11739  001786  D7F9               	goto	i1u481_25
 11740  001788  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11741  00178C  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11742  001790  C023  FFDE         	movff	??_CANreceiveMessage,postinc2
 11743  001794  C024  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 11744  001798  C025  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 11745  00179C  C026  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 11746                           
 11747                           ; BSR set to: 15
 11748                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 11749  0017A0  3862               	swapf	3938,w,c	;volatile
 11750  0017A2  42E8               	rrncf	wreg,f,c
 11751  0017A4  0B07               	andlw	7
 11752  0017A6  0B07               	andlw	7
 11753  0017A8  6E2C               	movwf	CANreceiveMessage@tamp,c
 11754                           
 11755                           ; BSR set to: 15
 11756                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 11757  0017AA  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11758  0017AE  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11759  0017B2  CFDE F023          	movff	postinc2,??_CANreceiveMessage
 11760  0017B6  CFDE F024          	movff	postinc2,??_CANreceiveMessage+1
 11761  0017BA  CFDE F025          	movff	postinc2,??_CANreceiveMessage+2
 11762  0017BE  CFDE F026          	movff	postinc2,??_CANreceiveMessage+3
 11763  0017C2  502C               	movf	CANreceiveMessage@tamp,w,c
 11764  0017C4  2423               	addwf	??_CANreceiveMessage,w,c
 11765  0017C6  6E27               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 11766  0017C8  0E00               	movlw	0
 11767  0017CA  2024               	addwfc	??_CANreceiveMessage+1,w,c
 11768  0017CC  6E28               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 11769  0017CE  0E00               	movlw	0
 11770  0017D0  2025               	addwfc	??_CANreceiveMessage+2,w,c
 11771  0017D2  6E29               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 11772  0017D4  0E00               	movlw	0
 11773  0017D6  2026               	addwfc	??_CANreceiveMessage+3,w,c
 11774  0017D8  6E2A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 11775  0017DA  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11776  0017DE  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11777  0017E2  C027  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 11778  0017E6  C028  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 11779  0017EA  C029  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 11780  0017EE  C02A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 11781                           
 11782                           ;inc\CANlib.h: 610: }
 11783  0017F2  D088               	goto	i1l4042
 11784  0017F4                     i1l4016:
 11785                           
 11786                           ; BSR set to: 15
 11787                           ;inc\CANlib.h: 611: else
 11788                           ;inc\CANlib.h: 612: {
 11789                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 11790  0017F4  CF64 F023          	movff	3940,??_CANreceiveMessage	;volatile
 11791  0017F8  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11792  0017FA  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11793  0017FC  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11794  0017FE  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11795  001802  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11796  001806  C023  FFDE         	movff	??_CANreceiveMessage,postinc2
 11797  00180A  C024  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 11798  00180E  C025  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 11799  001812  C026  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 11800                           
 11801                           ; BSR set to: 15
 11802                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 11803  001816  CF63 F023          	movff	3939,??_CANreceiveMessage	;volatile
 11804  00181A  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11805  00181C  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11806  00181E  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11807  001820  C025  F026         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 11808  001824  C024  F025         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 11809  001828  C023  F024         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 11810  00182C  6A23               	clrf	??_CANreceiveMessage,c
 11811  00182E  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11812  001832  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11813  001836  5023               	movf	??_CANreceiveMessage,w,c
 11814  001838  26DE               	addwf	postinc2,f,c
 11815  00183A  5024               	movf	??_CANreceiveMessage+1,w,c
 11816  00183C  22DE               	addwfc	postinc2,f,c
 11817  00183E  5025               	movf	??_CANreceiveMessage+2,w,c
 11818  001840  22DE               	addwfc	postinc2,f,c
 11819  001842  5026               	movf	??_CANreceiveMessage+3,w,c
 11820  001844  22DE               	addwfc	postinc2,f,c
 11821                           
 11822                           ; BSR set to: 15
 11823                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 11824  001846  A062               	btfss	3938,0,c	;volatile
 11825  001848  D00C               	goto	i1l4024
 11826                           
 11827                           ; BSR set to: 15
 11828                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 11829  00184A  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11830  00184E  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11831  001852  0E00               	movlw	0
 11832  001854  12DE               	iorwf	postinc2,f,c
 11833  001856  0E00               	movlw	0
 11834  001858  12DE               	iorwf	postinc2,f,c
 11835  00185A  0E01               	movlw	1
 11836  00185C  12DE               	iorwf	postinc2,f,c
 11837  00185E  0E00               	movlw	0
 11838  001860  12DE               	iorwf	postinc2,f,c
 11839  001862                     i1l4024:
 11840                           
 11841                           ; BSR set to: 15
 11842                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 11843  001862  A262               	btfss	3938,1,c	;volatile
 11844  001864  D00C               	goto	i1l4028
 11845                           
 11846                           ; BSR set to: 15
 11847                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 11848  001866  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11849  00186A  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11850  00186E  0E00               	movlw	0
 11851  001870  12DE               	iorwf	postinc2,f,c
 11852  001872  0E00               	movlw	0
 11853  001874  12DE               	iorwf	postinc2,f,c
 11854  001876  0E02               	movlw	2
 11855  001878  12DE               	iorwf	postinc2,f,c
 11856  00187A  0E00               	movlw	0
 11857  00187C  12DE               	iorwf	postinc2,f,c
 11858  00187E                     i1l4028:
 11859                           
 11860                           ; BSR set to: 15
 11861                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 11862  00187E  AA62               	btfss	3938,5,c	;volatile
 11863  001880  D00C               	goto	i1l4032
 11864                           
 11865                           ; BSR set to: 15
 11866                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 11867  001882  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11868  001886  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11869  00188A  0E00               	movlw	0
 11870  00188C  12DE               	iorwf	postinc2,f,c
 11871  00188E  0E00               	movlw	0
 11872  001890  12DE               	iorwf	postinc2,f,c
 11873  001892  0E04               	movlw	4
 11874  001894  12DE               	iorwf	postinc2,f,c
 11875  001896  0E00               	movlw	0
 11876  001898  12DE               	iorwf	postinc2,f,c
 11877  00189A                     i1l4032:
 11878                           
 11879                           ; BSR set to: 15
 11880                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 11881  00189A  AC62               	btfss	3938,6,c	;volatile
 11882  00189C  D00C               	goto	i1l4036
 11883                           
 11884                           ; BSR set to: 15
 11885                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 11886  00189E  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11887  0018A2  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11888  0018A6  0E00               	movlw	0
 11889  0018A8  12DE               	iorwf	postinc2,f,c
 11890  0018AA  0E00               	movlw	0
 11891  0018AC  12DE               	iorwf	postinc2,f,c
 11892  0018AE  0E08               	movlw	8
 11893  0018B0  12DE               	iorwf	postinc2,f,c
 11894  0018B2  0E00               	movlw	0
 11895  0018B4  12DE               	iorwf	postinc2,f,c
 11896  0018B6                     i1l4036:
 11897                           
 11898                           ; BSR set to: 15
 11899                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 11900  0018B6  AE62               	btfss	3938,7,c	;volatile
 11901  0018B8  D00C               	goto	i1l4040
 11902                           
 11903                           ; BSR set to: 15
 11904                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 11905  0018BA  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11906  0018BE  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11907  0018C2  0E00               	movlw	0
 11908  0018C4  12DE               	iorwf	postinc2,f,c
 11909  0018C6  0E00               	movlw	0
 11910  0018C8  12DE               	iorwf	postinc2,f,c
 11911  0018CA  0E10               	movlw	16
 11912  0018CC  12DE               	iorwf	postinc2,f,c
 11913  0018CE  0E00               	movlw	0
 11914  0018D0  12DE               	iorwf	postinc2,f,c
 11915  0018D2                     i1l4040:
 11916                           
 11917                           ; BSR set to: 15
 11918                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 11919  0018D2  CF61 F023          	movff	3937,??_CANreceiveMessage	;volatile
 11920  0018D6  6A24               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 11921  0018D8  6A25               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 11922  0018DA  6A26               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 11923  0018DC  0E15               	movlw	21
 11924  0018DE                     i1u487_25:
 11925  0018DE  90D8               	bcf	status,0,c
 11926  0018E0  3623               	rlcf	??_CANreceiveMessage,f,c
 11927  0018E2  3624               	rlcf	??_CANreceiveMessage+1,f,c
 11928  0018E4  3625               	rlcf	??_CANreceiveMessage+2,f,c
 11929  0018E6  3626               	rlcf	??_CANreceiveMessage+3,f,c
 11930  0018E8  2EE8               	decfsz	wreg,f,c
 11931  0018EA  D7F9               	goto	i1u487_25
 11932  0018EC  C021  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 11933  0018F0  C022  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 11934  0018F4  5023               	movf	??_CANreceiveMessage,w,c
 11935  0018F6  12DE               	iorwf	postinc2,f,c
 11936  0018F8  5024               	movf	??_CANreceiveMessage+1,w,c
 11937  0018FA  12DE               	iorwf	postinc2,f,c
 11938  0018FC  5025               	movf	??_CANreceiveMessage+2,w,c
 11939  0018FE  12DE               	iorwf	postinc2,f,c
 11940  001900  5026               	movf	??_CANreceiveMessage+3,w,c
 11941  001902  12DE               	iorwf	postinc2,f,c
 11942  001904                     i1l4042:
 11943                           
 11944                           ; BSR set to: 15
 11945                           ;inc\CANlib.h: 629: }
 11946                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 11947  001904  9E60               	bcf	3936,7,c	;volatile
 11948                           
 11949                           ; BSR set to: 15
 11950                           ;inc\CANlib.h: 632: return (error);
 11951                           ;	Return value of _CANreceiveMessage is never used
 11952  001906  0012               	return	
 11953  001908                     __end_of_CANreceiveMessage:
 11954                           	opt stack 0
 11955                           pclatu	equ	0xFFB
 11956                           pclath	equ	0xFFA
 11957                           tblptru	equ	0xFF8
 11958                           tblptrh	equ	0xFF7
 11959                           tblptrl	equ	0xFF6
 11960                           tablat	equ	0xFF5
 11961                           prodh	equ	0xFF4
 11962                           prodl	equ	0xFF3
 11963                           intcon	equ	0xFF2
 11964                           intcon2	equ	0xFF1
 11965                           postinc0	equ	0xFEE
 11966                           fsr0h	equ	0xFEA
 11967                           fsr0l	equ	0xFE9
 11968                           wreg	equ	0xFE8
 11969                           postdec1	equ	0xFE5
 11970                           fsr1h	equ	0xFE2
 11971                           fsr1l	equ	0xFE1
 11972                           bsr	equ	0xFE0
 11973                           indf2	equ	0xFDF
 11974                           postinc2	equ	0xFDE
 11975                           postdec2	equ	0xFDD
 11976                           fsr2h	equ	0xFDA
 11977                           fsr2l	equ	0xFD9
 11978                           status	equ	0xFD8
 11979                           
 11980 ;; *************** function _CANisRxReady *****************
 11981 ;; Defined at:
 11982 ;;		line 1163 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 11983 ;; Parameters:    Size  Location     Type
 11984 ;;		None
 11985 ;; Auto vars:     Size  Location     Type
 11986 ;;		None
 11987 ;; Return value:  Size  Location     Type
 11988 ;;                  1    wreg      unsigned char 
 11989 ;; Registers used:
 11990 ;;		wreg, status,2
 11991 ;; Tracked objects:
 11992 ;;		On entry : 0/0
 11993 ;;		On exit  : 0/0
 11994 ;;		Unchanged: 0/0
 11995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11996 ;;      Params:         0       0       0       0
 11997 ;;      Locals:         1       0       0       0
 11998 ;;      Temps:          0       0       0       0
 11999 ;;      Totals:         1       0       0       0
 12000 ;;Total ram usage:        1 bytes
 12001 ;; Hardware stack levels used:    1
 12002 ;; Hardware stack levels required when called:    2
 12003 ;; This function calls:
 12004 ;;		Nothing
 12005 ;; This function is called by:
 12006 ;;		_ISR_bassa
 12007 ;; This function uses a non-reentrant model
 12008 ;;
 12009                           
 12010                           	psect	text31
 12011  003954                     __ptext31:
 12012                           	opt stack 0
 12013  003954                     _CANisRxReady:
 12014                           	opt stack 24
 12015                           
 12016                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 12017                           
 12018                           ; BSR set to: 15
 12019                           ;incstack = 0
 12020  003954  0E01               	movlw	1
 12021  003956  6E21               	movwf	_CANisRxReady$2920,c
 12022  003958  BE60               	btfsc	3936,7,c	;volatile
 12023  00395A  D005               	goto	i1l567
 12024  00395C  010F               	movlb	15	; () banked
 12025  00395E  BF50               	btfsc	80,7,b	;volatile
 12026  003960  D002               	goto	i1l567
 12027                           
 12028                           ; BSR set to: 15
 12029  003962  0E00               	movlw	0
 12030  003964  6E21               	movwf	_CANisRxReady$2920,c
 12031  003966                     i1l567:
 12032  003966  5021               	movf	_CANisRxReady$2920,w,c
 12033  003968  0012               	return	
 12034  00396A                     __end_of_CANisRxReady:
 12035                           	opt stack 0
 12036                           pclatu	equ	0xFFB
 12037                           pclath	equ	0xFFA
 12038                           tblptru	equ	0xFF8
 12039                           tblptrh	equ	0xFF7
 12040                           tblptrl	equ	0xFF6
 12041                           tablat	equ	0xFF5
 12042                           prodh	equ	0xFF4
 12043                           prodl	equ	0xFF3
 12044                           intcon	equ	0xFF2
 12045                           intcon2	equ	0xFF1
 12046                           postinc0	equ	0xFEE
 12047                           fsr0h	equ	0xFEA
 12048                           fsr0l	equ	0xFE9
 12049                           wreg	equ	0xFE8
 12050                           postdec1	equ	0xFE5
 12051                           fsr1h	equ	0xFE2
 12052                           fsr1l	equ	0xFE1
 12053                           bsr	equ	0xFE0
 12054                           indf2	equ	0xFDF
 12055                           postinc2	equ	0xFDE
 12056                           postdec2	equ	0xFDD
 12057                           fsr2h	equ	0xFDA
 12058                           fsr2l	equ	0xFD9
 12059                           status	equ	0xFD8
 12060                           
 12061 ;; *************** function _ISR_alta *****************
 12062 ;; Defined at:
 12063 ;;		line 57 in file "newmain.c"
 12064 ;; Parameters:    Size  Location     Type
 12065 ;;		None
 12066 ;; Auto vars:     Size  Location     Type
 12067 ;;		None
 12068 ;; Return value:  Size  Location     Type
 12069 ;;		None               void
 12070 ;; Registers used:
 12071 ;;		wreg, status,2, status,0, cstack
 12072 ;; Tracked objects:
 12073 ;;		On entry : 0/0
 12074 ;;		On exit  : 0/0
 12075 ;;		Unchanged: 0/0
 12076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12077 ;;      Params:         0       0       0       0
 12078 ;;      Locals:         0       0       0       0
 12079 ;;      Temps:          0      15       0       0
 12080 ;;      Totals:         0      15       0       0
 12081 ;;Total ram usage:       15 bytes
 12082 ;; Hardware stack levels used:    1
 12083 ;; Hardware stack levels required when called:    1
 12084 ;; This function calls:
 12085 ;;		_WriteTimer0
 12086 ;; This function is called by:
 12087 ;;		Interrupt level 2
 12088 ;; This function uses a non-reentrant model
 12089 ;;
 12090                           
 12091                           	psect	intcode
 12092  000008                     __pintcode:
 12093                           	opt stack 0
 12094  000008                     _ISR_alta:
 12095                           	opt stack 24
 12096                           
 12097                           ;incstack = 0
 12098  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12099  00000A  CFFA F065          	movff	pclath,??_ISR_alta+1
 12100  00000E  CFFB F066          	movff	pclatu,??_ISR_alta+2
 12101  000012  EDA0  F01A         	call	int_func,f	;refresh shadow registers
 12102                           pclatu	equ	0xFFB
 12103                           pclath	equ	0xFFA
 12104                           tblptru	equ	0xFF8
 12105                           tblptrh	equ	0xFF7
 12106                           tblptrl	equ	0xFF6
 12107                           tablat	equ	0xFF5
 12108                           prodh	equ	0xFF4
 12109                           prodl	equ	0xFF3
 12110                           intcon	equ	0xFF2
 12111                           intcon2	equ	0xFF1
 12112                           postinc0	equ	0xFEE
 12113                           fsr0h	equ	0xFEA
 12114                           fsr0l	equ	0xFE9
 12115                           wreg	equ	0xFE8
 12116                           postdec1	equ	0xFE5
 12117                           fsr1h	equ	0xFE2
 12118                           fsr1l	equ	0xFE1
 12119                           bsr	equ	0xFE0
 12120                           indf2	equ	0xFDF
 12121                           postinc2	equ	0xFDE
 12122                           postdec2	equ	0xFDD
 12123                           fsr2h	equ	0xFDA
 12124                           fsr2l	equ	0xFD9
 12125                           status	equ	0xFD8
 12126                           
 12127                           	psect	intcode_body
 12128  003540                     __pintcode_body:
 12129                           	opt stack 24
 12130  003540                     int_func:
 12131                           	opt stack 24
 12132  003540  0006               	pop		; remove dummy address from shadow register refresh
 12133  003542  CFE9 F067          	movff	fsr0l,??_ISR_alta+3
 12134  003546  CFEA F068          	movff	fsr0h,??_ISR_alta+4
 12135  00354A  CFE1 F069          	movff	fsr1l,??_ISR_alta+5
 12136  00354E  CFE2 F06A          	movff	fsr1h,??_ISR_alta+6
 12137  003552  CFD9 F06B          	movff	fsr2l,??_ISR_alta+7
 12138  003556  CFDA F06C          	movff	fsr2h,??_ISR_alta+8
 12139  00355A  CFF3 F06D          	movff	prodl,??_ISR_alta+9
 12140  00355E  CFF4 F06E          	movff	prodh,??_ISR_alta+10
 12141  003562  CFF6 F06F          	movff	tblptrl,??_ISR_alta+11
 12142  003566  CFF7 F070          	movff	tblptrh,??_ISR_alta+12
 12143  00356A  CFF8 F071          	movff	tblptru,??_ISR_alta+13
 12144  00356E  CFF5 F072          	movff	tablat,??_ISR_alta+14
 12145                           
 12146                           ;newmain.c: 58: PORTCbits.RC0 = ~PORTCbits.RC0;
 12147  003572  A082               	btfss	3970,0,c	;volatile
 12148  003574  D002               	goto	i2u675_40
 12149  003576  0E01               	movlw	1
 12150  003578  D001               	goto	i2u675_46
 12151  00357A                     i2u675_40:
 12152  00357A  0E00               	movlw	0
 12153  00357C                     i2u675_46:
 12154  00357C  0AFF               	xorlw	255
 12155  00357E  0100               	movlb	0	; () banked
 12156  003580  6F64               	movwf	??_ISR_alta& (0+255),b
 12157  003582  5082               	movf	3970,w,c	;volatile
 12158  003584  0100               	movlb	0	; () banked
 12159  003586  1964               	xorwf	??_ISR_alta& (0+255),w,b
 12160  003588  0BFE               	andlw	-2
 12161  00358A  1964               	xorwf	??_ISR_alta& (0+255),w,b
 12162  00358C  6E82               	movwf	3970,c	;volatile
 12163                           
 12164                           ; BSR set to: 0
 12165                           ;newmain.c: 59: T0CONbits.TMR0ON = 0;
 12166  00358E  9ED5               	bcf	4053,7,c	;volatile
 12167                           
 12168                           ; BSR set to: 0
 12169                           ;newmain.c: 60: if (PORTCbits.RC0 == 1) {
 12170  003590  A082               	btfss	3970,0,c	;volatile
 12171  003592  D007               	goto	i2l5192
 12172                           
 12173                           ; BSR set to: 0
 12174                           ;newmain.c: 61: WriteTimer0(timer1);
 12175  003594  C00F  F060         	movff	_timer1,WriteTimer0@timer0
 12176  003598  C010  F061         	movff	_timer1+1,WriteTimer0@timer0+1
 12177  00359C  ECBE  F01C         	call	_WriteTimer0	;wreg free
 12178                           
 12179                           ;newmain.c: 62: T0CONbits.TMR0ON = 1;
 12180  0035A0  8ED5               	bsf	4053,7,c	;volatile
 12181  0035A2                     i2l5192:
 12182                           
 12183                           ;newmain.c: 63: }
 12184                           ;newmain.c: 64: if (PORTCbits.RC0 == 0) {
 12185  0035A2  B082               	btfsc	3970,0,c	;volatile
 12186  0035A4  D007               	goto	i2l5198
 12187                           
 12188                           ;newmain.c: 65: WriteTimer0(periodo);
 12189  0035A6  C00D  F060         	movff	_periodo,WriteTimer0@timer0
 12190  0035AA  C00E  F061         	movff	_periodo+1,WriteTimer0@timer0+1
 12191  0035AE  ECBE  F01C         	call	_WriteTimer0	;wreg free
 12192                           
 12193                           ;newmain.c: 66: T0CONbits.TMR0ON = 1;
 12194  0035B2  8ED5               	bsf	4053,7,c	;volatile
 12195  0035B4                     i2l5198:
 12196                           
 12197                           ;newmain.c: 67: }
 12198                           ;newmain.c: 69: INTCONbits.TMR0IF = 0;
 12199  0035B4  94F2               	bcf	intcon,2,c	;volatile
 12200  0035B6  C072  FFF5         	movff	??_ISR_alta+14,tablat
 12201  0035BA  C071  FFF8         	movff	??_ISR_alta+13,tblptru
 12202  0035BE  C070  FFF7         	movff	??_ISR_alta+12,tblptrh
 12203  0035C2  C06F  FFF6         	movff	??_ISR_alta+11,tblptrl
 12204  0035C6  C06E  FFF4         	movff	??_ISR_alta+10,prodh
 12205  0035CA  C06D  FFF3         	movff	??_ISR_alta+9,prodl
 12206  0035CE  C06C  FFDA         	movff	??_ISR_alta+8,fsr2h
 12207  0035D2  C06B  FFD9         	movff	??_ISR_alta+7,fsr2l
 12208  0035D6  C06A  FFE2         	movff	??_ISR_alta+6,fsr1h
 12209  0035DA  C069  FFE1         	movff	??_ISR_alta+5,fsr1l
 12210  0035DE  C068  FFEA         	movff	??_ISR_alta+4,fsr0h
 12211  0035E2  C067  FFE9         	movff	??_ISR_alta+3,fsr0l
 12212  0035E6  C066  FFFB         	movff	??_ISR_alta+2,pclatu
 12213  0035EA  C065  FFFA         	movff	??_ISR_alta+1,pclath
 12214  0035EE  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12215  0035F0  0011               	retfie		f
 12216  0035F2                     __end_of_ISR_alta:
 12217                           	opt stack 0
 12218                           pclatu	equ	0xFFB
 12219                           pclath	equ	0xFFA
 12220                           tblptru	equ	0xFF8
 12221                           tblptrh	equ	0xFF7
 12222                           tblptrl	equ	0xFF6
 12223                           tablat	equ	0xFF5
 12224                           prodh	equ	0xFF4
 12225                           prodl	equ	0xFF3
 12226                           intcon	equ	0xFF2
 12227                           intcon2	equ	0xFF1
 12228                           postinc0	equ	0xFEE
 12229                           fsr0h	equ	0xFEA
 12230                           fsr0l	equ	0xFE9
 12231                           wreg	equ	0xFE8
 12232                           postdec1	equ	0xFE5
 12233                           fsr1h	equ	0xFE2
 12234                           fsr1l	equ	0xFE1
 12235                           bsr	equ	0xFE0
 12236                           indf2	equ	0xFDF
 12237                           postinc2	equ	0xFDE
 12238                           postdec2	equ	0xFDD
 12239                           fsr2h	equ	0xFDA
 12240                           fsr2l	equ	0xFD9
 12241                           status	equ	0xFD8
 12242                           
 12243 ;; *************** function _WriteTimer0 *****************
 12244 ;; Defined at:
 12245 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
 12246 ;; Parameters:    Size  Location     Type
 12247 ;;  timer0          2    0[BANK0 ] unsigned int 
 12248 ;; Auto vars:     Size  Location     Type
 12249 ;;  timer           2    2[BANK0 ] struct Timers
 12250 ;; Return value:  Size  Location     Type
 12251 ;;		None               void
 12252 ;; Registers used:
 12253 ;;		None
 12254 ;; Tracked objects:
 12255 ;;		On entry : 0/0
 12256 ;;		On exit  : 0/0
 12257 ;;		Unchanged: 0/0
 12258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12259 ;;      Params:         0       2       0       0
 12260 ;;      Locals:         0       2       0       0
 12261 ;;      Temps:          0       0       0       0
 12262 ;;      Totals:         0       4       0       0
 12263 ;;Total ram usage:        4 bytes
 12264 ;; Hardware stack levels used:    1
 12265 ;; This function calls:
 12266 ;;		Nothing
 12267 ;; This function is called by:
 12268 ;;		_ISR_alta
 12269 ;; This function uses a non-reentrant model
 12270 ;;
 12271                           
 12272                           	psect	text33
 12273  00397C                     __ptext33:
 12274                           	opt stack 0
 12275  00397C                     _WriteTimer0:
 12276                           	opt stack 24
 12277                           
 12278                           ;incstack = 0
 12279  00397C  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
 12280  003980  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 12281  003984  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 12282  003988  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 12283  00398C  0012               	return		;funcret
 12284  00398E                     __end_of_WriteTimer0:
 12285                           	opt stack 0
 12286  0000                     pclatu	equ	0xFFB
 12287                           pclath	equ	0xFFA
 12288                           tblptru	equ	0xFF8
 12289                           tblptrh	equ	0xFF7
 12290                           tblptrl	equ	0xFF6
 12291                           tablat	equ	0xFF5
 12292                           prodh	equ	0xFF4
 12293                           prodl	equ	0xFF3
 12294                           intcon	equ	0xFF2
 12295                           intcon2	equ	0xFF1
 12296                           postinc0	equ	0xFEE
 12297                           fsr0h	equ	0xFEA
 12298                           fsr0l	equ	0xFE9
 12299                           wreg	equ	0xFE8
 12300                           postdec1	equ	0xFE5
 12301                           fsr1h	equ	0xFE2
 12302                           fsr1l	equ	0xFE1
 12303                           bsr	equ	0xFE0
 12304                           indf2	equ	0xFDF
 12305                           postinc2	equ	0xFDE
 12306                           postdec2	equ	0xFDD
 12307                           fsr2h	equ	0xFDA
 12308                           fsr2l	equ	0xFD9
 12309                           status	equ	0xFD8
 12310                           pclatu	equ	0xFFB
 12311                           pclath	equ	0xFFA
 12312                           tblptru	equ	0xFF8
 12313                           tblptrh	equ	0xFF7
 12314                           tblptrl	equ	0xFF6
 12315                           tablat	equ	0xFF5
 12316                           prodh	equ	0xFF4
 12317                           prodl	equ	0xFF3
 12318                           intcon	equ	0xFF2
 12319                           intcon2	equ	0xFF1
 12320                           postinc0	equ	0xFEE
 12321                           fsr0h	equ	0xFEA
 12322                           fsr0l	equ	0xFE9
 12323                           wreg	equ	0xFE8
 12324                           postdec1	equ	0xFE5
 12325                           fsr1h	equ	0xFE2
 12326                           fsr1l	equ	0xFE1
 12327                           bsr	equ	0xFE0
 12328                           indf2	equ	0xFDF
 12329                           postinc2	equ	0xFDE
 12330                           postdec2	equ	0xFDD
 12331                           fsr2h	equ	0xFDA
 12332                           fsr2l	equ	0xFD9
 12333                           status	equ	0xFD8
 12334                           
 12335                           	psect	param0
 12336  0000                     pclatu	equ	0xFFB
 12337                           pclath	equ	0xFFA
 12338                           tblptru	equ	0xFF8
 12339                           tblptrh	equ	0xFF7
 12340                           tblptrl	equ	0xFF6
 12341                           tablat	equ	0xFF5
 12342                           prodh	equ	0xFF4
 12343                           prodl	equ	0xFF3
 12344                           intcon	equ	0xFF2
 12345                           intcon2	equ	0xFF1
 12346                           postinc0	equ	0xFEE
 12347                           fsr0h	equ	0xFEA
 12348                           fsr0l	equ	0xFE9
 12349                           wreg	equ	0xFE8
 12350                           postdec1	equ	0xFE5
 12351                           fsr1h	equ	0xFE2
 12352                           fsr1l	equ	0xFE1
 12353                           bsr	equ	0xFE0
 12354                           indf2	equ	0xFDF
 12355                           postinc2	equ	0xFDE
 12356                           postdec2	equ	0xFDD
 12357                           fsr2h	equ	0xFDA
 12358                           fsr2l	equ	0xFD9
 12359                           status	equ	0xFD8
 12360                           
 12361                           	psect	temp
 12362  000045                     btemp:
 12363                           	opt stack 0
 12364  000045                     	ds	1
 12365  0000                     int$flags	set	btemp
 12366                           pclatu	equ	0xFFB
 12367                           pclath	equ	0xFFA
 12368                           tblptru	equ	0xFF8
 12369                           tblptrh	equ	0xFF7
 12370                           tblptrl	equ	0xFF6
 12371                           tablat	equ	0xFF5
 12372                           prodh	equ	0xFF4
 12373                           prodl	equ	0xFF3
 12374                           intcon	equ	0xFF2
 12375                           intcon2	equ	0xFF1
 12376                           postinc0	equ	0xFEE
 12377                           fsr0h	equ	0xFEA
 12378                           fsr0l	equ	0xFE9
 12379                           wreg	equ	0xFE8
 12380                           postdec1	equ	0xFE5
 12381                           fsr1h	equ	0xFE2
 12382                           fsr1l	equ	0xFE1
 12383                           bsr	equ	0xFE0
 12384                           indf2	equ	0xFDF
 12385                           postinc2	equ	0xFDE
 12386                           postdec2	equ	0xFDD
 12387                           fsr2h	equ	0xFDA
 12388                           fsr2l	equ	0xFD9
 12389                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         78
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      68
    BANK0           160     89     140
    BANK1           256     36      36
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _main->___fltol
    _send_data->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    ___wmul->___awdiv
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _calibrazione->___lwdiv
    ___xxtofl->___lldiv
    ___lldiv->___lmul
    ___fltol->___flneg
    ___flneg->___fldiv
    ___flneg->___flmul
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___flneg

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->_WriteTimer0

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___fltol
    ___fltol->___fladd

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   20398
                                             28 BANK1      8     8      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___awdiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                            ___lldiv
                             ___lmul
                             ___wmul
                           ___xxtofl
                                _abs
                       _calibrazione
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    2419
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2395
                                             19 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    7165
                      _CANInitialize
                            _OpenADC
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     949
                                             33 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     415
                                             27 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             19 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             33 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibrazione                                         0     0      0     290
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     130
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     514
                                             44 BANK0     14    10      4
                            ___lldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     322
                                             19 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     290
                                             31 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     568
                                             87 BANK0      2     2      0
                                             20 BANK1      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___lldiv (ARG)
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     173
                                             83 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1696
                                             58 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1433
                                             58 BANK0     25    17      8
                            ___lldiv (ARG)
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    3478
                                              0 BANK1     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     556
                                             19 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           19    19      0    1161
                                             12 COMRAM    19    19      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            15    15      0     253
                                              4 BANK0     15    15      0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     253
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   ___awdiv
   ___fladd
     ___fldiv (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___flneg (ARG)
       ___fldiv (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___xxtofl (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
   ___fldiv
     ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
     ___xxtofl (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
   ___flmul
     ___xxtofl (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
   ___flneg
     ___fldiv (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___xxtofl (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
   ___fltol
     ___fladd (ARG)
       ___fldiv (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
               ___lmul (ARG)
             ___lmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___fldiv (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___flmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___flneg (ARG)
       ___fldiv (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
             ___lmul (ARG)
           ___lmul (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
           ___lmul (ARG)
         ___lmul (ARG)
     ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
     ___xxtofl (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
   ___lldiv
     ___lmul (ARG)
   ___lmul
   ___wmul
     ___awdiv (ARG)
   ___xxtofl
     ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
   _abs
   _calibrazione
     _BusyADC
     _ConvertADC
     _ReadADC
     ___lwdiv
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenADC
     _delay_ms
       ___wmul
         ___awdiv (ARG)
   _delay_ms
     ___wmul
       ___awdiv (ARG)
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_alta (ROOT)
   _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     24      24       6       14.1%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     59      8C       4       87.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1F      44       1       72.3%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F4       9        0.0%
DATA                 0      0      F4      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Dec 06 15:48:02 2015

              ??_CANisTXwarningON 0073                      ___fldiv@aexp 00B2  
                    ___fldiv@bexp 00B1              __end_of_CANSetFilter 0C70  
                    ___fldiv@sign 00A6                      ___awdiv@sign 0078  
                              _id 00CD                                bsr 000FE0  
             ___wmul@multiplicand 007D                       __CFG_BORV$3 000000  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000                               l400 1192  
                             l401 128A                               l410 1358  
                             l402 121A                               l403 1224  
                             l404 122E                               l405 1238  
                             l510 09EC                               l502 09AC  
                             l503 09B0                               l520 0AFC  
                             l504 09BC                               l440 2CAC  
                             l408 1348                               l521 0B08  
                             l513 0AC8                               l505 09C0  
                             l441 2CB0                               l409 134C  
                             l530 0C14                               l514 0ACC  
                             l506 09CC                               l450 2DB8  
                             l442 2CBC                               l370 0C86  
                             l531 0C18                               l515 0AD8  
                             l507 09D0                               l451 2DC4  
                             l443 2CC0                               l371 0C8A  
                             l532 0C24                               l524 0BE4  
                             l516 0ADC                               l508 09DC  
                             l452 2DC8                               l444 2CCC  
                             l364 30CA                               l380 0E44  
                             l372 0D82                               l525 0BE8  
                             l517 0AE8                               l509 09E0  
                             l453 2DD4                               l445 2CD0  
                             l365 30D4                               l381 0E50  
                             l373 0D12                               l526 0BF4  
                             l518 0AEC                               l470 065E  
                             l454 2DD8                               l446 2CDC  
                             l438 2C9C                               l390 0FAA  
                             l374 0D1C                               l527 0BF8  
                             l519 0AF8                               l471 066A  
                             l455 2DE4                               l439 2CA0  
                             l391 0FB4                               l375 0D26  
                             l528 0C04                               l480 0774  
                             l472 066E                               l456 2DE8  
                             l384 1178                               l376 0D30  
                             l529 0C08                               l481 0778  
                             l473 067A                               l457 2DF4  
                             l449 2DB4                               l385 0F0A  
                             l369 0EF4                               l482 0784  
                             l474 067E                               l562 3938  
                             l394 10C4                               l386 0F0E  
                             l491 0890                               l483 0788  
                             l475 068A                               l707 366A  
                             l395 10C8                               l387 1006  
                             l379 0E40                               l492 0894  
                             l484 0794                               l476 068E  
                             l396 10D4                               l388 0F96  
                             l493 08A0                               l485 0798  
                             l477 069A                               l469 065A  
                             l389 0FA0                               l494 08A4  
                             l486 07A4                               l495 08B0  
                             l487 07A8                               l575 3872  
                             l399 118E                               l663 26DE  
                             l496 08B4                               l488 07B4  
                             l497 08C0                               l657 2424  
                             l498 08C4                               l499 08D0  
                             l772 3910                      __CFG_CPB$OFF 000000  
                    __CFG_CPD$OFF 000000              __size_of_WriteTimer0 0012  
                             _abs 38EE                               _msg 0012  
                             wreg 000FE8                      ___flmul@aexp 00AB  
                    ___flmul@bexp 00AC             _currentSteering_array 00C1  
                    ___flmul@sign 00A6                      ___flmul@temp 00B1  
                    ___flmul@prod 00AD                      __CFG_LVP$OFF 000000  
                    ___fltol@exp1 00B8                      __CFG_WDT$OFF 000000  
                            ?_abs 0073                              l1222 2910  
                            l1231 2948                              l1233 29B6  
                            l1225 28B8                              l1129 36DC  
                            l1252 1E64                              l1076 352E  
                            l1261 216E                              l1166 1AE8  
                            l1183 1C5C                              l1167 1ADC  
                            l1192 1CF0                              l1168 1AA8  
                            l1281 2F36                              l1274 2E8A  
                            l3210 2CE0                              l1259 2100  
                            l1269 2212                              l3150 3946  
                            l3302 039A                              l1288 2F92  
                            l3320 0454                              l3216 2D26  
                            l1289 2FAA                              l3242 2DF8  
                            l5014 1A28                              l4134 37C6  
                            l4150 3842                              l5104 1CEA  
                            l5032 1ACC                              l4400 278C  
                            l3520 0B0C                              l3424 07FE  
                            l3184 2C10                              l3168 2B5A  
                            l5122 1D7A                              l5114 1D46  
                            l5050 1B4A                              l5042 1B0C  
                            l5026 1ABC                              l4154 36F8  
                            l3418 07B8                              l3338 050E  
                            l3266 0228                              l3610 30E0  
                            l5210 228E                              l5052 1B50  
                            l5060 1B6C                              l5028 1AC2  
                            l4420 280E                              l4412 27E0  
                            l3452 08D4                              l3356 05C8  
                            l3284 02E0                              l3612 3124  
                            l3604 30C2                              l5134 1D9E  
                            l5126 1D86                              l5118 1D58  
                            l5070 1C3C                              l4430 288C  
                            l4158 371E                              l3526 0B52  
                            l3390 06E4                              l3606 30D8  
                            l5230 24B0                              l5222 2390  
                            l5128 1D8A                              l5056 1B5A  
                            l4512 1DF2                              l5160 3268  
                            l5144 31FA                              l3384 069E  
                            l5224 239E                              l5232 24C0  
                            l4450 2932                              l4370 2700  
                            l4530 1E4C                              l4514 1DF8  
                            l4506 1DCE                              l5170 3298  
                            l3554 0C28                              l3458 091A  
                            l3802 1242                              l3650 0D3A  
                            l5242 26C4                              l5084 1CA4  
                            l4444 290C                              l4380 272E  
                            l4612 21E4                              l4540 1E8C  
                            l4532 1E52                              l4524 1E28  
                            l4516 1E0A                              l5172 32A8  
                            l5164 327C                              l3492 0A36  
                            l5078 1C8E                              l5094 1CC4  
                            l4438 28C4                              l4390 275E  
                            l4622 2232                              l4614 21F8  
                            l5174 32B2                              l3486 09F0  
                            l3822 133C                              l3726 0FBE  
                            l3670 0E34                              l5088 1CB0  
                            l5096 1CCA                              l4480 2A34  
                            l4456 295C                              l4376 2724  
                            l4624 223C                              l4608 21BE  
                            l4536 1E78                              l3752 10D8  
                            l4650 3416                              l4490 2A7A  
                            l4482 2A48                              l4466 29B0  
                            l5178 32CE                              l3906 36CE  
                            l3746 10B8                              l4652 3422  
                            l4644 33F8                              l4492 2A7E  
                            l4484 2A6A                              l4476 2A06  
                            l4396 2782                              l4732 34B2  
                            l3828 135C                              l3676 0E54  
                            l4670 347A                              l4662 3458  
                            l4654 3428                              l4638 33E2  
                            l4582 20EA                              l4734 34C2  
                            l3862 3864                              l4744 351C  
                            l4736 34C8                              l4760 2EC2  
                            l4666 3466                              l4762 2ECA  
                            l4754 2E9A                              l4588 2114  
                            l4772 2F74                              l4764 2EDA  
                            l4942 1926                              l4598 2168  
                            l4678 38A6                              l4774 2F84  
                            l4766 2F18                              l3894 368C  
                            l4960 1980                              l4952 1954  
                            l3896 3698                              l4786 2FFC  
                            l3898 369E                              l4972 19B8  
                            l4948 194A                              l4966 1994  
                            l4984 19EC                              l4976 19C2  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u3220 2B8C  
                            u4110 0C48                              u4030 0B2C  
                            u3310 2D00                              u3225 2B80  
                            u4115 0C3C                              u4035 0B20  
                            u3315 2CF4                              u3235 2BEC  
                            u3500 0316                              u3420 01A4  
                            u3180 2AD6                              u4240 0D5A  
                            u3505 030A                              u3425 0198  
                            u3185 2ACA                              u4250 0DA6  
                            u3515 0376                              u3435 0204  
                            u3195 2B36                              u3620 0544  
                            u3540 03D0                              u3460 025C  
                            u4500 1262                              u4245 0D4E  
                            u3710 06BE                              u3390 2E18  
                            u4510 12AE                              u4255 0D9A  
                            u3625 0538                              u3545 03C4  
                            u3465 0250                              u4505 1256  
                            u4265 0E06                              u4370 0FDE  
                            u3715 06B2                              u3635 05A4  
                            u3555 0430                              u3475 02BC  
                            u3395 2E0C                              u4515 12A2  
                            u3580 048A                              u4380 102A  
                            u4525 130E                              u4375 0FD2  
                            u6400 1A8C                              u3585 047E  
                            u4385 101E                              u3595 04EA  
                            u4395 108A                              u4590 3996  
                            u3950 0A10                              u3870 08F4  
                            u3790 07D8                              u5570 2A1A  
                            u3955 0A04                              u3875 08E8  
                            u3795 07CC                              u6380 1A72  
                            u6390 1A8A                              u4880 39A2  
                            u5760 21D2                              u5680 208C  
                            u6800 23E0                              u4890 39AE  
                            u5685 2080                              u6690 321A  
                            u6780 22F6                              u6695 320E  
                            u6867 3866               __size_of_CANSetMask 039E  
                            abs@a 0073                              _main 2256  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0045  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 0166  
                   __CFG_IESO$OFF 000000                   ___fldiv@new_exp 00AB  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000000  
                 __end_of_BusyADC 399A                   __end_of_ReadADC 397C  
                _CANOperationMode 393E                   __end_of_OpenADC 366E  
                           ??_abs 0075        __size_of_CANreceiveMessage 050C  
                   ___fltol@sign1 00B7                   __end_of___fladd 1DB0  
                           ?_main 0021                   __end_of___fldiv 2AA2  
                 __end_of___awdiv 3484                   __end_of___flneg 38B8  
                 __end_of___flmul 2256                   __end_of___fltol 32E0  
                 __end_of___lldiv 3540                             _T0CON 000FD5  
                 ___awdiv@divisor 0075                             _T3CON 000FB1  
                 __end_of___lwdiv 36E6                             i1l416 1694  
                           i1l651 011E                             i1l567 3966  
                 ___awdiv@counter 0077                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _TMR3H 000FB3  
                           _TMR3L 000FB2                             _PORTC 000F82  
               _CANisRxReady$2920 0021                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000               ___lmul@multiplicand 0077  
              __size_of_ISR_bassa 014E                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 0085                  __end_of_ISR_alta 35F2  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _timer 00D5                        _ConvertADC 39B6  
                  __pbitbssCOMRAM 0220              __end_of_CANisRxReady 396A  
                           tablat 000FF5              __end_of_CANisTxReady 393E  
                           status 000FD8                    __CFG_PBADEN$ON 000000  
                 __initialization 375C                      __end_of_main 26E2  
                          ??_main 011C                     __activetblptr 000002  
               _CANisTxReady$2918 0073                     _counter_array 00B9  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _CANCON 000F6F  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
           __size_of_calibrazione 0046                  ___awdiv@dividend 0073  
                 __CFG_BBSIZ$1024 000000                            i1l4040 18D2  
                          i1l4032 189A                            i1l4024 1862  
                          i1l4016 17F4                            i1l4042 1904  
                          i1l4036 18B6                            i1l4028 187E  
                          i1l4830 009C                            i1l4822 0066  
                          i1l3970 1620                            i1l3962 15E4  
                          i1l3954 1574                            i1l4842 00D6  
                          i1l4850 0100                            i1l3980 168E  
                          i1l3974 163E                            i1l3966 1602  
                          i1l4854 0104                            i1l3978 165C  
                          i2l5192 35A2                            i2l5198 35B4  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 0077                CANsendMessage@tamp 007F  
                       ??_BusyADC 0073                  __end_of___xxtofl 300E  
                       ??_ReadADC 0075                  __end_of_delay_ms 3880  
           __size_of_CANSetFilter 0B06                         ??_OpenADC 0075  
                  __CFG_XINST$OFF 000000                 __end_of_ISR_bassa 0166  
                          ___lmul 36E6                         ??___fladd 0108  
                          ___wmul 38B8                         ??___fldiv 00A2  
                       ??___awdiv 0077                         ??___flneg 00B7  
                  __CFG_STVREN$ON 000000                         ??___flmul 00A2  
                       ??___fltol 0118                         ??___lldiv 0087  
                       ??___lwdiv 0077                      ??_CANSetMask 0078  
                          _errore 00DD                            clear_0 3762  
                          clear_1 3770                  ___awdiv@quotient 0079  
        ?_configurazione_iniziale 0021                            _timer1 000F  
                 __CFG_BOREN$BOHW 000000                      _calibrazione 37C2  
                    __pdataCOMRAM 0040                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                 _currentSteering 00E7                      _CANSetFilter 016A  
                     ?_ConvertADC 0021                      ___xxtofl@arg 0096  
                    ___xxtofl@exp 0095                      ___xxtofl@val 008C  
                      __accesstop 0060           __end_of__initialization 37B4  
              __end_of_CANSetMask 2E40                        ___flneg@f1 00B3  
                   ___rparam_used 000000         __size_of_CANisRXwarningON 000C  
                      ___fltol@f1 0114                    __pcstackCOMRAM 0021  
                    __pidataBANK0 39BA                         ?_ISR_alta 0021  
           CANSetFilter@numBuffer 007C         __size_of_CANisTXwarningON 000C  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 0024  
        __end_of_CANOperationMode 3954                        __pbssBANK0 00B9  
                      _data_array 00DF           __size_of_CANsendMessage 078C  
                         ?___lmul 0073                           ?___wmul 007B  
                      ??_ISR_alta 0064                __size_of_send_data 003E  
                WriteTimer0@timer 0062                     ??_WriteTimer0 0062  
                  ___lmul@product 007B                      _CANisRxReady 3954  
             __size_of_ConvertADC 0004                           _CANSTAT 000F6E  
                    _CANisTxReady 391A                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
                       ?___xxtofl 008C            __size_of_CANInitialize 01C6  
                       ?_delay_ms 0081                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 007A                           _BusyADC 398E  
                         _ReadADC 396A                        _correzione 00DB  
                       _ADCResult 00D9                           _OpenADC 35F2  
                         __Hparam 0000                           __Lparam 0000  
                delay_ms@value_ms 0081                           ___fladd 1908  
                         ___fldiv 26E2                           ___awdiv 33C6  
                         ___flneg 3880                   __size_of___lmul 0076  
                         ___flmul 1DB0                           ___fltol 31D4  
                         ___lldiv 3484                   __size_of___wmul 0036  
                         ___lwdiv 366E              CANInitialize@propSeg 008A  
                         __pcinit 375C                           __ramtop 0300  
                         __ptext0 2256                           __ptext1 3808  
                         __ptext2 0C70                           __ptext3 391A  
                         __ptext4 32E0                           __ptext5 3846  
                         __ptext6 38B8                           __ptext7 35F2  
                         __ptext8 300E                           __ptext9 2AA2  
                       _T0CONbits 000FD5                           _counter 0001  
                    __size_of_abs 002C                        ??___xxtofl 0090  
                      _duty_cycle 00C9                           _periodo 000D  
             __end_of_WriteTimer0 398E                        ??_delay_ms 0083  
          CANreceiveMessage@error 002B                           _potenza 0042  
                  OpenADC@config2 0073                    __pintcode_body 3540  
            end_of_initialization 37B4                 __end_of_send_data 3846  
                   __Lmediumconst 0000                           int_func 3540  
                _CANisRXwarningON 39A6                     _CANInitialize 300E  
                 ___lldiv@divisor 0083                   ___lldiv@counter 008B  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
                       _ISR_bassa 0018                         _PORTAbits 000F80  
                  CANSetMask@mask 0073                         _PORTCbits 000F82  
                  CANSetMask@tamp 007D                    CANSetMask@type 0077  
                _CANisTXwarningON 399A                       ___fladd@grs 0113  
                   ___xxtofl@sign 0094                       ___fldiv@grs 00AD  
                     ___fldiv@rem 00A7                      ??_ConvertADC 0073  
__size_of_configurazione_iniziale 00E6               _previousTimeCounter 00D1  
         _clock_counter_reference 00EA                       ___flmul@grs 00A7  
                  _CANsendMessage 0C70                  CANInitialize@BRP 0084  
                CANInitialize@SJW 0083                    ?_CANInitialize 0081  
                  __end_of___lmul 375C                        ?_ISR_bassa 0021  
                  __end_of___wmul 38EE                     __pidataCOMRAM 39B2  
               __size_of_ISR_alta 35EA                       _WriteTimer0 397C  
              __end_of_ConvertADC 39BA               start_initialization 375C  
                     __end_of_abs 391A               CANSetMask@numBuffer 007C  
          __end_of_CANsendMessage 13FC                 ?_CANOperationMode 0021  
              ??_CANOperationMode 0073        CANInitialize@FilterConfig1 008B  
      CANInitialize@FilterConfig2 008C                          ??___lmul 007B  
                        ??___wmul 007F                       __pdataBANK0 00E7  
                     _calibration 0009                  __CFG_LPT1OSC$OFF 000000  
                       ___fladd@a 0104                         ___fladd@b 0100  
          CANInitialize@phaseSeg1 0081            CANInitialize@phaseSeg2 0082  
                       ___fldiv@a 009E                         ___fldiv@b 009A  
                       ___flmul@a 009E                         ___flmul@b 009A  
                     __pbssCOMRAM 0001                     __pcstackBANK0 0060  
                   __pcstackBANK1 0100                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72                 __size_of___xxtofl 01CE  
               __size_of_delay_ms 003A                   ?_CANsendMessage 0073  
                 ??_CANInitialize 0086                          ?_BusyADC 0021  
                        ?_ReadADC 0073                CANSetFilter@filter 0073  
                       __pnvBANK0 00EA                 OpenADC@portconfig 0074  
                        ?_OpenADC 0073                    _theorySteering 0011  
                ___lwdiv@dividend 0073                         __pintcode 0008  
                        ?___fladd 0100                          ?___fldiv 009A  
                        ?___awdiv 0073                          ?___flneg 00B3  
                        ?___flmul 009A                          ?___fltol 0114  
                        ?___lldiv 007F                          ?___lwdiv 0073  
                     ??_ISR_bassa 002D                       __pintcodelo 0018  
               WriteTimer0@timer0 0060          __end_of_CANisRXwarningON 39B2  
                     _COMSTATbits 000F74                  ___lwdiv@quotient 0077  
         _configurazione_iniziale 32E0             CANreceiveMessage@tamp 002C  
                  ___wmul@product 007F                     OpenADC@config 0077  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 00E8  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                         _send_data 3808  
                        _PIE3bits 000FA3          __end_of_CANisTXwarningON 39A6  
                        i1u614_20 009A                          i1u470_25 14F8  
                        i1u481_25 177A                          i1u467_20 14B4  
                        i1u467_26 14B6                          i1u468_20 14E2  
                        i1u476_25 1668                          i1u468_26 14E4  
                        i1u478_20 173C                          i1u478_26 173E  
                        i1u479_20 1766                          i1u487_25 18DE  
                        i1u479_26 1768                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                          _PIR3bits 000FA4  
                        i2u675_40 357A                          i2u675_46 357C  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                          _RXB0SIDL 000F62  
                        _RXF0EIDH 000F02                          _RXB1SIDH 000F51  
                        _RXF0EIDL 000F03                          _RXB1SIDL 000F52  
                        _RXF1EIDH 000F06                          _RXF1EIDL 000F07  
                        _RXF2EIDH 000F0A                      _pastSteering 00E9  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _ISR_alta 0008  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                 ___wmul@multiplier 007B  
                   ?_calibrazione 0021                     ?_CANSetFilter 0073  
               ___lmul@multiplier 0073                       _INTCON2bits 000FF1  
                       copy_data0 37A8                        _CANCONbits 000F6F  
                        __Hparam0 0000                        ?_send_data 0021  
                __size_of_BusyADC 000C                  __size_of_ReadADC 0012  
                        __Lparam0 0000                      _RXB0SIDLbits 000F62  
                __size_of_OpenADC 007C                      _RXB1SIDLbits 000F52  
                __size_of___fladd 04A8                        _CANSetMask 2AA2  
                __size_of___fldiv 03C0                  __size_of___awdiv 00BE  
                __size_of___flneg 0038                  __size_of___flmul 04A6  
                __size_of___fltol 010C                  __size_of___lldiv 00BC  
                __size_of___lwdiv 0078                      ?_WriteTimer0 0060  
                  ??_calibrazione 007A                          ___xxtofl 2E40  
       ??_configurazione_iniziale 008D                      _RXF0SIDLbits 000F01  
                        _delay_ms 3846                   ___lwdiv@divisor 0075  
                    _RXF1SIDLbits 000F05                   ___lwdiv@counter 0079  
                  ??_CANSetFilter 0078                          __ptext10 016A  
                        __ptext11 393E                          __ptext20 3484  
                        __ptext12 37C2                          __ptext21 31D4  
                        __ptext13 366E                          __ptext30 13FC  
                        __ptext22 3880                          __ptext14 396A  
                        __ptext31 3954                          __ptext23 1DB0  
                        __ptext15 39B6                          __ptext24 26E2  
                        __ptext16 398E                          __ptext33 397C  
                        __ptext25 1908                          __ptext17 38EE  
                        __ptext26 33C6                          __ptext18 2E40  
                        __ptext27 399A                          __ptext19 36E6  
                        __ptext28 39A6                      _RXF2SIDLbits 000F09  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                    _RXF5SIDLbits 000F15          CANsendMessage@dataLength 0079  
                    _remote_frame 0220                     __size_of_main 048C  
                        _limiteDx 000B                          _limiteSx 0040  
            CANreceiveMessage@msg 0021                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 0045         __size_of_CANOperationMode 0016  
                   ?_CANisRxReady 0021                     ?_CANisTxReady 0021  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 13FC  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 007B                ?_CANreceiveMessage 0021  
        CANsendMessage@identifier 0073                          intlevel1 0000  
                        intlevel2 0000                  CANSetFilter@tamp 007D  
                CANSetFilter@type 0077               ??_CANreceiveMessage 0023  
                ___lldiv@dividend 007F                       _TXB0DLCbits 000F45  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 0083                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 33C6                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 0005  
            CANOperationMode@mode 0073                    ??_CANisRxReady 0021  
                     ?_CANSetMask 0073                    ??_CANisTxReady 0073  
       __end_of_CANreceiveMessage 1908                  ___lldiv@quotient 0087  
               ?_CANisRXwarningON 0021                ??_CANisRXwarningON 0073  
                   ___fladd@signs 0110                      ___fladd@aexp 0111  
                    ___fladd@bexp 0112              __end_of_calibrazione 3808  
           __end_of_CANInitialize 31D4                 ?_CANisTXwarningON 0021  
