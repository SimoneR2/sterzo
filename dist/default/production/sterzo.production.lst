

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Dec 07 16:36:19 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	param0,global,class=BANK0,space=1,delta=1
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	idataCOMRAM
    46  002568                     __pidataCOMRAM:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _limiteDx
    50  002568  0078               	dw	120
    51                           
    52                           ;initializer for _potenza
    53  00256A  0002               	dw	2
    54                           
    55                           ;initializer for _currentSteering
    56  00256C  B4                 	db	180
    57                           
    58                           ;initializer for _delay_quartz_frequency_value
    59  00256D  10                 	db	16
    60                           
    61                           ;initializer for _pastSteering
    62  00256E  01                 	db	1
    63  0000                     _RXB1CON	set	3920
    64  0000                     _RXB1CONbits	set	3920
    65  0000                     _RXB1D0	set	3926
    66  0000                     _RXB1D1	set	3927
    67  0000                     _RXB1D2	set	3928
    68  0000                     _RXB1D3	set	3929
    69  0000                     _RXB1D4	set	3930
    70  0000                     _RXB1D5	set	3931
    71  0000                     _RXB1D6	set	3932
    72  0000                     _RXB1D7	set	3933
    73  0000                     _RXB1DLC	set	3925
    74  0000                     _RXB1DLCbits	set	3925
    75  0000                     _RXB1EIDH	set	3923
    76  0000                     _RXB1EIDL	set	3924
    77  0000                     _RXB1SIDH	set	3921
    78  0000                     _RXB1SIDL	set	3922
    79  0000                     _RXB1SIDLbits	set	3922
    80  0000                     _RXF0EIDH	set	3842
    81  0000                     _RXF0EIDL	set	3843
    82  0000                     _RXF0SIDH	set	3840
    83  0000                     _RXF0SIDL	set	3841
    84  0000                     _RXF0SIDLbits	set	3841
    85  0000                     _RXF1EIDH	set	3846
    86  0000                     _RXF1EIDL	set	3847
    87  0000                     _RXF1SIDH	set	3844
    88  0000                     _RXF1SIDL	set	3845
    89  0000                     _RXF1SIDLbits	set	3845
    90  0000                     _RXF2EIDH	set	3850
    91  0000                     _RXF2EIDL	set	3851
    92  0000                     _RXF2SIDH	set	3848
    93  0000                     _RXF2SIDL	set	3849
    94  0000                     _RXF2SIDLbits	set	3849
    95  0000                     _RXF3EIDH	set	3854
    96  0000                     _RXF3EIDL	set	3855
    97  0000                     _RXF3SIDH	set	3852
    98  0000                     _RXF3SIDL	set	3853
    99  0000                     _RXF3SIDLbits	set	3853
   100  0000                     _RXF4EIDH	set	3858
   101  0000                     _RXF4EIDL	set	3859
   102  0000                     _RXF4SIDH	set	3856
   103  0000                     _RXF4SIDL	set	3857
   104  0000                     _RXF4SIDLbits	set	3857
   105  0000                     _RXF5EIDH	set	3862
   106  0000                     _RXF5EIDL	set	3863
   107  0000                     _RXF5SIDH	set	3860
   108  0000                     _RXF5SIDL	set	3861
   109  0000                     _RXF5SIDLbits	set	3861
   110  0000                     _RXM0EIDH	set	3866
   111  0000                     _RXM0EIDL	set	3867
   112  0000                     _RXM0SIDH	set	3864
   113  0000                     _RXM0SIDL	set	3865
   114  0000                     _RXM0SIDLbits	set	3865
   115  0000                     _RXM1EIDH	set	3870
   116  0000                     _RXM1EIDL	set	3871
   117  0000                     _RXM1SIDH	set	3868
   118  0000                     _RXM1SIDL	set	3869
   119  0000                     _RXM1SIDLbits	set	3869
   120  0000                     _TXB0CONbits	set	3904
   121  0000                     _TXB0D0	set	3910
   122  0000                     _TXB0D1	set	3911
   123  0000                     _TXB0D2	set	3912
   124  0000                     _TXB0D3	set	3913
   125  0000                     _TXB0D4	set	3914
   126  0000                     _TXB0D5	set	3915
   127  0000                     _TXB0D6	set	3916
   128  0000                     _TXB0D7	set	3917
   129  0000                     _TXB0DLC	set	3909
   130  0000                     _TXB0DLCbits	set	3909
   131  0000                     _TXB0EIDH	set	3907
   132  0000                     _TXB0EIDL	set	3908
   133  0000                     _TXB0SIDH	set	3905
   134  0000                     _TXB0SIDL	set	3906
   135  0000                     _TXB0SIDLbits	set	3906
   136  0000                     _TXB1CONbits	set	3888
   137  0000                     _TXB1D0	set	3894
   138  0000                     _TXB1D1	set	3895
   139  0000                     _TXB1D2	set	3896
   140  0000                     _TXB1D3	set	3897
   141  0000                     _TXB1D4	set	3898
   142  0000                     _TXB1D5	set	3899
   143  0000                     _TXB1D6	set	3900
   144  0000                     _TXB1D7	set	3901
   145  0000                     _TXB1DLC	set	3893
   146  0000                     _TXB1DLCbits	set	3893
   147  0000                     _TXB1EIDH	set	3891
   148  0000                     _TXB1EIDL	set	3892
   149  0000                     _TXB1SIDH	set	3889
   150  0000                     _TXB1SIDL	set	3890
   151  0000                     _TXB1SIDLbits	set	3890
   152  0000                     _TXB2CONbits	set	3872
   153  0000                     _TXB2D0	set	3878
   154  0000                     _TXB2D1	set	3879
   155  0000                     _TXB2D2	set	3880
   156  0000                     _TXB2D3	set	3881
   157  0000                     _TXB2D4	set	3882
   158  0000                     _TXB2D5	set	3883
   159  0000                     _TXB2D6	set	3884
   160  0000                     _TXB2D7	set	3885
   161  0000                     _TXB2DLC	set	3877
   162  0000                     _TXB2DLCbits	set	3877
   163  0000                     _TXB2EIDH	set	3875
   164  0000                     _TXB2EIDL	set	3876
   165  0000                     _TXB2SIDH	set	3873
   166  0000                     _TXB2SIDL	set	3874
   167  0000                     _TXB2SIDLbits	set	3874
   168  0000                     _ADCON0	set	4034
   169  0000                     _ADCON0bits	set	4034
   170  0000                     _ADCON1	set	4033
   171  0000                     _ADCON2	set	4032
   172  0000                     _ADRESH	set	4036
   173  0000                     _ADRESL	set	4035
   174  0000                     _BRGCON1	set	3952
   175  0000                     _BRGCON2	set	3953
   176  0000                     _BRGCON2bits	set	3953
   177  0000                     _BRGCON3	set	3954
   178  0000                     _BRGCON3bits	set	3954
   179  0000                     _CANCON	set	3951
   180  0000                     _CANCONbits	set	3951
   181  0000                     _CANSTAT	set	3950
   182  0000                     _COMSTATbits	set	3956
   183  0000                     _INTCON2bits	set	4081
   184  0000                     _INTCONbits	set	4082
   185  0000                     _IPR2bits	set	4002
   186  0000                     _IPR3bits	set	4005
   187  0000                     _LATA	set	3977
   188  0000                     _LATB	set	3978
   189  0000                     _LATC	set	3979
   190  0000                     _LATD	set	3980
   191  0000                     _LATE	set	3981
   192  0000                     _PIE1bits	set	3997
   193  0000                     _PIE2bits	set	4000
   194  0000                     _PIE3bits	set	4003
   195  0000                     _PIR1bits	set	3998
   196  0000                     _PIR2bits	set	4001
   197  0000                     _PIR3bits	set	4004
   198  0000                     _PORTAbits	set	3968
   199  0000                     _PORTCbits	set	3970
   200  0000                     _RCONbits	set	4048
   201  0000                     _RXB0CON	set	3936
   202  0000                     _RXB0CONbits	set	3936
   203  0000                     _RXB0D0	set	3942
   204  0000                     _RXB0D1	set	3943
   205  0000                     _RXB0D2	set	3944
   206  0000                     _RXB0D3	set	3945
   207  0000                     _RXB0D4	set	3946
   208  0000                     _RXB0D5	set	3947
   209  0000                     _RXB0D6	set	3948
   210  0000                     _RXB0D7	set	3949
   211  0000                     _RXB0DLC	set	3941
   212  0000                     _RXB0DLCbits	set	3941
   213  0000                     _RXB0EIDH	set	3939
   214  0000                     _RXB0EIDL	set	3940
   215  0000                     _RXB0SIDH	set	3937
   216  0000                     _RXB0SIDL	set	3938
   217  0000                     _RXB0SIDLbits	set	3938
   218  0000                     _RXERRCNT	set	3957
   219  0000                     _T0CON	set	4053
   220  0000                     _T0CONbits	set	4053
   221  0000                     _T3CON	set	4017
   222  0000                     _TMR0H	set	4055
   223  0000                     _TMR0L	set	4054
   224  0000                     _TMR3H	set	4019
   225  0000                     _TMR3L	set	4018
   226  0000                     _TRISA	set	3986
   227  0000                     _TRISB	set	3987
   228  0000                     _TRISC	set	3988
   229  0000                     _TRISD	set	3989
   230  0000                     _TRISE	set	3990
   231  0000                     _TXERRCNT	set	3958
   232                           
   233                           ; #config settings
   234  0000                     
   235                           	psect	cinit
   236  0023CC                     __pcinit:
   237                           	opt stack 0
   238  0023CC                     start_initialization:
   239                           	opt stack 0
   240  0023CC                     __initialization:
   241                           	opt stack 0
   242                           
   243                           ; Clear objects allocated to BANK0 (42 bytes)
   244  0023CC  EE00  F095         	lfsr	0,__pbssBANK0
   245  0023D0  0E2A               	movlw	42
   246  0023D2                     clear_0:
   247  0023D2  6AEE               	clrf	postinc0,c
   248  0023D4  06E8               	decf	wreg,f,c
   249  0023D6  E1FD               	bnz	clear_0
   250                           
   251                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   252  0023D8  6A4A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   253                           
   254                           ; Clear objects allocated to COMRAM (36 bytes)
   255  0023DA  EE00  F001         	lfsr	0,__pbssCOMRAM
   256  0023DE  0E24               	movlw	36
   257  0023E0                     clear_1:
   258  0023E0  6AEE               	clrf	postinc0,c
   259  0023E2  06E8               	decf	wreg,f,c
   260  0023E4  E1FD               	bnz	clear_1
   261                           
   262                           ; Initialize objects allocated to COMRAM (7 bytes)
   263                           ; load TBLPTR registers with __pidataCOMRAM
   264  0023E6  0E68               	movlw	low __pidataCOMRAM
   265  0023E8  6EF6               	movwf	tblptrl,c
   266  0023EA  0E25               	movlw	high __pidataCOMRAM
   267  0023EC  6EF7               	movwf	tblptrh,c
   268  0023EE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   269  0023F0  6EF8               	movwf	tblptru,c
   270  0023F2  EE00  F043         	lfsr	0,__pdataCOMRAM
   271  0023F6  EE10 F007          	lfsr	1,7
   272  0023FA                     copy_data0:
   273  0023FA  0009               	tblrd		*+
   274  0023FC  CFF5 FFEE          	movff	tablat,postinc0
   275  002400  50E5               	movf	postdec1,w,c
   276  002402  50E1               	movf	fsr1l,w,c
   277  002404  E1FA               	bnz	copy_data0
   278  002406                     end_of_initialization:
   279                           	opt stack 0
   280  002406                     __end_of__initialization:
   281                           	opt stack 0
   282  002406  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   283  002408  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   284  00240A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   285  00240C  6EF8               	movwf	tblptru,c
   286  00240E  0100               	movlb	0
   287  002410  EFC0  F00F         	goto	_main	;jump to C main() function
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           postdec1	equ	0xFE5
   295                           fsr1l	equ	0xFE1
   296                           
   297                           	psect	bitbssCOMRAM
   298  000250                     __pbitbssCOMRAM:
   299                           	opt stack 0
   300  000250                     _remote_frame:
   301                           	opt stack 0
   302  000250                     	ds	1
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           postdec1	equ	0xFE5
   310                           fsr1l	equ	0xFE1
   311                           
   312                           	psect	bssCOMRAM
   313  000001                     __pbssCOMRAM:
   314                           	opt stack 0
   315  000001                     _counter:
   316                           	opt stack 0
   317  000001                     	ds	4
   318  000005                     _timeCounter:
   319                           	opt stack 0
   320  000005                     	ds	4
   321  000009                     _Toff:
   322                           	opt stack 0
   323  000009                     	ds	2
   324  00000B                     _Ton:
   325                           	opt stack 0
   326  00000B                     	ds	2
   327  00000D                     _calibration:
   328                           	opt stack 0
   329  00000D                     	ds	2
   330  00000F                     _clock_counter_reference:
   331                           	opt stack 0
   332  00000F                     	ds	2
   333  000011                     _correzione:
   334                           	opt stack 0
   335  000011                     	ds	2
   336  000013                     _errore:
   337                           	opt stack 0
   338  000013                     	ds	2
   339  000015                     _theorySteering:
   340                           	opt stack 0
   341  000015                     	ds	1
   342  000016                     _msg:
   343                           	opt stack 0
   344  000016                     	ds	15
   345                           tblptru	equ	0xFF8
   346                           tblptrh	equ	0xFF7
   347                           tblptrl	equ	0xFF6
   348                           tablat	equ	0xFF5
   349                           postinc0	equ	0xFEE
   350                           wreg	equ	0xFE8
   351                           postdec1	equ	0xFE5
   352                           fsr1l	equ	0xFE1
   353                           
   354                           	psect	dataCOMRAM
   355  000043                     __pdataCOMRAM:
   356                           	opt stack 0
   357  000043                     _limiteDx:
   358                           	opt stack 0
   359  000043                     	ds	2
   360  000045                     _potenza:
   361                           	opt stack 0
   362  000045                     	ds	2
   363  000047                     _currentSteering:
   364                           	opt stack 0
   365  000047                     	ds	1
   366  000048                     _delay_quartz_frequency_value:
   367                           	opt stack 0
   368  000048                     	ds	1
   369  000049                     _pastSteering:
   370                           	opt stack 0
   371  000049                     	ds	1
   372                           tblptru	equ	0xFF8
   373                           tblptrh	equ	0xFF7
   374                           tblptrl	equ	0xFF6
   375                           tablat	equ	0xFF5
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           postdec1	equ	0xFE5
   379                           fsr1l	equ	0xFE1
   380                           
   381                           	psect	bssBANK0
   382  000095                     __pbssBANK0:
   383                           	opt stack 0
   384  000095                     _counter_array:
   385                           	opt stack 0
   386  000095                     	ds	8
   387  00009D                     _currentSteering_array:
   388                           	opt stack 0
   389  00009D                     	ds	8
   390  0000A5                     _duty_cycle:
   391                           	opt stack 0
   392  0000A5                     	ds	4
   393  0000A9                     _id:
   394                           	opt stack 0
   395  0000A9                     	ds	4
   396  0000AD                     _previousTimeCounter:
   397                           	opt stack 0
   398  0000AD                     	ds	4
   399  0000B1                     _timer:
   400                           	opt stack 0
   401  0000B1                     	ds	4
   402  0000B5                     _ADCResult:
   403                           	opt stack 0
   404  0000B5                     	ds	2
   405  0000B7                     _data_array:
   406                           	opt stack 0
   407  0000B7                     	ds	8
   408                           tblptru	equ	0xFF8
   409                           tblptrh	equ	0xFF7
   410                           tblptrl	equ	0xFF6
   411                           tablat	equ	0xFF5
   412                           postinc0	equ	0xFEE
   413                           wreg	equ	0xFE8
   414                           postdec1	equ	0xFE5
   415                           fsr1l	equ	0xFE1
   416                           
   417                           	psect	cstackBANK0
   418  000060                     __pcstackBANK0:
   419                           	opt stack 0
   420  000060                     i2WriteTimer0@timer0:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x0
   424  000060                     	ds	2
   425  000062                     i2WriteTimer0@timer:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x2
   429  000062                     	ds	2
   430  000064                     ??_ISR_alta:
   431                           
   432                           ; 0 bytes @ 0x4
   433  000064                     	ds	15
   434  000073                     ?_ReadADC:
   435                           	opt stack 0
   436  000073                     ?___lwdiv:
   437                           	opt stack 0
   438  000073                     ?___lmul:
   439                           	opt stack 0
   440  000073                     CANOperationMode@mode:
   441                           	opt stack 0
   442  000073                     _CANisTxReady$2910:
   443                           	opt stack 0
   444  000073                     OpenADC@config2:
   445                           	opt stack 0
   446  000073                     WriteTimer0@timer0:
   447                           	opt stack 0
   448  000073                     ___lwdiv@dividend:
   449                           	opt stack 0
   450  000073                     CANsendMessage@identifier:
   451                           	opt stack 0
   452  000073                     CANSetMask@mask:
   453                           	opt stack 0
   454  000073                     CANSetFilter@filter:
   455                           	opt stack 0
   456  000073                     ___lmul@multiplier:
   457                           	opt stack 0
   458                           
   459                           ; 4 bytes @ 0x13
   460  000073                     	ds	1
   461  000074                     OpenADC@portconfig:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x14
   465  000074                     	ds	1
   466  000075                     ??_ReadADC:
   467  000075                     ??_OpenADC:
   468  000075                     WriteTimer0@timer:
   469                           	opt stack 0
   470  000075                     ___lwdiv@divisor:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x15
   474  000075                     	ds	2
   475  000077                     CANSetMask@type:
   476                           	opt stack 0
   477  000077                     CANSetFilter@type:
   478                           	opt stack 0
   479  000077                     OpenADC@config:
   480                           	opt stack 0
   481  000077                     CANsendMessage@data:
   482                           	opt stack 0
   483  000077                     ___lwdiv@quotient:
   484                           	opt stack 0
   485  000077                     ___lmul@multiplicand:
   486                           	opt stack 0
   487                           
   488                           ; 4 bytes @ 0x17
   489  000077                     	ds	1
   490  000078                     ??_CANSetMask:
   491  000078                     ??_CANSetFilter:
   492                           
   493                           ; 0 bytes @ 0x18
   494  000078                     	ds	1
   495  000079                     CANsendMessage@dataLength:
   496                           	opt stack 0
   497  000079                     ___lwdiv@counter:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x19
   501  000079                     	ds	1
   502  00007A                     CANsendMessage@flags:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x1A
   506  00007A                     	ds	1
   507  00007B                     ??_CANsendMessage:
   508  00007B                     ___lmul@product:
   509                           	opt stack 0
   510                           
   511                           ; 4 bytes @ 0x1B
   512  00007B                     	ds	1
   513  00007C                     CANSetMask@numBuffer:
   514                           	opt stack 0
   515  00007C                     CANSetFilter@numBuffer:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x1C
   519  00007C                     	ds	1
   520  00007D                     CANSetMask@tamp:
   521                           	opt stack 0
   522  00007D                     CANSetFilter@tamp:
   523                           	opt stack 0
   524                           
   525                           ; 4 bytes @ 0x1D
   526  00007D                     	ds	2
   527  00007F                     ?___lldiv:
   528                           	opt stack 0
   529  00007F                     CANsendMessage@tamp:
   530                           	opt stack 0
   531  00007F                     ___lldiv@dividend:
   532                           	opt stack 0
   533                           
   534                           ; 4 bytes @ 0x1F
   535  00007F                     	ds	2
   536  000081                     CANInitialize@phaseSeg1:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x21
   540  000081                     	ds	1
   541  000082                     CANInitialize@phaseSeg2:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x22
   545  000082                     	ds	1
   546  000083                     CANInitialize@SJW:
   547                           	opt stack 0
   548  000083                     ___lldiv@divisor:
   549                           	opt stack 0
   550                           
   551                           ; 4 bytes @ 0x23
   552  000083                     	ds	1
   553  000084                     CANInitialize@BRP:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x24
   557  000084                     	ds	1
   558  000085                     CANInitialize@flags:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x25
   562  000085                     	ds	1
   563  000086                     ??_CANInitialize:
   564                           
   565                           ; 0 bytes @ 0x26
   566  000086                     	ds	1
   567  000087                     ___lldiv@quotient:
   568                           	opt stack 0
   569                           
   570                           ; 4 bytes @ 0x27
   571  000087                     	ds	3
   572  00008A                     CANInitialize@propSeg:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x2A
   576  00008A                     	ds	1
   577  00008B                     CANInitialize@FilterConfig1:
   578                           	opt stack 0
   579  00008B                     ___lldiv@counter:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x2B
   583  00008B                     	ds	1
   584  00008C                     CANInitialize@FilterConfig2:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x2C
   588  00008C                     	ds	1
   589  00008D                     ??_configurazione_iniziale:
   590                           
   591                           ; 0 bytes @ 0x2D
   592  00008D                     	ds	4
   593  000091                     ??_main:
   594                           
   595                           ; 0 bytes @ 0x31
   596  000091                     	ds	4
   597                           tblptru	equ	0xFF8
   598                           tblptrh	equ	0xFF7
   599                           tblptrl	equ	0xFF6
   600                           tablat	equ	0xFF5
   601                           postinc0	equ	0xFEE
   602                           wreg	equ	0xFE8
   603                           postdec1	equ	0xFE5
   604                           fsr1l	equ	0xFE1
   605                           
   606                           	psect	cstackCOMRAM
   607  000025                     __pcstackCOMRAM:
   608                           	opt stack 0
   609  000025                     ?___wmul:
   610                           	opt stack 0
   611  000025                     _CANisRxReady$2912:
   612                           	opt stack 0
   613  000025                     CANreceiveMessage@msg:
   614                           	opt stack 0
   615  000025                     ___wmul@multiplier:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x0
   619  000025                     	ds	2
   620  000027                     ??_CANreceiveMessage:
   621  000027                     ___wmul@multiplicand:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x2
   625  000027                     	ds	2
   626  000029                     ___wmul@product:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x4
   630  000029                     	ds	2
   631  00002B                     ?i1___lwdiv:
   632                           	opt stack 0
   633  00002B                     i1___lwdiv@dividend:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x6
   637  00002B                     	ds	2
   638  00002D                     i1___lwdiv@divisor:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x8
   642  00002D                     	ds	2
   643  00002F                     CANreceiveMessage@error:
   644                           	opt stack 0
   645  00002F                     i1___lwdiv@quotient:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0xA
   649  00002F                     	ds	1
   650  000030                     CANreceiveMessage@tamp:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0xB
   654  000030                     	ds	1
   655  000031                     i1___lwdiv@counter:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0xC
   659  000031                     	ds	1
   660  000032                     ??_ISR_bassa:
   661                           
   662                           ; 0 bytes @ 0xD
   663  000032                     	ds	17
   664                           tblptru	equ	0xFF8
   665                           tblptrh	equ	0xFF7
   666                           tblptrl	equ	0xFF6
   667                           tablat	equ	0xFF5
   668                           postinc0	equ	0xFEE
   669                           wreg	equ	0xFE8
   670                           postdec1	equ	0xFE5
   671                           fsr1l	equ	0xFE1
   672                           
   673 ;;
   674 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   675 ;;
   676 ;; *************** function _main *****************
   677 ;; Defined at:
   678 ;;		line 104 in file "newmain.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  2  641[None  ] int 
   685 ;; Registers used:
   686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   692 ;;      Params:         0       0       0       0
   693 ;;      Locals:         0       0       0       0
   694 ;;      Temps:          0       4       0       0
   695 ;;      Totals:         0       4       0       0
   696 ;;Total ram usage:        4 bytes
   697 ;; Hardware stack levels required when called:    7
   698 ;; This function calls:
   699 ;;		_CANisRXwarningON
   700 ;;		_CANisTXwarningON
   701 ;;		___lldiv
   702 ;;		___lmul
   703 ;;		_calibrazione
   704 ;;		_configurazione_iniziale
   705 ;;		_send_data
   706 ;; This function is called by:
   707 ;;		Startup code after reset
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text0
   712  001F80                     __ptext0:
   713                           	opt stack 0
   714  001F80                     _main:
   715                           	opt stack 24
   716                           
   717                           ;newmain.c: 105: configurazione_iniziale();
   718                           
   719                           ;incstack = 0
   720  001F80  EC2D  F00F         	call	_configurazione_iniziale	;wreg free
   721  001F84                     l642:
   722                           
   723                           ;newmain.c: 108: calibrazione();
   724  001F84  EC0A  F012         	call	_calibrazione	;wreg free
   725                           
   726                           ;newmain.c: 109: duty_cycle = currentSteering;
   727  001F88  5047               	movf	_currentSteering,w,c
   728  001F8A  0100               	movlb	0	; () banked
   729  001F8C  6FA5               	movwf	_duty_cycle& (0+255),b
   730  001F8E  6BA6               	clrf	(_duty_cycle+1)& (0+255),b
   731  001F90  6BA7               	clrf	(_duty_cycle+2)& (0+255),b
   732  001F92  6BA8               	clrf	(_duty_cycle+3)& (0+255),b
   733                           
   734                           ; BSR set to: 0
   735                           ;newmain.c: 140: if (PORTCbits.RC0 == 0) {
   736  001F94  B082               	btfsc	3970,0,c	;volatile
   737  001F96  D7F6               	goto	l642
   738                           
   739                           ; BSR set to: 0
   740                           ;newmain.c: 141: timer = (((duty_cycle * 700) / 90) + 800) *2;
   741  001F98  C0A5  F073         	movff	_duty_cycle,___lmul@multiplier
   742  001F9C  C0A6  F074         	movff	_duty_cycle+1,___lmul@multiplier+1
   743  001FA0  C0A7  F075         	movff	_duty_cycle+2,___lmul@multiplier+2
   744  001FA4  C0A8  F076         	movff	_duty_cycle+3,___lmul@multiplier+3
   745  001FA8  0EBC               	movlw	188
   746  001FAA  0100               	movlb	0	; () banked
   747  001FAC  6F77               	movwf	___lmul@multiplicand& (0+255),b
   748  001FAE  0E02               	movlw	2
   749  001FB0  6F78               	movwf	(___lmul@multiplicand+1)& (0+255),b
   750  001FB2  0E00               	movlw	0
   751  001FB4  6F79               	movwf	(___lmul@multiplicand+2)& (0+255),b
   752  001FB6  0E00               	movlw	0
   753  001FB8  6F7A               	movwf	(___lmul@multiplicand+3)& (0+255),b
   754  001FBA  EC82  F011         	call	___lmul	;wreg free
   755  001FBE  C073  F07F         	movff	?___lmul,___lldiv@dividend
   756  001FC2  C074  F080         	movff	?___lmul+1,___lldiv@dividend+1
   757  001FC6  C075  F081         	movff	?___lmul+2,___lldiv@dividend+2
   758  001FCA  C076  F082         	movff	?___lmul+3,___lldiv@dividend+3
   759  001FCE  0E5A               	movlw	90
   760  001FD0  0100               	movlb	0	; () banked
   761  001FD2  6F83               	movwf	___lldiv@divisor& (0+255),b
   762  001FD4  0E00               	movlw	0
   763  001FD6  6F84               	movwf	(___lldiv@divisor+1)& (0+255),b
   764  001FD8  0E00               	movlw	0
   765  001FDA  6F85               	movwf	(___lldiv@divisor+2)& (0+255),b
   766  001FDC  0E00               	movlw	0
   767  001FDE  6F86               	movwf	(___lldiv@divisor+3)& (0+255),b
   768  001FE0  EC51  F010         	call	___lldiv	;wreg free
   769  001FE4  90D8               	bcf	status,0,c
   770  001FE6  0100               	movlb	0	; () banked
   771  001FE8  357F               	rlcf	?___lldiv& (0+255),w,b
   772  001FEA  0100               	movlb	0	; () banked
   773  001FEC  6F91               	movwf	??_main& (0+255),b
   774  001FEE  0100               	movlb	0	; () banked
   775  001FF0  3580               	rlcf	(?___lldiv+1)& (0+255),w,b
   776  001FF2  0100               	movlb	0	; () banked
   777  001FF4  6F92               	movwf	(??_main+1)& (0+255),b
   778  001FF6  0100               	movlb	0	; () banked
   779  001FF8  3581               	rlcf	(?___lldiv+2)& (0+255),w,b
   780  001FFA  0100               	movlb	0	; () banked
   781  001FFC  6F93               	movwf	(??_main+2)& (0+255),b
   782  001FFE  0100               	movlb	0	; () banked
   783  002000  3582               	rlcf	(?___lldiv+3)& (0+255),w,b
   784  002002  0100               	movlb	0	; () banked
   785  002004  6F94               	movwf	(??_main+3)& (0+255),b
   786  002006  0E40               	movlw	64
   787  002008  0100               	movlb	0	; () banked
   788  00200A  2591               	addwf	??_main& (0+255),w,b
   789  00200C  0100               	movlb	0	; () banked
   790  00200E  6FB1               	movwf	_timer& (0+255),b
   791  002010  0E06               	movlw	6
   792  002012  0100               	movlb	0	; () banked
   793  002014  2192               	addwfc	(??_main+1)& (0+255),w,b
   794  002016  0100               	movlb	0	; () banked
   795  002018  6FB2               	movwf	(_timer+1)& (0+255),b
   796  00201A  0E00               	movlw	0
   797  00201C  0100               	movlb	0	; () banked
   798  00201E  2193               	addwfc	(??_main+2)& (0+255),w,b
   799  002020  0100               	movlb	0	; () banked
   800  002022  6FB3               	movwf	(_timer+2)& (0+255),b
   801  002024  0E00               	movlw	0
   802  002026  0100               	movlb	0	; () banked
   803  002028  2194               	addwfc	(??_main+3)& (0+255),w,b
   804  00202A  0100               	movlb	0	; () banked
   805  00202C  6FB4               	movwf	(_timer+3)& (0+255),b
   806                           
   807                           ; BSR set to: 0
   808                           ;newmain.c: 142: Ton = 65536 - timer;
   809  00202E  C0B1  F091         	movff	_timer,??_main
   810  002032  C0B2  F092         	movff	_timer+1,??_main+1
   811  002036  0100               	movlb	0	; () banked
   812  002038  1F91               	comf	??_main& (0+255),f,b
   813  00203A  1F92               	comf	(??_main+1)& (0+255),f,b
   814  00203C  4B91               	infsnz	??_main& (0+255),f,b
   815  00203E  2B92               	incf	(??_main+1)& (0+255),f,b
   816  002040  C091  F00B         	movff	??_main,_Ton
   817  002044  C092  F00C         	movff	??_main+1,_Ton+1
   818                           
   819                           ; BSR set to: 0
   820                           ;newmain.c: 143: Toff = 20000 - (timer / 2);
   821  002048  C0B1  F091         	movff	_timer,??_main
   822  00204C  C0B2  F092         	movff	_timer+1,??_main+1
   823  002050  C0B3  F093         	movff	_timer+2,??_main+2
   824  002054  C0B4  F094         	movff	_timer+3,??_main+3
   825  002058  0100               	movlb	0	; () banked
   826  00205A  90D8               	bcf	status,0,c
   827  00205C  3394               	rrcf	(??_main+3)& (0+255),f,b
   828  00205E  3393               	rrcf	(??_main+2)& (0+255),f,b
   829  002060  3392               	rrcf	(??_main+1)& (0+255),f,b
   830  002062  3391               	rrcf	??_main& (0+255),f,b
   831  002064  0100               	movlb	0	; () banked
   832  002066  1F91               	comf	??_main& (0+255),f,b
   833  002068  1F92               	comf	(??_main+1)& (0+255),f,b
   834  00206A  4B91               	infsnz	??_main& (0+255),f,b
   835  00206C  2B92               	incf	(??_main+1)& (0+255),f,b
   836  00206E  0E20               	movlw	32
   837  002070  0100               	movlb	0	; () banked
   838  002072  2591               	addwf	??_main& (0+255),w,b
   839  002074  6E09               	movwf	_Toff,c
   840  002076  0E4E               	movlw	78
   841  002078  0100               	movlb	0	; () banked
   842  00207A  2192               	addwfc	(??_main+1)& (0+255),w,b
   843  00207C  6E0A               	movwf	_Toff+1,c
   844                           
   845                           ; BSR set to: 0
   846                           ;newmain.c: 144: Toff = (65536 - (Toff * 2));
   847  00207E  C009  F091         	movff	_Toff,??_main
   848  002082  C00A  F092         	movff	_Toff+1,??_main+1
   849  002086  90D8               	bcf	status,0,c
   850  002088  0100               	movlb	0	; () banked
   851  00208A  3791               	rlcf	??_main& (0+255),f,b
   852  00208C  3792               	rlcf	(??_main+1)& (0+255),f,b
   853  00208E  0100               	movlb	0	; () banked
   854  002090  1F91               	comf	??_main& (0+255),f,b
   855  002092  1F92               	comf	(??_main+1)& (0+255),f,b
   856  002094  4B91               	infsnz	??_main& (0+255),f,b
   857  002096  2B92               	incf	(??_main+1)& (0+255),f,b
   858  002098  C091  F009         	movff	??_main,_Toff
   859  00209C  C092  F00A         	movff	??_main+1,_Toff+1
   860                           
   861                           ; BSR set to: 0
   862                           
   863                           ; BSR set to: 0
   864  0020A0  D771               	goto	l642
   865  0020A2                     __end_of_main:
   866                           	opt stack 0
   867                           tblptru	equ	0xFF8
   868                           tblptrh	equ	0xFF7
   869                           tblptrl	equ	0xFF6
   870                           tablat	equ	0xFF5
   871                           postinc0	equ	0xFEE
   872                           wreg	equ	0xFE8
   873                           postdec1	equ	0xFE5
   874                           fsr1l	equ	0xFE1
   875                           status	equ	0xFD8
   876                           
   877 ;; *************** function _send_data *****************
   878 ;; Defined at:
   879 ;;		line 158 in file "newmain.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;		None               void
   886 ;; Registers used:
   887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   893 ;;      Params:         0       0       0       0
   894 ;;      Locals:         0       0       0       0
   895 ;;      Temps:          0       0       0       0
   896 ;;      Totals:         0       0       0       0
   897 ;;Total ram usage:        0 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; Hardware stack levels required when called:    5
   900 ;; This function calls:
   901 ;;		_CANisTxReady
   902 ;;		_CANsendMessage
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text1
   909  00245A                     __ptext1:
   910                           	opt stack 0
   911  00245A                     _send_data:
   912                           	opt stack 25
   913                           
   914                           ;newmain.c: 159: if (CANisTxReady()) {
   915                           
   916                           ;incstack = 0
   917  00245A  EC5F  F012         	call	_CANisTxReady	;wreg free
   918  00245E  0900               	iorlw	0
   919  002460  B4D8               	btfsc	status,2,c
   920  002462  0012               	return	
   921                           
   922                           ;newmain.c: 160: if (remote_frame == 1) {
   923  002464  A04A               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
   924  002466  D016               	goto	l3512
   925                           
   926                           ;newmain.c: 162: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG &
   927                           ;newmain.c: 163: CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   928  002468  C0A9  F073         	movff	_id,CANsendMessage@identifier
   929  00246C  C0AA  F074         	movff	_id+1,CANsendMessage@identifier+1
   930  002470  C0AB  F075         	movff	_id+2,CANsendMessage@identifier+2
   931  002474  C0AC  F076         	movff	_id+3,CANsendMessage@identifier+3
   932  002478  0EB7               	movlw	low _data_array
   933  00247A  0100               	movlb	0	; () banked
   934  00247C  6F77               	movwf	CANsendMessage@data& (0+255),b
   935  00247E  0E00               	movlw	high _data_array
   936  002480  0100               	movlb	0	; () banked
   937  002482  6F78               	movwf	(CANsendMessage@data+1)& (0+255),b
   938  002484  0E08               	movlw	8
   939  002486  0100               	movlb	0	; () banked
   940  002488  6F79               	movwf	CANsendMessage@dataLength& (0+255),b
   941  00248A  0EBC               	movlw	188
   942  00248C  0100               	movlb	0	; () banked
   943  00248E  6F7A               	movwf	CANsendMessage@flags& (0+255),b
   944  002490  EC2F  F006         	call	_CANsendMessage	;wreg free
   945  002494                     l3512:
   946                           
   947                           ;newmain.c: 168: }
   948                           ;newmain.c: 169: remote_frame = 0;
   949  002494  904A               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
   950  002496  0012               	return	
   951  002498                     __end_of_send_data:
   952                           	opt stack 0
   953                           tblptru	equ	0xFF8
   954                           tblptrh	equ	0xFF7
   955                           tblptrl	equ	0xFF6
   956                           tablat	equ	0xFF5
   957                           postinc0	equ	0xFEE
   958                           wreg	equ	0xFE8
   959                           postdec1	equ	0xFE5
   960                           fsr1l	equ	0xFE1
   961                           status	equ	0xFD8
   962                           
   963 ;; *************** function _CANsendMessage *****************
   964 ;; Defined at:
   965 ;;		line 294 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  identifier      4   19[BANK0 ] unsigned long 
   968 ;;  data            2   23[BANK0 ] PTR unsigned char 
   969 ;;		 -> data_array(8), 
   970 ;;  dataLength      1   25[BANK0 ] unsigned char 
   971 ;;  flags           1   26[BANK0 ] enum E16866
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  tamp            4   31[BANK0 ] unsigned long 
   974 ;; Return value:  Size  Location     Type
   975 ;;		None               void
   976 ;; Registers used:
   977 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   983 ;;      Params:         0       8       0       0
   984 ;;      Locals:         0       4       0       0
   985 ;;      Temps:          0       4       0       0
   986 ;;      Totals:         0      16       0       0
   987 ;;Total ram usage:       16 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    4
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_send_data
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text2
   998  000C5E                     __ptext2:
   999                           	opt stack 0
  1000  000C5E                     _CANsendMessage:
  1001                           	opt stack 25
  1002                           
  1003                           ;inc\CANlib.h: 296: unsigned long tamp;
  1004                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1005                           
  1006                           ;incstack = 0
  1007  000C5E  010F               	movlb	15	; () banked
  1008  000C60  B740               	btfsc	64,3,b	;volatile
  1009  000C62  D13F               	goto	l361
  1010                           
  1011                           ; BSR set to: 15
  1012                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1013  000C64  C079  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1014                           
  1015                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1016  000C68  0100               	movlb	0	; () banked
  1017  000C6A  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1018  000C6C  D003               	goto	l362
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1022  000C6E  010F               	movlb	15	; () banked
  1023  000C70  8D45               	bsf	69,6,b	;volatile
  1024  000C72  D002               	goto	l363
  1025  000C74                     l362:
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;inc\CANlib.h: 302: else
  1029                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1030  000C74  010F               	movlb	15	; () banked
  1031  000C76  9D45               	bcf	69,6,b	;volatile
  1032  000C78                     l363:
  1033                           
  1034                           ; BSR set to: 15
  1035                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1036  000C78  0100               	movlb	0	; () banked
  1037  000C7A  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1038  000C7C  D079               	goto	l364
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;inc\CANlib.h: 306: {
  1042                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1043  000C7E  0100               	movlb	0	; () banked
  1044  000C80  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1045  000C82  0100               	movlb	0	; () banked
  1046  000C84  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1047  000C86  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1048  000C88  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1049  000C8A  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1053  000C8C  C07F  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1057  000C90  0E00               	movlw	0
  1058  000C92  0100               	movlb	0	; () banked
  1059  000C94  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1060  000C96  0100               	movlb	0	; () banked
  1061  000C98  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1062  000C9A  0EFF               	movlw	255
  1063  000C9C  0100               	movlb	0	; () banked
  1064  000C9E  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1065  000CA0  0100               	movlb	0	; () banked
  1066  000CA2  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1067  000CA4  0E00               	movlw	0
  1068  000CA6  0100               	movlb	0	; () banked
  1069  000CA8  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1070  000CAA  0100               	movlb	0	; () banked
  1071  000CAC  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1072  000CAE  0E00               	movlw	0
  1073  000CB0  0100               	movlb	0	; () banked
  1074  000CB2  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1075  000CB4  0100               	movlb	0	; () banked
  1076  000CB6  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1080  000CB8  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1081  000CBC  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1082  000CC0  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1083  000CC4  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1084  000CC8  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1085  000CCC  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1086  000CD0  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1087  000CD4  0100               	movlb	0	; () banked
  1088  000CD6  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1089  000CD8  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1090  000CDC  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1091  000CE0  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1092  000CE4  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1096  000CE8  C07F  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1100  000CEC  0E00               	movlw	0
  1101  000CEE  010F               	movlb	15	; () banked
  1102  000CF0  6F42               	movwf	66,b	;volatile
  1103                           
  1104                           ; BSR set to: 15
  1105                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1106  000CF2  010F               	movlb	15	; () banked
  1107  000CF4  8742               	bsf	66,3,b	;volatile
  1108                           
  1109                           ; BSR set to: 15
  1110                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1111  000CF6  0100               	movlb	0	; () banked
  1112  000CF8  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1113  000CFA  D002               	goto	l365
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1117  000CFC  010F               	movlb	15	; () banked
  1118  000CFE  8142               	bsf	66,0,b	;volatile
  1119  000D00                     l365:
  1120                           
  1121                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1122  000D00  0100               	movlb	0	; () banked
  1123  000D02  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1124  000D04  D002               	goto	l366
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1128  000D06  010F               	movlb	15	; () banked
  1129  000D08  8342               	bsf	66,1,b	;volatile
  1130  000D0A                     l366:
  1131                           
  1132                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1133  000D0A  0100               	movlb	0	; () banked
  1134  000D0C  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1135  000D0E  D002               	goto	l367
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1139  000D10  010F               	movlb	15	; () banked
  1140  000D12  8B42               	bsf	66,5,b	;volatile
  1141  000D14                     l367:
  1142                           
  1143                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1144  000D14  0100               	movlb	0	; () banked
  1145  000D16  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1146  000D18  D002               	goto	l368
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1150  000D1A  010F               	movlb	15	; () banked
  1151  000D1C  8D42               	bsf	66,6,b	;volatile
  1152  000D1E                     l368:
  1153                           
  1154                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1155  000D1E  0100               	movlb	0	; () banked
  1156  000D20  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1157  000D22  D002               	goto	l3008
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1161  000D24  010F               	movlb	15	; () banked
  1162  000D26  8F42               	bsf	66,7,b	;volatile
  1163  000D28                     l3008:
  1164                           
  1165                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1166  000D28  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1167  000D2C  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1168  000D30  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1169  000D34  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1170  000D38  0E16               	movlw	22
  1171  000D3A  D006               	goto	u3150
  1172  000D3C                     u3155:
  1173  000D3C  0100               	movlb	0	; () banked
  1174  000D3E  90D8               	bcf	status,0,c
  1175  000D40  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1176  000D42  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1177  000D44  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1178  000D46  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1179  000D48                     u3150:
  1180  000D48  2EE8               	decfsz	wreg,f,c
  1181  000D4A  D7F8               	goto	u3155
  1182  000D4C  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1183  000D50  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1184  000D54  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1185  000D58  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1189  000D5C  0100               	movlb	0	; () banked
  1190  000D5E  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1191  000D60  0100               	movlb	0	; () banked
  1192  000D62  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1193  000D64  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1194  000D66  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1195  000D68  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1199  000D6A  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1200                           
  1201                           ;inc\CANlib.h: 332: }
  1202  000D6E  D059               	goto	l3028
  1203  000D70                     l364:
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;inc\CANlib.h: 334: else
  1207                           ;inc\CANlib.h: 336: {
  1208                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1209  000D70  010F               	movlb	15	; () banked
  1210  000D72  9742               	bcf	66,3,b	;volatile
  1211                           
  1212                           ; BSR set to: 15
  1213                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1214  000D74  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1215  000D78  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1216  000D7C  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1217  000D80  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1218  000D84  0E04               	movlw	4
  1219  000D86  D006               	goto	u3160
  1220  000D88                     u3165:
  1221  000D88  0100               	movlb	0	; () banked
  1222  000D8A  90D8               	bcf	status,0,c
  1223  000D8C  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1224  000D8E  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1225  000D90  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1226  000D92  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1227  000D94                     u3160:
  1228  000D94  2EE8               	decfsz	wreg,f,c
  1229  000D96  D7F8               	goto	u3165
  1230  000D98  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1231  000D9C  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1232  000DA0  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1233  000DA4  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1237  000DA8  0100               	movlb	0	; () banked
  1238  000DAA  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1239  000DAC  0100               	movlb	0	; () banked
  1240  000DAE  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1241  000DB0  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1242  000DB2  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1243  000DB4  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1247  000DB6  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1251  000DBA  0E07               	movlw	7
  1252  000DBC  0100               	movlb	0	; () banked
  1253  000DBE  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1254  000DC0  0100               	movlb	0	; () banked
  1255  000DC2  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1256  000DC4  0E00               	movlw	0
  1257  000DC6  0100               	movlb	0	; () banked
  1258  000DC8  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1259  000DCA  0100               	movlb	0	; () banked
  1260  000DCC  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1261  000DCE  0E00               	movlw	0
  1262  000DD0  0100               	movlb	0	; () banked
  1263  000DD2  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1264  000DD4  0100               	movlb	0	; () banked
  1265  000DD6  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1266  000DD8  0E00               	movlw	0
  1267  000DDA  0100               	movlb	0	; () banked
  1268  000DDC  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1269  000DDE  0100               	movlb	0	; () banked
  1270  000DE0  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1274  000DE2  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1275  000DE6  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1276  000DEA  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1277  000DEE  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1278  000DF2  0E05               	movlw	5
  1279  000DF4                     u3175:
  1280  000DF4  90D8               	bcf	status,0,c
  1281  000DF6  0100               	movlb	0	; () banked
  1282  000DF8  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1283  000DFA  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1284  000DFC  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1285  000DFE  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1286  000E00  2EE8               	decfsz	wreg,f,c
  1287  000E02  D7F8               	goto	u3175
  1288  000E04  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1289  000E08  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1290  000E0C  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1291  000E10  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1292                           
  1293                           ; BSR set to: 0
  1294                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1295  000E14  010F               	movlb	15	; () banked
  1296  000E16  5142               	movf	66,w,b	;volatile
  1297  000E18  0B1F               	andlw	31
  1298  000E1A  010F               	movlb	15	; () banked
  1299  000E1C  6F42               	movwf	66,b	;volatile
  1300                           
  1301                           ; BSR set to: 15
  1302                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1303  000E1E  C07F  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1304  000E22                     l3028:
  1305                           
  1306                           ;inc\CANlib.h: 347: }
  1307                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1308  000E22  0100               	movlb	0	; () banked
  1309  000E24  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1310  000E26  D003               	goto	l371
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1314  000E28  010F               	movlb	15	; () banked
  1315  000E2A  8140               	bsf	64,0,b	;volatile
  1316  000E2C  D002               	goto	l372
  1317  000E2E                     l371:
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;inc\CANlib.h: 351: else
  1321                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1322  000E2E  010F               	movlb	15	; () banked
  1323  000E30  9140               	bcf	64,0,b	;volatile
  1324  000E32                     l372:
  1325                           
  1326                           ; BSR set to: 15
  1327                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1328  000E32  0100               	movlb	0	; () banked
  1329  000E34  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1330  000E36  D003               	goto	l373
  1331                           
  1332                           ; BSR set to: 0
  1333                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1334  000E38  010F               	movlb	15	; () banked
  1335  000E3A  8340               	bsf	64,1,b	;volatile
  1336  000E3C  D002               	goto	l3034
  1337  000E3E                     l373:
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;inc\CANlib.h: 355: else
  1341                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1342  000E3E  010F               	movlb	15	; () banked
  1343  000E40  9340               	bcf	64,1,b	;volatile
  1344  000E42                     l3034:
  1345                           
  1346                           ; BSR set to: 15
  1347                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1348  000E42  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1349  000E46  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1350  000E4A  50DF               	movf	indf2,w,c
  1351  000E4C  010F               	movlb	15	; () banked
  1352  000E4E  6F46               	movwf	70,b	;volatile
  1353                           
  1354                           ; BSR set to: 15
  1355                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1356  000E50  0100               	movlb	0	; () banked
  1357  000E52  EE20 F001          	lfsr	2,1
  1358  000E56  5177               	movf	CANsendMessage@data& (0+255),w,b
  1359  000E58  26D9               	addwf	fsr2l,f,c
  1360  000E5A  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1361  000E5C  22DA               	addwfc	fsr2h,f,c
  1362  000E5E  50DF               	movf	indf2,w,c
  1363  000E60  010F               	movlb	15	; () banked
  1364  000E62  6F47               	movwf	71,b	;volatile
  1365                           
  1366                           ; BSR set to: 15
  1367                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1368  000E64  0100               	movlb	0	; () banked
  1369  000E66  EE20 F002          	lfsr	2,2
  1370  000E6A  5177               	movf	CANsendMessage@data& (0+255),w,b
  1371  000E6C  26D9               	addwf	fsr2l,f,c
  1372  000E6E  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1373  000E70  22DA               	addwfc	fsr2h,f,c
  1374  000E72  50DF               	movf	indf2,w,c
  1375  000E74  010F               	movlb	15	; () banked
  1376  000E76  6F48               	movwf	72,b	;volatile
  1377                           
  1378                           ; BSR set to: 15
  1379                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1380  000E78  0100               	movlb	0	; () banked
  1381  000E7A  EE20 F003          	lfsr	2,3
  1382  000E7E  5177               	movf	CANsendMessage@data& (0+255),w,b
  1383  000E80  26D9               	addwf	fsr2l,f,c
  1384  000E82  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1385  000E84  22DA               	addwfc	fsr2h,f,c
  1386  000E86  50DF               	movf	indf2,w,c
  1387  000E88  010F               	movlb	15	; () banked
  1388  000E8A  6F49               	movwf	73,b	;volatile
  1389                           
  1390                           ; BSR set to: 15
  1391                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  1392  000E8C  0100               	movlb	0	; () banked
  1393  000E8E  EE20 F004          	lfsr	2,4
  1394  000E92  5177               	movf	CANsendMessage@data& (0+255),w,b
  1395  000E94  26D9               	addwf	fsr2l,f,c
  1396  000E96  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1397  000E98  22DA               	addwfc	fsr2h,f,c
  1398  000E9A  50DF               	movf	indf2,w,c
  1399  000E9C  010F               	movlb	15	; () banked
  1400  000E9E  6F4A               	movwf	74,b	;volatile
  1401                           
  1402                           ; BSR set to: 15
  1403                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  1404  000EA0  0100               	movlb	0	; () banked
  1405  000EA2  EE20 F005          	lfsr	2,5
  1406  000EA6  5177               	movf	CANsendMessage@data& (0+255),w,b
  1407  000EA8  26D9               	addwf	fsr2l,f,c
  1408  000EAA  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1409  000EAC  22DA               	addwfc	fsr2h,f,c
  1410  000EAE  50DF               	movf	indf2,w,c
  1411  000EB0  010F               	movlb	15	; () banked
  1412  000EB2  6F4B               	movwf	75,b	;volatile
  1413                           
  1414                           ; BSR set to: 15
  1415                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  1416  000EB4  0100               	movlb	0	; () banked
  1417  000EB6  EE20 F006          	lfsr	2,6
  1418  000EBA  5177               	movf	CANsendMessage@data& (0+255),w,b
  1419  000EBC  26D9               	addwf	fsr2l,f,c
  1420  000EBE  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1421  000EC0  22DA               	addwfc	fsr2h,f,c
  1422  000EC2  50DF               	movf	indf2,w,c
  1423  000EC4  010F               	movlb	15	; () banked
  1424  000EC6  6F4C               	movwf	76,b	;volatile
  1425                           
  1426                           ; BSR set to: 15
  1427                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  1428  000EC8  0100               	movlb	0	; () banked
  1429  000ECA  EE20 F007          	lfsr	2,7
  1430  000ECE  5177               	movf	CANsendMessage@data& (0+255),w,b
  1431  000ED0  26D9               	addwf	fsr2l,f,c
  1432  000ED2  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1433  000ED4  22DA               	addwfc	fsr2h,f,c
  1434  000ED6  50DF               	movf	indf2,w,c
  1435  000ED8  010F               	movlb	15	; () banked
  1436  000EDA  6F4D               	movwf	77,b	;volatile
  1437                           
  1438                           ; BSR set to: 15
  1439                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  1440  000EDC  010F               	movlb	15	; () banked
  1441  000EDE  8740               	bsf	64,3,b	;volatile
  1442                           
  1443                           ; BSR set to: 15
  1444                           ;inc\CANlib.h: 368: return;
  1445  000EE0  0012               	return	
  1446  000EE2                     l361:
  1447                           
  1448                           ; BSR set to: 15
  1449                           ;inc\CANlib.h: 369: }
  1450                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  1451  000EE2  010F               	movlb	15	; () banked
  1452  000EE4  B730               	btfsc	48,3,b	;volatile
  1453  000EE6  D13F               	goto	l376
  1454                           
  1455                           ; BSR set to: 15
  1456                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  1457  000EE8  C079  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1458                           
  1459                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  1460  000EEC  0100               	movlb	0	; () banked
  1461  000EEE  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1462  000EF0  D003               	goto	l377
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  1466  000EF2  010F               	movlb	15	; () banked
  1467  000EF4  8D35               	bsf	53,6,b	;volatile
  1468  000EF6  D002               	goto	l378
  1469  000EF8                     l377:
  1470                           
  1471                           ; BSR set to: 0
  1472                           ;inc\CANlib.h: 378: else
  1473                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  1474  000EF8  010F               	movlb	15	; () banked
  1475  000EFA  9D35               	bcf	53,6,b	;volatile
  1476  000EFC                     l378:
  1477                           
  1478                           ; BSR set to: 15
  1479                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  1480  000EFC  0100               	movlb	0	; () banked
  1481  000EFE  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1482  000F00  D079               	goto	l379
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;inc\CANlib.h: 382: {
  1486                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  1487  000F02  0100               	movlb	0	; () banked
  1488  000F04  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1489  000F06  0100               	movlb	0	; () banked
  1490  000F08  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1491  000F0A  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1492  000F0C  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1493  000F0E  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  1497  000F10  C07F  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  1501  000F14  0E00               	movlw	0
  1502  000F16  0100               	movlb	0	; () banked
  1503  000F18  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1504  000F1A  0100               	movlb	0	; () banked
  1505  000F1C  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1506  000F1E  0EFF               	movlw	255
  1507  000F20  0100               	movlb	0	; () banked
  1508  000F22  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1509  000F24  0100               	movlb	0	; () banked
  1510  000F26  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1511  000F28  0E00               	movlw	0
  1512  000F2A  0100               	movlb	0	; () banked
  1513  000F2C  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1514  000F2E  0100               	movlb	0	; () banked
  1515  000F30  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1516  000F32  0E00               	movlw	0
  1517  000F34  0100               	movlb	0	; () banked
  1518  000F36  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1519  000F38  0100               	movlb	0	; () banked
  1520  000F3A  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  1524  000F3C  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1525  000F40  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1526  000F44  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1527  000F48  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1528  000F4C  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1529  000F50  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1530  000F54  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1531  000F58  0100               	movlb	0	; () banked
  1532  000F5A  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1533  000F5C  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1534  000F60  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1535  000F64  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1536  000F68  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  1540  000F6C  C07F  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  1544  000F70  0E00               	movlw	0
  1545  000F72  010F               	movlb	15	; () banked
  1546  000F74  6F32               	movwf	50,b	;volatile
  1547                           
  1548                           ; BSR set to: 15
  1549                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  1550  000F76  010F               	movlb	15	; () banked
  1551  000F78  8732               	bsf	50,3,b	;volatile
  1552                           
  1553                           ; BSR set to: 15
  1554                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  1555  000F7A  0100               	movlb	0	; () banked
  1556  000F7C  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1557  000F7E  D002               	goto	l380
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  1561  000F80  010F               	movlb	15	; () banked
  1562  000F82  8132               	bsf	50,0,b	;volatile
  1563  000F84                     l380:
  1564                           
  1565                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  1566  000F84  0100               	movlb	0	; () banked
  1567  000F86  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1568  000F88  D002               	goto	l381
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  1572  000F8A  010F               	movlb	15	; () banked
  1573  000F8C  8332               	bsf	50,1,b	;volatile
  1574  000F8E                     l381:
  1575                           
  1576                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  1577  000F8E  0100               	movlb	0	; () banked
  1578  000F90  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1579  000F92  D002               	goto	l382
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  1583  000F94  010F               	movlb	15	; () banked
  1584  000F96  8B32               	bsf	50,5,b	;volatile
  1585  000F98                     l382:
  1586                           
  1587                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  1588  000F98  0100               	movlb	0	; () banked
  1589  000F9A  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1590  000F9C  D002               	goto	l383
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  1594  000F9E  010F               	movlb	15	; () banked
  1595  000FA0  8D32               	bsf	50,6,b	;volatile
  1596  000FA2                     l383:
  1597                           
  1598                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  1599  000FA2  0100               	movlb	0	; () banked
  1600  000FA4  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1601  000FA6  D002               	goto	l3084
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  1605  000FA8  010F               	movlb	15	; () banked
  1606  000FAA  8F32               	bsf	50,7,b	;volatile
  1607  000FAC                     l3084:
  1608                           
  1609                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  1610  000FAC  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1611  000FB0  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1612  000FB4  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1613  000FB8  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1614  000FBC  0E16               	movlw	22
  1615  000FBE  D006               	goto	u3280
  1616  000FC0                     u3285:
  1617  000FC0  0100               	movlb	0	; () banked
  1618  000FC2  90D8               	bcf	status,0,c
  1619  000FC4  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1620  000FC6  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1621  000FC8  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1622  000FCA  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1623  000FCC                     u3280:
  1624  000FCC  2EE8               	decfsz	wreg,f,c
  1625  000FCE  D7F8               	goto	u3285
  1626  000FD0  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1627  000FD4  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1628  000FD8  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1629  000FDC  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  1633  000FE0  0100               	movlb	0	; () banked
  1634  000FE2  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1635  000FE4  0100               	movlb	0	; () banked
  1636  000FE6  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1637  000FE8  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1638  000FEA  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1639  000FEC  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  1643  000FEE  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1644                           
  1645                           ;inc\CANlib.h: 407: }
  1646  000FF2  D059               	goto	l3104
  1647  000FF4                     l379:
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;inc\CANlib.h: 409: else
  1651                           ;inc\CANlib.h: 411: {
  1652                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  1653  000FF4  010F               	movlb	15	; () banked
  1654  000FF6  9732               	bcf	50,3,b	;volatile
  1655                           
  1656                           ; BSR set to: 15
  1657                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  1658  000FF8  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1659  000FFC  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1660  001000  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1661  001004  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1662  001008  0E04               	movlw	4
  1663  00100A  D006               	goto	u3290
  1664  00100C                     u3295:
  1665  00100C  0100               	movlb	0	; () banked
  1666  00100E  90D8               	bcf	status,0,c
  1667  001010  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1668  001012  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1669  001014  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1670  001016  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1671  001018                     u3290:
  1672  001018  2EE8               	decfsz	wreg,f,c
  1673  00101A  D7F8               	goto	u3295
  1674  00101C  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1675  001020  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1676  001024  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1677  001028  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  1681  00102C  0100               	movlb	0	; () banked
  1682  00102E  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1683  001030  0100               	movlb	0	; () banked
  1684  001032  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1685  001034  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1686  001036  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1687  001038  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  1691  00103A  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  1695  00103E  0E07               	movlw	7
  1696  001040  0100               	movlb	0	; () banked
  1697  001042  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1698  001044  0100               	movlb	0	; () banked
  1699  001046  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1700  001048  0E00               	movlw	0
  1701  00104A  0100               	movlb	0	; () banked
  1702  00104C  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1703  00104E  0100               	movlb	0	; () banked
  1704  001050  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1705  001052  0E00               	movlw	0
  1706  001054  0100               	movlb	0	; () banked
  1707  001056  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1708  001058  0100               	movlb	0	; () banked
  1709  00105A  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1710  00105C  0E00               	movlw	0
  1711  00105E  0100               	movlb	0	; () banked
  1712  001060  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1713  001062  0100               	movlb	0	; () banked
  1714  001064  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  1718  001066  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1719  00106A  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1720  00106E  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1721  001072  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1722  001076  0E05               	movlw	5
  1723  001078                     u3305:
  1724  001078  90D8               	bcf	status,0,c
  1725  00107A  0100               	movlb	0	; () banked
  1726  00107C  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1727  00107E  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1728  001080  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1729  001082  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1730  001084  2EE8               	decfsz	wreg,f,c
  1731  001086  D7F8               	goto	u3305
  1732  001088  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1733  00108C  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1734  001090  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1735  001094  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  1739  001098  010F               	movlb	15	; () banked
  1740  00109A  5132               	movf	50,w,b	;volatile
  1741  00109C  0B1F               	andlw	31
  1742  00109E  010F               	movlb	15	; () banked
  1743  0010A0  6F32               	movwf	50,b	;volatile
  1744                           
  1745                           ; BSR set to: 15
  1746                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  1747  0010A2  C07F  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  1748  0010A6                     l3104:
  1749                           
  1750                           ;inc\CANlib.h: 422: }
  1751                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  1752  0010A6  0100               	movlb	0	; () banked
  1753  0010A8  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1754  0010AA  D003               	goto	l386
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  1758  0010AC  010F               	movlb	15	; () banked
  1759  0010AE  8130               	bsf	48,0,b	;volatile
  1760  0010B0  D002               	goto	l387
  1761  0010B2                     l386:
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;inc\CANlib.h: 426: else
  1765                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  1766  0010B2  010F               	movlb	15	; () banked
  1767  0010B4  9130               	bcf	48,0,b	;volatile
  1768  0010B6                     l387:
  1769                           
  1770                           ; BSR set to: 15
  1771                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  1772  0010B6  0100               	movlb	0	; () banked
  1773  0010B8  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1774  0010BA  D003               	goto	l388
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  1778  0010BC  010F               	movlb	15	; () banked
  1779  0010BE  8330               	bsf	48,1,b	;volatile
  1780  0010C0  D002               	goto	l3110
  1781  0010C2                     l388:
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;inc\CANlib.h: 430: else
  1785                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  1786  0010C2  010F               	movlb	15	; () banked
  1787  0010C4  9330               	bcf	48,1,b	;volatile
  1788  0010C6                     l3110:
  1789                           
  1790                           ; BSR set to: 15
  1791                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  1792  0010C6  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1793  0010CA  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1794  0010CE  50DF               	movf	indf2,w,c
  1795  0010D0  010F               	movlb	15	; () banked
  1796  0010D2  6F36               	movwf	54,b	;volatile
  1797                           
  1798                           ; BSR set to: 15
  1799                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  1800  0010D4  0100               	movlb	0	; () banked
  1801  0010D6  EE20 F001          	lfsr	2,1
  1802  0010DA  5177               	movf	CANsendMessage@data& (0+255),w,b
  1803  0010DC  26D9               	addwf	fsr2l,f,c
  1804  0010DE  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1805  0010E0  22DA               	addwfc	fsr2h,f,c
  1806  0010E2  50DF               	movf	indf2,w,c
  1807  0010E4  010F               	movlb	15	; () banked
  1808  0010E6  6F37               	movwf	55,b	;volatile
  1809                           
  1810                           ; BSR set to: 15
  1811                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  1812  0010E8  0100               	movlb	0	; () banked
  1813  0010EA  EE20 F002          	lfsr	2,2
  1814  0010EE  5177               	movf	CANsendMessage@data& (0+255),w,b
  1815  0010F0  26D9               	addwf	fsr2l,f,c
  1816  0010F2  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1817  0010F4  22DA               	addwfc	fsr2h,f,c
  1818  0010F6  50DF               	movf	indf2,w,c
  1819  0010F8  010F               	movlb	15	; () banked
  1820  0010FA  6F38               	movwf	56,b	;volatile
  1821                           
  1822                           ; BSR set to: 15
  1823                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  1824  0010FC  0100               	movlb	0	; () banked
  1825  0010FE  EE20 F003          	lfsr	2,3
  1826  001102  5177               	movf	CANsendMessage@data& (0+255),w,b
  1827  001104  26D9               	addwf	fsr2l,f,c
  1828  001106  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1829  001108  22DA               	addwfc	fsr2h,f,c
  1830  00110A  50DF               	movf	indf2,w,c
  1831  00110C  010F               	movlb	15	; () banked
  1832  00110E  6F39               	movwf	57,b	;volatile
  1833                           
  1834                           ; BSR set to: 15
  1835                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  1836  001110  0100               	movlb	0	; () banked
  1837  001112  EE20 F004          	lfsr	2,4
  1838  001116  5177               	movf	CANsendMessage@data& (0+255),w,b
  1839  001118  26D9               	addwf	fsr2l,f,c
  1840  00111A  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1841  00111C  22DA               	addwfc	fsr2h,f,c
  1842  00111E  50DF               	movf	indf2,w,c
  1843  001120  010F               	movlb	15	; () banked
  1844  001122  6F3A               	movwf	58,b	;volatile
  1845                           
  1846                           ; BSR set to: 15
  1847                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  1848  001124  0100               	movlb	0	; () banked
  1849  001126  EE20 F005          	lfsr	2,5
  1850  00112A  5177               	movf	CANsendMessage@data& (0+255),w,b
  1851  00112C  26D9               	addwf	fsr2l,f,c
  1852  00112E  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1853  001130  22DA               	addwfc	fsr2h,f,c
  1854  001132  50DF               	movf	indf2,w,c
  1855  001134  010F               	movlb	15	; () banked
  1856  001136  6F3B               	movwf	59,b	;volatile
  1857                           
  1858                           ; BSR set to: 15
  1859                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  1860  001138  0100               	movlb	0	; () banked
  1861  00113A  EE20 F006          	lfsr	2,6
  1862  00113E  5177               	movf	CANsendMessage@data& (0+255),w,b
  1863  001140  26D9               	addwf	fsr2l,f,c
  1864  001142  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1865  001144  22DA               	addwfc	fsr2h,f,c
  1866  001146  50DF               	movf	indf2,w,c
  1867  001148  010F               	movlb	15	; () banked
  1868  00114A  6F3C               	movwf	60,b	;volatile
  1869                           
  1870                           ; BSR set to: 15
  1871                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  1872  00114C  0100               	movlb	0	; () banked
  1873  00114E  EE20 F007          	lfsr	2,7
  1874  001152  5177               	movf	CANsendMessage@data& (0+255),w,b
  1875  001154  26D9               	addwf	fsr2l,f,c
  1876  001156  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1877  001158  22DA               	addwfc	fsr2h,f,c
  1878  00115A  50DF               	movf	indf2,w,c
  1879  00115C  010F               	movlb	15	; () banked
  1880  00115E  6F3D               	movwf	61,b	;volatile
  1881                           
  1882                           ; BSR set to: 15
  1883                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  1884  001160  010F               	movlb	15	; () banked
  1885  001162  8730               	bsf	48,3,b	;volatile
  1886                           
  1887                           ; BSR set to: 15
  1888                           ;inc\CANlib.h: 444: return;
  1889  001164  0012               	return	
  1890  001166                     l376:
  1891                           
  1892                           ; BSR set to: 15
  1893                           ;inc\CANlib.h: 445: }
  1894                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  1895  001166  010F               	movlb	15	; () banked
  1896  001168  B720               	btfsc	32,3,b	;volatile
  1897  00116A  0012               	return	
  1898                           
  1899                           ; BSR set to: 15
  1900                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  1901  00116C  C079  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  1902                           
  1903                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  1904  001170  0100               	movlb	0	; () banked
  1905  001172  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1906  001174  D003               	goto	l391
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  1910  001176  010F               	movlb	15	; () banked
  1911  001178  8D25               	bsf	37,6,b	;volatile
  1912  00117A  D002               	goto	l392
  1913  00117C                     l391:
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;inc\CANlib.h: 454: else
  1917                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  1918  00117C  010F               	movlb	15	; () banked
  1919  00117E  9D25               	bcf	37,6,b	;volatile
  1920  001180                     l392:
  1921                           
  1922                           ; BSR set to: 15
  1923                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  1924  001180  0100               	movlb	0	; () banked
  1925  001182  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1926  001184  D079               	goto	l393
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;inc\CANlib.h: 458: {
  1930                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  1931  001186  0100               	movlb	0	; () banked
  1932  001188  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1933  00118A  0100               	movlb	0	; () banked
  1934  00118C  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1935  00118E  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1936  001190  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1937  001192  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  1941  001194  C07F  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  1945  001198  0E00               	movlw	0
  1946  00119A  0100               	movlb	0	; () banked
  1947  00119C  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1948  00119E  0100               	movlb	0	; () banked
  1949  0011A0  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1950  0011A2  0EFF               	movlw	255
  1951  0011A4  0100               	movlb	0	; () banked
  1952  0011A6  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1953  0011A8  0100               	movlb	0	; () banked
  1954  0011AA  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1955  0011AC  0E00               	movlw	0
  1956  0011AE  0100               	movlb	0	; () banked
  1957  0011B0  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1958  0011B2  0100               	movlb	0	; () banked
  1959  0011B4  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1960  0011B6  0E00               	movlw	0
  1961  0011B8  0100               	movlb	0	; () banked
  1962  0011BA  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1963  0011BC  0100               	movlb	0	; () banked
  1964  0011BE  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  1968  0011C0  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1969  0011C4  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1970  0011C8  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1971  0011CC  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1972  0011D0  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1973  0011D4  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1974  0011D8  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1975  0011DC  0100               	movlb	0	; () banked
  1976  0011DE  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1977  0011E0  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1978  0011E4  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1979  0011E8  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1980  0011EC  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  1984  0011F0  C07F  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  1988  0011F4  0E00               	movlw	0
  1989  0011F6  010F               	movlb	15	; () banked
  1990  0011F8  6F22               	movwf	34,b	;volatile
  1991                           
  1992                           ; BSR set to: 15
  1993                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  1994  0011FA  010F               	movlb	15	; () banked
  1995  0011FC  8722               	bsf	34,3,b	;volatile
  1996                           
  1997                           ; BSR set to: 15
  1998                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  1999  0011FE  0100               	movlb	0	; () banked
  2000  001200  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2001  001202  D002               	goto	l394
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2005  001204  010F               	movlb	15	; () banked
  2006  001206  8122               	bsf	34,0,b	;volatile
  2007  001208                     l394:
  2008                           
  2009                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2010  001208  0100               	movlb	0	; () banked
  2011  00120A  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2012  00120C  D002               	goto	l395
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2016  00120E  010F               	movlb	15	; () banked
  2017  001210  8322               	bsf	34,1,b	;volatile
  2018  001212                     l395:
  2019                           
  2020                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2021  001212  0100               	movlb	0	; () banked
  2022  001214  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2023  001216  D002               	goto	l396
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2027  001218  010F               	movlb	15	; () banked
  2028  00121A  8B22               	bsf	34,5,b	;volatile
  2029  00121C                     l396:
  2030                           
  2031                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2032  00121C  0100               	movlb	0	; () banked
  2033  00121E  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2034  001220  D002               	goto	l397
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2038  001222  010F               	movlb	15	; () banked
  2039  001224  8D22               	bsf	34,6,b	;volatile
  2040  001226                     l397:
  2041                           
  2042                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2043  001226  0100               	movlb	0	; () banked
  2044  001228  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2045  00122A  D002               	goto	l3160
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2049  00122C  010F               	movlb	15	; () banked
  2050  00122E  8F22               	bsf	34,7,b	;volatile
  2051  001230                     l3160:
  2052                           
  2053                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2054  001230  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2055  001234  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2056  001238  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2057  00123C  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2058  001240  0E16               	movlw	22
  2059  001242  D006               	goto	u3410
  2060  001244                     u3415:
  2061  001244  0100               	movlb	0	; () banked
  2062  001246  90D8               	bcf	status,0,c
  2063  001248  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2064  00124A  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2065  00124C  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2066  00124E  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2067  001250                     u3410:
  2068  001250  2EE8               	decfsz	wreg,f,c
  2069  001252  D7F8               	goto	u3415
  2070  001254  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2071  001258  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2072  00125C  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2073  001260  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2077  001264  0100               	movlb	0	; () banked
  2078  001266  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2079  001268  0100               	movlb	0	; () banked
  2080  00126A  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2081  00126C  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2082  00126E  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2083  001270  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2087  001272  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2088                           
  2089                           ;inc\CANlib.h: 483: }
  2090  001276  D059               	goto	l3180
  2091  001278                     l393:
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;inc\CANlib.h: 485: else
  2095                           ;inc\CANlib.h: 487: {
  2096                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2097  001278  010F               	movlb	15	; () banked
  2098  00127A  9722               	bcf	34,3,b	;volatile
  2099                           
  2100                           ; BSR set to: 15
  2101                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2102  00127C  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2103  001280  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2104  001284  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2105  001288  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2106  00128C  0E04               	movlw	4
  2107  00128E  D006               	goto	u3420
  2108  001290                     u3425:
  2109  001290  0100               	movlb	0	; () banked
  2110  001292  90D8               	bcf	status,0,c
  2111  001294  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2112  001296  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2113  001298  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2114  00129A  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2115  00129C                     u3420:
  2116  00129C  2EE8               	decfsz	wreg,f,c
  2117  00129E  D7F8               	goto	u3425
  2118  0012A0  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2119  0012A4  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2120  0012A8  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2121  0012AC  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2125  0012B0  0100               	movlb	0	; () banked
  2126  0012B2  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2127  0012B4  0100               	movlb	0	; () banked
  2128  0012B6  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2129  0012B8  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2130  0012BA  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2131  0012BC  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2135  0012BE  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2139  0012C2  0E07               	movlw	7
  2140  0012C4  0100               	movlb	0	; () banked
  2141  0012C6  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2142  0012C8  0100               	movlb	0	; () banked
  2143  0012CA  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2144  0012CC  0E00               	movlw	0
  2145  0012CE  0100               	movlb	0	; () banked
  2146  0012D0  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2147  0012D2  0100               	movlb	0	; () banked
  2148  0012D4  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2149  0012D6  0E00               	movlw	0
  2150  0012D8  0100               	movlb	0	; () banked
  2151  0012DA  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2152  0012DC  0100               	movlb	0	; () banked
  2153  0012DE  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2154  0012E0  0E00               	movlw	0
  2155  0012E2  0100               	movlb	0	; () banked
  2156  0012E4  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2157  0012E6  0100               	movlb	0	; () banked
  2158  0012E8  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2162  0012EA  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2163  0012EE  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2164  0012F2  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2165  0012F6  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2166  0012FA  0E05               	movlw	5
  2167  0012FC                     u3435:
  2168  0012FC  90D8               	bcf	status,0,c
  2169  0012FE  0100               	movlb	0	; () banked
  2170  001300  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  2171  001302  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2172  001304  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2173  001306  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2174  001308  2EE8               	decfsz	wreg,f,c
  2175  00130A  D7F8               	goto	u3435
  2176  00130C  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2177  001310  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2178  001314  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2179  001318  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2183  00131C  010F               	movlb	15	; () banked
  2184  00131E  5122               	movf	34,w,b	;volatile
  2185  001320  0B1F               	andlw	31
  2186  001322  010F               	movlb	15	; () banked
  2187  001324  6F22               	movwf	34,b	;volatile
  2188                           
  2189                           ; BSR set to: 15
  2190                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2191  001326  C07F  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2192  00132A                     l3180:
  2193                           
  2194                           ;inc\CANlib.h: 498: }
  2195                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2196  00132A  0100               	movlb	0	; () banked
  2197  00132C  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  2198  00132E  D003               	goto	l400
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2202  001330  010F               	movlb	15	; () banked
  2203  001332  8120               	bsf	32,0,b	;volatile
  2204  001334  D002               	goto	l401
  2205  001336                     l400:
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;inc\CANlib.h: 502: else
  2209                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2210  001336  010F               	movlb	15	; () banked
  2211  001338  9120               	bcf	32,0,b	;volatile
  2212  00133A                     l401:
  2213                           
  2214                           ; BSR set to: 15
  2215                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2216  00133A  0100               	movlb	0	; () banked
  2217  00133C  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  2218  00133E  D003               	goto	l402
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2222  001340  010F               	movlb	15	; () banked
  2223  001342  8320               	bsf	32,1,b	;volatile
  2224  001344  D002               	goto	l3186
  2225  001346                     l402:
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;inc\CANlib.h: 506: else
  2229                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2230  001346  010F               	movlb	15	; () banked
  2231  001348  9320               	bcf	32,1,b	;volatile
  2232  00134A                     l3186:
  2233                           
  2234                           ; BSR set to: 15
  2235                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2236  00134A  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  2237  00134E  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2238  001352  50DF               	movf	indf2,w,c
  2239  001354  010F               	movlb	15	; () banked
  2240  001356  6F26               	movwf	38,b	;volatile
  2241                           
  2242                           ; BSR set to: 15
  2243                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2244  001358  0100               	movlb	0	; () banked
  2245  00135A  EE20 F001          	lfsr	2,1
  2246  00135E  5177               	movf	CANsendMessage@data& (0+255),w,b
  2247  001360  26D9               	addwf	fsr2l,f,c
  2248  001362  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2249  001364  22DA               	addwfc	fsr2h,f,c
  2250  001366  50DF               	movf	indf2,w,c
  2251  001368  010F               	movlb	15	; () banked
  2252  00136A  6F27               	movwf	39,b	;volatile
  2253                           
  2254                           ; BSR set to: 15
  2255                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2256  00136C  0100               	movlb	0	; () banked
  2257  00136E  EE20 F002          	lfsr	2,2
  2258  001372  5177               	movf	CANsendMessage@data& (0+255),w,b
  2259  001374  26D9               	addwf	fsr2l,f,c
  2260  001376  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2261  001378  22DA               	addwfc	fsr2h,f,c
  2262  00137A  50DF               	movf	indf2,w,c
  2263  00137C  010F               	movlb	15	; () banked
  2264  00137E  6F28               	movwf	40,b	;volatile
  2265                           
  2266                           ; BSR set to: 15
  2267                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2268  001380  0100               	movlb	0	; () banked
  2269  001382  EE20 F003          	lfsr	2,3
  2270  001386  5177               	movf	CANsendMessage@data& (0+255),w,b
  2271  001388  26D9               	addwf	fsr2l,f,c
  2272  00138A  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2273  00138C  22DA               	addwfc	fsr2h,f,c
  2274  00138E  50DF               	movf	indf2,w,c
  2275  001390  010F               	movlb	15	; () banked
  2276  001392  6F29               	movwf	41,b	;volatile
  2277                           
  2278                           ; BSR set to: 15
  2279                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2280  001394  0100               	movlb	0	; () banked
  2281  001396  EE20 F004          	lfsr	2,4
  2282  00139A  5177               	movf	CANsendMessage@data& (0+255),w,b
  2283  00139C  26D9               	addwf	fsr2l,f,c
  2284  00139E  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2285  0013A0  22DA               	addwfc	fsr2h,f,c
  2286  0013A2  50DF               	movf	indf2,w,c
  2287  0013A4  010F               	movlb	15	; () banked
  2288  0013A6  6F2A               	movwf	42,b	;volatile
  2289                           
  2290                           ; BSR set to: 15
  2291                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2292  0013A8  0100               	movlb	0	; () banked
  2293  0013AA  EE20 F005          	lfsr	2,5
  2294  0013AE  5177               	movf	CANsendMessage@data& (0+255),w,b
  2295  0013B0  26D9               	addwf	fsr2l,f,c
  2296  0013B2  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2297  0013B4  22DA               	addwfc	fsr2h,f,c
  2298  0013B6  50DF               	movf	indf2,w,c
  2299  0013B8  010F               	movlb	15	; () banked
  2300  0013BA  6F2B               	movwf	43,b	;volatile
  2301                           
  2302                           ; BSR set to: 15
  2303                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2304  0013BC  0100               	movlb	0	; () banked
  2305  0013BE  EE20 F006          	lfsr	2,6
  2306  0013C2  5177               	movf	CANsendMessage@data& (0+255),w,b
  2307  0013C4  26D9               	addwf	fsr2l,f,c
  2308  0013C6  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2309  0013C8  22DA               	addwfc	fsr2h,f,c
  2310  0013CA  50DF               	movf	indf2,w,c
  2311  0013CC  010F               	movlb	15	; () banked
  2312  0013CE  6F2C               	movwf	44,b	;volatile
  2313                           
  2314                           ; BSR set to: 15
  2315                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2316  0013D0  0100               	movlb	0	; () banked
  2317  0013D2  EE20 F007          	lfsr	2,7
  2318  0013D6  5177               	movf	CANsendMessage@data& (0+255),w,b
  2319  0013D8  26D9               	addwf	fsr2l,f,c
  2320  0013DA  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2321  0013DC  22DA               	addwfc	fsr2h,f,c
  2322  0013DE  50DF               	movf	indf2,w,c
  2323  0013E0  010F               	movlb	15	; () banked
  2324  0013E2  6F2D               	movwf	45,b	;volatile
  2325                           
  2326                           ; BSR set to: 15
  2327                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2328  0013E4  010F               	movlb	15	; () banked
  2329  0013E6  8720               	bsf	32,3,b	;volatile
  2330                           
  2331                           ; BSR set to: 15
  2332                           ;inc\CANlib.h: 520: return;
  2333  0013E8  0012               	return	
  2334  0013EA                     __end_of_CANsendMessage:
  2335                           	opt stack 0
  2336                           tblptru	equ	0xFF8
  2337                           tblptrh	equ	0xFF7
  2338                           tblptrl	equ	0xFF6
  2339                           tablat	equ	0xFF5
  2340                           postinc0	equ	0xFEE
  2341                           wreg	equ	0xFE8
  2342                           postdec1	equ	0xFE5
  2343                           fsr1l	equ	0xFE1
  2344                           indf2	equ	0xFDF
  2345                           fsr2h	equ	0xFDA
  2346                           fsr2l	equ	0xFD9
  2347                           status	equ	0xFD8
  2348                           
  2349 ;; *************** function _CANisTxReady *****************
  2350 ;; Defined at:
  2351 ;;		line 1154 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      unsigned char 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2365 ;;      Params:         0       0       0       0
  2366 ;;      Locals:         0       1       0       0
  2367 ;;      Temps:          0       0       0       0
  2368 ;;      Totals:         0       1       0       0
  2369 ;;Total ram usage:        1 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    4
  2372 ;; This function calls:
  2373 ;;		Nothing
  2374 ;; This function is called by:
  2375 ;;		_send_data
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text3
  2380  0024BE                     __ptext3:
  2381                           	opt stack 0
  2382  0024BE                     _CANisTxReady:
  2383                           	opt stack 25
  2384                           
  2385                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2386                           
  2387                           ; BSR set to: 15
  2388                           ;incstack = 0
  2389  0024BE  0E01               	movlw	1
  2390  0024C0  0100               	movlb	0	; () banked
  2391  0024C2  6F73               	movwf	_CANisTxReady$2910& (0+255),b
  2392                           
  2393                           ; BSR set to: 0
  2394  0024C4  010F               	movlb	15	; () banked
  2395  0024C6  A740               	btfss	64,3,b	;volatile
  2396  0024C8  D009               	goto	l554
  2397                           
  2398                           ; BSR set to: 15
  2399  0024CA  010F               	movlb	15	; () banked
  2400  0024CC  A730               	btfss	48,3,b	;volatile
  2401  0024CE  D006               	goto	l554
  2402                           
  2403                           ; BSR set to: 15
  2404  0024D0  010F               	movlb	15	; () banked
  2405  0024D2  A720               	btfss	32,3,b	;volatile
  2406  0024D4  D003               	goto	l554
  2407                           
  2408                           ; BSR set to: 15
  2409  0024D6  0E00               	movlw	0
  2410  0024D8  0100               	movlb	0	; () banked
  2411  0024DA  6F73               	movwf	_CANisTxReady$2910& (0+255),b
  2412  0024DC                     l554:
  2413  0024DC  0100               	movlb	0	; () banked
  2414  0024DE  5173               	movf	_CANisTxReady$2910& (0+255),w,b
  2415  0024E0  0012               	return	
  2416  0024E2                     __end_of_CANisTxReady:
  2417                           	opt stack 0
  2418                           tblptru	equ	0xFF8
  2419                           tblptrh	equ	0xFF7
  2420                           tblptrl	equ	0xFF6
  2421                           tablat	equ	0xFF5
  2422                           postinc0	equ	0xFEE
  2423                           wreg	equ	0xFE8
  2424                           postdec1	equ	0xFE5
  2425                           fsr1l	equ	0xFE1
  2426                           indf2	equ	0xFDF
  2427                           fsr2h	equ	0xFDA
  2428                           fsr2l	equ	0xFD9
  2429                           status	equ	0xFD8
  2430                           
  2431 ;; *************** function _configurazione_iniziale *****************
  2432 ;; Defined at:
  2433 ;;		line 180 in file "newmain.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;		None               void
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2447 ;;      Params:         0       0       0       0
  2448 ;;      Locals:         0       0       0       0
  2449 ;;      Temps:          0       4       0       0
  2450 ;;      Totals:         0       4       0       0
  2451 ;;Total ram usage:        4 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    6
  2454 ;; This function calls:
  2455 ;;		_CANInitialize
  2456 ;;		_OpenADC
  2457 ;;		_WriteTimer0
  2458 ;; This function is called by:
  2459 ;;		_main
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text4
  2464  001E5A                     __ptext4:
  2465                           	opt stack 0
  2466  001E5A                     _configurazione_iniziale:
  2467                           	opt stack 24
  2468                           
  2469                           ;newmain.c: 183: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SA
      +                          MPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;incstack = 0
  2473  001E5A  0E06               	movlw	6
  2474  001E5C  0100               	movlb	0	; () banked
  2475  001E5E  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2476  001E60  0E05               	movlw	5
  2477  001E62  0100               	movlb	0	; () banked
  2478  001E64  6F82               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2479  001E66  0E01               	movlw	1
  2480  001E68  0100               	movlb	0	; () banked
  2481  001E6A  6F83               	movwf	CANInitialize@SJW& (0+255),b
  2482  001E6C  0E03               	movlw	3
  2483  001E6E  0100               	movlb	0	; () banked
  2484  001E70  6F84               	movwf	CANInitialize@BRP& (0+255),b
  2485  001E72  0E9D               	movlw	157
  2486  001E74  0100               	movlb	0	; () banked
  2487  001E76  6F85               	movwf	CANInitialize@flags& (0+255),b
  2488  001E78  0E04               	movlw	4
  2489  001E7A  EC4A  F00E         	call	_CANInitialize
  2490                           
  2491                           ;newmain.c: 184: RCONbits.IPEN = 1;
  2492  001E7E  8ED0               	bsf	4048,7,c	;volatile
  2493                           
  2494                           ;newmain.c: 187: PIR3bits.RXB1IF = 0;
  2495  001E80  92A4               	bcf	4004,1,c	;volatile
  2496                           
  2497                           ;newmain.c: 188: PIR3bits.RXB0IF = 0;
  2498  001E82  90A4               	bcf	4004,0,c	;volatile
  2499                           
  2500                           ;newmain.c: 189: INTCONbits.TMR0IF = 0;
  2501  001E84  94F2               	bcf	intcon,2,c	;volatile
  2502                           
  2503                           ;newmain.c: 190: PIR2bits.TMR3IF = 0;
  2504  001E86  92A1               	bcf	4001,1,c	;volatile
  2505                           
  2506                           ;newmain.c: 193: IPR3bits.RXB1IP = 0;
  2507  001E88  92A5               	bcf	4005,1,c	;volatile
  2508                           
  2509                           ;newmain.c: 194: IPR3bits.RXB0IP = 0;
  2510  001E8A  90A5               	bcf	4005,0,c	;volatile
  2511                           
  2512                           ;newmain.c: 195: INTCON2bits.TMR0IP = 1;
  2513  001E8C  84F1               	bsf	intcon2,2,c	;volatile
  2514                           
  2515                           ;newmain.c: 196: IPR2bits.TMR3IP = 0;
  2516  001E8E  92A2               	bcf	4002,1,c	;volatile
  2517                           
  2518                           ;newmain.c: 199: PIE3bits.RXB1IE = 1;
  2519  001E90  82A3               	bsf	4003,1,c	;volatile
  2520                           
  2521                           ;newmain.c: 200: PIE3bits.RXB0IE = 1;
  2522  001E92  80A3               	bsf	4003,0,c	;volatile
  2523                           
  2524                           ;newmain.c: 201: INTCONbits.TMR0IE = 1;
  2525  001E94  8AF2               	bsf	intcon,5,c	;volatile
  2526                           
  2527                           ;newmain.c: 202: PIE2bits.TMR3IE = 1;
  2528  001E96  82A0               	bsf	4000,1,c	;volatile
  2529                           
  2530                           ;newmain.c: 203: INTCONbits.GIEH = 1;
  2531  001E98  8EF2               	bsf	intcon,7,c	;volatile
  2532                           
  2533                           ;newmain.c: 204: INTCONbits.GIEL = 1;
  2534  001E9A  8CF2               	bsf	intcon,6,c	;volatile
  2535                           
  2536                           ;newmain.c: 207: T0CON = 0x80;
  2537  001E9C  0E80               	movlw	128
  2538  001E9E  6ED5               	movwf	4053,c	;volatile
  2539                           
  2540                           ;newmain.c: 210: TMR3H = 0x63;
  2541  001EA0  0E63               	movlw	99
  2542  001EA2  6EB3               	movwf	4019,c	;volatile
  2543                           
  2544                           ;newmain.c: 211: TMR3L = 0xC0;
  2545  001EA4  0EC0               	movlw	192
  2546  001EA6  6EB2               	movwf	4018,c	;volatile
  2547                           
  2548                           ;newmain.c: 212: T3CON = 0x01;
  2549  001EA8  0E01               	movlw	1
  2550  001EAA  6EB1               	movwf	4017,c	;volatile
  2551                           
  2552                           ;newmain.c: 213: OpenADC(0b11011111 & 0b11111111 & 0b11111101, 0b10001111 & 0b11111100 &
      +                           0b01111111, 0b11111101);
  2553  001EAC  0E0C               	movlw	12
  2554  001EAE  0100               	movlb	0	; () banked
  2555  001EB0  6F73               	movwf	OpenADC@config2& (0+255),b
  2556  001EB2  0EFD               	movlw	253
  2557  001EB4  0100               	movlb	0	; () banked
  2558  001EB6  6F74               	movwf	OpenADC@portconfig& (0+255),b
  2559  001EB8  0EDD               	movlw	221
  2560  001EBA  EC08  F011         	call	_OpenADC
  2561                           
  2562                           ;newmain.c: 216: timer = (((0 * 700) / 90) + 800) *2;
  2563  001EBE  0E40               	movlw	64
  2564  001EC0  0100               	movlb	0	; () banked
  2565  001EC2  6FB1               	movwf	_timer& (0+255),b
  2566  001EC4  0E06               	movlw	6
  2567  001EC6  6FB2               	movwf	(_timer+1)& (0+255),b
  2568  001EC8  0E00               	movlw	0
  2569  001ECA  6FB3               	movwf	(_timer+2)& (0+255),b
  2570  001ECC  0E00               	movlw	0
  2571  001ECE  6FB4               	movwf	(_timer+3)& (0+255),b
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;newmain.c: 217: Ton = 65536 - timer;
  2575  001ED0  C0B1  F08D         	movff	_timer,??_configurazione_iniziale
  2576  001ED4  C0B2  F08E         	movff	_timer+1,??_configurazione_iniziale+1
  2577  001ED8  0100               	movlb	0	; () banked
  2578  001EDA  1F8D               	comf	??_configurazione_iniziale& (0+255),f,b
  2579  001EDC  1F8E               	comf	(??_configurazione_iniziale+1)& (0+255),f,b
  2580  001EDE  4B8D               	infsnz	??_configurazione_iniziale& (0+255),f,b
  2581  001EE0  2B8E               	incf	(??_configurazione_iniziale+1)& (0+255),f,b
  2582  001EE2  C08D  F00B         	movff	??_configurazione_iniziale,_Ton
  2583  001EE6  C08E  F00C         	movff	??_configurazione_iniziale+1,_Ton+1
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;newmain.c: 218: Toff = 20000 - (timer / 2);
  2587  001EEA  C0B1  F08D         	movff	_timer,??_configurazione_iniziale
  2588  001EEE  C0B2  F08E         	movff	_timer+1,??_configurazione_iniziale+1
  2589  001EF2  C0B3  F08F         	movff	_timer+2,??_configurazione_iniziale+2
  2590  001EF6  C0B4  F090         	movff	_timer+3,??_configurazione_iniziale+3
  2591  001EFA  0100               	movlb	0	; () banked
  2592  001EFC  90D8               	bcf	status,0,c
  2593  001EFE  3390               	rrcf	(??_configurazione_iniziale+3)& (0+255),f,b
  2594  001F00  338F               	rrcf	(??_configurazione_iniziale+2)& (0+255),f,b
  2595  001F02  338E               	rrcf	(??_configurazione_iniziale+1)& (0+255),f,b
  2596  001F04  338D               	rrcf	??_configurazione_iniziale& (0+255),f,b
  2597  001F06  0100               	movlb	0	; () banked
  2598  001F08  1F8D               	comf	??_configurazione_iniziale& (0+255),f,b
  2599  001F0A  1F8E               	comf	(??_configurazione_iniziale+1)& (0+255),f,b
  2600  001F0C  4B8D               	infsnz	??_configurazione_iniziale& (0+255),f,b
  2601  001F0E  2B8E               	incf	(??_configurazione_iniziale+1)& (0+255),f,b
  2602  001F10  0E20               	movlw	32
  2603  001F12  0100               	movlb	0	; () banked
  2604  001F14  258D               	addwf	??_configurazione_iniziale& (0+255),w,b
  2605  001F16  6E09               	movwf	_Toff,c
  2606  001F18  0E4E               	movlw	78
  2607  001F1A  0100               	movlb	0	; () banked
  2608  001F1C  218E               	addwfc	(??_configurazione_iniziale+1)& (0+255),w,b
  2609  001F1E  6E0A               	movwf	_Toff+1,c
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;newmain.c: 219: Toff = (65536 - (Toff * 2));
  2613  001F20  C009  F08D         	movff	_Toff,??_configurazione_iniziale
  2614  001F24  C00A  F08E         	movff	_Toff+1,??_configurazione_iniziale+1
  2615  001F28  90D8               	bcf	status,0,c
  2616  001F2A  0100               	movlb	0	; () banked
  2617  001F2C  378D               	rlcf	??_configurazione_iniziale& (0+255),f,b
  2618  001F2E  378E               	rlcf	(??_configurazione_iniziale+1)& (0+255),f,b
  2619  001F30  0100               	movlb	0	; () banked
  2620  001F32  1F8D               	comf	??_configurazione_iniziale& (0+255),f,b
  2621  001F34  1F8E               	comf	(??_configurazione_iniziale+1)& (0+255),f,b
  2622  001F36  4B8D               	infsnz	??_configurazione_iniziale& (0+255),f,b
  2623  001F38  2B8E               	incf	(??_configurazione_iniziale+1)& (0+255),f,b
  2624  001F3A  C08D  F009         	movff	??_configurazione_iniziale,_Toff
  2625  001F3E  C08E  F00A         	movff	??_configurazione_iniziale+1,_Toff+1
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;newmain.c: 220: WriteTimer0(Ton);
  2629  001F42  C00B  F073         	movff	_Ton,WriteTimer0@timer0
  2630  001F46  C00C  F074         	movff	_Ton+1,WriteTimer0@timer0+1
  2631  001F4A  EC87  F012         	call	_WriteTimer0	;wreg free
  2632                           
  2633                           ;newmain.c: 221: T0CONbits.TMR0ON = 1;
  2634  001F4E  8ED5               	bsf	4053,7,c	;volatile
  2635                           
  2636                           ;newmain.c: 222: Toff = 0x4588;
  2637  001F50  0E45               	movlw	69
  2638  001F52  6E0A               	movwf	_Toff+1,c
  2639  001F54  0E88               	movlw	136
  2640  001F56  6E09               	movwf	_Toff,c
  2641                           
  2642                           ;newmain.c: 225: LATA = 0x00;
  2643  001F58  0E00               	movlw	0
  2644  001F5A  6E89               	movwf	3977,c	;volatile
  2645                           
  2646                           ;newmain.c: 226: TRISA = 0b11111100;
  2647  001F5C  0EFC               	movlw	252
  2648  001F5E  6E92               	movwf	3986,c	;volatile
  2649                           
  2650                           ;newmain.c: 228: LATB = 0x00;
  2651  001F60  0E00               	movlw	0
  2652  001F62  6E8A               	movwf	3978,c	;volatile
  2653                           
  2654                           ;newmain.c: 229: TRISB = 0b11111011;
  2655  001F64  0EFB               	movlw	251
  2656  001F66  6E93               	movwf	3987,c	;volatile
  2657                           
  2658                           ;newmain.c: 231: LATC = 0x00;
  2659  001F68  0E00               	movlw	0
  2660  001F6A  6E8B               	movwf	3979,c	;volatile
  2661                           
  2662                           ;newmain.c: 232: TRISC = 0x00;
  2663  001F6C  0E00               	movlw	0
  2664  001F6E  6E94               	movwf	3988,c	;volatile
  2665                           
  2666                           ;newmain.c: 234: LATD = 0x00;
  2667  001F70  0E00               	movlw	0
  2668  001F72  6E8C               	movwf	3980,c	;volatile
  2669                           
  2670                           ;newmain.c: 235: TRISD = 0x00;
  2671  001F74  0E00               	movlw	0
  2672  001F76  6E95               	movwf	3989,c	;volatile
  2673                           
  2674                           ;newmain.c: 237: LATE = 0x00;
  2675  001F78  0E00               	movlw	0
  2676  001F7A  6E8D               	movwf	3981,c	;volatile
  2677                           
  2678                           ;newmain.c: 238: TRISE = 0xFF;
  2679  001F7C  6896               	setf	3990,c	;volatile
  2680  001F7E  0012               	return		;funcret
  2681  001F80                     __end_of_configurazione_iniziale:
  2682                           	opt stack 0
  2683                           tblptru	equ	0xFF8
  2684                           tblptrh	equ	0xFF7
  2685                           tblptrl	equ	0xFF6
  2686                           tablat	equ	0xFF5
  2687                           intcon	equ	0xFF2
  2688                           intcon2	equ	0xFF1
  2689                           postinc0	equ	0xFEE
  2690                           wreg	equ	0xFE8
  2691                           postdec1	equ	0xFE5
  2692                           fsr1l	equ	0xFE1
  2693                           indf2	equ	0xFDF
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           status	equ	0xFD8
  2697                           
  2698 ;; *************** function _WriteTimer0 *****************
  2699 ;; Defined at:
  2700 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  timer0          2   19[BANK0 ] unsigned int 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  timer           2   21[BANK0 ] struct Timers
  2705 ;; Return value:  Size  Location     Type
  2706 ;;		None               void
  2707 ;; Registers used:
  2708 ;;		None
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2714 ;;      Params:         0       2       0       0
  2715 ;;      Locals:         0       2       0       0
  2716 ;;      Temps:          0       0       0       0
  2717 ;;      Totals:         0       4       0       0
  2718 ;;Total ram usage:        4 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    4
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_configurazione_iniziale
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text5
  2729  00250E                     __ptext5:
  2730                           	opt stack 0
  2731  00250E                     _WriteTimer0:
  2732                           	opt stack 25
  2733                           
  2734                           ;incstack = 0
  2735  00250E  C073  F075         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2736  002512  C074  F076         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2737  002516  C076  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2738  00251A  C075  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2739  00251E  0012               	return		;funcret
  2740  002520                     __end_of_WriteTimer0:
  2741                           	opt stack 0
  2742                           tblptru	equ	0xFF8
  2743                           tblptrh	equ	0xFF7
  2744                           tblptrl	equ	0xFF6
  2745                           tablat	equ	0xFF5
  2746                           intcon	equ	0xFF2
  2747                           intcon2	equ	0xFF1
  2748                           postinc0	equ	0xFEE
  2749                           wreg	equ	0xFE8
  2750                           postdec1	equ	0xFE5
  2751                           fsr1l	equ	0xFE1
  2752                           indf2	equ	0xFDF
  2753                           fsr2h	equ	0xFDA
  2754                           fsr2l	equ	0xFD9
  2755                           status	equ	0xFD8
  2756                           
  2757 ;; *************** function _OpenADC *****************
  2758 ;; Defined at:
  2759 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcopen.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  config          1    wreg     unsigned char 
  2762 ;;  config2         1   19[BANK0 ] unsigned char 
  2763 ;;  portconfig      1   20[BANK0 ] unsigned char 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  config          1   23[BANK0 ] unsigned char 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;		None               void
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2775 ;;      Params:         0       2       0       0
  2776 ;;      Locals:         0       1       0       0
  2777 ;;      Temps:          0       2       0       0
  2778 ;;      Totals:         0       5       0       0
  2779 ;;Total ram usage:        5 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; Hardware stack levels required when called:    4
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_configurazione_iniziale
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text6
  2790  002210                     __ptext6:
  2791                           	opt stack 0
  2792  002210                     _OpenADC:
  2793                           	opt stack 25
  2794                           
  2795                           ;incstack = 0
  2796                           ;OpenADC@config stored from wreg
  2797  002210  0100               	movlb	0	; () banked
  2798  002212  6F77               	movwf	OpenADC@config& (0+255),b
  2799  002214  0E00               	movlw	0
  2800  002216  6EC2               	movwf	4034,c	;volatile
  2801  002218  0E00               	movlw	0
  2802  00221A  6EC0               	movwf	4032,c	;volatile
  2803  00221C  0100               	movlb	0	; () banked
  2804  00221E  90D8               	bcf	status,0,c
  2805  002220  3173               	rrcf	OpenADC@config2& (0+255),w,b
  2806  002222  0B3C               	andlw	60
  2807  002224  6EC2               	movwf	4034,c	;volatile
  2808                           
  2809                           ; BSR set to: 0
  2810  002226  C073  F075         	movff	OpenADC@config2,??_OpenADC
  2811  00222A  0100               	movlb	0	; () banked
  2812  00222C  3B75               	swapf	??_OpenADC& (0+255),f,b
  2813  00222E  0EF0               	movlw	240
  2814  002230  1775               	andwf	??_OpenADC& (0+255),f,b
  2815  002232  0E30               	movlw	48
  2816  002234  0100               	movlb	0	; () banked
  2817  002236  1775               	andwf	??_OpenADC& (0+255),f,b
  2818  002238  0100               	movlb	0	; () banked
  2819  00223A  5174               	movf	OpenADC@portconfig& (0+255),w,b
  2820  00223C  0B0F               	andlw	15
  2821  00223E  0100               	movlb	0	; () banked
  2822  002240  1175               	iorwf	??_OpenADC& (0+255),w,b
  2823  002242  6EC1               	movwf	4033,c	;volatile
  2824                           
  2825                           ; BSR set to: 0
  2826  002244  C077  F075         	movff	OpenADC@config,??_OpenADC
  2827  002248  0100               	movlb	0	; () banked
  2828  00224A  90D8               	bcf	status,0,c
  2829  00224C  3775               	rlcf	??_OpenADC& (0+255),f,b
  2830  00224E  0100               	movlb	0	; () banked
  2831  002250  90D8               	bcf	status,0,c
  2832  002252  3775               	rlcf	??_OpenADC& (0+255),f,b
  2833  002254  0E38               	movlw	56
  2834  002256  0100               	movlb	0	; () banked
  2835  002258  1775               	andwf	??_OpenADC& (0+255),f,b
  2836  00225A  C077  F076         	movff	OpenADC@config,??_OpenADC+1
  2837  00225E  0100               	movlb	0	; () banked
  2838  002260  3B76               	swapf	(??_OpenADC+1)& (0+255),f,b
  2839  002262  0E0F               	movlw	15
  2840  002264  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  2841  002266  0E07               	movlw	7
  2842  002268  0100               	movlb	0	; () banked
  2843  00226A  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  2844  00226C  0100               	movlb	0	; () banked
  2845  00226E  5177               	movf	OpenADC@config& (0+255),w,b
  2846  002270  0B80               	andlw	128
  2847  002272  0100               	movlb	0	; () banked
  2848  002274  1176               	iorwf	(??_OpenADC+1)& (0+255),w,b
  2849  002276  0100               	movlb	0	; () banked
  2850  002278  1175               	iorwf	??_OpenADC& (0+255),w,b
  2851  00227A  6EC0               	movwf	4032,c	;volatile
  2852                           
  2853                           ; BSR set to: 0
  2854  00227C  0100               	movlb	0	; () banked
  2855  00227E  AF73               	btfss	OpenADC@config2& (0+255),7,b
  2856  002280  D003               	goto	l691
  2857                           
  2858                           ; BSR set to: 0
  2859  002282  9C9E               	bcf	3998,6,c	;volatile
  2860  002284  8C9D               	bsf	3997,6,c	;volatile
  2861  002286  8CF2               	bsf	intcon,6,c	;volatile
  2862  002288                     l691:
  2863                           
  2864                           ; BSR set to: 0
  2865  002288  80C2               	bsf	4034,0,c	;volatile
  2866                           
  2867                           ; BSR set to: 0
  2868  00228A  0012               	return		;funcret
  2869  00228C                     __end_of_OpenADC:
  2870                           	opt stack 0
  2871                           tblptru	equ	0xFF8
  2872                           tblptrh	equ	0xFF7
  2873                           tblptrl	equ	0xFF6
  2874                           tablat	equ	0xFF5
  2875                           intcon	equ	0xFF2
  2876                           intcon2	equ	0xFF1
  2877                           postinc0	equ	0xFEE
  2878                           wreg	equ	0xFE8
  2879                           postdec1	equ	0xFE5
  2880                           fsr1l	equ	0xFE1
  2881                           indf2	equ	0xFDF
  2882                           fsr2h	equ	0xFDA
  2883                           fsr2l	equ	0xFD9
  2884                           status	equ	0xFD8
  2885                           
  2886 ;; *************** function _CANInitialize *****************
  2887 ;; Defined at:
  2888 ;;		line 218 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  propSeg         1    wreg     unsigned char 
  2891 ;;  phaseSeg1       1   33[BANK0 ] unsigned char 
  2892 ;;  phaseSeg2       1   34[BANK0 ] unsigned char 
  2893 ;;  SJW             1   35[BANK0 ] unsigned char 
  2894 ;;  BRP             1   36[BANK0 ] unsigned char 
  2895 ;;  flags           1   37[BANK0 ] enum E16844
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  propSeg         1   42[BANK0 ] unsigned char 
  2898 ;;  FilterConfig    1   44[BANK0 ] unsigned char 
  2899 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  2900 ;; Return value:  Size  Location     Type
  2901 ;;		None               void
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2909 ;;      Params:         0       5       0       0
  2910 ;;      Locals:         0       3       0       0
  2911 ;;      Temps:          0       4       0       0
  2912 ;;      Totals:         0      12       0       0
  2913 ;;Total ram usage:       12 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    5
  2916 ;; This function calls:
  2917 ;;		_CANOperationMode
  2918 ;;		_CANSetFilter
  2919 ;;		_CANSetMask
  2920 ;; This function is called by:
  2921 ;;		_configurazione_iniziale
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text7
  2926  001C94                     __ptext7:
  2927                           	opt stack 0
  2928  001C94                     _CANInitialize:
  2929                           	opt stack 24
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;incstack = 0
  2933                           ;CANInitialize@propSeg stored from wreg
  2934  001C94  0100               	movlb	0	; () banked
  2935  001C96  6F8A               	movwf	CANInitialize@propSeg& (0+255),b
  2936                           
  2937                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  2938                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  2939                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2940  001C98  0E80               	movlw	128
  2941  001C9A  EC71  F012         	call	_CANOperationMode
  2942                           
  2943                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  2944  001C9E  0E00               	movlw	0
  2945  001CA0  6E70               	movwf	3952,c	;volatile
  2946                           
  2947                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  2948  001CA2  0E00               	movlw	0
  2949  001CA4  6E71               	movwf	3953,c	;volatile
  2950                           
  2951                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  2952  001CA6  0E00               	movlw	0
  2953  001CA8  6E72               	movwf	3954,c	;volatile
  2954                           
  2955                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  2956  001CAA  0100               	movlb	0	; () banked
  2957  001CAC  4183               	rrncf	CANInitialize@SJW& (0+255),w,b
  2958  001CAE  42E8               	rrncf	wreg,f,c
  2959  001CB0  0BC0               	andlw	192
  2960  001CB2  0100               	movlb	0	; () banked
  2961  001CB4  6F83               	movwf	CANInitialize@SJW& (0+255),b
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  2965  001CB6  0100               	movlb	0	; () banked
  2966  001CB8  5183               	movf	CANInitialize@SJW& (0+255),w,b
  2967  001CBA  1270               	iorwf	3952,f,c	;volatile
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  2971  001CBC  0100               	movlb	0	; () banked
  2972  001CBE  5184               	movf	CANInitialize@BRP& (0+255),w,b
  2973  001CC0  1270               	iorwf	3952,f,c	;volatile
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  2977  001CC2  0100               	movlb	0	; () banked
  2978  001CC4  518A               	movf	CANInitialize@propSeg& (0+255),w,b
  2979  001CC6  1271               	iorwf	3953,f,c	;volatile
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2983  001CC8  0100               	movlb	0	; () banked
  2984  001CCA  3981               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2985  001CCC  42E8               	rrncf	wreg,f,c
  2986  001CCE  0BF8               	andlw	248
  2987  001CD0  0100               	movlb	0	; () banked
  2988  001CD2  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2992  001CD4  0100               	movlb	0	; () banked
  2993  001CD6  5181               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2994  001CD8  1271               	iorwf	3953,f,c	;volatile
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2998  001CDA  0100               	movlb	0	; () banked
  2999  001CDC  A585               	btfss	CANInitialize@flags& (0+255),2,b
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3003  001CDE  8C71               	bsf	3953,6,c	;volatile
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3007  001CE0  0100               	movlb	0	; () banked
  3008  001CE2  B185               	btfsc	CANInitialize@flags& (0+255),0,b
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3012  001CE4  8E71               	bsf	3953,7,c	;volatile
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3016                           
  3017                           ; BSR set to: 0
  3018  001CE6  0100               	movlb	0	; () banked
  3019  001CE8  5182               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3020  001CEA  1272               	iorwf	3954,f,c	;volatile
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3024  001CEC  0100               	movlb	0	; () banked
  3025  001CEE  B385               	btfsc	CANInitialize@flags& (0+255),1,b
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3029  001CF0  8C72               	bsf	3954,6,c	;volatile
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3033                           
  3034                           ; BSR set to: 0
  3035  001CF2  0100               	movlb	0	; () banked
  3036  001CF4  5185               	movf	CANInitialize@flags& (0+255),w,b
  3037  001CF6  0B60               	andlw	96
  3038  001CF8  6E60               	movwf	3936,c	;volatile
  3039                           
  3040                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3041  001CFA  0100               	movlb	0	; () banked
  3042  001CFC  5185               	movf	CANInitialize@flags& (0+255),w,b
  3043  001CFE  0B10               	andlw	16
  3044  001D00  0AFF               	xorlw	255
  3045  001D02  B4D8               	btfsc	status,2,c
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3049  001D04  8460               	bsf	3936,2,c	;volatile
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3053  001D06  CF60 FF50          	movff	3936,3920	;volatile
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3057  001D0A  0E00               	movlw	0
  3058  001D0C  0100               	movlb	0	; () banked
  3059  001D0E  6F73               	movwf	CANSetMask@mask& (0+255),b
  3060  001D10  0E00               	movlw	0
  3061  001D12  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  3062  001D14  0E00               	movlw	0
  3063  001D16  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3064  001D18  0E00               	movlw	0
  3065  001D1A  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3066  001D1C  0EF7               	movlw	247
  3067  001D1E  0100               	movlb	0	; () banked
  3068  001D20  6F77               	movwf	CANSetMask@type& (0+255),b
  3069  001D22  0E01               	movlw	1
  3070  001D24  EC7B  F00C         	call	_CANSetMask
  3071                           
  3072                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3073  001D28  0E00               	movlw	0
  3074  001D2A  0100               	movlb	0	; () banked
  3075  001D2C  6F73               	movwf	CANSetMask@mask& (0+255),b
  3076  001D2E  0E00               	movlw	0
  3077  001D30  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  3078  001D32  0E00               	movlw	0
  3079  001D34  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3080  001D36  0E00               	movlw	0
  3081  001D38  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3082  001D3A  0EF7               	movlw	247
  3083  001D3C  0100               	movlb	0	; () banked
  3084  001D3E  6F77               	movwf	CANSetMask@type& (0+255),b
  3085  001D40  0E02               	movlw	2
  3086  001D42  EC7B  F00C         	call	_CANSetMask
  3087                           
  3088                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3089  001D46  D00F               	goto	l2968
  3090  001D48                     l2962:
  3091                           
  3092                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3093  001D48  0EF7               	movlw	247
  3094  001D4A  0100               	movlb	0	; () banked
  3095  001D4C  6F8B               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3096  001D4E  D007               	goto	l2964
  3097  001D50                     l356:
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3101  001D50  0100               	movlb	0	; () banked
  3102  001D52  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3103                           
  3104                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3105  001D54  0100               	movlb	0	; () banked
  3106  001D56  698C               	setf	CANInitialize@FilterConfig2& (0+255),b
  3107                           
  3108                           ;inc\CANlib.h: 273: break;
  3109  001D58  D028               	goto	l2970
  3110  001D5A                     l357:
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3114  001D5A  0100               	movlb	0	; () banked
  3115  001D5C  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3116  001D5E                     l2964:
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3120  001D5E  0EF7               	movlw	247
  3121  001D60  0100               	movlb	0	; () banked
  3122  001D62  6F8C               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;inc\CANlib.h: 278: }
  3126                           
  3127                           ;inc\CANlib.h: 277: break;
  3128  001D64  D022               	goto	l2970
  3129  001D66                     l2968:
  3130  001D66  0E9F               	movlw	159
  3131  001D68  0100               	movlb	0	; () banked
  3132  001D6A  6F86               	movwf	??_CANInitialize& (0+255),b
  3133  001D6C  0EFF               	movlw	255
  3134  001D6E  0100               	movlb	0	; () banked
  3135  001D70  6F87               	movwf	(??_CANInitialize+1)& (0+255),b
  3136  001D72  0100               	movlb	0	; () banked
  3137  001D74  5185               	movf	CANInitialize@flags& (0+255),w,b
  3138  001D76  0B60               	andlw	96
  3139  001D78  0100               	movlb	0	; () banked
  3140  001D7A  6F88               	movwf	(??_CANInitialize+2)& (0+255),b
  3141  001D7C  6B89               	clrf	(??_CANInitialize+3)& (0+255),b
  3142  001D7E  0100               	movlb	0	; () banked
  3143  001D80  5186               	movf	??_CANInitialize& (0+255),w,b
  3144  001D82  0100               	movlb	0	; () banked
  3145  001D84  1388               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3146  001D86  0100               	movlb	0	; () banked
  3147  001D88  5187               	movf	(??_CANInitialize+1)& (0+255),w,b
  3148  001D8A  0100               	movlb	0	; () banked
  3149  001D8C  1389               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3150                           
  3151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3152                           ; Switch size 1, requested type "space"
  3153                           ; Number of cases is 1, Range of values is 0 to 0
  3154                           ; switch strategies available:
  3155                           ; Name         Instructions Cycles
  3156                           ; simple_byte            4     3 (average)
  3157                           ;	Chosen strategy is simple_byte
  3158  001D8E  0100               	movlb	0	; () banked
  3159  001D90  5189               	movf	(??_CANInitialize+3)& (0+255),w,b
  3160  001D92  0A00               	xorlw	0	; case 0
  3161  001D94  A4D8               	btfss	status,2,c
  3162  001D96  D7E1               	goto	l357
  3163                           
  3164                           ; BSR set to: 0
  3165                           ; Switch size 1, requested type "space"
  3166                           ; Number of cases is 2, Range of values is 191 to 223
  3167                           ; switch strategies available:
  3168                           ; Name         Instructions Cycles
  3169                           ; simple_byte            7     4 (average)
  3170                           ;	Chosen strategy is simple_byte
  3171  001D98  0100               	movlb	0	; () banked
  3172  001D9A  5188               	movf	(??_CANInitialize+2)& (0+255),w,b
  3173  001D9C  0ABF               	xorlw	191	; case 191
  3174  001D9E  B4D8               	btfsc	status,2,c
  3175  001DA0  D7D7               	goto	l356
  3176  001DA2  0A60               	xorlw	96	; case 223
  3177  001DA4  B4D8               	btfsc	status,2,c
  3178  001DA6  D7D0               	goto	l2962
  3179  001DA8  D7D8               	goto	l357
  3180  001DAA                     l2970:
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3184  001DAA  0E00               	movlw	0
  3185  001DAC  0100               	movlb	0	; () banked
  3186  001DAE  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3187  001DB0  0E00               	movlw	0
  3188  001DB2  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3189  001DB4  0E00               	movlw	0
  3190  001DB6  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3191  001DB8  0E00               	movlw	0
  3192  001DBA  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3193  001DBC  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3194  001DC0  0E00               	movlw	0
  3195  001DC2  ECAC  F000         	call	_CANSetFilter
  3196                           
  3197                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3198  001DC6  0E00               	movlw	0
  3199  001DC8  0100               	movlb	0	; () banked
  3200  001DCA  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3201  001DCC  0E00               	movlw	0
  3202  001DCE  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3203  001DD0  0E00               	movlw	0
  3204  001DD2  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3205  001DD4  0E00               	movlw	0
  3206  001DD6  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3207  001DD8  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3208  001DDC  0E01               	movlw	1
  3209  001DDE  ECAC  F000         	call	_CANSetFilter
  3210                           
  3211                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3212  001DE2  0E00               	movlw	0
  3213  001DE4  0100               	movlb	0	; () banked
  3214  001DE6  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3215  001DE8  0E00               	movlw	0
  3216  001DEA  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3217  001DEC  0E00               	movlw	0
  3218  001DEE  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3219  001DF0  0E00               	movlw	0
  3220  001DF2  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3221  001DF4  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3222  001DF8  0E02               	movlw	2
  3223  001DFA  ECAC  F000         	call	_CANSetFilter
  3224                           
  3225                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3226  001DFE  0E00               	movlw	0
  3227  001E00  0100               	movlb	0	; () banked
  3228  001E02  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3229  001E04  0E00               	movlw	0
  3230  001E06  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3231  001E08  0E00               	movlw	0
  3232  001E0A  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3233  001E0C  0E00               	movlw	0
  3234  001E0E  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3235  001E10  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3236  001E14  0E03               	movlw	3
  3237  001E16  ECAC  F000         	call	_CANSetFilter
  3238                           
  3239                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3240  001E1A  0E00               	movlw	0
  3241  001E1C  0100               	movlb	0	; () banked
  3242  001E1E  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3243  001E20  0E00               	movlw	0
  3244  001E22  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3245  001E24  0E00               	movlw	0
  3246  001E26  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3247  001E28  0E00               	movlw	0
  3248  001E2A  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3249  001E2C  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3250  001E30  0E04               	movlw	4
  3251  001E32  ECAC  F000         	call	_CANSetFilter
  3252                           
  3253                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3254  001E36  0E00               	movlw	0
  3255  001E38  0100               	movlb	0	; () banked
  3256  001E3A  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3257  001E3C  0E00               	movlw	0
  3258  001E3E  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3259  001E40  0E00               	movlw	0
  3260  001E42  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3261  001E44  0E00               	movlw	0
  3262  001E46  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3263  001E48  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3264  001E4C  0E05               	movlw	5
  3265  001E4E  ECAC  F000         	call	_CANSetFilter
  3266                           
  3267                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3268  001E52  0E00               	movlw	0
  3269  001E54  EC71  F012         	call	_CANOperationMode
  3270  001E58  0012               	return		;funcret
  3271  001E5A                     __end_of_CANInitialize:
  3272                           	opt stack 0
  3273                           tblptru	equ	0xFF8
  3274                           tblptrh	equ	0xFF7
  3275                           tblptrl	equ	0xFF6
  3276                           tablat	equ	0xFF5
  3277                           intcon	equ	0xFF2
  3278                           intcon2	equ	0xFF1
  3279                           postinc0	equ	0xFEE
  3280                           wreg	equ	0xFE8
  3281                           postdec1	equ	0xFE5
  3282                           fsr1l	equ	0xFE1
  3283                           indf2	equ	0xFDF
  3284                           fsr2h	equ	0xFDA
  3285                           fsr2l	equ	0xFD9
  3286                           status	equ	0xFD8
  3287                           
  3288 ;; *************** function _CANSetMask *****************
  3289 ;; Defined at:
  3290 ;;		line 640 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  numBuffer       1    wreg     enum E16878
  3293 ;;  mask            4   19[BANK0 ] unsigned long 
  3294 ;;  type            1   23[BANK0 ] enum E16844
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  numBuffer       1   28[BANK0 ] enum E16878
  3297 ;;  tamp            4   29[BANK0 ] unsigned long 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;		None               void
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, status,0
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3307 ;;      Params:         0       5       0       0
  3308 ;;      Locals:         0       5       0       0
  3309 ;;      Temps:          0       4       0       0
  3310 ;;      Totals:         0      14       0       0
  3311 ;;Total ram usage:       14 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    4
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_CANInitialize
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text8
  3322  0018F6                     __ptext8:
  3323                           	opt stack 0
  3324  0018F6                     _CANSetMask:
  3325                           	opt stack 24
  3326                           
  3327                           ;incstack = 0
  3328                           ;CANSetMask@numBuffer stored from wreg
  3329  0018F6  0100               	movlb	0	; () banked
  3330  0018F8  6F7C               	movwf	CANSetMask@numBuffer& (0+255),b
  3331                           
  3332                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3333  0018FA  0100               	movlb	0	; () banked
  3334  0018FC  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  3335  0018FE  A4D8               	btfss	status,2,c
  3336  001900  D056               	goto	l2532
  3337                           
  3338                           ; BSR set to: 0
  3339  001902  0100               	movlb	0	; () banked
  3340  001904  2977               	incf	CANSetMask@type& (0+255),w,b
  3341  001906  A4D8               	btfss	status,2,c
  3342  001908  D052               	goto	l2532
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;inc\CANlib.h: 644: {
  3346                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3347  00190A  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3348  00190E  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3349  001912  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3350  001916  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3351  00191A  0E04               	movlw	4
  3352  00191C  D006               	goto	u2090
  3353  00191E                     u2095:
  3354  00191E  0100               	movlb	0	; () banked
  3355  001920  90D8               	bcf	status,0,c
  3356  001922  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3357  001924  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3358  001926  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3359  001928  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3360  00192A                     u2090:
  3361  00192A  2EE8               	decfsz	wreg,f,c
  3362  00192C  D7F8               	goto	u2095
  3363  00192E  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3364  001932  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3365  001936  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3366  00193A  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3370  00193E  0100               	movlb	0	; () banked
  3371  001940  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3372  001942  0100               	movlb	0	; () banked
  3373  001944  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3374  001946  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3375  001948  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3376  00194A  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3380  00194C  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3384  001950  0E07               	movlw	7
  3385  001952  0100               	movlb	0	; () banked
  3386  001954  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3387  001956  0100               	movlb	0	; () banked
  3388  001958  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3389  00195A  0E00               	movlw	0
  3390  00195C  0100               	movlb	0	; () banked
  3391  00195E  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3392  001960  0100               	movlb	0	; () banked
  3393  001962  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3394  001964  0E00               	movlw	0
  3395  001966  0100               	movlb	0	; () banked
  3396  001968  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3397  00196A  0100               	movlb	0	; () banked
  3398  00196C  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3399  00196E  0E00               	movlw	0
  3400  001970  0100               	movlb	0	; () banked
  3401  001972  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3402  001974  0100               	movlb	0	; () banked
  3403  001976  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3407  001978  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3408  00197C  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3409  001980  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3410  001984  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3411  001988  0E05               	movlw	5
  3412  00198A                     u2105:
  3413  00198A  90D8               	bcf	status,0,c
  3414  00198C  0100               	movlb	0	; () banked
  3415  00198E  3778               	rlcf	??_CANSetMask& (0+255),f,b
  3416  001990  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3417  001992  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3418  001994  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3419  001996  2EE8               	decfsz	wreg,f,c
  3420  001998  D7F8               	goto	u2105
  3421  00199A  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3422  00199E  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3423  0019A2  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3424  0019A6  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3428  0019AA  C07D  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3429  0019AE                     l2532:
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;inc\CANlib.h: 652: }
  3433                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3434  0019AE  0E02               	movlw	2
  3435  0019B0  0100               	movlb	0	; () banked
  3436  0019B2  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3437  0019B4  A4D8               	btfss	status,2,c
  3438  0019B6  D056               	goto	l2548
  3439                           
  3440                           ; BSR set to: 0
  3441  0019B8  0100               	movlb	0	; () banked
  3442  0019BA  2977               	incf	CANSetMask@type& (0+255),w,b
  3443  0019BC  A4D8               	btfss	status,2,c
  3444  0019BE  D052               	goto	l2548
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;inc\CANlib.h: 655: {
  3448                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3449  0019C0  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3450  0019C4  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3451  0019C8  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3452  0019CC  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3453  0019D0  0E04               	movlw	4
  3454  0019D2  D006               	goto	u2130
  3455  0019D4                     u2135:
  3456  0019D4  0100               	movlb	0	; () banked
  3457  0019D6  90D8               	bcf	status,0,c
  3458  0019D8  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3459  0019DA  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3460  0019DC  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3461  0019DE  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3462  0019E0                     u2130:
  3463  0019E0  2EE8               	decfsz	wreg,f,c
  3464  0019E2  D7F8               	goto	u2135
  3465  0019E4  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3466  0019E8  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3467  0019EC  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3468  0019F0  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3472  0019F4  0100               	movlb	0	; () banked
  3473  0019F6  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3474  0019F8  0100               	movlb	0	; () banked
  3475  0019FA  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3476  0019FC  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3477  0019FE  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3478  001A00  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3482  001A02  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3486  001A06  0E07               	movlw	7
  3487  001A08  0100               	movlb	0	; () banked
  3488  001A0A  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3489  001A0C  0100               	movlb	0	; () banked
  3490  001A0E  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3491  001A10  0E00               	movlw	0
  3492  001A12  0100               	movlb	0	; () banked
  3493  001A14  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3494  001A16  0100               	movlb	0	; () banked
  3495  001A18  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3496  001A1A  0E00               	movlw	0
  3497  001A1C  0100               	movlb	0	; () banked
  3498  001A1E  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3499  001A20  0100               	movlb	0	; () banked
  3500  001A22  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3501  001A24  0E00               	movlw	0
  3502  001A26  0100               	movlb	0	; () banked
  3503  001A28  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3504  001A2A  0100               	movlb	0	; () banked
  3505  001A2C  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3509  001A2E  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3510  001A32  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3511  001A36  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3512  001A3A  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3513  001A3E  0E05               	movlw	5
  3514  001A40                     u2145:
  3515  001A40  90D8               	bcf	status,0,c
  3516  001A42  0100               	movlb	0	; () banked
  3517  001A44  3778               	rlcf	??_CANSetMask& (0+255),f,b
  3518  001A46  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3519  001A48  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3520  001A4A  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3521  001A4C  2EE8               	decfsz	wreg,f,c
  3522  001A4E  D7F8               	goto	u2145
  3523  001A50  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3524  001A54  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3525  001A58  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3526  001A5C  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3530  001A60  C07D  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3531  001A64                     l2548:
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;inc\CANlib.h: 663: }
  3535                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3536  001A64  0100               	movlb	0	; () banked
  3537  001A66  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  3538  001A68  A4D8               	btfss	status,2,c
  3539  001A6A  D087               	goto	l2580
  3540                           
  3541                           ; BSR set to: 0
  3542  001A6C  0EF7               	movlw	247
  3543  001A6E  0100               	movlb	0	; () banked
  3544  001A70  1977               	xorwf	CANSetMask@type& (0+255),w,b
  3545  001A72  A4D8               	btfss	status,2,c
  3546  001A74  D082               	goto	l2580
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;inc\CANlib.h: 666: {
  3550                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3551  001A76  0100               	movlb	0	; () banked
  3552  001A78  5173               	movf	CANSetMask@mask& (0+255),w,b
  3553  001A7A  0100               	movlb	0	; () banked
  3554  001A7C  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3555  001A7E  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3556  001A80  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3557  001A82  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3561  001A84  C07D  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3565  001A88  0E00               	movlw	0
  3566  001A8A  0100               	movlb	0	; () banked
  3567  001A8C  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3568  001A8E  0100               	movlb	0	; () banked
  3569  001A90  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3570  001A92  0EFF               	movlw	255
  3571  001A94  0100               	movlb	0	; () banked
  3572  001A96  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3573  001A98  0100               	movlb	0	; () banked
  3574  001A9A  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3575  001A9C  0E00               	movlw	0
  3576  001A9E  0100               	movlb	0	; () banked
  3577  001AA0  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3578  001AA2  0100               	movlb	0	; () banked
  3579  001AA4  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3580  001AA6  0E00               	movlw	0
  3581  001AA8  0100               	movlb	0	; () banked
  3582  001AAA  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3583  001AAC  0100               	movlb	0	; () banked
  3584  001AAE  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3588  001AB0  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3589  001AB4  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3590  001AB8  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3591  001ABC  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3592  001AC0  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  3593  001AC4  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  3594  001AC8  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  3595  001ACC  0100               	movlb	0	; () banked
  3596  001ACE  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  3597  001AD0  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3598  001AD4  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3599  001AD8  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3600  001ADC  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3604  001AE0  C07D  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  3608  001AE4  0100               	movlb	0	; () banked
  3609  001AE6  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3610  001AE8  D003               	goto	l430
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3614  001AEA  010F               	movlb	15	; () banked
  3615  001AEC  8119               	bsf	25,0,b	;volatile
  3616  001AEE  D002               	goto	l431
  3617  001AF0                     l430:
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;inc\CANlib.h: 676: else
  3621                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3622  001AF0  010F               	movlb	15	; () banked
  3623  001AF2  9119               	bcf	25,0,b	;volatile
  3624  001AF4                     l431:
  3625                           
  3626                           ; BSR set to: 15
  3627                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  3628  001AF4  0100               	movlb	0	; () banked
  3629  001AF6  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3630  001AF8  D003               	goto	l432
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3634  001AFA  010F               	movlb	15	; () banked
  3635  001AFC  8319               	bsf	25,1,b	;volatile
  3636  001AFE  D002               	goto	l433
  3637  001B00                     l432:
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;inc\CANlib.h: 681: else
  3641                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3642  001B00  010F               	movlb	15	; () banked
  3643  001B02  9319               	bcf	25,1,b	;volatile
  3644  001B04                     l433:
  3645                           
  3646                           ; BSR set to: 15
  3647                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  3648  001B04  0100               	movlb	0	; () banked
  3649  001B06  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3650  001B08  D003               	goto	l434
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3654  001B0A  010F               	movlb	15	; () banked
  3655  001B0C  8B19               	bsf	25,5,b	;volatile
  3656  001B0E  D002               	goto	l435
  3657  001B10                     l434:
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;inc\CANlib.h: 686: else
  3661                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3662  001B10  010F               	movlb	15	; () banked
  3663  001B12  9B19               	bcf	25,5,b	;volatile
  3664  001B14                     l435:
  3665                           
  3666                           ; BSR set to: 15
  3667                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  3668  001B14  0100               	movlb	0	; () banked
  3669  001B16  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3670  001B18  D003               	goto	l436
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3674  001B1A  010F               	movlb	15	; () banked
  3675  001B1C  8D19               	bsf	25,6,b	;volatile
  3676  001B1E  D002               	goto	l437
  3677  001B20                     l436:
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;inc\CANlib.h: 691: else
  3681                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3682  001B20  010F               	movlb	15	; () banked
  3683  001B22  9D19               	bcf	25,6,b	;volatile
  3684  001B24                     l437:
  3685                           
  3686                           ; BSR set to: 15
  3687                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  3688  001B24  0100               	movlb	0	; () banked
  3689  001B26  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3690  001B28  D003               	goto	l438
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3694  001B2A  010F               	movlb	15	; () banked
  3695  001B2C  8F19               	bsf	25,7,b	;volatile
  3696  001B2E  D002               	goto	l2574
  3697  001B30                     l438:
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;inc\CANlib.h: 696: else
  3701                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3702  001B30  010F               	movlb	15	; () banked
  3703  001B32  9F19               	bcf	25,7,b	;volatile
  3704  001B34                     l2574:
  3705                           
  3706                           ; BSR set to: 15
  3707                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  3708  001B34  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3709  001B38  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3710  001B3C  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3711  001B40  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3712  001B44  0E16               	movlw	22
  3713  001B46  D006               	goto	u2220
  3714  001B48                     u2225:
  3715  001B48  0100               	movlb	0	; () banked
  3716  001B4A  90D8               	bcf	status,0,c
  3717  001B4C  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3718  001B4E  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3719  001B50  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3720  001B52  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3721  001B54                     u2220:
  3722  001B54  2EE8               	decfsz	wreg,f,c
  3723  001B56  D7F8               	goto	u2225
  3724  001B58  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3725  001B5C  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3726  001B60  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3727  001B64  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  3731  001B68  0100               	movlb	0	; () banked
  3732  001B6A  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3733  001B6C  0100               	movlb	0	; () banked
  3734  001B6E  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3735  001B70  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3736  001B72  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3737  001B74  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3741  001B76  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3742  001B7A                     l2580:
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;inc\CANlib.h: 702: }
  3746                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3747  001B7A  0E02               	movlw	2
  3748  001B7C  0100               	movlb	0	; () banked
  3749  001B7E  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3750  001B80  A4D8               	btfss	status,2,c
  3751  001B82  0012               	return	
  3752                           
  3753                           ; BSR set to: 0
  3754  001B84  0EF7               	movlw	247
  3755  001B86  0100               	movlb	0	; () banked
  3756  001B88  1977               	xorwf	CANSetMask@type& (0+255),w,b
  3757  001B8A  A4D8               	btfss	status,2,c
  3758  001B8C  0012               	return	
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;inc\CANlib.h: 705: {
  3762                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  3763  001B8E  0100               	movlb	0	; () banked
  3764  001B90  5173               	movf	CANSetMask@mask& (0+255),w,b
  3765  001B92  0100               	movlb	0	; () banked
  3766  001B94  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3767  001B96  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3768  001B98  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3769  001B9A  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3773  001B9C  C07D  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  3777  001BA0  0E00               	movlw	0
  3778  001BA2  0100               	movlb	0	; () banked
  3779  001BA4  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3780  001BA6  0100               	movlb	0	; () banked
  3781  001BA8  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3782  001BAA  0EFF               	movlw	255
  3783  001BAC  0100               	movlb	0	; () banked
  3784  001BAE  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3785  001BB0  0100               	movlb	0	; () banked
  3786  001BB2  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3787  001BB4  0E00               	movlw	0
  3788  001BB6  0100               	movlb	0	; () banked
  3789  001BB8  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3790  001BBA  0100               	movlb	0	; () banked
  3791  001BBC  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3792  001BBE  0E00               	movlw	0
  3793  001BC0  0100               	movlb	0	; () banked
  3794  001BC2  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3795  001BC4  0100               	movlb	0	; () banked
  3796  001BC6  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  3800  001BC8  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3801  001BCC  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3802  001BD0  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3803  001BD4  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3804  001BD8  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  3805  001BDC  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  3806  001BE0  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  3807  001BE4  0100               	movlb	0	; () banked
  3808  001BE6  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  3809  001BE8  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3810  001BEC  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3811  001BF0  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3812  001BF4  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3816  001BF8  C07D  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  3820  001BFC  0100               	movlb	0	; () banked
  3821  001BFE  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3822  001C00  D003               	goto	l441
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3826  001C02  010F               	movlb	15	; () banked
  3827  001C04  811D               	bsf	29,0,b	;volatile
  3828  001C06  D002               	goto	l442
  3829  001C08                     l441:
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;inc\CANlib.h: 715: else
  3833                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3834  001C08  010F               	movlb	15	; () banked
  3835  001C0A  911D               	bcf	29,0,b	;volatile
  3836  001C0C                     l442:
  3837                           
  3838                           ; BSR set to: 15
  3839                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  3840  001C0C  0100               	movlb	0	; () banked
  3841  001C0E  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3842  001C10  D003               	goto	l443
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3846  001C12  010F               	movlb	15	; () banked
  3847  001C14  831D               	bsf	29,1,b	;volatile
  3848  001C16  D002               	goto	l444
  3849  001C18                     l443:
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;inc\CANlib.h: 720: else
  3853                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3854  001C18  010F               	movlb	15	; () banked
  3855  001C1A  931D               	bcf	29,1,b	;volatile
  3856  001C1C                     l444:
  3857                           
  3858                           ; BSR set to: 15
  3859                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  3860  001C1C  0100               	movlb	0	; () banked
  3861  001C1E  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3862  001C20  D003               	goto	l445
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3866  001C22  010F               	movlb	15	; () banked
  3867  001C24  8B1D               	bsf	29,5,b	;volatile
  3868  001C26  D002               	goto	l446
  3869  001C28                     l445:
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;inc\CANlib.h: 725: else
  3873                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3874  001C28  010F               	movlb	15	; () banked
  3875  001C2A  9B1D               	bcf	29,5,b	;volatile
  3876  001C2C                     l446:
  3877                           
  3878                           ; BSR set to: 15
  3879                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  3880  001C2C  0100               	movlb	0	; () banked
  3881  001C2E  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3882  001C30  D003               	goto	l447
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3886  001C32  010F               	movlb	15	; () banked
  3887  001C34  8D1D               	bsf	29,6,b	;volatile
  3888  001C36  D002               	goto	l448
  3889  001C38                     l447:
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;inc\CANlib.h: 730: else
  3893                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3894  001C38  010F               	movlb	15	; () banked
  3895  001C3A  9D1D               	bcf	29,6,b	;volatile
  3896  001C3C                     l448:
  3897                           
  3898                           ; BSR set to: 15
  3899                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  3900  001C3C  0100               	movlb	0	; () banked
  3901  001C3E  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3902  001C40  D003               	goto	l449
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3906  001C42  010F               	movlb	15	; () banked
  3907  001C44  8F1D               	bsf	29,7,b	;volatile
  3908  001C46  D002               	goto	l2606
  3909  001C48                     l449:
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;inc\CANlib.h: 735: else
  3913                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3914  001C48  010F               	movlb	15	; () banked
  3915  001C4A  9F1D               	bcf	29,7,b	;volatile
  3916  001C4C                     l2606:
  3917                           
  3918                           ; BSR set to: 15
  3919                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  3920  001C4C  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3921  001C50  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3922  001C54  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3923  001C58  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3924  001C5C  0E16               	movlw	22
  3925  001C5E  D006               	goto	u2300
  3926  001C60                     u2305:
  3927  001C60  0100               	movlb	0	; () banked
  3928  001C62  90D8               	bcf	status,0,c
  3929  001C64  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3930  001C66  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3931  001C68  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3932  001C6A  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3933  001C6C                     u2300:
  3934  001C6C  2EE8               	decfsz	wreg,f,c
  3935  001C6E  D7F8               	goto	u2305
  3936  001C70  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3937  001C74  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3938  001C78  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3939  001C7C  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  3943  001C80  0100               	movlb	0	; () banked
  3944  001C82  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3945  001C84  0100               	movlb	0	; () banked
  3946  001C86  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3947  001C88  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3948  001C8A  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3949  001C8C  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3953  001C8E  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3954  001C92  0012               	return	
  3955  001C94                     __end_of_CANSetMask:
  3956                           	opt stack 0
  3957                           tblptru	equ	0xFF8
  3958                           tblptrh	equ	0xFF7
  3959                           tblptrl	equ	0xFF6
  3960                           tablat	equ	0xFF5
  3961                           intcon	equ	0xFF2
  3962                           intcon2	equ	0xFF1
  3963                           postinc0	equ	0xFEE
  3964                           wreg	equ	0xFE8
  3965                           postdec1	equ	0xFE5
  3966                           fsr1l	equ	0xFE1
  3967                           indf2	equ	0xFDF
  3968                           fsr2h	equ	0xFDA
  3969                           fsr2l	equ	0xFD9
  3970                           status	equ	0xFD8
  3971                           
  3972 ;; *************** function _CANSetFilter *****************
  3973 ;; Defined at:
  3974 ;;		line 748 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  numBuffer       1    wreg     enum E16881
  3977 ;;  filter          4   19[BANK0 ] unsigned long 
  3978 ;;  type            1   23[BANK0 ] enum E16844
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  numBuffer       1   28[BANK0 ] enum E16881
  3981 ;;  tamp            4   29[BANK0 ] unsigned long 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;		None               void
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3991 ;;      Params:         0       5       0       0
  3992 ;;      Locals:         0       5       0       0
  3993 ;;      Temps:          0       4       0       0
  3994 ;;      Totals:         0      14       0       0
  3995 ;;Total ram usage:       14 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    4
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_CANInitialize
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text9
  4006  000158                     __ptext9:
  4007                           	opt stack 0
  4008  000158                     _CANSetFilter:
  4009                           	opt stack 24
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;incstack = 0
  4013                           ;CANSetFilter@numBuffer stored from wreg
  4014  000158  0100               	movlb	0	; () banked
  4015  00015A  6F7C               	movwf	CANSetFilter@numBuffer& (0+255),b
  4016                           
  4017                           ;inc\CANlib.h: 750: unsigned long tamp;
  4018                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4019  00015C  0100               	movlb	0	; () banked
  4020  00015E  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4021  000160  0100               	movlb	0	; () banked
  4022  000162  A4D8               	btfss	status,2,c
  4023  000164  D058               	goto	l2630
  4024                           
  4025                           ; BSR set to: 0
  4026  000166  0100               	movlb	0	; () banked
  4027  000168  2977               	incf	CANSetFilter@type& (0+255),w,b
  4028  00016A  A4D8               	btfss	status,2,c
  4029  00016C  D054               	goto	l2630
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;inc\CANlib.h: 753: {
  4033                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4034  00016E  010F               	movlb	15	; () banked
  4035  000170  9701               	bcf	1,3,b	;volatile
  4036                           
  4037                           ; BSR set to: 15
  4038                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4039  000172  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4040  000176  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4041  00017A  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4042  00017E  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4043  000182  0E04               	movlw	4
  4044  000184  D006               	goto	u2330
  4045  000186                     u2335:
  4046  000186  0100               	movlb	0	; () banked
  4047  000188  90D8               	bcf	status,0,c
  4048  00018A  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4049  00018C  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4050  00018E  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4051  000190  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4052  000192                     u2330:
  4053  000192  2EE8               	decfsz	wreg,f,c
  4054  000194  D7F8               	goto	u2335
  4055  000196  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4056  00019A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4057  00019E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4058  0001A2  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4062  0001A6  0100               	movlb	0	; () banked
  4063  0001A8  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4064  0001AA  0100               	movlb	0	; () banked
  4065  0001AC  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4066  0001AE  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4067  0001B0  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4068  0001B2  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4072  0001B4  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4076  0001B8  0E07               	movlw	7
  4077  0001BA  0100               	movlb	0	; () banked
  4078  0001BC  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4079  0001BE  0100               	movlb	0	; () banked
  4080  0001C0  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4081  0001C2  0E00               	movlw	0
  4082  0001C4  0100               	movlb	0	; () banked
  4083  0001C6  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4084  0001C8  0100               	movlb	0	; () banked
  4085  0001CA  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4086  0001CC  0E00               	movlw	0
  4087  0001CE  0100               	movlb	0	; () banked
  4088  0001D0  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4089  0001D2  0100               	movlb	0	; () banked
  4090  0001D4  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4091  0001D6  0E00               	movlw	0
  4092  0001D8  0100               	movlb	0	; () banked
  4093  0001DA  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4094  0001DC  0100               	movlb	0	; () banked
  4095  0001DE  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4099  0001E0  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4100  0001E4  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4101  0001E8  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4102  0001EC  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4103  0001F0  0E05               	movlw	5
  4104  0001F2                     u2345:
  4105  0001F2  90D8               	bcf	status,0,c
  4106  0001F4  0100               	movlb	0	; () banked
  4107  0001F6  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4108  0001F8  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4109  0001FA  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4110  0001FC  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4111  0001FE  2EE8               	decfsz	wreg,f,c
  4112  000200  D7F8               	goto	u2345
  4113  000202  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4114  000206  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4115  00020A  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4116  00020E  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4120  000212  C07D  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4121  000216                     l2630:
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;inc\CANlib.h: 763: }
  4125                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4126  000216  0100               	movlb	0	; () banked
  4127  000218  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4128  00021A  A4D8               	btfss	status,2,c
  4129  00021C  D058               	goto	l2648
  4130                           
  4131                           ; BSR set to: 0
  4132  00021E  0100               	movlb	0	; () banked
  4133  000220  2977               	incf	CANSetFilter@type& (0+255),w,b
  4134  000222  A4D8               	btfss	status,2,c
  4135  000224  D054               	goto	l2648
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;inc\CANlib.h: 766: {
  4139                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4140  000226  010F               	movlb	15	; () banked
  4141  000228  9705               	bcf	5,3,b	;volatile
  4142                           
  4143                           ; BSR set to: 15
  4144                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4145  00022A  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4146  00022E  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4147  000232  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4148  000236  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4149  00023A  0E04               	movlw	4
  4150  00023C  D006               	goto	u2370
  4151  00023E                     u2375:
  4152  00023E  0100               	movlb	0	; () banked
  4153  000240  90D8               	bcf	status,0,c
  4154  000242  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4155  000244  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4156  000246  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4157  000248  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4158  00024A                     u2370:
  4159  00024A  2EE8               	decfsz	wreg,f,c
  4160  00024C  D7F8               	goto	u2375
  4161  00024E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4162  000252  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4163  000256  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4164  00025A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4168  00025E  0100               	movlb	0	; () banked
  4169  000260  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4170  000262  0100               	movlb	0	; () banked
  4171  000264  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4172  000266  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4173  000268  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4174  00026A  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4178  00026C  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4182  000270  0E07               	movlw	7
  4183  000272  0100               	movlb	0	; () banked
  4184  000274  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4185  000276  0100               	movlb	0	; () banked
  4186  000278  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4187  00027A  0E00               	movlw	0
  4188  00027C  0100               	movlb	0	; () banked
  4189  00027E  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4190  000280  0100               	movlb	0	; () banked
  4191  000282  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4192  000284  0E00               	movlw	0
  4193  000286  0100               	movlb	0	; () banked
  4194  000288  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4195  00028A  0100               	movlb	0	; () banked
  4196  00028C  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4197  00028E  0E00               	movlw	0
  4198  000290  0100               	movlb	0	; () banked
  4199  000292  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4200  000294  0100               	movlb	0	; () banked
  4201  000296  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4205  000298  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4206  00029C  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4207  0002A0  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4208  0002A4  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4209  0002A8  0E05               	movlw	5
  4210  0002AA                     u2385:
  4211  0002AA  90D8               	bcf	status,0,c
  4212  0002AC  0100               	movlb	0	; () banked
  4213  0002AE  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4214  0002B0  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4215  0002B2  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4216  0002B4  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4217  0002B6  2EE8               	decfsz	wreg,f,c
  4218  0002B8  D7F8               	goto	u2385
  4219  0002BA  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4220  0002BE  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4221  0002C2  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4222  0002C6  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4226  0002CA  C07D  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4227  0002CE                     l2648:
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;inc\CANlib.h: 776: }
  4231                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4232  0002CE  0E02               	movlw	2
  4233  0002D0  0100               	movlb	0	; () banked
  4234  0002D2  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4235  0002D4  A4D8               	btfss	status,2,c
  4236  0002D6  D058               	goto	l2666
  4237                           
  4238                           ; BSR set to: 0
  4239  0002D8  0100               	movlb	0	; () banked
  4240  0002DA  2977               	incf	CANSetFilter@type& (0+255),w,b
  4241  0002DC  A4D8               	btfss	status,2,c
  4242  0002DE  D054               	goto	l2666
  4243                           
  4244                           ; BSR set to: 0
  4245                           ;inc\CANlib.h: 779: {
  4246                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4247  0002E0  010F               	movlb	15	; () banked
  4248  0002E2  9709               	bcf	9,3,b	;volatile
  4249                           
  4250                           ; BSR set to: 15
  4251                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4252  0002E4  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4253  0002E8  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4254  0002EC  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4255  0002F0  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4256  0002F4  0E04               	movlw	4
  4257  0002F6  D006               	goto	u2410
  4258  0002F8                     u2415:
  4259  0002F8  0100               	movlb	0	; () banked
  4260  0002FA  90D8               	bcf	status,0,c
  4261  0002FC  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4262  0002FE  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4263  000300  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4264  000302  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4265  000304                     u2410:
  4266  000304  2EE8               	decfsz	wreg,f,c
  4267  000306  D7F8               	goto	u2415
  4268  000308  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4269  00030C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4270  000310  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4271  000314  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4275  000318  0100               	movlb	0	; () banked
  4276  00031A  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4277  00031C  0100               	movlb	0	; () banked
  4278  00031E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4279  000320  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4280  000322  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4281  000324  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4285  000326  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4289  00032A  0E07               	movlw	7
  4290  00032C  0100               	movlb	0	; () banked
  4291  00032E  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4292  000330  0100               	movlb	0	; () banked
  4293  000332  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4294  000334  0E00               	movlw	0
  4295  000336  0100               	movlb	0	; () banked
  4296  000338  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4297  00033A  0100               	movlb	0	; () banked
  4298  00033C  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4299  00033E  0E00               	movlw	0
  4300  000340  0100               	movlb	0	; () banked
  4301  000342  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4302  000344  0100               	movlb	0	; () banked
  4303  000346  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4304  000348  0E00               	movlw	0
  4305  00034A  0100               	movlb	0	; () banked
  4306  00034C  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4307  00034E  0100               	movlb	0	; () banked
  4308  000350  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4312  000352  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4313  000356  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4314  00035A  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4315  00035E  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4316  000362  0E05               	movlw	5
  4317  000364                     u2425:
  4318  000364  90D8               	bcf	status,0,c
  4319  000366  0100               	movlb	0	; () banked
  4320  000368  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4321  00036A  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4322  00036C  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4323  00036E  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4324  000370  2EE8               	decfsz	wreg,f,c
  4325  000372  D7F8               	goto	u2425
  4326  000374  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4327  000378  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4328  00037C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4329  000380  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4333  000384  C07D  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4334  000388                     l2666:
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;inc\CANlib.h: 789: }
  4338                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4339  000388  0E03               	movlw	3
  4340  00038A  0100               	movlb	0	; () banked
  4341  00038C  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4342  00038E  A4D8               	btfss	status,2,c
  4343  000390  D058               	goto	l2684
  4344                           
  4345                           ; BSR set to: 0
  4346  000392  0100               	movlb	0	; () banked
  4347  000394  2977               	incf	CANSetFilter@type& (0+255),w,b
  4348  000396  A4D8               	btfss	status,2,c
  4349  000398  D054               	goto	l2684
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;inc\CANlib.h: 792: {
  4353                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4354  00039A  010F               	movlb	15	; () banked
  4355  00039C  970D               	bcf	13,3,b	;volatile
  4356                           
  4357                           ; BSR set to: 15
  4358                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4359  00039E  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4360  0003A2  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4361  0003A6  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4362  0003AA  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4363  0003AE  0E04               	movlw	4
  4364  0003B0  D006               	goto	u2450
  4365  0003B2                     u2455:
  4366  0003B2  0100               	movlb	0	; () banked
  4367  0003B4  90D8               	bcf	status,0,c
  4368  0003B6  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4369  0003B8  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4370  0003BA  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4371  0003BC  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4372  0003BE                     u2450:
  4373  0003BE  2EE8               	decfsz	wreg,f,c
  4374  0003C0  D7F8               	goto	u2455
  4375  0003C2  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4376  0003C6  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4377  0003CA  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4378  0003CE  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4382  0003D2  0100               	movlb	0	; () banked
  4383  0003D4  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4384  0003D6  0100               	movlb	0	; () banked
  4385  0003D8  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4386  0003DA  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4387  0003DC  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4388  0003DE  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4392  0003E0  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4396  0003E4  0E07               	movlw	7
  4397  0003E6  0100               	movlb	0	; () banked
  4398  0003E8  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4399  0003EA  0100               	movlb	0	; () banked
  4400  0003EC  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4401  0003EE  0E00               	movlw	0
  4402  0003F0  0100               	movlb	0	; () banked
  4403  0003F2  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4404  0003F4  0100               	movlb	0	; () banked
  4405  0003F6  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4406  0003F8  0E00               	movlw	0
  4407  0003FA  0100               	movlb	0	; () banked
  4408  0003FC  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4409  0003FE  0100               	movlb	0	; () banked
  4410  000400  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4411  000402  0E00               	movlw	0
  4412  000404  0100               	movlb	0	; () banked
  4413  000406  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4414  000408  0100               	movlb	0	; () banked
  4415  00040A  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4419  00040C  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4420  000410  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4421  000414  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4422  000418  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4423  00041C  0E05               	movlw	5
  4424  00041E                     u2465:
  4425  00041E  90D8               	bcf	status,0,c
  4426  000420  0100               	movlb	0	; () banked
  4427  000422  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4428  000424  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4429  000426  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4430  000428  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4431  00042A  2EE8               	decfsz	wreg,f,c
  4432  00042C  D7F8               	goto	u2465
  4433  00042E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4434  000432  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4435  000436  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4436  00043A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4440  00043E  C07D  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4441  000442                     l2684:
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;inc\CANlib.h: 802: }
  4445                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4446  000442  0E04               	movlw	4
  4447  000444  0100               	movlb	0	; () banked
  4448  000446  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4449  000448  A4D8               	btfss	status,2,c
  4450  00044A  D058               	goto	l2702
  4451                           
  4452                           ; BSR set to: 0
  4453  00044C  0100               	movlb	0	; () banked
  4454  00044E  2977               	incf	CANSetFilter@type& (0+255),w,b
  4455  000450  A4D8               	btfss	status,2,c
  4456  000452  D054               	goto	l2702
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;inc\CANlib.h: 805: {
  4460                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4461  000454  010F               	movlb	15	; () banked
  4462  000456  9711               	bcf	17,3,b	;volatile
  4463                           
  4464                           ; BSR set to: 15
  4465                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4466  000458  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4467  00045C  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4468  000460  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4469  000464  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4470  000468  0E04               	movlw	4
  4471  00046A  D006               	goto	u2490
  4472  00046C                     u2495:
  4473  00046C  0100               	movlb	0	; () banked
  4474  00046E  90D8               	bcf	status,0,c
  4475  000470  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4476  000472  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4477  000474  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4478  000476  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4479  000478                     u2490:
  4480  000478  2EE8               	decfsz	wreg,f,c
  4481  00047A  D7F8               	goto	u2495
  4482  00047C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4483  000480  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4484  000484  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4485  000488  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4489  00048C  0100               	movlb	0	; () banked
  4490  00048E  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4491  000490  0100               	movlb	0	; () banked
  4492  000492  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4493  000494  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4494  000496  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4495  000498  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4499  00049A  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4503  00049E  0E07               	movlw	7
  4504  0004A0  0100               	movlb	0	; () banked
  4505  0004A2  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4506  0004A4  0100               	movlb	0	; () banked
  4507  0004A6  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4508  0004A8  0E00               	movlw	0
  4509  0004AA  0100               	movlb	0	; () banked
  4510  0004AC  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4511  0004AE  0100               	movlb	0	; () banked
  4512  0004B0  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4513  0004B2  0E00               	movlw	0
  4514  0004B4  0100               	movlb	0	; () banked
  4515  0004B6  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4516  0004B8  0100               	movlb	0	; () banked
  4517  0004BA  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4518  0004BC  0E00               	movlw	0
  4519  0004BE  0100               	movlb	0	; () banked
  4520  0004C0  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4521  0004C2  0100               	movlb	0	; () banked
  4522  0004C4  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4526  0004C6  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4527  0004CA  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4528  0004CE  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4529  0004D2  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4530  0004D6  0E05               	movlw	5
  4531  0004D8                     u2505:
  4532  0004D8  90D8               	bcf	status,0,c
  4533  0004DA  0100               	movlb	0	; () banked
  4534  0004DC  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4535  0004DE  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4536  0004E0  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4537  0004E2  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4538  0004E4  2EE8               	decfsz	wreg,f,c
  4539  0004E6  D7F8               	goto	u2505
  4540  0004E8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4541  0004EC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4542  0004F0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4543  0004F4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4547  0004F8  C07D  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4548  0004FC                     l2702:
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;inc\CANlib.h: 815: }
  4552                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4553  0004FC  0E05               	movlw	5
  4554  0004FE  0100               	movlb	0	; () banked
  4555  000500  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4556  000502  A4D8               	btfss	status,2,c
  4557  000504  D058               	goto	l2720
  4558                           
  4559                           ; BSR set to: 0
  4560  000506  0100               	movlb	0	; () banked
  4561  000508  2977               	incf	CANSetFilter@type& (0+255),w,b
  4562  00050A  A4D8               	btfss	status,2,c
  4563  00050C  D054               	goto	l2720
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;inc\CANlib.h: 818: {
  4567                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4568  00050E  010F               	movlb	15	; () banked
  4569  000510  9715               	bcf	21,3,b	;volatile
  4570                           
  4571                           ; BSR set to: 15
  4572                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4573  000512  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4574  000516  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4575  00051A  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4576  00051E  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4577  000522  0E04               	movlw	4
  4578  000524  D006               	goto	u2530
  4579  000526                     u2535:
  4580  000526  0100               	movlb	0	; () banked
  4581  000528  90D8               	bcf	status,0,c
  4582  00052A  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4583  00052C  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4584  00052E  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4585  000530  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4586  000532                     u2530:
  4587  000532  2EE8               	decfsz	wreg,f,c
  4588  000534  D7F8               	goto	u2535
  4589  000536  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4590  00053A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4591  00053E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4592  000542  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  4596  000546  0100               	movlb	0	; () banked
  4597  000548  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4598  00054A  0100               	movlb	0	; () banked
  4599  00054C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4600  00054E  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4601  000550  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4602  000552  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4606  000554  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  4610  000558  0E07               	movlw	7
  4611  00055A  0100               	movlb	0	; () banked
  4612  00055C  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4613  00055E  0100               	movlb	0	; () banked
  4614  000560  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4615  000562  0E00               	movlw	0
  4616  000564  0100               	movlb	0	; () banked
  4617  000566  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4618  000568  0100               	movlb	0	; () banked
  4619  00056A  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4620  00056C  0E00               	movlw	0
  4621  00056E  0100               	movlb	0	; () banked
  4622  000570  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4623  000572  0100               	movlb	0	; () banked
  4624  000574  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4625  000576  0E00               	movlw	0
  4626  000578  0100               	movlb	0	; () banked
  4627  00057A  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4628  00057C  0100               	movlb	0	; () banked
  4629  00057E  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  4633  000580  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4634  000584  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4635  000588  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4636  00058C  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4637  000590  0E05               	movlw	5
  4638  000592                     u2545:
  4639  000592  90D8               	bcf	status,0,c
  4640  000594  0100               	movlb	0	; () banked
  4641  000596  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4642  000598  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4643  00059A  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4644  00059C  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4645  00059E  2EE8               	decfsz	wreg,f,c
  4646  0005A0  D7F8               	goto	u2545
  4647  0005A2  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4648  0005A6  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4649  0005AA  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4650  0005AE  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4654  0005B2  C07D  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4655  0005B6                     l2720:
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;inc\CANlib.h: 828: }
  4659                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4660  0005B6  0100               	movlb	0	; () banked
  4661  0005B8  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4662  0005BA  0100               	movlb	0	; () banked
  4663  0005BC  A4D8               	btfss	status,2,c
  4664  0005BE  D089               	goto	l2754
  4665                           
  4666                           ; BSR set to: 0
  4667  0005C0  0EF7               	movlw	247
  4668  0005C2  0100               	movlb	0	; () banked
  4669  0005C4  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  4670  0005C6  A4D8               	btfss	status,2,c
  4671  0005C8  D084               	goto	l2754
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;inc\CANlib.h: 832: {
  4675                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4676  0005CA  010F               	movlb	15	; () banked
  4677  0005CC  8701               	bsf	1,3,b	;volatile
  4678                           
  4679                           ; BSR set to: 15
  4680                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  4681  0005CE  0100               	movlb	0	; () banked
  4682  0005D0  5173               	movf	CANSetFilter@filter& (0+255),w,b
  4683  0005D2  0100               	movlb	0	; () banked
  4684  0005D4  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4685  0005D6  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4686  0005D8  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4687  0005DA  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4691  0005DC  C07D  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  4695  0005E0  0E00               	movlw	0
  4696  0005E2  0100               	movlb	0	; () banked
  4697  0005E4  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4698  0005E6  0100               	movlb	0	; () banked
  4699  0005E8  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4700  0005EA  0EFF               	movlw	255
  4701  0005EC  0100               	movlb	0	; () banked
  4702  0005EE  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4703  0005F0  0100               	movlb	0	; () banked
  4704  0005F2  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4705  0005F4  0E00               	movlw	0
  4706  0005F6  0100               	movlb	0	; () banked
  4707  0005F8  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4708  0005FA  0100               	movlb	0	; () banked
  4709  0005FC  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4710  0005FE  0E00               	movlw	0
  4711  000600  0100               	movlb	0	; () banked
  4712  000602  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4713  000604  0100               	movlb	0	; () banked
  4714  000606  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  4718  000608  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4719  00060C  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4720  000610  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4721  000614  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4722  000618  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  4723  00061C  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4724  000620  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4725  000624  0100               	movlb	0	; () banked
  4726  000626  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  4727  000628  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4728  00062C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4729  000630  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4730  000634  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4734  000638  C07D  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  4738  00063C  0100               	movlb	0	; () banked
  4739  00063E  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4740  000640  D003               	goto	l461
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4744  000642  010F               	movlb	15	; () banked
  4745  000644  8101               	bsf	1,0,b	;volatile
  4746  000646  D002               	goto	l462
  4747  000648                     l461:
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;inc\CANlib.h: 844: else
  4751                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4752  000648  010F               	movlb	15	; () banked
  4753  00064A  9101               	bcf	1,0,b	;volatile
  4754  00064C                     l462:
  4755                           
  4756                           ; BSR set to: 15
  4757                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  4758  00064C  0100               	movlb	0	; () banked
  4759  00064E  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4760  000650  D003               	goto	l463
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4764  000652  010F               	movlb	15	; () banked
  4765  000654  8301               	bsf	1,1,b	;volatile
  4766  000656  D002               	goto	l464
  4767  000658                     l463:
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;inc\CANlib.h: 849: else
  4771                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4772  000658  010F               	movlb	15	; () banked
  4773  00065A  9301               	bcf	1,1,b	;volatile
  4774  00065C                     l464:
  4775                           
  4776                           ; BSR set to: 15
  4777                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  4778  00065C  0100               	movlb	0	; () banked
  4779  00065E  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4780  000660  D003               	goto	l465
  4781                           
  4782                           ; BSR set to: 0
  4783                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4784  000662  010F               	movlb	15	; () banked
  4785  000664  8B01               	bsf	1,5,b	;volatile
  4786  000666  D002               	goto	l466
  4787  000668                     l465:
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;inc\CANlib.h: 854: else
  4791                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4792  000668  010F               	movlb	15	; () banked
  4793  00066A  9B01               	bcf	1,5,b	;volatile
  4794  00066C                     l466:
  4795                           
  4796                           ; BSR set to: 15
  4797                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  4798  00066C  0100               	movlb	0	; () banked
  4799  00066E  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4800  000670  D003               	goto	l467
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4804  000672  010F               	movlb	15	; () banked
  4805  000674  8D01               	bsf	1,6,b	;volatile
  4806  000676  D002               	goto	l468
  4807  000678                     l467:
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;inc\CANlib.h: 859: else
  4811                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4812  000678  010F               	movlb	15	; () banked
  4813  00067A  9D01               	bcf	1,6,b	;volatile
  4814  00067C                     l468:
  4815                           
  4816                           ; BSR set to: 15
  4817                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  4818  00067C  0100               	movlb	0	; () banked
  4819  00067E  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4820  000680  D003               	goto	l469
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4824  000682  010F               	movlb	15	; () banked
  4825  000684  8F01               	bsf	1,7,b	;volatile
  4826  000686  D002               	goto	l2748
  4827  000688                     l469:
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;inc\CANlib.h: 864: else
  4831                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4832  000688  010F               	movlb	15	; () banked
  4833  00068A  9F01               	bcf	1,7,b	;volatile
  4834  00068C                     l2748:
  4835                           
  4836                           ; BSR set to: 15
  4837                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  4838  00068C  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4839  000690  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4840  000694  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4841  000698  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4842  00069C  0E16               	movlw	22
  4843  00069E  D006               	goto	u2620
  4844  0006A0                     u2625:
  4845  0006A0  0100               	movlb	0	; () banked
  4846  0006A2  90D8               	bcf	status,0,c
  4847  0006A4  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4848  0006A6  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4849  0006A8  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4850  0006AA  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4851  0006AC                     u2620:
  4852  0006AC  2EE8               	decfsz	wreg,f,c
  4853  0006AE  D7F8               	goto	u2625
  4854  0006B0  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4855  0006B4  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4856  0006B8  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4857  0006BC  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  4861  0006C0  0100               	movlb	0	; () banked
  4862  0006C2  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4863  0006C4  0100               	movlb	0	; () banked
  4864  0006C6  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4865  0006C8  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4866  0006CA  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4867  0006CC  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4871  0006CE  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4872  0006D2                     l2754:
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;inc\CANlib.h: 870: }
  4876                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4877  0006D2  0100               	movlb	0	; () banked
  4878  0006D4  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4879  0006D6  A4D8               	btfss	status,2,c
  4880  0006D8  D089               	goto	l2788
  4881                           
  4882                           ; BSR set to: 0
  4883  0006DA  0EF7               	movlw	247
  4884  0006DC  0100               	movlb	0	; () banked
  4885  0006DE  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  4886  0006E0  A4D8               	btfss	status,2,c
  4887  0006E2  D084               	goto	l2788
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;inc\CANlib.h: 873: {
  4891                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4892  0006E4  010F               	movlb	15	; () banked
  4893  0006E6  8705               	bsf	5,3,b	;volatile
  4894                           
  4895                           ; BSR set to: 15
  4896                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  4897  0006E8  0100               	movlb	0	; () banked
  4898  0006EA  5173               	movf	CANSetFilter@filter& (0+255),w,b
  4899  0006EC  0100               	movlb	0	; () banked
  4900  0006EE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4901  0006F0  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4902  0006F2  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4903  0006F4  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4907  0006F6  C07D  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  4911  0006FA  0E00               	movlw	0
  4912  0006FC  0100               	movlb	0	; () banked
  4913  0006FE  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4914  000700  0100               	movlb	0	; () banked
  4915  000702  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4916  000704  0EFF               	movlw	255
  4917  000706  0100               	movlb	0	; () banked
  4918  000708  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4919  00070A  0100               	movlb	0	; () banked
  4920  00070C  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4921  00070E  0E00               	movlw	0
  4922  000710  0100               	movlb	0	; () banked
  4923  000712  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4924  000714  0100               	movlb	0	; () banked
  4925  000716  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4926  000718  0E00               	movlw	0
  4927  00071A  0100               	movlb	0	; () banked
  4928  00071C  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4929  00071E  0100               	movlb	0	; () banked
  4930  000720  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  4934  000722  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4935  000726  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4936  00072A  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4937  00072E  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4938  000732  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  4939  000736  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4940  00073A  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4941  00073E  0100               	movlb	0	; () banked
  4942  000740  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  4943  000742  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4944  000746  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4945  00074A  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4946  00074E  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4947                           
  4948                           ; BSR set to: 0
  4949                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4950  000752  C07D  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  4954  000756  0100               	movlb	0	; () banked
  4955  000758  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4956  00075A  D003               	goto	l472
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4960  00075C  010F               	movlb	15	; () banked
  4961  00075E  8105               	bsf	5,0,b	;volatile
  4962  000760  D002               	goto	l473
  4963  000762                     l472:
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;inc\CANlib.h: 885: else
  4967                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4968  000762  010F               	movlb	15	; () banked
  4969  000764  9105               	bcf	5,0,b	;volatile
  4970  000766                     l473:
  4971                           
  4972                           ; BSR set to: 15
  4973                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  4974  000766  0100               	movlb	0	; () banked
  4975  000768  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4976  00076A  D003               	goto	l474
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4980  00076C  010F               	movlb	15	; () banked
  4981  00076E  8305               	bsf	5,1,b	;volatile
  4982  000770  D002               	goto	l475
  4983  000772                     l474:
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;inc\CANlib.h: 890: else
  4987                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4988  000772  010F               	movlb	15	; () banked
  4989  000774  9305               	bcf	5,1,b	;volatile
  4990  000776                     l475:
  4991                           
  4992                           ; BSR set to: 15
  4993                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  4994  000776  0100               	movlb	0	; () banked
  4995  000778  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4996  00077A  D003               	goto	l476
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5000  00077C  010F               	movlb	15	; () banked
  5001  00077E  8B05               	bsf	5,5,b	;volatile
  5002  000780  D002               	goto	l477
  5003  000782                     l476:
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;inc\CANlib.h: 895: else
  5007                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5008  000782  010F               	movlb	15	; () banked
  5009  000784  9B05               	bcf	5,5,b	;volatile
  5010  000786                     l477:
  5011                           
  5012                           ; BSR set to: 15
  5013                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5014  000786  0100               	movlb	0	; () banked
  5015  000788  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5016  00078A  D003               	goto	l478
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5020  00078C  010F               	movlb	15	; () banked
  5021  00078E  8D05               	bsf	5,6,b	;volatile
  5022  000790  D002               	goto	l479
  5023  000792                     l478:
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;inc\CANlib.h: 900: else
  5027                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5028  000792  010F               	movlb	15	; () banked
  5029  000794  9D05               	bcf	5,6,b	;volatile
  5030  000796                     l479:
  5031                           
  5032                           ; BSR set to: 15
  5033                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5034  000796  0100               	movlb	0	; () banked
  5035  000798  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5036  00079A  D003               	goto	l480
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5040  00079C  010F               	movlb	15	; () banked
  5041  00079E  8F05               	bsf	5,7,b	;volatile
  5042  0007A0  D002               	goto	l2782
  5043  0007A2                     l480:
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;inc\CANlib.h: 905: else
  5047                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5048  0007A2  010F               	movlb	15	; () banked
  5049  0007A4  9F05               	bcf	5,7,b	;volatile
  5050  0007A6                     l2782:
  5051                           
  5052                           ; BSR set to: 15
  5053                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5054  0007A6  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5055  0007AA  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5056  0007AE  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5057  0007B2  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5058  0007B6  0E16               	movlw	22
  5059  0007B8  D006               	goto	u2700
  5060  0007BA                     u2705:
  5061  0007BA  0100               	movlb	0	; () banked
  5062  0007BC  90D8               	bcf	status,0,c
  5063  0007BE  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5064  0007C0  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5065  0007C2  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5066  0007C4  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5067  0007C6                     u2700:
  5068  0007C6  2EE8               	decfsz	wreg,f,c
  5069  0007C8  D7F8               	goto	u2705
  5070  0007CA  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5071  0007CE  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5072  0007D2  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5073  0007D6  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5077  0007DA  0100               	movlb	0	; () banked
  5078  0007DC  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5079  0007DE  0100               	movlb	0	; () banked
  5080  0007E0  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5081  0007E2  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5082  0007E4  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5083  0007E6  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5087  0007E8  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5088  0007EC                     l2788:
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;inc\CANlib.h: 911: }
  5092                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5093  0007EC  0E02               	movlw	2
  5094  0007EE  0100               	movlb	0	; () banked
  5095  0007F0  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5096  0007F2  A4D8               	btfss	status,2,c
  5097  0007F4  D089               	goto	l2822
  5098                           
  5099                           ; BSR set to: 0
  5100  0007F6  0EF7               	movlw	247
  5101  0007F8  0100               	movlb	0	; () banked
  5102  0007FA  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5103  0007FC  A4D8               	btfss	status,2,c
  5104  0007FE  D084               	goto	l2822
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;inc\CANlib.h: 915: {
  5108                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5109  000800  010F               	movlb	15	; () banked
  5110  000802  8709               	bsf	9,3,b	;volatile
  5111                           
  5112                           ; BSR set to: 15
  5113                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5114  000804  0100               	movlb	0	; () banked
  5115  000806  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5116  000808  0100               	movlb	0	; () banked
  5117  00080A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5118  00080C  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5119  00080E  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5120  000810  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5124  000812  C07D  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5128  000816  0E00               	movlw	0
  5129  000818  0100               	movlb	0	; () banked
  5130  00081A  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5131  00081C  0100               	movlb	0	; () banked
  5132  00081E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5133  000820  0EFF               	movlw	255
  5134  000822  0100               	movlb	0	; () banked
  5135  000824  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5136  000826  0100               	movlb	0	; () banked
  5137  000828  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5138  00082A  0E00               	movlw	0
  5139  00082C  0100               	movlb	0	; () banked
  5140  00082E  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5141  000830  0100               	movlb	0	; () banked
  5142  000832  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5143  000834  0E00               	movlw	0
  5144  000836  0100               	movlb	0	; () banked
  5145  000838  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5146  00083A  0100               	movlb	0	; () banked
  5147  00083C  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5151  00083E  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5152  000842  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5153  000846  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5154  00084A  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5155  00084E  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5156  000852  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5157  000856  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5158  00085A  0100               	movlb	0	; () banked
  5159  00085C  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5160  00085E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5161  000862  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5162  000866  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5163  00086A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5167  00086E  C07D  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5168                           
  5169                           ; BSR set to: 0
  5170                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5171  000872  0100               	movlb	0	; () banked
  5172  000874  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5173  000876  D003               	goto	l483
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5177  000878  010F               	movlb	15	; () banked
  5178  00087A  8109               	bsf	9,0,b	;volatile
  5179  00087C  D002               	goto	l484
  5180  00087E                     l483:
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;inc\CANlib.h: 927: else
  5184                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5185  00087E  010F               	movlb	15	; () banked
  5186  000880  9109               	bcf	9,0,b	;volatile
  5187  000882                     l484:
  5188                           
  5189                           ; BSR set to: 15
  5190                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5191  000882  0100               	movlb	0	; () banked
  5192  000884  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5193  000886  D003               	goto	l485
  5194                           
  5195                           ; BSR set to: 0
  5196                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5197  000888  010F               	movlb	15	; () banked
  5198  00088A  8309               	bsf	9,1,b	;volatile
  5199  00088C  D002               	goto	l486
  5200  00088E                     l485:
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;inc\CANlib.h: 932: else
  5204                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5205  00088E  010F               	movlb	15	; () banked
  5206  000890  9309               	bcf	9,1,b	;volatile
  5207  000892                     l486:
  5208                           
  5209                           ; BSR set to: 15
  5210                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5211  000892  0100               	movlb	0	; () banked
  5212  000894  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5213  000896  D003               	goto	l487
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5217  000898  010F               	movlb	15	; () banked
  5218  00089A  8B09               	bsf	9,5,b	;volatile
  5219  00089C  D002               	goto	l488
  5220  00089E                     l487:
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;inc\CANlib.h: 937: else
  5224                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5225  00089E  010F               	movlb	15	; () banked
  5226  0008A0  9B09               	bcf	9,5,b	;volatile
  5227  0008A2                     l488:
  5228                           
  5229                           ; BSR set to: 15
  5230                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5231  0008A2  0100               	movlb	0	; () banked
  5232  0008A4  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5233  0008A6  D003               	goto	l489
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5237  0008A8  010F               	movlb	15	; () banked
  5238  0008AA  8D09               	bsf	9,6,b	;volatile
  5239  0008AC  D002               	goto	l490
  5240  0008AE                     l489:
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;inc\CANlib.h: 942: else
  5244                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5245  0008AE  010F               	movlb	15	; () banked
  5246  0008B0  9D09               	bcf	9,6,b	;volatile
  5247  0008B2                     l490:
  5248                           
  5249                           ; BSR set to: 15
  5250                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5251  0008B2  0100               	movlb	0	; () banked
  5252  0008B4  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5253  0008B6  D003               	goto	l491
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5257  0008B8  010F               	movlb	15	; () banked
  5258  0008BA  8F09               	bsf	9,7,b	;volatile
  5259  0008BC  D002               	goto	l2816
  5260  0008BE                     l491:
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;inc\CANlib.h: 947: else
  5264                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5265  0008BE  010F               	movlb	15	; () banked
  5266  0008C0  9F09               	bcf	9,7,b	;volatile
  5267  0008C2                     l2816:
  5268                           
  5269                           ; BSR set to: 15
  5270                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5271  0008C2  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5272  0008C6  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5273  0008CA  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5274  0008CE  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5275  0008D2  0E16               	movlw	22
  5276  0008D4  D006               	goto	u2780
  5277  0008D6                     u2785:
  5278  0008D6  0100               	movlb	0	; () banked
  5279  0008D8  90D8               	bcf	status,0,c
  5280  0008DA  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5281  0008DC  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5282  0008DE  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5283  0008E0  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5284  0008E2                     u2780:
  5285  0008E2  2EE8               	decfsz	wreg,f,c
  5286  0008E4  D7F8               	goto	u2785
  5287  0008E6  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5288  0008EA  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5289  0008EE  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5290  0008F2  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5294  0008F6  0100               	movlb	0	; () banked
  5295  0008F8  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5296  0008FA  0100               	movlb	0	; () banked
  5297  0008FC  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5298  0008FE  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5299  000900  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5300  000902  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5304  000904  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5305  000908                     l2822:
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;inc\CANlib.h: 953: }
  5309                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5310  000908  0E03               	movlw	3
  5311  00090A  0100               	movlb	0	; () banked
  5312  00090C  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5313  00090E  A4D8               	btfss	status,2,c
  5314  000910  D089               	goto	l2856
  5315                           
  5316                           ; BSR set to: 0
  5317  000912  0EF7               	movlw	247
  5318  000914  0100               	movlb	0	; () banked
  5319  000916  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5320  000918  A4D8               	btfss	status,2,c
  5321  00091A  D084               	goto	l2856
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;inc\CANlib.h: 956: {
  5325                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5326  00091C  010F               	movlb	15	; () banked
  5327  00091E  870D               	bsf	13,3,b	;volatile
  5328                           
  5329                           ; BSR set to: 15
  5330                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5331  000920  0100               	movlb	0	; () banked
  5332  000922  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5333  000924  0100               	movlb	0	; () banked
  5334  000926  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5335  000928  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5336  00092A  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5337  00092C  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5338                           
  5339                           ; BSR set to: 0
  5340                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5341  00092E  C07D  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5345  000932  0E00               	movlw	0
  5346  000934  0100               	movlb	0	; () banked
  5347  000936  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5348  000938  0100               	movlb	0	; () banked
  5349  00093A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5350  00093C  0EFF               	movlw	255
  5351  00093E  0100               	movlb	0	; () banked
  5352  000940  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5353  000942  0100               	movlb	0	; () banked
  5354  000944  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5355  000946  0E00               	movlw	0
  5356  000948  0100               	movlb	0	; () banked
  5357  00094A  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5358  00094C  0100               	movlb	0	; () banked
  5359  00094E  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5360  000950  0E00               	movlw	0
  5361  000952  0100               	movlb	0	; () banked
  5362  000954  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5363  000956  0100               	movlb	0	; () banked
  5364  000958  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5365                           
  5366                           ; BSR set to: 0
  5367                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5368  00095A  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5369  00095E  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5370  000962  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5371  000966  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5372  00096A  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5373  00096E  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5374  000972  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5375  000976  0100               	movlb	0	; () banked
  5376  000978  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5377  00097A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5378  00097E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5379  000982  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5380  000986  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5384  00098A  C07D  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5388  00098E  0100               	movlb	0	; () banked
  5389  000990  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5390  000992  D003               	goto	l494
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5394  000994  010F               	movlb	15	; () banked
  5395  000996  810D               	bsf	13,0,b	;volatile
  5396  000998  D002               	goto	l495
  5397  00099A                     l494:
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;inc\CANlib.h: 968: else
  5401                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5402  00099A  010F               	movlb	15	; () banked
  5403  00099C  910D               	bcf	13,0,b	;volatile
  5404  00099E                     l495:
  5405                           
  5406                           ; BSR set to: 15
  5407                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5408  00099E  0100               	movlb	0	; () banked
  5409  0009A0  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5410  0009A2  D003               	goto	l496
  5411                           
  5412                           ; BSR set to: 0
  5413                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5414  0009A4  010F               	movlb	15	; () banked
  5415  0009A6  830D               	bsf	13,1,b	;volatile
  5416  0009A8  D002               	goto	l497
  5417  0009AA                     l496:
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;inc\CANlib.h: 973: else
  5421                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5422  0009AA  010F               	movlb	15	; () banked
  5423  0009AC  930D               	bcf	13,1,b	;volatile
  5424  0009AE                     l497:
  5425                           
  5426                           ; BSR set to: 15
  5427                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5428  0009AE  0100               	movlb	0	; () banked
  5429  0009B0  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5430  0009B2  D003               	goto	l498
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5434  0009B4  010F               	movlb	15	; () banked
  5435  0009B6  8B0D               	bsf	13,5,b	;volatile
  5436  0009B8  D002               	goto	l499
  5437  0009BA                     l498:
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;inc\CANlib.h: 978: else
  5441                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5442  0009BA  010F               	movlb	15	; () banked
  5443  0009BC  9B0D               	bcf	13,5,b	;volatile
  5444  0009BE                     l499:
  5445                           
  5446                           ; BSR set to: 15
  5447                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5448  0009BE  0100               	movlb	0	; () banked
  5449  0009C0  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5450  0009C2  D003               	goto	l500
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5454  0009C4  010F               	movlb	15	; () banked
  5455  0009C6  8D0D               	bsf	13,6,b	;volatile
  5456  0009C8  D002               	goto	l501
  5457  0009CA                     l500:
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;inc\CANlib.h: 983: else
  5461                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5462  0009CA  010F               	movlb	15	; () banked
  5463  0009CC  9D0D               	bcf	13,6,b	;volatile
  5464  0009CE                     l501:
  5465                           
  5466                           ; BSR set to: 15
  5467                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5468  0009CE  0100               	movlb	0	; () banked
  5469  0009D0  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5470  0009D2  D003               	goto	l502
  5471                           
  5472                           ; BSR set to: 0
  5473                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5474  0009D4  010F               	movlb	15	; () banked
  5475  0009D6  8F0D               	bsf	13,7,b	;volatile
  5476  0009D8  D002               	goto	l2850
  5477  0009DA                     l502:
  5478                           
  5479                           ; BSR set to: 0
  5480                           ;inc\CANlib.h: 988: else
  5481                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5482  0009DA  010F               	movlb	15	; () banked
  5483  0009DC  9F0D               	bcf	13,7,b	;volatile
  5484  0009DE                     l2850:
  5485                           
  5486                           ; BSR set to: 15
  5487                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5488  0009DE  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5489  0009E2  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5490  0009E6  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5491  0009EA  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5492  0009EE  0E16               	movlw	22
  5493  0009F0  D006               	goto	u2860
  5494  0009F2                     u2865:
  5495  0009F2  0100               	movlb	0	; () banked
  5496  0009F4  90D8               	bcf	status,0,c
  5497  0009F6  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5498  0009F8  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5499  0009FA  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5500  0009FC  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5501  0009FE                     u2860:
  5502  0009FE  2EE8               	decfsz	wreg,f,c
  5503  000A00  D7F8               	goto	u2865
  5504  000A02  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5505  000A06  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5506  000A0A  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5507  000A0E  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5511  000A12  0100               	movlb	0	; () banked
  5512  000A14  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5513  000A16  0100               	movlb	0	; () banked
  5514  000A18  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5515  000A1A  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5516  000A1C  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5517  000A1E  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5521  000A20  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5522  000A24                     l2856:
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;inc\CANlib.h: 994: }
  5526                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5527  000A24  0E04               	movlw	4
  5528  000A26  0100               	movlb	0	; () banked
  5529  000A28  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5530  000A2A  A4D8               	btfss	status,2,c
  5531  000A2C  D089               	goto	l2890
  5532                           
  5533                           ; BSR set to: 0
  5534  000A2E  0EF7               	movlw	247
  5535  000A30  0100               	movlb	0	; () banked
  5536  000A32  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5537  000A34  A4D8               	btfss	status,2,c
  5538  000A36  D084               	goto	l2890
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;inc\CANlib.h: 997: {
  5542                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5543  000A38  010F               	movlb	15	; () banked
  5544  000A3A  8711               	bsf	17,3,b	;volatile
  5545                           
  5546                           ; BSR set to: 15
  5547                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5548  000A3C  0100               	movlb	0	; () banked
  5549  000A3E  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5550  000A40  0100               	movlb	0	; () banked
  5551  000A42  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5552  000A44  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5553  000A46  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5554  000A48  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5558  000A4A  C07D  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5562  000A4E  0E00               	movlw	0
  5563  000A50  0100               	movlb	0	; () banked
  5564  000A52  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5565  000A54  0100               	movlb	0	; () banked
  5566  000A56  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5567  000A58  0EFF               	movlw	255
  5568  000A5A  0100               	movlb	0	; () banked
  5569  000A5C  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5570  000A5E  0100               	movlb	0	; () banked
  5571  000A60  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5572  000A62  0E00               	movlw	0
  5573  000A64  0100               	movlb	0	; () banked
  5574  000A66  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5575  000A68  0100               	movlb	0	; () banked
  5576  000A6A  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5577  000A6C  0E00               	movlw	0
  5578  000A6E  0100               	movlb	0	; () banked
  5579  000A70  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5580  000A72  0100               	movlb	0	; () banked
  5581  000A74  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  5585  000A76  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5586  000A7A  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5587  000A7E  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5588  000A82  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5589  000A86  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5590  000A8A  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5591  000A8E  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5592  000A92  0100               	movlb	0	; () banked
  5593  000A94  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5594  000A96  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5595  000A9A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5596  000A9E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5597  000AA2  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5601  000AA6  C07D  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5602                           
  5603                           ; BSR set to: 0
  5604                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  5605  000AAA  0100               	movlb	0	; () banked
  5606  000AAC  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5607  000AAE  D003               	goto	l505
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5611  000AB0  010F               	movlb	15	; () banked
  5612  000AB2  8111               	bsf	17,0,b	;volatile
  5613  000AB4  D002               	goto	l506
  5614  000AB6                     l505:
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;inc\CANlib.h: 1009: else
  5618                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5619  000AB6  010F               	movlb	15	; () banked
  5620  000AB8  9111               	bcf	17,0,b	;volatile
  5621  000ABA                     l506:
  5622                           
  5623                           ; BSR set to: 15
  5624                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  5625  000ABA  0100               	movlb	0	; () banked
  5626  000ABC  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5627  000ABE  D003               	goto	l507
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5631  000AC0  010F               	movlb	15	; () banked
  5632  000AC2  8311               	bsf	17,1,b	;volatile
  5633  000AC4  D002               	goto	l508
  5634  000AC6                     l507:
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;inc\CANlib.h: 1014: else
  5638                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5639  000AC6  010F               	movlb	15	; () banked
  5640  000AC8  9311               	bcf	17,1,b	;volatile
  5641  000ACA                     l508:
  5642                           
  5643                           ; BSR set to: 15
  5644                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  5645  000ACA  0100               	movlb	0	; () banked
  5646  000ACC  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5647  000ACE  D003               	goto	l509
  5648                           
  5649                           ; BSR set to: 0
  5650                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5651  000AD0  010F               	movlb	15	; () banked
  5652  000AD2  8B11               	bsf	17,5,b	;volatile
  5653  000AD4  D002               	goto	l510
  5654  000AD6                     l509:
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;inc\CANlib.h: 1019: else
  5658                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5659  000AD6  010F               	movlb	15	; () banked
  5660  000AD8  9B11               	bcf	17,5,b	;volatile
  5661  000ADA                     l510:
  5662                           
  5663                           ; BSR set to: 15
  5664                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  5665  000ADA  0100               	movlb	0	; () banked
  5666  000ADC  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5667  000ADE  D003               	goto	l511
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5671  000AE0  010F               	movlb	15	; () banked
  5672  000AE2  8D11               	bsf	17,6,b	;volatile
  5673  000AE4  D002               	goto	l512
  5674  000AE6                     l511:
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;inc\CANlib.h: 1024: else
  5678                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5679  000AE6  010F               	movlb	15	; () banked
  5680  000AE8  9D11               	bcf	17,6,b	;volatile
  5681  000AEA                     l512:
  5682                           
  5683                           ; BSR set to: 15
  5684                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  5685  000AEA  0100               	movlb	0	; () banked
  5686  000AEC  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5687  000AEE  D003               	goto	l513
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5691  000AF0  010F               	movlb	15	; () banked
  5692  000AF2  8F11               	bsf	17,7,b	;volatile
  5693  000AF4  D002               	goto	l2884
  5694  000AF6                     l513:
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;inc\CANlib.h: 1029: else
  5698                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5699  000AF6  010F               	movlb	15	; () banked
  5700  000AF8  9F11               	bcf	17,7,b	;volatile
  5701  000AFA                     l2884:
  5702                           
  5703                           ; BSR set to: 15
  5704                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  5705  000AFA  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5706  000AFE  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5707  000B02  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5708  000B06  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5709  000B0A  0E16               	movlw	22
  5710  000B0C  D006               	goto	u2940
  5711  000B0E                     u2945:
  5712  000B0E  0100               	movlb	0	; () banked
  5713  000B10  90D8               	bcf	status,0,c
  5714  000B12  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5715  000B14  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5716  000B16  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5717  000B18  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5718  000B1A                     u2940:
  5719  000B1A  2EE8               	decfsz	wreg,f,c
  5720  000B1C  D7F8               	goto	u2945
  5721  000B1E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5722  000B22  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5723  000B26  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5724  000B2A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5728  000B2E  0100               	movlb	0	; () banked
  5729  000B30  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5730  000B32  0100               	movlb	0	; () banked
  5731  000B34  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5732  000B36  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5733  000B38  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5734  000B3A  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5735                           
  5736                           ; BSR set to: 0
  5737                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5738  000B3C  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5739  000B40                     l2890:
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;inc\CANlib.h: 1035: }
  5743                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5744  000B40  0E05               	movlw	5
  5745  000B42  0100               	movlb	0	; () banked
  5746  000B44  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5747  000B46  A4D8               	btfss	status,2,c
  5748  000B48  0012               	return	
  5749                           
  5750                           ; BSR set to: 0
  5751  000B4A  0EF7               	movlw	247
  5752  000B4C  0100               	movlb	0	; () banked
  5753  000B4E  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5754  000B50  A4D8               	btfss	status,2,c
  5755  000B52  0012               	return	
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;inc\CANlib.h: 1038: {
  5759                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5760  000B54  010F               	movlb	15	; () banked
  5761  000B56  8715               	bsf	21,3,b	;volatile
  5762                           
  5763                           ; BSR set to: 15
  5764                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  5765  000B58  0100               	movlb	0	; () banked
  5766  000B5A  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5767  000B5C  0100               	movlb	0	; () banked
  5768  000B5E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5769  000B60  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5770  000B62  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5771  000B64  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5775  000B66  C07D  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5779  000B6A  0E00               	movlw	0
  5780  000B6C  0100               	movlb	0	; () banked
  5781  000B6E  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5782  000B70  0100               	movlb	0	; () banked
  5783  000B72  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5784  000B74  0EFF               	movlw	255
  5785  000B76  0100               	movlb	0	; () banked
  5786  000B78  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5787  000B7A  0100               	movlb	0	; () banked
  5788  000B7C  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5789  000B7E  0E00               	movlw	0
  5790  000B80  0100               	movlb	0	; () banked
  5791  000B82  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5792  000B84  0100               	movlb	0	; () banked
  5793  000B86  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5794  000B88  0E00               	movlw	0
  5795  000B8A  0100               	movlb	0	; () banked
  5796  000B8C  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5797  000B8E  0100               	movlb	0	; () banked
  5798  000B90  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5799                           
  5800                           ; BSR set to: 0
  5801                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  5802  000B92  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5803  000B96  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5804  000B9A  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5805  000B9E  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5806  000BA2  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5807  000BA6  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5808  000BAA  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5809  000BAE  0100               	movlb	0	; () banked
  5810  000BB0  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5811  000BB2  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5812  000BB6  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5813  000BBA  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5814  000BBE  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5818  000BC2  C07D  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  5822  000BC6  0100               	movlb	0	; () banked
  5823  000BC8  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5824  000BCA  D003               	goto	l516
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5828  000BCC  010F               	movlb	15	; () banked
  5829  000BCE  8115               	bsf	21,0,b	;volatile
  5830  000BD0  D002               	goto	l517
  5831  000BD2                     l516:
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;inc\CANlib.h: 1050: else
  5835                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5836  000BD2  010F               	movlb	15	; () banked
  5837  000BD4  9115               	bcf	21,0,b	;volatile
  5838  000BD6                     l517:
  5839                           
  5840                           ; BSR set to: 15
  5841                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  5842  000BD6  0100               	movlb	0	; () banked
  5843  000BD8  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5844  000BDA  D003               	goto	l518
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5848  000BDC  010F               	movlb	15	; () banked
  5849  000BDE  8315               	bsf	21,1,b	;volatile
  5850  000BE0  D002               	goto	l519
  5851  000BE2                     l518:
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;inc\CANlib.h: 1055: else
  5855                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5856  000BE2  010F               	movlb	15	; () banked
  5857  000BE4  9315               	bcf	21,1,b	;volatile
  5858  000BE6                     l519:
  5859                           
  5860                           ; BSR set to: 15
  5861                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  5862  000BE6  0100               	movlb	0	; () banked
  5863  000BE8  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5864  000BEA  D003               	goto	l520
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5868  000BEC  010F               	movlb	15	; () banked
  5869  000BEE  8B15               	bsf	21,5,b	;volatile
  5870  000BF0  D002               	goto	l521
  5871  000BF2                     l520:
  5872                           
  5873                           ; BSR set to: 0
  5874                           ;inc\CANlib.h: 1060: else
  5875                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5876  000BF2  010F               	movlb	15	; () banked
  5877  000BF4  9B15               	bcf	21,5,b	;volatile
  5878  000BF6                     l521:
  5879                           
  5880                           ; BSR set to: 15
  5881                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  5882  000BF6  0100               	movlb	0	; () banked
  5883  000BF8  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5884  000BFA  D003               	goto	l522
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5888  000BFC  010F               	movlb	15	; () banked
  5889  000BFE  8D15               	bsf	21,6,b	;volatile
  5890  000C00  D002               	goto	l523
  5891  000C02                     l522:
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;inc\CANlib.h: 1065: else
  5895                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5896  000C02  010F               	movlb	15	; () banked
  5897  000C04  9D15               	bcf	21,6,b	;volatile
  5898  000C06                     l523:
  5899                           
  5900                           ; BSR set to: 15
  5901                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  5902  000C06  0100               	movlb	0	; () banked
  5903  000C08  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5904  000C0A  D003               	goto	l524
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5908  000C0C  010F               	movlb	15	; () banked
  5909  000C0E  8F15               	bsf	21,7,b	;volatile
  5910  000C10  D002               	goto	l2918
  5911  000C12                     l524:
  5912                           
  5913                           ; BSR set to: 0
  5914                           ;inc\CANlib.h: 1070: else
  5915                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5916  000C12  010F               	movlb	15	; () banked
  5917  000C14  9F15               	bcf	21,7,b	;volatile
  5918  000C16                     l2918:
  5919                           
  5920                           ; BSR set to: 15
  5921                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  5922  000C16  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5923  000C1A  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5924  000C1E  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5925  000C22  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5926  000C26  0E16               	movlw	22
  5927  000C28  D006               	goto	u3020
  5928  000C2A                     u3025:
  5929  000C2A  0100               	movlb	0	; () banked
  5930  000C2C  90D8               	bcf	status,0,c
  5931  000C2E  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5932  000C30  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5933  000C32  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5934  000C34  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5935  000C36                     u3020:
  5936  000C36  2EE8               	decfsz	wreg,f,c
  5937  000C38  D7F8               	goto	u3025
  5938  000C3A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5939  000C3E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5940  000C42  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5941  000C46  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5942                           
  5943                           ; BSR set to: 0
  5944                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5945  000C4A  0100               	movlb	0	; () banked
  5946  000C4C  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5947  000C4E  0100               	movlb	0	; () banked
  5948  000C50  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5949  000C52  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5950  000C54  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5951  000C56  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5955  000C58  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5956  000C5C  0012               	return	
  5957  000C5E                     __end_of_CANSetFilter:
  5958                           	opt stack 0
  5959                           tblptru	equ	0xFF8
  5960                           tblptrh	equ	0xFF7
  5961                           tblptrl	equ	0xFF6
  5962                           tablat	equ	0xFF5
  5963                           intcon	equ	0xFF2
  5964                           intcon2	equ	0xFF1
  5965                           postinc0	equ	0xFEE
  5966                           wreg	equ	0xFE8
  5967                           postdec1	equ	0xFE5
  5968                           fsr1l	equ	0xFE1
  5969                           indf2	equ	0xFDF
  5970                           fsr2h	equ	0xFDA
  5971                           fsr2l	equ	0xFD9
  5972                           status	equ	0xFD8
  5973                           
  5974 ;; *************** function _CANOperationMode *****************
  5975 ;; Defined at:
  5976 ;;		line 206 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  mode            1    wreg     enum E16838
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;  mode            1   19[BANK0 ] enum E16838
  5981 ;; Return value:  Size  Location     Type
  5982 ;;		None               void
  5983 ;; Registers used:
  5984 ;;		wreg, status,2, status,0
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5990 ;;      Params:         0       0       0       0
  5991 ;;      Locals:         0       1       0       0
  5992 ;;      Temps:          0       0       0       0
  5993 ;;      Totals:         0       1       0       0
  5994 ;;Total ram usage:        1 bytes
  5995 ;; Hardware stack levels used:    1
  5996 ;; Hardware stack levels required when called:    4
  5997 ;; This function calls:
  5998 ;;		Nothing
  5999 ;; This function is called by:
  6000 ;;		_CANInitialize
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           	psect	text10
  6005  0024E2                     __ptext10:
  6006                           	opt stack 0
  6007  0024E2                     _CANOperationMode:
  6008                           	opt stack 24
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;incstack = 0
  6012                           ;CANOperationMode@mode stored from wreg
  6013  0024E2  0100               	movlb	0	; () banked
  6014  0024E4  6F73               	movwf	CANOperationMode@mode& (0+255),b
  6015                           
  6016                           ;inc\CANlib.h: 208: CANCON = mode;
  6017  0024E6  C073  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6018  0024EA                     l2514:
  6019  0024EA  506E               	movf	3950,w,c	;volatile
  6020  0024EC  0BE0               	andlw	224
  6021  0024EE  0100               	movlb	0	; () banked
  6022  0024F0  1973               	xorwf	CANOperationMode@mode& (0+255),w,b
  6023  0024F2  B4D8               	btfsc	status,2,c
  6024  0024F4  0012               	return	
  6025  0024F6  D7F9               	goto	l2514
  6026  0024F8                     __end_of_CANOperationMode:
  6027                           	opt stack 0
  6028                           tblptru	equ	0xFF8
  6029                           tblptrh	equ	0xFF7
  6030                           tblptrl	equ	0xFF6
  6031                           tablat	equ	0xFF5
  6032                           intcon	equ	0xFF2
  6033                           intcon2	equ	0xFF1
  6034                           postinc0	equ	0xFEE
  6035                           wreg	equ	0xFE8
  6036                           postdec1	equ	0xFE5
  6037                           fsr1l	equ	0xFE1
  6038                           indf2	equ	0xFDF
  6039                           fsr2h	equ	0xFDA
  6040                           fsr2l	equ	0xFD9
  6041                           status	equ	0xFD8
  6042                           
  6043 ;; *************** function _calibrazione *****************
  6044 ;; Defined at:
  6045 ;;		line 173 in file "newmain.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;		None
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;		None
  6050 ;; Return value:  Size  Location     Type
  6051 ;;		None               void
  6052 ;; Registers used:
  6053 ;;		wreg, status,2, status,0, cstack
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6059 ;;      Params:         0       0       0       0
  6060 ;;      Locals:         0       0       0       0
  6061 ;;      Temps:          0       0       0       0
  6062 ;;      Totals:         0       0       0       0
  6063 ;;Total ram usage:        0 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    5
  6066 ;; This function calls:
  6067 ;;		_BusyADC
  6068 ;;		_ConvertADC
  6069 ;;		_ReadADC
  6070 ;;		___lwdiv
  6071 ;; This function is called by:
  6072 ;;		_main
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text11
  6077  002414                     __ptext11:
  6078                           	opt stack 0
  6079  002414                     _calibrazione:
  6080                           	opt stack 25
  6081                           
  6082                           ;newmain.c: 174: ConvertADC();
  6083                           
  6084                           ; BSR set to: 0
  6085                           ;incstack = 0
  6086  002414  ECB8  F012         	call	_ConvertADC	;wreg free
  6087  002418                     l3500:
  6088  002418  ECA2  F012         	call	_BusyADC	;wreg free
  6089  00241C  0900               	iorlw	0
  6090  00241E  A4D8               	btfss	status,2,c
  6091  002420  D7FB               	goto	l3500
  6092                           
  6093                           ;newmain.c: 176: ADCResult = ReadADC();
  6094  002422  EC90  F012         	call	_ReadADC	;wreg free
  6095  002426  C073  F0B5         	movff	?_ReadADC,_ADCResult
  6096  00242A  C074  F0B6         	movff	?_ReadADC+1,_ADCResult+1
  6097                           
  6098                           ;newmain.c: 177: calibration = (ADCResult - 511) / 45;
  6099  00242E  0E01               	movlw	1
  6100  002430  0100               	movlb	0	; () banked
  6101  002432  25B5               	addwf	_ADCResult& (0+255),w,b
  6102  002434  0100               	movlb	0	; () banked
  6103  002436  6F73               	movwf	___lwdiv@dividend& (0+255),b
  6104  002438  0EFE               	movlw	254
  6105  00243A  0100               	movlb	0	; () banked
  6106  00243C  21B6               	addwfc	(_ADCResult+1)& (0+255),w,b
  6107  00243E  0100               	movlb	0	; () banked
  6108  002440  6F74               	movwf	(___lwdiv@dividend+1)& (0+255),b
  6109  002442  0E00               	movlw	0
  6110  002444  0100               	movlb	0	; () banked
  6111  002446  6F76               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6112  002448  0E2D               	movlw	45
  6113  00244A  6F75               	movwf	___lwdiv@divisor& (0+255),b
  6114  00244C  EC46  F011         	call	___lwdiv	;wreg free
  6115  002450  C073  F00D         	movff	?___lwdiv,_calibration
  6116  002454  C074  F00E         	movff	?___lwdiv+1,_calibration+1
  6117  002458  0012               	return		;funcret
  6118  00245A                     __end_of_calibrazione:
  6119                           	opt stack 0
  6120                           tblptru	equ	0xFF8
  6121                           tblptrh	equ	0xFF7
  6122                           tblptrl	equ	0xFF6
  6123                           tablat	equ	0xFF5
  6124                           intcon	equ	0xFF2
  6125                           intcon2	equ	0xFF1
  6126                           postinc0	equ	0xFEE
  6127                           wreg	equ	0xFE8
  6128                           postdec1	equ	0xFE5
  6129                           fsr1l	equ	0xFE1
  6130                           indf2	equ	0xFDF
  6131                           fsr2h	equ	0xFDA
  6132                           fsr2l	equ	0xFD9
  6133                           status	equ	0xFD8
  6134                           
  6135 ;; *************** function ___lwdiv *****************
  6136 ;; Defined at:
  6137 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;  dividend        2   19[BANK0 ] unsigned int 
  6140 ;;  divisor         2   21[BANK0 ] unsigned int 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;  quotient        2   23[BANK0 ] unsigned int 
  6143 ;;  counter         1   25[BANK0 ] unsigned char 
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  2   19[BANK0 ] unsigned int 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6153 ;;      Params:         0       4       0       0
  6154 ;;      Locals:         0       3       0       0
  6155 ;;      Temps:          0       0       0       0
  6156 ;;      Totals:         0       7       0       0
  6157 ;;Total ram usage:        7 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    4
  6160 ;; This function calls:
  6161 ;;		Nothing
  6162 ;; This function is called by:
  6163 ;;		_calibrazione
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text12
  6168  00228C                     __ptext12:
  6169                           	opt stack 0
  6170  00228C                     ___lwdiv:
  6171                           	opt stack 25
  6172                           
  6173                           ;incstack = 0
  6174  00228C  0E00               	movlw	0
  6175  00228E  0100               	movlb	0	; () banked
  6176  002290  6F78               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6177  002292  0E00               	movlw	0
  6178  002294  6F77               	movwf	___lwdiv@quotient& (0+255),b
  6179                           
  6180                           ; BSR set to: 0
  6181  002296  0100               	movlb	0	; () banked
  6182  002298  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6183  00229A  0100               	movlb	0	; () banked
  6184  00229C  1176               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6185  00229E  B4D8               	btfsc	status,2,c
  6186  0022A0  D02C               	goto	l1109
  6187                           
  6188                           ; BSR set to: 0
  6189  0022A2  0E01               	movlw	1
  6190  0022A4  0100               	movlb	0	; () banked
  6191  0022A6  6F79               	movwf	___lwdiv@counter& (0+255),b
  6192  0022A8  D006               	goto	l3250
  6193  0022AA                     l3248:
  6194                           
  6195                           ; BSR set to: 0
  6196  0022AA  0100               	movlb	0	; () banked
  6197  0022AC  90D8               	bcf	status,0,c
  6198  0022AE  3775               	rlcf	___lwdiv@divisor& (0+255),f,b
  6199  0022B0  3776               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6200  0022B2  0100               	movlb	0	; () banked
  6201  0022B4  2B79               	incf	___lwdiv@counter& (0+255),f,b
  6202  0022B6                     l3250:
  6203                           
  6204                           ; BSR set to: 0
  6205  0022B6  0100               	movlb	0	; () banked
  6206  0022B8  AF76               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6207  0022BA  D7F7               	goto	l3248
  6208  0022BC                     l3252:
  6209                           
  6210                           ; BSR set to: 0
  6211  0022BC  0100               	movlb	0	; () banked
  6212  0022BE  90D8               	bcf	status,0,c
  6213  0022C0  3777               	rlcf	___lwdiv@quotient& (0+255),f,b
  6214  0022C2  3778               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6215                           
  6216                           ; BSR set to: 0
  6217  0022C4  0100               	movlb	0	; () banked
  6218  0022C6  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6219  0022C8  0100               	movlb	0	; () banked
  6220  0022CA  5D73               	subwf	___lwdiv@dividend& (0+255),w,b
  6221  0022CC  0100               	movlb	0	; () banked
  6222  0022CE  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6223  0022D0  0100               	movlb	0	; () banked
  6224  0022D2  5974               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6225  0022D4  A0D8               	btfss	status,0,c
  6226  0022D6  D00A               	goto	l3260
  6227                           
  6228                           ; BSR set to: 0
  6229  0022D8  0100               	movlb	0	; () banked
  6230  0022DA  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6231  0022DC  0100               	movlb	0	; () banked
  6232  0022DE  5F73               	subwf	___lwdiv@dividend& (0+255),f,b
  6233  0022E0  0100               	movlb	0	; () banked
  6234  0022E2  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6235  0022E4  0100               	movlb	0	; () banked
  6236  0022E6  5B74               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6237                           
  6238                           ; BSR set to: 0
  6239  0022E8  0100               	movlb	0	; () banked
  6240  0022EA  8177               	bsf	___lwdiv@quotient& (0+255),0,b
  6241  0022EC                     l3260:
  6242                           
  6243                           ; BSR set to: 0
  6244  0022EC  0100               	movlb	0	; () banked
  6245  0022EE  90D8               	bcf	status,0,c
  6246  0022F0  3376               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6247  0022F2  3375               	rrcf	___lwdiv@divisor& (0+255),f,b
  6248                           
  6249                           ; BSR set to: 0
  6250  0022F4  0100               	movlb	0	; () banked
  6251  0022F6  2F79               	decfsz	___lwdiv@counter& (0+255),f,b
  6252  0022F8  D7E1               	goto	l3252
  6253  0022FA                     l1109:
  6254                           
  6255                           ; BSR set to: 0
  6256  0022FA  C077  F073         	movff	___lwdiv@quotient,?___lwdiv
  6257  0022FE  C078  F074         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6258                           
  6259                           ; BSR set to: 0
  6260  002302  0012               	return		;funcret
  6261  002304                     __end_of___lwdiv:
  6262                           	opt stack 0
  6263                           tblptru	equ	0xFF8
  6264                           tblptrh	equ	0xFF7
  6265                           tblptrl	equ	0xFF6
  6266                           tablat	equ	0xFF5
  6267                           intcon	equ	0xFF2
  6268                           intcon2	equ	0xFF1
  6269                           postinc0	equ	0xFEE
  6270                           wreg	equ	0xFE8
  6271                           postdec1	equ	0xFE5
  6272                           fsr1l	equ	0xFE1
  6273                           indf2	equ	0xFDF
  6274                           fsr2h	equ	0xFDA
  6275                           fsr2l	equ	0xFD9
  6276                           status	equ	0xFD8
  6277                           
  6278 ;; *************** function _ReadADC *****************
  6279 ;; Defined at:
  6280 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcread.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;		None
  6283 ;; Auto vars:     Size  Location     Type
  6284 ;;		None
  6285 ;; Return value:  Size  Location     Type
  6286 ;;                  2   19[BANK0 ] int 
  6287 ;; Registers used:
  6288 ;;		wreg, status,2
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/0
  6291 ;;		On exit  : 0/0
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6294 ;;      Params:         0       2       0       0
  6295 ;;      Locals:         0       0       0       0
  6296 ;;      Temps:          0       2       0       0
  6297 ;;      Totals:         0       4       0       0
  6298 ;;Total ram usage:        4 bytes
  6299 ;; Hardware stack levels used:    1
  6300 ;; Hardware stack levels required when called:    4
  6301 ;; This function calls:
  6302 ;;		Nothing
  6303 ;; This function is called by:
  6304 ;;		_calibrazione
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text13
  6309  002520                     __ptext13:
  6310                           	opt stack 0
  6311  002520                     _ReadADC:
  6312                           	opt stack 25
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;incstack = 0
  6316  002520  50C4               	movf	4036,w,c	;volatile
  6317  002522  0100               	movlb	0	; () banked
  6318  002524  6F75               	movwf	??_ReadADC& (0+255),b
  6319  002526  50C3               	movf	4035,w,c	;volatile
  6320  002528  0100               	movlb	0	; () banked
  6321  00252A  6F73               	movwf	?_ReadADC& (0+255),b
  6322  00252C  C075  F074         	movff	??_ReadADC,?_ReadADC+1
  6323  002530  0012               	return	
  6324  002532                     __end_of_ReadADC:
  6325                           	opt stack 0
  6326                           tblptru	equ	0xFF8
  6327                           tblptrh	equ	0xFF7
  6328                           tblptrl	equ	0xFF6
  6329                           tablat	equ	0xFF5
  6330                           intcon	equ	0xFF2
  6331                           intcon2	equ	0xFF1
  6332                           postinc0	equ	0xFEE
  6333                           wreg	equ	0xFE8
  6334                           postdec1	equ	0xFE5
  6335                           fsr1l	equ	0xFE1
  6336                           indf2	equ	0xFDF
  6337                           fsr2h	equ	0xFDA
  6338                           fsr2l	equ	0xFD9
  6339                           status	equ	0xFD8
  6340                           
  6341 ;; *************** function _ConvertADC *****************
  6342 ;; Defined at:
  6343 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcconv.c"
  6344 ;; Parameters:    Size  Location     Type
  6345 ;;		None
  6346 ;; Auto vars:     Size  Location     Type
  6347 ;;		None
  6348 ;; Return value:  Size  Location     Type
  6349 ;;		None               void
  6350 ;; Registers used:
  6351 ;;		None
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6357 ;;      Params:         0       0       0       0
  6358 ;;      Locals:         0       0       0       0
  6359 ;;      Temps:          0       0       0       0
  6360 ;;      Totals:         0       0       0       0
  6361 ;;Total ram usage:        0 bytes
  6362 ;; Hardware stack levels used:    1
  6363 ;; Hardware stack levels required when called:    4
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		_calibrazione
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text14
  6372  002570                     __ptext14:
  6373                           	opt stack 0
  6374  002570                     _ConvertADC:
  6375                           	opt stack 25
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;incstack = 0
  6379  002570  82C2               	bsf	4034,1,c	;volatile
  6380  002572  0012               	return		;funcret
  6381  002574                     __end_of_ConvertADC:
  6382                           	opt stack 0
  6383                           tblptru	equ	0xFF8
  6384                           tblptrh	equ	0xFF7
  6385                           tblptrl	equ	0xFF6
  6386                           tablat	equ	0xFF5
  6387                           intcon	equ	0xFF2
  6388                           intcon2	equ	0xFF1
  6389                           postinc0	equ	0xFEE
  6390                           wreg	equ	0xFE8
  6391                           postdec1	equ	0xFE5
  6392                           fsr1l	equ	0xFE1
  6393                           indf2	equ	0xFDF
  6394                           fsr2h	equ	0xFDA
  6395                           fsr2l	equ	0xFD9
  6396                           status	equ	0xFD8
  6397                           
  6398 ;; *************** function _BusyADC *****************
  6399 ;; Defined at:
  6400 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcbusy.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;		None
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;		None
  6405 ;; Return value:  Size  Location     Type
  6406 ;;                  1    wreg      unsigned char 
  6407 ;; Registers used:
  6408 ;;		wreg
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6414 ;;      Params:         0       0       0       0
  6415 ;;      Locals:         0       0       0       0
  6416 ;;      Temps:          0       0       0       0
  6417 ;;      Totals:         0       0       0       0
  6418 ;;Total ram usage:        0 bytes
  6419 ;; Hardware stack levels used:    1
  6420 ;; Hardware stack levels required when called:    4
  6421 ;; This function calls:
  6422 ;;		Nothing
  6423 ;; This function is called by:
  6424 ;;		_calibrazione
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428                           	psect	text15
  6429  002544                     __ptext15:
  6430                           	opt stack 0
  6431  002544                     _BusyADC:
  6432                           	opt stack 25
  6433                           
  6434                           ;incstack = 0
  6435  002544  A2C2               	btfss	4034,1,c	;volatile
  6436  002546  D002               	goto	u3490
  6437  002548  0E01               	movlw	1
  6438  00254A  0012               	return	
  6439  00254C                     u3490:
  6440  00254C  0E00               	movlw	0
  6441  00254E  0012               	return	
  6442  002550                     __end_of_BusyADC:
  6443                           	opt stack 0
  6444                           tblptru	equ	0xFF8
  6445                           tblptrh	equ	0xFF7
  6446                           tblptrl	equ	0xFF6
  6447                           tablat	equ	0xFF5
  6448                           intcon	equ	0xFF2
  6449                           intcon2	equ	0xFF1
  6450                           postinc0	equ	0xFEE
  6451                           wreg	equ	0xFE8
  6452                           postdec1	equ	0xFE5
  6453                           fsr1l	equ	0xFE1
  6454                           indf2	equ	0xFDF
  6455                           fsr2h	equ	0xFDA
  6456                           fsr2l	equ	0xFD9
  6457                           status	equ	0xFD8
  6458                           
  6459 ;; *************** function ___lmul *****************
  6460 ;; Defined at:
  6461 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;  multiplier      4   19[BANK0 ] unsigned long 
  6464 ;;  multiplicand    4   23[BANK0 ] unsigned long 
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;  product         4   27[BANK0 ] unsigned long 
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  4   19[BANK0 ] unsigned long 
  6469 ;; Registers used:
  6470 ;;		wreg, status,2, status,0
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/0
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6476 ;;      Params:         0       8       0       0
  6477 ;;      Locals:         0       4       0       0
  6478 ;;      Temps:          0       0       0       0
  6479 ;;      Totals:         0      12       0       0
  6480 ;;Total ram usage:       12 bytes
  6481 ;; Hardware stack levels used:    1
  6482 ;; Hardware stack levels required when called:    4
  6483 ;; This function calls:
  6484 ;;		Nothing
  6485 ;; This function is called by:
  6486 ;;		_main
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490                           	psect	text16
  6491  002304                     __ptext16:
  6492                           	opt stack 0
  6493  002304                     ___lmul:
  6494                           	opt stack 26
  6495                           
  6496                           ;incstack = 0
  6497  002304  0E00               	movlw	0
  6498  002306  0100               	movlb	0	; () banked
  6499  002308  6F7B               	movwf	___lmul@product& (0+255),b
  6500  00230A  0E00               	movlw	0
  6501  00230C  6F7C               	movwf	(___lmul@product+1)& (0+255),b
  6502  00230E  0E00               	movlw	0
  6503  002310  6F7D               	movwf	(___lmul@product+2)& (0+255),b
  6504  002312  0E00               	movlw	0
  6505  002314  6F7E               	movwf	(___lmul@product+3)& (0+255),b
  6506  002316                     l3522:
  6507                           
  6508                           ; BSR set to: 0
  6509  002316  0100               	movlb	0	; () banked
  6510  002318  A173               	btfss	___lmul@multiplier& (0+255),0,b
  6511  00231A  D010               	goto	l3526
  6512                           
  6513                           ; BSR set to: 0
  6514  00231C  0100               	movlb	0	; () banked
  6515  00231E  5177               	movf	___lmul@multiplicand& (0+255),w,b
  6516  002320  0100               	movlb	0	; () banked
  6517  002322  277B               	addwf	___lmul@product& (0+255),f,b
  6518  002324  0100               	movlb	0	; () banked
  6519  002326  5178               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6520  002328  0100               	movlb	0	; () banked
  6521  00232A  237C               	addwfc	(___lmul@product+1)& (0+255),f,b
  6522  00232C  0100               	movlb	0	; () banked
  6523  00232E  5179               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6524  002330  0100               	movlb	0	; () banked
  6525  002332  237D               	addwfc	(___lmul@product+2)& (0+255),f,b
  6526  002334  0100               	movlb	0	; () banked
  6527  002336  517A               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6528  002338  0100               	movlb	0	; () banked
  6529  00233A  237E               	addwfc	(___lmul@product+3)& (0+255),f,b
  6530  00233C                     l3526:
  6531                           
  6532                           ; BSR set to: 0
  6533  00233C  0100               	movlb	0	; () banked
  6534  00233E  90D8               	bcf	status,0,c
  6535  002340  3777               	rlcf	___lmul@multiplicand& (0+255),f,b
  6536  002342  3778               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6537  002344  3779               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6538  002346  377A               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6539                           
  6540                           ; BSR set to: 0
  6541  002348  0100               	movlb	0	; () banked
  6542  00234A  90D8               	bcf	status,0,c
  6543  00234C  3376               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6544  00234E  3375               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6545  002350  3374               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6546  002352  3373               	rrcf	___lmul@multiplier& (0+255),f,b
  6547  002354  0100               	movlb	0	; () banked
  6548  002356  5173               	movf	___lmul@multiplier& (0+255),w,b
  6549  002358  0100               	movlb	0	; () banked
  6550  00235A  1174               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6551  00235C  0100               	movlb	0	; () banked
  6552  00235E  1175               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6553  002360  0100               	movlb	0	; () banked
  6554  002362  1176               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6555  002364  A4D8               	btfss	status,2,c
  6556  002366  D7D7               	goto	l3522
  6557                           
  6558                           ; BSR set to: 0
  6559  002368  C07B  F073         	movff	___lmul@product,?___lmul
  6560  00236C  C07C  F074         	movff	___lmul@product+1,?___lmul+1
  6561  002370  C07D  F075         	movff	___lmul@product+2,?___lmul+2
  6562  002374  C07E  F076         	movff	___lmul@product+3,?___lmul+3
  6563                           
  6564                           ; BSR set to: 0
  6565  002378  0012               	return		;funcret
  6566  00237A                     __end_of___lmul:
  6567                           	opt stack 0
  6568                           tblptru	equ	0xFF8
  6569                           tblptrh	equ	0xFF7
  6570                           tblptrl	equ	0xFF6
  6571                           tablat	equ	0xFF5
  6572                           intcon	equ	0xFF2
  6573                           intcon2	equ	0xFF1
  6574                           postinc0	equ	0xFEE
  6575                           wreg	equ	0xFE8
  6576                           postdec1	equ	0xFE5
  6577                           fsr1l	equ	0xFE1
  6578                           indf2	equ	0xFDF
  6579                           fsr2h	equ	0xFDA
  6580                           fsr2l	equ	0xFD9
  6581                           status	equ	0xFD8
  6582                           
  6583 ;; *************** function ___lldiv *****************
  6584 ;; Defined at:
  6585 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  dividend        4   31[BANK0 ] unsigned long 
  6588 ;;  divisor         4   35[BANK0 ] unsigned long 
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;  quotient        4   39[BANK0 ] unsigned long 
  6591 ;;  counter         1   43[BANK0 ] unsigned char 
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  4   31[BANK0 ] unsigned long 
  6594 ;; Registers used:
  6595 ;;		wreg, status,2, status,0
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6601 ;;      Params:         0       8       0       0
  6602 ;;      Locals:         0       5       0       0
  6603 ;;      Temps:          0       0       0       0
  6604 ;;      Totals:         0      13       0       0
  6605 ;;Total ram usage:       13 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; Hardware stack levels required when called:    4
  6608 ;; This function calls:
  6609 ;;		Nothing
  6610 ;; This function is called by:
  6611 ;;		_main
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text17
  6616  0020A2                     __ptext17:
  6617                           	opt stack 0
  6618  0020A2                     ___lldiv:
  6619                           	opt stack 26
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;incstack = 0
  6623  0020A2  0E00               	movlw	0
  6624  0020A4  0100               	movlb	0	; () banked
  6625  0020A6  6F87               	movwf	___lldiv@quotient& (0+255),b
  6626  0020A8  0E00               	movlw	0
  6627  0020AA  6F88               	movwf	(___lldiv@quotient+1)& (0+255),b
  6628  0020AC  0E00               	movlw	0
  6629  0020AE  6F89               	movwf	(___lldiv@quotient+2)& (0+255),b
  6630  0020B0  0E00               	movlw	0
  6631  0020B2  6F8A               	movwf	(___lldiv@quotient+3)& (0+255),b
  6632                           
  6633                           ; BSR set to: 0
  6634  0020B4  0100               	movlb	0	; () banked
  6635  0020B6  5183               	movf	___lldiv@divisor& (0+255),w,b
  6636  0020B8  0100               	movlb	0	; () banked
  6637  0020BA  1184               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6638  0020BC  0100               	movlb	0	; () banked
  6639  0020BE  1185               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6640  0020C0  0100               	movlb	0	; () banked
  6641  0020C2  1186               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6642  0020C4  B4D8               	btfsc	status,2,c
  6643  0020C6  D042               	goto	l1056
  6644                           
  6645                           ; BSR set to: 0
  6646  0020C8  0E01               	movlw	1
  6647  0020CA  0100               	movlb	0	; () banked
  6648  0020CC  6F8B               	movwf	___lldiv@counter& (0+255),b
  6649  0020CE  D008               	goto	l3538
  6650  0020D0                     l3536:
  6651                           
  6652                           ; BSR set to: 0
  6653  0020D0  0100               	movlb	0	; () banked
  6654  0020D2  90D8               	bcf	status,0,c
  6655  0020D4  3783               	rlcf	___lldiv@divisor& (0+255),f,b
  6656  0020D6  3784               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6657  0020D8  3785               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6658  0020DA  3786               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6659  0020DC  0100               	movlb	0	; () banked
  6660  0020DE  2B8B               	incf	___lldiv@counter& (0+255),f,b
  6661  0020E0                     l3538:
  6662                           
  6663                           ; BSR set to: 0
  6664  0020E0  0100               	movlb	0	; () banked
  6665  0020E2  AF86               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6666  0020E4  D7F5               	goto	l3536
  6667  0020E6                     l3540:
  6668                           
  6669                           ; BSR set to: 0
  6670  0020E6  0100               	movlb	0	; () banked
  6671  0020E8  90D8               	bcf	status,0,c
  6672  0020EA  3787               	rlcf	___lldiv@quotient& (0+255),f,b
  6673  0020EC  3788               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6674  0020EE  3789               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6675  0020F0  378A               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6676                           
  6677                           ; BSR set to: 0
  6678  0020F2  0100               	movlb	0	; () banked
  6679  0020F4  5183               	movf	___lldiv@divisor& (0+255),w,b
  6680  0020F6  0100               	movlb	0	; () banked
  6681  0020F8  5D7F               	subwf	___lldiv@dividend& (0+255),w,b
  6682  0020FA  0100               	movlb	0	; () banked
  6683  0020FC  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6684  0020FE  0100               	movlb	0	; () banked
  6685  002100  5980               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6686  002102  0100               	movlb	0	; () banked
  6687  002104  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6688  002106  0100               	movlb	0	; () banked
  6689  002108  5981               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6690  00210A  0100               	movlb	0	; () banked
  6691  00210C  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6692  00210E  0100               	movlb	0	; () banked
  6693  002110  5982               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6694  002112  A0D8               	btfss	status,0,c
  6695  002114  D012               	goto	l3548
  6696                           
  6697                           ; BSR set to: 0
  6698  002116  0100               	movlb	0	; () banked
  6699  002118  5183               	movf	___lldiv@divisor& (0+255),w,b
  6700  00211A  0100               	movlb	0	; () banked
  6701  00211C  5F7F               	subwf	___lldiv@dividend& (0+255),f,b
  6702  00211E  0100               	movlb	0	; () banked
  6703  002120  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6704  002122  0100               	movlb	0	; () banked
  6705  002124  5B80               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6706  002126  0100               	movlb	0	; () banked
  6707  002128  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6708  00212A  0100               	movlb	0	; () banked
  6709  00212C  5B81               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6710  00212E  0100               	movlb	0	; () banked
  6711  002130  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6712  002132  0100               	movlb	0	; () banked
  6713  002134  5B82               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6714                           
  6715                           ; BSR set to: 0
  6716  002136  0100               	movlb	0	; () banked
  6717  002138  8187               	bsf	___lldiv@quotient& (0+255),0,b
  6718  00213A                     l3548:
  6719                           
  6720                           ; BSR set to: 0
  6721  00213A  0100               	movlb	0	; () banked
  6722  00213C  90D8               	bcf	status,0,c
  6723  00213E  3386               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6724  002140  3385               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6725  002142  3384               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6726  002144  3383               	rrcf	___lldiv@divisor& (0+255),f,b
  6727                           
  6728                           ; BSR set to: 0
  6729  002146  0100               	movlb	0	; () banked
  6730  002148  2F8B               	decfsz	___lldiv@counter& (0+255),f,b
  6731  00214A  D7CD               	goto	l3540
  6732  00214C                     l1056:
  6733                           
  6734                           ; BSR set to: 0
  6735  00214C  C087  F07F         	movff	___lldiv@quotient,?___lldiv
  6736  002150  C088  F080         	movff	___lldiv@quotient+1,?___lldiv+1
  6737  002154  C089  F081         	movff	___lldiv@quotient+2,?___lldiv+2
  6738  002158  C08A  F082         	movff	___lldiv@quotient+3,?___lldiv+3
  6739                           
  6740                           ; BSR set to: 0
  6741  00215C  0012               	return		;funcret
  6742  00215E                     __end_of___lldiv:
  6743                           	opt stack 0
  6744                           tblptru	equ	0xFF8
  6745                           tblptrh	equ	0xFF7
  6746                           tblptrl	equ	0xFF6
  6747                           tablat	equ	0xFF5
  6748                           intcon	equ	0xFF2
  6749                           intcon2	equ	0xFF1
  6750                           postinc0	equ	0xFEE
  6751                           wreg	equ	0xFE8
  6752                           postdec1	equ	0xFE5
  6753                           fsr1l	equ	0xFE1
  6754                           indf2	equ	0xFDF
  6755                           fsr2h	equ	0xFDA
  6756                           fsr2l	equ	0xFD9
  6757                           status	equ	0xFD8
  6758                           
  6759 ;; *************** function _CANisTXwarningON *****************
  6760 ;; Defined at:
  6761 ;;		line 1119 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;		None
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;		None
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  1    wreg      unsigned char 
  6768 ;; Registers used:
  6769 ;;		wreg
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6775 ;;      Params:         0       0       0       0
  6776 ;;      Locals:         0       0       0       0
  6777 ;;      Temps:          0       0       0       0
  6778 ;;      Totals:         0       0       0       0
  6779 ;;Total ram usage:        0 bytes
  6780 ;; Hardware stack levels used:    1
  6781 ;; Hardware stack levels required when called:    4
  6782 ;; This function calls:
  6783 ;;		Nothing
  6784 ;; This function is called by:
  6785 ;;		_main
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           	psect	text18
  6790  002550                     __ptext18:
  6791                           	opt stack 0
  6792  002550                     _CANisTXwarningON:
  6793                           	opt stack 26
  6794                           
  6795                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;incstack = 0
  6799  002550  A474               	btfss	3956,2,c	;volatile
  6800  002552  D002               	goto	u3780
  6801  002554  0E01               	movlw	1
  6802  002556  0012               	return	
  6803  002558                     u3780:
  6804  002558  0E00               	movlw	0
  6805  00255A  0012               	return	
  6806  00255C                     __end_of_CANisTXwarningON:
  6807                           	opt stack 0
  6808                           tblptru	equ	0xFF8
  6809                           tblptrh	equ	0xFF7
  6810                           tblptrl	equ	0xFF6
  6811                           tablat	equ	0xFF5
  6812                           intcon	equ	0xFF2
  6813                           intcon2	equ	0xFF1
  6814                           postinc0	equ	0xFEE
  6815                           wreg	equ	0xFE8
  6816                           postdec1	equ	0xFE5
  6817                           fsr1l	equ	0xFE1
  6818                           indf2	equ	0xFDF
  6819                           fsr2h	equ	0xFDA
  6820                           fsr2l	equ	0xFD9
  6821                           status	equ	0xFD8
  6822                           
  6823 ;; *************** function _CANisRXwarningON *****************
  6824 ;; Defined at:
  6825 ;;		line 1127 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;		None
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;		None
  6830 ;; Return value:  Size  Location     Type
  6831 ;;                  1    wreg      unsigned char 
  6832 ;; Registers used:
  6833 ;;		wreg
  6834 ;; Tracked objects:
  6835 ;;		On entry : 0/0
  6836 ;;		On exit  : 0/0
  6837 ;;		Unchanged: 0/0
  6838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6839 ;;      Params:         0       0       0       0
  6840 ;;      Locals:         0       0       0       0
  6841 ;;      Temps:          0       0       0       0
  6842 ;;      Totals:         0       0       0       0
  6843 ;;Total ram usage:        0 bytes
  6844 ;; Hardware stack levels used:    1
  6845 ;; Hardware stack levels required when called:    4
  6846 ;; This function calls:
  6847 ;;		Nothing
  6848 ;; This function is called by:
  6849 ;;		_main
  6850 ;; This function uses a non-reentrant model
  6851 ;;
  6852                           
  6853                           	psect	text19
  6854  00255C                     __ptext19:
  6855                           	opt stack 0
  6856  00255C                     _CANisRXwarningON:
  6857                           	opt stack 26
  6858                           
  6859                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  6860                           
  6861                           ;incstack = 0
  6862  00255C  A274               	btfss	3956,1,c	;volatile
  6863  00255E  D002               	goto	u3790
  6864  002560  0E01               	movlw	1
  6865  002562  0012               	return	
  6866  002564                     u3790:
  6867  002564  0E00               	movlw	0
  6868  002566  0012               	return	
  6869  002568                     __end_of_CANisRXwarningON:
  6870                           	opt stack 0
  6871                           tblptru	equ	0xFF8
  6872                           tblptrh	equ	0xFF7
  6873                           tblptrl	equ	0xFF6
  6874                           tablat	equ	0xFF5
  6875                           intcon	equ	0xFF2
  6876                           intcon2	equ	0xFF1
  6877                           postinc0	equ	0xFEE
  6878                           wreg	equ	0xFE8
  6879                           postdec1	equ	0xFE5
  6880                           fsr1l	equ	0xFE1
  6881                           indf2	equ	0xFDF
  6882                           fsr2h	equ	0xFDA
  6883                           fsr2l	equ	0xFD9
  6884                           status	equ	0xFD8
  6885                           
  6886 ;; *************** function _ISR_bassa *****************
  6887 ;; Defined at:
  6888 ;;		line 74 in file "newmain.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;		None
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;		None
  6893 ;; Return value:  Size  Location     Type
  6894 ;;		None               void
  6895 ;; Registers used:
  6896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6902 ;;      Params:         0       0       0       0
  6903 ;;      Locals:         0       0       0       0
  6904 ;;      Temps:         17       0       0       0
  6905 ;;      Totals:        17       0       0       0
  6906 ;;Total ram usage:       17 bytes
  6907 ;; Hardware stack levels used:    1
  6908 ;; Hardware stack levels required when called:    3
  6909 ;; This function calls:
  6910 ;;		_CANisRxReady
  6911 ;;		_CANreceiveMessage
  6912 ;;		___wmul
  6913 ;;		i1___lwdiv
  6914 ;; This function is called by:
  6915 ;;		Interrupt level 1
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           	psect	intcodelo
  6920  000018                     __pintcodelo:
  6921                           	opt stack 0
  6922  000018                     _ISR_bassa:
  6923                           	opt stack 24
  6924                           
  6925                           ;incstack = 0
  6926  000018  804B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6927  00001A  CFD8 F032          	movff	status,??_ISR_bassa
  6928  00001E  CFE8 F033          	movff	wreg,??_ISR_bassa+1
  6929  000022  CFE0 F034          	movff	bsr,??_ISR_bassa+2
  6930  000026  CFFA F035          	movff	pclath,??_ISR_bassa+3
  6931  00002A  CFFB F036          	movff	pclatu,??_ISR_bassa+4
  6932  00002E  CFE9 F037          	movff	fsr0l,??_ISR_bassa+5
  6933  000032  CFEA F038          	movff	fsr0h,??_ISR_bassa+6
  6934  000036  CFE1 F039          	movff	fsr1l,??_ISR_bassa+7
  6935  00003A  CFE2 F03A          	movff	fsr1h,??_ISR_bassa+8
  6936  00003E  CFD9 F03B          	movff	fsr2l,??_ISR_bassa+9
  6937  000042  CFDA F03C          	movff	fsr2h,??_ISR_bassa+10
  6938  000046  CFF3 F03D          	movff	prodl,??_ISR_bassa+11
  6939  00004A  CFF4 F03E          	movff	prodh,??_ISR_bassa+12
  6940  00004E  CFF6 F03F          	movff	tblptrl,??_ISR_bassa+13
  6941  000052  CFF7 F040          	movff	tblptrh,??_ISR_bassa+14
  6942  000056  CFF8 F041          	movff	tblptru,??_ISR_bassa+15
  6943  00005A  CFF5 F042          	movff	tablat,??_ISR_bassa+16
  6944                           
  6945                           ;newmain.c: 75: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  6946  00005E  A0A4               	btfss	4004,0,c	;volatile
  6947  000060  B2A4               	btfsc	4004,1,c	;volatile
  6948  000062  D001               	goto	i1l3606
  6949  000064  D046               	goto	i1l3630
  6950  000066                     i1l3606:
  6951                           
  6952                           ;newmain.c: 76: if (CANisRxReady()) {
  6953  000066  EC7C  F012         	call	_CANisRxReady	;wreg free
  6954  00006A  0900               	iorlw	0
  6955  00006C  B4D8               	btfsc	status,2,c
  6956  00006E  D03F               	goto	i1l3626
  6957                           
  6958                           ;newmain.c: 77: CANreceiveMessage(&msg);
  6959  000070  0E16               	movlw	low _msg
  6960  000072  6E25               	movwf	CANreceiveMessage@msg,c
  6961  000074  0E00               	movlw	high _msg
  6962  000076  6E26               	movwf	CANreceiveMessage@msg+1,c
  6963  000078  ECF5  F009         	call	_CANreceiveMessage	;wreg free
  6964                           
  6965                           ;newmain.c: 78: if (msg.RTR == 1) {
  6966  00007C  0424               	decf	_msg+14,w,c
  6967  00007E  A4D8               	btfss	status,2,c
  6968  000080  D00D               	goto	i1l3614
  6969                           
  6970                           ;newmain.c: 79: id = msg.identifier;
  6971  000082  C016  F0A9         	movff	_msg,_id
  6972  000086  C017  F0AA         	movff	_msg+1,_id+1
  6973  00008A  C018  F0AB         	movff	_msg+2,_id+2
  6974  00008E  C019  F0AC         	movff	_msg+3,_id+3
  6975                           
  6976                           ;newmain.c: 80: remote_frame = msg.RTR;
  6977  000092  A024               	btfss	_msg+14,0,c
  6978  000094  D002               	goto	i1u402_20
  6979  000096  804A               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  6980  000098  D001               	goto	i1l3614
  6981  00009A                     i1u402_20:
  6982  00009A  904A               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  6983  00009C                     i1l3614:
  6984                           
  6985                           ;newmain.c: 81: }
  6986                           ;newmain.c: 82: if (msg.identifier == 0b10000000000000000000000000000) {
  6987  00009C  0E10               	movlw	16
  6988  00009E  1819               	xorwf	_msg+3,w,c
  6989  0000A0  1016               	iorwf	_msg,w,c
  6990  0000A2  1017               	iorwf	_msg+1,w,c
  6991  0000A4  1018               	iorwf	_msg+2,w,c
  6992  0000A6  B4D8               	btfsc	status,2,c
  6993                           
  6994                           ;newmain.c: 83: data_array[0] = theorySteering;
  6995  0000A8  C015  F0B7         	movff	_theorySteering,_data_array
  6996                           
  6997                           ;newmain.c: 85: }
  6998                           ;newmain.c: 86: if (msg.identifier == 0b00000000000000000000000000110) {
  6999  0000AC  0E06               	movlw	6
  7000  0000AE  1816               	xorwf	_msg,w,c
  7001  0000B0  1017               	iorwf	_msg+1,w,c
  7002  0000B2  1018               	iorwf	_msg+2,w,c
  7003  0000B4  1019               	iorwf	_msg+3,w,c
  7004  0000B6  A4D8               	btfss	status,2,c
  7005  0000B8  D01A               	goto	i1l3626
  7006                           
  7007                           ;newmain.c: 88: theorySteering = msg.data[0];
  7008  0000BA  C01A  F015         	movff	_msg+4,_theorySteering
  7009                           
  7010                           ;newmain.c: 89: currentSteering = theorySteering + calibration;
  7011  0000BE  5015               	movf	_theorySteering,w,c
  7012  0000C0  240D               	addwf	_calibration,w,c
  7013  0000C2  6E47               	movwf	_currentSteering,c
  7014                           
  7015                           ;newmain.c: 90: currentSteering = (limiteDx * currentSteering) / 180;
  7016  0000C4  C047  F025         	movff	_currentSteering,___wmul@multiplier
  7017  0000C8  6A26               	clrf	___wmul@multiplier+1,c
  7018  0000CA  C043  F027         	movff	_limiteDx,___wmul@multiplicand
  7019  0000CE  C044  F028         	movff	_limiteDx+1,___wmul@multiplicand+1
  7020  0000D2  EC4C  F012         	call	___wmul	;wreg free
  7021  0000D6  C025  F02B         	movff	?___wmul,i1___lwdiv@dividend
  7022  0000DA  C026  F02C         	movff	?___wmul+1,i1___lwdiv@dividend+1
  7023  0000DE  0E00               	movlw	0
  7024  0000E0  6E2E               	movwf	i1___lwdiv@divisor+1,c
  7025  0000E2  0EB4               	movlw	180
  7026  0000E4  6E2D               	movwf	i1___lwdiv@divisor,c
  7027  0000E6  ECBD  F011         	call	i1___lwdiv	;wreg free
  7028  0000EA  502B               	movf	?i1___lwdiv,w,c
  7029  0000EC  6E47               	movwf	_currentSteering,c
  7030  0000EE                     i1l3626:
  7031                           
  7032                           ;newmain.c: 91: }
  7033                           ;newmain.c: 92: }
  7034                           ;newmain.c: 93: PIR3bits.RXB0IF = 0;
  7035  0000EE  90A4               	bcf	4004,0,c	;volatile
  7036                           
  7037                           ;newmain.c: 94: PIR3bits.RXB1IF = 0;
  7038  0000F0  92A4               	bcf	4004,1,c	;volatile
  7039  0000F2                     i1l3630:
  7040                           
  7041                           ;newmain.c: 95: }
  7042                           ;newmain.c: 96: if (PIR2bits.TMR3IF) {
  7043  0000F2  A2A1               	btfss	4001,1,c	;volatile
  7044  0000F4  D00B               	goto	i1l639
  7045                           
  7046                           ;newmain.c: 97: timeCounter++;
  7047  0000F6  0E01               	movlw	1
  7048  0000F8  2605               	addwf	_timeCounter,f,c
  7049  0000FA  0E00               	movlw	0
  7050  0000FC  2206               	addwfc	_timeCounter+1,f,c
  7051  0000FE  2207               	addwfc	_timeCounter+2,f,c
  7052  000100  2208               	addwfc	_timeCounter+3,f,c
  7053                           
  7054                           ;newmain.c: 98: TMR3H = 0x63;
  7055  000102  0E63               	movlw	99
  7056  000104  6EB3               	movwf	4019,c	;volatile
  7057                           
  7058                           ;newmain.c: 99: TMR3L = 0xC0;
  7059  000106  0EC0               	movlw	192
  7060  000108  6EB2               	movwf	4018,c	;volatile
  7061                           
  7062                           ;newmain.c: 100: PIR2bits.TMR3IF = 0;
  7063  00010A  92A1               	bcf	4001,1,c	;volatile
  7064  00010C                     i1l639:
  7065  00010C  C042  FFF5         	movff	??_ISR_bassa+16,tablat
  7066  000110  C041  FFF8         	movff	??_ISR_bassa+15,tblptru
  7067  000114  C040  FFF7         	movff	??_ISR_bassa+14,tblptrh
  7068  000118  C03F  FFF6         	movff	??_ISR_bassa+13,tblptrl
  7069  00011C  C03E  FFF4         	movff	??_ISR_bassa+12,prodh
  7070  000120  C03D  FFF3         	movff	??_ISR_bassa+11,prodl
  7071  000124  C03C  FFDA         	movff	??_ISR_bassa+10,fsr2h
  7072  000128  C03B  FFD9         	movff	??_ISR_bassa+9,fsr2l
  7073  00012C  C03A  FFE2         	movff	??_ISR_bassa+8,fsr1h
  7074  000130  C039  FFE1         	movff	??_ISR_bassa+7,fsr1l
  7075  000134  C038  FFEA         	movff	??_ISR_bassa+6,fsr0h
  7076  000138  C037  FFE9         	movff	??_ISR_bassa+5,fsr0l
  7077  00013C  C036  FFFB         	movff	??_ISR_bassa+4,pclatu
  7078  000140  C035  FFFA         	movff	??_ISR_bassa+3,pclath
  7079  000144  C034  FFE0         	movff	??_ISR_bassa+2,bsr
  7080  000148  C033  FFE8         	movff	??_ISR_bassa+1,wreg
  7081  00014C  C032  FFD8         	movff	??_ISR_bassa,status
  7082  000150  904B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7083  000152  0010               	retfie	
  7084  000154                     __end_of_ISR_bassa:
  7085                           	opt stack 0
  7086                           pclatu	equ	0xFFB
  7087                           pclath	equ	0xFFA
  7088                           tblptru	equ	0xFF8
  7089                           tblptrh	equ	0xFF7
  7090                           tblptrl	equ	0xFF6
  7091                           tablat	equ	0xFF5
  7092                           prodh	equ	0xFF4
  7093                           prodl	equ	0xFF3
  7094                           intcon	equ	0xFF2
  7095                           intcon2	equ	0xFF1
  7096                           postinc0	equ	0xFEE
  7097                           fsr0h	equ	0xFEA
  7098                           fsr0l	equ	0xFE9
  7099                           wreg	equ	0xFE8
  7100                           postdec1	equ	0xFE5
  7101                           fsr1h	equ	0xFE2
  7102                           fsr1l	equ	0xFE1
  7103                           bsr	equ	0xFE0
  7104                           indf2	equ	0xFDF
  7105                           fsr2h	equ	0xFDA
  7106                           fsr2l	equ	0xFD9
  7107                           status	equ	0xFD8
  7108                           
  7109 ;; *************** function i1___lwdiv *****************
  7110 ;; Defined at:
  7111 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  dividend        2    6[COMRAM] unsigned int 
  7114 ;;  divisor         2    8[COMRAM] unsigned int 
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;  __lwdiv         2   10[COMRAM] unsigned int 
  7117 ;;  __lwdiv         1   12[COMRAM] unsigned char 
  7118 ;; Return value:  Size  Location     Type
  7119 ;;                  2    6[COMRAM] unsigned int 
  7120 ;; Registers used:
  7121 ;;		wreg, status,2, status,0
  7122 ;; Tracked objects:
  7123 ;;		On entry : 0/0
  7124 ;;		On exit  : 0/0
  7125 ;;		Unchanged: 0/0
  7126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7127 ;;      Params:         4       0       0       0
  7128 ;;      Locals:         3       0       0       0
  7129 ;;      Temps:          0       0       0       0
  7130 ;;      Totals:         7       0       0       0
  7131 ;;Total ram usage:        7 bytes
  7132 ;; Hardware stack levels used:    1
  7133 ;; Hardware stack levels required when called:    2
  7134 ;; This function calls:
  7135 ;;		Nothing
  7136 ;; This function is called by:
  7137 ;;		_ISR_bassa
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           	psect	text21
  7142  00237A                     __ptext21:
  7143                           	opt stack 0
  7144  00237A                     i1___lwdiv:
  7145                           	opt stack 24
  7146                           
  7147                           ;incstack = 0
  7148  00237A  0E00               	movlw	0
  7149  00237C  6E30               	movwf	i1___lwdiv@quotient+1,c
  7150  00237E  0E00               	movlw	0
  7151  002380  6E2F               	movwf	i1___lwdiv@quotient,c
  7152  002382  502D               	movf	i1___lwdiv@divisor,w,c
  7153  002384  102E               	iorwf	i1___lwdiv@divisor+1,w,c
  7154  002386  B4D8               	btfsc	status,2,c
  7155  002388  D01C               	goto	i1l1109
  7156  00238A  0E01               	movlw	1
  7157  00238C  6E31               	movwf	i1___lwdiv@counter,c
  7158  00238E  D004               	goto	i1l3562
  7159  002390                     i1l3560:
  7160  002390  90D8               	bcf	status,0,c
  7161  002392  362D               	rlcf	i1___lwdiv@divisor,f,c
  7162  002394  362E               	rlcf	i1___lwdiv@divisor+1,f,c
  7163  002396  2A31               	incf	i1___lwdiv@counter,f,c
  7164  002398                     i1l3562:
  7165  002398  AE2E               	btfss	i1___lwdiv@divisor+1,7,c
  7166  00239A  D7FA               	goto	i1l3560
  7167  00239C                     i1l3564:
  7168  00239C  90D8               	bcf	status,0,c
  7169  00239E  362F               	rlcf	i1___lwdiv@quotient,f,c
  7170  0023A0  3630               	rlcf	i1___lwdiv@quotient+1,f,c
  7171  0023A2  502D               	movf	i1___lwdiv@divisor,w,c
  7172  0023A4  5C2B               	subwf	i1___lwdiv@dividend,w,c
  7173  0023A6  502E               	movf	i1___lwdiv@divisor+1,w,c
  7174  0023A8  582C               	subwfb	i1___lwdiv@dividend+1,w,c
  7175  0023AA  A0D8               	btfss	status,0,c
  7176  0023AC  D005               	goto	i1l3572
  7177  0023AE  502D               	movf	i1___lwdiv@divisor,w,c
  7178  0023B0  5E2B               	subwf	i1___lwdiv@dividend,f,c
  7179  0023B2  502E               	movf	i1___lwdiv@divisor+1,w,c
  7180  0023B4  5A2C               	subwfb	i1___lwdiv@dividend+1,f,c
  7181  0023B6  802F               	bsf	i1___lwdiv@quotient,0,c
  7182  0023B8                     i1l3572:
  7183  0023B8  90D8               	bcf	status,0,c
  7184  0023BA  322E               	rrcf	i1___lwdiv@divisor+1,f,c
  7185  0023BC  322D               	rrcf	i1___lwdiv@divisor,f,c
  7186  0023BE  2E31               	decfsz	i1___lwdiv@counter,f,c
  7187  0023C0  D7ED               	goto	i1l3564
  7188  0023C2                     i1l1109:
  7189  0023C2  C02F  F02B         	movff	i1___lwdiv@quotient,?i1___lwdiv
  7190  0023C6  C030  F02C         	movff	i1___lwdiv@quotient+1,?i1___lwdiv+1
  7191  0023CA  0012               	return		;funcret
  7192  0023CC                     __end_ofi1___lwdiv:
  7193                           	opt stack 0
  7194                           pclatu	equ	0xFFB
  7195                           pclath	equ	0xFFA
  7196                           tblptru	equ	0xFF8
  7197                           tblptrh	equ	0xFF7
  7198                           tblptrl	equ	0xFF6
  7199                           tablat	equ	0xFF5
  7200                           prodh	equ	0xFF4
  7201                           prodl	equ	0xFF3
  7202                           intcon	equ	0xFF2
  7203                           intcon2	equ	0xFF1
  7204                           postinc0	equ	0xFEE
  7205                           fsr0h	equ	0xFEA
  7206                           fsr0l	equ	0xFE9
  7207                           wreg	equ	0xFE8
  7208                           postdec1	equ	0xFE5
  7209                           fsr1h	equ	0xFE2
  7210                           fsr1l	equ	0xFE1
  7211                           bsr	equ	0xFE0
  7212                           indf2	equ	0xFDF
  7213                           fsr2h	equ	0xFDA
  7214                           fsr2l	equ	0xFD9
  7215                           status	equ	0xFD8
  7216                           
  7217 ;; *************** function ___wmul *****************
  7218 ;; Defined at:
  7219 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  multiplier      2    0[COMRAM] unsigned int 
  7222 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;  product         2    4[COMRAM] unsigned int 
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  2    0[COMRAM] unsigned int 
  7227 ;; Registers used:
  7228 ;;		wreg, status,2, status,0, prodl, prodh
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7234 ;;      Params:         4       0       0       0
  7235 ;;      Locals:         2       0       0       0
  7236 ;;      Temps:          0       0       0       0
  7237 ;;      Totals:         6       0       0       0
  7238 ;;Total ram usage:        6 bytes
  7239 ;; Hardware stack levels used:    1
  7240 ;; Hardware stack levels required when called:    2
  7241 ;; This function calls:
  7242 ;;		Nothing
  7243 ;; This function is called by:
  7244 ;;		_ISR_bassa
  7245 ;;		_delay_ms
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249                           	psect	text22
  7250  002498                     __ptext22:
  7251                           	opt stack 0
  7252  002498                     ___wmul:
  7253                           	opt stack 24
  7254                           
  7255                           ;incstack = 0
  7256  002498  5025               	movf	___wmul@multiplier,w,c
  7257  00249A  0227               	mulwf	___wmul@multiplicand,c
  7258  00249C  CFF3 F029          	movff	prodl,___wmul@product
  7259  0024A0  CFF4 F02A          	movff	prodh,___wmul@product+1
  7260  0024A4  5025               	movf	___wmul@multiplier,w,c
  7261  0024A6  0228               	mulwf	___wmul@multiplicand+1,c
  7262  0024A8  50F3               	movf	prodl,w,c
  7263  0024AA  262A               	addwf	___wmul@product+1,f,c
  7264  0024AC  5026               	movf	___wmul@multiplier+1,w,c
  7265  0024AE  0227               	mulwf	___wmul@multiplicand,c
  7266  0024B0  50F3               	movf	prodl,w,c
  7267  0024B2  262A               	addwf	___wmul@product+1,f,c
  7268  0024B4  C029  F025         	movff	___wmul@product,?___wmul
  7269  0024B8  C02A  F026         	movff	___wmul@product+1,?___wmul+1
  7270  0024BC  0012               	return	
  7271  0024BE                     __end_of___wmul:
  7272                           	opt stack 0
  7273                           pclatu	equ	0xFFB
  7274                           pclath	equ	0xFFA
  7275                           tblptru	equ	0xFF8
  7276                           tblptrh	equ	0xFF7
  7277                           tblptrl	equ	0xFF6
  7278                           tablat	equ	0xFF5
  7279                           prodh	equ	0xFF4
  7280                           prodl	equ	0xFF3
  7281                           intcon	equ	0xFF2
  7282                           intcon2	equ	0xFF1
  7283                           postinc0	equ	0xFEE
  7284                           fsr0h	equ	0xFEA
  7285                           fsr0l	equ	0xFE9
  7286                           wreg	equ	0xFE8
  7287                           postdec1	equ	0xFE5
  7288                           fsr1h	equ	0xFE2
  7289                           fsr1l	equ	0xFE1
  7290                           bsr	equ	0xFE0
  7291                           indf2	equ	0xFDF
  7292                           fsr2h	equ	0xFDA
  7293                           fsr2l	equ	0xFD9
  7294                           status	equ	0xFD8
  7295                           
  7296 ;; *************** function _CANreceiveMessage *****************
  7297 ;; Defined at:
  7298 ;;		line 528 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;  msg             2    0[COMRAM] PTR struct .
  7301 ;;		 -> msg(15), 
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;  tamp            1   11[COMRAM] unsigned char 
  7304 ;;  error           1   10[COMRAM] unsigned char 
  7305 ;; Return value:  Size  Location     Type
  7306 ;;                  1    wreg      unsigned char 
  7307 ;; Registers used:
  7308 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7314 ;;      Params:         2       0       0       0
  7315 ;;      Locals:         2       0       0       0
  7316 ;;      Temps:          8       0       0       0
  7317 ;;      Totals:        12       0       0       0
  7318 ;;Total ram usage:       12 bytes
  7319 ;; Hardware stack levels used:    1
  7320 ;; Hardware stack levels required when called:    2
  7321 ;; This function calls:
  7322 ;;		Nothing
  7323 ;; This function is called by:
  7324 ;;		_ISR_bassa
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text23
  7329  0013EA                     __ptext23:
  7330                           	opt stack 0
  7331  0013EA                     _CANreceiveMessage:
  7332                           	opt stack 24
  7333                           
  7334                           ;inc\CANlib.h: 530: BYTE tamp;
  7335                           ;inc\CANlib.h: 531: BYTE error = 0;
  7336                           
  7337                           ;incstack = 0
  7338  0013EA  0E00               	movlw	0
  7339  0013EC  6E2F               	movwf	CANreceiveMessage@error,c
  7340                           
  7341                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7342  0013EE  BE74               	btfsc	3956,7,c	;volatile
  7343                           
  7344                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7345  0013F0  802F               	bsf	CANreceiveMessage@error,0,c
  7346                           
  7347                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7348  0013F2  BC74               	btfsc	3956,6,c	;volatile
  7349                           
  7350                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7351  0013F4  822F               	bsf	CANreceiveMessage@error,1,c
  7352                           
  7353                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7354  0013F6  010F               	movlb	15	; () banked
  7355  0013F8  AF50               	btfss	80,7,b	;volatile
  7356  0013FA  D143               	goto	i1l408
  7357                           
  7358                           ; BSR set to: 15
  7359                           ;inc\CANlib.h: 541: {
  7360                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7361  0013FC  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7362  001400  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7363  001404  6ADE               	clrf	postinc2,c
  7364  001406  6ADE               	clrf	postinc2,c
  7365  001408  6ADE               	clrf	postinc2,c
  7366  00140A  6ADD               	clrf	postdec2,c
  7367                           
  7368                           ; BSR set to: 15
  7369                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7370  00140C  EE20 F004          	lfsr	2,4
  7371  001410  5025               	movf	CANreceiveMessage@msg,w,c
  7372  001412  26D9               	addwf	fsr2l,f,c
  7373  001414  5026               	movf	CANreceiveMessage@msg+1,w,c
  7374  001416  22DA               	addwfc	fsr2h,f,c
  7375  001418  CF56 FFDF          	movff	3926,indf2	;volatile
  7376                           
  7377                           ; BSR set to: 15
  7378                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7379  00141C  EE20 F005          	lfsr	2,5
  7380  001420  5025               	movf	CANreceiveMessage@msg,w,c
  7381  001422  26D9               	addwf	fsr2l,f,c
  7382  001424  5026               	movf	CANreceiveMessage@msg+1,w,c
  7383  001426  22DA               	addwfc	fsr2h,f,c
  7384  001428  CF57 FFDF          	movff	3927,indf2	;volatile
  7385                           
  7386                           ; BSR set to: 15
  7387                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7388  00142C  EE20 F006          	lfsr	2,6
  7389  001430  5025               	movf	CANreceiveMessage@msg,w,c
  7390  001432  26D9               	addwf	fsr2l,f,c
  7391  001434  5026               	movf	CANreceiveMessage@msg+1,w,c
  7392  001436  22DA               	addwfc	fsr2h,f,c
  7393  001438  CF58 FFDF          	movff	3928,indf2	;volatile
  7394                           
  7395                           ; BSR set to: 15
  7396                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7397  00143C  EE20 F007          	lfsr	2,7
  7398  001440  5025               	movf	CANreceiveMessage@msg,w,c
  7399  001442  26D9               	addwf	fsr2l,f,c
  7400  001444  5026               	movf	CANreceiveMessage@msg+1,w,c
  7401  001446  22DA               	addwfc	fsr2h,f,c
  7402  001448  CF59 FFDF          	movff	3929,indf2	;volatile
  7403                           
  7404                           ; BSR set to: 15
  7405                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7406  00144C  EE20 F008          	lfsr	2,8
  7407  001450  5025               	movf	CANreceiveMessage@msg,w,c
  7408  001452  26D9               	addwf	fsr2l,f,c
  7409  001454  5026               	movf	CANreceiveMessage@msg+1,w,c
  7410  001456  22DA               	addwfc	fsr2h,f,c
  7411  001458  CF5A FFDF          	movff	3930,indf2	;volatile
  7412                           
  7413                           ; BSR set to: 15
  7414                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7415  00145C  EE20 F009          	lfsr	2,9
  7416  001460  5025               	movf	CANreceiveMessage@msg,w,c
  7417  001462  26D9               	addwf	fsr2l,f,c
  7418  001464  5026               	movf	CANreceiveMessage@msg+1,w,c
  7419  001466  22DA               	addwfc	fsr2h,f,c
  7420  001468  CF5B FFDF          	movff	3931,indf2	;volatile
  7421                           
  7422                           ; BSR set to: 15
  7423                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7424  00146C  EE20 F00A          	lfsr	2,10
  7425  001470  5025               	movf	CANreceiveMessage@msg,w,c
  7426  001472  26D9               	addwf	fsr2l,f,c
  7427  001474  5026               	movf	CANreceiveMessage@msg+1,w,c
  7428  001476  22DA               	addwfc	fsr2h,f,c
  7429  001478  CF5C FFDF          	movff	3932,indf2	;volatile
  7430                           
  7431                           ; BSR set to: 15
  7432                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7433  00147C  EE20 F00B          	lfsr	2,11
  7434  001480  5025               	movf	CANreceiveMessage@msg,w,c
  7435  001482  26D9               	addwf	fsr2l,f,c
  7436  001484  5026               	movf	CANreceiveMessage@msg+1,w,c
  7437  001486  22DA               	addwfc	fsr2h,f,c
  7438  001488  CF5D FFDF          	movff	3933,indf2	;volatile
  7439                           
  7440                           ; BSR set to: 15
  7441                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7442  00148C  EE20 F00E          	lfsr	2,14
  7443  001490  5025               	movf	CANreceiveMessage@msg,w,c
  7444  001492  26D9               	addwf	fsr2l,f,c
  7445  001494  5026               	movf	CANreceiveMessage@msg+1,w,c
  7446  001496  22DA               	addwfc	fsr2h,f,c
  7447  001498  010F               	movlb	15	; () banked
  7448  00149A  AD55               	btfss	85,6,b	;volatile
  7449  00149C  D002               	goto	i1u357_20
  7450  00149E  0E01               	movlw	1
  7451  0014A0  D001               	goto	i1u357_26
  7452  0014A2                     i1u357_20:
  7453  0014A2  0E00               	movlw	0
  7454  0014A4                     i1u357_26:
  7455  0014A4  6EDF               	movwf	indf2,c
  7456                           
  7457                           ; BSR set to: 15
  7458                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7459  0014A6  EE20 F00D          	lfsr	2,13
  7460  0014AA  5025               	movf	CANreceiveMessage@msg,w,c
  7461  0014AC  26D9               	addwf	fsr2l,f,c
  7462  0014AE  5026               	movf	CANreceiveMessage@msg+1,w,c
  7463  0014B0  22DA               	addwfc	fsr2h,f,c
  7464  0014B2  010F               	movlb	15	; () banked
  7465  0014B4  5155               	movf	85,w,b	;volatile
  7466  0014B6  0B0F               	andlw	15
  7467  0014B8  6EDF               	movwf	indf2,c
  7468                           
  7469                           ; BSR set to: 15
  7470                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7471  0014BA  EE20 F00C          	lfsr	2,12
  7472  0014BE  5025               	movf	CANreceiveMessage@msg,w,c
  7473  0014C0  26D9               	addwf	fsr2l,f,c
  7474  0014C2  5026               	movf	CANreceiveMessage@msg+1,w,c
  7475  0014C4  22DA               	addwfc	fsr2h,f,c
  7476  0014C6  010F               	movlb	15	; () banked
  7477  0014C8  A752               	btfss	82,3,b	;volatile
  7478  0014CA  D002               	goto	i1u358_20
  7479  0014CC  0E01               	movlw	1
  7480  0014CE  D001               	goto	i1u358_26
  7481  0014D0                     i1u358_20:
  7482  0014D0  0E00               	movlw	0
  7483  0014D2                     i1u358_26:
  7484  0014D2  6EDF               	movwf	indf2,c
  7485                           
  7486                           ; BSR set to: 15
  7487                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7488  0014D4  010F               	movlb	15	; () banked
  7489  0014D6  B752               	btfsc	82,3,b	;volatile
  7490  0014D8  D044               	goto	i1l3308
  7491                           
  7492                           ; BSR set to: 15
  7493                           ;inc\CANlib.h: 559: {
  7494                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7495  0014DA  CF51 F027          	movff	3921,??_CANreceiveMessage	;volatile
  7496  0014DE  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7497  0014E0  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7498  0014E2  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7499  0014E4  0E03               	movlw	3
  7500  0014E6                     i1u360_25:
  7501  0014E6  90D8               	bcf	status,0,c
  7502  0014E8  3627               	rlcf	??_CANreceiveMessage,f,c
  7503  0014EA  3628               	rlcf	??_CANreceiveMessage+1,f,c
  7504  0014EC  3629               	rlcf	??_CANreceiveMessage+2,f,c
  7505  0014EE  362A               	rlcf	??_CANreceiveMessage+3,f,c
  7506  0014F0  2EE8               	decfsz	wreg,f,c
  7507  0014F2  D7F9               	goto	i1u360_25
  7508  0014F4  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7509  0014F8  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7510  0014FC  C027  FFDE         	movff	??_CANreceiveMessage,postinc2
  7511  001500  C028  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7512  001504  C029  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7513  001508  C02A  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7514                           
  7515                           ; BSR set to: 15
  7516                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7517  00150C  010F               	movlb	15	; () banked
  7518  00150E  3952               	swapf	82,w,b	;volatile
  7519  001510  42E8               	rrncf	wreg,f,c
  7520  001512  0B07               	andlw	7
  7521  001514  0B07               	andlw	7
  7522  001516  6E30               	movwf	CANreceiveMessage@tamp,c
  7523                           
  7524                           ; BSR set to: 15
  7525                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7526  001518  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7527  00151C  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7528  001520  CFDE F027          	movff	postinc2,??_CANreceiveMessage
  7529  001524  CFDE F028          	movff	postinc2,??_CANreceiveMessage+1
  7530  001528  CFDE F029          	movff	postinc2,??_CANreceiveMessage+2
  7531  00152C  CFDE F02A          	movff	postinc2,??_CANreceiveMessage+3
  7532  001530  5030               	movf	CANreceiveMessage@tamp,w,c
  7533  001532  2427               	addwf	??_CANreceiveMessage,w,c
  7534  001534  6E2B               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7535  001536  0E00               	movlw	0
  7536  001538  2028               	addwfc	??_CANreceiveMessage+1,w,c
  7537  00153A  6E2C               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7538  00153C  0E00               	movlw	0
  7539  00153E  2029               	addwfc	??_CANreceiveMessage+2,w,c
  7540  001540  6E2D               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7541  001542  0E00               	movlw	0
  7542  001544  202A               	addwfc	??_CANreceiveMessage+3,w,c
  7543  001546  6E2E               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7544  001548  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7545  00154C  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7546  001550  C02B  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7547  001554  C02C  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7548  001558  C02D  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7549  00155C  C02E  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7550                           
  7551                           ;inc\CANlib.h: 563: }
  7552  001560  D08D               	goto	i1l3334
  7553  001562                     i1l3308:
  7554                           
  7555                           ; BSR set to: 15
  7556                           ;inc\CANlib.h: 564: else
  7557                           ;inc\CANlib.h: 565: {
  7558                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7559  001562  CF54 F027          	movff	3924,??_CANreceiveMessage	;volatile
  7560  001566  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7561  001568  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7562  00156A  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7563  00156C  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7564  001570  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7565  001574  C027  FFDE         	movff	??_CANreceiveMessage,postinc2
  7566  001578  C028  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7567  00157C  C029  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7568  001580  C02A  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7569                           
  7570                           ; BSR set to: 15
  7571                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7572  001584  CF53 F027          	movff	3923,??_CANreceiveMessage	;volatile
  7573  001588  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7574  00158A  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7575  00158C  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7576  00158E  C029  F02A         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7577  001592  C028  F029         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7578  001596  C027  F028         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7579  00159A  6A27               	clrf	??_CANreceiveMessage,c
  7580  00159C  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7581  0015A0  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7582  0015A4  5027               	movf	??_CANreceiveMessage,w,c
  7583  0015A6  26DE               	addwf	postinc2,f,c
  7584  0015A8  5028               	movf	??_CANreceiveMessage+1,w,c
  7585  0015AA  22DE               	addwfc	postinc2,f,c
  7586  0015AC  5029               	movf	??_CANreceiveMessage+2,w,c
  7587  0015AE  22DE               	addwfc	postinc2,f,c
  7588  0015B0  502A               	movf	??_CANreceiveMessage+3,w,c
  7589  0015B2  22DE               	addwfc	postinc2,f,c
  7590                           
  7591                           ; BSR set to: 15
  7592                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7593  0015B4  010F               	movlb	15	; () banked
  7594  0015B6  A152               	btfss	82,0,b	;volatile
  7595  0015B8  D00C               	goto	i1l3316
  7596                           
  7597                           ; BSR set to: 15
  7598                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7599  0015BA  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7600  0015BE  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7601  0015C2  0E00               	movlw	0
  7602  0015C4  12DE               	iorwf	postinc2,f,c
  7603  0015C6  0E00               	movlw	0
  7604  0015C8  12DE               	iorwf	postinc2,f,c
  7605  0015CA  0E01               	movlw	1
  7606  0015CC  12DE               	iorwf	postinc2,f,c
  7607  0015CE  0E00               	movlw	0
  7608  0015D0  12DE               	iorwf	postinc2,f,c
  7609  0015D2                     i1l3316:
  7610                           
  7611                           ; BSR set to: 15
  7612                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7613  0015D2  010F               	movlb	15	; () banked
  7614  0015D4  A352               	btfss	82,1,b	;volatile
  7615  0015D6  D00C               	goto	i1l3320
  7616                           
  7617                           ; BSR set to: 15
  7618                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7619  0015D8  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7620  0015DC  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7621  0015E0  0E00               	movlw	0
  7622  0015E2  12DE               	iorwf	postinc2,f,c
  7623  0015E4  0E00               	movlw	0
  7624  0015E6  12DE               	iorwf	postinc2,f,c
  7625  0015E8  0E02               	movlw	2
  7626  0015EA  12DE               	iorwf	postinc2,f,c
  7627  0015EC  0E00               	movlw	0
  7628  0015EE  12DE               	iorwf	postinc2,f,c
  7629  0015F0                     i1l3320:
  7630                           
  7631                           ; BSR set to: 15
  7632                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7633  0015F0  010F               	movlb	15	; () banked
  7634  0015F2  AB52               	btfss	82,5,b	;volatile
  7635  0015F4  D00C               	goto	i1l3324
  7636                           
  7637                           ; BSR set to: 15
  7638                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7639  0015F6  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7640  0015FA  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7641  0015FE  0E00               	movlw	0
  7642  001600  12DE               	iorwf	postinc2,f,c
  7643  001602  0E00               	movlw	0
  7644  001604  12DE               	iorwf	postinc2,f,c
  7645  001606  0E04               	movlw	4
  7646  001608  12DE               	iorwf	postinc2,f,c
  7647  00160A  0E00               	movlw	0
  7648  00160C  12DE               	iorwf	postinc2,f,c
  7649  00160E                     i1l3324:
  7650                           
  7651                           ; BSR set to: 15
  7652                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7653  00160E  010F               	movlb	15	; () banked
  7654  001610  AD52               	btfss	82,6,b	;volatile
  7655  001612  D00C               	goto	i1l3328
  7656                           
  7657                           ; BSR set to: 15
  7658                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  7659  001614  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7660  001618  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7661  00161C  0E00               	movlw	0
  7662  00161E  12DE               	iorwf	postinc2,f,c
  7663  001620  0E00               	movlw	0
  7664  001622  12DE               	iorwf	postinc2,f,c
  7665  001624  0E08               	movlw	8
  7666  001626  12DE               	iorwf	postinc2,f,c
  7667  001628  0E00               	movlw	0
  7668  00162A  12DE               	iorwf	postinc2,f,c
  7669  00162C                     i1l3328:
  7670                           
  7671                           ; BSR set to: 15
  7672                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7673  00162C  010F               	movlb	15	; () banked
  7674  00162E  AF52               	btfss	82,7,b	;volatile
  7675  001630  D00C               	goto	i1l3332
  7676                           
  7677                           ; BSR set to: 15
  7678                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  7679  001632  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7680  001636  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7681  00163A  0E00               	movlw	0
  7682  00163C  12DE               	iorwf	postinc2,f,c
  7683  00163E  0E00               	movlw	0
  7684  001640  12DE               	iorwf	postinc2,f,c
  7685  001642  0E10               	movlw	16
  7686  001644  12DE               	iorwf	postinc2,f,c
  7687  001646  0E00               	movlw	0
  7688  001648  12DE               	iorwf	postinc2,f,c
  7689  00164A                     i1l3332:
  7690                           
  7691                           ; BSR set to: 15
  7692                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7693  00164A  CF51 F027          	movff	3921,??_CANreceiveMessage	;volatile
  7694  00164E  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7695  001650  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7696  001652  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7697  001654  0E15               	movlw	21
  7698  001656                     i1u366_25:
  7699  001656  90D8               	bcf	status,0,c
  7700  001658  3627               	rlcf	??_CANreceiveMessage,f,c
  7701  00165A  3628               	rlcf	??_CANreceiveMessage+1,f,c
  7702  00165C  3629               	rlcf	??_CANreceiveMessage+2,f,c
  7703  00165E  362A               	rlcf	??_CANreceiveMessage+3,f,c
  7704  001660  2EE8               	decfsz	wreg,f,c
  7705  001662  D7F9               	goto	i1u366_25
  7706  001664  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7707  001668  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7708  00166C  5027               	movf	??_CANreceiveMessage,w,c
  7709  00166E  12DE               	iorwf	postinc2,f,c
  7710  001670  5028               	movf	??_CANreceiveMessage+1,w,c
  7711  001672  12DE               	iorwf	postinc2,f,c
  7712  001674  5029               	movf	??_CANreceiveMessage+2,w,c
  7713  001676  12DE               	iorwf	postinc2,f,c
  7714  001678  502A               	movf	??_CANreceiveMessage+3,w,c
  7715  00167A  12DE               	iorwf	postinc2,f,c
  7716  00167C                     i1l3334:
  7717                           
  7718                           ; BSR set to: 15
  7719                           ;inc\CANlib.h: 581: }
  7720                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7721  00167C  010F               	movlb	15	; () banked
  7722  00167E  9F50               	bcf	80,7,b	;volatile
  7723                           
  7724                           ; BSR set to: 15
  7725                           ;inc\CANlib.h: 584: return (error);
  7726                           ;	Return value of _CANreceiveMessage is never used
  7727  001680  0012               	return	
  7728  001682                     i1l408:
  7729                           
  7730                           ; BSR set to: 15
  7731                           ;inc\CANlib.h: 585: }
  7732                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7733  001682  AE60               	btfss	3936,7,c	;volatile
  7734  001684  0012               	return	
  7735                           
  7736                           ; BSR set to: 15
  7737                           ;inc\CANlib.h: 588: {
  7738                           ;inc\CANlib.h: 589: msg->identifier = 0;
  7739  001686  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7740  00168A  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7741  00168E  6ADE               	clrf	postinc2,c
  7742  001690  6ADE               	clrf	postinc2,c
  7743  001692  6ADE               	clrf	postinc2,c
  7744  001694  6ADD               	clrf	postdec2,c
  7745                           
  7746                           ; BSR set to: 15
  7747                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  7748  001696  EE20 F004          	lfsr	2,4
  7749  00169A  5025               	movf	CANreceiveMessage@msg,w,c
  7750  00169C  26D9               	addwf	fsr2l,f,c
  7751  00169E  5026               	movf	CANreceiveMessage@msg+1,w,c
  7752  0016A0  22DA               	addwfc	fsr2h,f,c
  7753  0016A2  CF66 FFDF          	movff	3942,indf2	;volatile
  7754                           
  7755                           ; BSR set to: 15
  7756                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  7757  0016A6  EE20 F005          	lfsr	2,5
  7758  0016AA  5025               	movf	CANreceiveMessage@msg,w,c
  7759  0016AC  26D9               	addwf	fsr2l,f,c
  7760  0016AE  5026               	movf	CANreceiveMessage@msg+1,w,c
  7761  0016B0  22DA               	addwfc	fsr2h,f,c
  7762  0016B2  CF67 FFDF          	movff	3943,indf2	;volatile
  7763                           
  7764                           ; BSR set to: 15
  7765                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  7766  0016B6  EE20 F006          	lfsr	2,6
  7767  0016BA  5025               	movf	CANreceiveMessage@msg,w,c
  7768  0016BC  26D9               	addwf	fsr2l,f,c
  7769  0016BE  5026               	movf	CANreceiveMessage@msg+1,w,c
  7770  0016C0  22DA               	addwfc	fsr2h,f,c
  7771  0016C2  CF68 FFDF          	movff	3944,indf2	;volatile
  7772                           
  7773                           ; BSR set to: 15
  7774                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  7775  0016C6  EE20 F007          	lfsr	2,7
  7776  0016CA  5025               	movf	CANreceiveMessage@msg,w,c
  7777  0016CC  26D9               	addwf	fsr2l,f,c
  7778  0016CE  5026               	movf	CANreceiveMessage@msg+1,w,c
  7779  0016D0  22DA               	addwfc	fsr2h,f,c
  7780  0016D2  CF69 FFDF          	movff	3945,indf2	;volatile
  7781                           
  7782                           ; BSR set to: 15
  7783                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  7784  0016D6  EE20 F008          	lfsr	2,8
  7785  0016DA  5025               	movf	CANreceiveMessage@msg,w,c
  7786  0016DC  26D9               	addwf	fsr2l,f,c
  7787  0016DE  5026               	movf	CANreceiveMessage@msg+1,w,c
  7788  0016E0  22DA               	addwfc	fsr2h,f,c
  7789  0016E2  CF6A FFDF          	movff	3946,indf2	;volatile
  7790                           
  7791                           ; BSR set to: 15
  7792                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  7793  0016E6  EE20 F009          	lfsr	2,9
  7794  0016EA  5025               	movf	CANreceiveMessage@msg,w,c
  7795  0016EC  26D9               	addwf	fsr2l,f,c
  7796  0016EE  5026               	movf	CANreceiveMessage@msg+1,w,c
  7797  0016F0  22DA               	addwfc	fsr2h,f,c
  7798  0016F2  CF6B FFDF          	movff	3947,indf2	;volatile
  7799                           
  7800                           ; BSR set to: 15
  7801                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  7802  0016F6  EE20 F00A          	lfsr	2,10
  7803  0016FA  5025               	movf	CANreceiveMessage@msg,w,c
  7804  0016FC  26D9               	addwf	fsr2l,f,c
  7805  0016FE  5026               	movf	CANreceiveMessage@msg+1,w,c
  7806  001700  22DA               	addwfc	fsr2h,f,c
  7807  001702  CF6C FFDF          	movff	3948,indf2	;volatile
  7808                           
  7809                           ; BSR set to: 15
  7810                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  7811  001706  EE20 F00B          	lfsr	2,11
  7812  00170A  5025               	movf	CANreceiveMessage@msg,w,c
  7813  00170C  26D9               	addwf	fsr2l,f,c
  7814  00170E  5026               	movf	CANreceiveMessage@msg+1,w,c
  7815  001710  22DA               	addwfc	fsr2h,f,c
  7816  001712  CF6D FFDF          	movff	3949,indf2	;volatile
  7817                           
  7818                           ; BSR set to: 15
  7819                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7820  001716  EE20 F00E          	lfsr	2,14
  7821  00171A  5025               	movf	CANreceiveMessage@msg,w,c
  7822  00171C  26D9               	addwf	fsr2l,f,c
  7823  00171E  5026               	movf	CANreceiveMessage@msg+1,w,c
  7824  001720  22DA               	addwfc	fsr2h,f,c
  7825  001722  AC65               	btfss	3941,6,c	;volatile
  7826  001724  D002               	goto	i1u368_20
  7827  001726  0E01               	movlw	1
  7828  001728  D001               	goto	i1u368_26
  7829  00172A                     i1u368_20:
  7830  00172A  0E00               	movlw	0
  7831  00172C                     i1u368_26:
  7832  00172C  6EDF               	movwf	indf2,c
  7833                           
  7834                           ; BSR set to: 15
  7835                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7836  00172E  EE20 F00D          	lfsr	2,13
  7837  001732  5025               	movf	CANreceiveMessage@msg,w,c
  7838  001734  26D9               	addwf	fsr2l,f,c
  7839  001736  5026               	movf	CANreceiveMessage@msg+1,w,c
  7840  001738  22DA               	addwfc	fsr2h,f,c
  7841  00173A  5065               	movf	3941,w,c	;volatile
  7842  00173C  0B0F               	andlw	15
  7843  00173E  6EDF               	movwf	indf2,c
  7844                           
  7845                           ; BSR set to: 15
  7846                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  7847  001740  EE20 F00C          	lfsr	2,12
  7848  001744  5025               	movf	CANreceiveMessage@msg,w,c
  7849  001746  26D9               	addwf	fsr2l,f,c
  7850  001748  5026               	movf	CANreceiveMessage@msg+1,w,c
  7851  00174A  22DA               	addwfc	fsr2h,f,c
  7852  00174C  A662               	btfss	3938,3,c	;volatile
  7853  00174E  D002               	goto	i1u369_20
  7854  001750  0E01               	movlw	1
  7855  001752  D001               	goto	i1u369_26
  7856  001754                     i1u369_20:
  7857  001754  0E00               	movlw	0
  7858  001756                     i1u369_26:
  7859  001756  6EDF               	movwf	indf2,c
  7860                           
  7861                           ; BSR set to: 15
  7862                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  7863  001758  B662               	btfsc	3938,3,c	;volatile
  7864  00175A  D043               	goto	i1l3370
  7865                           
  7866                           ; BSR set to: 15
  7867                           ;inc\CANlib.h: 606: {
  7868                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7869  00175C  CF61 F027          	movff	3937,??_CANreceiveMessage	;volatile
  7870  001760  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7871  001762  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7872  001764  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7873  001766  0E03               	movlw	3
  7874  001768                     i1u371_25:
  7875  001768  90D8               	bcf	status,0,c
  7876  00176A  3627               	rlcf	??_CANreceiveMessage,f,c
  7877  00176C  3628               	rlcf	??_CANreceiveMessage+1,f,c
  7878  00176E  3629               	rlcf	??_CANreceiveMessage+2,f,c
  7879  001770  362A               	rlcf	??_CANreceiveMessage+3,f,c
  7880  001772  2EE8               	decfsz	wreg,f,c
  7881  001774  D7F9               	goto	i1u371_25
  7882  001776  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7883  00177A  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7884  00177E  C027  FFDE         	movff	??_CANreceiveMessage,postinc2
  7885  001782  C028  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7886  001786  C029  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7887  00178A  C02A  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7888                           
  7889                           ; BSR set to: 15
  7890                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7891  00178E  3862               	swapf	3938,w,c	;volatile
  7892  001790  42E8               	rrncf	wreg,f,c
  7893  001792  0B07               	andlw	7
  7894  001794  0B07               	andlw	7
  7895  001796  6E30               	movwf	CANreceiveMessage@tamp,c
  7896                           
  7897                           ; BSR set to: 15
  7898                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  7899  001798  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7900  00179C  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7901  0017A0  CFDE F027          	movff	postinc2,??_CANreceiveMessage
  7902  0017A4  CFDE F028          	movff	postinc2,??_CANreceiveMessage+1
  7903  0017A8  CFDE F029          	movff	postinc2,??_CANreceiveMessage+2
  7904  0017AC  CFDE F02A          	movff	postinc2,??_CANreceiveMessage+3
  7905  0017B0  5030               	movf	CANreceiveMessage@tamp,w,c
  7906  0017B2  2427               	addwf	??_CANreceiveMessage,w,c
  7907  0017B4  6E2B               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7908  0017B6  0E00               	movlw	0
  7909  0017B8  2028               	addwfc	??_CANreceiveMessage+1,w,c
  7910  0017BA  6E2C               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7911  0017BC  0E00               	movlw	0
  7912  0017BE  2029               	addwfc	??_CANreceiveMessage+2,w,c
  7913  0017C0  6E2D               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7914  0017C2  0E00               	movlw	0
  7915  0017C4  202A               	addwfc	??_CANreceiveMessage+3,w,c
  7916  0017C6  6E2E               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7917  0017C8  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7918  0017CC  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7919  0017D0  C02B  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7920  0017D4  C02C  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7921  0017D8  C02D  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7922  0017DC  C02E  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7923                           
  7924                           ;inc\CANlib.h: 610: }
  7925  0017E0  D088               	goto	i1l3396
  7926  0017E2                     i1l3370:
  7927                           
  7928                           ; BSR set to: 15
  7929                           ;inc\CANlib.h: 611: else
  7930                           ;inc\CANlib.h: 612: {
  7931                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  7932  0017E2  CF64 F027          	movff	3940,??_CANreceiveMessage	;volatile
  7933  0017E6  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7934  0017E8  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7935  0017EA  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7936  0017EC  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7937  0017F0  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7938  0017F4  C027  FFDE         	movff	??_CANreceiveMessage,postinc2
  7939  0017F8  C028  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7940  0017FC  C029  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7941  001800  C02A  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7942                           
  7943                           ; BSR set to: 15
  7944                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7945  001804  CF63 F027          	movff	3939,??_CANreceiveMessage	;volatile
  7946  001808  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7947  00180A  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7948  00180C  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7949  00180E  C029  F02A         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7950  001812  C028  F029         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7951  001816  C027  F028         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7952  00181A  6A27               	clrf	??_CANreceiveMessage,c
  7953  00181C  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7954  001820  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7955  001824  5027               	movf	??_CANreceiveMessage,w,c
  7956  001826  26DE               	addwf	postinc2,f,c
  7957  001828  5028               	movf	??_CANreceiveMessage+1,w,c
  7958  00182A  22DE               	addwfc	postinc2,f,c
  7959  00182C  5029               	movf	??_CANreceiveMessage+2,w,c
  7960  00182E  22DE               	addwfc	postinc2,f,c
  7961  001830  502A               	movf	??_CANreceiveMessage+3,w,c
  7962  001832  22DE               	addwfc	postinc2,f,c
  7963                           
  7964                           ; BSR set to: 15
  7965                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  7966  001834  A062               	btfss	3938,0,c	;volatile
  7967  001836  D00C               	goto	i1l3378
  7968                           
  7969                           ; BSR set to: 15
  7970                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  7971  001838  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7972  00183C  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7973  001840  0E00               	movlw	0
  7974  001842  12DE               	iorwf	postinc2,f,c
  7975  001844  0E00               	movlw	0
  7976  001846  12DE               	iorwf	postinc2,f,c
  7977  001848  0E01               	movlw	1
  7978  00184A  12DE               	iorwf	postinc2,f,c
  7979  00184C  0E00               	movlw	0
  7980  00184E  12DE               	iorwf	postinc2,f,c
  7981  001850                     i1l3378:
  7982                           
  7983                           ; BSR set to: 15
  7984                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  7985  001850  A262               	btfss	3938,1,c	;volatile
  7986  001852  D00C               	goto	i1l3382
  7987                           
  7988                           ; BSR set to: 15
  7989                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  7990  001854  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7991  001858  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7992  00185C  0E00               	movlw	0
  7993  00185E  12DE               	iorwf	postinc2,f,c
  7994  001860  0E00               	movlw	0
  7995  001862  12DE               	iorwf	postinc2,f,c
  7996  001864  0E02               	movlw	2
  7997  001866  12DE               	iorwf	postinc2,f,c
  7998  001868  0E00               	movlw	0
  7999  00186A  12DE               	iorwf	postinc2,f,c
  8000  00186C                     i1l3382:
  8001                           
  8002                           ; BSR set to: 15
  8003                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8004  00186C  AA62               	btfss	3938,5,c	;volatile
  8005  00186E  D00C               	goto	i1l3386
  8006                           
  8007                           ; BSR set to: 15
  8008                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8009  001870  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8010  001874  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8011  001878  0E00               	movlw	0
  8012  00187A  12DE               	iorwf	postinc2,f,c
  8013  00187C  0E00               	movlw	0
  8014  00187E  12DE               	iorwf	postinc2,f,c
  8015  001880  0E04               	movlw	4
  8016  001882  12DE               	iorwf	postinc2,f,c
  8017  001884  0E00               	movlw	0
  8018  001886  12DE               	iorwf	postinc2,f,c
  8019  001888                     i1l3386:
  8020                           
  8021                           ; BSR set to: 15
  8022                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8023  001888  AC62               	btfss	3938,6,c	;volatile
  8024  00188A  D00C               	goto	i1l3390
  8025                           
  8026                           ; BSR set to: 15
  8027                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8028  00188C  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8029  001890  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8030  001894  0E00               	movlw	0
  8031  001896  12DE               	iorwf	postinc2,f,c
  8032  001898  0E00               	movlw	0
  8033  00189A  12DE               	iorwf	postinc2,f,c
  8034  00189C  0E08               	movlw	8
  8035  00189E  12DE               	iorwf	postinc2,f,c
  8036  0018A0  0E00               	movlw	0
  8037  0018A2  12DE               	iorwf	postinc2,f,c
  8038  0018A4                     i1l3390:
  8039                           
  8040                           ; BSR set to: 15
  8041                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8042  0018A4  AE62               	btfss	3938,7,c	;volatile
  8043  0018A6  D00C               	goto	i1l3394
  8044                           
  8045                           ; BSR set to: 15
  8046                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8047  0018A8  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8048  0018AC  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8049  0018B0  0E00               	movlw	0
  8050  0018B2  12DE               	iorwf	postinc2,f,c
  8051  0018B4  0E00               	movlw	0
  8052  0018B6  12DE               	iorwf	postinc2,f,c
  8053  0018B8  0E10               	movlw	16
  8054  0018BA  12DE               	iorwf	postinc2,f,c
  8055  0018BC  0E00               	movlw	0
  8056  0018BE  12DE               	iorwf	postinc2,f,c
  8057  0018C0                     i1l3394:
  8058                           
  8059                           ; BSR set to: 15
  8060                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8061  0018C0  CF61 F027          	movff	3937,??_CANreceiveMessage	;volatile
  8062  0018C4  6A28               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8063  0018C6  6A29               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8064  0018C8  6A2A               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8065  0018CA  0E15               	movlw	21
  8066  0018CC                     i1u377_25:
  8067  0018CC  90D8               	bcf	status,0,c
  8068  0018CE  3627               	rlcf	??_CANreceiveMessage,f,c
  8069  0018D0  3628               	rlcf	??_CANreceiveMessage+1,f,c
  8070  0018D2  3629               	rlcf	??_CANreceiveMessage+2,f,c
  8071  0018D4  362A               	rlcf	??_CANreceiveMessage+3,f,c
  8072  0018D6  2EE8               	decfsz	wreg,f,c
  8073  0018D8  D7F9               	goto	i1u377_25
  8074  0018DA  C025  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8075  0018DE  C026  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8076  0018E2  5027               	movf	??_CANreceiveMessage,w,c
  8077  0018E4  12DE               	iorwf	postinc2,f,c
  8078  0018E6  5028               	movf	??_CANreceiveMessage+1,w,c
  8079  0018E8  12DE               	iorwf	postinc2,f,c
  8080  0018EA  5029               	movf	??_CANreceiveMessage+2,w,c
  8081  0018EC  12DE               	iorwf	postinc2,f,c
  8082  0018EE  502A               	movf	??_CANreceiveMessage+3,w,c
  8083  0018F0  12DE               	iorwf	postinc2,f,c
  8084  0018F2                     i1l3396:
  8085                           
  8086                           ; BSR set to: 15
  8087                           ;inc\CANlib.h: 629: }
  8088                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8089  0018F2  9E60               	bcf	3936,7,c	;volatile
  8090                           
  8091                           ; BSR set to: 15
  8092                           ;inc\CANlib.h: 632: return (error);
  8093                           ;	Return value of _CANreceiveMessage is never used
  8094  0018F4  0012               	return	
  8095  0018F6                     __end_of_CANreceiveMessage:
  8096                           	opt stack 0
  8097                           pclatu	equ	0xFFB
  8098                           pclath	equ	0xFFA
  8099                           tblptru	equ	0xFF8
  8100                           tblptrh	equ	0xFF7
  8101                           tblptrl	equ	0xFF6
  8102                           tablat	equ	0xFF5
  8103                           prodh	equ	0xFF4
  8104                           prodl	equ	0xFF3
  8105                           intcon	equ	0xFF2
  8106                           intcon2	equ	0xFF1
  8107                           postinc0	equ	0xFEE
  8108                           fsr0h	equ	0xFEA
  8109                           fsr0l	equ	0xFE9
  8110                           wreg	equ	0xFE8
  8111                           postdec1	equ	0xFE5
  8112                           fsr1h	equ	0xFE2
  8113                           fsr1l	equ	0xFE1
  8114                           bsr	equ	0xFE0
  8115                           indf2	equ	0xFDF
  8116                           postinc2	equ	0xFDE
  8117                           postdec2	equ	0xFDD
  8118                           fsr2h	equ	0xFDA
  8119                           fsr2l	equ	0xFD9
  8120                           status	equ	0xFD8
  8121                           
  8122 ;; *************** function _CANisRxReady *****************
  8123 ;; Defined at:
  8124 ;;		line 1163 in file "F:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8125 ;; Parameters:    Size  Location     Type
  8126 ;;		None
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;		None
  8129 ;; Return value:  Size  Location     Type
  8130 ;;                  1    wreg      unsigned char 
  8131 ;; Registers used:
  8132 ;;		wreg, status,2
  8133 ;; Tracked objects:
  8134 ;;		On entry : 0/0
  8135 ;;		On exit  : 0/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8138 ;;      Params:         0       0       0       0
  8139 ;;      Locals:         1       0       0       0
  8140 ;;      Temps:          0       0       0       0
  8141 ;;      Totals:         1       0       0       0
  8142 ;;Total ram usage:        1 bytes
  8143 ;; Hardware stack levels used:    1
  8144 ;; Hardware stack levels required when called:    2
  8145 ;; This function calls:
  8146 ;;		Nothing
  8147 ;; This function is called by:
  8148 ;;		_ISR_bassa
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           
  8152                           	psect	text24
  8153  0024F8                     __ptext24:
  8154                           	opt stack 0
  8155  0024F8                     _CANisRxReady:
  8156                           	opt stack 24
  8157                           
  8158                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8159                           
  8160                           ; BSR set to: 15
  8161                           ;incstack = 0
  8162  0024F8  0E01               	movlw	1
  8163  0024FA  6E25               	movwf	_CANisRxReady$2912,c
  8164  0024FC  BE60               	btfsc	3936,7,c	;volatile
  8165  0024FE  D005               	goto	i1l559
  8166  002500  010F               	movlb	15	; () banked
  8167  002502  BF50               	btfsc	80,7,b	;volatile
  8168  002504  D002               	goto	i1l559
  8169                           
  8170                           ; BSR set to: 15
  8171  002506  0E00               	movlw	0
  8172  002508  6E25               	movwf	_CANisRxReady$2912,c
  8173  00250A                     i1l559:
  8174  00250A  5025               	movf	_CANisRxReady$2912,w,c
  8175  00250C  0012               	return	
  8176  00250E                     __end_of_CANisRxReady:
  8177                           	opt stack 0
  8178                           pclatu	equ	0xFFB
  8179                           pclath	equ	0xFFA
  8180                           tblptru	equ	0xFF8
  8181                           tblptrh	equ	0xFF7
  8182                           tblptrl	equ	0xFF6
  8183                           tablat	equ	0xFF5
  8184                           prodh	equ	0xFF4
  8185                           prodl	equ	0xFF3
  8186                           intcon	equ	0xFF2
  8187                           intcon2	equ	0xFF1
  8188                           postinc0	equ	0xFEE
  8189                           fsr0h	equ	0xFEA
  8190                           fsr0l	equ	0xFE9
  8191                           wreg	equ	0xFE8
  8192                           postdec1	equ	0xFE5
  8193                           fsr1h	equ	0xFE2
  8194                           fsr1l	equ	0xFE1
  8195                           bsr	equ	0xFE0
  8196                           indf2	equ	0xFDF
  8197                           postinc2	equ	0xFDE
  8198                           postdec2	equ	0xFDD
  8199                           fsr2h	equ	0xFDA
  8200                           fsr2l	equ	0xFD9
  8201                           status	equ	0xFD8
  8202                           
  8203 ;; *************** function _ISR_alta *****************
  8204 ;; Defined at:
  8205 ;;		line 56 in file "newmain.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;		None
  8208 ;; Auto vars:     Size  Location     Type
  8209 ;;		None
  8210 ;; Return value:  Size  Location     Type
  8211 ;;		None               void
  8212 ;; Registers used:
  8213 ;;		wreg, status,2, status,0, cstack
  8214 ;; Tracked objects:
  8215 ;;		On entry : 0/0
  8216 ;;		On exit  : 0/0
  8217 ;;		Unchanged: 0/0
  8218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8219 ;;      Params:         0       0       0       0
  8220 ;;      Locals:         0       0       0       0
  8221 ;;      Temps:          0      15       0       0
  8222 ;;      Totals:         0      15       0       0
  8223 ;;Total ram usage:       15 bytes
  8224 ;; Hardware stack levels used:    1
  8225 ;; Hardware stack levels required when called:    1
  8226 ;; This function calls:
  8227 ;;		i2_WriteTimer0
  8228 ;; This function is called by:
  8229 ;;		Interrupt level 2
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           	psect	intcode
  8234  000008                     __pintcode:
  8235                           	opt stack 0
  8236  000008                     _ISR_alta:
  8237                           	opt stack 24
  8238                           
  8239                           ;incstack = 0
  8240  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8241  00000A  CFFA F065          	movff	pclath,??_ISR_alta+1
  8242  00000E  CFFB F066          	movff	pclatu,??_ISR_alta+2
  8243  000012  EDAF  F010         	call	int_func,f	;refresh shadow registers
  8244                           pclatu	equ	0xFFB
  8245                           pclath	equ	0xFFA
  8246                           tblptru	equ	0xFF8
  8247                           tblptrh	equ	0xFF7
  8248                           tblptrl	equ	0xFF6
  8249                           tablat	equ	0xFF5
  8250                           prodh	equ	0xFF4
  8251                           prodl	equ	0xFF3
  8252                           intcon	equ	0xFF2
  8253                           intcon2	equ	0xFF1
  8254                           postinc0	equ	0xFEE
  8255                           fsr0h	equ	0xFEA
  8256                           fsr0l	equ	0xFE9
  8257                           wreg	equ	0xFE8
  8258                           postdec1	equ	0xFE5
  8259                           fsr1h	equ	0xFE2
  8260                           fsr1l	equ	0xFE1
  8261                           bsr	equ	0xFE0
  8262                           indf2	equ	0xFDF
  8263                           postinc2	equ	0xFDE
  8264                           postdec2	equ	0xFDD
  8265                           fsr2h	equ	0xFDA
  8266                           fsr2l	equ	0xFD9
  8267                           status	equ	0xFD8
  8268                           
  8269                           	psect	intcode_body
  8270  00215E                     __pintcode_body:
  8271                           	opt stack 24
  8272  00215E                     int_func:
  8273                           	opt stack 24
  8274  00215E  0006               	pop		; remove dummy address from shadow register refresh
  8275  002160  CFE9 F067          	movff	fsr0l,??_ISR_alta+3
  8276  002164  CFEA F068          	movff	fsr0h,??_ISR_alta+4
  8277  002168  CFE1 F069          	movff	fsr1l,??_ISR_alta+5
  8278  00216C  CFE2 F06A          	movff	fsr1h,??_ISR_alta+6
  8279  002170  CFD9 F06B          	movff	fsr2l,??_ISR_alta+7
  8280  002174  CFDA F06C          	movff	fsr2h,??_ISR_alta+8
  8281  002178  CFF3 F06D          	movff	prodl,??_ISR_alta+9
  8282  00217C  CFF4 F06E          	movff	prodh,??_ISR_alta+10
  8283  002180  CFF6 F06F          	movff	tblptrl,??_ISR_alta+11
  8284  002184  CFF7 F070          	movff	tblptrh,??_ISR_alta+12
  8285  002188  CFF8 F071          	movff	tblptru,??_ISR_alta+13
  8286  00218C  CFF5 F072          	movff	tablat,??_ISR_alta+14
  8287                           
  8288                           ;newmain.c: 57: PORTCbits.RC0 = ~PORTCbits.RC0;
  8289  002190  A082               	btfss	3970,0,c	;volatile
  8290  002192  D002               	goto	i2u411_40
  8291  002194  0E01               	movlw	1
  8292  002196  D001               	goto	i2u411_46
  8293  002198                     i2u411_40:
  8294  002198  0E00               	movlw	0
  8295  00219A                     i2u411_46:
  8296  00219A  0AFF               	xorlw	255
  8297  00219C  0100               	movlb	0	; () banked
  8298  00219E  6F64               	movwf	??_ISR_alta& (0+255),b
  8299  0021A0  5082               	movf	3970,w,c	;volatile
  8300  0021A2  0100               	movlb	0	; () banked
  8301  0021A4  1964               	xorwf	??_ISR_alta& (0+255),w,b
  8302  0021A6  0BFE               	andlw	-2
  8303  0021A8  1964               	xorwf	??_ISR_alta& (0+255),w,b
  8304  0021AA  6E82               	movwf	3970,c	;volatile
  8305                           
  8306                           ; BSR set to: 0
  8307                           ;newmain.c: 58: T0CONbits.TMR0ON = 0;
  8308  0021AC  9ED5               	bcf	4053,7,c	;volatile
  8309                           
  8310                           ; BSR set to: 0
  8311                           ;newmain.c: 59: if (PORTCbits.RC0 == 1) {
  8312  0021AE  A082               	btfss	3970,0,c	;volatile
  8313  0021B0  D007               	goto	i2l3692
  8314                           
  8315                           ; BSR set to: 0
  8316                           ;newmain.c: 60: WriteTimer0(Ton);
  8317  0021B2  C00B  F060         	movff	_Ton,i2WriteTimer0@timer0
  8318  0021B6  C00C  F061         	movff	_Ton+1,i2WriteTimer0@timer0+1
  8319  0021BA  EC99  F012         	call	i2_WriteTimer0	;wreg free
  8320                           
  8321                           ;newmain.c: 61: T0CONbits.TMR0ON = 1;
  8322  0021BE  8ED5               	bsf	4053,7,c	;volatile
  8323  0021C0                     i2l3692:
  8324                           
  8325                           ;newmain.c: 62: }
  8326                           ;newmain.c: 63: if (PORTCbits.RC0 == 0) {
  8327  0021C0  B082               	btfsc	3970,0,c	;volatile
  8328  0021C2  D007               	goto	i2l3698
  8329                           
  8330                           ;newmain.c: 64: WriteTimer0(Toff);
  8331  0021C4  C009  F060         	movff	_Toff,i2WriteTimer0@timer0
  8332  0021C8  C00A  F061         	movff	_Toff+1,i2WriteTimer0@timer0+1
  8333  0021CC  EC99  F012         	call	i2_WriteTimer0	;wreg free
  8334                           
  8335                           ;newmain.c: 65: T0CONbits.TMR0ON = 1;
  8336  0021D0  8ED5               	bsf	4053,7,c	;volatile
  8337  0021D2                     i2l3698:
  8338                           
  8339                           ;newmain.c: 66: }
  8340                           ;newmain.c: 68: INTCONbits.TMR0IF = 0;
  8341  0021D2  94F2               	bcf	intcon,2,c	;volatile
  8342  0021D4  C072  FFF5         	movff	??_ISR_alta+14,tablat
  8343  0021D8  C071  FFF8         	movff	??_ISR_alta+13,tblptru
  8344  0021DC  C070  FFF7         	movff	??_ISR_alta+12,tblptrh
  8345  0021E0  C06F  FFF6         	movff	??_ISR_alta+11,tblptrl
  8346  0021E4  C06E  FFF4         	movff	??_ISR_alta+10,prodh
  8347  0021E8  C06D  FFF3         	movff	??_ISR_alta+9,prodl
  8348  0021EC  C06C  FFDA         	movff	??_ISR_alta+8,fsr2h
  8349  0021F0  C06B  FFD9         	movff	??_ISR_alta+7,fsr2l
  8350  0021F4  C06A  FFE2         	movff	??_ISR_alta+6,fsr1h
  8351  0021F8  C069  FFE1         	movff	??_ISR_alta+5,fsr1l
  8352  0021FC  C068  FFEA         	movff	??_ISR_alta+4,fsr0h
  8353  002200  C067  FFE9         	movff	??_ISR_alta+3,fsr0l
  8354  002204  C066  FFFB         	movff	??_ISR_alta+2,pclatu
  8355  002208  C065  FFFA         	movff	??_ISR_alta+1,pclath
  8356  00220C  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8357  00220E  0011               	retfie		f
  8358  002210                     __end_of_ISR_alta:
  8359                           	opt stack 0
  8360                           pclatu	equ	0xFFB
  8361                           pclath	equ	0xFFA
  8362                           tblptru	equ	0xFF8
  8363                           tblptrh	equ	0xFF7
  8364                           tblptrl	equ	0xFF6
  8365                           tablat	equ	0xFF5
  8366                           prodh	equ	0xFF4
  8367                           prodl	equ	0xFF3
  8368                           intcon	equ	0xFF2
  8369                           intcon2	equ	0xFF1
  8370                           postinc0	equ	0xFEE
  8371                           fsr0h	equ	0xFEA
  8372                           fsr0l	equ	0xFE9
  8373                           wreg	equ	0xFE8
  8374                           postdec1	equ	0xFE5
  8375                           fsr1h	equ	0xFE2
  8376                           fsr1l	equ	0xFE1
  8377                           bsr	equ	0xFE0
  8378                           indf2	equ	0xFDF
  8379                           postinc2	equ	0xFDE
  8380                           postdec2	equ	0xFDD
  8381                           fsr2h	equ	0xFDA
  8382                           fsr2l	equ	0xFD9
  8383                           status	equ	0xFD8
  8384                           
  8385 ;; *************** function i2_WriteTimer0 *****************
  8386 ;; Defined at:
  8387 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;  timer0          2    0[BANK0 ] unsigned int 
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;  WriteTimer0     2    2[BANK0 ] struct Timers
  8392 ;; Return value:  Size  Location     Type
  8393 ;;		None               void
  8394 ;; Registers used:
  8395 ;;		None
  8396 ;; Tracked objects:
  8397 ;;		On entry : 0/0
  8398 ;;		On exit  : 0/0
  8399 ;;		Unchanged: 0/0
  8400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8401 ;;      Params:         0       2       0       0
  8402 ;;      Locals:         0       2       0       0
  8403 ;;      Temps:          0       0       0       0
  8404 ;;      Totals:         0       4       0       0
  8405 ;;Total ram usage:        4 bytes
  8406 ;; Hardware stack levels used:    1
  8407 ;; This function calls:
  8408 ;;		Nothing
  8409 ;; This function is called by:
  8410 ;;		_ISR_alta
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414                           	psect	text26
  8415  002532                     __ptext26:
  8416                           	opt stack 0
  8417  002532                     i2_WriteTimer0:
  8418                           	opt stack 24
  8419                           
  8420                           ;incstack = 0
  8421  002532  C060  F062         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  8422  002536  C061  F063         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  8423  00253A  C063  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  8424  00253E  C062  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  8425  002542  0012               	return		;funcret
  8426  002544                     __end_ofi2_WriteTimer0:
  8427                           	opt stack 0
  8428  0000                     pclatu	equ	0xFFB
  8429                           pclath	equ	0xFFA
  8430                           tblptru	equ	0xFF8
  8431                           tblptrh	equ	0xFF7
  8432                           tblptrl	equ	0xFF6
  8433                           tablat	equ	0xFF5
  8434                           prodh	equ	0xFF4
  8435                           prodl	equ	0xFF3
  8436                           intcon	equ	0xFF2
  8437                           intcon2	equ	0xFF1
  8438                           postinc0	equ	0xFEE
  8439                           fsr0h	equ	0xFEA
  8440                           fsr0l	equ	0xFE9
  8441                           wreg	equ	0xFE8
  8442                           postdec1	equ	0xFE5
  8443                           fsr1h	equ	0xFE2
  8444                           fsr1l	equ	0xFE1
  8445                           bsr	equ	0xFE0
  8446                           indf2	equ	0xFDF
  8447                           postinc2	equ	0xFDE
  8448                           postdec2	equ	0xFDD
  8449                           fsr2h	equ	0xFDA
  8450                           fsr2l	equ	0xFD9
  8451                           status	equ	0xFD8
  8452                           pclatu	equ	0xFFB
  8453                           pclath	equ	0xFFA
  8454                           tblptru	equ	0xFF8
  8455                           tblptrh	equ	0xFF7
  8456                           tblptrl	equ	0xFF6
  8457                           tablat	equ	0xFF5
  8458                           prodh	equ	0xFF4
  8459                           prodl	equ	0xFF3
  8460                           intcon	equ	0xFF2
  8461                           intcon2	equ	0xFF1
  8462                           postinc0	equ	0xFEE
  8463                           fsr0h	equ	0xFEA
  8464                           fsr0l	equ	0xFE9
  8465                           wreg	equ	0xFE8
  8466                           postdec1	equ	0xFE5
  8467                           fsr1h	equ	0xFE2
  8468                           fsr1l	equ	0xFE1
  8469                           bsr	equ	0xFE0
  8470                           indf2	equ	0xFDF
  8471                           postinc2	equ	0xFDE
  8472                           postdec2	equ	0xFDD
  8473                           fsr2h	equ	0xFDA
  8474                           fsr2l	equ	0xFD9
  8475                           status	equ	0xFD8
  8476                           
  8477                           	psect	param0
  8478  0000                     pclatu	equ	0xFFB
  8479                           pclath	equ	0xFFA
  8480                           tblptru	equ	0xFF8
  8481                           tblptrh	equ	0xFF7
  8482                           tblptrl	equ	0xFF6
  8483                           tablat	equ	0xFF5
  8484                           prodh	equ	0xFF4
  8485                           prodl	equ	0xFF3
  8486                           intcon	equ	0xFF2
  8487                           intcon2	equ	0xFF1
  8488                           postinc0	equ	0xFEE
  8489                           fsr0h	equ	0xFEA
  8490                           fsr0l	equ	0xFE9
  8491                           wreg	equ	0xFE8
  8492                           postdec1	equ	0xFE5
  8493                           fsr1h	equ	0xFE2
  8494                           fsr1l	equ	0xFE1
  8495                           bsr	equ	0xFE0
  8496                           indf2	equ	0xFDF
  8497                           postinc2	equ	0xFDE
  8498                           postdec2	equ	0xFDD
  8499                           fsr2h	equ	0xFDA
  8500                           fsr2l	equ	0xFD9
  8501                           status	equ	0xFD8
  8502                           
  8503                           	psect	temp
  8504  00004B                     btemp:
  8505                           	opt stack 0
  8506  00004B                     	ds	1
  8507  0000                     int$flags	set	btemp
  8508                           pclatu	equ	0xFFB
  8509                           pclath	equ	0xFFA
  8510                           tblptru	equ	0xFF8
  8511                           tblptrh	equ	0xFF7
  8512                           tblptrl	equ	0xFF6
  8513                           tablat	equ	0xFF5
  8514                           prodh	equ	0xFF4
  8515                           prodl	equ	0xFF3
  8516                           intcon	equ	0xFF2
  8517                           intcon2	equ	0xFF1
  8518                           postinc0	equ	0xFEE
  8519                           fsr0h	equ	0xFEA
  8520                           fsr0l	equ	0xFE9
  8521                           wreg	equ	0xFE8
  8522                           postdec1	equ	0xFE5
  8523                           fsr1h	equ	0xFE2
  8524                           fsr1l	equ	0xFE1
  8525                           bsr	equ	0xFE0
  8526                           indf2	equ	0xFDF
  8527                           postinc2	equ	0xFDE
  8528                           postdec2	equ	0xFDD
  8529                           fsr2h	equ	0xFDA
  8530                           fsr2l	equ	0xFD9
  8531                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      74
    BANK0           160     53      95
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->i1___lwdiv
    i1___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_configurazione_iniziale
    _send_data->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _calibrazione->___lwdiv
    ___lldiv->___lmul

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->i2_WriteTimer0

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9822
                                             49 BANK0      4     4      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___lldiv
                             ___lmul
                       _calibrazione
            _configurazione_iniziale
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    2419
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2395
                                             19 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              4     4      0    6425
                                             45 BANK0      4     4      0
                      _CANInitialize
                            _OpenADC
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     209
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             19 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             33 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibrazione                                         0     0      0     366
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     366
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     322
                                             19 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     290
                                             31 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           17    17      0    1790
                                             13 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
                             ___wmul
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (5) i1___lwdiv                                            7     3      4     214
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     415
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            15    15      0     166
                                              4 BANK0     15    15      0
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (7) i2_WriteTimer0                                        4     2      2     166
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _calibrazione
     _BusyADC
     _ConvertADC
     _ReadADC
     ___lwdiv
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenADC
     _WriteTimer0
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   ___wmul
   i1___lwdiv
     ___wmul (ARG)

 _ISR_alta (ROOT)
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     35      5F       4       59.4%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1E      4A       1       78.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A9       9        0.0%
DATA                 0      0      A9      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Dec 07 16:36:19 2015

              ??_CANisTXwarningON 0073              __end_of_CANSetFilter 0C5E  
                              _id 00A9                                bsr 000FE0  
             ___wmul@multiplicand 0027                       __CFG_BORV$3 000000  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000                               l400 1336  
                             l401 133A                               l402 1346  
                             l500 09CA                               l501 09CE  
                             l510 0ADA                               l502 09DA  
                             l430 1AF0                               l511 0AE6  
                             l431 1AF4                               l520 0BF2  
                             l512 0AEA                               l432 1B00  
                             l521 0BF6                               l513 0AF6  
                             l505 0AB6                               l441 1C08  
                             l433 1B04                               l361 0EE2  
                             l522 0C02                               l506 0ABA  
                             l442 1C0C                               l434 1B10  
                             l362 0C74                               l523 0C06  
                             l507 0AC6                               l443 1C18  
                             l435 1B14                               l371 0E2E  
                             l363 0C78                               l524 0C12  
                             l516 0BD2                               l508 0ACA  
                             l444 1C1C                               l436 1B20  
                             l356 1D50                               l380 0F84  
                             l372 0E32                               l364 0D70  
                             l517 0BD6                               l509 0AD6  
                             l461 0648                               l445 1C28  
                             l437 1B24                               l357 1D5A  
                             l381 0F8E                               l373 0E3E  
                             l365 0D00                               l518 0BE2  
                             l462 064C                               l446 1C2C  
                             l438 1B30                               l382 0F98  
                             l366 0D0A                               l519 0BE6  
                             l463 0658                               l447 1C38  
                             l391 117C                               l383 0FA2  
                             l367 0D14                               l480 07A2  
                             l472 0762                               l464 065C  
                             l448 1C3C                               l392 1180  
                             l376 1166                               l368 0D1E  
                             l473 0766                               l465 0668  
                             l449 1C48                               l393 1278  
                             l377 0EF8                               l490 08B2  
                             l474 0772                               l466 066C  
                             l554 24DC                               l394 1208  
                             l386 10B2                               l378 0EFC  
                             l642 1F84                               l491 08BE  
                             l483 087E                               l475 0776  
                             l467 0678                               l395 1212  
                             l387 10B6                               l379 0FF4  
                             l484 0882                               l476 0782  
                             l468 067C                               l396 121C  
                             l388 10C2                               l485 088E  
                             l477 0786                               l469 0688  
                             l397 1226                               l494 099A  
                             l486 0892                               l478 0792  
                             l495 099E                               l487 089E  
                             l479 0796                               l496 09AA  
                             l488 08A2                               l497 09AE  
                             l489 08AE                               l498 09BA  
                             l499 09BE                               l691 2288  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _Ton 000B              __size_of_WriteTimer0 0012  
                             _msg 0016                               wreg 000FE8  
           _currentSteering_array 009D                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              l1109 22FA  
                            l1056 214C                              l3110 10C6  
                            l3104 10A6                              l3008 0D28  
                            l3034 0E42                              l3028 0E22  
                            l3160 1230                              l3250 22B6  
                            l2514 24EA                              l3260 22EC  
                            l3252 22BC                              l3500 2418  
                            l2532 19AE                              l3180 132A  
                            l3084 0FAC                              l2702 04FC  
                            l2630 0216                              l2606 1C4C  
                            l3248 22AA                              l2720 05B6  
                            l3512 2494                              l3522 2316  
                            l3186 134A                              l3540 20E6  
                            l2580 1B7A                              l2548 1A64  
                            l3526 233C                              l2822 0908  
                            l2574 1B34                              l3536 20D0  
                            l2816 08C2                              l2648 02CE  
                            l3538 20E0                              l2850 09DE  
                            l2754 06D2                              l2666 0388  
                            l3548 213A                              l2748 068C  
                            l2684 0442                              l2918 0C16  
                            l2782 07A6                              l2856 0A24  
                            l2890 0B40                              l2970 1DAA  
                            l2962 1D48                              l2884 0AFA  
                            l2788 07EC                              l2964 1D5E  
                            l2968 1D66                              u2105 198A  
                            u2130 19E0                              u3020 0C36  
                            u2300 1C6C                              u2220 1B54  
                            _LATA 000F89                              _LATB 000F8A  
                            u2135 19D4                              _LATC 000F8B  
                            _LATD 000F8C                              u3025 0C2A  
                            u2305 1C60                              u2225 1B48  
                            u2145 1A40                              _LATE 000F8D  
                            u2410 0304                              u2330 0192  
                            u2090 192A                              u3150 0D48  
                            u2415 02F8                              u2335 0186  
                            u2095 191E                              u3160 0D94  
                            u2505 04D8                              u2425 0364  
                            u2345 01F2                              u3305 1078  
                            u2530 0532                              u2450 03BE  
                            u2370 024A                              u3410 1250  
                            u3155 0D3C                              u2700 07C6  
                            u2620 06AC                              u3420 129C  
                            u3165 0D88                              u2535 0526  
                            u2455 03B2                              u2375 023E  
                            u3415 1244                              u3175 0DF4  
                            u3280 0FCC                              u2705 07BA  
                            u2625 06A0                              u2545 0592  
                            u2465 041E                              u2385 02AA  
                            u3425 1290                              u2490 0478  
                            u3290 1018                              u3435 12FC  
                            u3285 0FC0                              u2495 046C  
                            u3295 100C                              u3490 254C  
                            u2940 0B1A                              u2860 09FE  
                            u2780 08E2                              u2945 0B0E  
                            u2865 09F2                              u2785 08D6  
                            u3780 2558                              u3790 2564  
             __size_of_CANSetMask 039E                              _Toff 0009  
                            _main 1F80                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 004B            __size_ofi2_WriteTimer0 0012  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 0154  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                   __end_of_BusyADC 2550  
                 __end_of_ReadADC 2532                  _CANOperationMode 24E2  
                 __end_of_OpenADC 228C        __size_of_CANreceiveMessage 050C  
                           ?_main 0025                   __end_of___lldiv 215E  
                           _T0CON 000FD5                             _T3CON 000FB1  
                 __end_of___lwdiv 2304                             i1l408 1682  
                           i1l559 250A                             i1l639 010C  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
               _CANisRxReady$2912 0025                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000               ___lmul@multiplicand 0077  
              __size_of_ISR_bassa 013C                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 0085                  __end_of_ISR_alta 2210  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _timer 00B1                        _ConvertADC 2570  
                  __pbitbssCOMRAM 0250              __end_of_CANisRxReady 250E  
                           tablat 000FF5              __end_of_CANisTxReady 24E2  
                           status 000FD8                __size_ofi1___lwdiv 0052  
                  __CFG_PBADEN$ON 000000                   __initialization 23CC  
                    __end_of_main 20A2                            ??_main 0091  
                   i2_WriteTimer0 2532                     __activetblptr 000002  
               _CANisTxReady$2910 0073                     _counter_array 0095  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _CANCON 000F6F  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
           __size_of_calibrazione 0046                   __CFG_BBSIZ$1024 000000  
                          i1l1109 23C2                            i1l3320 15F0  
                          i1l3332 164A                            i1l3324 160E  
                          i1l3316 15D2                            i1l3308 1562  
                          i1l3334 167C                            i1l3328 162C  
                          i1l3370 17E2                            i1l3390 18A4  
                          i1l3382 186C                            i1l3614 009C  
                          i1l3630 00F2                            i1l3606 0066  
                          i1l3560 2390                            i1l3394 18C0  
                          i1l3386 1888                            i1l3378 1850  
                          i1l3562 2398                            i1l3626 00EE  
                          i1l3396 18F2                            i1l3572 23B8  
                          i1l3564 239C                            i2l3692 21C0  
                          i2l3698 21D2                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F56                            _RXB0D5 000F6B  
                          _RXB1D1 000F57                            _RXB0D6 000F6C  
                          _RXB1D2 000F58                            _RXB0D7 000F6D  
                          _RXB1D3 000F59                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _TXB1D2 000F38  
                          _TXB0D6 000F4C                            _TXB1D3 000F39  
                          _TXB0D7 000F4D                            _TXB2D0 000F26  
                          _TXB1D4 000F3A                            _TXB2D1 000F27  
                          _TXB1D5 000F3B                            _TXB2D2 000F28  
                          _TXB1D6 000F3C                            _TXB2D3 000F29  
                          _TXB1D7 000F3D                            _TXB2D4 000F2A  
                          _TXB2D5 000F2B                            _TXB2D6 000F2C  
                          _TXB2D7 000F2D                CANsendMessage@data 0077  
              CANsendMessage@tamp 007F                         ??_BusyADC 0073  
                       ??_ReadADC 0075             __size_of_CANSetFilter 0B06  
                       ??_OpenADC 0075                    __CFG_XINST$OFF 000000  
               __end_of_ISR_bassa 0154                            ___lmul 2304  
                          ___wmul 2498                    __CFG_STVREN$ON 000000  
                       ??___lldiv 0087                         ??___lwdiv 0077  
                    ??_CANSetMask 0078                            _errore 0013  
                          clear_0 23D2                            clear_1 23E0  
        ?_configurazione_iniziale 0025                    ?i2_WriteTimer0 0060  
                 __CFG_BOREN$BOHW 000000                      _calibrazione 2414  
               __end_ofi1___lwdiv 23CC                      __pdataCOMRAM 0043  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                   _currentSteering 0047  
                    _CANSetFilter 0158                       ?_ConvertADC 0025  
                      __accesstop 0060           __end_of__initialization 2406  
              __end_of_CANSetMask 1C94                     ___rparam_used 000000  
       __size_of_CANisRXwarningON 000C                    __pcstackCOMRAM 0025  
                       ?_ISR_alta 0025             CANSetFilter@numBuffer 007C  
       __size_of_CANisTXwarningON 000C             __size_of_CANisRxReady 0016  
           __size_of_CANisTxReady 0024          __end_of_CANOperationMode 24F8  
                      __pbssBANK0 0095                        _data_array 00B7  
         __size_of_CANsendMessage 078C                           ?___lmul 0073  
                         ?___wmul 0025                        ??_ISR_alta 0064  
                 ??i2_WriteTimer0 0062                __size_of_send_data 003E  
                WriteTimer0@timer 0075                     ??_WriteTimer0 0075  
                  ___lmul@product 007B                      _CANisRxReady 24F8  
             __size_of_ConvertADC 0004                           _CANSTAT 000F6E  
                    _CANisTxReady 24BE                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01C6                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 007A                           _BusyADC 2544  
                         _ReadADC 2520               i2WriteTimer0@timer0 0060  
                      _correzione 0011                         _ADCResult 00B5  
                         _OpenADC 2210                           __Hparam 0000  
                         __Lparam 0000                   __size_of___lmul 0076  
                         ___lldiv 20A2                   __size_of___wmul 0026  
                         ___lwdiv 228C              CANInitialize@propSeg 008A  
                         __pcinit 23CC                           __ramtop 0300  
                         __ptext0 1F80                           __ptext1 245A  
                         __ptext2 0C5E                           __ptext3 24BE  
                         __ptext4 1E5A                           __ptext5 250E  
                         __ptext6 2210                           __ptext7 1C94  
                         __ptext8 18F6                           __ptext9 0158  
                       _T0CONbits 000FD5                           _counter 0001  
               i1___lwdiv@divisor 002D                 i1___lwdiv@counter 0031  
                      _duty_cycle 00A5               __end_of_WriteTimer0 2520  
          CANreceiveMessage@error 002F                           _potenza 0045  
                  OpenADC@config2 0073                    __pintcode_body 215E  
            end_of_initialization 2406                 __end_of_send_data 2498  
                   __Lmediumconst 0000                           int_func 215E  
                _CANisRXwarningON 255C                     _CANInitialize 1C94  
                 ___lldiv@divisor 0083                   ___lldiv@counter 008B  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
                       _ISR_bassa 0018                         _PORTAbits 000F80  
                  CANSetMask@mask 0073                         _PORTCbits 000F82  
                  CANSetMask@tamp 007D                    CANSetMask@type 0077  
                _CANisTXwarningON 2550                         i1___lwdiv 237A  
                    ??_ConvertADC 0073  __size_of_configurazione_iniziale 0126  
             _previousTimeCounter 00AD           _clock_counter_reference 000F  
                  _CANsendMessage 0C5E                  CANInitialize@BRP 0084  
                CANInitialize@SJW 0083                    ?_CANInitialize 0081  
                  __end_of___lmul 237A                        ?_ISR_bassa 0025  
                  __end_of___wmul 24BE                     __pidataCOMRAM 2568  
               __size_of_ISR_alta 2208                       _WriteTimer0 250E  
              __end_of_ConvertADC 2574               start_initialization 23CC  
                      ?i1___lwdiv 002B               CANSetMask@numBuffer 007C  
          __end_of_CANsendMessage 13EA                 ?_CANOperationMode 0025  
              ??_CANOperationMode 0073        CANInitialize@FilterConfig1 008B  
      CANInitialize@FilterConfig2 008C                          ??___lmul 007B  
                        ??___wmul 0029                       _calibration 000D  
                __CFG_LPT1OSC$OFF 000000            CANInitialize@phaseSeg1 0081  
          CANInitialize@phaseSeg2 0082                       __pbssCOMRAM 0001  
                   __pcstackBANK0 0060                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72                   ?_CANsendMessage 0073  
                 ??_CANInitialize 0086                          ?_BusyADC 0025  
                        ?_ReadADC 0073                CANSetFilter@filter 0073  
               OpenADC@portconfig 0074                          ?_OpenADC 0073  
                  _theorySteering 0015                  ___lwdiv@dividend 0073  
                       __pintcode 0008                          ?___lldiv 007F  
                        ?___lwdiv 0073                       ??_ISR_bassa 0032  
                     __pintcodelo 0018             __end_ofi2_WriteTimer0 2544  
               WriteTimer0@timer0 0073          __end_of_CANisRXwarningON 2568  
                     _COMSTATbits 000F74                i2WriteTimer0@timer 0062  
                ___lwdiv@quotient 0077           _configurazione_iniziale 1E5A  
                     ??i1___lwdiv 002F             CANreceiveMessage@tamp 0030  
                  ___wmul@product 0029                     OpenADC@config 0077  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 0048  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                         _send_data 245A  
                        _PIE3bits 000FA3          __end_of_CANisTXwarningON 255C  
                        i1u402_20 009A                          i1u360_25 14E6  
                        i1u371_25 1768                          i1u357_20 14A2  
                        i1u357_26 14A4                          i1u358_20 14D0  
                        i1u366_25 1656                          i1u358_26 14D2  
                        i1u368_20 172A                          i1u368_26 172C  
                        i1u369_20 1754                          i1u377_25 18CC  
                        i1u369_26 1756                          i2u411_40 2198  
                        i2u411_46 219A                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                          _PIR3bits 000FA4  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                          _RXB0SIDL 000F62  
                        _RXF0EIDH 000F02                          _RXB1SIDH 000F51  
                        _RXF0EIDL 000F03                          _RXB1SIDL 000F52  
                        _RXF1EIDH 000F06                          _RXF1EIDL 000F07  
                        _RXF2EIDH 000F0A                      _pastSteering 0049  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _ISR_alta 0008  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                 ___wmul@multiplier 0025  
                   ?_calibrazione 0025                     ?_CANSetFilter 0073  
               ___lmul@multiplier 0073                       _INTCON2bits 000FF1  
                       copy_data0 23FA                        _CANCONbits 000F6F  
                        __Hparam0 0000                        ?_send_data 0025  
                __size_of_BusyADC 000C                  __size_of_ReadADC 0012  
                        __Lparam0 0000                      _RXB0SIDLbits 000F62  
                __size_of_OpenADC 007C                      _RXB1SIDLbits 000F52  
                      _CANSetMask 18F6                  __size_of___lldiv 00BC  
                __size_of___lwdiv 0078                      ?_WriteTimer0 0073  
                  ??_calibrazione 007A         ??_configurazione_iniziale 008D  
                    _RXF0SIDLbits 000F01                   ___lwdiv@divisor 0075  
                    _RXF1SIDLbits 000F05                   ___lwdiv@counter 0079  
                  ??_CANSetFilter 0078                          __ptext10 24E2  
                        __ptext11 2414                          __ptext12 228C  
                        __ptext21 237A                          __ptext13 2520  
                        __ptext22 2498                          __ptext14 2570  
                        __ptext23 13EA                          __ptext15 2544  
                        __ptext24 24F8                          __ptext16 2304  
                        __ptext17 20A2                          __ptext26 2532  
                        __ptext18 2550                          __ptext19 255C  
                    _RXF2SIDLbits 000F09                      _RXF3SIDLbits 000F0D  
                    _RXF4SIDLbits 000F11                i1___lwdiv@dividend 002B  
                    _RXF5SIDLbits 000F15          CANsendMessage@dataLength 0079  
                    _remote_frame 0250                     __size_of_main 0122  
                        _limiteDx 0043              CANreceiveMessage@msg 0025  
                    _TXB0SIDLbits 000F42                      _TXB1SIDLbits 000F32  
                    _TXB2SIDLbits 000F22                          int$flags 004B  
       __size_of_CANOperationMode 0016                     ?_CANisRxReady 0025  
                   ?_CANisTxReady 0025                       _RXB0DLCbits 000F65  
              i1___lwdiv@quotient 002F                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 13EA  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 007B                ?_CANreceiveMessage 0025  
        CANsendMessage@identifier 0073                          intlevel1 0000  
                        intlevel2 0000                  CANSetFilter@tamp 007D  
                CANSetFilter@type 0077               ??_CANreceiveMessage 0027  
                ___lldiv@dividend 007F                       _TXB0DLCbits 000F45  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 0083                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 1F80                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 0005  
            CANOperationMode@mode 0073                    ??_CANisRxReady 0025  
                     ?_CANSetMask 0073                    ??_CANisTxReady 0073  
       __end_of_CANreceiveMessage 18F6                  ___lldiv@quotient 0087  
               ?_CANisRXwarningON 0025                ??_CANisRXwarningON 0073  
            __end_of_calibrazione 245A             __end_of_CANInitialize 1E5A  
               ?_CANisTXwarningON 0025  
