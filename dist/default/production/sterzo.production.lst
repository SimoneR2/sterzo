

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Feb 06 20:44:14 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	param0,global,class=BANK0,space=1,delta=1
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	idataCOMRAM
    50  002C2C                     __pidataCOMRAM:
    51                           	opt stack 0
    52                           
    53                           ;initializer for _limiteDx
    54  002C2C  0078               	dw	120
    55                           
    56                           ;initializer for _potenza
    57  002C2E  0002               	dw	2
    58                           
    59                           ;initializer for _currentSteering
    60  002C30  B4                 	db	180
    61                           
    62                           ;initializer for _pastSteering
    63  002C31  01                 	db	1
    64                           
    65                           	psect	idataBANK0
    66  002C36                     __pidataBANK0:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _delay_quartz_frequency_value
    70  002C36  14                 	db	20
    71  0000                     _RXB1CON	set	3920
    72  0000                     _RXB1CONbits	set	3920
    73  0000                     _RXB1D0	set	3926
    74  0000                     _RXB1D1	set	3927
    75  0000                     _RXB1D2	set	3928
    76  0000                     _RXB1D3	set	3929
    77  0000                     _RXB1D4	set	3930
    78  0000                     _RXB1D5	set	3931
    79  0000                     _RXB1D6	set	3932
    80  0000                     _RXB1D7	set	3933
    81  0000                     _RXB1DLC	set	3925
    82  0000                     _RXB1DLCbits	set	3925
    83  0000                     _RXB1EIDH	set	3923
    84  0000                     _RXB1EIDL	set	3924
    85  0000                     _RXB1SIDH	set	3921
    86  0000                     _RXB1SIDL	set	3922
    87  0000                     _RXB1SIDLbits	set	3922
    88  0000                     _RXF0EIDH	set	3842
    89  0000                     _RXF0EIDL	set	3843
    90  0000                     _RXF0SIDH	set	3840
    91  0000                     _RXF0SIDL	set	3841
    92  0000                     _RXF0SIDLbits	set	3841
    93  0000                     _RXF1EIDH	set	3846
    94  0000                     _RXF1EIDL	set	3847
    95  0000                     _RXF1SIDH	set	3844
    96  0000                     _RXF1SIDL	set	3845
    97  0000                     _RXF1SIDLbits	set	3845
    98  0000                     _RXF2EIDH	set	3850
    99  0000                     _RXF2EIDL	set	3851
   100  0000                     _RXF2SIDH	set	3848
   101  0000                     _RXF2SIDL	set	3849
   102  0000                     _RXF2SIDLbits	set	3849
   103  0000                     _RXF3EIDH	set	3854
   104  0000                     _RXF3EIDL	set	3855
   105  0000                     _RXF3SIDH	set	3852
   106  0000                     _RXF3SIDL	set	3853
   107  0000                     _RXF3SIDLbits	set	3853
   108  0000                     _RXF4EIDH	set	3858
   109  0000                     _RXF4EIDL	set	3859
   110  0000                     _RXF4SIDH	set	3856
   111  0000                     _RXF4SIDL	set	3857
   112  0000                     _RXF4SIDLbits	set	3857
   113  0000                     _RXF5EIDH	set	3862
   114  0000                     _RXF5EIDL	set	3863
   115  0000                     _RXF5SIDH	set	3860
   116  0000                     _RXF5SIDL	set	3861
   117  0000                     _RXF5SIDLbits	set	3861
   118  0000                     _RXM0EIDH	set	3866
   119  0000                     _RXM0EIDL	set	3867
   120  0000                     _RXM0SIDH	set	3864
   121  0000                     _RXM0SIDL	set	3865
   122  0000                     _RXM0SIDLbits	set	3865
   123  0000                     _RXM1EIDH	set	3870
   124  0000                     _RXM1EIDL	set	3871
   125  0000                     _RXM1SIDH	set	3868
   126  0000                     _RXM1SIDL	set	3869
   127  0000                     _RXM1SIDLbits	set	3869
   128  0000                     _TXB0CONbits	set	3904
   129  0000                     _TXB0D0	set	3910
   130  0000                     _TXB0D1	set	3911
   131  0000                     _TXB0D2	set	3912
   132  0000                     _TXB0D3	set	3913
   133  0000                     _TXB0D4	set	3914
   134  0000                     _TXB0D5	set	3915
   135  0000                     _TXB0D6	set	3916
   136  0000                     _TXB0D7	set	3917
   137  0000                     _TXB0DLC	set	3909
   138  0000                     _TXB0DLCbits	set	3909
   139  0000                     _TXB0EIDH	set	3907
   140  0000                     _TXB0EIDL	set	3908
   141  0000                     _TXB0SIDH	set	3905
   142  0000                     _TXB0SIDL	set	3906
   143  0000                     _TXB0SIDLbits	set	3906
   144  0000                     _TXB1CONbits	set	3888
   145  0000                     _TXB1D0	set	3894
   146  0000                     _TXB1D1	set	3895
   147  0000                     _TXB1D2	set	3896
   148  0000                     _TXB1D3	set	3897
   149  0000                     _TXB1D4	set	3898
   150  0000                     _TXB1D5	set	3899
   151  0000                     _TXB1D6	set	3900
   152  0000                     _TXB1D7	set	3901
   153  0000                     _TXB1DLC	set	3893
   154  0000                     _TXB1DLCbits	set	3893
   155  0000                     _TXB1EIDH	set	3891
   156  0000                     _TXB1EIDL	set	3892
   157  0000                     _TXB1SIDH	set	3889
   158  0000                     _TXB1SIDL	set	3890
   159  0000                     _TXB1SIDLbits	set	3890
   160  0000                     _TXB2CONbits	set	3872
   161  0000                     _TXB2D0	set	3878
   162  0000                     _TXB2D1	set	3879
   163  0000                     _TXB2D2	set	3880
   164  0000                     _TXB2D3	set	3881
   165  0000                     _TXB2D4	set	3882
   166  0000                     _TXB2D5	set	3883
   167  0000                     _TXB2D6	set	3884
   168  0000                     _TXB2D7	set	3885
   169  0000                     _TXB2DLC	set	3877
   170  0000                     _TXB2DLCbits	set	3877
   171  0000                     _TXB2EIDH	set	3875
   172  0000                     _TXB2EIDL	set	3876
   173  0000                     _TXB2SIDH	set	3873
   174  0000                     _TXB2SIDL	set	3874
   175  0000                     _TXB2SIDLbits	set	3874
   176  0000                     _ADCON0	set	4034
   177  0000                     _ADCON0bits	set	4034
   178  0000                     _ADCON1	set	4033
   179  0000                     _ADCON2	set	4032
   180  0000                     _ADRESH	set	4036
   181  0000                     _ADRESL	set	4035
   182  0000                     _BRGCON1	set	3952
   183  0000                     _BRGCON2	set	3953
   184  0000                     _BRGCON2bits	set	3953
   185  0000                     _BRGCON3	set	3954
   186  0000                     _BRGCON3bits	set	3954
   187  0000                     _CANCON	set	3951
   188  0000                     _CANCONbits	set	3951
   189  0000                     _CANSTAT	set	3950
   190  0000                     _COMSTATbits	set	3956
   191  0000                     _INTCON2bits	set	4081
   192  0000                     _INTCONbits	set	4082
   193  0000                     _IPR3bits	set	4005
   194  0000                     _LATA	set	3977
   195  0000                     _LATB	set	3978
   196  0000                     _LATC	set	3979
   197  0000                     _LATD	set	3980
   198  0000                     _LATE	set	3981
   199  0000                     _PIE1bits	set	3997
   200  0000                     _PIE3bits	set	4003
   201  0000                     _PIR1bits	set	3998
   202  0000                     _PIR3bits	set	4004
   203  0000                     _PORTAbits	set	3968
   204  0000                     _PORTCbits	set	3970
   205  0000                     _RCONbits	set	4048
   206  0000                     _RXB0CON	set	3936
   207  0000                     _RXB0CONbits	set	3936
   208  0000                     _RXB0D0	set	3942
   209  0000                     _RXB0D1	set	3943
   210  0000                     _RXB0D2	set	3944
   211  0000                     _RXB0D3	set	3945
   212  0000                     _RXB0D4	set	3946
   213  0000                     _RXB0D5	set	3947
   214  0000                     _RXB0D6	set	3948
   215  0000                     _RXB0D7	set	3949
   216  0000                     _RXB0DLC	set	3941
   217  0000                     _RXB0DLCbits	set	3941
   218  0000                     _RXB0EIDH	set	3939
   219  0000                     _RXB0EIDL	set	3940
   220  0000                     _RXB0SIDH	set	3937
   221  0000                     _RXB0SIDL	set	3938
   222  0000                     _RXB0SIDLbits	set	3938
   223  0000                     _RXERRCNT	set	3957
   224  0000                     _T0CON	set	4053
   225  0000                     _T0CONbits	set	4053
   226  0000                     _TMR0H	set	4055
   227  0000                     _TMR0L	set	4054
   228  0000                     _TRISA	set	3986
   229  0000                     _TRISB	set	3987
   230  0000                     _TRISC	set	3988
   231  0000                     _TRISD	set	3989
   232  0000                     _TRISE	set	3990
   233  0000                     _TXERRCNT	set	3958
   234                           
   235                           ; #config settings
   236  0000                     
   237                           	psect	cinit
   238  0029CE                     __pcinit:
   239                           	opt stack 0
   240  0029CE                     start_initialization:
   241                           	opt stack 0
   242  0029CE                     __initialization:
   243                           	opt stack 0
   244                           
   245                           ; Clear objects allocated to BANK0 (44 bytes)
   246  0029CE  EE00  F091         	lfsr	0,__pbssBANK0
   247  0029D2  0E2C               	movlw	44
   248  0029D4                     clear_0:
   249  0029D4  6AEE               	clrf	postinc0,c
   250  0029D6  06E8               	decf	wreg,f,c
   251  0029D8  E1FD               	bnz	clear_0
   252                           
   253                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   254  0029DA  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   255                           
   256                           ; Clear objects allocated to COMRAM (34 bytes)
   257  0029DC  EE00  F001         	lfsr	0,__pbssCOMRAM
   258  0029E0  0E22               	movlw	34
   259  0029E2                     clear_1:
   260  0029E2  6AEE               	clrf	postinc0,c
   261  0029E4  06E8               	decf	wreg,f,c
   262  0029E6  E1FD               	bnz	clear_1
   263                           
   264                           ; Initialize objects allocated to BANK0 (1 bytes)
   265                           ; load TBLPTR registers with __pidataBANK0
   266  0029E8  0E36               	movlw	low __pidataBANK0
   267  0029EA  6EF6               	movwf	tblptrl,c
   268  0029EC  0E2C               	movlw	high __pidataBANK0
   269  0029EE  6EF7               	movwf	tblptrh,c
   270  0029F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   271  0029F2  6EF8               	movwf	tblptru,c
   272  0029F4  0009               	tblrd		*+	;fetch initializer
   273  0029F6  CFF5 F0BD          	movff	tablat,__pdataBANK0
   274                           
   275                           ; Initialize objects allocated to COMRAM (6 bytes)
   276                           ; load TBLPTR registers with __pidataCOMRAM
   277  0029FA  0E2C               	movlw	low __pidataCOMRAM
   278  0029FC  6EF6               	movwf	tblptrl,c
   279  0029FE  0E2C               	movlw	high __pidataCOMRAM
   280  002A00  6EF7               	movwf	tblptrh,c
   281  002A02  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   282  002A04  6EF8               	movwf	tblptru,c
   283  002A06  EE00  F045         	lfsr	0,__pdataCOMRAM
   284  002A0A  EE10 F006          	lfsr	1,6
   285  002A0E                     copy_data0:
   286  002A0E  0009               	tblrd		*+
   287  002A10  CFF5 FFEE          	movff	tablat,postinc0
   288  002A14  50E5               	movf	postdec1,w,c
   289  002A16  50E1               	movf	fsr1l,w,c
   290  002A18  E1FA               	bnz	copy_data0
   291  002A1A                     end_of_initialization:
   292                           	opt stack 0
   293  002A1A                     __end_of__initialization:
   294                           	opt stack 0
   295  002A1A  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   296  002A1C  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   297  002A1E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   298  002A20  6EF8               	movwf	tblptru,c
   299  002A22  0100               	movlb	0
   300  002A24  EF8F  F012         	goto	_main	;jump to C main() function
   301                           tblptru	equ	0xFF8
   302                           tblptrh	equ	0xFF7
   303                           tblptrl	equ	0xFF6
   304                           tablat	equ	0xFF5
   305                           postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           postdec1	equ	0xFE5
   308                           fsr1l	equ	0xFE1
   309                           
   310                           	psect	bitbssCOMRAM
   311  000258                     __pbitbssCOMRAM:
   312                           	opt stack 0
   313  000258                     _noChange:
   314                           	opt stack 0
   315  000258                     	ds	1
   316  000259                     _remote_frame:
   317                           	opt stack 0
   318  000259                     	ds	1
   319                           tblptru	equ	0xFF8
   320                           tblptrh	equ	0xFF7
   321                           tblptrl	equ	0xFF6
   322                           tablat	equ	0xFF5
   323                           postinc0	equ	0xFEE
   324                           wreg	equ	0xFE8
   325                           postdec1	equ	0xFE5
   326                           fsr1l	equ	0xFE1
   327                           
   328                           	psect	bssCOMRAM
   329  000001                     __pbssCOMRAM:
   330                           	opt stack 0
   331  000001                     _counter:
   332                           	opt stack 0
   333  000001                     	ds	4
   334  000005                     _id:
   335                           	opt stack 0
   336  000005                     	ds	4
   337  000009                     _Toff:
   338                           	opt stack 0
   339  000009                     	ds	2
   340  00000B                     _Ton:
   341                           	opt stack 0
   342  00000B                     	ds	2
   343  00000D                     _calibration:
   344                           	opt stack 0
   345  00000D                     	ds	2
   346  00000F                     _correzione:
   347                           	opt stack 0
   348  00000F                     	ds	2
   349  000011                     _errore:
   350                           	opt stack 0
   351  000011                     	ds	2
   352  000013                     _theorySteering:
   353                           	opt stack 0
   354  000013                     	ds	1
   355  000014                     _msg:
   356                           	opt stack 0
   357  000014                     	ds	15
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           postdec1	equ	0xFE5
   365                           fsr1l	equ	0xFE1
   366                           
   367                           	psect	dataCOMRAM
   368  000045                     __pdataCOMRAM:
   369                           	opt stack 0
   370  000045                     _limiteDx:
   371                           	opt stack 0
   372  000045                     	ds	2
   373  000047                     _potenza:
   374                           	opt stack 0
   375  000047                     	ds	2
   376  000049                     _currentSteering:
   377                           	opt stack 0
   378  000049                     	ds	1
   379  00004A                     _pastSteering:
   380                           	opt stack 0
   381  00004A                     	ds	1
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           tblptrl	equ	0xFF6
   385                           tablat	equ	0xFF5
   386                           postinc0	equ	0xFEE
   387                           wreg	equ	0xFE8
   388                           postdec1	equ	0xFE5
   389                           fsr1l	equ	0xFE1
   390                           
   391                           	psect	bssBANK0
   392  000091                     __pbssBANK0:
   393                           	opt stack 0
   394  000091                     _counter_array:
   395                           	opt stack 0
   396  000091                     	ds	8
   397  000099                     _currentSteering_array:
   398                           	opt stack 0
   399  000099                     	ds	8
   400  0000A1                     _duty_cycle:
   401                           	opt stack 0
   402  0000A1                     	ds	4
   403  0000A5                     _previousTimeCounter:
   404                           	opt stack 0
   405  0000A5                     	ds	4
   406  0000A9                     _timeCounter:
   407                           	opt stack 0
   408  0000A9                     	ds	4
   409  0000AD                     _timer:
   410                           	opt stack 0
   411  0000AD                     	ds	4
   412  0000B1                     _ADCResult:
   413                           	opt stack 0
   414  0000B1                     	ds	2
   415  0000B3                     _clock_counter_reference:
   416                           	opt stack 0
   417  0000B3                     	ds	2
   418  0000B5                     _data_array:
   419                           	opt stack 0
   420  0000B5                     	ds	8
   421                           tblptru	equ	0xFF8
   422                           tblptrh	equ	0xFF7
   423                           tblptrl	equ	0xFF6
   424                           tablat	equ	0xFF5
   425                           postinc0	equ	0xFEE
   426                           wreg	equ	0xFE8
   427                           postdec1	equ	0xFE5
   428                           fsr1l	equ	0xFE1
   429                           
   430                           	psect	dataBANK0
   431  0000BD                     __pdataBANK0:
   432                           	opt stack 0
   433  0000BD                     _delay_quartz_frequency_value:
   434                           	opt stack 0
   435  0000BD                     	ds	1
   436                           tblptru	equ	0xFF8
   437                           tblptrh	equ	0xFF7
   438                           tblptrl	equ	0xFF6
   439                           tablat	equ	0xFF5
   440                           postinc0	equ	0xFEE
   441                           wreg	equ	0xFE8
   442                           postdec1	equ	0xFE5
   443                           fsr1l	equ	0xFE1
   444                           
   445                           	psect	cstackBANK0
   446  000060                     __pcstackBANK0:
   447                           	opt stack 0
   448  000060                     WriteTimer0@timer0:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x0
   452  000060                     	ds	2
   453  000062                     WriteTimer0@timer:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x2
   457  000062                     	ds	2
   458  000064                     ??_ISR_alta:
   459                           
   460                           ; 0 bytes @ 0x4
   461  000064                     	ds	15
   462  000073                     ?_ReadADC:
   463                           	opt stack 0
   464  000073                     ?___wmul:
   465                           	opt stack 0
   466  000073                     ?___lwdiv:
   467                           	opt stack 0
   468  000073                     ?___lmul:
   469                           	opt stack 0
   470  000073                     CANOperationMode@mode:
   471                           	opt stack 0
   472  000073                     _CANisTxReady$2823:
   473                           	opt stack 0
   474  000073                     OpenADC@config2:
   475                           	opt stack 0
   476  000073                     ___wmul@multiplier:
   477                           	opt stack 0
   478  000073                     ___lwdiv@dividend:
   479                           	opt stack 0
   480  000073                     CANsendMessage@identifier:
   481                           	opt stack 0
   482  000073                     CANSetMask@mask:
   483                           	opt stack 0
   484  000073                     CANSetFilter@filter:
   485                           	opt stack 0
   486  000073                     ___lmul@multiplier:
   487                           	opt stack 0
   488                           
   489                           ; 4 bytes @ 0x13
   490  000073                     	ds	1
   491  000074                     OpenADC@portconfig:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0x14
   495  000074                     	ds	1
   496  000075                     ??_ReadADC:
   497  000075                     ??_OpenADC:
   498  000075                     ___wmul@multiplicand:
   499                           	opt stack 0
   500  000075                     ___lwdiv@divisor:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x15
   504  000075                     	ds	2
   505  000077                     CANSetMask@type:
   506                           	opt stack 0
   507  000077                     CANSetFilter@type:
   508                           	opt stack 0
   509  000077                     OpenADC@config:
   510                           	opt stack 0
   511  000077                     CANsendMessage@data:
   512                           	opt stack 0
   513  000077                     ___wmul@product:
   514                           	opt stack 0
   515  000077                     ___lwdiv@quotient:
   516                           	opt stack 0
   517  000077                     ___lmul@multiplicand:
   518                           	opt stack 0
   519                           
   520                           ; 4 bytes @ 0x17
   521  000077                     	ds	1
   522  000078                     ??_CANSetMask:
   523  000078                     ??_CANSetFilter:
   524                           
   525                           ; 0 bytes @ 0x18
   526  000078                     	ds	1
   527  000079                     CANsendMessage@dataLength:
   528                           	opt stack 0
   529  000079                     ___lwdiv@counter:
   530                           	opt stack 0
   531  000079                     delay_ms@value_ms:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x19
   535  000079                     	ds	1
   536  00007A                     CANsendMessage@flags:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x1A
   540  00007A                     	ds	1
   541  00007B                     ??_CANsendMessage:
   542  00007B                     ___lmul@product:
   543                           	opt stack 0
   544                           
   545                           ; 4 bytes @ 0x1B
   546  00007B                     	ds	1
   547  00007C                     CANSetMask@numBuffer:
   548                           	opt stack 0
   549  00007C                     CANSetFilter@numBuffer:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x1C
   553  00007C                     	ds	1
   554  00007D                     CANSetMask@tamp:
   555                           	opt stack 0
   556  00007D                     CANSetFilter@tamp:
   557                           	opt stack 0
   558                           
   559                           ; 4 bytes @ 0x1D
   560  00007D                     	ds	2
   561  00007F                     ?___lldiv:
   562                           	opt stack 0
   563  00007F                     CANsendMessage@tamp:
   564                           	opt stack 0
   565  00007F                     ___lldiv@dividend:
   566                           	opt stack 0
   567                           
   568                           ; 4 bytes @ 0x1F
   569  00007F                     	ds	2
   570  000081                     CANInitialize@phaseSeg1:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x21
   574  000081                     	ds	1
   575  000082                     CANInitialize@phaseSeg2:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x22
   579  000082                     	ds	1
   580  000083                     CANInitialize@SJW:
   581                           	opt stack 0
   582  000083                     ___lldiv@divisor:
   583                           	opt stack 0
   584                           
   585                           ; 4 bytes @ 0x23
   586  000083                     	ds	1
   587  000084                     CANInitialize@BRP:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x24
   591  000084                     	ds	1
   592  000085                     CANInitialize@flags:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x25
   596  000085                     	ds	1
   597  000086                     ??_CANInitialize:
   598                           
   599                           ; 0 bytes @ 0x26
   600  000086                     	ds	1
   601  000087                     ___lldiv@quotient:
   602                           	opt stack 0
   603                           
   604                           ; 4 bytes @ 0x27
   605  000087                     	ds	3
   606  00008A                     CANInitialize@propSeg:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x2A
   610  00008A                     	ds	1
   611  00008B                     CANInitialize@FilterConfig1:
   612                           	opt stack 0
   613  00008B                     ___lldiv@counter:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x2B
   617  00008B                     	ds	1
   618  00008C                     CANInitialize@FilterConfig2:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x2C
   622  00008C                     	ds	1
   623  00008D                     ??_main:
   624                           
   625                           ; 0 bytes @ 0x2D
   626  00008D                     	ds	4
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           postinc0	equ	0xFEE
   632                           wreg	equ	0xFE8
   633                           postdec1	equ	0xFE5
   634                           fsr1l	equ	0xFE1
   635                           
   636                           	psect	cstackCOMRAM
   637  000023                     __pcstackCOMRAM:
   638                           	opt stack 0
   639  000023                     ?i1___wmul:
   640                           	opt stack 0
   641  000023                     _CANisRxReady$2825:
   642                           	opt stack 0
   643  000023                     CANreceiveMessage@msg:
   644                           	opt stack 0
   645  000023                     i1___wmul@multiplier:
   646                           	opt stack 0
   647  000023                     i1CANsendMessage@identifier:
   648                           	opt stack 0
   649                           
   650                           ; 4 bytes @ 0x0
   651  000023                     	ds	2
   652  000025                     ??_CANreceiveMessage:
   653  000025                     i1___wmul@multiplicand:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x2
   657  000025                     	ds	2
   658  000027                     i1CANsendMessage@data:
   659                           	opt stack 0
   660  000027                     i1___wmul@product:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x4
   664  000027                     	ds	2
   665  000029                     ?i1___lwdiv:
   666                           	opt stack 0
   667  000029                     i1CANsendMessage@dataLength:
   668                           	opt stack 0
   669  000029                     i1___lwdiv@dividend:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x6
   673  000029                     	ds	1
   674  00002A                     i1CANsendMessage@flags:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x7
   678  00002A                     	ds	1
   679  00002B                     ??i1_CANsendMessage:
   680  00002B                     i1___lwdiv@divisor:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x8
   684  00002B                     	ds	2
   685  00002D                     CANreceiveMessage@error:
   686                           	opt stack 0
   687  00002D                     i1___lwdiv@quotient:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0xA
   691  00002D                     	ds	1
   692  00002E                     CANreceiveMessage@tamp:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0xB
   696  00002E                     	ds	1
   697  00002F                     i1___lwdiv@counter:
   698                           	opt stack 0
   699  00002F                     i1CANsendMessage@tamp:
   700                           	opt stack 0
   701                           
   702                           ; 4 bytes @ 0xC
   703  00002F                     	ds	4
   704  000033                     ??_ISR_bassa:
   705                           
   706                           ; 0 bytes @ 0x10
   707  000033                     	ds	18
   708                           tblptru	equ	0xFF8
   709                           tblptrh	equ	0xFF7
   710                           tblptrl	equ	0xFF6
   711                           tablat	equ	0xFF5
   712                           postinc0	equ	0xFEE
   713                           wreg	equ	0xFE8
   714                           postdec1	equ	0xFE5
   715                           fsr1l	equ	0xFE1
   716                           
   717 ;;
   718 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   719 ;;
   720 ;; *************** function _main *****************
   721 ;; Defined at:
   722 ;;		line 119 in file "newmain.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  2  627[None  ] int 
   729 ;; Registers used:
   730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   736 ;;      Params:         0       0       0       0
   737 ;;      Locals:         0       0       0       0
   738 ;;      Temps:          0       4       0       0
   739 ;;      Totals:         0       4       0       0
   740 ;;Total ram usage:        4 bytes
   741 ;; Hardware stack levels required when called:    7
   742 ;; This function calls:
   743 ;;		_CANisRXwarningON
   744 ;;		_CANisTXwarningON
   745 ;;		___lldiv
   746 ;;		___lmul
   747 ;;		_calibrazione
   748 ;;		_configurazione_iniziale
   749 ;;		_delay_ms
   750 ;;		_send_data
   751 ;; This function is called by:
   752 ;;		Startup code after reset
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text0
   757  00251E                     __ptext0:
   758                           	opt stack 0
   759  00251E                     _main:
   760                           	opt stack 24
   761                           
   762                           ;newmain.c: 120: configurazione_iniziale();
   763                           
   764                           ;incstack = 0
   765  00251E  ECF2  F013         	call	_configurazione_iniziale	;wreg free
   766                           
   767                           ;newmain.c: 121: PORTAbits.RA1 = 1;
   768  002522  8280               	bsf	3968,1,c	;volatile
   769                           
   770                           ;newmain.c: 122: PORTCbits.RC1 = 1;
   771  002524  8282               	bsf	3970,1,c	;volatile
   772                           
   773                           ;newmain.c: 123: delay_ms(500);
   774  002526  0E01               	movlw	1
   775  002528  0100               	movlb	0	; () banked
   776  00252A  6F7A               	movwf	(delay_ms@value_ms+1)& (0+255),b
   777  00252C  0EF4               	movlw	244
   778  00252E  6F79               	movwf	delay_ms@value_ms& (0+255),b
   779  002530  EC7F  F015         	call	_delay_ms	;wreg free
   780                           
   781                           ;newmain.c: 124: PORTAbits.RA1 = 0;
   782  002534  9280               	bcf	3968,1,c	;volatile
   783                           
   784                           ;newmain.c: 125: PORTCbits.RC1 = 0;
   785  002536  9282               	bcf	3970,1,c	;volatile
   786                           
   787                           ;newmain.c: 126: delay_ms(100);
   788  002538  0E00               	movlw	0
   789  00253A  0100               	movlb	0	; () banked
   790  00253C  6F7A               	movwf	(delay_ms@value_ms+1)& (0+255),b
   791  00253E  0E64               	movlw	100
   792  002540  6F79               	movwf	delay_ms@value_ms& (0+255),b
   793  002542  EC7F  F015         	call	_delay_ms	;wreg free
   794  002546                     l4078:
   795                           
   796                           ;newmain.c: 129: delay_ms(100);
   797  002546  0E00               	movlw	0
   798  002548  0100               	movlb	0	; () banked
   799  00254A  6F7A               	movwf	(delay_ms@value_ms+1)& (0+255),b
   800  00254C  0E64               	movlw	100
   801  00254E  6F79               	movwf	delay_ms@value_ms& (0+255),b
   802  002550  EC7F  F015         	call	_delay_ms	;wreg free
   803                           
   804                           ;newmain.c: 130: calibrazione();
   805  002554  EC3D  F015         	call	_calibrazione	;wreg free
   806                           
   807                           ;newmain.c: 131: duty_cycle = currentSteering;
   808  002558  5049               	movf	_currentSteering,w,c
   809  00255A  0100               	movlb	0	; () banked
   810  00255C  6FA1               	movwf	_duty_cycle& (0+255),b
   811  00255E  6BA2               	clrf	(_duty_cycle+1)& (0+255),b
   812  002560  6BA3               	clrf	(_duty_cycle+2)& (0+255),b
   813  002562  6BA4               	clrf	(_duty_cycle+3)& (0+255),b
   814                           
   815                           ; BSR set to: 0
   816                           ;newmain.c: 132: if (PORTCbits.RC0 == 0) {
   817  002564  B082               	btfsc	3970,0,c	;volatile
   818  002566  D7EF               	goto	l4078
   819                           
   820                           ; BSR set to: 0
   821                           ;newmain.c: 133: timer = (((duty_cycle * 700) / 90) + 800) *2;
   822  002568  C0A1  F073         	movff	_duty_cycle,___lmul@multiplier
   823  00256C  C0A2  F074         	movff	_duty_cycle+1,___lmul@multiplier+1
   824  002570  C0A3  F075         	movff	_duty_cycle+2,___lmul@multiplier+2
   825  002574  C0A4  F076         	movff	_duty_cycle+3,___lmul@multiplier+3
   826  002578  0EBC               	movlw	188
   827  00257A  0100               	movlb	0	; () banked
   828  00257C  6F77               	movwf	___lmul@multiplicand& (0+255),b
   829  00257E  0E02               	movlw	2
   830  002580  6F78               	movwf	(___lmul@multiplicand+1)& (0+255),b
   831  002582  0E00               	movlw	0
   832  002584  6F79               	movwf	(___lmul@multiplicand+2)& (0+255),b
   833  002586  0E00               	movlw	0
   834  002588  6F7A               	movwf	(___lmul@multiplicand+3)& (0+255),b
   835  00258A  ECAC  F014         	call	___lmul	;wreg free
   836  00258E  C073  F07F         	movff	?___lmul,___lldiv@dividend
   837  002592  C074  F080         	movff	?___lmul+1,___lldiv@dividend+1
   838  002596  C075  F081         	movff	?___lmul+2,___lldiv@dividend+2
   839  00259A  C076  F082         	movff	?___lmul+3,___lldiv@dividend+3
   840  00259E  0E5A               	movlw	90
   841  0025A0  0100               	movlb	0	; () banked
   842  0025A2  6F83               	movwf	___lldiv@divisor& (0+255),b
   843  0025A4  0E00               	movlw	0
   844  0025A6  6F84               	movwf	(___lldiv@divisor+1)& (0+255),b
   845  0025A8  0E00               	movlw	0
   846  0025AA  6F85               	movwf	(___lldiv@divisor+2)& (0+255),b
   847  0025AC  0E00               	movlw	0
   848  0025AE  6F86               	movwf	(___lldiv@divisor+3)& (0+255),b
   849  0025B0  EC39  F013         	call	___lldiv	;wreg free
   850  0025B4  90D8               	bcf	status,0,c
   851  0025B6  0100               	movlb	0	; () banked
   852  0025B8  357F               	rlcf	?___lldiv& (0+255),w,b
   853  0025BA  0100               	movlb	0	; () banked
   854  0025BC  6F8D               	movwf	??_main& (0+255),b
   855  0025BE  0100               	movlb	0	; () banked
   856  0025C0  3580               	rlcf	(?___lldiv+1)& (0+255),w,b
   857  0025C2  0100               	movlb	0	; () banked
   858  0025C4  6F8E               	movwf	(??_main+1)& (0+255),b
   859  0025C6  0100               	movlb	0	; () banked
   860  0025C8  3581               	rlcf	(?___lldiv+2)& (0+255),w,b
   861  0025CA  0100               	movlb	0	; () banked
   862  0025CC  6F8F               	movwf	(??_main+2)& (0+255),b
   863  0025CE  0100               	movlb	0	; () banked
   864  0025D0  3582               	rlcf	(?___lldiv+3)& (0+255),w,b
   865  0025D2  0100               	movlb	0	; () banked
   866  0025D4  6F90               	movwf	(??_main+3)& (0+255),b
   867  0025D6  0E40               	movlw	64
   868  0025D8  0100               	movlb	0	; () banked
   869  0025DA  258D               	addwf	??_main& (0+255),w,b
   870  0025DC  0100               	movlb	0	; () banked
   871  0025DE  6FAD               	movwf	_timer& (0+255),b
   872  0025E0  0E06               	movlw	6
   873  0025E2  0100               	movlb	0	; () banked
   874  0025E4  218E               	addwfc	(??_main+1)& (0+255),w,b
   875  0025E6  0100               	movlb	0	; () banked
   876  0025E8  6FAE               	movwf	(_timer+1)& (0+255),b
   877  0025EA  0E00               	movlw	0
   878  0025EC  0100               	movlb	0	; () banked
   879  0025EE  218F               	addwfc	(??_main+2)& (0+255),w,b
   880  0025F0  0100               	movlb	0	; () banked
   881  0025F2  6FAF               	movwf	(_timer+2)& (0+255),b
   882  0025F4  0E00               	movlw	0
   883  0025F6  0100               	movlb	0	; () banked
   884  0025F8  2190               	addwfc	(??_main+3)& (0+255),w,b
   885  0025FA  0100               	movlb	0	; () banked
   886  0025FC  6FB0               	movwf	(_timer+3)& (0+255),b
   887                           
   888                           ; BSR set to: 0
   889                           ;newmain.c: 134: Ton = 65536 - timer;
   890  0025FE  C0AD  F08D         	movff	_timer,??_main
   891  002602  C0AE  F08E         	movff	_timer+1,??_main+1
   892  002606  0100               	movlb	0	; () banked
   893  002608  1F8D               	comf	??_main& (0+255),f,b
   894  00260A  1F8E               	comf	(??_main+1)& (0+255),f,b
   895  00260C  4B8D               	infsnz	??_main& (0+255),f,b
   896  00260E  2B8E               	incf	(??_main+1)& (0+255),f,b
   897  002610  C08D  F00B         	movff	??_main,_Ton
   898  002614  C08E  F00C         	movff	??_main+1,_Ton+1
   899                           
   900                           ; BSR set to: 0
   901                           ;newmain.c: 135: Toff = 20000 - (timer / 2);
   902  002618  C0AD  F08D         	movff	_timer,??_main
   903  00261C  C0AE  F08E         	movff	_timer+1,??_main+1
   904  002620  C0AF  F08F         	movff	_timer+2,??_main+2
   905  002624  C0B0  F090         	movff	_timer+3,??_main+3
   906  002628  0100               	movlb	0	; () banked
   907  00262A  90D8               	bcf	status,0,c
   908  00262C  3390               	rrcf	(??_main+3)& (0+255),f,b
   909  00262E  338F               	rrcf	(??_main+2)& (0+255),f,b
   910  002630  338E               	rrcf	(??_main+1)& (0+255),f,b
   911  002632  338D               	rrcf	??_main& (0+255),f,b
   912  002634  0100               	movlb	0	; () banked
   913  002636  1F8D               	comf	??_main& (0+255),f,b
   914  002638  1F8E               	comf	(??_main+1)& (0+255),f,b
   915  00263A  4B8D               	infsnz	??_main& (0+255),f,b
   916  00263C  2B8E               	incf	(??_main+1)& (0+255),f,b
   917  00263E  0E20               	movlw	32
   918  002640  0100               	movlb	0	; () banked
   919  002642  258D               	addwf	??_main& (0+255),w,b
   920  002644  6E09               	movwf	_Toff,c
   921  002646  0E4E               	movlw	78
   922  002648  0100               	movlb	0	; () banked
   923  00264A  218E               	addwfc	(??_main+1)& (0+255),w,b
   924  00264C  6E0A               	movwf	_Toff+1,c
   925                           
   926                           ; BSR set to: 0
   927                           ;newmain.c: 136: Toff = (65536 - (Toff * 2));
   928  00264E  C009  F08D         	movff	_Toff,??_main
   929  002652  C00A  F08E         	movff	_Toff+1,??_main+1
   930  002656  90D8               	bcf	status,0,c
   931  002658  0100               	movlb	0	; () banked
   932  00265A  378D               	rlcf	??_main& (0+255),f,b
   933  00265C  378E               	rlcf	(??_main+1)& (0+255),f,b
   934  00265E  0100               	movlb	0	; () banked
   935  002660  1F8D               	comf	??_main& (0+255),f,b
   936  002662  1F8E               	comf	(??_main+1)& (0+255),f,b
   937  002664  4B8D               	infsnz	??_main& (0+255),f,b
   938  002666  2B8E               	incf	(??_main+1)& (0+255),f,b
   939  002668  C08D  F009         	movff	??_main,_Toff
   940  00266C  C08E  F00A         	movff	??_main+1,_Toff+1
   941                           
   942                           ; BSR set to: 0
   943                           
   944                           ; BSR set to: 0
   945  002670  D76A               	goto	l4078
   946  002672                     __end_of_main:
   947                           	opt stack 0
   948                           tblptru	equ	0xFF8
   949                           tblptrh	equ	0xFF7
   950                           tblptrl	equ	0xFF6
   951                           tablat	equ	0xFF5
   952                           postinc0	equ	0xFEE
   953                           wreg	equ	0xFE8
   954                           postdec1	equ	0xFE5
   955                           fsr1l	equ	0xFE1
   956                           status	equ	0xFD8
   957                           
   958 ;; *************** function _send_data *****************
   959 ;; Defined at:
   960 ;;		line 154 in file "newmain.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;		None               void
   967 ;; Registers used:
   968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   974 ;;      Params:         0       0       0       0
   975 ;;      Locals:         0       0       0       0
   976 ;;      Temps:          0       0       0       0
   977 ;;      Totals:         0       0       0       0
   978 ;;Total ram usage:        0 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; Hardware stack levels required when called:    5
   981 ;; This function calls:
   982 ;;		_CANisTxReady
   983 ;;		_CANsendMessage
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text1
   990  002AC0                     __ptext1:
   991                           	opt stack 0
   992  002AC0                     _send_data:
   993                           	opt stack 25
   994                           
   995                           ;newmain.c: 155: if (CANisTxReady()) {
   996                           
   997                           ;incstack = 0
   998  002AC0  ECCA  F015         	call	_CANisTxReady	;wreg free
   999  002AC4  0900               	iorlw	0
  1000  002AC6  B4D8               	btfsc	status,2,c
  1001  002AC8  0012               	return	
  1002                           
  1003                           ;newmain.c: 156: if (remote_frame == 1) {
  1004  002ACA  A24B               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1005  002ACC  D016               	goto	l3710
  1006                           
  1007                           ;newmain.c: 158: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG &
  1008                           ;newmain.c: 159: CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1009  002ACE  C005  F073         	movff	_id,CANsendMessage@identifier
  1010  002AD2  C006  F074         	movff	_id+1,CANsendMessage@identifier+1
  1011  002AD6  C007  F075         	movff	_id+2,CANsendMessage@identifier+2
  1012  002ADA  C008  F076         	movff	_id+3,CANsendMessage@identifier+3
  1013  002ADE  0EB5               	movlw	low _data_array
  1014  002AE0  0100               	movlb	0	; () banked
  1015  002AE2  6F77               	movwf	CANsendMessage@data& (0+255),b
  1016  002AE4  0E00               	movlw	high _data_array
  1017  002AE6  0100               	movlb	0	; () banked
  1018  002AE8  6F78               	movwf	(CANsendMessage@data+1)& (0+255),b
  1019  002AEA  0E08               	movlw	8
  1020  002AEC  0100               	movlb	0	; () banked
  1021  002AEE  6F79               	movwf	CANsendMessage@dataLength& (0+255),b
  1022  002AF0  0EBC               	movlw	188
  1023  002AF2  0100               	movlb	0	; () banked
  1024  002AF4  6F7A               	movwf	CANsendMessage@flags& (0+255),b
  1025  002AF6  EC49  F006         	call	_CANsendMessage	;wreg free
  1026  002AFA                     l3710:
  1027                           
  1028                           ;newmain.c: 160: }
  1029                           ;newmain.c: 161: remote_frame = 0;
  1030  002AFA  924B               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1031  002AFC  0012               	return	
  1032  002AFE                     __end_of_send_data:
  1033                           	opt stack 0
  1034                           tblptru	equ	0xFF8
  1035                           tblptrh	equ	0xFF7
  1036                           tblptrl	equ	0xFF6
  1037                           tablat	equ	0xFF5
  1038                           postinc0	equ	0xFEE
  1039                           wreg	equ	0xFE8
  1040                           postdec1	equ	0xFE5
  1041                           fsr1l	equ	0xFE1
  1042                           status	equ	0xFD8
  1043                           
  1044 ;; *************** function _CANsendMessage *****************
  1045 ;; Defined at:
  1046 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  identifier      4   19[BANK0 ] unsigned long 
  1049 ;;  data            2   23[BANK0 ] PTR unsigned char 
  1050 ;;		 -> data_array(8), 
  1051 ;;  dataLength      1   25[BANK0 ] unsigned char 
  1052 ;;  flags           1   26[BANK0 ] enum E16866
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  tamp            4   31[BANK0 ] unsigned long 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;		None               void
  1057 ;; Registers used:
  1058 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1064 ;;      Params:         0       8       0       0
  1065 ;;      Locals:         0       4       0       0
  1066 ;;      Temps:          0       4       0       0
  1067 ;;      Totals:         0      16       0       0
  1068 ;;Total ram usage:       16 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; Hardware stack levels required when called:    4
  1071 ;; This function calls:
  1072 ;;		Nothing
  1073 ;; This function is called by:
  1074 ;;		_send_data
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           	psect	text2
  1079  000C92                     __ptext2:
  1080                           	opt stack 0
  1081  000C92                     _CANsendMessage:
  1082                           	opt stack 25
  1083                           
  1084                           ;inc\CANlib.h: 297: unsigned long tamp;
  1085                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  1086                           
  1087                           ;incstack = 0
  1088  000C92  010F               	movlb	15	; () banked
  1089  000C94  B740               	btfsc	64,3,b	;volatile
  1090  000C96  D13F               	goto	l349
  1091                           
  1092                           ; BSR set to: 15
  1093                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  1094  000C98  C079  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1095                           
  1096                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  1097  000C9C  0100               	movlb	0	; () banked
  1098  000C9E  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1099  000CA0  D003               	goto	l350
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  1103  000CA2  010F               	movlb	15	; () banked
  1104  000CA4  8D45               	bsf	69,6,b	;volatile
  1105  000CA6  D002               	goto	l351
  1106  000CA8                     l350:
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;inc\CANlib.h: 303: else
  1110                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  1111  000CA8  010F               	movlb	15	; () banked
  1112  000CAA  9D45               	bcf	69,6,b	;volatile
  1113  000CAC                     l351:
  1114                           
  1115                           ; BSR set to: 15
  1116                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  1117  000CAC  0100               	movlb	0	; () banked
  1118  000CAE  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1119  000CB0  D079               	goto	l352
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;inc\CANlib.h: 307: {
  1123                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  1124  000CB2  0100               	movlb	0	; () banked
  1125  000CB4  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1126  000CB6  0100               	movlb	0	; () banked
  1127  000CB8  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1128  000CBA  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1129  000CBC  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1130  000CBE  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  1134  000CC0  C07F  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  1138  000CC4  0E00               	movlw	0
  1139  000CC6  0100               	movlb	0	; () banked
  1140  000CC8  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1141  000CCA  0100               	movlb	0	; () banked
  1142  000CCC  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1143  000CCE  0EFF               	movlw	255
  1144  000CD0  0100               	movlb	0	; () banked
  1145  000CD2  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1146  000CD4  0100               	movlb	0	; () banked
  1147  000CD6  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1148  000CD8  0E00               	movlw	0
  1149  000CDA  0100               	movlb	0	; () banked
  1150  000CDC  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1151  000CDE  0100               	movlb	0	; () banked
  1152  000CE0  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1153  000CE2  0E00               	movlw	0
  1154  000CE4  0100               	movlb	0	; () banked
  1155  000CE6  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1156  000CE8  0100               	movlb	0	; () banked
  1157  000CEA  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  1161  000CEC  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1162  000CF0  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1163  000CF4  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1164  000CF8  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1165  000CFC  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1166  000D00  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1167  000D04  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1168  000D08  0100               	movlb	0	; () banked
  1169  000D0A  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1170  000D0C  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1171  000D10  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1172  000D14  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1173  000D18  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  1177  000D1C  C07F  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  1181  000D20  0E00               	movlw	0
  1182  000D22  010F               	movlb	15	; () banked
  1183  000D24  6F42               	movwf	66,b	;volatile
  1184                           
  1185                           ; BSR set to: 15
  1186                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  1187  000D26  010F               	movlb	15	; () banked
  1188  000D28  8742               	bsf	66,3,b	;volatile
  1189                           
  1190                           ; BSR set to: 15
  1191                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  1192  000D2A  0100               	movlb	0	; () banked
  1193  000D2C  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1194  000D2E  D002               	goto	l353
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  1198  000D30  010F               	movlb	15	; () banked
  1199  000D32  8142               	bsf	66,0,b	;volatile
  1200  000D34                     l353:
  1201                           
  1202                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  1203  000D34  0100               	movlb	0	; () banked
  1204  000D36  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1205  000D38  D002               	goto	l354
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  1209  000D3A  010F               	movlb	15	; () banked
  1210  000D3C  8342               	bsf	66,1,b	;volatile
  1211  000D3E                     l354:
  1212                           
  1213                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  1214  000D3E  0100               	movlb	0	; () banked
  1215  000D40  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1216  000D42  D002               	goto	l355
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  1220  000D44  010F               	movlb	15	; () banked
  1221  000D46  8B42               	bsf	66,5,b	;volatile
  1222  000D48                     l355:
  1223                           
  1224                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  1225  000D48  0100               	movlb	0	; () banked
  1226  000D4A  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1227  000D4C  D002               	goto	l356
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  1231  000D4E  010F               	movlb	15	; () banked
  1232  000D50  8D42               	bsf	66,6,b	;volatile
  1233  000D52                     l356:
  1234                           
  1235                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  1236  000D52  0100               	movlb	0	; () banked
  1237  000D54  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1238  000D56  D002               	goto	l3220
  1239                           
  1240                           ; BSR set to: 0
  1241                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  1242  000D58  010F               	movlb	15	; () banked
  1243  000D5A  8F42               	bsf	66,7,b	;volatile
  1244  000D5C                     l3220:
  1245                           
  1246                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  1247  000D5C  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1248  000D60  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1249  000D64  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1250  000D68  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1251  000D6C  0E16               	movlw	22
  1252  000D6E  D006               	goto	u3530
  1253  000D70                     u3535:
  1254  000D70  0100               	movlb	0	; () banked
  1255  000D72  90D8               	bcf	status,0,c
  1256  000D74  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1257  000D76  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1258  000D78  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1259  000D7A  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1260  000D7C                     u3530:
  1261  000D7C  2EE8               	decfsz	wreg,f,c
  1262  000D7E  D7F8               	goto	u3535
  1263  000D80  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1264  000D84  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1265  000D88  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1266  000D8C  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  1270  000D90  0100               	movlb	0	; () banked
  1271  000D92  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1272  000D94  0100               	movlb	0	; () banked
  1273  000D96  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1274  000D98  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1275  000D9A  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1276  000D9C  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  1280  000D9E  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1281                           
  1282                           ;inc\CANlib.h: 333: }
  1283  000DA2  D059               	goto	l3240
  1284  000DA4                     l352:
  1285                           
  1286                           ; BSR set to: 0
  1287                           ;inc\CANlib.h: 335: else
  1288                           ;inc\CANlib.h: 337: {
  1289                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  1290  000DA4  010F               	movlb	15	; () banked
  1291  000DA6  9742               	bcf	66,3,b	;volatile
  1292                           
  1293                           ; BSR set to: 15
  1294                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  1295  000DA8  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1296  000DAC  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1297  000DB0  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1298  000DB4  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1299  000DB8  0E04               	movlw	4
  1300  000DBA  D006               	goto	u3540
  1301  000DBC                     u3545:
  1302  000DBC  0100               	movlb	0	; () banked
  1303  000DBE  90D8               	bcf	status,0,c
  1304  000DC0  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1305  000DC2  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1306  000DC4  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1307  000DC6  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1308  000DC8                     u3540:
  1309  000DC8  2EE8               	decfsz	wreg,f,c
  1310  000DCA  D7F8               	goto	u3545
  1311  000DCC  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1312  000DD0  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1313  000DD4  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1314  000DD8  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  1318  000DDC  0100               	movlb	0	; () banked
  1319  000DDE  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1320  000DE0  0100               	movlb	0	; () banked
  1321  000DE2  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1322  000DE4  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1323  000DE6  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1324  000DE8  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  1328  000DEA  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  1332  000DEE  0E07               	movlw	7
  1333  000DF0  0100               	movlb	0	; () banked
  1334  000DF2  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1335  000DF4  0100               	movlb	0	; () banked
  1336  000DF6  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1337  000DF8  0E00               	movlw	0
  1338  000DFA  0100               	movlb	0	; () banked
  1339  000DFC  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1340  000DFE  0100               	movlb	0	; () banked
  1341  000E00  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1342  000E02  0E00               	movlw	0
  1343  000E04  0100               	movlb	0	; () banked
  1344  000E06  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1345  000E08  0100               	movlb	0	; () banked
  1346  000E0A  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1347  000E0C  0E00               	movlw	0
  1348  000E0E  0100               	movlb	0	; () banked
  1349  000E10  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1350  000E12  0100               	movlb	0	; () banked
  1351  000E14  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  1355  000E16  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1356  000E1A  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1357  000E1E  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1358  000E22  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1359  000E26  0E05               	movlw	5
  1360  000E28                     u3555:
  1361  000E28  90D8               	bcf	status,0,c
  1362  000E2A  0100               	movlb	0	; () banked
  1363  000E2C  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1364  000E2E  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1365  000E30  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1366  000E32  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1367  000E34  2EE8               	decfsz	wreg,f,c
  1368  000E36  D7F8               	goto	u3555
  1369  000E38  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1370  000E3C  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1371  000E40  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1372  000E44  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  1376  000E48  010F               	movlb	15	; () banked
  1377  000E4A  5142               	movf	66,w,b	;volatile
  1378  000E4C  0B1F               	andlw	31
  1379  000E4E  010F               	movlb	15	; () banked
  1380  000E50  6F42               	movwf	66,b	;volatile
  1381                           
  1382                           ; BSR set to: 15
  1383                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  1384  000E52  C07F  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1385  000E56                     l3240:
  1386                           
  1387                           ;inc\CANlib.h: 348: }
  1388                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  1389  000E56  0100               	movlb	0	; () banked
  1390  000E58  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1391  000E5A  D003               	goto	l359
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  1395  000E5C  010F               	movlb	15	; () banked
  1396  000E5E  8140               	bsf	64,0,b	;volatile
  1397  000E60  D002               	goto	l360
  1398  000E62                     l359:
  1399                           
  1400                           ; BSR set to: 0
  1401                           ;inc\CANlib.h: 352: else
  1402                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  1403  000E62  010F               	movlb	15	; () banked
  1404  000E64  9140               	bcf	64,0,b	;volatile
  1405  000E66                     l360:
  1406                           
  1407                           ; BSR set to: 15
  1408                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  1409  000E66  0100               	movlb	0	; () banked
  1410  000E68  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1411  000E6A  D003               	goto	l361
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  1415  000E6C  010F               	movlb	15	; () banked
  1416  000E6E  8340               	bsf	64,1,b	;volatile
  1417  000E70  D002               	goto	l3246
  1418  000E72                     l361:
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;inc\CANlib.h: 356: else
  1422                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  1423  000E72  010F               	movlb	15	; () banked
  1424  000E74  9340               	bcf	64,1,b	;volatile
  1425  000E76                     l3246:
  1426                           
  1427                           ; BSR set to: 15
  1428                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  1429  000E76  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1430  000E7A  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1431  000E7E  50DF               	movf	indf2,w,c
  1432  000E80  010F               	movlb	15	; () banked
  1433  000E82  6F46               	movwf	70,b	;volatile
  1434                           
  1435                           ; BSR set to: 15
  1436                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  1437  000E84  0100               	movlb	0	; () banked
  1438  000E86  EE20 F001          	lfsr	2,1
  1439  000E8A  5177               	movf	CANsendMessage@data& (0+255),w,b
  1440  000E8C  26D9               	addwf	fsr2l,f,c
  1441  000E8E  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1442  000E90  22DA               	addwfc	fsr2h,f,c
  1443  000E92  50DF               	movf	indf2,w,c
  1444  000E94  010F               	movlb	15	; () banked
  1445  000E96  6F47               	movwf	71,b	;volatile
  1446                           
  1447                           ; BSR set to: 15
  1448                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  1449  000E98  0100               	movlb	0	; () banked
  1450  000E9A  EE20 F002          	lfsr	2,2
  1451  000E9E  5177               	movf	CANsendMessage@data& (0+255),w,b
  1452  000EA0  26D9               	addwf	fsr2l,f,c
  1453  000EA2  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1454  000EA4  22DA               	addwfc	fsr2h,f,c
  1455  000EA6  50DF               	movf	indf2,w,c
  1456  000EA8  010F               	movlb	15	; () banked
  1457  000EAA  6F48               	movwf	72,b	;volatile
  1458                           
  1459                           ; BSR set to: 15
  1460                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  1461  000EAC  0100               	movlb	0	; () banked
  1462  000EAE  EE20 F003          	lfsr	2,3
  1463  000EB2  5177               	movf	CANsendMessage@data& (0+255),w,b
  1464  000EB4  26D9               	addwf	fsr2l,f,c
  1465  000EB6  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1466  000EB8  22DA               	addwfc	fsr2h,f,c
  1467  000EBA  50DF               	movf	indf2,w,c
  1468  000EBC  010F               	movlb	15	; () banked
  1469  000EBE  6F49               	movwf	73,b	;volatile
  1470                           
  1471                           ; BSR set to: 15
  1472                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  1473  000EC0  0100               	movlb	0	; () banked
  1474  000EC2  EE20 F004          	lfsr	2,4
  1475  000EC6  5177               	movf	CANsendMessage@data& (0+255),w,b
  1476  000EC8  26D9               	addwf	fsr2l,f,c
  1477  000ECA  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1478  000ECC  22DA               	addwfc	fsr2h,f,c
  1479  000ECE  50DF               	movf	indf2,w,c
  1480  000ED0  010F               	movlb	15	; () banked
  1481  000ED2  6F4A               	movwf	74,b	;volatile
  1482                           
  1483                           ; BSR set to: 15
  1484                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  1485  000ED4  0100               	movlb	0	; () banked
  1486  000ED6  EE20 F005          	lfsr	2,5
  1487  000EDA  5177               	movf	CANsendMessage@data& (0+255),w,b
  1488  000EDC  26D9               	addwf	fsr2l,f,c
  1489  000EDE  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1490  000EE0  22DA               	addwfc	fsr2h,f,c
  1491  000EE2  50DF               	movf	indf2,w,c
  1492  000EE4  010F               	movlb	15	; () banked
  1493  000EE6  6F4B               	movwf	75,b	;volatile
  1494                           
  1495                           ; BSR set to: 15
  1496                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  1497  000EE8  0100               	movlb	0	; () banked
  1498  000EEA  EE20 F006          	lfsr	2,6
  1499  000EEE  5177               	movf	CANsendMessage@data& (0+255),w,b
  1500  000EF0  26D9               	addwf	fsr2l,f,c
  1501  000EF2  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1502  000EF4  22DA               	addwfc	fsr2h,f,c
  1503  000EF6  50DF               	movf	indf2,w,c
  1504  000EF8  010F               	movlb	15	; () banked
  1505  000EFA  6F4C               	movwf	76,b	;volatile
  1506                           
  1507                           ; BSR set to: 15
  1508                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  1509  000EFC  0100               	movlb	0	; () banked
  1510  000EFE  EE20 F007          	lfsr	2,7
  1511  000F02  5177               	movf	CANsendMessage@data& (0+255),w,b
  1512  000F04  26D9               	addwf	fsr2l,f,c
  1513  000F06  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1514  000F08  22DA               	addwfc	fsr2h,f,c
  1515  000F0A  50DF               	movf	indf2,w,c
  1516  000F0C  010F               	movlb	15	; () banked
  1517  000F0E  6F4D               	movwf	77,b	;volatile
  1518                           
  1519                           ; BSR set to: 15
  1520                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  1521  000F10  010F               	movlb	15	; () banked
  1522  000F12  8740               	bsf	64,3,b	;volatile
  1523                           
  1524                           ; BSR set to: 15
  1525                           ;inc\CANlib.h: 369: return;
  1526  000F14  0012               	return	
  1527  000F16                     l349:
  1528                           
  1529                           ; BSR set to: 15
  1530                           ;inc\CANlib.h: 370: }
  1531                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  1532  000F16  010F               	movlb	15	; () banked
  1533  000F18  B730               	btfsc	48,3,b	;volatile
  1534  000F1A  D13F               	goto	l364
  1535                           
  1536                           ; BSR set to: 15
  1537                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  1538  000F1C  C079  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1539                           
  1540                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  1541  000F20  0100               	movlb	0	; () banked
  1542  000F22  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1543  000F24  D003               	goto	l365
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  1547  000F26  010F               	movlb	15	; () banked
  1548  000F28  8D35               	bsf	53,6,b	;volatile
  1549  000F2A  D002               	goto	l366
  1550  000F2C                     l365:
  1551                           
  1552                           ; BSR set to: 0
  1553                           ;inc\CANlib.h: 379: else
  1554                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  1555  000F2C  010F               	movlb	15	; () banked
  1556  000F2E  9D35               	bcf	53,6,b	;volatile
  1557  000F30                     l366:
  1558                           
  1559                           ; BSR set to: 15
  1560                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  1561  000F30  0100               	movlb	0	; () banked
  1562  000F32  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1563  000F34  D079               	goto	l367
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;inc\CANlib.h: 383: {
  1567                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  1568  000F36  0100               	movlb	0	; () banked
  1569  000F38  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1570  000F3A  0100               	movlb	0	; () banked
  1571  000F3C  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1572  000F3E  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1573  000F40  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1574  000F42  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  1578  000F44  C07F  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  1582  000F48  0E00               	movlw	0
  1583  000F4A  0100               	movlb	0	; () banked
  1584  000F4C  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1585  000F4E  0100               	movlb	0	; () banked
  1586  000F50  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1587  000F52  0EFF               	movlw	255
  1588  000F54  0100               	movlb	0	; () banked
  1589  000F56  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1590  000F58  0100               	movlb	0	; () banked
  1591  000F5A  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1592  000F5C  0E00               	movlw	0
  1593  000F5E  0100               	movlb	0	; () banked
  1594  000F60  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1595  000F62  0100               	movlb	0	; () banked
  1596  000F64  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1597  000F66  0E00               	movlw	0
  1598  000F68  0100               	movlb	0	; () banked
  1599  000F6A  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1600  000F6C  0100               	movlb	0	; () banked
  1601  000F6E  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  1605  000F70  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1606  000F74  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1607  000F78  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1608  000F7C  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1609  000F80  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1610  000F84  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1611  000F88  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1612  000F8C  0100               	movlb	0	; () banked
  1613  000F8E  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1614  000F90  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1615  000F94  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1616  000F98  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1617  000F9C  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  1621  000FA0  C07F  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  1625  000FA4  0E00               	movlw	0
  1626  000FA6  010F               	movlb	15	; () banked
  1627  000FA8  6F32               	movwf	50,b	;volatile
  1628                           
  1629                           ; BSR set to: 15
  1630                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  1631  000FAA  010F               	movlb	15	; () banked
  1632  000FAC  8732               	bsf	50,3,b	;volatile
  1633                           
  1634                           ; BSR set to: 15
  1635                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  1636  000FAE  0100               	movlb	0	; () banked
  1637  000FB0  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1638  000FB2  D002               	goto	l368
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  1642  000FB4  010F               	movlb	15	; () banked
  1643  000FB6  8132               	bsf	50,0,b	;volatile
  1644  000FB8                     l368:
  1645                           
  1646                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  1647  000FB8  0100               	movlb	0	; () banked
  1648  000FBA  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1649  000FBC  D002               	goto	l369
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  1653  000FBE  010F               	movlb	15	; () banked
  1654  000FC0  8332               	bsf	50,1,b	;volatile
  1655  000FC2                     l369:
  1656                           
  1657                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  1658  000FC2  0100               	movlb	0	; () banked
  1659  000FC4  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1660  000FC6  D002               	goto	l370
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  1664  000FC8  010F               	movlb	15	; () banked
  1665  000FCA  8B32               	bsf	50,5,b	;volatile
  1666  000FCC                     l370:
  1667                           
  1668                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  1669  000FCC  0100               	movlb	0	; () banked
  1670  000FCE  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1671  000FD0  D002               	goto	l371
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  1675  000FD2  010F               	movlb	15	; () banked
  1676  000FD4  8D32               	bsf	50,6,b	;volatile
  1677  000FD6                     l371:
  1678                           
  1679                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  1680  000FD6  0100               	movlb	0	; () banked
  1681  000FD8  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1682  000FDA  D002               	goto	l3296
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  1686  000FDC  010F               	movlb	15	; () banked
  1687  000FDE  8F32               	bsf	50,7,b	;volatile
  1688  000FE0                     l3296:
  1689                           
  1690                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  1691  000FE0  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1692  000FE4  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1693  000FE8  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1694  000FEC  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1695  000FF0  0E16               	movlw	22
  1696  000FF2  D006               	goto	u3660
  1697  000FF4                     u3665:
  1698  000FF4  0100               	movlb	0	; () banked
  1699  000FF6  90D8               	bcf	status,0,c
  1700  000FF8  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1701  000FFA  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1702  000FFC  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1703  000FFE  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1704  001000                     u3660:
  1705  001000  2EE8               	decfsz	wreg,f,c
  1706  001002  D7F8               	goto	u3665
  1707  001004  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1708  001008  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1709  00100C  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1710  001010  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  1714  001014  0100               	movlb	0	; () banked
  1715  001016  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1716  001018  0100               	movlb	0	; () banked
  1717  00101A  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1718  00101C  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1719  00101E  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1720  001020  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  1724  001022  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1725                           
  1726                           ;inc\CANlib.h: 408: }
  1727  001026  D059               	goto	l3316
  1728  001028                     l367:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;inc\CANlib.h: 410: else
  1732                           ;inc\CANlib.h: 412: {
  1733                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  1734  001028  010F               	movlb	15	; () banked
  1735  00102A  9732               	bcf	50,3,b	;volatile
  1736                           
  1737                           ; BSR set to: 15
  1738                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  1739  00102C  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1740  001030  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1741  001034  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1742  001038  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1743  00103C  0E04               	movlw	4
  1744  00103E  D006               	goto	u3670
  1745  001040                     u3675:
  1746  001040  0100               	movlb	0	; () banked
  1747  001042  90D8               	bcf	status,0,c
  1748  001044  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1749  001046  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1750  001048  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1751  00104A  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1752  00104C                     u3670:
  1753  00104C  2EE8               	decfsz	wreg,f,c
  1754  00104E  D7F8               	goto	u3675
  1755  001050  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1756  001054  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1757  001058  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1758  00105C  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  1762  001060  0100               	movlb	0	; () banked
  1763  001062  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1764  001064  0100               	movlb	0	; () banked
  1765  001066  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1766  001068  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1767  00106A  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1768  00106C  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  1772  00106E  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  1776  001072  0E07               	movlw	7
  1777  001074  0100               	movlb	0	; () banked
  1778  001076  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1779  001078  0100               	movlb	0	; () banked
  1780  00107A  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1781  00107C  0E00               	movlw	0
  1782  00107E  0100               	movlb	0	; () banked
  1783  001080  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1784  001082  0100               	movlb	0	; () banked
  1785  001084  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1786  001086  0E00               	movlw	0
  1787  001088  0100               	movlb	0	; () banked
  1788  00108A  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1789  00108C  0100               	movlb	0	; () banked
  1790  00108E  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1791  001090  0E00               	movlw	0
  1792  001092  0100               	movlb	0	; () banked
  1793  001094  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1794  001096  0100               	movlb	0	; () banked
  1795  001098  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  1799  00109A  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1800  00109E  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1801  0010A2  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1802  0010A6  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1803  0010AA  0E05               	movlw	5
  1804  0010AC                     u3685:
  1805  0010AC  90D8               	bcf	status,0,c
  1806  0010AE  0100               	movlb	0	; () banked
  1807  0010B0  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1808  0010B2  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1809  0010B4  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1810  0010B6  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1811  0010B8  2EE8               	decfsz	wreg,f,c
  1812  0010BA  D7F8               	goto	u3685
  1813  0010BC  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1814  0010C0  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1815  0010C4  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1816  0010C8  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  1820  0010CC  010F               	movlb	15	; () banked
  1821  0010CE  5132               	movf	50,w,b	;volatile
  1822  0010D0  0B1F               	andlw	31
  1823  0010D2  010F               	movlb	15	; () banked
  1824  0010D4  6F32               	movwf	50,b	;volatile
  1825                           
  1826                           ; BSR set to: 15
  1827                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  1828  0010D6  C07F  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  1829  0010DA                     l3316:
  1830                           
  1831                           ;inc\CANlib.h: 423: }
  1832                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  1833  0010DA  0100               	movlb	0	; () banked
  1834  0010DC  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1835  0010DE  D003               	goto	l374
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  1839  0010E0  010F               	movlb	15	; () banked
  1840  0010E2  8130               	bsf	48,0,b	;volatile
  1841  0010E4  D002               	goto	l375
  1842  0010E6                     l374:
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;inc\CANlib.h: 427: else
  1846                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  1847  0010E6  010F               	movlb	15	; () banked
  1848  0010E8  9130               	bcf	48,0,b	;volatile
  1849  0010EA                     l375:
  1850                           
  1851                           ; BSR set to: 15
  1852                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  1853  0010EA  0100               	movlb	0	; () banked
  1854  0010EC  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1855  0010EE  D003               	goto	l376
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  1859  0010F0  010F               	movlb	15	; () banked
  1860  0010F2  8330               	bsf	48,1,b	;volatile
  1861  0010F4  D002               	goto	l3322
  1862  0010F6                     l376:
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;inc\CANlib.h: 431: else
  1866                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  1867  0010F6  010F               	movlb	15	; () banked
  1868  0010F8  9330               	bcf	48,1,b	;volatile
  1869  0010FA                     l3322:
  1870                           
  1871                           ; BSR set to: 15
  1872                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  1873  0010FA  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1874  0010FE  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1875  001102  50DF               	movf	indf2,w,c
  1876  001104  010F               	movlb	15	; () banked
  1877  001106  6F36               	movwf	54,b	;volatile
  1878                           
  1879                           ; BSR set to: 15
  1880                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  1881  001108  0100               	movlb	0	; () banked
  1882  00110A  EE20 F001          	lfsr	2,1
  1883  00110E  5177               	movf	CANsendMessage@data& (0+255),w,b
  1884  001110  26D9               	addwf	fsr2l,f,c
  1885  001112  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1886  001114  22DA               	addwfc	fsr2h,f,c
  1887  001116  50DF               	movf	indf2,w,c
  1888  001118  010F               	movlb	15	; () banked
  1889  00111A  6F37               	movwf	55,b	;volatile
  1890                           
  1891                           ; BSR set to: 15
  1892                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  1893  00111C  0100               	movlb	0	; () banked
  1894  00111E  EE20 F002          	lfsr	2,2
  1895  001122  5177               	movf	CANsendMessage@data& (0+255),w,b
  1896  001124  26D9               	addwf	fsr2l,f,c
  1897  001126  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1898  001128  22DA               	addwfc	fsr2h,f,c
  1899  00112A  50DF               	movf	indf2,w,c
  1900  00112C  010F               	movlb	15	; () banked
  1901  00112E  6F38               	movwf	56,b	;volatile
  1902                           
  1903                           ; BSR set to: 15
  1904                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  1905  001130  0100               	movlb	0	; () banked
  1906  001132  EE20 F003          	lfsr	2,3
  1907  001136  5177               	movf	CANsendMessage@data& (0+255),w,b
  1908  001138  26D9               	addwf	fsr2l,f,c
  1909  00113A  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1910  00113C  22DA               	addwfc	fsr2h,f,c
  1911  00113E  50DF               	movf	indf2,w,c
  1912  001140  010F               	movlb	15	; () banked
  1913  001142  6F39               	movwf	57,b	;volatile
  1914                           
  1915                           ; BSR set to: 15
  1916                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  1917  001144  0100               	movlb	0	; () banked
  1918  001146  EE20 F004          	lfsr	2,4
  1919  00114A  5177               	movf	CANsendMessage@data& (0+255),w,b
  1920  00114C  26D9               	addwf	fsr2l,f,c
  1921  00114E  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1922  001150  22DA               	addwfc	fsr2h,f,c
  1923  001152  50DF               	movf	indf2,w,c
  1924  001154  010F               	movlb	15	; () banked
  1925  001156  6F3A               	movwf	58,b	;volatile
  1926                           
  1927                           ; BSR set to: 15
  1928                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  1929  001158  0100               	movlb	0	; () banked
  1930  00115A  EE20 F005          	lfsr	2,5
  1931  00115E  5177               	movf	CANsendMessage@data& (0+255),w,b
  1932  001160  26D9               	addwf	fsr2l,f,c
  1933  001162  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1934  001164  22DA               	addwfc	fsr2h,f,c
  1935  001166  50DF               	movf	indf2,w,c
  1936  001168  010F               	movlb	15	; () banked
  1937  00116A  6F3B               	movwf	59,b	;volatile
  1938                           
  1939                           ; BSR set to: 15
  1940                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  1941  00116C  0100               	movlb	0	; () banked
  1942  00116E  EE20 F006          	lfsr	2,6
  1943  001172  5177               	movf	CANsendMessage@data& (0+255),w,b
  1944  001174  26D9               	addwf	fsr2l,f,c
  1945  001176  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1946  001178  22DA               	addwfc	fsr2h,f,c
  1947  00117A  50DF               	movf	indf2,w,c
  1948  00117C  010F               	movlb	15	; () banked
  1949  00117E  6F3C               	movwf	60,b	;volatile
  1950                           
  1951                           ; BSR set to: 15
  1952                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  1953  001180  0100               	movlb	0	; () banked
  1954  001182  EE20 F007          	lfsr	2,7
  1955  001186  5177               	movf	CANsendMessage@data& (0+255),w,b
  1956  001188  26D9               	addwf	fsr2l,f,c
  1957  00118A  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1958  00118C  22DA               	addwfc	fsr2h,f,c
  1959  00118E  50DF               	movf	indf2,w,c
  1960  001190  010F               	movlb	15	; () banked
  1961  001192  6F3D               	movwf	61,b	;volatile
  1962                           
  1963                           ; BSR set to: 15
  1964                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  1965  001194  010F               	movlb	15	; () banked
  1966  001196  8730               	bsf	48,3,b	;volatile
  1967                           
  1968                           ; BSR set to: 15
  1969                           ;inc\CANlib.h: 445: return;
  1970  001198  0012               	return	
  1971  00119A                     l364:
  1972                           
  1973                           ; BSR set to: 15
  1974                           ;inc\CANlib.h: 446: }
  1975                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  1976  00119A  010F               	movlb	15	; () banked
  1977  00119C  B720               	btfsc	32,3,b	;volatile
  1978  00119E  0012               	return	
  1979                           
  1980                           ; BSR set to: 15
  1981                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  1982  0011A0  C079  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  1983                           
  1984                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  1985  0011A4  0100               	movlb	0	; () banked
  1986  0011A6  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1987  0011A8  D003               	goto	l379
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  1991  0011AA  010F               	movlb	15	; () banked
  1992  0011AC  8D25               	bsf	37,6,b	;volatile
  1993  0011AE  D002               	goto	l380
  1994  0011B0                     l379:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;inc\CANlib.h: 455: else
  1998                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  1999  0011B0  010F               	movlb	15	; () banked
  2000  0011B2  9D25               	bcf	37,6,b	;volatile
  2001  0011B4                     l380:
  2002                           
  2003                           ; BSR set to: 15
  2004                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  2005  0011B4  0100               	movlb	0	; () banked
  2006  0011B6  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  2007  0011B8  D079               	goto	l381
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;inc\CANlib.h: 459: {
  2011                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  2012  0011BA  0100               	movlb	0	; () banked
  2013  0011BC  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  2014  0011BE  0100               	movlb	0	; () banked
  2015  0011C0  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2016  0011C2  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2017  0011C4  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2018  0011C6  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  2022  0011C8  C07F  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  2026  0011CC  0E00               	movlw	0
  2027  0011CE  0100               	movlb	0	; () banked
  2028  0011D0  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2029  0011D2  0100               	movlb	0	; () banked
  2030  0011D4  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2031  0011D6  0EFF               	movlw	255
  2032  0011D8  0100               	movlb	0	; () banked
  2033  0011DA  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2034  0011DC  0100               	movlb	0	; () banked
  2035  0011DE  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2036  0011E0  0E00               	movlw	0
  2037  0011E2  0100               	movlb	0	; () banked
  2038  0011E4  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2039  0011E6  0100               	movlb	0	; () banked
  2040  0011E8  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2041  0011EA  0E00               	movlw	0
  2042  0011EC  0100               	movlb	0	; () banked
  2043  0011EE  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2044  0011F0  0100               	movlb	0	; () banked
  2045  0011F2  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  2049  0011F4  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2050  0011F8  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2051  0011FC  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2052  001200  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2053  001204  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  2054  001208  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2055  00120C  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2056  001210  0100               	movlb	0	; () banked
  2057  001212  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  2058  001214  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2059  001218  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2060  00121C  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2061  001220  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  2065  001224  C07F  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  2069  001228  0E00               	movlw	0
  2070  00122A  010F               	movlb	15	; () banked
  2071  00122C  6F22               	movwf	34,b	;volatile
  2072                           
  2073                           ; BSR set to: 15
  2074                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  2075  00122E  010F               	movlb	15	; () banked
  2076  001230  8722               	bsf	34,3,b	;volatile
  2077                           
  2078                           ; BSR set to: 15
  2079                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  2080  001232  0100               	movlb	0	; () banked
  2081  001234  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2082  001236  D002               	goto	l382
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  2086  001238  010F               	movlb	15	; () banked
  2087  00123A  8122               	bsf	34,0,b	;volatile
  2088  00123C                     l382:
  2089                           
  2090                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  2091  00123C  0100               	movlb	0	; () banked
  2092  00123E  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2093  001240  D002               	goto	l383
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  2097  001242  010F               	movlb	15	; () banked
  2098  001244  8322               	bsf	34,1,b	;volatile
  2099  001246                     l383:
  2100                           
  2101                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  2102  001246  0100               	movlb	0	; () banked
  2103  001248  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2104  00124A  D002               	goto	l384
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  2108  00124C  010F               	movlb	15	; () banked
  2109  00124E  8B22               	bsf	34,5,b	;volatile
  2110  001250                     l384:
  2111                           
  2112                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  2113  001250  0100               	movlb	0	; () banked
  2114  001252  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2115  001254  D002               	goto	l385
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  2119  001256  010F               	movlb	15	; () banked
  2120  001258  8D22               	bsf	34,6,b	;volatile
  2121  00125A                     l385:
  2122                           
  2123                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  2124  00125A  0100               	movlb	0	; () banked
  2125  00125C  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2126  00125E  D002               	goto	l3372
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  2130  001260  010F               	movlb	15	; () banked
  2131  001262  8F22               	bsf	34,7,b	;volatile
  2132  001264                     l3372:
  2133                           
  2134                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  2135  001264  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2136  001268  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2137  00126C  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2138  001270  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2139  001274  0E16               	movlw	22
  2140  001276  D006               	goto	u3790
  2141  001278                     u3795:
  2142  001278  0100               	movlb	0	; () banked
  2143  00127A  90D8               	bcf	status,0,c
  2144  00127C  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2145  00127E  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2146  001280  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2147  001282  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2148  001284                     u3790:
  2149  001284  2EE8               	decfsz	wreg,f,c
  2150  001286  D7F8               	goto	u3795
  2151  001288  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2152  00128C  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2153  001290  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2154  001294  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  2158  001298  0100               	movlb	0	; () banked
  2159  00129A  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2160  00129C  0100               	movlb	0	; () banked
  2161  00129E  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2162  0012A0  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2163  0012A2  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2164  0012A4  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  2168  0012A6  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2169                           
  2170                           ;inc\CANlib.h: 484: }
  2171  0012AA  D059               	goto	l3392
  2172  0012AC                     l381:
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;inc\CANlib.h: 486: else
  2176                           ;inc\CANlib.h: 488: {
  2177                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  2178  0012AC  010F               	movlb	15	; () banked
  2179  0012AE  9722               	bcf	34,3,b	;volatile
  2180                           
  2181                           ; BSR set to: 15
  2182                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  2183  0012B0  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2184  0012B4  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2185  0012B8  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2186  0012BC  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2187  0012C0  0E04               	movlw	4
  2188  0012C2  D006               	goto	u3800
  2189  0012C4                     u3805:
  2190  0012C4  0100               	movlb	0	; () banked
  2191  0012C6  90D8               	bcf	status,0,c
  2192  0012C8  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2193  0012CA  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2194  0012CC  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2195  0012CE  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2196  0012D0                     u3800:
  2197  0012D0  2EE8               	decfsz	wreg,f,c
  2198  0012D2  D7F8               	goto	u3805
  2199  0012D4  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2200  0012D8  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2201  0012DC  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2202  0012E0  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  2206  0012E4  0100               	movlb	0	; () banked
  2207  0012E6  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2208  0012E8  0100               	movlb	0	; () banked
  2209  0012EA  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2210  0012EC  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2211  0012EE  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2212  0012F0  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  2216  0012F2  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  2220  0012F6  0E07               	movlw	7
  2221  0012F8  0100               	movlb	0	; () banked
  2222  0012FA  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2223  0012FC  0100               	movlb	0	; () banked
  2224  0012FE  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2225  001300  0E00               	movlw	0
  2226  001302  0100               	movlb	0	; () banked
  2227  001304  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2228  001306  0100               	movlb	0	; () banked
  2229  001308  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2230  00130A  0E00               	movlw	0
  2231  00130C  0100               	movlb	0	; () banked
  2232  00130E  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2233  001310  0100               	movlb	0	; () banked
  2234  001312  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2235  001314  0E00               	movlw	0
  2236  001316  0100               	movlb	0	; () banked
  2237  001318  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2238  00131A  0100               	movlb	0	; () banked
  2239  00131C  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  2243  00131E  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2244  001322  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2245  001326  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2246  00132A  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2247  00132E  0E05               	movlw	5
  2248  001330                     u3815:
  2249  001330  90D8               	bcf	status,0,c
  2250  001332  0100               	movlb	0	; () banked
  2251  001334  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  2252  001336  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2253  001338  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2254  00133A  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2255  00133C  2EE8               	decfsz	wreg,f,c
  2256  00133E  D7F8               	goto	u3815
  2257  001340  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2258  001344  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2259  001348  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2260  00134C  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  2264  001350  010F               	movlb	15	; () banked
  2265  001352  5122               	movf	34,w,b	;volatile
  2266  001354  0B1F               	andlw	31
  2267  001356  010F               	movlb	15	; () banked
  2268  001358  6F22               	movwf	34,b	;volatile
  2269                           
  2270                           ; BSR set to: 15
  2271                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  2272  00135A  C07F  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2273  00135E                     l3392:
  2274                           
  2275                           ;inc\CANlib.h: 499: }
  2276                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  2277  00135E  0100               	movlb	0	; () banked
  2278  001360  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  2279  001362  D003               	goto	l388
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  2283  001364  010F               	movlb	15	; () banked
  2284  001366  8120               	bsf	32,0,b	;volatile
  2285  001368  D002               	goto	l389
  2286  00136A                     l388:
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;inc\CANlib.h: 503: else
  2290                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  2291  00136A  010F               	movlb	15	; () banked
  2292  00136C  9120               	bcf	32,0,b	;volatile
  2293  00136E                     l389:
  2294                           
  2295                           ; BSR set to: 15
  2296                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  2297  00136E  0100               	movlb	0	; () banked
  2298  001370  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  2299  001372  D003               	goto	l390
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  2303  001374  010F               	movlb	15	; () banked
  2304  001376  8320               	bsf	32,1,b	;volatile
  2305  001378  D002               	goto	l3398
  2306  00137A                     l390:
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;inc\CANlib.h: 507: else
  2310                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  2311  00137A  010F               	movlb	15	; () banked
  2312  00137C  9320               	bcf	32,1,b	;volatile
  2313  00137E                     l3398:
  2314                           
  2315                           ; BSR set to: 15
  2316                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  2317  00137E  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  2318  001382  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2319  001386  50DF               	movf	indf2,w,c
  2320  001388  010F               	movlb	15	; () banked
  2321  00138A  6F26               	movwf	38,b	;volatile
  2322                           
  2323                           ; BSR set to: 15
  2324                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  2325  00138C  0100               	movlb	0	; () banked
  2326  00138E  EE20 F001          	lfsr	2,1
  2327  001392  5177               	movf	CANsendMessage@data& (0+255),w,b
  2328  001394  26D9               	addwf	fsr2l,f,c
  2329  001396  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2330  001398  22DA               	addwfc	fsr2h,f,c
  2331  00139A  50DF               	movf	indf2,w,c
  2332  00139C  010F               	movlb	15	; () banked
  2333  00139E  6F27               	movwf	39,b	;volatile
  2334                           
  2335                           ; BSR set to: 15
  2336                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  2337  0013A0  0100               	movlb	0	; () banked
  2338  0013A2  EE20 F002          	lfsr	2,2
  2339  0013A6  5177               	movf	CANsendMessage@data& (0+255),w,b
  2340  0013A8  26D9               	addwf	fsr2l,f,c
  2341  0013AA  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2342  0013AC  22DA               	addwfc	fsr2h,f,c
  2343  0013AE  50DF               	movf	indf2,w,c
  2344  0013B0  010F               	movlb	15	; () banked
  2345  0013B2  6F28               	movwf	40,b	;volatile
  2346                           
  2347                           ; BSR set to: 15
  2348                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  2349  0013B4  0100               	movlb	0	; () banked
  2350  0013B6  EE20 F003          	lfsr	2,3
  2351  0013BA  5177               	movf	CANsendMessage@data& (0+255),w,b
  2352  0013BC  26D9               	addwf	fsr2l,f,c
  2353  0013BE  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2354  0013C0  22DA               	addwfc	fsr2h,f,c
  2355  0013C2  50DF               	movf	indf2,w,c
  2356  0013C4  010F               	movlb	15	; () banked
  2357  0013C6  6F29               	movwf	41,b	;volatile
  2358                           
  2359                           ; BSR set to: 15
  2360                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  2361  0013C8  0100               	movlb	0	; () banked
  2362  0013CA  EE20 F004          	lfsr	2,4
  2363  0013CE  5177               	movf	CANsendMessage@data& (0+255),w,b
  2364  0013D0  26D9               	addwf	fsr2l,f,c
  2365  0013D2  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2366  0013D4  22DA               	addwfc	fsr2h,f,c
  2367  0013D6  50DF               	movf	indf2,w,c
  2368  0013D8  010F               	movlb	15	; () banked
  2369  0013DA  6F2A               	movwf	42,b	;volatile
  2370                           
  2371                           ; BSR set to: 15
  2372                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  2373  0013DC  0100               	movlb	0	; () banked
  2374  0013DE  EE20 F005          	lfsr	2,5
  2375  0013E2  5177               	movf	CANsendMessage@data& (0+255),w,b
  2376  0013E4  26D9               	addwf	fsr2l,f,c
  2377  0013E6  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2378  0013E8  22DA               	addwfc	fsr2h,f,c
  2379  0013EA  50DF               	movf	indf2,w,c
  2380  0013EC  010F               	movlb	15	; () banked
  2381  0013EE  6F2B               	movwf	43,b	;volatile
  2382                           
  2383                           ; BSR set to: 15
  2384                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  2385  0013F0  0100               	movlb	0	; () banked
  2386  0013F2  EE20 F006          	lfsr	2,6
  2387  0013F6  5177               	movf	CANsendMessage@data& (0+255),w,b
  2388  0013F8  26D9               	addwf	fsr2l,f,c
  2389  0013FA  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2390  0013FC  22DA               	addwfc	fsr2h,f,c
  2391  0013FE  50DF               	movf	indf2,w,c
  2392  001400  010F               	movlb	15	; () banked
  2393  001402  6F2C               	movwf	44,b	;volatile
  2394                           
  2395                           ; BSR set to: 15
  2396                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  2397  001404  0100               	movlb	0	; () banked
  2398  001406  EE20 F007          	lfsr	2,7
  2399  00140A  5177               	movf	CANsendMessage@data& (0+255),w,b
  2400  00140C  26D9               	addwf	fsr2l,f,c
  2401  00140E  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2402  001410  22DA               	addwfc	fsr2h,f,c
  2403  001412  50DF               	movf	indf2,w,c
  2404  001414  010F               	movlb	15	; () banked
  2405  001416  6F2D               	movwf	45,b	;volatile
  2406                           
  2407                           ; BSR set to: 15
  2408                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  2409  001418  010F               	movlb	15	; () banked
  2410  00141A  8720               	bsf	32,3,b	;volatile
  2411                           
  2412                           ; BSR set to: 15
  2413                           ;inc\CANlib.h: 521: return;
  2414  00141C  0012               	return	
  2415  00141E                     __end_of_CANsendMessage:
  2416                           	opt stack 0
  2417                           tblptru	equ	0xFF8
  2418                           tblptrh	equ	0xFF7
  2419                           tblptrl	equ	0xFF6
  2420                           tablat	equ	0xFF5
  2421                           postinc0	equ	0xFEE
  2422                           wreg	equ	0xFE8
  2423                           postdec1	equ	0xFE5
  2424                           fsr1l	equ	0xFE1
  2425                           indf2	equ	0xFDF
  2426                           fsr2h	equ	0xFDA
  2427                           fsr2l	equ	0xFD9
  2428                           status	equ	0xFD8
  2429                           
  2430 ;; *************** function _CANisTxReady *****************
  2431 ;; Defined at:
  2432 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;		None
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;		None
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      unsigned char 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2446 ;;      Params:         0       0       0       0
  2447 ;;      Locals:         0       1       0       0
  2448 ;;      Temps:          0       0       0       0
  2449 ;;      Totals:         0       1       0       0
  2450 ;;Total ram usage:        1 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:    4
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_send_data
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text3
  2461  002B94                     __ptext3:
  2462                           	opt stack 0
  2463  002B94                     _CANisTxReady:
  2464                           	opt stack 25
  2465                           
  2466                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2467                           
  2468                           ; BSR set to: 15
  2469                           ;incstack = 0
  2470  002B94  0E01               	movlw	1
  2471  002B96  0100               	movlb	0	; () banked
  2472  002B98  6F73               	movwf	_CANisTxReady$2823& (0+255),b
  2473                           
  2474                           ; BSR set to: 0
  2475  002B9A  010F               	movlb	15	; () banked
  2476  002B9C  A740               	btfss	64,3,b	;volatile
  2477  002B9E  D009               	goto	l542
  2478                           
  2479                           ; BSR set to: 15
  2480  002BA0  010F               	movlb	15	; () banked
  2481  002BA2  A730               	btfss	48,3,b	;volatile
  2482  002BA4  D006               	goto	l542
  2483                           
  2484                           ; BSR set to: 15
  2485  002BA6  010F               	movlb	15	; () banked
  2486  002BA8  A720               	btfss	32,3,b	;volatile
  2487  002BAA  D003               	goto	l542
  2488                           
  2489                           ; BSR set to: 15
  2490  002BAC  0E00               	movlw	0
  2491  002BAE  0100               	movlb	0	; () banked
  2492  002BB0  6F73               	movwf	_CANisTxReady$2823& (0+255),b
  2493  002BB2                     l542:
  2494  002BB2  0100               	movlb	0	; () banked
  2495  002BB4  5173               	movf	_CANisTxReady$2823& (0+255),w,b
  2496  002BB6  0012               	return	
  2497  002BB8                     __end_of_CANisTxReady:
  2498                           	opt stack 0
  2499                           tblptru	equ	0xFF8
  2500                           tblptrh	equ	0xFF7
  2501                           tblptrl	equ	0xFF6
  2502                           tablat	equ	0xFF5
  2503                           postinc0	equ	0xFEE
  2504                           wreg	equ	0xFE8
  2505                           postdec1	equ	0xFE5
  2506                           fsr1l	equ	0xFE1
  2507                           indf2	equ	0xFDF
  2508                           fsr2h	equ	0xFDA
  2509                           fsr2l	equ	0xFD9
  2510                           status	equ	0xFD8
  2511                           
  2512 ;; *************** function _delay_ms *****************
  2513 ;; Defined at:
  2514 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  value_ms        2   25[BANK0 ] unsigned int 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;		None
  2519 ;; Return value:  Size  Location     Type
  2520 ;;		None               void
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2528 ;;      Params:         0       2       0       0
  2529 ;;      Locals:         0       0       0       0
  2530 ;;      Temps:          0       0       0       0
  2531 ;;      Totals:         0       2       0       0
  2532 ;;Total ram usage:        2 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    5
  2535 ;; This function calls:
  2536 ;;		___wmul
  2537 ;; This function is called by:
  2538 ;;		_main
  2539 ;;		_delay_s
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text4
  2544  002AFE                     __ptext4:
  2545                           	opt stack 0
  2546  002AFE                     _delay_ms:
  2547                           	opt stack 25
  2548                           
  2549                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  2550                           
  2551                           ; BSR set to: 0
  2552                           ;incstack = 0
  2553  002AFE  C0BD  F073         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  2554  002B02  0100               	movlb	0	; () banked
  2555  002B04  6B74               	clrf	(___wmul@multiplier+1)& (0+255),b
  2556  002B06  C079  F075         	movff	delay_ms@value_ms,___wmul@multiplicand
  2557  002B0A  C07A  F076         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  2558  002B0E  EC9C  F015         	call	___wmul	;wreg free
  2559  002B12  C073  F0B3         	movff	?___wmul,_clock_counter_reference	;volatile
  2560  002B16  C074  F0B4         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  2561                           
  2562                           ;src\delay.c: 75: while (clock_counter_reference) {
  2563  002B1A  D007               	goto	l555
  2564  002B1C                     l3636:
  2565                           
  2566                           ;src\delay.c: 85: _delay(240);
  2567  002B1C  0E50               	movlw	80
  2568  002B1E                     u4917:
  2569  002B1E  2EE8               	decfsz	wreg,f,c
  2570  002B20  D7FE               	goto	u4917
  2571                           
  2572                           ;src\delay.c: 88: clock_counter_reference--;
  2573  002B22  0100               	movlb	0	; () banked
  2574  002B24  07B3               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  2575  002B26  A0D8               	btfss	status,0,c
  2576  002B28  07B4               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  2577  002B2A                     l555:
  2578  002B2A  0100               	movlb	0	; () banked
  2579  002B2C  51B3               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  2580  002B2E  0100               	movlb	0	; () banked
  2581  002B30  11B4               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  2582  002B32  B4D8               	btfsc	status,2,c
  2583  002B34  0012               	return	
  2584  002B36  D7F2               	goto	l3636
  2585  002B38                     __end_of_delay_ms:
  2586                           	opt stack 0
  2587                           tblptru	equ	0xFF8
  2588                           tblptrh	equ	0xFF7
  2589                           tblptrl	equ	0xFF6
  2590                           tablat	equ	0xFF5
  2591                           postinc0	equ	0xFEE
  2592                           wreg	equ	0xFE8
  2593                           postdec1	equ	0xFE5
  2594                           fsr1l	equ	0xFE1
  2595                           indf2	equ	0xFDF
  2596                           fsr2h	equ	0xFDA
  2597                           fsr2l	equ	0xFD9
  2598                           status	equ	0xFD8
  2599                           
  2600 ;; *************** function ___wmul *****************
  2601 ;; Defined at:
  2602 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  multiplier      2   19[BANK0 ] unsigned int 
  2605 ;;  multiplicand    2   21[BANK0 ] unsigned int 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  product         2   23[BANK0 ] unsigned int 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  2   19[BANK0 ] unsigned int 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0, prodl, prodh
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2617 ;;      Params:         0       4       0       0
  2618 ;;      Locals:         0       2       0       0
  2619 ;;      Temps:          0       0       0       0
  2620 ;;      Totals:         0       6       0       0
  2621 ;;Total ram usage:        6 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:    4
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_delay_ms
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text5
  2632  002B38                     __ptext5:
  2633                           	opt stack 0
  2634  002B38                     ___wmul:
  2635                           	opt stack 25
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;incstack = 0
  2639  002B38  0100               	movlb	0	; () banked
  2640  002B3A  5173               	movf	___wmul@multiplier& (0+255),w,b
  2641  002B3C  0100               	movlb	0	; () banked
  2642  002B3E  0375               	mulwf	___wmul@multiplicand& (0+255),b
  2643  002B40  CFF3 F077          	movff	prodl,___wmul@product
  2644  002B44  CFF4 F078          	movff	prodh,___wmul@product+1
  2645  002B48  0100               	movlb	0	; () banked
  2646  002B4A  5173               	movf	___wmul@multiplier& (0+255),w,b
  2647  002B4C  0100               	movlb	0	; () banked
  2648  002B4E  0376               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2649  002B50  50F3               	movf	prodl,w,c
  2650  002B52  0100               	movlb	0	; () banked
  2651  002B54  2778               	addwf	(___wmul@product+1)& (0+255),f,b
  2652  002B56  0100               	movlb	0	; () banked
  2653  002B58  5174               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2654  002B5A  0100               	movlb	0	; () banked
  2655  002B5C  0375               	mulwf	___wmul@multiplicand& (0+255),b
  2656  002B5E  50F3               	movf	prodl,w,c
  2657  002B60  0100               	movlb	0	; () banked
  2658  002B62  2778               	addwf	(___wmul@product+1)& (0+255),f,b
  2659                           
  2660                           ; BSR set to: 0
  2661  002B64  C077  F073         	movff	___wmul@product,?___wmul
  2662  002B68  C078  F074         	movff	___wmul@product+1,?___wmul+1
  2663  002B6C  0012               	return	
  2664  002B6E                     __end_of___wmul:
  2665                           	opt stack 0
  2666                           tblptru	equ	0xFF8
  2667                           tblptrh	equ	0xFF7
  2668                           tblptrl	equ	0xFF6
  2669                           tablat	equ	0xFF5
  2670                           prodh	equ	0xFF4
  2671                           prodl	equ	0xFF3
  2672                           postinc0	equ	0xFEE
  2673                           wreg	equ	0xFE8
  2674                           postdec1	equ	0xFE5
  2675                           fsr1l	equ	0xFE1
  2676                           indf2	equ	0xFDF
  2677                           fsr2h	equ	0xFDA
  2678                           fsr2l	equ	0xFD9
  2679                           status	equ	0xFD8
  2680                           
  2681 ;; *************** function _configurazione_iniziale *****************
  2682 ;; Defined at:
  2683 ;;		line 180 in file "newmain.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;		None
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;		None
  2688 ;; Return value:  Size  Location     Type
  2689 ;;		None               void
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0, cstack
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2697 ;;      Params:         0       0       0       0
  2698 ;;      Locals:         0       0       0       0
  2699 ;;      Temps:          0       0       0       0
  2700 ;;      Totals:         0       0       0       0
  2701 ;;Total ram usage:        0 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:    6
  2704 ;; This function calls:
  2705 ;;		_CANInitialize
  2706 ;;		_OpenADC
  2707 ;; This function is called by:
  2708 ;;		_main
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text6
  2713  0027E4                     __ptext6:
  2714                           	opt stack 0
  2715  0027E4                     _configurazione_iniziale:
  2716                           	opt stack 24
  2717                           
  2718                           ;newmain.c: 185: RCONbits.IPEN = 1;
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;incstack = 0
  2722  0027E4  8ED0               	bsf	4048,7,c	;volatile
  2723                           
  2724                           ;newmain.c: 186: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SA
      +                          MPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2725  0027E6  0E06               	movlw	6
  2726  0027E8  0100               	movlb	0	; () banked
  2727  0027EA  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2728  0027EC  0E05               	movlw	5
  2729  0027EE  0100               	movlb	0	; () banked
  2730  0027F0  6F82               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2731  0027F2  0E01               	movlw	1
  2732  0027F4  0100               	movlb	0	; () banked
  2733  0027F6  6F83               	movwf	CANInitialize@SJW& (0+255),b
  2734  0027F8  0E03               	movlw	3
  2735  0027FA  0100               	movlb	0	; () banked
  2736  0027FC  6F84               	movwf	CANInitialize@BRP& (0+255),b
  2737  0027FE  0E9D               	movlw	157
  2738  002800  0100               	movlb	0	; () banked
  2739  002802  6F85               	movwf	CANInitialize@flags& (0+255),b
  2740  002804  0E04               	movlw	4
  2741  002806  ECAC  F011         	call	_CANInitialize
  2742                           
  2743                           ;newmain.c: 191: PIR3bits.RXB1IF = 0;
  2744  00280A  92A4               	bcf	4004,1,c	;volatile
  2745                           
  2746                           ;newmain.c: 192: PIR3bits.RXB0IF = 0;
  2747  00280C  90A4               	bcf	4004,0,c	;volatile
  2748                           
  2749                           ;newmain.c: 193: INTCONbits.TMR0IF = 0;
  2750  00280E  94F2               	bcf	intcon,2,c	;volatile
  2751                           
  2752                           ;newmain.c: 199: IPR3bits.RXB1IP = 0;
  2753  002810  92A5               	bcf	4005,1,c	;volatile
  2754                           
  2755                           ;newmain.c: 200: IPR3bits.RXB0IP = 0;
  2756  002812  90A5               	bcf	4005,0,c	;volatile
  2757                           
  2758                           ;newmain.c: 201: INTCON2bits.TMR0IP = 1;
  2759  002814  84F1               	bsf	intcon2,2,c	;volatile
  2760                           
  2761                           ;newmain.c: 207: RCONbits.IPEN = 1;
  2762  002816  8ED0               	bsf	4048,7,c	;volatile
  2763                           
  2764                           ;newmain.c: 208: PIE3bits.RXB1IE = 1;
  2765  002818  82A3               	bsf	4003,1,c	;volatile
  2766                           
  2767                           ;newmain.c: 209: PIE3bits.RXB0IE = 1;
  2768  00281A  80A3               	bsf	4003,0,c	;volatile
  2769                           
  2770                           ;newmain.c: 210: INTCONbits.TMR0IE = 1;
  2771  00281C  8AF2               	bsf	intcon,5,c	;volatile
  2772                           
  2773                           ;newmain.c: 212: INTCONbits.GIEH = 1;
  2774  00281E  8EF2               	bsf	intcon,7,c	;volatile
  2775                           
  2776                           ;newmain.c: 213: INTCONbits.GIEL = 1;
  2777  002820  8CF2               	bsf	intcon,6,c	;volatile
  2778                           
  2779                           ;newmain.c: 220: OpenADC(0b11011111 & 0b11111111 & 0b11111101, 0b10000111 & 0b11111100 &
      +                           0b01111111, 0b11111110);
  2780  002822  0E04               	movlw	4
  2781  002824  0100               	movlb	0	; () banked
  2782  002826  6F73               	movwf	OpenADC@config2& (0+255),b
  2783  002828  0EFE               	movlw	254
  2784  00282A  0100               	movlb	0	; () banked
  2785  00282C  6F74               	movwf	OpenADC@portconfig& (0+255),b
  2786  00282E  0EDD               	movlw	221
  2787  002830  EC32  F014         	call	_OpenADC
  2788                           
  2789                           ;newmain.c: 231: T0CONbits.TMR0ON = 1;
  2790  002834  8ED5               	bsf	4053,7,c	;volatile
  2791                           
  2792                           ;newmain.c: 233: PORTCbits.RC0 = 0;
  2793  002836  9082               	bcf	3970,0,c	;volatile
  2794                           
  2795                           ;newmain.c: 237: LATA = 0x00;
  2796  002838  0E00               	movlw	0
  2797  00283A  6E89               	movwf	3977,c	;volatile
  2798                           
  2799                           ;newmain.c: 238: TRISA = 0b11111101;
  2800  00283C  0EFD               	movlw	253
  2801  00283E  6E92               	movwf	3986,c	;volatile
  2802                           
  2803                           ;newmain.c: 240: LATB = 0x00;
  2804  002840  0E00               	movlw	0
  2805  002842  6E8A               	movwf	3978,c	;volatile
  2806                           
  2807                           ;newmain.c: 241: TRISB = 0b11111011;
  2808  002844  0EFB               	movlw	251
  2809  002846  6E93               	movwf	3987,c	;volatile
  2810                           
  2811                           ;newmain.c: 243: LATC = 0x00;
  2812  002848  0E00               	movlw	0
  2813  00284A  6E8B               	movwf	3979,c	;volatile
  2814                           
  2815                           ;newmain.c: 244: TRISC = 0x00;
  2816  00284C  0E00               	movlw	0
  2817  00284E  6E94               	movwf	3988,c	;volatile
  2818                           
  2819                           ;newmain.c: 246: LATD = 0x00;
  2820  002850  0E00               	movlw	0
  2821  002852  6E8C               	movwf	3980,c	;volatile
  2822                           
  2823                           ;newmain.c: 247: TRISD = 0x00;
  2824  002854  0E00               	movlw	0
  2825  002856  6E95               	movwf	3989,c	;volatile
  2826                           
  2827                           ;newmain.c: 249: LATE = 0x00;
  2828  002858  0E00               	movlw	0
  2829  00285A  6E8D               	movwf	3981,c	;volatile
  2830                           
  2831                           ;newmain.c: 250: TRISE = 0xFF;
  2832  00285C  6896               	setf	3990,c	;volatile
  2833                           
  2834                           ;newmain.c: 251: T0CON = 0x80;
  2835  00285E  0E80               	movlw	128
  2836  002860  6ED5               	movwf	4053,c	;volatile
  2837  002862  0012               	return		;funcret
  2838  002864                     __end_of_configurazione_iniziale:
  2839                           	opt stack 0
  2840                           tblptru	equ	0xFF8
  2841                           tblptrh	equ	0xFF7
  2842                           tblptrl	equ	0xFF6
  2843                           tablat	equ	0xFF5
  2844                           prodh	equ	0xFF4
  2845                           prodl	equ	0xFF3
  2846                           intcon	equ	0xFF2
  2847                           intcon2	equ	0xFF1
  2848                           postinc0	equ	0xFEE
  2849                           wreg	equ	0xFE8
  2850                           postdec1	equ	0xFE5
  2851                           fsr1l	equ	0xFE1
  2852                           indf2	equ	0xFDF
  2853                           fsr2h	equ	0xFDA
  2854                           fsr2l	equ	0xFD9
  2855                           status	equ	0xFD8
  2856                           
  2857 ;; *************** function _OpenADC *****************
  2858 ;; Defined at:
  2859 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcopen.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  config          1    wreg     unsigned char 
  2862 ;;  config2         1   19[BANK0 ] unsigned char 
  2863 ;;  portconfig      1   20[BANK0 ] unsigned char 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  config          1   23[BANK0 ] unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;		None               void
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2875 ;;      Params:         0       2       0       0
  2876 ;;      Locals:         0       1       0       0
  2877 ;;      Temps:          0       2       0       0
  2878 ;;      Totals:         0       5       0       0
  2879 ;;Total ram usage:        5 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    4
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_configurazione_iniziale
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text7
  2890  002864                     __ptext7:
  2891                           	opt stack 0
  2892  002864                     _OpenADC:
  2893                           	opt stack 25
  2894                           
  2895                           ;incstack = 0
  2896                           ;OpenADC@config stored from wreg
  2897  002864  0100               	movlb	0	; () banked
  2898  002866  6F77               	movwf	OpenADC@config& (0+255),b
  2899  002868  0E00               	movlw	0
  2900  00286A  6EC2               	movwf	4034,c	;volatile
  2901  00286C  0E00               	movlw	0
  2902  00286E  6EC0               	movwf	4032,c	;volatile
  2903  002870  0100               	movlb	0	; () banked
  2904  002872  90D8               	bcf	status,0,c
  2905  002874  3173               	rrcf	OpenADC@config2& (0+255),w,b
  2906  002876  0B3C               	andlw	60
  2907  002878  6EC2               	movwf	4034,c	;volatile
  2908                           
  2909                           ; BSR set to: 0
  2910  00287A  C073  F075         	movff	OpenADC@config2,??_OpenADC
  2911  00287E  0100               	movlb	0	; () banked
  2912  002880  3B75               	swapf	??_OpenADC& (0+255),f,b
  2913  002882  0EF0               	movlw	240
  2914  002884  1775               	andwf	??_OpenADC& (0+255),f,b
  2915  002886  0E30               	movlw	48
  2916  002888  0100               	movlb	0	; () banked
  2917  00288A  1775               	andwf	??_OpenADC& (0+255),f,b
  2918  00288C  0100               	movlb	0	; () banked
  2919  00288E  5174               	movf	OpenADC@portconfig& (0+255),w,b
  2920  002890  0B0F               	andlw	15
  2921  002892  0100               	movlb	0	; () banked
  2922  002894  1175               	iorwf	??_OpenADC& (0+255),w,b
  2923  002896  6EC1               	movwf	4033,c	;volatile
  2924                           
  2925                           ; BSR set to: 0
  2926  002898  C077  F075         	movff	OpenADC@config,??_OpenADC
  2927  00289C  0100               	movlb	0	; () banked
  2928  00289E  90D8               	bcf	status,0,c
  2929  0028A0  3775               	rlcf	??_OpenADC& (0+255),f,b
  2930  0028A2  0100               	movlb	0	; () banked
  2931  0028A4  90D8               	bcf	status,0,c
  2932  0028A6  3775               	rlcf	??_OpenADC& (0+255),f,b
  2933  0028A8  0E38               	movlw	56
  2934  0028AA  0100               	movlb	0	; () banked
  2935  0028AC  1775               	andwf	??_OpenADC& (0+255),f,b
  2936  0028AE  C077  F076         	movff	OpenADC@config,??_OpenADC+1
  2937  0028B2  0100               	movlb	0	; () banked
  2938  0028B4  3B76               	swapf	(??_OpenADC+1)& (0+255),f,b
  2939  0028B6  0E0F               	movlw	15
  2940  0028B8  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  2941  0028BA  0E07               	movlw	7
  2942  0028BC  0100               	movlb	0	; () banked
  2943  0028BE  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  2944  0028C0  0100               	movlb	0	; () banked
  2945  0028C2  5177               	movf	OpenADC@config& (0+255),w,b
  2946  0028C4  0B80               	andlw	128
  2947  0028C6  0100               	movlb	0	; () banked
  2948  0028C8  1176               	iorwf	(??_OpenADC+1)& (0+255),w,b
  2949  0028CA  0100               	movlb	0	; () banked
  2950  0028CC  1175               	iorwf	??_OpenADC& (0+255),w,b
  2951  0028CE  6EC0               	movwf	4032,c	;volatile
  2952                           
  2953                           ; BSR set to: 0
  2954  0028D0  0100               	movlb	0	; () banked
  2955  0028D2  AF73               	btfss	OpenADC@config2& (0+255),7,b
  2956  0028D4  D003               	goto	l677
  2957                           
  2958                           ; BSR set to: 0
  2959  0028D6  9C9E               	bcf	3998,6,c	;volatile
  2960  0028D8  8C9D               	bsf	3997,6,c	;volatile
  2961  0028DA  8CF2               	bsf	intcon,6,c	;volatile
  2962  0028DC                     l677:
  2963                           
  2964                           ; BSR set to: 0
  2965  0028DC  80C2               	bsf	4034,0,c	;volatile
  2966                           
  2967                           ; BSR set to: 0
  2968  0028DE  0012               	return		;funcret
  2969  0028E0                     __end_of_OpenADC:
  2970                           	opt stack 0
  2971                           tblptru	equ	0xFF8
  2972                           tblptrh	equ	0xFF7
  2973                           tblptrl	equ	0xFF6
  2974                           tablat	equ	0xFF5
  2975                           prodh	equ	0xFF4
  2976                           prodl	equ	0xFF3
  2977                           intcon	equ	0xFF2
  2978                           intcon2	equ	0xFF1
  2979                           postinc0	equ	0xFEE
  2980                           wreg	equ	0xFE8
  2981                           postdec1	equ	0xFE5
  2982                           fsr1l	equ	0xFE1
  2983                           indf2	equ	0xFDF
  2984                           fsr2h	equ	0xFDA
  2985                           fsr2l	equ	0xFD9
  2986                           status	equ	0xFD8
  2987                           
  2988 ;; *************** function _CANInitialize *****************
  2989 ;; Defined at:
  2990 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  propSeg         1    wreg     unsigned char 
  2993 ;;  phaseSeg1       1   33[BANK0 ] unsigned char 
  2994 ;;  phaseSeg2       1   34[BANK0 ] unsigned char 
  2995 ;;  SJW             1   35[BANK0 ] unsigned char 
  2996 ;;  BRP             1   36[BANK0 ] unsigned char 
  2997 ;;  flags           1   37[BANK0 ] enum E16844
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;  propSeg         1   42[BANK0 ] unsigned char 
  3000 ;;  FilterConfig    1   44[BANK0 ] unsigned char 
  3001 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  3002 ;; Return value:  Size  Location     Type
  3003 ;;		None               void
  3004 ;; Registers used:
  3005 ;;		wreg, status,2, status,0, cstack
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3011 ;;      Params:         0       5       0       0
  3012 ;;      Locals:         0       3       0       0
  3013 ;;      Temps:          0       4       0       0
  3014 ;;      Totals:         0      12       0       0
  3015 ;;Total ram usage:       12 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; Hardware stack levels required when called:    5
  3018 ;; This function calls:
  3019 ;;		_CANOperationMode
  3020 ;;		_CANSetFilter
  3021 ;;		_CANSetMask
  3022 ;; This function is called by:
  3023 ;;		_configurazione_iniziale
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text8
  3028  002358                     __ptext8:
  3029                           	opt stack 0
  3030  002358                     _CANInitialize:
  3031                           	opt stack 24
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;incstack = 0
  3035                           ;CANInitialize@propSeg stored from wreg
  3036  002358  0100               	movlb	0	; () banked
  3037  00235A  6F8A               	movwf	CANInitialize@propSeg& (0+255),b
  3038                           
  3039                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
  3040                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
  3041                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
  3042  00235C  0E80               	movlw	128
  3043  00235E  ECDC  F015         	call	_CANOperationMode
  3044                           
  3045                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
  3046  002362  0E00               	movlw	0
  3047  002364  6E70               	movwf	3952,c	;volatile
  3048                           
  3049                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
  3050  002366  0E00               	movlw	0
  3051  002368  6E71               	movwf	3953,c	;volatile
  3052                           
  3053                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
  3054  00236A  0E00               	movlw	0
  3055  00236C  6E72               	movwf	3954,c	;volatile
  3056                           
  3057                           ;inc\CANlib.h: 230: SJW= SJW << 6;
  3058  00236E  0100               	movlb	0	; () banked
  3059  002370  4183               	rrncf	CANInitialize@SJW& (0+255),w,b
  3060  002372  42E8               	rrncf	wreg,f,c
  3061  002374  0BC0               	andlw	192
  3062  002376  0100               	movlb	0	; () banked
  3063  002378  6F83               	movwf	CANInitialize@SJW& (0+255),b
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
  3067  00237A  0100               	movlb	0	; () banked
  3068  00237C  5183               	movf	CANInitialize@SJW& (0+255),w,b
  3069  00237E  1270               	iorwf	3952,f,c	;volatile
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
  3073  002380  0100               	movlb	0	; () banked
  3074  002382  5184               	movf	CANInitialize@BRP& (0+255),w,b
  3075  002384  1270               	iorwf	3952,f,c	;volatile
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
  3079  002386  0100               	movlb	0	; () banked
  3080  002388  518A               	movf	CANInitialize@propSeg& (0+255),w,b
  3081  00238A  1271               	iorwf	3953,f,c	;volatile
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
  3085  00238C  0100               	movlb	0	; () banked
  3086  00238E  3981               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3087  002390  42E8               	rrncf	wreg,f,c
  3088  002392  0BF8               	andlw	248
  3089  002394  0100               	movlb	0	; () banked
  3090  002396  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
  3094  002398  0100               	movlb	0	; () banked
  3095  00239A  5181               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3096  00239C  1271               	iorwf	3953,f,c	;volatile
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3100  00239E  0100               	movlb	0	; () banked
  3101  0023A0  A585               	btfss	CANInitialize@flags& (0+255),2,b
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
  3105  0023A2  8C71               	bsf	3953,6,c	;volatile
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3109  0023A4  0100               	movlb	0	; () banked
  3110  0023A6  B185               	btfsc	CANInitialize@flags& (0+255),0,b
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
  3114  0023A8  8E71               	bsf	3953,7,c	;volatile
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
  3118                           
  3119                           ; BSR set to: 0
  3120  0023AA  0100               	movlb	0	; () banked
  3121  0023AC  5182               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3122  0023AE  1272               	iorwf	3954,f,c	;volatile
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3126  0023B0  0100               	movlb	0	; () banked
  3127  0023B2  B385               	btfsc	CANInitialize@flags& (0+255),1,b
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
  3131  0023B4  8C72               	bsf	3954,6,c	;volatile
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3135                           
  3136                           ; BSR set to: 0
  3137  0023B6  0100               	movlb	0	; () banked
  3138  0023B8  5185               	movf	CANInitialize@flags& (0+255),w,b
  3139  0023BA  0B60               	andlw	96
  3140  0023BC  6E60               	movwf	3936,c	;volatile
  3141                           
  3142                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3143  0023BE  0100               	movlb	0	; () banked
  3144  0023C0  5185               	movf	CANInitialize@flags& (0+255),w,b
  3145  0023C2  0B10               	andlw	16
  3146  0023C4  0AFF               	xorlw	255
  3147  0023C6  B4D8               	btfsc	status,2,c
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
  3151  0023C8  8460               	bsf	3936,2,c	;volatile
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
  3155  0023CA  CF60 FF50          	movff	3936,3920	;volatile
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3159  0023CE  0E00               	movlw	0
  3160  0023D0  0100               	movlb	0	; () banked
  3161  0023D2  6F73               	movwf	CANSetMask@mask& (0+255),b
  3162  0023D4  0E00               	movlw	0
  3163  0023D6  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  3164  0023D8  0E00               	movlw	0
  3165  0023DA  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3166  0023DC  0E00               	movlw	0
  3167  0023DE  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3168  0023E0  0EF7               	movlw	247
  3169  0023E2  0100               	movlb	0	; () banked
  3170  0023E4  6F77               	movwf	CANSetMask@type& (0+255),b
  3171  0023E6  0E01               	movlw	1
  3172  0023E8  ECDD  F00F         	call	_CANSetMask
  3173                           
  3174                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3175  0023EC  0E00               	movlw	0
  3176  0023EE  0100               	movlb	0	; () banked
  3177  0023F0  6F73               	movwf	CANSetMask@mask& (0+255),b
  3178  0023F2  0E00               	movlw	0
  3179  0023F4  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  3180  0023F6  0E00               	movlw	0
  3181  0023F8  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3182  0023FA  0E00               	movlw	0
  3183  0023FC  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3184  0023FE  0EF7               	movlw	247
  3185  002400  0100               	movlb	0	; () banked
  3186  002402  6F77               	movwf	CANSetMask@type& (0+255),b
  3187  002404  0E02               	movlw	2
  3188  002406  ECDD  F00F         	call	_CANSetMask
  3189                           
  3190                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3191  00240A  D00F               	goto	l3180
  3192  00240C                     l3174:
  3193                           
  3194                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3195  00240C  0EF7               	movlw	247
  3196  00240E  0100               	movlb	0	; () banked
  3197  002410  6F8B               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3198  002412  D007               	goto	l3176
  3199  002414                     l344:
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3203  002414  0100               	movlb	0	; () banked
  3204  002416  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3205                           
  3206                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3207  002418  0100               	movlb	0	; () banked
  3208  00241A  698C               	setf	CANInitialize@FilterConfig2& (0+255),b
  3209                           
  3210                           ;inc\CANlib.h: 274: break;
  3211  00241C  D028               	goto	l3182
  3212  00241E                     l345:
  3213                           
  3214                           ; BSR set to: 0
  3215                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3216  00241E  0100               	movlb	0	; () banked
  3217  002420  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3218  002422                     l3176:
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3222  002422  0EF7               	movlw	247
  3223  002424  0100               	movlb	0	; () banked
  3224  002426  6F8C               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;inc\CANlib.h: 279: }
  3228                           
  3229                           ;inc\CANlib.h: 278: break;
  3230  002428  D022               	goto	l3182
  3231  00242A                     l3180:
  3232  00242A  0E9F               	movlw	159
  3233  00242C  0100               	movlb	0	; () banked
  3234  00242E  6F86               	movwf	??_CANInitialize& (0+255),b
  3235  002430  0EFF               	movlw	255
  3236  002432  0100               	movlb	0	; () banked
  3237  002434  6F87               	movwf	(??_CANInitialize+1)& (0+255),b
  3238  002436  0100               	movlb	0	; () banked
  3239  002438  5185               	movf	CANInitialize@flags& (0+255),w,b
  3240  00243A  0B60               	andlw	96
  3241  00243C  0100               	movlb	0	; () banked
  3242  00243E  6F88               	movwf	(??_CANInitialize+2)& (0+255),b
  3243  002440  6B89               	clrf	(??_CANInitialize+3)& (0+255),b
  3244  002442  0100               	movlb	0	; () banked
  3245  002444  5186               	movf	??_CANInitialize& (0+255),w,b
  3246  002446  0100               	movlb	0	; () banked
  3247  002448  1388               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3248  00244A  0100               	movlb	0	; () banked
  3249  00244C  5187               	movf	(??_CANInitialize+1)& (0+255),w,b
  3250  00244E  0100               	movlb	0	; () banked
  3251  002450  1389               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3252                           
  3253                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3254                           ; Switch size 1, requested type "space"
  3255                           ; Number of cases is 1, Range of values is 0 to 0
  3256                           ; switch strategies available:
  3257                           ; Name         Instructions Cycles
  3258                           ; simple_byte            4     3 (average)
  3259                           ;	Chosen strategy is simple_byte
  3260  002452  0100               	movlb	0	; () banked
  3261  002454  5189               	movf	(??_CANInitialize+3)& (0+255),w,b
  3262  002456  0A00               	xorlw	0	; case 0
  3263  002458  A4D8               	btfss	status,2,c
  3264  00245A  D7E1               	goto	l345
  3265                           
  3266                           ; BSR set to: 0
  3267                           ; Switch size 1, requested type "space"
  3268                           ; Number of cases is 2, Range of values is 191 to 223
  3269                           ; switch strategies available:
  3270                           ; Name         Instructions Cycles
  3271                           ; simple_byte            7     4 (average)
  3272                           ;	Chosen strategy is simple_byte
  3273  00245C  0100               	movlb	0	; () banked
  3274  00245E  5188               	movf	(??_CANInitialize+2)& (0+255),w,b
  3275  002460  0ABF               	xorlw	191	; case 191
  3276  002462  B4D8               	btfsc	status,2,c
  3277  002464  D7D7               	goto	l344
  3278  002466  0A60               	xorlw	96	; case 223
  3279  002468  B4D8               	btfsc	status,2,c
  3280  00246A  D7D0               	goto	l3174
  3281  00246C  D7D8               	goto	l345
  3282  00246E                     l3182:
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3286  00246E  0E00               	movlw	0
  3287  002470  0100               	movlb	0	; () banked
  3288  002472  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3289  002474  0E00               	movlw	0
  3290  002476  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3291  002478  0E00               	movlw	0
  3292  00247A  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3293  00247C  0E00               	movlw	0
  3294  00247E  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3295  002480  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3296  002484  0E00               	movlw	0
  3297  002486  ECC6  F000         	call	_CANSetFilter
  3298                           
  3299                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3300  00248A  0E00               	movlw	0
  3301  00248C  0100               	movlb	0	; () banked
  3302  00248E  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3303  002490  0E00               	movlw	0
  3304  002492  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3305  002494  0E00               	movlw	0
  3306  002496  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3307  002498  0E00               	movlw	0
  3308  00249A  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3309  00249C  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3310  0024A0  0E01               	movlw	1
  3311  0024A2  ECC6  F000         	call	_CANSetFilter
  3312                           
  3313                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3314  0024A6  0E00               	movlw	0
  3315  0024A8  0100               	movlb	0	; () banked
  3316  0024AA  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3317  0024AC  0E00               	movlw	0
  3318  0024AE  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3319  0024B0  0E00               	movlw	0
  3320  0024B2  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3321  0024B4  0E00               	movlw	0
  3322  0024B6  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3323  0024B8  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3324  0024BC  0E02               	movlw	2
  3325  0024BE  ECC6  F000         	call	_CANSetFilter
  3326                           
  3327                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3328  0024C2  0E00               	movlw	0
  3329  0024C4  0100               	movlb	0	; () banked
  3330  0024C6  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3331  0024C8  0E00               	movlw	0
  3332  0024CA  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3333  0024CC  0E00               	movlw	0
  3334  0024CE  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3335  0024D0  0E00               	movlw	0
  3336  0024D2  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3337  0024D4  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3338  0024D8  0E03               	movlw	3
  3339  0024DA  ECC6  F000         	call	_CANSetFilter
  3340                           
  3341                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3342  0024DE  0E00               	movlw	0
  3343  0024E0  0100               	movlb	0	; () banked
  3344  0024E2  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3345  0024E4  0E00               	movlw	0
  3346  0024E6  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3347  0024E8  0E00               	movlw	0
  3348  0024EA  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3349  0024EC  0E00               	movlw	0
  3350  0024EE  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3351  0024F0  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3352  0024F4  0E04               	movlw	4
  3353  0024F6  ECC6  F000         	call	_CANSetFilter
  3354                           
  3355                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3356  0024FA  0E00               	movlw	0
  3357  0024FC  0100               	movlb	0	; () banked
  3358  0024FE  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3359  002500  0E00               	movlw	0
  3360  002502  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3361  002504  0E00               	movlw	0
  3362  002506  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3363  002508  0E00               	movlw	0
  3364  00250A  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3365  00250C  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3366  002510  0E05               	movlw	5
  3367  002512  ECC6  F000         	call	_CANSetFilter
  3368                           
  3369                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
  3370  002516  0E00               	movlw	0
  3371  002518  ECDC  F015         	call	_CANOperationMode
  3372  00251C  0012               	return		;funcret
  3373  00251E                     __end_of_CANInitialize:
  3374                           	opt stack 0
  3375                           tblptru	equ	0xFF8
  3376                           tblptrh	equ	0xFF7
  3377                           tblptrl	equ	0xFF6
  3378                           tablat	equ	0xFF5
  3379                           prodh	equ	0xFF4
  3380                           prodl	equ	0xFF3
  3381                           intcon	equ	0xFF2
  3382                           intcon2	equ	0xFF1
  3383                           postinc0	equ	0xFEE
  3384                           wreg	equ	0xFE8
  3385                           postdec1	equ	0xFE5
  3386                           fsr1l	equ	0xFE1
  3387                           indf2	equ	0xFDF
  3388                           fsr2h	equ	0xFDA
  3389                           fsr2l	equ	0xFD9
  3390                           status	equ	0xFD8
  3391                           
  3392 ;; *************** function _CANSetMask *****************
  3393 ;; Defined at:
  3394 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  numBuffer       1    wreg     enum E16878
  3397 ;;  mask            4   19[BANK0 ] unsigned long 
  3398 ;;  type            1   23[BANK0 ] enum E16844
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  numBuffer       1   28[BANK0 ] enum E16878
  3401 ;;  tamp            4   29[BANK0 ] unsigned long 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;		None               void
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3411 ;;      Params:         0       5       0       0
  3412 ;;      Locals:         0       5       0       0
  3413 ;;      Temps:          0       4       0       0
  3414 ;;      Totals:         0      14       0       0
  3415 ;;Total ram usage:       14 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    4
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_CANInitialize
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text9
  3426  001FBA                     __ptext9:
  3427                           	opt stack 0
  3428  001FBA                     _CANSetMask:
  3429                           	opt stack 24
  3430                           
  3431                           ;incstack = 0
  3432                           ;CANSetMask@numBuffer stored from wreg
  3433  001FBA  0100               	movlb	0	; () banked
  3434  001FBC  6F7C               	movwf	CANSetMask@numBuffer& (0+255),b
  3435                           
  3436                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3437  001FBE  0100               	movlb	0	; () banked
  3438  001FC0  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  3439  001FC2  A4D8               	btfss	status,2,c
  3440  001FC4  D056               	goto	l2744
  3441                           
  3442                           ; BSR set to: 0
  3443  001FC6  0100               	movlb	0	; () banked
  3444  001FC8  2977               	incf	CANSetMask@type& (0+255),w,b
  3445  001FCA  A4D8               	btfss	status,2,c
  3446  001FCC  D052               	goto	l2744
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;inc\CANlib.h: 645: {
  3450                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
  3451  001FCE  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3452  001FD2  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3453  001FD6  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3454  001FDA  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3455  001FDE  0E04               	movlw	4
  3456  001FE0  D006               	goto	u2470
  3457  001FE2                     u2475:
  3458  001FE2  0100               	movlb	0	; () banked
  3459  001FE4  90D8               	bcf	status,0,c
  3460  001FE6  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3461  001FE8  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3462  001FEA  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3463  001FEC  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3464  001FEE                     u2470:
  3465  001FEE  2EE8               	decfsz	wreg,f,c
  3466  001FF0  D7F8               	goto	u2475
  3467  001FF2  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3468  001FF6  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3469  001FFA  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3470  001FFE  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
  3474  002002  0100               	movlb	0	; () banked
  3475  002004  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3476  002006  0100               	movlb	0	; () banked
  3477  002008  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3478  00200A  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3479  00200C  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3480  00200E  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
  3484  002010  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
  3488  002014  0E07               	movlw	7
  3489  002016  0100               	movlb	0	; () banked
  3490  002018  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3491  00201A  0100               	movlb	0	; () banked
  3492  00201C  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3493  00201E  0E00               	movlw	0
  3494  002020  0100               	movlb	0	; () banked
  3495  002022  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3496  002024  0100               	movlb	0	; () banked
  3497  002026  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3498  002028  0E00               	movlw	0
  3499  00202A  0100               	movlb	0	; () banked
  3500  00202C  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3501  00202E  0100               	movlb	0	; () banked
  3502  002030  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3503  002032  0E00               	movlw	0
  3504  002034  0100               	movlb	0	; () banked
  3505  002036  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3506  002038  0100               	movlb	0	; () banked
  3507  00203A  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;inc\CANlib.h: 651: tamp = tamp << 5;
  3511  00203C  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3512  002040  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3513  002044  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3514  002048  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3515  00204C  0E05               	movlw	5
  3516  00204E                     u2485:
  3517  00204E  90D8               	bcf	status,0,c
  3518  002050  0100               	movlb	0	; () banked
  3519  002052  3778               	rlcf	??_CANSetMask& (0+255),f,b
  3520  002054  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3521  002056  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3522  002058  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3523  00205A  2EE8               	decfsz	wreg,f,c
  3524  00205C  D7F8               	goto	u2485
  3525  00205E  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3526  002062  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3527  002066  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3528  00206A  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
  3532  00206E  C07D  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3533  002072                     l2744:
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;inc\CANlib.h: 653: }
  3537                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3538  002072  0E02               	movlw	2
  3539  002074  0100               	movlb	0	; () banked
  3540  002076  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3541  002078  A4D8               	btfss	status,2,c
  3542  00207A  D056               	goto	l2760
  3543                           
  3544                           ; BSR set to: 0
  3545  00207C  0100               	movlb	0	; () banked
  3546  00207E  2977               	incf	CANSetMask@type& (0+255),w,b
  3547  002080  A4D8               	btfss	status,2,c
  3548  002082  D052               	goto	l2760
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;inc\CANlib.h: 656: {
  3552                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
  3553  002084  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3554  002088  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3555  00208C  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3556  002090  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3557  002094  0E04               	movlw	4
  3558  002096  D006               	goto	u2510
  3559  002098                     u2515:
  3560  002098  0100               	movlb	0	; () banked
  3561  00209A  90D8               	bcf	status,0,c
  3562  00209C  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3563  00209E  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3564  0020A0  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3565  0020A2  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3566  0020A4                     u2510:
  3567  0020A4  2EE8               	decfsz	wreg,f,c
  3568  0020A6  D7F8               	goto	u2515
  3569  0020A8  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3570  0020AC  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3571  0020B0  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3572  0020B4  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
  3576  0020B8  0100               	movlb	0	; () banked
  3577  0020BA  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3578  0020BC  0100               	movlb	0	; () banked
  3579  0020BE  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3580  0020C0  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3581  0020C2  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3582  0020C4  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
  3586  0020C6  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
  3590  0020CA  0E07               	movlw	7
  3591  0020CC  0100               	movlb	0	; () banked
  3592  0020CE  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3593  0020D0  0100               	movlb	0	; () banked
  3594  0020D2  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3595  0020D4  0E00               	movlw	0
  3596  0020D6  0100               	movlb	0	; () banked
  3597  0020D8  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3598  0020DA  0100               	movlb	0	; () banked
  3599  0020DC  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3600  0020DE  0E00               	movlw	0
  3601  0020E0  0100               	movlb	0	; () banked
  3602  0020E2  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3603  0020E4  0100               	movlb	0	; () banked
  3604  0020E6  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3605  0020E8  0E00               	movlw	0
  3606  0020EA  0100               	movlb	0	; () banked
  3607  0020EC  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3608  0020EE  0100               	movlb	0	; () banked
  3609  0020F0  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;inc\CANlib.h: 662: tamp = tamp << 5;
  3613  0020F2  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3614  0020F6  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3615  0020FA  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3616  0020FE  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3617  002102  0E05               	movlw	5
  3618  002104                     u2525:
  3619  002104  90D8               	bcf	status,0,c
  3620  002106  0100               	movlb	0	; () banked
  3621  002108  3778               	rlcf	??_CANSetMask& (0+255),f,b
  3622  00210A  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3623  00210C  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3624  00210E  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3625  002110  2EE8               	decfsz	wreg,f,c
  3626  002112  D7F8               	goto	u2525
  3627  002114  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3628  002118  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3629  00211C  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3630  002120  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
  3634  002124  C07D  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3635  002128                     l2760:
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;inc\CANlib.h: 664: }
  3639                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3640  002128  0100               	movlb	0	; () banked
  3641  00212A  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  3642  00212C  A4D8               	btfss	status,2,c
  3643  00212E  D087               	goto	l2792
  3644                           
  3645                           ; BSR set to: 0
  3646  002130  0EF7               	movlw	247
  3647  002132  0100               	movlb	0	; () banked
  3648  002134  1977               	xorwf	CANSetMask@type& (0+255),w,b
  3649  002136  A4D8               	btfss	status,2,c
  3650  002138  D082               	goto	l2792
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;inc\CANlib.h: 667: {
  3654                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
  3655  00213A  0100               	movlb	0	; () banked
  3656  00213C  5173               	movf	CANSetMask@mask& (0+255),w,b
  3657  00213E  0100               	movlb	0	; () banked
  3658  002140  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3659  002142  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3660  002144  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3661  002146  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
  3665  002148  C07D  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
  3669  00214C  0E00               	movlw	0
  3670  00214E  0100               	movlb	0	; () banked
  3671  002150  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3672  002152  0100               	movlb	0	; () banked
  3673  002154  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3674  002156  0EFF               	movlw	255
  3675  002158  0100               	movlb	0	; () banked
  3676  00215A  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3677  00215C  0100               	movlb	0	; () banked
  3678  00215E  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3679  002160  0E00               	movlw	0
  3680  002162  0100               	movlb	0	; () banked
  3681  002164  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3682  002166  0100               	movlb	0	; () banked
  3683  002168  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3684  00216A  0E00               	movlw	0
  3685  00216C  0100               	movlb	0	; () banked
  3686  00216E  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3687  002170  0100               	movlb	0	; () banked
  3688  002172  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
  3692  002174  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3693  002178  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3694  00217C  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3695  002180  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3696  002184  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  3697  002188  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  3698  00218C  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  3699  002190  0100               	movlb	0	; () banked
  3700  002192  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  3701  002194  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3702  002198  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3703  00219C  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3704  0021A0  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
  3708  0021A4  C07D  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
  3712  0021A8  0100               	movlb	0	; () banked
  3713  0021AA  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3714  0021AC  D003               	goto	l418
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
  3718  0021AE  010F               	movlb	15	; () banked
  3719  0021B0  8119               	bsf	25,0,b	;volatile
  3720  0021B2  D002               	goto	l419
  3721  0021B4                     l418:
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;inc\CANlib.h: 677: else
  3725                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
  3726  0021B4  010F               	movlb	15	; () banked
  3727  0021B6  9119               	bcf	25,0,b	;volatile
  3728  0021B8                     l419:
  3729                           
  3730                           ; BSR set to: 15
  3731                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
  3732  0021B8  0100               	movlb	0	; () banked
  3733  0021BA  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3734  0021BC  D003               	goto	l420
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
  3738  0021BE  010F               	movlb	15	; () banked
  3739  0021C0  8319               	bsf	25,1,b	;volatile
  3740  0021C2  D002               	goto	l421
  3741  0021C4                     l420:
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;inc\CANlib.h: 682: else
  3745                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
  3746  0021C4  010F               	movlb	15	; () banked
  3747  0021C6  9319               	bcf	25,1,b	;volatile
  3748  0021C8                     l421:
  3749                           
  3750                           ; BSR set to: 15
  3751                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
  3752  0021C8  0100               	movlb	0	; () banked
  3753  0021CA  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3754  0021CC  D003               	goto	l422
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
  3758  0021CE  010F               	movlb	15	; () banked
  3759  0021D0  8B19               	bsf	25,5,b	;volatile
  3760  0021D2  D002               	goto	l423
  3761  0021D4                     l422:
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;inc\CANlib.h: 687: else
  3765                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
  3766  0021D4  010F               	movlb	15	; () banked
  3767  0021D6  9B19               	bcf	25,5,b	;volatile
  3768  0021D8                     l423:
  3769                           
  3770                           ; BSR set to: 15
  3771                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
  3772  0021D8  0100               	movlb	0	; () banked
  3773  0021DA  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3774  0021DC  D003               	goto	l424
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
  3778  0021DE  010F               	movlb	15	; () banked
  3779  0021E0  8D19               	bsf	25,6,b	;volatile
  3780  0021E2  D002               	goto	l425
  3781  0021E4                     l424:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;inc\CANlib.h: 692: else
  3785                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
  3786  0021E4  010F               	movlb	15	; () banked
  3787  0021E6  9D19               	bcf	25,6,b	;volatile
  3788  0021E8                     l425:
  3789                           
  3790                           ; BSR set to: 15
  3791                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
  3792  0021E8  0100               	movlb	0	; () banked
  3793  0021EA  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3794  0021EC  D003               	goto	l426
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
  3798  0021EE  010F               	movlb	15	; () banked
  3799  0021F0  8F19               	bsf	25,7,b	;volatile
  3800  0021F2  D002               	goto	l2786
  3801  0021F4                     l426:
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;inc\CANlib.h: 697: else
  3805                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
  3806  0021F4  010F               	movlb	15	; () banked
  3807  0021F6  9F19               	bcf	25,7,b	;volatile
  3808  0021F8                     l2786:
  3809                           
  3810                           ; BSR set to: 15
  3811                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
  3812  0021F8  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3813  0021FC  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3814  002200  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3815  002204  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3816  002208  0E16               	movlw	22
  3817  00220A  D006               	goto	u2600
  3818  00220C                     u2605:
  3819  00220C  0100               	movlb	0	; () banked
  3820  00220E  90D8               	bcf	status,0,c
  3821  002210  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3822  002212  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3823  002214  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3824  002216  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3825  002218                     u2600:
  3826  002218  2EE8               	decfsz	wreg,f,c
  3827  00221A  D7F8               	goto	u2605
  3828  00221C  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3829  002220  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3830  002224  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3831  002228  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
  3835  00222C  0100               	movlb	0	; () banked
  3836  00222E  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3837  002230  0100               	movlb	0	; () banked
  3838  002232  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3839  002234  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3840  002236  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3841  002238  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
  3845  00223A  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3846  00223E                     l2792:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;inc\CANlib.h: 703: }
  3850                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3851  00223E  0E02               	movlw	2
  3852  002240  0100               	movlb	0	; () banked
  3853  002242  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3854  002244  A4D8               	btfss	status,2,c
  3855  002246  0012               	return	
  3856                           
  3857                           ; BSR set to: 0
  3858  002248  0EF7               	movlw	247
  3859  00224A  0100               	movlb	0	; () banked
  3860  00224C  1977               	xorwf	CANSetMask@type& (0+255),w,b
  3861  00224E  A4D8               	btfss	status,2,c
  3862  002250  0012               	return	
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;inc\CANlib.h: 706: {
  3866                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
  3867  002252  0100               	movlb	0	; () banked
  3868  002254  5173               	movf	CANSetMask@mask& (0+255),w,b
  3869  002256  0100               	movlb	0	; () banked
  3870  002258  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3871  00225A  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3872  00225C  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3873  00225E  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
  3877  002260  C07D  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
  3881  002264  0E00               	movlw	0
  3882  002266  0100               	movlb	0	; () banked
  3883  002268  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3884  00226A  0100               	movlb	0	; () banked
  3885  00226C  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3886  00226E  0EFF               	movlw	255
  3887  002270  0100               	movlb	0	; () banked
  3888  002272  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3889  002274  0100               	movlb	0	; () banked
  3890  002276  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3891  002278  0E00               	movlw	0
  3892  00227A  0100               	movlb	0	; () banked
  3893  00227C  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3894  00227E  0100               	movlb	0	; () banked
  3895  002280  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3896  002282  0E00               	movlw	0
  3897  002284  0100               	movlb	0	; () banked
  3898  002286  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3899  002288  0100               	movlb	0	; () banked
  3900  00228A  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
  3904  00228C  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3905  002290  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3906  002294  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3907  002298  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3908  00229C  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  3909  0022A0  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  3910  0022A4  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  3911  0022A8  0100               	movlb	0	; () banked
  3912  0022AA  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  3913  0022AC  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3914  0022B0  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3915  0022B4  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3916  0022B8  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
  3920  0022BC  C07D  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
  3924  0022C0  0100               	movlb	0	; () banked
  3925  0022C2  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3926  0022C4  D003               	goto	l429
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
  3930  0022C6  010F               	movlb	15	; () banked
  3931  0022C8  811D               	bsf	29,0,b	;volatile
  3932  0022CA  D002               	goto	l430
  3933  0022CC                     l429:
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;inc\CANlib.h: 716: else
  3937                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
  3938  0022CC  010F               	movlb	15	; () banked
  3939  0022CE  911D               	bcf	29,0,b	;volatile
  3940  0022D0                     l430:
  3941                           
  3942                           ; BSR set to: 15
  3943                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
  3944  0022D0  0100               	movlb	0	; () banked
  3945  0022D2  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3946  0022D4  D003               	goto	l431
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
  3950  0022D6  010F               	movlb	15	; () banked
  3951  0022D8  831D               	bsf	29,1,b	;volatile
  3952  0022DA  D002               	goto	l432
  3953  0022DC                     l431:
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;inc\CANlib.h: 721: else
  3957                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
  3958  0022DC  010F               	movlb	15	; () banked
  3959  0022DE  931D               	bcf	29,1,b	;volatile
  3960  0022E0                     l432:
  3961                           
  3962                           ; BSR set to: 15
  3963                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
  3964  0022E0  0100               	movlb	0	; () banked
  3965  0022E2  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3966  0022E4  D003               	goto	l433
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
  3970  0022E6  010F               	movlb	15	; () banked
  3971  0022E8  8B1D               	bsf	29,5,b	;volatile
  3972  0022EA  D002               	goto	l434
  3973  0022EC                     l433:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;inc\CANlib.h: 726: else
  3977                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
  3978  0022EC  010F               	movlb	15	; () banked
  3979  0022EE  9B1D               	bcf	29,5,b	;volatile
  3980  0022F0                     l434:
  3981                           
  3982                           ; BSR set to: 15
  3983                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
  3984  0022F0  0100               	movlb	0	; () banked
  3985  0022F2  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3986  0022F4  D003               	goto	l435
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
  3990  0022F6  010F               	movlb	15	; () banked
  3991  0022F8  8D1D               	bsf	29,6,b	;volatile
  3992  0022FA  D002               	goto	l436
  3993  0022FC                     l435:
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;inc\CANlib.h: 731: else
  3997                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
  3998  0022FC  010F               	movlb	15	; () banked
  3999  0022FE  9D1D               	bcf	29,6,b	;volatile
  4000  002300                     l436:
  4001                           
  4002                           ; BSR set to: 15
  4003                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
  4004  002300  0100               	movlb	0	; () banked
  4005  002302  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4006  002304  D003               	goto	l437
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
  4010  002306  010F               	movlb	15	; () banked
  4011  002308  8F1D               	bsf	29,7,b	;volatile
  4012  00230A  D002               	goto	l2818
  4013  00230C                     l437:
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;inc\CANlib.h: 736: else
  4017                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
  4018  00230C  010F               	movlb	15	; () banked
  4019  00230E  9F1D               	bcf	29,7,b	;volatile
  4020  002310                     l2818:
  4021                           
  4022                           ; BSR set to: 15
  4023                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
  4024  002310  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  4025  002314  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4026  002318  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4027  00231C  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4028  002320  0E16               	movlw	22
  4029  002322  D006               	goto	u2680
  4030  002324                     u2685:
  4031  002324  0100               	movlb	0	; () banked
  4032  002326  90D8               	bcf	status,0,c
  4033  002328  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4034  00232A  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4035  00232C  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4036  00232E  3378               	rrcf	??_CANSetMask& (0+255),f,b
  4037  002330                     u2680:
  4038  002330  2EE8               	decfsz	wreg,f,c
  4039  002332  D7F8               	goto	u2685
  4040  002334  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  4041  002338  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4042  00233C  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4043  002340  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
  4047  002344  0100               	movlb	0	; () banked
  4048  002346  517D               	movf	CANSetMask@tamp& (0+255),w,b
  4049  002348  0100               	movlb	0	; () banked
  4050  00234A  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  4051  00234C  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4052  00234E  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4053  002350  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
  4057  002352  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4058  002356  0012               	return	
  4059  002358                     __end_of_CANSetMask:
  4060                           	opt stack 0
  4061                           tblptru	equ	0xFF8
  4062                           tblptrh	equ	0xFF7
  4063                           tblptrl	equ	0xFF6
  4064                           tablat	equ	0xFF5
  4065                           prodh	equ	0xFF4
  4066                           prodl	equ	0xFF3
  4067                           intcon	equ	0xFF2
  4068                           intcon2	equ	0xFF1
  4069                           postinc0	equ	0xFEE
  4070                           wreg	equ	0xFE8
  4071                           postdec1	equ	0xFE5
  4072                           fsr1l	equ	0xFE1
  4073                           indf2	equ	0xFDF
  4074                           fsr2h	equ	0xFDA
  4075                           fsr2l	equ	0xFD9
  4076                           status	equ	0xFD8
  4077                           
  4078 ;; *************** function _CANSetFilter *****************
  4079 ;; Defined at:
  4080 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  numBuffer       1    wreg     enum E16881
  4083 ;;  filter          4   19[BANK0 ] unsigned long 
  4084 ;;  type            1   23[BANK0 ] enum E16844
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  numBuffer       1   28[BANK0 ] enum E16881
  4087 ;;  tamp            4   29[BANK0 ] unsigned long 
  4088 ;; Return value:  Size  Location     Type
  4089 ;;		None               void
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4097 ;;      Params:         0       5       0       0
  4098 ;;      Locals:         0       5       0       0
  4099 ;;      Temps:          0       4       0       0
  4100 ;;      Totals:         0      14       0       0
  4101 ;;Total ram usage:       14 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    4
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_CANInitialize
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text10
  4112  00018C                     __ptext10:
  4113                           	opt stack 0
  4114  00018C                     _CANSetFilter:
  4115                           	opt stack 24
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;incstack = 0
  4119                           ;CANSetFilter@numBuffer stored from wreg
  4120  00018C  0100               	movlb	0	; () banked
  4121  00018E  6F7C               	movwf	CANSetFilter@numBuffer& (0+255),b
  4122                           
  4123                           ;inc\CANlib.h: 751: unsigned long tamp;
  4124                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4125  000190  0100               	movlb	0	; () banked
  4126  000192  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4127  000194  0100               	movlb	0	; () banked
  4128  000196  A4D8               	btfss	status,2,c
  4129  000198  D058               	goto	l2842
  4130                           
  4131                           ; BSR set to: 0
  4132  00019A  0100               	movlb	0	; () banked
  4133  00019C  2977               	incf	CANSetFilter@type& (0+255),w,b
  4134  00019E  A4D8               	btfss	status,2,c
  4135  0001A0  D054               	goto	l2842
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;inc\CANlib.h: 754: {
  4139                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
  4140  0001A2  010F               	movlb	15	; () banked
  4141  0001A4  9701               	bcf	1,3,b	;volatile
  4142                           
  4143                           ; BSR set to: 15
  4144                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
  4145  0001A6  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4146  0001AA  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4147  0001AE  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4148  0001B2  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4149  0001B6  0E04               	movlw	4
  4150  0001B8  D006               	goto	u2710
  4151  0001BA                     u2715:
  4152  0001BA  0100               	movlb	0	; () banked
  4153  0001BC  90D8               	bcf	status,0,c
  4154  0001BE  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4155  0001C0  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4156  0001C2  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4157  0001C4  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4158  0001C6                     u2710:
  4159  0001C6  2EE8               	decfsz	wreg,f,c
  4160  0001C8  D7F8               	goto	u2715
  4161  0001CA  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4162  0001CE  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4163  0001D2  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4164  0001D6  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
  4168  0001DA  0100               	movlb	0	; () banked
  4169  0001DC  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4170  0001DE  0100               	movlb	0	; () banked
  4171  0001E0  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4172  0001E2  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4173  0001E4  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4174  0001E6  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
  4178  0001E8  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
  4182  0001EC  0E07               	movlw	7
  4183  0001EE  0100               	movlb	0	; () banked
  4184  0001F0  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4185  0001F2  0100               	movlb	0	; () banked
  4186  0001F4  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4187  0001F6  0E00               	movlw	0
  4188  0001F8  0100               	movlb	0	; () banked
  4189  0001FA  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4190  0001FC  0100               	movlb	0	; () banked
  4191  0001FE  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4192  000200  0E00               	movlw	0
  4193  000202  0100               	movlb	0	; () banked
  4194  000204  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4195  000206  0100               	movlb	0	; () banked
  4196  000208  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4197  00020A  0E00               	movlw	0
  4198  00020C  0100               	movlb	0	; () banked
  4199  00020E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4200  000210  0100               	movlb	0	; () banked
  4201  000212  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;inc\CANlib.h: 762: tamp = tamp << 5;
  4205  000214  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4206  000218  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4207  00021C  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4208  000220  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4209  000224  0E05               	movlw	5
  4210  000226                     u2725:
  4211  000226  90D8               	bcf	status,0,c
  4212  000228  0100               	movlb	0	; () banked
  4213  00022A  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4214  00022C  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4215  00022E  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4216  000230  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4217  000232  2EE8               	decfsz	wreg,f,c
  4218  000234  D7F8               	goto	u2725
  4219  000236  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4220  00023A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4221  00023E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4222  000242  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
  4226  000246  C07D  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4227  00024A                     l2842:
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;inc\CANlib.h: 764: }
  4231                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4232  00024A  0100               	movlb	0	; () banked
  4233  00024C  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4234  00024E  A4D8               	btfss	status,2,c
  4235  000250  D058               	goto	l2860
  4236                           
  4237                           ; BSR set to: 0
  4238  000252  0100               	movlb	0	; () banked
  4239  000254  2977               	incf	CANSetFilter@type& (0+255),w,b
  4240  000256  A4D8               	btfss	status,2,c
  4241  000258  D054               	goto	l2860
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;inc\CANlib.h: 767: {
  4245                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
  4246  00025A  010F               	movlb	15	; () banked
  4247  00025C  9705               	bcf	5,3,b	;volatile
  4248                           
  4249                           ; BSR set to: 15
  4250                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
  4251  00025E  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4252  000262  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4253  000266  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4254  00026A  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4255  00026E  0E04               	movlw	4
  4256  000270  D006               	goto	u2750
  4257  000272                     u2755:
  4258  000272  0100               	movlb	0	; () banked
  4259  000274  90D8               	bcf	status,0,c
  4260  000276  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4261  000278  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4262  00027A  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4263  00027C  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4264  00027E                     u2750:
  4265  00027E  2EE8               	decfsz	wreg,f,c
  4266  000280  D7F8               	goto	u2755
  4267  000282  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4268  000286  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4269  00028A  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4270  00028E  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
  4274  000292  0100               	movlb	0	; () banked
  4275  000294  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4276  000296  0100               	movlb	0	; () banked
  4277  000298  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4278  00029A  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4279  00029C  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4280  00029E  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
  4284  0002A0  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
  4288  0002A4  0E07               	movlw	7
  4289  0002A6  0100               	movlb	0	; () banked
  4290  0002A8  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4291  0002AA  0100               	movlb	0	; () banked
  4292  0002AC  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4293  0002AE  0E00               	movlw	0
  4294  0002B0  0100               	movlb	0	; () banked
  4295  0002B2  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4296  0002B4  0100               	movlb	0	; () banked
  4297  0002B6  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4298  0002B8  0E00               	movlw	0
  4299  0002BA  0100               	movlb	0	; () banked
  4300  0002BC  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4301  0002BE  0100               	movlb	0	; () banked
  4302  0002C0  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4303  0002C2  0E00               	movlw	0
  4304  0002C4  0100               	movlb	0	; () banked
  4305  0002C6  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4306  0002C8  0100               	movlb	0	; () banked
  4307  0002CA  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;inc\CANlib.h: 775: tamp = tamp << 5;
  4311  0002CC  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4312  0002D0  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4313  0002D4  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4314  0002D8  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4315  0002DC  0E05               	movlw	5
  4316  0002DE                     u2765:
  4317  0002DE  90D8               	bcf	status,0,c
  4318  0002E0  0100               	movlb	0	; () banked
  4319  0002E2  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4320  0002E4  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4321  0002E6  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4322  0002E8  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4323  0002EA  2EE8               	decfsz	wreg,f,c
  4324  0002EC  D7F8               	goto	u2765
  4325  0002EE  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4326  0002F2  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4327  0002F6  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4328  0002FA  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
  4332  0002FE  C07D  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4333  000302                     l2860:
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;inc\CANlib.h: 777: }
  4337                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4338  000302  0E02               	movlw	2
  4339  000304  0100               	movlb	0	; () banked
  4340  000306  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4341  000308  A4D8               	btfss	status,2,c
  4342  00030A  D058               	goto	l2878
  4343                           
  4344                           ; BSR set to: 0
  4345  00030C  0100               	movlb	0	; () banked
  4346  00030E  2977               	incf	CANSetFilter@type& (0+255),w,b
  4347  000310  A4D8               	btfss	status,2,c
  4348  000312  D054               	goto	l2878
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;inc\CANlib.h: 780: {
  4352                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
  4353  000314  010F               	movlb	15	; () banked
  4354  000316  9709               	bcf	9,3,b	;volatile
  4355                           
  4356                           ; BSR set to: 15
  4357                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
  4358  000318  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4359  00031C  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4360  000320  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4361  000324  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4362  000328  0E04               	movlw	4
  4363  00032A  D006               	goto	u2790
  4364  00032C                     u2795:
  4365  00032C  0100               	movlb	0	; () banked
  4366  00032E  90D8               	bcf	status,0,c
  4367  000330  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4368  000332  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4369  000334  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4370  000336  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4371  000338                     u2790:
  4372  000338  2EE8               	decfsz	wreg,f,c
  4373  00033A  D7F8               	goto	u2795
  4374  00033C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4375  000340  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4376  000344  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4377  000348  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
  4381  00034C  0100               	movlb	0	; () banked
  4382  00034E  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4383  000350  0100               	movlb	0	; () banked
  4384  000352  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4385  000354  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4386  000356  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4387  000358  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
  4391  00035A  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
  4395  00035E  0E07               	movlw	7
  4396  000360  0100               	movlb	0	; () banked
  4397  000362  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4398  000364  0100               	movlb	0	; () banked
  4399  000366  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4400  000368  0E00               	movlw	0
  4401  00036A  0100               	movlb	0	; () banked
  4402  00036C  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4403  00036E  0100               	movlb	0	; () banked
  4404  000370  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4405  000372  0E00               	movlw	0
  4406  000374  0100               	movlb	0	; () banked
  4407  000376  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4408  000378  0100               	movlb	0	; () banked
  4409  00037A  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4410  00037C  0E00               	movlw	0
  4411  00037E  0100               	movlb	0	; () banked
  4412  000380  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4413  000382  0100               	movlb	0	; () banked
  4414  000384  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;inc\CANlib.h: 788: tamp = tamp << 5;
  4418  000386  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4419  00038A  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4420  00038E  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4421  000392  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4422  000396  0E05               	movlw	5
  4423  000398                     u2805:
  4424  000398  90D8               	bcf	status,0,c
  4425  00039A  0100               	movlb	0	; () banked
  4426  00039C  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4427  00039E  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4428  0003A0  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4429  0003A2  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4430  0003A4  2EE8               	decfsz	wreg,f,c
  4431  0003A6  D7F8               	goto	u2805
  4432  0003A8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4433  0003AC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4434  0003B0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4435  0003B4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
  4439  0003B8  C07D  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4440  0003BC                     l2878:
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;inc\CANlib.h: 790: }
  4444                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4445  0003BC  0E03               	movlw	3
  4446  0003BE  0100               	movlb	0	; () banked
  4447  0003C0  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4448  0003C2  A4D8               	btfss	status,2,c
  4449  0003C4  D058               	goto	l2896
  4450                           
  4451                           ; BSR set to: 0
  4452  0003C6  0100               	movlb	0	; () banked
  4453  0003C8  2977               	incf	CANSetFilter@type& (0+255),w,b
  4454  0003CA  A4D8               	btfss	status,2,c
  4455  0003CC  D054               	goto	l2896
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;inc\CANlib.h: 793: {
  4459                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
  4460  0003CE  010F               	movlb	15	; () banked
  4461  0003D0  970D               	bcf	13,3,b	;volatile
  4462                           
  4463                           ; BSR set to: 15
  4464                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
  4465  0003D2  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4466  0003D6  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4467  0003DA  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4468  0003DE  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4469  0003E2  0E04               	movlw	4
  4470  0003E4  D006               	goto	u2830
  4471  0003E6                     u2835:
  4472  0003E6  0100               	movlb	0	; () banked
  4473  0003E8  90D8               	bcf	status,0,c
  4474  0003EA  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4475  0003EC  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4476  0003EE  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4477  0003F0  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4478  0003F2                     u2830:
  4479  0003F2  2EE8               	decfsz	wreg,f,c
  4480  0003F4  D7F8               	goto	u2835
  4481  0003F6  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4482  0003FA  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4483  0003FE  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4484  000402  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
  4488  000406  0100               	movlb	0	; () banked
  4489  000408  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4490  00040A  0100               	movlb	0	; () banked
  4491  00040C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4492  00040E  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4493  000410  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4494  000412  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
  4498  000414  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
  4502  000418  0E07               	movlw	7
  4503  00041A  0100               	movlb	0	; () banked
  4504  00041C  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4505  00041E  0100               	movlb	0	; () banked
  4506  000420  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4507  000422  0E00               	movlw	0
  4508  000424  0100               	movlb	0	; () banked
  4509  000426  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4510  000428  0100               	movlb	0	; () banked
  4511  00042A  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4512  00042C  0E00               	movlw	0
  4513  00042E  0100               	movlb	0	; () banked
  4514  000430  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4515  000432  0100               	movlb	0	; () banked
  4516  000434  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4517  000436  0E00               	movlw	0
  4518  000438  0100               	movlb	0	; () banked
  4519  00043A  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4520  00043C  0100               	movlb	0	; () banked
  4521  00043E  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;inc\CANlib.h: 801: tamp = tamp << 5;
  4525  000440  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4526  000444  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4527  000448  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4528  00044C  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4529  000450  0E05               	movlw	5
  4530  000452                     u2845:
  4531  000452  90D8               	bcf	status,0,c
  4532  000454  0100               	movlb	0	; () banked
  4533  000456  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4534  000458  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4535  00045A  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4536  00045C  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4537  00045E  2EE8               	decfsz	wreg,f,c
  4538  000460  D7F8               	goto	u2845
  4539  000462  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4540  000466  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4541  00046A  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4542  00046E  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
  4546  000472  C07D  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4547  000476                     l2896:
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;inc\CANlib.h: 803: }
  4551                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4552  000476  0E04               	movlw	4
  4553  000478  0100               	movlb	0	; () banked
  4554  00047A  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4555  00047C  A4D8               	btfss	status,2,c
  4556  00047E  D058               	goto	l2914
  4557                           
  4558                           ; BSR set to: 0
  4559  000480  0100               	movlb	0	; () banked
  4560  000482  2977               	incf	CANSetFilter@type& (0+255),w,b
  4561  000484  A4D8               	btfss	status,2,c
  4562  000486  D054               	goto	l2914
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;inc\CANlib.h: 806: {
  4566                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
  4567  000488  010F               	movlb	15	; () banked
  4568  00048A  9711               	bcf	17,3,b	;volatile
  4569                           
  4570                           ; BSR set to: 15
  4571                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
  4572  00048C  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4573  000490  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4574  000494  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4575  000498  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4576  00049C  0E04               	movlw	4
  4577  00049E  D006               	goto	u2870
  4578  0004A0                     u2875:
  4579  0004A0  0100               	movlb	0	; () banked
  4580  0004A2  90D8               	bcf	status,0,c
  4581  0004A4  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4582  0004A6  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4583  0004A8  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4584  0004AA  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4585  0004AC                     u2870:
  4586  0004AC  2EE8               	decfsz	wreg,f,c
  4587  0004AE  D7F8               	goto	u2875
  4588  0004B0  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4589  0004B4  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4590  0004B8  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4591  0004BC  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
  4595  0004C0  0100               	movlb	0	; () banked
  4596  0004C2  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4597  0004C4  0100               	movlb	0	; () banked
  4598  0004C6  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4599  0004C8  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4600  0004CA  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4601  0004CC  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
  4605  0004CE  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
  4609  0004D2  0E07               	movlw	7
  4610  0004D4  0100               	movlb	0	; () banked
  4611  0004D6  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4612  0004D8  0100               	movlb	0	; () banked
  4613  0004DA  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4614  0004DC  0E00               	movlw	0
  4615  0004DE  0100               	movlb	0	; () banked
  4616  0004E0  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4617  0004E2  0100               	movlb	0	; () banked
  4618  0004E4  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4619  0004E6  0E00               	movlw	0
  4620  0004E8  0100               	movlb	0	; () banked
  4621  0004EA  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4622  0004EC  0100               	movlb	0	; () banked
  4623  0004EE  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4624  0004F0  0E00               	movlw	0
  4625  0004F2  0100               	movlb	0	; () banked
  4626  0004F4  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4627  0004F6  0100               	movlb	0	; () banked
  4628  0004F8  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;inc\CANlib.h: 814: tamp = tamp << 5;
  4632  0004FA  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4633  0004FE  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4634  000502  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4635  000506  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4636  00050A  0E05               	movlw	5
  4637  00050C                     u2885:
  4638  00050C  90D8               	bcf	status,0,c
  4639  00050E  0100               	movlb	0	; () banked
  4640  000510  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4641  000512  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4642  000514  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4643  000516  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4644  000518  2EE8               	decfsz	wreg,f,c
  4645  00051A  D7F8               	goto	u2885
  4646  00051C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4647  000520  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4648  000524  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4649  000528  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
  4653  00052C  C07D  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4654  000530                     l2914:
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;inc\CANlib.h: 816: }
  4658                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4659  000530  0E05               	movlw	5
  4660  000532  0100               	movlb	0	; () banked
  4661  000534  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4662  000536  A4D8               	btfss	status,2,c
  4663  000538  D058               	goto	l2932
  4664                           
  4665                           ; BSR set to: 0
  4666  00053A  0100               	movlb	0	; () banked
  4667  00053C  2977               	incf	CANSetFilter@type& (0+255),w,b
  4668  00053E  A4D8               	btfss	status,2,c
  4669  000540  D054               	goto	l2932
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;inc\CANlib.h: 819: {
  4673                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
  4674  000542  010F               	movlb	15	; () banked
  4675  000544  9715               	bcf	21,3,b	;volatile
  4676                           
  4677                           ; BSR set to: 15
  4678                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
  4679  000546  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4680  00054A  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4681  00054E  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4682  000552  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4683  000556  0E04               	movlw	4
  4684  000558  D006               	goto	u2910
  4685  00055A                     u2915:
  4686  00055A  0100               	movlb	0	; () banked
  4687  00055C  90D8               	bcf	status,0,c
  4688  00055E  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4689  000560  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4690  000562  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4691  000564  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4692  000566                     u2910:
  4693  000566  2EE8               	decfsz	wreg,f,c
  4694  000568  D7F8               	goto	u2915
  4695  00056A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4696  00056E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4697  000572  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4698  000576  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
  4702  00057A  0100               	movlb	0	; () banked
  4703  00057C  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4704  00057E  0100               	movlb	0	; () banked
  4705  000580  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4706  000582  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4707  000584  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4708  000586  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
  4712  000588  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
  4716  00058C  0E07               	movlw	7
  4717  00058E  0100               	movlb	0	; () banked
  4718  000590  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4719  000592  0100               	movlb	0	; () banked
  4720  000594  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4721  000596  0E00               	movlw	0
  4722  000598  0100               	movlb	0	; () banked
  4723  00059A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4724  00059C  0100               	movlb	0	; () banked
  4725  00059E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4726  0005A0  0E00               	movlw	0
  4727  0005A2  0100               	movlb	0	; () banked
  4728  0005A4  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4729  0005A6  0100               	movlb	0	; () banked
  4730  0005A8  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4731  0005AA  0E00               	movlw	0
  4732  0005AC  0100               	movlb	0	; () banked
  4733  0005AE  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4734  0005B0  0100               	movlb	0	; () banked
  4735  0005B2  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;inc\CANlib.h: 827: tamp = tamp << 5;
  4739  0005B4  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4740  0005B8  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4741  0005BC  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4742  0005C0  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4743  0005C4  0E05               	movlw	5
  4744  0005C6                     u2925:
  4745  0005C6  90D8               	bcf	status,0,c
  4746  0005C8  0100               	movlb	0	; () banked
  4747  0005CA  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4748  0005CC  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4749  0005CE  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4750  0005D0  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4751  0005D2  2EE8               	decfsz	wreg,f,c
  4752  0005D4  D7F8               	goto	u2925
  4753  0005D6  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4754  0005DA  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4755  0005DE  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4756  0005E2  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
  4760  0005E6  C07D  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4761  0005EA                     l2932:
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;inc\CANlib.h: 829: }
  4765                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4766  0005EA  0100               	movlb	0	; () banked
  4767  0005EC  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4768  0005EE  0100               	movlb	0	; () banked
  4769  0005F0  A4D8               	btfss	status,2,c
  4770  0005F2  D089               	goto	l2966
  4771                           
  4772                           ; BSR set to: 0
  4773  0005F4  0EF7               	movlw	247
  4774  0005F6  0100               	movlb	0	; () banked
  4775  0005F8  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  4776  0005FA  A4D8               	btfss	status,2,c
  4777  0005FC  D084               	goto	l2966
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;inc\CANlib.h: 833: {
  4781                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
  4782  0005FE  010F               	movlb	15	; () banked
  4783  000600  8701               	bsf	1,3,b	;volatile
  4784                           
  4785                           ; BSR set to: 15
  4786                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
  4787  000602  0100               	movlb	0	; () banked
  4788  000604  5173               	movf	CANSetFilter@filter& (0+255),w,b
  4789  000606  0100               	movlb	0	; () banked
  4790  000608  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4791  00060A  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4792  00060C  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4793  00060E  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
  4797  000610  C07D  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
  4801  000614  0E00               	movlw	0
  4802  000616  0100               	movlb	0	; () banked
  4803  000618  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4804  00061A  0100               	movlb	0	; () banked
  4805  00061C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4806  00061E  0EFF               	movlw	255
  4807  000620  0100               	movlb	0	; () banked
  4808  000622  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4809  000624  0100               	movlb	0	; () banked
  4810  000626  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4811  000628  0E00               	movlw	0
  4812  00062A  0100               	movlb	0	; () banked
  4813  00062C  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4814  00062E  0100               	movlb	0	; () banked
  4815  000630  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4816  000632  0E00               	movlw	0
  4817  000634  0100               	movlb	0	; () banked
  4818  000636  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4819  000638  0100               	movlb	0	; () banked
  4820  00063A  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
  4824  00063C  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4825  000640  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4826  000644  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4827  000648  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4828  00064C  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  4829  000650  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4830  000654  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4831  000658  0100               	movlb	0	; () banked
  4832  00065A  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  4833  00065C  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4834  000660  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4835  000664  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4836  000668  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
  4840  00066C  C07D  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
  4844  000670  0100               	movlb	0	; () banked
  4845  000672  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4846  000674  D003               	goto	l449
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
  4850  000676  010F               	movlb	15	; () banked
  4851  000678  8101               	bsf	1,0,b	;volatile
  4852  00067A  D002               	goto	l450
  4853  00067C                     l449:
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;inc\CANlib.h: 845: else
  4857                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
  4858  00067C  010F               	movlb	15	; () banked
  4859  00067E  9101               	bcf	1,0,b	;volatile
  4860  000680                     l450:
  4861                           
  4862                           ; BSR set to: 15
  4863                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
  4864  000680  0100               	movlb	0	; () banked
  4865  000682  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4866  000684  D003               	goto	l451
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
  4870  000686  010F               	movlb	15	; () banked
  4871  000688  8301               	bsf	1,1,b	;volatile
  4872  00068A  D002               	goto	l452
  4873  00068C                     l451:
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;inc\CANlib.h: 850: else
  4877                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
  4878  00068C  010F               	movlb	15	; () banked
  4879  00068E  9301               	bcf	1,1,b	;volatile
  4880  000690                     l452:
  4881                           
  4882                           ; BSR set to: 15
  4883                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
  4884  000690  0100               	movlb	0	; () banked
  4885  000692  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4886  000694  D003               	goto	l453
  4887                           
  4888                           ; BSR set to: 0
  4889                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
  4890  000696  010F               	movlb	15	; () banked
  4891  000698  8B01               	bsf	1,5,b	;volatile
  4892  00069A  D002               	goto	l454
  4893  00069C                     l453:
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;inc\CANlib.h: 855: else
  4897                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
  4898  00069C  010F               	movlb	15	; () banked
  4899  00069E  9B01               	bcf	1,5,b	;volatile
  4900  0006A0                     l454:
  4901                           
  4902                           ; BSR set to: 15
  4903                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
  4904  0006A0  0100               	movlb	0	; () banked
  4905  0006A2  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4906  0006A4  D003               	goto	l455
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
  4910  0006A6  010F               	movlb	15	; () banked
  4911  0006A8  8D01               	bsf	1,6,b	;volatile
  4912  0006AA  D002               	goto	l456
  4913  0006AC                     l455:
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;inc\CANlib.h: 860: else
  4917                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
  4918  0006AC  010F               	movlb	15	; () banked
  4919  0006AE  9D01               	bcf	1,6,b	;volatile
  4920  0006B0                     l456:
  4921                           
  4922                           ; BSR set to: 15
  4923                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
  4924  0006B0  0100               	movlb	0	; () banked
  4925  0006B2  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4926  0006B4  D003               	goto	l457
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
  4930  0006B6  010F               	movlb	15	; () banked
  4931  0006B8  8F01               	bsf	1,7,b	;volatile
  4932  0006BA  D002               	goto	l2960
  4933  0006BC                     l457:
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;inc\CANlib.h: 865: else
  4937                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
  4938  0006BC  010F               	movlb	15	; () banked
  4939  0006BE  9F01               	bcf	1,7,b	;volatile
  4940  0006C0                     l2960:
  4941                           
  4942                           ; BSR set to: 15
  4943                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
  4944  0006C0  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4945  0006C4  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4946  0006C8  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4947  0006CC  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4948  0006D0  0E16               	movlw	22
  4949  0006D2  D006               	goto	u3000
  4950  0006D4                     u3005:
  4951  0006D4  0100               	movlb	0	; () banked
  4952  0006D6  90D8               	bcf	status,0,c
  4953  0006D8  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4954  0006DA  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4955  0006DC  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4956  0006DE  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4957  0006E0                     u3000:
  4958  0006E0  2EE8               	decfsz	wreg,f,c
  4959  0006E2  D7F8               	goto	u3005
  4960  0006E4  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4961  0006E8  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4962  0006EC  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4963  0006F0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
  4967  0006F4  0100               	movlb	0	; () banked
  4968  0006F6  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4969  0006F8  0100               	movlb	0	; () banked
  4970  0006FA  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4971  0006FC  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4972  0006FE  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4973  000700  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
  4977  000702  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4978  000706                     l2966:
  4979                           
  4980                           ; BSR set to: 0
  4981                           ;inc\CANlib.h: 871: }
  4982                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4983  000706  0100               	movlb	0	; () banked
  4984  000708  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4985  00070A  A4D8               	btfss	status,2,c
  4986  00070C  D089               	goto	l3000
  4987                           
  4988                           ; BSR set to: 0
  4989  00070E  0EF7               	movlw	247
  4990  000710  0100               	movlb	0	; () banked
  4991  000712  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  4992  000714  A4D8               	btfss	status,2,c
  4993  000716  D084               	goto	l3000
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;inc\CANlib.h: 874: {
  4997                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
  4998  000718  010F               	movlb	15	; () banked
  4999  00071A  8705               	bsf	5,3,b	;volatile
  5000                           
  5001                           ; BSR set to: 15
  5002                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
  5003  00071C  0100               	movlb	0	; () banked
  5004  00071E  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5005  000720  0100               	movlb	0	; () banked
  5006  000722  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5007  000724  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5008  000726  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5009  000728  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
  5013  00072A  C07D  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
  5017  00072E  0E00               	movlw	0
  5018  000730  0100               	movlb	0	; () banked
  5019  000732  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5020  000734  0100               	movlb	0	; () banked
  5021  000736  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5022  000738  0EFF               	movlw	255
  5023  00073A  0100               	movlb	0	; () banked
  5024  00073C  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5025  00073E  0100               	movlb	0	; () banked
  5026  000740  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5027  000742  0E00               	movlw	0
  5028  000744  0100               	movlb	0	; () banked
  5029  000746  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5030  000748  0100               	movlb	0	; () banked
  5031  00074A  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5032  00074C  0E00               	movlw	0
  5033  00074E  0100               	movlb	0	; () banked
  5034  000750  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5035  000752  0100               	movlb	0	; () banked
  5036  000754  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
  5040  000756  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5041  00075A  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5042  00075E  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5043  000762  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5044  000766  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5045  00076A  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5046  00076E  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5047  000772  0100               	movlb	0	; () banked
  5048  000774  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5049  000776  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5050  00077A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5051  00077E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5052  000782  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
  5056  000786  C07D  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
  5060  00078A  0100               	movlb	0	; () banked
  5061  00078C  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5062  00078E  D003               	goto	l460
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
  5066  000790  010F               	movlb	15	; () banked
  5067  000792  8105               	bsf	5,0,b	;volatile
  5068  000794  D002               	goto	l461
  5069  000796                     l460:
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;inc\CANlib.h: 886: else
  5073                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
  5074  000796  010F               	movlb	15	; () banked
  5075  000798  9105               	bcf	5,0,b	;volatile
  5076  00079A                     l461:
  5077                           
  5078                           ; BSR set to: 15
  5079                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
  5080  00079A  0100               	movlb	0	; () banked
  5081  00079C  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5082  00079E  D003               	goto	l462
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
  5086  0007A0  010F               	movlb	15	; () banked
  5087  0007A2  8305               	bsf	5,1,b	;volatile
  5088  0007A4  D002               	goto	l463
  5089  0007A6                     l462:
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;inc\CANlib.h: 891: else
  5093                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
  5094  0007A6  010F               	movlb	15	; () banked
  5095  0007A8  9305               	bcf	5,1,b	;volatile
  5096  0007AA                     l463:
  5097                           
  5098                           ; BSR set to: 15
  5099                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
  5100  0007AA  0100               	movlb	0	; () banked
  5101  0007AC  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5102  0007AE  D003               	goto	l464
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
  5106  0007B0  010F               	movlb	15	; () banked
  5107  0007B2  8B05               	bsf	5,5,b	;volatile
  5108  0007B4  D002               	goto	l465
  5109  0007B6                     l464:
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;inc\CANlib.h: 896: else
  5113                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
  5114  0007B6  010F               	movlb	15	; () banked
  5115  0007B8  9B05               	bcf	5,5,b	;volatile
  5116  0007BA                     l465:
  5117                           
  5118                           ; BSR set to: 15
  5119                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
  5120  0007BA  0100               	movlb	0	; () banked
  5121  0007BC  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5122  0007BE  D003               	goto	l466
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
  5126  0007C0  010F               	movlb	15	; () banked
  5127  0007C2  8D05               	bsf	5,6,b	;volatile
  5128  0007C4  D002               	goto	l467
  5129  0007C6                     l466:
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;inc\CANlib.h: 901: else
  5133                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
  5134  0007C6  010F               	movlb	15	; () banked
  5135  0007C8  9D05               	bcf	5,6,b	;volatile
  5136  0007CA                     l467:
  5137                           
  5138                           ; BSR set to: 15
  5139                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
  5140  0007CA  0100               	movlb	0	; () banked
  5141  0007CC  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5142  0007CE  D003               	goto	l468
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
  5146  0007D0  010F               	movlb	15	; () banked
  5147  0007D2  8F05               	bsf	5,7,b	;volatile
  5148  0007D4  D002               	goto	l2994
  5149  0007D6                     l468:
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;inc\CANlib.h: 906: else
  5153                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
  5154  0007D6  010F               	movlb	15	; () banked
  5155  0007D8  9F05               	bcf	5,7,b	;volatile
  5156  0007DA                     l2994:
  5157                           
  5158                           ; BSR set to: 15
  5159                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
  5160  0007DA  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5161  0007DE  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5162  0007E2  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5163  0007E6  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5164  0007EA  0E16               	movlw	22
  5165  0007EC  D006               	goto	u3080
  5166  0007EE                     u3085:
  5167  0007EE  0100               	movlb	0	; () banked
  5168  0007F0  90D8               	bcf	status,0,c
  5169  0007F2  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5170  0007F4  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5171  0007F6  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5172  0007F8  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5173  0007FA                     u3080:
  5174  0007FA  2EE8               	decfsz	wreg,f,c
  5175  0007FC  D7F8               	goto	u3085
  5176  0007FE  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5177  000802  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5178  000806  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5179  00080A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
  5183  00080E  0100               	movlb	0	; () banked
  5184  000810  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5185  000812  0100               	movlb	0	; () banked
  5186  000814  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5187  000816  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5188  000818  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5189  00081A  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
  5193  00081C  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5194  000820                     l3000:
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;inc\CANlib.h: 912: }
  5198                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5199  000820  0E02               	movlw	2
  5200  000822  0100               	movlb	0	; () banked
  5201  000824  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5202  000826  A4D8               	btfss	status,2,c
  5203  000828  D089               	goto	l3034
  5204                           
  5205                           ; BSR set to: 0
  5206  00082A  0EF7               	movlw	247
  5207  00082C  0100               	movlb	0	; () banked
  5208  00082E  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5209  000830  A4D8               	btfss	status,2,c
  5210  000832  D084               	goto	l3034
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;inc\CANlib.h: 916: {
  5214                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
  5215  000834  010F               	movlb	15	; () banked
  5216  000836  8709               	bsf	9,3,b	;volatile
  5217                           
  5218                           ; BSR set to: 15
  5219                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
  5220  000838  0100               	movlb	0	; () banked
  5221  00083A  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5222  00083C  0100               	movlb	0	; () banked
  5223  00083E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5224  000840  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5225  000842  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5226  000844  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
  5230  000846  C07D  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
  5234  00084A  0E00               	movlw	0
  5235  00084C  0100               	movlb	0	; () banked
  5236  00084E  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5237  000850  0100               	movlb	0	; () banked
  5238  000852  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5239  000854  0EFF               	movlw	255
  5240  000856  0100               	movlb	0	; () banked
  5241  000858  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5242  00085A  0100               	movlb	0	; () banked
  5243  00085C  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5244  00085E  0E00               	movlw	0
  5245  000860  0100               	movlb	0	; () banked
  5246  000862  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5247  000864  0100               	movlb	0	; () banked
  5248  000866  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5249  000868  0E00               	movlw	0
  5250  00086A  0100               	movlb	0	; () banked
  5251  00086C  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5252  00086E  0100               	movlb	0	; () banked
  5253  000870  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
  5257  000872  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5258  000876  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5259  00087A  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5260  00087E  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5261  000882  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5262  000886  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5263  00088A  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5264  00088E  0100               	movlb	0	; () banked
  5265  000890  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5266  000892  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5267  000896  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5268  00089A  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5269  00089E  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
  5273  0008A2  C07D  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
  5277  0008A6  0100               	movlb	0	; () banked
  5278  0008A8  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5279  0008AA  D003               	goto	l471
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
  5283  0008AC  010F               	movlb	15	; () banked
  5284  0008AE  8109               	bsf	9,0,b	;volatile
  5285  0008B0  D002               	goto	l472
  5286  0008B2                     l471:
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;inc\CANlib.h: 928: else
  5290                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
  5291  0008B2  010F               	movlb	15	; () banked
  5292  0008B4  9109               	bcf	9,0,b	;volatile
  5293  0008B6                     l472:
  5294                           
  5295                           ; BSR set to: 15
  5296                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
  5297  0008B6  0100               	movlb	0	; () banked
  5298  0008B8  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5299  0008BA  D003               	goto	l473
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
  5303  0008BC  010F               	movlb	15	; () banked
  5304  0008BE  8309               	bsf	9,1,b	;volatile
  5305  0008C0  D002               	goto	l474
  5306  0008C2                     l473:
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;inc\CANlib.h: 933: else
  5310                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
  5311  0008C2  010F               	movlb	15	; () banked
  5312  0008C4  9309               	bcf	9,1,b	;volatile
  5313  0008C6                     l474:
  5314                           
  5315                           ; BSR set to: 15
  5316                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
  5317  0008C6  0100               	movlb	0	; () banked
  5318  0008C8  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5319  0008CA  D003               	goto	l475
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
  5323  0008CC  010F               	movlb	15	; () banked
  5324  0008CE  8B09               	bsf	9,5,b	;volatile
  5325  0008D0  D002               	goto	l476
  5326  0008D2                     l475:
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;inc\CANlib.h: 938: else
  5330                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
  5331  0008D2  010F               	movlb	15	; () banked
  5332  0008D4  9B09               	bcf	9,5,b	;volatile
  5333  0008D6                     l476:
  5334                           
  5335                           ; BSR set to: 15
  5336                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
  5337  0008D6  0100               	movlb	0	; () banked
  5338  0008D8  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5339  0008DA  D003               	goto	l477
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
  5343  0008DC  010F               	movlb	15	; () banked
  5344  0008DE  8D09               	bsf	9,6,b	;volatile
  5345  0008E0  D002               	goto	l478
  5346  0008E2                     l477:
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;inc\CANlib.h: 943: else
  5350                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
  5351  0008E2  010F               	movlb	15	; () banked
  5352  0008E4  9D09               	bcf	9,6,b	;volatile
  5353  0008E6                     l478:
  5354                           
  5355                           ; BSR set to: 15
  5356                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
  5357  0008E6  0100               	movlb	0	; () banked
  5358  0008E8  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5359  0008EA  D003               	goto	l479
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
  5363  0008EC  010F               	movlb	15	; () banked
  5364  0008EE  8F09               	bsf	9,7,b	;volatile
  5365  0008F0  D002               	goto	l3028
  5366  0008F2                     l479:
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;inc\CANlib.h: 948: else
  5370                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
  5371  0008F2  010F               	movlb	15	; () banked
  5372  0008F4  9F09               	bcf	9,7,b	;volatile
  5373  0008F6                     l3028:
  5374                           
  5375                           ; BSR set to: 15
  5376                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
  5377  0008F6  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5378  0008FA  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5379  0008FE  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5380  000902  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5381  000906  0E16               	movlw	22
  5382  000908  D006               	goto	u3160
  5383  00090A                     u3165:
  5384  00090A  0100               	movlb	0	; () banked
  5385  00090C  90D8               	bcf	status,0,c
  5386  00090E  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5387  000910  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5388  000912  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5389  000914  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5390  000916                     u3160:
  5391  000916  2EE8               	decfsz	wreg,f,c
  5392  000918  D7F8               	goto	u3165
  5393  00091A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5394  00091E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5395  000922  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5396  000926  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
  5400  00092A  0100               	movlb	0	; () banked
  5401  00092C  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5402  00092E  0100               	movlb	0	; () banked
  5403  000930  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5404  000932  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5405  000934  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5406  000936  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
  5410  000938  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5411  00093C                     l3034:
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;inc\CANlib.h: 954: }
  5415                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5416  00093C  0E03               	movlw	3
  5417  00093E  0100               	movlb	0	; () banked
  5418  000940  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5419  000942  A4D8               	btfss	status,2,c
  5420  000944  D089               	goto	l3068
  5421                           
  5422                           ; BSR set to: 0
  5423  000946  0EF7               	movlw	247
  5424  000948  0100               	movlb	0	; () banked
  5425  00094A  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5426  00094C  A4D8               	btfss	status,2,c
  5427  00094E  D084               	goto	l3068
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;inc\CANlib.h: 957: {
  5431                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
  5432  000950  010F               	movlb	15	; () banked
  5433  000952  870D               	bsf	13,3,b	;volatile
  5434                           
  5435                           ; BSR set to: 15
  5436                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
  5437  000954  0100               	movlb	0	; () banked
  5438  000956  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5439  000958  0100               	movlb	0	; () banked
  5440  00095A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5441  00095C  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5442  00095E  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5443  000960  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
  5447  000962  C07D  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
  5451  000966  0E00               	movlw	0
  5452  000968  0100               	movlb	0	; () banked
  5453  00096A  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5454  00096C  0100               	movlb	0	; () banked
  5455  00096E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5456  000970  0EFF               	movlw	255
  5457  000972  0100               	movlb	0	; () banked
  5458  000974  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5459  000976  0100               	movlb	0	; () banked
  5460  000978  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5461  00097A  0E00               	movlw	0
  5462  00097C  0100               	movlb	0	; () banked
  5463  00097E  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5464  000980  0100               	movlb	0	; () banked
  5465  000982  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5466  000984  0E00               	movlw	0
  5467  000986  0100               	movlb	0	; () banked
  5468  000988  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5469  00098A  0100               	movlb	0	; () banked
  5470  00098C  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5471                           
  5472                           ; BSR set to: 0
  5473                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
  5474  00098E  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5475  000992  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5476  000996  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5477  00099A  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5478  00099E  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5479  0009A2  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5480  0009A6  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5481  0009AA  0100               	movlb	0	; () banked
  5482  0009AC  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5483  0009AE  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5484  0009B2  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5485  0009B6  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5486  0009BA  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
  5490  0009BE  C07D  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5491                           
  5492                           ; BSR set to: 0
  5493                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
  5494  0009C2  0100               	movlb	0	; () banked
  5495  0009C4  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5496  0009C6  D003               	goto	l482
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
  5500  0009C8  010F               	movlb	15	; () banked
  5501  0009CA  810D               	bsf	13,0,b	;volatile
  5502  0009CC  D002               	goto	l483
  5503  0009CE                     l482:
  5504                           
  5505                           ; BSR set to: 0
  5506                           ;inc\CANlib.h: 969: else
  5507                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
  5508  0009CE  010F               	movlb	15	; () banked
  5509  0009D0  910D               	bcf	13,0,b	;volatile
  5510  0009D2                     l483:
  5511                           
  5512                           ; BSR set to: 15
  5513                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
  5514  0009D2  0100               	movlb	0	; () banked
  5515  0009D4  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5516  0009D6  D003               	goto	l484
  5517                           
  5518                           ; BSR set to: 0
  5519                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
  5520  0009D8  010F               	movlb	15	; () banked
  5521  0009DA  830D               	bsf	13,1,b	;volatile
  5522  0009DC  D002               	goto	l485
  5523  0009DE                     l484:
  5524                           
  5525                           ; BSR set to: 0
  5526                           ;inc\CANlib.h: 974: else
  5527                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
  5528  0009DE  010F               	movlb	15	; () banked
  5529  0009E0  930D               	bcf	13,1,b	;volatile
  5530  0009E2                     l485:
  5531                           
  5532                           ; BSR set to: 15
  5533                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
  5534  0009E2  0100               	movlb	0	; () banked
  5535  0009E4  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5536  0009E6  D003               	goto	l486
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
  5540  0009E8  010F               	movlb	15	; () banked
  5541  0009EA  8B0D               	bsf	13,5,b	;volatile
  5542  0009EC  D002               	goto	l487
  5543  0009EE                     l486:
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;inc\CANlib.h: 979: else
  5547                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
  5548  0009EE  010F               	movlb	15	; () banked
  5549  0009F0  9B0D               	bcf	13,5,b	;volatile
  5550  0009F2                     l487:
  5551                           
  5552                           ; BSR set to: 15
  5553                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
  5554  0009F2  0100               	movlb	0	; () banked
  5555  0009F4  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5556  0009F6  D003               	goto	l488
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
  5560  0009F8  010F               	movlb	15	; () banked
  5561  0009FA  8D0D               	bsf	13,6,b	;volatile
  5562  0009FC  D002               	goto	l489
  5563  0009FE                     l488:
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;inc\CANlib.h: 984: else
  5567                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
  5568  0009FE  010F               	movlb	15	; () banked
  5569  000A00  9D0D               	bcf	13,6,b	;volatile
  5570  000A02                     l489:
  5571                           
  5572                           ; BSR set to: 15
  5573                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
  5574  000A02  0100               	movlb	0	; () banked
  5575  000A04  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5576  000A06  D003               	goto	l490
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
  5580  000A08  010F               	movlb	15	; () banked
  5581  000A0A  8F0D               	bsf	13,7,b	;volatile
  5582  000A0C  D002               	goto	l3062
  5583  000A0E                     l490:
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;inc\CANlib.h: 989: else
  5587                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
  5588  000A0E  010F               	movlb	15	; () banked
  5589  000A10  9F0D               	bcf	13,7,b	;volatile
  5590  000A12                     l3062:
  5591                           
  5592                           ; BSR set to: 15
  5593                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
  5594  000A12  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5595  000A16  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5596  000A1A  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5597  000A1E  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5598  000A22  0E16               	movlw	22
  5599  000A24  D006               	goto	u3240
  5600  000A26                     u3245:
  5601  000A26  0100               	movlb	0	; () banked
  5602  000A28  90D8               	bcf	status,0,c
  5603  000A2A  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5604  000A2C  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5605  000A2E  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5606  000A30  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5607  000A32                     u3240:
  5608  000A32  2EE8               	decfsz	wreg,f,c
  5609  000A34  D7F8               	goto	u3245
  5610  000A36  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5611  000A3A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5612  000A3E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5613  000A42  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
  5617  000A46  0100               	movlb	0	; () banked
  5618  000A48  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5619  000A4A  0100               	movlb	0	; () banked
  5620  000A4C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5621  000A4E  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5622  000A50  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5623  000A52  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
  5627  000A54  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5628  000A58                     l3068:
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;inc\CANlib.h: 995: }
  5632                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5633  000A58  0E04               	movlw	4
  5634  000A5A  0100               	movlb	0	; () banked
  5635  000A5C  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5636  000A5E  A4D8               	btfss	status,2,c
  5637  000A60  D089               	goto	l3102
  5638                           
  5639                           ; BSR set to: 0
  5640  000A62  0EF7               	movlw	247
  5641  000A64  0100               	movlb	0	; () banked
  5642  000A66  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5643  000A68  A4D8               	btfss	status,2,c
  5644  000A6A  D084               	goto	l3102
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;inc\CANlib.h: 998: {
  5648                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
  5649  000A6C  010F               	movlb	15	; () banked
  5650  000A6E  8711               	bsf	17,3,b	;volatile
  5651                           
  5652                           ; BSR set to: 15
  5653                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
  5654  000A70  0100               	movlb	0	; () banked
  5655  000A72  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5656  000A74  0100               	movlb	0	; () banked
  5657  000A76  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5658  000A78  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5659  000A7A  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5660  000A7C  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
  5664  000A7E  C07D  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
  5668  000A82  0E00               	movlw	0
  5669  000A84  0100               	movlb	0	; () banked
  5670  000A86  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5671  000A88  0100               	movlb	0	; () banked
  5672  000A8A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5673  000A8C  0EFF               	movlw	255
  5674  000A8E  0100               	movlb	0	; () banked
  5675  000A90  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5676  000A92  0100               	movlb	0	; () banked
  5677  000A94  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5678  000A96  0E00               	movlw	0
  5679  000A98  0100               	movlb	0	; () banked
  5680  000A9A  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5681  000A9C  0100               	movlb	0	; () banked
  5682  000A9E  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5683  000AA0  0E00               	movlw	0
  5684  000AA2  0100               	movlb	0	; () banked
  5685  000AA4  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5686  000AA6  0100               	movlb	0	; () banked
  5687  000AA8  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
  5691  000AAA  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5692  000AAE  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5693  000AB2  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5694  000AB6  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5695  000ABA  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5696  000ABE  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5697  000AC2  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5698  000AC6  0100               	movlb	0	; () banked
  5699  000AC8  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5700  000ACA  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5701  000ACE  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5702  000AD2  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5703  000AD6  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
  5707  000ADA  C07D  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
  5711  000ADE  0100               	movlb	0	; () banked
  5712  000AE0  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5713  000AE2  D003               	goto	l493
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
  5717  000AE4  010F               	movlb	15	; () banked
  5718  000AE6  8111               	bsf	17,0,b	;volatile
  5719  000AE8  D002               	goto	l494
  5720  000AEA                     l493:
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;inc\CANlib.h: 1010: else
  5724                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
  5725  000AEA  010F               	movlb	15	; () banked
  5726  000AEC  9111               	bcf	17,0,b	;volatile
  5727  000AEE                     l494:
  5728                           
  5729                           ; BSR set to: 15
  5730                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
  5731  000AEE  0100               	movlb	0	; () banked
  5732  000AF0  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5733  000AF2  D003               	goto	l495
  5734                           
  5735                           ; BSR set to: 0
  5736                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
  5737  000AF4  010F               	movlb	15	; () banked
  5738  000AF6  8311               	bsf	17,1,b	;volatile
  5739  000AF8  D002               	goto	l496
  5740  000AFA                     l495:
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;inc\CANlib.h: 1015: else
  5744                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
  5745  000AFA  010F               	movlb	15	; () banked
  5746  000AFC  9311               	bcf	17,1,b	;volatile
  5747  000AFE                     l496:
  5748                           
  5749                           ; BSR set to: 15
  5750                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
  5751  000AFE  0100               	movlb	0	; () banked
  5752  000B00  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5753  000B02  D003               	goto	l497
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
  5757  000B04  010F               	movlb	15	; () banked
  5758  000B06  8B11               	bsf	17,5,b	;volatile
  5759  000B08  D002               	goto	l498
  5760  000B0A                     l497:
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;inc\CANlib.h: 1020: else
  5764                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
  5765  000B0A  010F               	movlb	15	; () banked
  5766  000B0C  9B11               	bcf	17,5,b	;volatile
  5767  000B0E                     l498:
  5768                           
  5769                           ; BSR set to: 15
  5770                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
  5771  000B0E  0100               	movlb	0	; () banked
  5772  000B10  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5773  000B12  D003               	goto	l499
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
  5777  000B14  010F               	movlb	15	; () banked
  5778  000B16  8D11               	bsf	17,6,b	;volatile
  5779  000B18  D002               	goto	l500
  5780  000B1A                     l499:
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;inc\CANlib.h: 1025: else
  5784                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
  5785  000B1A  010F               	movlb	15	; () banked
  5786  000B1C  9D11               	bcf	17,6,b	;volatile
  5787  000B1E                     l500:
  5788                           
  5789                           ; BSR set to: 15
  5790                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
  5791  000B1E  0100               	movlb	0	; () banked
  5792  000B20  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5793  000B22  D003               	goto	l501
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
  5797  000B24  010F               	movlb	15	; () banked
  5798  000B26  8F11               	bsf	17,7,b	;volatile
  5799  000B28  D002               	goto	l3096
  5800  000B2A                     l501:
  5801                           
  5802                           ; BSR set to: 0
  5803                           ;inc\CANlib.h: 1030: else
  5804                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
  5805  000B2A  010F               	movlb	15	; () banked
  5806  000B2C  9F11               	bcf	17,7,b	;volatile
  5807  000B2E                     l3096:
  5808                           
  5809                           ; BSR set to: 15
  5810                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
  5811  000B2E  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5812  000B32  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5813  000B36  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5814  000B3A  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5815  000B3E  0E16               	movlw	22
  5816  000B40  D006               	goto	u3320
  5817  000B42                     u3325:
  5818  000B42  0100               	movlb	0	; () banked
  5819  000B44  90D8               	bcf	status,0,c
  5820  000B46  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5821  000B48  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5822  000B4A  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5823  000B4C  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5824  000B4E                     u3320:
  5825  000B4E  2EE8               	decfsz	wreg,f,c
  5826  000B50  D7F8               	goto	u3325
  5827  000B52  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5828  000B56  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5829  000B5A  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5830  000B5E  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
  5834  000B62  0100               	movlb	0	; () banked
  5835  000B64  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5836  000B66  0100               	movlb	0	; () banked
  5837  000B68  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5838  000B6A  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5839  000B6C  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5840  000B6E  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
  5844  000B70  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5845  000B74                     l3102:
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;inc\CANlib.h: 1036: }
  5849                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5850  000B74  0E05               	movlw	5
  5851  000B76  0100               	movlb	0	; () banked
  5852  000B78  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5853  000B7A  A4D8               	btfss	status,2,c
  5854  000B7C  0012               	return	
  5855                           
  5856                           ; BSR set to: 0
  5857  000B7E  0EF7               	movlw	247
  5858  000B80  0100               	movlb	0	; () banked
  5859  000B82  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5860  000B84  A4D8               	btfss	status,2,c
  5861  000B86  0012               	return	
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;inc\CANlib.h: 1039: {
  5865                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
  5866  000B88  010F               	movlb	15	; () banked
  5867  000B8A  8715               	bsf	21,3,b	;volatile
  5868                           
  5869                           ; BSR set to: 15
  5870                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
  5871  000B8C  0100               	movlb	0	; () banked
  5872  000B8E  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5873  000B90  0100               	movlb	0	; () banked
  5874  000B92  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5875  000B94  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5876  000B96  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5877  000B98  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
  5881  000B9A  C07D  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
  5885  000B9E  0E00               	movlw	0
  5886  000BA0  0100               	movlb	0	; () banked
  5887  000BA2  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5888  000BA4  0100               	movlb	0	; () banked
  5889  000BA6  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5890  000BA8  0EFF               	movlw	255
  5891  000BAA  0100               	movlb	0	; () banked
  5892  000BAC  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5893  000BAE  0100               	movlb	0	; () banked
  5894  000BB0  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5895  000BB2  0E00               	movlw	0
  5896  000BB4  0100               	movlb	0	; () banked
  5897  000BB6  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5898  000BB8  0100               	movlb	0	; () banked
  5899  000BBA  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5900  000BBC  0E00               	movlw	0
  5901  000BBE  0100               	movlb	0	; () banked
  5902  000BC0  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5903  000BC2  0100               	movlb	0	; () banked
  5904  000BC4  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
  5908  000BC6  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5909  000BCA  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5910  000BCE  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5911  000BD2  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5912  000BD6  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5913  000BDA  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5914  000BDE  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5915  000BE2  0100               	movlb	0	; () banked
  5916  000BE4  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5917  000BE6  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5918  000BEA  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5919  000BEE  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5920  000BF2  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
  5924  000BF6  C07D  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
  5928  000BFA  0100               	movlb	0	; () banked
  5929  000BFC  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5930  000BFE  D003               	goto	l504
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
  5934  000C00  010F               	movlb	15	; () banked
  5935  000C02  8115               	bsf	21,0,b	;volatile
  5936  000C04  D002               	goto	l505
  5937  000C06                     l504:
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;inc\CANlib.h: 1051: else
  5941                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
  5942  000C06  010F               	movlb	15	; () banked
  5943  000C08  9115               	bcf	21,0,b	;volatile
  5944  000C0A                     l505:
  5945                           
  5946                           ; BSR set to: 15
  5947                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
  5948  000C0A  0100               	movlb	0	; () banked
  5949  000C0C  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5950  000C0E  D003               	goto	l506
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
  5954  000C10  010F               	movlb	15	; () banked
  5955  000C12  8315               	bsf	21,1,b	;volatile
  5956  000C14  D002               	goto	l507
  5957  000C16                     l506:
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;inc\CANlib.h: 1056: else
  5961                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
  5962  000C16  010F               	movlb	15	; () banked
  5963  000C18  9315               	bcf	21,1,b	;volatile
  5964  000C1A                     l507:
  5965                           
  5966                           ; BSR set to: 15
  5967                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
  5968  000C1A  0100               	movlb	0	; () banked
  5969  000C1C  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5970  000C1E  D003               	goto	l508
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
  5974  000C20  010F               	movlb	15	; () banked
  5975  000C22  8B15               	bsf	21,5,b	;volatile
  5976  000C24  D002               	goto	l509
  5977  000C26                     l508:
  5978                           
  5979                           ; BSR set to: 0
  5980                           ;inc\CANlib.h: 1061: else
  5981                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
  5982  000C26  010F               	movlb	15	; () banked
  5983  000C28  9B15               	bcf	21,5,b	;volatile
  5984  000C2A                     l509:
  5985                           
  5986                           ; BSR set to: 15
  5987                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
  5988  000C2A  0100               	movlb	0	; () banked
  5989  000C2C  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5990  000C2E  D003               	goto	l510
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
  5994  000C30  010F               	movlb	15	; () banked
  5995  000C32  8D15               	bsf	21,6,b	;volatile
  5996  000C34  D002               	goto	l511
  5997  000C36                     l510:
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;inc\CANlib.h: 1066: else
  6001                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
  6002  000C36  010F               	movlb	15	; () banked
  6003  000C38  9D15               	bcf	21,6,b	;volatile
  6004  000C3A                     l511:
  6005                           
  6006                           ; BSR set to: 15
  6007                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
  6008  000C3A  0100               	movlb	0	; () banked
  6009  000C3C  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6010  000C3E  D003               	goto	l512
  6011                           
  6012                           ; BSR set to: 0
  6013                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
  6014  000C40  010F               	movlb	15	; () banked
  6015  000C42  8F15               	bsf	21,7,b	;volatile
  6016  000C44  D002               	goto	l3130
  6017  000C46                     l512:
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;inc\CANlib.h: 1071: else
  6021                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
  6022  000C46  010F               	movlb	15	; () banked
  6023  000C48  9F15               	bcf	21,7,b	;volatile
  6024  000C4A                     l3130:
  6025                           
  6026                           ; BSR set to: 15
  6027                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
  6028  000C4A  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  6029  000C4E  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6030  000C52  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6031  000C56  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6032  000C5A  0E16               	movlw	22
  6033  000C5C  D006               	goto	u3400
  6034  000C5E                     u3405:
  6035  000C5E  0100               	movlb	0	; () banked
  6036  000C60  90D8               	bcf	status,0,c
  6037  000C62  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6038  000C64  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6039  000C66  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6040  000C68  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  6041  000C6A                     u3400:
  6042  000C6A  2EE8               	decfsz	wreg,f,c
  6043  000C6C  D7F8               	goto	u3405
  6044  000C6E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  6045  000C72  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6046  000C76  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6047  000C7A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6048                           
  6049                           ; BSR set to: 0
  6050                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
  6051  000C7E  0100               	movlb	0	; () banked
  6052  000C80  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  6053  000C82  0100               	movlb	0	; () banked
  6054  000C84  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  6055  000C86  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6056  000C88  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6057  000C8A  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
  6061  000C8C  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6062  000C90  0012               	return	
  6063  000C92                     __end_of_CANSetFilter:
  6064                           	opt stack 0
  6065                           tblptru	equ	0xFF8
  6066                           tblptrh	equ	0xFF7
  6067                           tblptrl	equ	0xFF6
  6068                           tablat	equ	0xFF5
  6069                           prodh	equ	0xFF4
  6070                           prodl	equ	0xFF3
  6071                           intcon	equ	0xFF2
  6072                           intcon2	equ	0xFF1
  6073                           postinc0	equ	0xFEE
  6074                           wreg	equ	0xFE8
  6075                           postdec1	equ	0xFE5
  6076                           fsr1l	equ	0xFE1
  6077                           indf2	equ	0xFDF
  6078                           fsr2h	equ	0xFDA
  6079                           fsr2l	equ	0xFD9
  6080                           status	equ	0xFD8
  6081                           
  6082 ;; *************** function _CANOperationMode *****************
  6083 ;; Defined at:
  6084 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  mode            1    wreg     enum E16838
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;  mode            1   19[BANK0 ] enum E16838
  6089 ;; Return value:  Size  Location     Type
  6090 ;;		None               void
  6091 ;; Registers used:
  6092 ;;		wreg, status,2, status,0
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6098 ;;      Params:         0       0       0       0
  6099 ;;      Locals:         0       1       0       0
  6100 ;;      Temps:          0       0       0       0
  6101 ;;      Totals:         0       1       0       0
  6102 ;;Total ram usage:        1 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    4
  6105 ;; This function calls:
  6106 ;;		Nothing
  6107 ;; This function is called by:
  6108 ;;		_CANInitialize
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text11
  6113  002BB8                     __ptext11:
  6114                           	opt stack 0
  6115  002BB8                     _CANOperationMode:
  6116                           	opt stack 24
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;incstack = 0
  6120                           ;CANOperationMode@mode stored from wreg
  6121  002BB8  0100               	movlb	0	; () banked
  6122  002BBA  6F73               	movwf	CANOperationMode@mode& (0+255),b
  6123                           
  6124                           ;inc\CANlib.h: 209: CANCON = mode;
  6125  002BBC  C073  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6126  002BC0                     l2726:
  6127  002BC0  506E               	movf	3950,w,c	;volatile
  6128  002BC2  0BE0               	andlw	224
  6129  002BC4  0100               	movlb	0	; () banked
  6130  002BC6  1973               	xorwf	CANOperationMode@mode& (0+255),w,b
  6131  002BC8  B4D8               	btfsc	status,2,c
  6132  002BCA  0012               	return	
  6133  002BCC  D7F9               	goto	l2726
  6134  002BCE                     __end_of_CANOperationMode:
  6135                           	opt stack 0
  6136                           tblptru	equ	0xFF8
  6137                           tblptrh	equ	0xFF7
  6138                           tblptrl	equ	0xFF6
  6139                           tablat	equ	0xFF5
  6140                           prodh	equ	0xFF4
  6141                           prodl	equ	0xFF3
  6142                           intcon	equ	0xFF2
  6143                           intcon2	equ	0xFF1
  6144                           postinc0	equ	0xFEE
  6145                           wreg	equ	0xFE8
  6146                           postdec1	equ	0xFE5
  6147                           fsr1l	equ	0xFE1
  6148                           indf2	equ	0xFDF
  6149                           fsr2h	equ	0xFDA
  6150                           fsr2l	equ	0xFD9
  6151                           status	equ	0xFD8
  6152                           
  6153 ;; *************** function _calibrazione *****************
  6154 ;; Defined at:
  6155 ;;		line 169 in file "newmain.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;		None
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;		None
  6160 ;; Return value:  Size  Location     Type
  6161 ;;		None               void
  6162 ;; Registers used:
  6163 ;;		wreg, status,2, status,0, cstack
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6169 ;;      Params:         0       0       0       0
  6170 ;;      Locals:         0       0       0       0
  6171 ;;      Temps:          0       0       0       0
  6172 ;;      Totals:         0       0       0       0
  6173 ;;Total ram usage:        0 bytes
  6174 ;; Hardware stack levels used:    1
  6175 ;; Hardware stack levels required when called:    5
  6176 ;; This function calls:
  6177 ;;		_BusyADC
  6178 ;;		_ConvertADC
  6179 ;;		_ReadADC
  6180 ;;		___lwdiv
  6181 ;; This function is called by:
  6182 ;;		_main
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text12
  6187  002A7A                     __ptext12:
  6188                           	opt stack 0
  6189  002A7A                     _calibrazione:
  6190                           	opt stack 25
  6191                           
  6192                           ;newmain.c: 170: ConvertADC();
  6193                           
  6194                           ; BSR set to: 0
  6195                           ;incstack = 0
  6196  002A7A  EC19  F016         	call	_ConvertADC	;wreg free
  6197  002A7E                     l3698:
  6198  002A7E  EC04  F016         	call	_BusyADC	;wreg free
  6199  002A82  0900               	iorlw	0
  6200  002A84  A4D8               	btfss	status,2,c
  6201  002A86  D7FB               	goto	l3698
  6202                           
  6203                           ;newmain.c: 172: ADCResult = ReadADC();
  6204  002A88  ECF2  F015         	call	_ReadADC	;wreg free
  6205  002A8C  C073  F0B1         	movff	?_ReadADC,_ADCResult
  6206  002A90  C074  F0B2         	movff	?_ReadADC+1,_ADCResult+1
  6207                           
  6208                           ;newmain.c: 173: calibration = (ADCResult - 511) / 45;
  6209  002A94  0E01               	movlw	1
  6210  002A96  0100               	movlb	0	; () banked
  6211  002A98  25B1               	addwf	_ADCResult& (0+255),w,b
  6212  002A9A  0100               	movlb	0	; () banked
  6213  002A9C  6F73               	movwf	___lwdiv@dividend& (0+255),b
  6214  002A9E  0EFE               	movlw	254
  6215  002AA0  0100               	movlb	0	; () banked
  6216  002AA2  21B2               	addwfc	(_ADCResult+1)& (0+255),w,b
  6217  002AA4  0100               	movlb	0	; () banked
  6218  002AA6  6F74               	movwf	(___lwdiv@dividend+1)& (0+255),b
  6219  002AA8  0E00               	movlw	0
  6220  002AAA  0100               	movlb	0	; () banked
  6221  002AAC  6F76               	movwf	(___lwdiv@divisor+1)& (0+255),b
  6222  002AAE  0E2D               	movlw	45
  6223  002AB0  6F75               	movwf	___lwdiv@divisor& (0+255),b
  6224  002AB2  EC70  F014         	call	___lwdiv	;wreg free
  6225  002AB6  C073  F00D         	movff	?___lwdiv,_calibration
  6226  002ABA  C074  F00E         	movff	?___lwdiv+1,_calibration+1
  6227  002ABE  0012               	return		;funcret
  6228  002AC0                     __end_of_calibrazione:
  6229                           	opt stack 0
  6230                           tblptru	equ	0xFF8
  6231                           tblptrh	equ	0xFF7
  6232                           tblptrl	equ	0xFF6
  6233                           tablat	equ	0xFF5
  6234                           prodh	equ	0xFF4
  6235                           prodl	equ	0xFF3
  6236                           intcon	equ	0xFF2
  6237                           intcon2	equ	0xFF1
  6238                           postinc0	equ	0xFEE
  6239                           wreg	equ	0xFE8
  6240                           postdec1	equ	0xFE5
  6241                           fsr1l	equ	0xFE1
  6242                           indf2	equ	0xFDF
  6243                           fsr2h	equ	0xFDA
  6244                           fsr2l	equ	0xFD9
  6245                           status	equ	0xFD8
  6246                           
  6247 ;; *************** function ___lwdiv *****************
  6248 ;; Defined at:
  6249 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;  dividend        2   19[BANK0 ] unsigned int 
  6252 ;;  divisor         2   21[BANK0 ] unsigned int 
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;  quotient        2   23[BANK0 ] unsigned int 
  6255 ;;  counter         1   25[BANK0 ] unsigned char 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  2   19[BANK0 ] unsigned int 
  6258 ;; Registers used:
  6259 ;;		wreg, status,2, status,0
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6265 ;;      Params:         0       4       0       0
  6266 ;;      Locals:         0       3       0       0
  6267 ;;      Temps:          0       0       0       0
  6268 ;;      Totals:         0       7       0       0
  6269 ;;Total ram usage:        7 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    4
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_calibrazione
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text13
  6280  0028E0                     __ptext13:
  6281                           	opt stack 0
  6282  0028E0                     ___lwdiv:
  6283                           	opt stack 25
  6284                           
  6285                           ;incstack = 0
  6286  0028E0  0E00               	movlw	0
  6287  0028E2  0100               	movlb	0	; () banked
  6288  0028E4  6F78               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6289  0028E6  0E00               	movlw	0
  6290  0028E8  6F77               	movwf	___lwdiv@quotient& (0+255),b
  6291                           
  6292                           ; BSR set to: 0
  6293  0028EA  0100               	movlb	0	; () banked
  6294  0028EC  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6295  0028EE  0100               	movlb	0	; () banked
  6296  0028F0  1176               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6297  0028F2  B4D8               	btfsc	status,2,c
  6298  0028F4  D02C               	goto	l1095
  6299                           
  6300                           ; BSR set to: 0
  6301  0028F6  0E01               	movlw	1
  6302  0028F8  0100               	movlb	0	; () banked
  6303  0028FA  6F79               	movwf	___lwdiv@counter& (0+255),b
  6304  0028FC  D006               	goto	l3466
  6305  0028FE                     l3464:
  6306                           
  6307                           ; BSR set to: 0
  6308  0028FE  0100               	movlb	0	; () banked
  6309  002900  90D8               	bcf	status,0,c
  6310  002902  3775               	rlcf	___lwdiv@divisor& (0+255),f,b
  6311  002904  3776               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6312  002906  0100               	movlb	0	; () banked
  6313  002908  2B79               	incf	___lwdiv@counter& (0+255),f,b
  6314  00290A                     l3466:
  6315                           
  6316                           ; BSR set to: 0
  6317  00290A  0100               	movlb	0	; () banked
  6318  00290C  AF76               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6319  00290E  D7F7               	goto	l3464
  6320  002910                     l3468:
  6321                           
  6322                           ; BSR set to: 0
  6323  002910  0100               	movlb	0	; () banked
  6324  002912  90D8               	bcf	status,0,c
  6325  002914  3777               	rlcf	___lwdiv@quotient& (0+255),f,b
  6326  002916  3778               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6327                           
  6328                           ; BSR set to: 0
  6329  002918  0100               	movlb	0	; () banked
  6330  00291A  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6331  00291C  0100               	movlb	0	; () banked
  6332  00291E  5D73               	subwf	___lwdiv@dividend& (0+255),w,b
  6333  002920  0100               	movlb	0	; () banked
  6334  002922  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6335  002924  0100               	movlb	0	; () banked
  6336  002926  5974               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6337  002928  A0D8               	btfss	status,0,c
  6338  00292A  D00A               	goto	l3476
  6339                           
  6340                           ; BSR set to: 0
  6341  00292C  0100               	movlb	0	; () banked
  6342  00292E  5175               	movf	___lwdiv@divisor& (0+255),w,b
  6343  002930  0100               	movlb	0	; () banked
  6344  002932  5F73               	subwf	___lwdiv@dividend& (0+255),f,b
  6345  002934  0100               	movlb	0	; () banked
  6346  002936  5176               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6347  002938  0100               	movlb	0	; () banked
  6348  00293A  5B74               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6349                           
  6350                           ; BSR set to: 0
  6351  00293C  0100               	movlb	0	; () banked
  6352  00293E  8177               	bsf	___lwdiv@quotient& (0+255),0,b
  6353  002940                     l3476:
  6354                           
  6355                           ; BSR set to: 0
  6356  002940  0100               	movlb	0	; () banked
  6357  002942  90D8               	bcf	status,0,c
  6358  002944  3376               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6359  002946  3375               	rrcf	___lwdiv@divisor& (0+255),f,b
  6360                           
  6361                           ; BSR set to: 0
  6362  002948  0100               	movlb	0	; () banked
  6363  00294A  2F79               	decfsz	___lwdiv@counter& (0+255),f,b
  6364  00294C  D7E1               	goto	l3468
  6365  00294E                     l1095:
  6366                           
  6367                           ; BSR set to: 0
  6368  00294E  C077  F073         	movff	___lwdiv@quotient,?___lwdiv
  6369  002952  C078  F074         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6370                           
  6371                           ; BSR set to: 0
  6372  002956  0012               	return		;funcret
  6373  002958                     __end_of___lwdiv:
  6374                           	opt stack 0
  6375                           tblptru	equ	0xFF8
  6376                           tblptrh	equ	0xFF7
  6377                           tblptrl	equ	0xFF6
  6378                           tablat	equ	0xFF5
  6379                           prodh	equ	0xFF4
  6380                           prodl	equ	0xFF3
  6381                           intcon	equ	0xFF2
  6382                           intcon2	equ	0xFF1
  6383                           postinc0	equ	0xFEE
  6384                           wreg	equ	0xFE8
  6385                           postdec1	equ	0xFE5
  6386                           fsr1l	equ	0xFE1
  6387                           indf2	equ	0xFDF
  6388                           fsr2h	equ	0xFDA
  6389                           fsr2l	equ	0xFD9
  6390                           status	equ	0xFD8
  6391                           
  6392 ;; *************** function _ReadADC *****************
  6393 ;; Defined at:
  6394 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcread.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;		None
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;		None
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  2   19[BANK0 ] int 
  6401 ;; Registers used:
  6402 ;;		wreg, status,2
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6408 ;;      Params:         0       2       0       0
  6409 ;;      Locals:         0       0       0       0
  6410 ;;      Temps:          0       2       0       0
  6411 ;;      Totals:         0       4       0       0
  6412 ;;Total ram usage:        4 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    4
  6415 ;; This function calls:
  6416 ;;		Nothing
  6417 ;; This function is called by:
  6418 ;;		_calibrazione
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           	psect	text14
  6423  002BE4                     __ptext14:
  6424                           	opt stack 0
  6425  002BE4                     _ReadADC:
  6426                           	opt stack 25
  6427                           
  6428                           ; BSR set to: 0
  6429                           ;incstack = 0
  6430  002BE4  50C4               	movf	4036,w,c	;volatile
  6431  002BE6  0100               	movlb	0	; () banked
  6432  002BE8  6F75               	movwf	??_ReadADC& (0+255),b
  6433  002BEA  50C3               	movf	4035,w,c	;volatile
  6434  002BEC  0100               	movlb	0	; () banked
  6435  002BEE  6F73               	movwf	?_ReadADC& (0+255),b
  6436  002BF0  C075  F074         	movff	??_ReadADC,?_ReadADC+1
  6437  002BF4  0012               	return	
  6438  002BF6                     __end_of_ReadADC:
  6439                           	opt stack 0
  6440                           tblptru	equ	0xFF8
  6441                           tblptrh	equ	0xFF7
  6442                           tblptrl	equ	0xFF6
  6443                           tablat	equ	0xFF5
  6444                           prodh	equ	0xFF4
  6445                           prodl	equ	0xFF3
  6446                           intcon	equ	0xFF2
  6447                           intcon2	equ	0xFF1
  6448                           postinc0	equ	0xFEE
  6449                           wreg	equ	0xFE8
  6450                           postdec1	equ	0xFE5
  6451                           fsr1l	equ	0xFE1
  6452                           indf2	equ	0xFDF
  6453                           fsr2h	equ	0xFDA
  6454                           fsr2l	equ	0xFD9
  6455                           status	equ	0xFD8
  6456                           
  6457 ;; *************** function _ConvertADC *****************
  6458 ;; Defined at:
  6459 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcconv.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;		None
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;		None
  6464 ;; Return value:  Size  Location     Type
  6465 ;;		None               void
  6466 ;; Registers used:
  6467 ;;		None
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6473 ;;      Params:         0       0       0       0
  6474 ;;      Locals:         0       0       0       0
  6475 ;;      Temps:          0       0       0       0
  6476 ;;      Totals:         0       0       0       0
  6477 ;;Total ram usage:        0 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:    4
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_calibrazione
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text15
  6488  002C32                     __ptext15:
  6489                           	opt stack 0
  6490  002C32                     _ConvertADC:
  6491                           	opt stack 25
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;incstack = 0
  6495  002C32  82C2               	bsf	4034,1,c	;volatile
  6496  002C34  0012               	return		;funcret
  6497  002C36                     __end_of_ConvertADC:
  6498                           	opt stack 0
  6499                           tblptru	equ	0xFF8
  6500                           tblptrh	equ	0xFF7
  6501                           tblptrl	equ	0xFF6
  6502                           tablat	equ	0xFF5
  6503                           prodh	equ	0xFF4
  6504                           prodl	equ	0xFF3
  6505                           intcon	equ	0xFF2
  6506                           intcon2	equ	0xFF1
  6507                           postinc0	equ	0xFEE
  6508                           wreg	equ	0xFE8
  6509                           postdec1	equ	0xFE5
  6510                           fsr1l	equ	0xFE1
  6511                           indf2	equ	0xFDF
  6512                           fsr2h	equ	0xFDA
  6513                           fsr2l	equ	0xFD9
  6514                           status	equ	0xFD8
  6515                           
  6516 ;; *************** function _BusyADC *****************
  6517 ;; Defined at:
  6518 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcbusy.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;		None
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;		None
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  1    wreg      unsigned char 
  6525 ;; Registers used:
  6526 ;;		wreg
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6532 ;;      Params:         0       0       0       0
  6533 ;;      Locals:         0       0       0       0
  6534 ;;      Temps:          0       0       0       0
  6535 ;;      Totals:         0       0       0       0
  6536 ;;Total ram usage:        0 bytes
  6537 ;; Hardware stack levels used:    1
  6538 ;; Hardware stack levels required when called:    4
  6539 ;; This function calls:
  6540 ;;		Nothing
  6541 ;; This function is called by:
  6542 ;;		_calibrazione
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           
  6546                           	psect	text16
  6547  002C08                     __ptext16:
  6548                           	opt stack 0
  6549  002C08                     _BusyADC:
  6550                           	opt stack 25
  6551                           
  6552                           ;incstack = 0
  6553  002C08  A2C2               	btfss	4034,1,c	;volatile
  6554  002C0A  D002               	goto	u3870
  6555  002C0C  0E01               	movlw	1
  6556  002C0E  0012               	return	
  6557  002C10                     u3870:
  6558  002C10  0E00               	movlw	0
  6559  002C12  0012               	return	
  6560  002C14                     __end_of_BusyADC:
  6561                           	opt stack 0
  6562                           tblptru	equ	0xFF8
  6563                           tblptrh	equ	0xFF7
  6564                           tblptrl	equ	0xFF6
  6565                           tablat	equ	0xFF5
  6566                           prodh	equ	0xFF4
  6567                           prodl	equ	0xFF3
  6568                           intcon	equ	0xFF2
  6569                           intcon2	equ	0xFF1
  6570                           postinc0	equ	0xFEE
  6571                           wreg	equ	0xFE8
  6572                           postdec1	equ	0xFE5
  6573                           fsr1l	equ	0xFE1
  6574                           indf2	equ	0xFDF
  6575                           fsr2h	equ	0xFDA
  6576                           fsr2l	equ	0xFD9
  6577                           status	equ	0xFD8
  6578                           
  6579 ;; *************** function ___lmul *****************
  6580 ;; Defined at:
  6581 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  multiplier      4   19[BANK0 ] unsigned long 
  6584 ;;  multiplicand    4   23[BANK0 ] unsigned long 
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;  product         4   27[BANK0 ] unsigned long 
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  4   19[BANK0 ] unsigned long 
  6589 ;; Registers used:
  6590 ;;		wreg, status,2, status,0
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6596 ;;      Params:         0       8       0       0
  6597 ;;      Locals:         0       4       0       0
  6598 ;;      Temps:          0       0       0       0
  6599 ;;      Totals:         0      12       0       0
  6600 ;;Total ram usage:       12 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; Hardware stack levels required when called:    4
  6603 ;; This function calls:
  6604 ;;		Nothing
  6605 ;; This function is called by:
  6606 ;;		_main
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           	psect	text17
  6611  002958                     __ptext17:
  6612                           	opt stack 0
  6613  002958                     ___lmul:
  6614                           	opt stack 26
  6615                           
  6616                           ;incstack = 0
  6617  002958  0E00               	movlw	0
  6618  00295A  0100               	movlb	0	; () banked
  6619  00295C  6F7B               	movwf	___lmul@product& (0+255),b
  6620  00295E  0E00               	movlw	0
  6621  002960  6F7C               	movwf	(___lmul@product+1)& (0+255),b
  6622  002962  0E00               	movlw	0
  6623  002964  6F7D               	movwf	(___lmul@product+2)& (0+255),b
  6624  002966  0E00               	movlw	0
  6625  002968  6F7E               	movwf	(___lmul@product+3)& (0+255),b
  6626  00296A                     l3714:
  6627                           
  6628                           ; BSR set to: 0
  6629  00296A  0100               	movlb	0	; () banked
  6630  00296C  A173               	btfss	___lmul@multiplier& (0+255),0,b
  6631  00296E  D010               	goto	l3718
  6632                           
  6633                           ; BSR set to: 0
  6634  002970  0100               	movlb	0	; () banked
  6635  002972  5177               	movf	___lmul@multiplicand& (0+255),w,b
  6636  002974  0100               	movlb	0	; () banked
  6637  002976  277B               	addwf	___lmul@product& (0+255),f,b
  6638  002978  0100               	movlb	0	; () banked
  6639  00297A  5178               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6640  00297C  0100               	movlb	0	; () banked
  6641  00297E  237C               	addwfc	(___lmul@product+1)& (0+255),f,b
  6642  002980  0100               	movlb	0	; () banked
  6643  002982  5179               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6644  002984  0100               	movlb	0	; () banked
  6645  002986  237D               	addwfc	(___lmul@product+2)& (0+255),f,b
  6646  002988  0100               	movlb	0	; () banked
  6647  00298A  517A               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6648  00298C  0100               	movlb	0	; () banked
  6649  00298E  237E               	addwfc	(___lmul@product+3)& (0+255),f,b
  6650  002990                     l3718:
  6651                           
  6652                           ; BSR set to: 0
  6653  002990  0100               	movlb	0	; () banked
  6654  002992  90D8               	bcf	status,0,c
  6655  002994  3777               	rlcf	___lmul@multiplicand& (0+255),f,b
  6656  002996  3778               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6657  002998  3779               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6658  00299A  377A               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6659                           
  6660                           ; BSR set to: 0
  6661  00299C  0100               	movlb	0	; () banked
  6662  00299E  90D8               	bcf	status,0,c
  6663  0029A0  3376               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6664  0029A2  3375               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6665  0029A4  3374               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6666  0029A6  3373               	rrcf	___lmul@multiplier& (0+255),f,b
  6667  0029A8  0100               	movlb	0	; () banked
  6668  0029AA  5173               	movf	___lmul@multiplier& (0+255),w,b
  6669  0029AC  0100               	movlb	0	; () banked
  6670  0029AE  1174               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6671  0029B0  0100               	movlb	0	; () banked
  6672  0029B2  1175               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6673  0029B4  0100               	movlb	0	; () banked
  6674  0029B6  1176               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6675  0029B8  A4D8               	btfss	status,2,c
  6676  0029BA  D7D7               	goto	l3714
  6677                           
  6678                           ; BSR set to: 0
  6679  0029BC  C07B  F073         	movff	___lmul@product,?___lmul
  6680  0029C0  C07C  F074         	movff	___lmul@product+1,?___lmul+1
  6681  0029C4  C07D  F075         	movff	___lmul@product+2,?___lmul+2
  6682  0029C8  C07E  F076         	movff	___lmul@product+3,?___lmul+3
  6683                           
  6684                           ; BSR set to: 0
  6685  0029CC  0012               	return		;funcret
  6686  0029CE                     __end_of___lmul:
  6687                           	opt stack 0
  6688                           tblptru	equ	0xFF8
  6689                           tblptrh	equ	0xFF7
  6690                           tblptrl	equ	0xFF6
  6691                           tablat	equ	0xFF5
  6692                           prodh	equ	0xFF4
  6693                           prodl	equ	0xFF3
  6694                           intcon	equ	0xFF2
  6695                           intcon2	equ	0xFF1
  6696                           postinc0	equ	0xFEE
  6697                           wreg	equ	0xFE8
  6698                           postdec1	equ	0xFE5
  6699                           fsr1l	equ	0xFE1
  6700                           indf2	equ	0xFDF
  6701                           fsr2h	equ	0xFDA
  6702                           fsr2l	equ	0xFD9
  6703                           status	equ	0xFD8
  6704                           
  6705 ;; *************** function ___lldiv *****************
  6706 ;; Defined at:
  6707 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;  dividend        4   31[BANK0 ] unsigned long 
  6710 ;;  divisor         4   35[BANK0 ] unsigned long 
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;  quotient        4   39[BANK0 ] unsigned long 
  6713 ;;  counter         1   43[BANK0 ] unsigned char 
  6714 ;; Return value:  Size  Location     Type
  6715 ;;                  4   31[BANK0 ] unsigned long 
  6716 ;; Registers used:
  6717 ;;		wreg, status,2, status,0
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6723 ;;      Params:         0       8       0       0
  6724 ;;      Locals:         0       5       0       0
  6725 ;;      Temps:          0       0       0       0
  6726 ;;      Totals:         0      13       0       0
  6727 ;;Total ram usage:       13 bytes
  6728 ;; Hardware stack levels used:    1
  6729 ;; Hardware stack levels required when called:    4
  6730 ;; This function calls:
  6731 ;;		Nothing
  6732 ;; This function is called by:
  6733 ;;		_main
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text18
  6738  002672                     __ptext18:
  6739                           	opt stack 0
  6740  002672                     ___lldiv:
  6741                           	opt stack 26
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;incstack = 0
  6745  002672  0E00               	movlw	0
  6746  002674  0100               	movlb	0	; () banked
  6747  002676  6F87               	movwf	___lldiv@quotient& (0+255),b
  6748  002678  0E00               	movlw	0
  6749  00267A  6F88               	movwf	(___lldiv@quotient+1)& (0+255),b
  6750  00267C  0E00               	movlw	0
  6751  00267E  6F89               	movwf	(___lldiv@quotient+2)& (0+255),b
  6752  002680  0E00               	movlw	0
  6753  002682  6F8A               	movwf	(___lldiv@quotient+3)& (0+255),b
  6754                           
  6755                           ; BSR set to: 0
  6756  002684  0100               	movlb	0	; () banked
  6757  002686  5183               	movf	___lldiv@divisor& (0+255),w,b
  6758  002688  0100               	movlb	0	; () banked
  6759  00268A  1184               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6760  00268C  0100               	movlb	0	; () banked
  6761  00268E  1185               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6762  002690  0100               	movlb	0	; () banked
  6763  002692  1186               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6764  002694  B4D8               	btfsc	status,2,c
  6765  002696  D042               	goto	l1042
  6766                           
  6767                           ; BSR set to: 0
  6768  002698  0E01               	movlw	1
  6769  00269A  0100               	movlb	0	; () banked
  6770  00269C  6F8B               	movwf	___lldiv@counter& (0+255),b
  6771  00269E  D008               	goto	l3730
  6772  0026A0                     l3728:
  6773                           
  6774                           ; BSR set to: 0
  6775  0026A0  0100               	movlb	0	; () banked
  6776  0026A2  90D8               	bcf	status,0,c
  6777  0026A4  3783               	rlcf	___lldiv@divisor& (0+255),f,b
  6778  0026A6  3784               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6779  0026A8  3785               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6780  0026AA  3786               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6781  0026AC  0100               	movlb	0	; () banked
  6782  0026AE  2B8B               	incf	___lldiv@counter& (0+255),f,b
  6783  0026B0                     l3730:
  6784                           
  6785                           ; BSR set to: 0
  6786  0026B0  0100               	movlb	0	; () banked
  6787  0026B2  AF86               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6788  0026B4  D7F5               	goto	l3728
  6789  0026B6                     l3732:
  6790                           
  6791                           ; BSR set to: 0
  6792  0026B6  0100               	movlb	0	; () banked
  6793  0026B8  90D8               	bcf	status,0,c
  6794  0026BA  3787               	rlcf	___lldiv@quotient& (0+255),f,b
  6795  0026BC  3788               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6796  0026BE  3789               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6797  0026C0  378A               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6798                           
  6799                           ; BSR set to: 0
  6800  0026C2  0100               	movlb	0	; () banked
  6801  0026C4  5183               	movf	___lldiv@divisor& (0+255),w,b
  6802  0026C6  0100               	movlb	0	; () banked
  6803  0026C8  5D7F               	subwf	___lldiv@dividend& (0+255),w,b
  6804  0026CA  0100               	movlb	0	; () banked
  6805  0026CC  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6806  0026CE  0100               	movlb	0	; () banked
  6807  0026D0  5980               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6808  0026D2  0100               	movlb	0	; () banked
  6809  0026D4  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6810  0026D6  0100               	movlb	0	; () banked
  6811  0026D8  5981               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6812  0026DA  0100               	movlb	0	; () banked
  6813  0026DC  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6814  0026DE  0100               	movlb	0	; () banked
  6815  0026E0  5982               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6816  0026E2  A0D8               	btfss	status,0,c
  6817  0026E4  D012               	goto	l3740
  6818                           
  6819                           ; BSR set to: 0
  6820  0026E6  0100               	movlb	0	; () banked
  6821  0026E8  5183               	movf	___lldiv@divisor& (0+255),w,b
  6822  0026EA  0100               	movlb	0	; () banked
  6823  0026EC  5F7F               	subwf	___lldiv@dividend& (0+255),f,b
  6824  0026EE  0100               	movlb	0	; () banked
  6825  0026F0  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6826  0026F2  0100               	movlb	0	; () banked
  6827  0026F4  5B80               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6828  0026F6  0100               	movlb	0	; () banked
  6829  0026F8  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6830  0026FA  0100               	movlb	0	; () banked
  6831  0026FC  5B81               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6832  0026FE  0100               	movlb	0	; () banked
  6833  002700  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6834  002702  0100               	movlb	0	; () banked
  6835  002704  5B82               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6836                           
  6837                           ; BSR set to: 0
  6838  002706  0100               	movlb	0	; () banked
  6839  002708  8187               	bsf	___lldiv@quotient& (0+255),0,b
  6840  00270A                     l3740:
  6841                           
  6842                           ; BSR set to: 0
  6843  00270A  0100               	movlb	0	; () banked
  6844  00270C  90D8               	bcf	status,0,c
  6845  00270E  3386               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6846  002710  3385               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6847  002712  3384               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6848  002714  3383               	rrcf	___lldiv@divisor& (0+255),f,b
  6849                           
  6850                           ; BSR set to: 0
  6851  002716  0100               	movlb	0	; () banked
  6852  002718  2F8B               	decfsz	___lldiv@counter& (0+255),f,b
  6853  00271A  D7CD               	goto	l3732
  6854  00271C                     l1042:
  6855                           
  6856                           ; BSR set to: 0
  6857  00271C  C087  F07F         	movff	___lldiv@quotient,?___lldiv
  6858  002720  C088  F080         	movff	___lldiv@quotient+1,?___lldiv+1
  6859  002724  C089  F081         	movff	___lldiv@quotient+2,?___lldiv+2
  6860  002728  C08A  F082         	movff	___lldiv@quotient+3,?___lldiv+3
  6861                           
  6862                           ; BSR set to: 0
  6863  00272C  0012               	return		;funcret
  6864  00272E                     __end_of___lldiv:
  6865                           	opt stack 0
  6866                           tblptru	equ	0xFF8
  6867                           tblptrh	equ	0xFF7
  6868                           tblptrl	equ	0xFF6
  6869                           tablat	equ	0xFF5
  6870                           prodh	equ	0xFF4
  6871                           prodl	equ	0xFF3
  6872                           intcon	equ	0xFF2
  6873                           intcon2	equ	0xFF1
  6874                           postinc0	equ	0xFEE
  6875                           wreg	equ	0xFE8
  6876                           postdec1	equ	0xFE5
  6877                           fsr1l	equ	0xFE1
  6878                           indf2	equ	0xFDF
  6879                           fsr2h	equ	0xFDA
  6880                           fsr2l	equ	0xFD9
  6881                           status	equ	0xFD8
  6882                           
  6883 ;; *************** function _CANisTXwarningON *****************
  6884 ;; Defined at:
  6885 ;;		line 1120 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;		None
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1    wreg      unsigned char 
  6892 ;; Registers used:
  6893 ;;		wreg
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6899 ;;      Params:         0       0       0       0
  6900 ;;      Locals:         0       0       0       0
  6901 ;;      Temps:          0       0       0       0
  6902 ;;      Totals:         0       0       0       0
  6903 ;;Total ram usage:        0 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; Hardware stack levels required when called:    4
  6906 ;; This function calls:
  6907 ;;		Nothing
  6908 ;; This function is called by:
  6909 ;;		_main
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           	psect	text19
  6914  002C14                     __ptext19:
  6915                           	opt stack 0
  6916  002C14                     _CANisTXwarningON:
  6917                           	opt stack 26
  6918                           
  6919                           ;inc\CANlib.h: 1122: return (COMSTATbits.TXWARN);
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;incstack = 0
  6923  002C14  A474               	btfss	3956,2,c	;volatile
  6924  002C16  D002               	goto	u4160
  6925  002C18  0E01               	movlw	1
  6926  002C1A  0012               	return	
  6927  002C1C                     u4160:
  6928  002C1C  0E00               	movlw	0
  6929  002C1E  0012               	return	
  6930  002C20                     __end_of_CANisTXwarningON:
  6931                           	opt stack 0
  6932                           tblptru	equ	0xFF8
  6933                           tblptrh	equ	0xFF7
  6934                           tblptrl	equ	0xFF6
  6935                           tablat	equ	0xFF5
  6936                           prodh	equ	0xFF4
  6937                           prodl	equ	0xFF3
  6938                           intcon	equ	0xFF2
  6939                           intcon2	equ	0xFF1
  6940                           postinc0	equ	0xFEE
  6941                           wreg	equ	0xFE8
  6942                           postdec1	equ	0xFE5
  6943                           fsr1l	equ	0xFE1
  6944                           indf2	equ	0xFDF
  6945                           fsr2h	equ	0xFDA
  6946                           fsr2l	equ	0xFD9
  6947                           status	equ	0xFD8
  6948                           
  6949 ;; *************** function _CANisRXwarningON *****************
  6950 ;; Defined at:
  6951 ;;		line 1128 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;		None
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;		None
  6956 ;; Return value:  Size  Location     Type
  6957 ;;                  1    wreg      unsigned char 
  6958 ;; Registers used:
  6959 ;;		wreg
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6965 ;;      Params:         0       0       0       0
  6966 ;;      Locals:         0       0       0       0
  6967 ;;      Temps:          0       0       0       0
  6968 ;;      Totals:         0       0       0       0
  6969 ;;Total ram usage:        0 bytes
  6970 ;; Hardware stack levels used:    1
  6971 ;; Hardware stack levels required when called:    4
  6972 ;; This function calls:
  6973 ;;		Nothing
  6974 ;; This function is called by:
  6975 ;;		_main
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text20
  6980  002C20                     __ptext20:
  6981                           	opt stack 0
  6982  002C20                     _CANisRXwarningON:
  6983                           	opt stack 26
  6984                           
  6985                           ;inc\CANlib.h: 1130: return (COMSTATbits.RXWARN);
  6986                           
  6987                           ;incstack = 0
  6988  002C20  A274               	btfss	3956,1,c	;volatile
  6989  002C22  D002               	goto	u4170
  6990  002C24  0E01               	movlw	1
  6991  002C26  0012               	return	
  6992  002C28                     u4170:
  6993  002C28  0E00               	movlw	0
  6994  002C2A  0012               	return	
  6995  002C2C                     __end_of_CANisRXwarningON:
  6996                           	opt stack 0
  6997                           tblptru	equ	0xFF8
  6998                           tblptrh	equ	0xFF7
  6999                           tblptrl	equ	0xFF6
  7000                           tablat	equ	0xFF5
  7001                           prodh	equ	0xFF4
  7002                           prodl	equ	0xFF3
  7003                           intcon	equ	0xFF2
  7004                           intcon2	equ	0xFF1
  7005                           postinc0	equ	0xFEE
  7006                           wreg	equ	0xFE8
  7007                           postdec1	equ	0xFE5
  7008                           fsr1l	equ	0xFE1
  7009                           indf2	equ	0xFDF
  7010                           fsr2h	equ	0xFDA
  7011                           fsr2l	equ	0xFD9
  7012                           status	equ	0xFD8
  7013                           
  7014 ;; *************** function _ISR_bassa *****************
  7015 ;; Defined at:
  7016 ;;		line 85 in file "newmain.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;		None
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;		None
  7021 ;; Return value:  Size  Location     Type
  7022 ;;		None               void
  7023 ;; Registers used:
  7024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7030 ;;      Params:         0       0       0       0
  7031 ;;      Locals:         0       0       0       0
  7032 ;;      Temps:         18       0       0       0
  7033 ;;      Totals:        18       0       0       0
  7034 ;;Total ram usage:       18 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    3
  7037 ;; This function calls:
  7038 ;;		_CANisRxReady
  7039 ;;		_CANreceiveMessage
  7040 ;;		i1_CANsendMessage
  7041 ;;		i1___lwdiv
  7042 ;;		i1___wmul
  7043 ;; This function is called by:
  7044 ;;		Interrupt level 1
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	intcodelo
  7049  000018                     __pintcodelo:
  7050                           	opt stack 0
  7051  000018                     _ISR_bassa:
  7052                           	opt stack 24
  7053                           
  7054                           ;incstack = 0
  7055  000018  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7056  00001A  CFD8 F034          	movff	status,??_ISR_bassa+1
  7057  00001E  CFE8 F035          	movff	wreg,??_ISR_bassa+2
  7058  000022  CFE0 F036          	movff	bsr,??_ISR_bassa+3
  7059  000026  CFFA F037          	movff	pclath,??_ISR_bassa+4
  7060  00002A  CFFB F038          	movff	pclatu,??_ISR_bassa+5
  7061  00002E  CFE9 F039          	movff	fsr0l,??_ISR_bassa+6
  7062  000032  CFEA F03A          	movff	fsr0h,??_ISR_bassa+7
  7063  000036  CFE1 F03B          	movff	fsr1l,??_ISR_bassa+8
  7064  00003A  CFE2 F03C          	movff	fsr1h,??_ISR_bassa+9
  7065  00003E  CFD9 F03D          	movff	fsr2l,??_ISR_bassa+10
  7066  000042  CFDA F03E          	movff	fsr2h,??_ISR_bassa+11
  7067  000046  CFF3 F03F          	movff	prodl,??_ISR_bassa+12
  7068  00004A  CFF4 F040          	movff	prodh,??_ISR_bassa+13
  7069  00004E  CFF6 F041          	movff	tblptrl,??_ISR_bassa+14
  7070  000052  CFF7 F042          	movff	tblptrh,??_ISR_bassa+15
  7071  000056  CFF8 F043          	movff	tblptru,??_ISR_bassa+16
  7072  00005A  CFF5 F044          	movff	tablat,??_ISR_bassa+17
  7073                           
  7074                           ;newmain.c: 89: if (CANisRxReady()) {
  7075  00005E  ECE7  F015         	call	_CANisRxReady	;wreg free
  7076  000062  0900               	iorlw	0
  7077  000064  B4D8               	btfsc	status,2,c
  7078  000066  D06A               	goto	i1l4060
  7079                           
  7080                           ;newmain.c: 90: CANreceiveMessage(&msg);
  7081  000068  0E14               	movlw	low _msg
  7082  00006A  6E23               	movwf	CANreceiveMessage@msg,c
  7083  00006C  0E00               	movlw	high _msg
  7084  00006E  6E24               	movwf	CANreceiveMessage@msg+1,c
  7085  000070  EC57  F00D         	call	_CANreceiveMessage	;wreg free
  7086                           
  7087                           ;newmain.c: 91: if (msg.identifier == 0b00000000000000000000000000101) {
  7088  000074  0E05               	movlw	5
  7089  000076  1814               	xorwf	_msg,w,c
  7090  000078  1015               	iorwf	_msg+1,w,c
  7091  00007A  1016               	iorwf	_msg+2,w,c
  7092  00007C  1017               	iorwf	_msg+3,w,c
  7093  00007E  A4D8               	btfss	status,2,c
  7094  000080  D028               	goto	i1l4046
  7095                           
  7096                           ;newmain.c: 92: id = msg.identifier;
  7097  000082  C014  F005         	movff	_msg,_id
  7098  000086  C015  F006         	movff	_msg+1,_id+1
  7099  00008A  C016  F007         	movff	_msg+2,_id+2
  7100  00008E  C017  F008         	movff	_msg+3,_id+3
  7101                           
  7102                           ;newmain.c: 93: remote_frame = msg.RTR;
  7103  000092  A022               	btfss	_msg+14,0,c
  7104  000094  D002               	goto	i1u478_20
  7105  000096  824B               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7106  000098  D001               	goto	i1u479_25
  7107  00009A                     i1u478_20:
  7108  00009A  924B               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7109  00009C                     i1u479_25:
  7110                           
  7111                           ;newmain.c: 94: theorySteering = msg.data[0];
  7112  00009C  C018  F013         	movff	_msg+4,_theorySteering
  7113                           
  7114                           ;newmain.c: 96: currentSteering = theorySteering + calibration;
  7115  0000A0  5013               	movf	_theorySteering,w,c
  7116  0000A2  240D               	addwf	_calibration,w,c
  7117  0000A4  6E49               	movwf	_currentSteering,c
  7118                           
  7119                           ;newmain.c: 97: currentSteering = (limiteDx * currentSteering) / 180;
  7120  0000A6  C049  F023         	movff	_currentSteering,i1___wmul@multiplier
  7121  0000AA  6A24               	clrf	i1___wmul@multiplier+1,c
  7122  0000AC  C045  F025         	movff	_limiteDx,i1___wmul@multiplicand
  7123  0000B0  C046  F026         	movff	_limiteDx+1,i1___wmul@multiplicand+1
  7124  0000B4  ECB7  F015         	call	i1___wmul	;wreg free
  7125  0000B8  C023  F029         	movff	?i1___wmul,i1___lwdiv@dividend
  7126  0000BC  C024  F02A         	movff	?i1___wmul+1,i1___lwdiv@dividend+1
  7127  0000C0  0E00               	movlw	0
  7128  0000C2  6E2C               	movwf	i1___lwdiv@divisor+1,c
  7129  0000C4  0EB4               	movlw	180
  7130  0000C6  6E2B               	movwf	i1___lwdiv@divisor,c
  7131  0000C8  EC14  F015         	call	i1___lwdiv	;wreg free
  7132  0000CC  5029               	movf	?i1___lwdiv,w,c
  7133  0000CE  6E49               	movwf	_currentSteering,c
  7134                           
  7135                           ;newmain.c: 98: noChange = 1;
  7136  0000D0  804B               	bsf	_noChange/(0+8),_noChange& (0+7),c
  7137  0000D2                     i1l4046:
  7138                           
  7139                           ;newmain.c: 99: }
  7140                           ;newmain.c: 100: if ((msg.identifier == 0b00000000000000000000000000010)&&(msg.RTR == 1)
      +                          ) {
  7141  0000D2  0E02               	movlw	2
  7142  0000D4  1814               	xorwf	_msg,w,c
  7143  0000D6  1015               	iorwf	_msg+1,w,c
  7144  0000D8  1016               	iorwf	_msg+2,w,c
  7145  0000DA  1017               	iorwf	_msg+3,w,c
  7146  0000DC  A4D8               	btfss	status,2,c
  7147  0000DE  D02E               	goto	i1l4060
  7148  0000E0  0422               	decf	_msg+14,w,c
  7149  0000E2  A4D8               	btfss	status,2,c
  7150  0000E4  D02B               	goto	i1l4060
  7151                           
  7152                           ;newmain.c: 101: PORTCbits.RC1 = ~PORTCbits.RC1;
  7153  0000E6  A282               	btfss	3970,1,c	;volatile
  7154  0000E8  D002               	goto	i1u482_20
  7155  0000EA  0E01               	movlw	1
  7156  0000EC  D001               	goto	i1u482_26
  7157  0000EE                     i1u482_20:
  7158  0000EE  0E00               	movlw	0
  7159  0000F0                     i1u482_26:
  7160  0000F0  0AFF               	xorlw	255
  7161  0000F2  6E33               	movwf	??_ISR_bassa& (0+255),c
  7162  0000F4  4633               	rlncf	??_ISR_bassa,f,c
  7163  0000F6  5082               	movf	3970,w,c	;volatile
  7164  0000F8  1833               	xorwf	??_ISR_bassa,w,c
  7165  0000FA  0BFD               	andlw	-3
  7166  0000FC  1833               	xorwf	??_ISR_bassa,w,c
  7167  0000FE  6E82               	movwf	3970,c	;volatile
  7168                           
  7169                           ;newmain.c: 102: id = msg.identifier;
  7170  000100  C014  F005         	movff	_msg,_id
  7171  000104  C015  F006         	movff	_msg+1,_id+1
  7172  000108  C016  F007         	movff	_msg+2,_id+2
  7173  00010C  C017  F008         	movff	_msg+3,_id+3
  7174                           
  7175                           ;newmain.c: 103: remote_frame = 1;
  7176  000110  824B               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7177                           
  7178                           ;newmain.c: 104: data_array [0] = 0x02;
  7179  000112  0E02               	movlw	2
  7180  000114  0100               	movlb	0	; () banked
  7181  000116  6FB5               	movwf	_data_array& (0+255),b
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;newmain.c: 105: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FR
      +                          AME & CAN_TX_PRIORITY_0);
  7185  000118  C005  F023         	movff	_id,i1CANsendMessage@identifier
  7186  00011C  C006  F024         	movff	_id+1,i1CANsendMessage@identifier+1
  7187  000120  C007  F025         	movff	_id+2,i1CANsendMessage@identifier+2
  7188  000124  C008  F026         	movff	_id+3,i1CANsendMessage@identifier+3
  7189  000128  0EB5               	movlw	low _data_array
  7190  00012A  6E27               	movwf	i1CANsendMessage@data,c
  7191  00012C  0E00               	movlw	high _data_array
  7192  00012E  6E28               	movwf	i1CANsendMessage@data+1,c
  7193  000130  0E08               	movlw	8
  7194  000132  6E29               	movwf	i1CANsendMessage@dataLength,c
  7195  000134  0EBC               	movlw	188
  7196  000136  6E2A               	movwf	i1CANsendMessage@flags,c
  7197  000138  EC0F  F00A         	call	i1_CANsendMessage	;wreg free
  7198  00013C                     i1l4060:
  7199                           
  7200                           ;newmain.c: 107: }
  7201                           ;newmain.c: 108: }
  7202                           ;newmain.c: 109: PIR3bits.RXB0IF = 0;
  7203  00013C  90A4               	bcf	4004,0,c	;volatile
  7204                           
  7205                           ;newmain.c: 110: PIR3bits.RXB1IF = 0;
  7206  00013E  92A4               	bcf	4004,1,c	;volatile
  7207  000140  C044  FFF5         	movff	??_ISR_bassa+17,tablat
  7208  000144  C043  FFF8         	movff	??_ISR_bassa+16,tblptru
  7209  000148  C042  FFF7         	movff	??_ISR_bassa+15,tblptrh
  7210  00014C  C041  FFF6         	movff	??_ISR_bassa+14,tblptrl
  7211  000150  C040  FFF4         	movff	??_ISR_bassa+13,prodh
  7212  000154  C03F  FFF3         	movff	??_ISR_bassa+12,prodl
  7213  000158  C03E  FFDA         	movff	??_ISR_bassa+11,fsr2h
  7214  00015C  C03D  FFD9         	movff	??_ISR_bassa+10,fsr2l
  7215  000160  C03C  FFE2         	movff	??_ISR_bassa+9,fsr1h
  7216  000164  C03B  FFE1         	movff	??_ISR_bassa+8,fsr1l
  7217  000168  C03A  FFEA         	movff	??_ISR_bassa+7,fsr0h
  7218  00016C  C039  FFE9         	movff	??_ISR_bassa+6,fsr0l
  7219  000170  C038  FFFB         	movff	??_ISR_bassa+5,pclatu
  7220  000174  C037  FFFA         	movff	??_ISR_bassa+4,pclath
  7221  000178  C036  FFE0         	movff	??_ISR_bassa+3,bsr
  7222  00017C  C035  FFE8         	movff	??_ISR_bassa+2,wreg
  7223  000180  C034  FFD8         	movff	??_ISR_bassa+1,status
  7224  000184  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7225  000186  0010               	retfie	
  7226  000188                     __end_of_ISR_bassa:
  7227                           	opt stack 0
  7228                           pclatu	equ	0xFFB
  7229                           pclath	equ	0xFFA
  7230                           tblptru	equ	0xFF8
  7231                           tblptrh	equ	0xFF7
  7232                           tblptrl	equ	0xFF6
  7233                           tablat	equ	0xFF5
  7234                           prodh	equ	0xFF4
  7235                           prodl	equ	0xFF3
  7236                           intcon	equ	0xFF2
  7237                           intcon2	equ	0xFF1
  7238                           postinc0	equ	0xFEE
  7239                           fsr0h	equ	0xFEA
  7240                           fsr0l	equ	0xFE9
  7241                           wreg	equ	0xFE8
  7242                           postdec1	equ	0xFE5
  7243                           fsr1h	equ	0xFE2
  7244                           fsr1l	equ	0xFE1
  7245                           bsr	equ	0xFE0
  7246                           indf2	equ	0xFDF
  7247                           fsr2h	equ	0xFDA
  7248                           fsr2l	equ	0xFD9
  7249                           status	equ	0xFD8
  7250                           
  7251 ;; *************** function i1___wmul *****************
  7252 ;; Defined at:
  7253 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;  multiplier      2    0[COMRAM] unsigned int 
  7256 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;  __wmul          2    4[COMRAM] unsigned int 
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  2    0[COMRAM] unsigned int 
  7261 ;; Registers used:
  7262 ;;		wreg, status,2, status,0, prodl, prodh
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7268 ;;      Params:         4       0       0       0
  7269 ;;      Locals:         2       0       0       0
  7270 ;;      Temps:          0       0       0       0
  7271 ;;      Totals:         6       0       0       0
  7272 ;;Total ram usage:        6 bytes
  7273 ;; Hardware stack levels used:    1
  7274 ;; Hardware stack levels required when called:    2
  7275 ;; This function calls:
  7276 ;;		Nothing
  7277 ;; This function is called by:
  7278 ;;		_ISR_bassa
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text22
  7283  002B6E                     __ptext22:
  7284                           	opt stack 0
  7285  002B6E                     i1___wmul:
  7286                           	opt stack 24
  7287                           
  7288                           ;incstack = 0
  7289  002B6E  5023               	movf	i1___wmul@multiplier,w,c
  7290  002B70  0225               	mulwf	i1___wmul@multiplicand,c
  7291  002B72  CFF3 F027          	movff	prodl,i1___wmul@product
  7292  002B76  CFF4 F028          	movff	prodh,i1___wmul@product+1
  7293  002B7A  5023               	movf	i1___wmul@multiplier,w,c
  7294  002B7C  0226               	mulwf	i1___wmul@multiplicand+1,c
  7295  002B7E  50F3               	movf	prodl,w,c
  7296  002B80  2628               	addwf	i1___wmul@product+1,f,c
  7297  002B82  5024               	movf	i1___wmul@multiplier+1,w,c
  7298  002B84  0225               	mulwf	i1___wmul@multiplicand,c
  7299  002B86  50F3               	movf	prodl,w,c
  7300  002B88  2628               	addwf	i1___wmul@product+1,f,c
  7301  002B8A  C027  F023         	movff	i1___wmul@product,?i1___wmul
  7302  002B8E  C028  F024         	movff	i1___wmul@product+1,?i1___wmul+1
  7303  002B92  0012               	return	
  7304  002B94                     __end_ofi1___wmul:
  7305                           	opt stack 0
  7306                           pclatu	equ	0xFFB
  7307                           pclath	equ	0xFFA
  7308                           tblptru	equ	0xFF8
  7309                           tblptrh	equ	0xFF7
  7310                           tblptrl	equ	0xFF6
  7311                           tablat	equ	0xFF5
  7312                           prodh	equ	0xFF4
  7313                           prodl	equ	0xFF3
  7314                           intcon	equ	0xFF2
  7315                           intcon2	equ	0xFF1
  7316                           postinc0	equ	0xFEE
  7317                           fsr0h	equ	0xFEA
  7318                           fsr0l	equ	0xFE9
  7319                           wreg	equ	0xFE8
  7320                           postdec1	equ	0xFE5
  7321                           fsr1h	equ	0xFE2
  7322                           fsr1l	equ	0xFE1
  7323                           bsr	equ	0xFE0
  7324                           indf2	equ	0xFDF
  7325                           fsr2h	equ	0xFDA
  7326                           fsr2l	equ	0xFD9
  7327                           status	equ	0xFD8
  7328                           
  7329 ;; *************** function i1___lwdiv *****************
  7330 ;; Defined at:
  7331 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  dividend        2    6[COMRAM] unsigned int 
  7334 ;;  divisor         2    8[COMRAM] unsigned int 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  __lwdiv         2   10[COMRAM] unsigned int 
  7337 ;;  __lwdiv         1   12[COMRAM] unsigned char 
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  2    6[COMRAM] unsigned int 
  7340 ;; Registers used:
  7341 ;;		wreg, status,2, status,0
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7347 ;;      Params:         4       0       0       0
  7348 ;;      Locals:         3       0       0       0
  7349 ;;      Temps:          0       0       0       0
  7350 ;;      Totals:         7       0       0       0
  7351 ;;Total ram usage:        7 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; Hardware stack levels required when called:    2
  7354 ;; This function calls:
  7355 ;;		Nothing
  7356 ;; This function is called by:
  7357 ;;		_ISR_bassa
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           	psect	text23
  7362  002A28                     __ptext23:
  7363                           	opt stack 0
  7364  002A28                     i1___lwdiv:
  7365                           	opt stack 24
  7366                           
  7367                           ;incstack = 0
  7368  002A28  0E00               	movlw	0
  7369  002A2A  6E2E               	movwf	i1___lwdiv@quotient+1,c
  7370  002A2C  0E00               	movlw	0
  7371  002A2E  6E2D               	movwf	i1___lwdiv@quotient,c
  7372  002A30  502B               	movf	i1___lwdiv@divisor,w,c
  7373  002A32  102C               	iorwf	i1___lwdiv@divisor+1,w,c
  7374  002A34  B4D8               	btfsc	status,2,c
  7375  002A36  D01C               	goto	i1l1095
  7376  002A38  0E01               	movlw	1
  7377  002A3A  6E2F               	movwf	i1___lwdiv@counter,c
  7378  002A3C  D004               	goto	i1l3988
  7379  002A3E                     i1l3986:
  7380  002A3E  90D8               	bcf	status,0,c
  7381  002A40  362B               	rlcf	i1___lwdiv@divisor,f,c
  7382  002A42  362C               	rlcf	i1___lwdiv@divisor+1,f,c
  7383  002A44  2A2F               	incf	i1___lwdiv@counter,f,c
  7384  002A46                     i1l3988:
  7385  002A46  AE2C               	btfss	i1___lwdiv@divisor+1,7,c
  7386  002A48  D7FA               	goto	i1l3986
  7387  002A4A                     i1l3990:
  7388  002A4A  90D8               	bcf	status,0,c
  7389  002A4C  362D               	rlcf	i1___lwdiv@quotient,f,c
  7390  002A4E  362E               	rlcf	i1___lwdiv@quotient+1,f,c
  7391  002A50  502B               	movf	i1___lwdiv@divisor,w,c
  7392  002A52  5C29               	subwf	i1___lwdiv@dividend,w,c
  7393  002A54  502C               	movf	i1___lwdiv@divisor+1,w,c
  7394  002A56  582A               	subwfb	i1___lwdiv@dividend+1,w,c
  7395  002A58  A0D8               	btfss	status,0,c
  7396  002A5A  D005               	goto	i1l3998
  7397  002A5C  502B               	movf	i1___lwdiv@divisor,w,c
  7398  002A5E  5E29               	subwf	i1___lwdiv@dividend,f,c
  7399  002A60  502C               	movf	i1___lwdiv@divisor+1,w,c
  7400  002A62  5A2A               	subwfb	i1___lwdiv@dividend+1,f,c
  7401  002A64  802D               	bsf	i1___lwdiv@quotient,0,c
  7402  002A66                     i1l3998:
  7403  002A66  90D8               	bcf	status,0,c
  7404  002A68  322C               	rrcf	i1___lwdiv@divisor+1,f,c
  7405  002A6A  322B               	rrcf	i1___lwdiv@divisor,f,c
  7406  002A6C  2E2F               	decfsz	i1___lwdiv@counter,f,c
  7407  002A6E  D7ED               	goto	i1l3990
  7408  002A70                     i1l1095:
  7409  002A70  C02D  F029         	movff	i1___lwdiv@quotient,?i1___lwdiv
  7410  002A74  C02E  F02A         	movff	i1___lwdiv@quotient+1,?i1___lwdiv+1
  7411  002A78  0012               	return		;funcret
  7412  002A7A                     __end_ofi1___lwdiv:
  7413                           	opt stack 0
  7414                           pclatu	equ	0xFFB
  7415                           pclath	equ	0xFFA
  7416                           tblptru	equ	0xFF8
  7417                           tblptrh	equ	0xFF7
  7418                           tblptrl	equ	0xFF6
  7419                           tablat	equ	0xFF5
  7420                           prodh	equ	0xFF4
  7421                           prodl	equ	0xFF3
  7422                           intcon	equ	0xFF2
  7423                           intcon2	equ	0xFF1
  7424                           postinc0	equ	0xFEE
  7425                           fsr0h	equ	0xFEA
  7426                           fsr0l	equ	0xFE9
  7427                           wreg	equ	0xFE8
  7428                           postdec1	equ	0xFE5
  7429                           fsr1h	equ	0xFE2
  7430                           fsr1l	equ	0xFE1
  7431                           bsr	equ	0xFE0
  7432                           indf2	equ	0xFDF
  7433                           fsr2h	equ	0xFDA
  7434                           fsr2l	equ	0xFD9
  7435                           status	equ	0xFD8
  7436                           
  7437 ;; *************** function i1_CANsendMessage *****************
  7438 ;; Defined at:
  7439 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;  identifier      4    0[COMRAM] unsigned long 
  7442 ;;  data            2    4[COMRAM] PTR unsigned char 
  7443 ;;		 -> data_array(8), 
  7444 ;;  dataLength      1    6[COMRAM] unsigned char 
  7445 ;;  flags           1    7[COMRAM] enum E16866
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;  CANsendMessa    4   12[COMRAM] unsigned long 
  7448 ;; Return value:  Size  Location     Type
  7449 ;;		None               void
  7450 ;; Registers used:
  7451 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7457 ;;      Params:         8       0       0       0
  7458 ;;      Locals:         4       0       0       0
  7459 ;;      Temps:          4       0       0       0
  7460 ;;      Totals:        16       0       0       0
  7461 ;;Total ram usage:       16 bytes
  7462 ;; Hardware stack levels used:    1
  7463 ;; Hardware stack levels required when called:    2
  7464 ;; This function calls:
  7465 ;;		Nothing
  7466 ;; This function is called by:
  7467 ;;		_ISR_bassa
  7468 ;; This function uses a non-reentrant model
  7469 ;;
  7470                           
  7471                           	psect	text24
  7472  00141E                     __ptext24:
  7473                           	opt stack 0
  7474  00141E                     i1_CANsendMessage:
  7475                           	opt stack 24
  7476                           
  7477                           ;inc\CANlib.h: 297: unsigned long tamp;
  7478                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  7479                           
  7480                           ;incstack = 0
  7481  00141E  010F               	movlb	15	; () banked
  7482  001420  B740               	btfsc	64,3,b	;volatile
  7483  001422  D115               	goto	i1l349
  7484                           
  7485                           ; BSR set to: 15
  7486                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  7487  001424  C029  FF45         	movff	i1CANsendMessage@dataLength,3909	;volatile
  7488                           
  7489                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  7490  001428  AC2A               	btfss	i1CANsendMessage@flags,6,c
  7491  00142A  D003               	goto	i1l350
  7492                           
  7493                           ; BSR set to: 15
  7494                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  7495  00142C  010F               	movlb	15	; () banked
  7496  00142E  8D45               	bsf	69,6,b	;volatile
  7497  001430  D002               	goto	i1l351
  7498  001432                     i1l350:
  7499                           
  7500                           ; BSR set to: 15
  7501                           ;inc\CANlib.h: 303: else
  7502                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  7503  001432  010F               	movlb	15	; () banked
  7504  001434  9D45               	bcf	69,6,b	;volatile
  7505  001436                     i1l351:
  7506                           
  7507                           ; BSR set to: 15
  7508                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  7509  001436  A62A               	btfss	i1CANsendMessage@flags,3,c
  7510  001438  D066               	goto	i1l352
  7511                           
  7512                           ; BSR set to: 15
  7513                           ;inc\CANlib.h: 307: {
  7514                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  7515  00143A  5023               	movf	i1CANsendMessage@identifier,w,c
  7516  00143C  6E2F               	movwf	i1CANsendMessage@tamp,c
  7517  00143E  6A30               	clrf	i1CANsendMessage@tamp+1,c
  7518  001440  6A31               	clrf	i1CANsendMessage@tamp+2,c
  7519  001442  6A32               	clrf	i1CANsendMessage@tamp+3,c
  7520                           
  7521                           ; BSR set to: 15
  7522                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  7523  001444  C02F  FF44         	movff	i1CANsendMessage@tamp,3908	;volatile
  7524                           
  7525                           ; BSR set to: 15
  7526                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  7527  001448  0E00               	movlw	0
  7528  00144A  1423               	andwf	i1CANsendMessage@identifier,w,c
  7529  00144C  6E2F               	movwf	i1CANsendMessage@tamp,c
  7530  00144E  0EFF               	movlw	255
  7531  001450  1424               	andwf	i1CANsendMessage@identifier+1,w,c
  7532  001452  6E30               	movwf	i1CANsendMessage@tamp+1,c
  7533  001454  0E00               	movlw	0
  7534  001456  1425               	andwf	i1CANsendMessage@identifier+2,w,c
  7535  001458  6E31               	movwf	i1CANsendMessage@tamp+2,c
  7536  00145A  0E00               	movlw	0
  7537  00145C  1426               	andwf	i1CANsendMessage@identifier+3,w,c
  7538  00145E  6E32               	movwf	i1CANsendMessage@tamp+3,c
  7539                           
  7540                           ; BSR set to: 15
  7541                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  7542  001460  C02F  F02B         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  7543  001464  C030  F02C         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  7544  001468  C031  F02D         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  7545  00146C  C032  F02E         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  7546  001470  C02C  F02B         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
  7547  001474  C02D  F02C         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
  7548  001478  C02E  F02D         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
  7549  00147C  6A2E               	clrf	??i1_CANsendMessage+3,c
  7550  00147E  C02B  F02F         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  7551  001482  C02C  F030         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  7552  001486  C02D  F031         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  7553  00148A  C02E  F032         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  7554                           
  7555                           ; BSR set to: 15
  7556                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  7557  00148E  C02F  FF43         	movff	i1CANsendMessage@tamp,3907	;volatile
  7558                           
  7559                           ; BSR set to: 15
  7560                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  7561  001492  0E00               	movlw	0
  7562  001494  010F               	movlb	15	; () banked
  7563  001496  6F42               	movwf	66,b	;volatile
  7564                           
  7565                           ; BSR set to: 15
  7566                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  7567  001498  010F               	movlb	15	; () banked
  7568  00149A  8742               	bsf	66,3,b	;volatile
  7569                           
  7570                           ; BSR set to: 15
  7571                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  7572  00149C  A025               	btfss	i1CANsendMessage@identifier+2,0,c
  7573  00149E  D002               	goto	i1l353
  7574                           
  7575                           ; BSR set to: 15
  7576                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  7577  0014A0  010F               	movlb	15	; () banked
  7578  0014A2  8142               	bsf	66,0,b	;volatile
  7579  0014A4                     i1l353:
  7580                           
  7581                           ; BSR set to: 15
  7582                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  7583  0014A4  A225               	btfss	i1CANsendMessage@identifier+2,1,c
  7584  0014A6  D002               	goto	i1l354
  7585                           
  7586                           ; BSR set to: 15
  7587                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  7588  0014A8  010F               	movlb	15	; () banked
  7589  0014AA  8342               	bsf	66,1,b	;volatile
  7590  0014AC                     i1l354:
  7591                           
  7592                           ; BSR set to: 15
  7593                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  7594  0014AC  A425               	btfss	i1CANsendMessage@identifier+2,2,c
  7595  0014AE  D002               	goto	i1l355
  7596                           
  7597                           ; BSR set to: 15
  7598                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  7599  0014B0  010F               	movlb	15	; () banked
  7600  0014B2  8B42               	bsf	66,5,b	;volatile
  7601  0014B4                     i1l355:
  7602                           
  7603                           ; BSR set to: 15
  7604                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  7605  0014B4  A625               	btfss	i1CANsendMessage@identifier+2,3,c
  7606  0014B6  D002               	goto	i1l356
  7607                           
  7608                           ; BSR set to: 15
  7609                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  7610  0014B8  010F               	movlb	15	; () banked
  7611  0014BA  8D42               	bsf	66,6,b	;volatile
  7612  0014BC                     i1l356:
  7613                           
  7614                           ; BSR set to: 15
  7615                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  7616  0014BC  A825               	btfss	i1CANsendMessage@identifier+2,4,c
  7617  0014BE  D002               	goto	i1l3776
  7618                           
  7619                           ; BSR set to: 15
  7620                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  7621  0014C0  010F               	movlb	15	; () banked
  7622  0014C2  8F42               	bsf	66,7,b	;volatile
  7623  0014C4                     i1l3776:
  7624                           
  7625                           ; BSR set to: 15
  7626                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  7627  0014C4  C023  F02B         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  7628  0014C8  C024  F02C         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  7629  0014CC  C025  F02D         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  7630  0014D0  C026  F02E         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  7631  0014D4  0E16               	movlw	22
  7632  0014D6  D005               	goto	i1u437_20
  7633  0014D8                     i1u437_25:
  7634  0014D8  90D8               	bcf	status,0,c
  7635  0014DA  322E               	rrcf	??i1_CANsendMessage+3,f,c
  7636  0014DC  322D               	rrcf	??i1_CANsendMessage+2,f,c
  7637  0014DE  322C               	rrcf	??i1_CANsendMessage+1,f,c
  7638  0014E0  322B               	rrcf	??i1_CANsendMessage,f,c
  7639  0014E2                     i1u437_20:
  7640  0014E2  2EE8               	decfsz	wreg,f,c
  7641  0014E4  D7F9               	goto	i1u437_25
  7642  0014E6  C02B  F02F         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  7643  0014EA  C02C  F030         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  7644  0014EE  C02D  F031         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  7645  0014F2  C02E  F032         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  7646                           
  7647                           ; BSR set to: 15
  7648                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  7649  0014F6  502F               	movf	i1CANsendMessage@tamp,w,c
  7650  0014F8  6E2F               	movwf	i1CANsendMessage@tamp,c
  7651  0014FA  6A30               	clrf	i1CANsendMessage@tamp+1,c
  7652  0014FC  6A31               	clrf	i1CANsendMessage@tamp+2,c
  7653  0014FE  6A32               	clrf	i1CANsendMessage@tamp+3,c
  7654                           
  7655                           ; BSR set to: 15
  7656                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  7657  001500  C02F  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
  7658                           
  7659                           ;inc\CANlib.h: 333: }
  7660  001504  D04D               	goto	i1l3796
  7661  001506                     i1l352:
  7662                           
  7663                           ; BSR set to: 15
  7664                           ;inc\CANlib.h: 335: else
  7665                           ;inc\CANlib.h: 337: {
  7666                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  7667  001506  010F               	movlb	15	; () banked
  7668  001508  9742               	bcf	66,3,b	;volatile
  7669                           
  7670                           ; BSR set to: 15
  7671                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  7672  00150A  C023  F02B         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  7673  00150E  C024  F02C         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  7674  001512  C025  F02D         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  7675  001516  C026  F02E         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  7676  00151A  0E04               	movlw	4
  7677  00151C  D005               	goto	i1u438_20
  7678  00151E                     i1u438_25:
  7679  00151E  90D8               	bcf	status,0,c
  7680  001520  322E               	rrcf	??i1_CANsendMessage+3,f,c
  7681  001522  322D               	rrcf	??i1_CANsendMessage+2,f,c
  7682  001524  322C               	rrcf	??i1_CANsendMessage+1,f,c
  7683  001526  322B               	rrcf	??i1_CANsendMessage,f,c
  7684  001528                     i1u438_20:
  7685  001528  2EE8               	decfsz	wreg,f,c
  7686  00152A  D7F9               	goto	i1u438_25
  7687  00152C  C02B  F02F         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  7688  001530  C02C  F030         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  7689  001534  C02D  F031         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  7690  001538  C02E  F032         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  7691                           
  7692                           ; BSR set to: 15
  7693                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  7694  00153C  502F               	movf	i1CANsendMessage@tamp,w,c
  7695  00153E  6E2F               	movwf	i1CANsendMessage@tamp,c
  7696  001540  6A30               	clrf	i1CANsendMessage@tamp+1,c
  7697  001542  6A31               	clrf	i1CANsendMessage@tamp+2,c
  7698  001544  6A32               	clrf	i1CANsendMessage@tamp+3,c
  7699                           
  7700                           ; BSR set to: 15
  7701                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  7702  001546  C02F  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
  7703                           
  7704                           ; BSR set to: 15
  7705                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  7706  00154A  0E07               	movlw	7
  7707  00154C  1423               	andwf	i1CANsendMessage@identifier,w,c
  7708  00154E  6E2F               	movwf	i1CANsendMessage@tamp,c
  7709  001550  0E00               	movlw	0
  7710  001552  1424               	andwf	i1CANsendMessage@identifier+1,w,c
  7711  001554  6E30               	movwf	i1CANsendMessage@tamp+1,c
  7712  001556  0E00               	movlw	0
  7713  001558  1425               	andwf	i1CANsendMessage@identifier+2,w,c
  7714  00155A  6E31               	movwf	i1CANsendMessage@tamp+2,c
  7715  00155C  0E00               	movlw	0
  7716  00155E  1426               	andwf	i1CANsendMessage@identifier+3,w,c
  7717  001560  6E32               	movwf	i1CANsendMessage@tamp+3,c
  7718                           
  7719                           ; BSR set to: 15
  7720                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  7721  001562  C02F  F02B         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  7722  001566  C030  F02C         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  7723  00156A  C031  F02D         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  7724  00156E  C032  F02E         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  7725  001572  0E05               	movlw	5
  7726  001574                     i1u439_25:
  7727  001574  90D8               	bcf	status,0,c
  7728  001576  362B               	rlcf	??i1_CANsendMessage,f,c
  7729  001578  362C               	rlcf	??i1_CANsendMessage+1,f,c
  7730  00157A  362D               	rlcf	??i1_CANsendMessage+2,f,c
  7731  00157C  362E               	rlcf	??i1_CANsendMessage+3,f,c
  7732  00157E  2EE8               	decfsz	wreg,f,c
  7733  001580  D7F9               	goto	i1u439_25
  7734  001582  C02B  F02F         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  7735  001586  C02C  F030         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  7736  00158A  C02D  F031         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  7737  00158E  C02E  F032         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  7738                           
  7739                           ; BSR set to: 15
  7740                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  7741  001592  010F               	movlb	15	; () banked
  7742  001594  5142               	movf	66,w,b	;volatile
  7743  001596  0B1F               	andlw	31
  7744  001598  010F               	movlb	15	; () banked
  7745  00159A  6F42               	movwf	66,b	;volatile
  7746                           
  7747                           ; BSR set to: 15
  7748                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  7749  00159C  C02F  FF42         	movff	i1CANsendMessage@tamp,3906	;volatile
  7750  0015A0                     i1l3796:
  7751                           
  7752                           ; BSR set to: 15
  7753                           ;inc\CANlib.h: 348: }
  7754                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  7755  0015A0  A02A               	btfss	i1CANsendMessage@flags,0,c
  7756  0015A2  D003               	goto	i1l359
  7757                           
  7758                           ; BSR set to: 15
  7759                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  7760  0015A4  010F               	movlb	15	; () banked
  7761  0015A6  8140               	bsf	64,0,b	;volatile
  7762  0015A8  D002               	goto	i1l360
  7763  0015AA                     i1l359:
  7764                           
  7765                           ; BSR set to: 15
  7766                           ;inc\CANlib.h: 352: else
  7767                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  7768  0015AA  010F               	movlb	15	; () banked
  7769  0015AC  9140               	bcf	64,0,b	;volatile
  7770  0015AE                     i1l360:
  7771                           
  7772                           ; BSR set to: 15
  7773                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  7774  0015AE  A22A               	btfss	i1CANsendMessage@flags,1,c
  7775  0015B0  D003               	goto	i1l361
  7776                           
  7777                           ; BSR set to: 15
  7778                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  7779  0015B2  010F               	movlb	15	; () banked
  7780  0015B4  8340               	bsf	64,1,b	;volatile
  7781  0015B6  D002               	goto	i1l3802
  7782  0015B8                     i1l361:
  7783                           
  7784                           ; BSR set to: 15
  7785                           ;inc\CANlib.h: 356: else
  7786                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  7787  0015B8  010F               	movlb	15	; () banked
  7788  0015BA  9340               	bcf	64,1,b	;volatile
  7789  0015BC                     i1l3802:
  7790                           
  7791                           ; BSR set to: 15
  7792                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  7793  0015BC  C027  FFD9         	movff	i1CANsendMessage@data,fsr2l
  7794  0015C0  C028  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
  7795  0015C4  50DF               	movf	indf2,w,c
  7796  0015C6  010F               	movlb	15	; () banked
  7797  0015C8  6F46               	movwf	70,b	;volatile
  7798                           
  7799                           ; BSR set to: 15
  7800                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  7801  0015CA  EE20 F001          	lfsr	2,1
  7802  0015CE  5027               	movf	i1CANsendMessage@data,w,c
  7803  0015D0  26D9               	addwf	fsr2l,f,c
  7804  0015D2  5028               	movf	i1CANsendMessage@data+1,w,c
  7805  0015D4  22DA               	addwfc	fsr2h,f,c
  7806  0015D6  50DF               	movf	indf2,w,c
  7807  0015D8  010F               	movlb	15	; () banked
  7808  0015DA  6F47               	movwf	71,b	;volatile
  7809                           
  7810                           ; BSR set to: 15
  7811                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  7812  0015DC  EE20 F002          	lfsr	2,2
  7813  0015E0  5027               	movf	i1CANsendMessage@data,w,c
  7814  0015E2  26D9               	addwf	fsr2l,f,c
  7815  0015E4  5028               	movf	i1CANsendMessage@data+1,w,c
  7816  0015E6  22DA               	addwfc	fsr2h,f,c
  7817  0015E8  50DF               	movf	indf2,w,c
  7818  0015EA  010F               	movlb	15	; () banked
  7819  0015EC  6F48               	movwf	72,b	;volatile
  7820                           
  7821                           ; BSR set to: 15
  7822                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  7823  0015EE  EE20 F003          	lfsr	2,3
  7824  0015F2  5027               	movf	i1CANsendMessage@data,w,c
  7825  0015F4  26D9               	addwf	fsr2l,f,c
  7826  0015F6  5028               	movf	i1CANsendMessage@data+1,w,c
  7827  0015F8  22DA               	addwfc	fsr2h,f,c
  7828  0015FA  50DF               	movf	indf2,w,c
  7829  0015FC  010F               	movlb	15	; () banked
  7830  0015FE  6F49               	movwf	73,b	;volatile
  7831                           
  7832                           ; BSR set to: 15
  7833                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  7834  001600  EE20 F004          	lfsr	2,4
  7835  001604  5027               	movf	i1CANsendMessage@data,w,c
  7836  001606  26D9               	addwf	fsr2l,f,c
  7837  001608  5028               	movf	i1CANsendMessage@data+1,w,c
  7838  00160A  22DA               	addwfc	fsr2h,f,c
  7839  00160C  50DF               	movf	indf2,w,c
  7840  00160E  010F               	movlb	15	; () banked
  7841  001610  6F4A               	movwf	74,b	;volatile
  7842                           
  7843                           ; BSR set to: 15
  7844                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  7845  001612  EE20 F005          	lfsr	2,5
  7846  001616  5027               	movf	i1CANsendMessage@data,w,c
  7847  001618  26D9               	addwf	fsr2l,f,c
  7848  00161A  5028               	movf	i1CANsendMessage@data+1,w,c
  7849  00161C  22DA               	addwfc	fsr2h,f,c
  7850  00161E  50DF               	movf	indf2,w,c
  7851  001620  010F               	movlb	15	; () banked
  7852  001622  6F4B               	movwf	75,b	;volatile
  7853                           
  7854                           ; BSR set to: 15
  7855                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  7856  001624  EE20 F006          	lfsr	2,6
  7857  001628  5027               	movf	i1CANsendMessage@data,w,c
  7858  00162A  26D9               	addwf	fsr2l,f,c
  7859  00162C  5028               	movf	i1CANsendMessage@data+1,w,c
  7860  00162E  22DA               	addwfc	fsr2h,f,c
  7861  001630  50DF               	movf	indf2,w,c
  7862  001632  010F               	movlb	15	; () banked
  7863  001634  6F4C               	movwf	76,b	;volatile
  7864                           
  7865                           ; BSR set to: 15
  7866                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  7867  001636  EE20 F007          	lfsr	2,7
  7868  00163A  5027               	movf	i1CANsendMessage@data,w,c
  7869  00163C  26D9               	addwf	fsr2l,f,c
  7870  00163E  5028               	movf	i1CANsendMessage@data+1,w,c
  7871  001640  22DA               	addwfc	fsr2h,f,c
  7872  001642  50DF               	movf	indf2,w,c
  7873  001644  010F               	movlb	15	; () banked
  7874  001646  6F4D               	movwf	77,b	;volatile
  7875                           
  7876                           ; BSR set to: 15
  7877                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  7878  001648  010F               	movlb	15	; () banked
  7879  00164A  8740               	bsf	64,3,b	;volatile
  7880                           
  7881                           ; BSR set to: 15
  7882                           ;inc\CANlib.h: 369: return;
  7883  00164C  0012               	return	
  7884  00164E                     i1l349:
  7885                           
  7886                           ; BSR set to: 15
  7887                           ;inc\CANlib.h: 370: }
  7888                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  7889  00164E  010F               	movlb	15	; () banked
  7890  001650  B730               	btfsc	48,3,b	;volatile
  7891  001652  D115               	goto	i1l364
  7892                           
  7893                           ; BSR set to: 15
  7894                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  7895  001654  C029  FF35         	movff	i1CANsendMessage@dataLength,3893	;volatile
  7896                           
  7897                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  7898  001658  AC2A               	btfss	i1CANsendMessage@flags,6,c
  7899  00165A  D003               	goto	i1l365
  7900                           
  7901                           ; BSR set to: 15
  7902                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  7903  00165C  010F               	movlb	15	; () banked
  7904  00165E  8D35               	bsf	53,6,b	;volatile
  7905  001660  D002               	goto	i1l366
  7906  001662                     i1l365:
  7907                           
  7908                           ; BSR set to: 15
  7909                           ;inc\CANlib.h: 379: else
  7910                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  7911  001662  010F               	movlb	15	; () banked
  7912  001664  9D35               	bcf	53,6,b	;volatile
  7913  001666                     i1l366:
  7914                           
  7915                           ; BSR set to: 15
  7916                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  7917  001666  A62A               	btfss	i1CANsendMessage@flags,3,c
  7918  001668  D066               	goto	i1l367
  7919                           
  7920                           ; BSR set to: 15
  7921                           ;inc\CANlib.h: 383: {
  7922                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  7923  00166A  5023               	movf	i1CANsendMessage@identifier,w,c
  7924  00166C  6E2F               	movwf	i1CANsendMessage@tamp,c
  7925  00166E  6A30               	clrf	i1CANsendMessage@tamp+1,c
  7926  001670  6A31               	clrf	i1CANsendMessage@tamp+2,c
  7927  001672  6A32               	clrf	i1CANsendMessage@tamp+3,c
  7928                           
  7929                           ; BSR set to: 15
  7930                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  7931  001674  C02F  FF34         	movff	i1CANsendMessage@tamp,3892	;volatile
  7932                           
  7933                           ; BSR set to: 15
  7934                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  7935  001678  0E00               	movlw	0
  7936  00167A  1423               	andwf	i1CANsendMessage@identifier,w,c
  7937  00167C  6E2F               	movwf	i1CANsendMessage@tamp,c
  7938  00167E  0EFF               	movlw	255
  7939  001680  1424               	andwf	i1CANsendMessage@identifier+1,w,c
  7940  001682  6E30               	movwf	i1CANsendMessage@tamp+1,c
  7941  001684  0E00               	movlw	0
  7942  001686  1425               	andwf	i1CANsendMessage@identifier+2,w,c
  7943  001688  6E31               	movwf	i1CANsendMessage@tamp+2,c
  7944  00168A  0E00               	movlw	0
  7945  00168C  1426               	andwf	i1CANsendMessage@identifier+3,w,c
  7946  00168E  6E32               	movwf	i1CANsendMessage@tamp+3,c
  7947                           
  7948                           ; BSR set to: 15
  7949                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  7950  001690  C02F  F02B         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  7951  001694  C030  F02C         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  7952  001698  C031  F02D         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  7953  00169C  C032  F02E         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  7954  0016A0  C02C  F02B         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
  7955  0016A4  C02D  F02C         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
  7956  0016A8  C02E  F02D         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
  7957  0016AC  6A2E               	clrf	??i1_CANsendMessage+3,c
  7958  0016AE  C02B  F02F         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  7959  0016B2  C02C  F030         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  7960  0016B6  C02D  F031         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  7961  0016BA  C02E  F032         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  7962                           
  7963                           ; BSR set to: 15
  7964                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  7965  0016BE  C02F  FF33         	movff	i1CANsendMessage@tamp,3891	;volatile
  7966                           
  7967                           ; BSR set to: 15
  7968                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  7969  0016C2  0E00               	movlw	0
  7970  0016C4  010F               	movlb	15	; () banked
  7971  0016C6  6F32               	movwf	50,b	;volatile
  7972                           
  7973                           ; BSR set to: 15
  7974                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  7975  0016C8  010F               	movlb	15	; () banked
  7976  0016CA  8732               	bsf	50,3,b	;volatile
  7977                           
  7978                           ; BSR set to: 15
  7979                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  7980  0016CC  A025               	btfss	i1CANsendMessage@identifier+2,0,c
  7981  0016CE  D002               	goto	i1l368
  7982                           
  7983                           ; BSR set to: 15
  7984                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  7985  0016D0  010F               	movlb	15	; () banked
  7986  0016D2  8132               	bsf	50,0,b	;volatile
  7987  0016D4                     i1l368:
  7988                           
  7989                           ; BSR set to: 15
  7990                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  7991  0016D4  A225               	btfss	i1CANsendMessage@identifier+2,1,c
  7992  0016D6  D002               	goto	i1l369
  7993                           
  7994                           ; BSR set to: 15
  7995                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  7996  0016D8  010F               	movlb	15	; () banked
  7997  0016DA  8332               	bsf	50,1,b	;volatile
  7998  0016DC                     i1l369:
  7999                           
  8000                           ; BSR set to: 15
  8001                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  8002  0016DC  A425               	btfss	i1CANsendMessage@identifier+2,2,c
  8003  0016DE  D002               	goto	i1l370
  8004                           
  8005                           ; BSR set to: 15
  8006                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  8007  0016E0  010F               	movlb	15	; () banked
  8008  0016E2  8B32               	bsf	50,5,b	;volatile
  8009  0016E4                     i1l370:
  8010                           
  8011                           ; BSR set to: 15
  8012                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  8013  0016E4  A625               	btfss	i1CANsendMessage@identifier+2,3,c
  8014  0016E6  D002               	goto	i1l371
  8015                           
  8016                           ; BSR set to: 15
  8017                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  8018  0016E8  010F               	movlb	15	; () banked
  8019  0016EA  8D32               	bsf	50,6,b	;volatile
  8020  0016EC                     i1l371:
  8021                           
  8022                           ; BSR set to: 15
  8023                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  8024  0016EC  A825               	btfss	i1CANsendMessage@identifier+2,4,c
  8025  0016EE  D002               	goto	i1l3852
  8026                           
  8027                           ; BSR set to: 15
  8028                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  8029  0016F0  010F               	movlb	15	; () banked
  8030  0016F2  8F32               	bsf	50,7,b	;volatile
  8031  0016F4                     i1l3852:
  8032                           
  8033                           ; BSR set to: 15
  8034                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  8035  0016F4  C023  F02B         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  8036  0016F8  C024  F02C         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  8037  0016FC  C025  F02D         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  8038  001700  C026  F02E         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  8039  001704  0E16               	movlw	22
  8040  001706  D005               	goto	i1u450_20
  8041  001708                     i1u450_25:
  8042  001708  90D8               	bcf	status,0,c
  8043  00170A  322E               	rrcf	??i1_CANsendMessage+3,f,c
  8044  00170C  322D               	rrcf	??i1_CANsendMessage+2,f,c
  8045  00170E  322C               	rrcf	??i1_CANsendMessage+1,f,c
  8046  001710  322B               	rrcf	??i1_CANsendMessage,f,c
  8047  001712                     i1u450_20:
  8048  001712  2EE8               	decfsz	wreg,f,c
  8049  001714  D7F9               	goto	i1u450_25
  8050  001716  C02B  F02F         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8051  00171A  C02C  F030         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8052  00171E  C02D  F031         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8053  001722  C02E  F032         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8054                           
  8055                           ; BSR set to: 15
  8056                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  8057  001726  502F               	movf	i1CANsendMessage@tamp,w,c
  8058  001728  6E2F               	movwf	i1CANsendMessage@tamp,c
  8059  00172A  6A30               	clrf	i1CANsendMessage@tamp+1,c
  8060  00172C  6A31               	clrf	i1CANsendMessage@tamp+2,c
  8061  00172E  6A32               	clrf	i1CANsendMessage@tamp+3,c
  8062                           
  8063                           ; BSR set to: 15
  8064                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  8065  001730  C02F  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
  8066                           
  8067                           ;inc\CANlib.h: 408: }
  8068  001734  D04D               	goto	i1l3872
  8069  001736                     i1l367:
  8070                           
  8071                           ; BSR set to: 15
  8072                           ;inc\CANlib.h: 410: else
  8073                           ;inc\CANlib.h: 412: {
  8074                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  8075  001736  010F               	movlb	15	; () banked
  8076  001738  9732               	bcf	50,3,b	;volatile
  8077                           
  8078                           ; BSR set to: 15
  8079                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  8080  00173A  C023  F02B         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  8081  00173E  C024  F02C         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  8082  001742  C025  F02D         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  8083  001746  C026  F02E         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  8084  00174A  0E04               	movlw	4
  8085  00174C  D005               	goto	i1u451_20
  8086  00174E                     i1u451_25:
  8087  00174E  90D8               	bcf	status,0,c
  8088  001750  322E               	rrcf	??i1_CANsendMessage+3,f,c
  8089  001752  322D               	rrcf	??i1_CANsendMessage+2,f,c
  8090  001754  322C               	rrcf	??i1_CANsendMessage+1,f,c
  8091  001756  322B               	rrcf	??i1_CANsendMessage,f,c
  8092  001758                     i1u451_20:
  8093  001758  2EE8               	decfsz	wreg,f,c
  8094  00175A  D7F9               	goto	i1u451_25
  8095  00175C  C02B  F02F         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8096  001760  C02C  F030         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8097  001764  C02D  F031         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8098  001768  C02E  F032         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8099                           
  8100                           ; BSR set to: 15
  8101                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  8102  00176C  502F               	movf	i1CANsendMessage@tamp,w,c
  8103  00176E  6E2F               	movwf	i1CANsendMessage@tamp,c
  8104  001770  6A30               	clrf	i1CANsendMessage@tamp+1,c
  8105  001772  6A31               	clrf	i1CANsendMessage@tamp+2,c
  8106  001774  6A32               	clrf	i1CANsendMessage@tamp+3,c
  8107                           
  8108                           ; BSR set to: 15
  8109                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  8110  001776  C02F  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
  8111                           
  8112                           ; BSR set to: 15
  8113                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  8114  00177A  0E07               	movlw	7
  8115  00177C  1423               	andwf	i1CANsendMessage@identifier,w,c
  8116  00177E  6E2F               	movwf	i1CANsendMessage@tamp,c
  8117  001780  0E00               	movlw	0
  8118  001782  1424               	andwf	i1CANsendMessage@identifier+1,w,c
  8119  001784  6E30               	movwf	i1CANsendMessage@tamp+1,c
  8120  001786  0E00               	movlw	0
  8121  001788  1425               	andwf	i1CANsendMessage@identifier+2,w,c
  8122  00178A  6E31               	movwf	i1CANsendMessage@tamp+2,c
  8123  00178C  0E00               	movlw	0
  8124  00178E  1426               	andwf	i1CANsendMessage@identifier+3,w,c
  8125  001790  6E32               	movwf	i1CANsendMessage@tamp+3,c
  8126                           
  8127                           ; BSR set to: 15
  8128                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  8129  001792  C02F  F02B         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  8130  001796  C030  F02C         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  8131  00179A  C031  F02D         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  8132  00179E  C032  F02E         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  8133  0017A2  0E05               	movlw	5
  8134  0017A4                     i1u452_25:
  8135  0017A4  90D8               	bcf	status,0,c
  8136  0017A6  362B               	rlcf	??i1_CANsendMessage,f,c
  8137  0017A8  362C               	rlcf	??i1_CANsendMessage+1,f,c
  8138  0017AA  362D               	rlcf	??i1_CANsendMessage+2,f,c
  8139  0017AC  362E               	rlcf	??i1_CANsendMessage+3,f,c
  8140  0017AE  2EE8               	decfsz	wreg,f,c
  8141  0017B0  D7F9               	goto	i1u452_25
  8142  0017B2  C02B  F02F         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8143  0017B6  C02C  F030         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8144  0017BA  C02D  F031         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8145  0017BE  C02E  F032         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8146                           
  8147                           ; BSR set to: 15
  8148                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  8149  0017C2  010F               	movlb	15	; () banked
  8150  0017C4  5132               	movf	50,w,b	;volatile
  8151  0017C6  0B1F               	andlw	31
  8152  0017C8  010F               	movlb	15	; () banked
  8153  0017CA  6F32               	movwf	50,b	;volatile
  8154                           
  8155                           ; BSR set to: 15
  8156                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  8157  0017CC  C02F  FF32         	movff	i1CANsendMessage@tamp,3890	;volatile
  8158  0017D0                     i1l3872:
  8159                           
  8160                           ; BSR set to: 15
  8161                           ;inc\CANlib.h: 423: }
  8162                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  8163  0017D0  A02A               	btfss	i1CANsendMessage@flags,0,c
  8164  0017D2  D003               	goto	i1l374
  8165                           
  8166                           ; BSR set to: 15
  8167                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  8168  0017D4  010F               	movlb	15	; () banked
  8169  0017D6  8130               	bsf	48,0,b	;volatile
  8170  0017D8  D002               	goto	i1l375
  8171  0017DA                     i1l374:
  8172                           
  8173                           ; BSR set to: 15
  8174                           ;inc\CANlib.h: 427: else
  8175                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  8176  0017DA  010F               	movlb	15	; () banked
  8177  0017DC  9130               	bcf	48,0,b	;volatile
  8178  0017DE                     i1l375:
  8179                           
  8180                           ; BSR set to: 15
  8181                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  8182  0017DE  A22A               	btfss	i1CANsendMessage@flags,1,c
  8183  0017E0  D003               	goto	i1l376
  8184                           
  8185                           ; BSR set to: 15
  8186                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  8187  0017E2  010F               	movlb	15	; () banked
  8188  0017E4  8330               	bsf	48,1,b	;volatile
  8189  0017E6  D002               	goto	i1l3878
  8190  0017E8                     i1l376:
  8191                           
  8192                           ; BSR set to: 15
  8193                           ;inc\CANlib.h: 431: else
  8194                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  8195  0017E8  010F               	movlb	15	; () banked
  8196  0017EA  9330               	bcf	48,1,b	;volatile
  8197  0017EC                     i1l3878:
  8198                           
  8199                           ; BSR set to: 15
  8200                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  8201  0017EC  C027  FFD9         	movff	i1CANsendMessage@data,fsr2l
  8202  0017F0  C028  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
  8203  0017F4  50DF               	movf	indf2,w,c
  8204  0017F6  010F               	movlb	15	; () banked
  8205  0017F8  6F36               	movwf	54,b	;volatile
  8206                           
  8207                           ; BSR set to: 15
  8208                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  8209  0017FA  EE20 F001          	lfsr	2,1
  8210  0017FE  5027               	movf	i1CANsendMessage@data,w,c
  8211  001800  26D9               	addwf	fsr2l,f,c
  8212  001802  5028               	movf	i1CANsendMessage@data+1,w,c
  8213  001804  22DA               	addwfc	fsr2h,f,c
  8214  001806  50DF               	movf	indf2,w,c
  8215  001808  010F               	movlb	15	; () banked
  8216  00180A  6F37               	movwf	55,b	;volatile
  8217                           
  8218                           ; BSR set to: 15
  8219                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  8220  00180C  EE20 F002          	lfsr	2,2
  8221  001810  5027               	movf	i1CANsendMessage@data,w,c
  8222  001812  26D9               	addwf	fsr2l,f,c
  8223  001814  5028               	movf	i1CANsendMessage@data+1,w,c
  8224  001816  22DA               	addwfc	fsr2h,f,c
  8225  001818  50DF               	movf	indf2,w,c
  8226  00181A  010F               	movlb	15	; () banked
  8227  00181C  6F38               	movwf	56,b	;volatile
  8228                           
  8229                           ; BSR set to: 15
  8230                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  8231  00181E  EE20 F003          	lfsr	2,3
  8232  001822  5027               	movf	i1CANsendMessage@data,w,c
  8233  001824  26D9               	addwf	fsr2l,f,c
  8234  001826  5028               	movf	i1CANsendMessage@data+1,w,c
  8235  001828  22DA               	addwfc	fsr2h,f,c
  8236  00182A  50DF               	movf	indf2,w,c
  8237  00182C  010F               	movlb	15	; () banked
  8238  00182E  6F39               	movwf	57,b	;volatile
  8239                           
  8240                           ; BSR set to: 15
  8241                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  8242  001830  EE20 F004          	lfsr	2,4
  8243  001834  5027               	movf	i1CANsendMessage@data,w,c
  8244  001836  26D9               	addwf	fsr2l,f,c
  8245  001838  5028               	movf	i1CANsendMessage@data+1,w,c
  8246  00183A  22DA               	addwfc	fsr2h,f,c
  8247  00183C  50DF               	movf	indf2,w,c
  8248  00183E  010F               	movlb	15	; () banked
  8249  001840  6F3A               	movwf	58,b	;volatile
  8250                           
  8251                           ; BSR set to: 15
  8252                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  8253  001842  EE20 F005          	lfsr	2,5
  8254  001846  5027               	movf	i1CANsendMessage@data,w,c
  8255  001848  26D9               	addwf	fsr2l,f,c
  8256  00184A  5028               	movf	i1CANsendMessage@data+1,w,c
  8257  00184C  22DA               	addwfc	fsr2h,f,c
  8258  00184E  50DF               	movf	indf2,w,c
  8259  001850  010F               	movlb	15	; () banked
  8260  001852  6F3B               	movwf	59,b	;volatile
  8261                           
  8262                           ; BSR set to: 15
  8263                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  8264  001854  EE20 F006          	lfsr	2,6
  8265  001858  5027               	movf	i1CANsendMessage@data,w,c
  8266  00185A  26D9               	addwf	fsr2l,f,c
  8267  00185C  5028               	movf	i1CANsendMessage@data+1,w,c
  8268  00185E  22DA               	addwfc	fsr2h,f,c
  8269  001860  50DF               	movf	indf2,w,c
  8270  001862  010F               	movlb	15	; () banked
  8271  001864  6F3C               	movwf	60,b	;volatile
  8272                           
  8273                           ; BSR set to: 15
  8274                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  8275  001866  EE20 F007          	lfsr	2,7
  8276  00186A  5027               	movf	i1CANsendMessage@data,w,c
  8277  00186C  26D9               	addwf	fsr2l,f,c
  8278  00186E  5028               	movf	i1CANsendMessage@data+1,w,c
  8279  001870  22DA               	addwfc	fsr2h,f,c
  8280  001872  50DF               	movf	indf2,w,c
  8281  001874  010F               	movlb	15	; () banked
  8282  001876  6F3D               	movwf	61,b	;volatile
  8283                           
  8284                           ; BSR set to: 15
  8285                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  8286  001878  010F               	movlb	15	; () banked
  8287  00187A  8730               	bsf	48,3,b	;volatile
  8288                           
  8289                           ; BSR set to: 15
  8290                           ;inc\CANlib.h: 445: return;
  8291  00187C  0012               	return	
  8292  00187E                     i1l364:
  8293                           
  8294                           ; BSR set to: 15
  8295                           ;inc\CANlib.h: 446: }
  8296                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  8297  00187E  010F               	movlb	15	; () banked
  8298  001880  B720               	btfsc	32,3,b	;volatile
  8299  001882  0012               	return	
  8300                           
  8301                           ; BSR set to: 15
  8302                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  8303  001884  C029  FF25         	movff	i1CANsendMessage@dataLength,3877	;volatile
  8304                           
  8305                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  8306  001888  AC2A               	btfss	i1CANsendMessage@flags,6,c
  8307  00188A  D003               	goto	i1l379
  8308                           
  8309                           ; BSR set to: 15
  8310                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  8311  00188C  010F               	movlb	15	; () banked
  8312  00188E  8D25               	bsf	37,6,b	;volatile
  8313  001890  D002               	goto	i1l380
  8314  001892                     i1l379:
  8315                           
  8316                           ; BSR set to: 15
  8317                           ;inc\CANlib.h: 455: else
  8318                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  8319  001892  010F               	movlb	15	; () banked
  8320  001894  9D25               	bcf	37,6,b	;volatile
  8321  001896                     i1l380:
  8322                           
  8323                           ; BSR set to: 15
  8324                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  8325  001896  A62A               	btfss	i1CANsendMessage@flags,3,c
  8326  001898  D066               	goto	i1l381
  8327                           
  8328                           ; BSR set to: 15
  8329                           ;inc\CANlib.h: 459: {
  8330                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  8331  00189A  5023               	movf	i1CANsendMessage@identifier,w,c
  8332  00189C  6E2F               	movwf	i1CANsendMessage@tamp,c
  8333  00189E  6A30               	clrf	i1CANsendMessage@tamp+1,c
  8334  0018A0  6A31               	clrf	i1CANsendMessage@tamp+2,c
  8335  0018A2  6A32               	clrf	i1CANsendMessage@tamp+3,c
  8336                           
  8337                           ; BSR set to: 15
  8338                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  8339  0018A4  C02F  FF24         	movff	i1CANsendMessage@tamp,3876	;volatile
  8340                           
  8341                           ; BSR set to: 15
  8342                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  8343  0018A8  0E00               	movlw	0
  8344  0018AA  1423               	andwf	i1CANsendMessage@identifier,w,c
  8345  0018AC  6E2F               	movwf	i1CANsendMessage@tamp,c
  8346  0018AE  0EFF               	movlw	255
  8347  0018B0  1424               	andwf	i1CANsendMessage@identifier+1,w,c
  8348  0018B2  6E30               	movwf	i1CANsendMessage@tamp+1,c
  8349  0018B4  0E00               	movlw	0
  8350  0018B6  1425               	andwf	i1CANsendMessage@identifier+2,w,c
  8351  0018B8  6E31               	movwf	i1CANsendMessage@tamp+2,c
  8352  0018BA  0E00               	movlw	0
  8353  0018BC  1426               	andwf	i1CANsendMessage@identifier+3,w,c
  8354  0018BE  6E32               	movwf	i1CANsendMessage@tamp+3,c
  8355                           
  8356                           ; BSR set to: 15
  8357                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  8358  0018C0  C02F  F02B         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  8359  0018C4  C030  F02C         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  8360  0018C8  C031  F02D         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  8361  0018CC  C032  F02E         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  8362  0018D0  C02C  F02B         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
  8363  0018D4  C02D  F02C         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
  8364  0018D8  C02E  F02D         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
  8365  0018DC  6A2E               	clrf	??i1_CANsendMessage+3,c
  8366  0018DE  C02B  F02F         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8367  0018E2  C02C  F030         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8368  0018E6  C02D  F031         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8369  0018EA  C02E  F032         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8370                           
  8371                           ; BSR set to: 15
  8372                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  8373  0018EE  C02F  FF23         	movff	i1CANsendMessage@tamp,3875	;volatile
  8374                           
  8375                           ; BSR set to: 15
  8376                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  8377  0018F2  0E00               	movlw	0
  8378  0018F4  010F               	movlb	15	; () banked
  8379  0018F6  6F22               	movwf	34,b	;volatile
  8380                           
  8381                           ; BSR set to: 15
  8382                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  8383  0018F8  010F               	movlb	15	; () banked
  8384  0018FA  8722               	bsf	34,3,b	;volatile
  8385                           
  8386                           ; BSR set to: 15
  8387                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  8388  0018FC  A025               	btfss	i1CANsendMessage@identifier+2,0,c
  8389  0018FE  D002               	goto	i1l382
  8390                           
  8391                           ; BSR set to: 15
  8392                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  8393  001900  010F               	movlb	15	; () banked
  8394  001902  8122               	bsf	34,0,b	;volatile
  8395  001904                     i1l382:
  8396                           
  8397                           ; BSR set to: 15
  8398                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  8399  001904  A225               	btfss	i1CANsendMessage@identifier+2,1,c
  8400  001906  D002               	goto	i1l383
  8401                           
  8402                           ; BSR set to: 15
  8403                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  8404  001908  010F               	movlb	15	; () banked
  8405  00190A  8322               	bsf	34,1,b	;volatile
  8406  00190C                     i1l383:
  8407                           
  8408                           ; BSR set to: 15
  8409                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  8410  00190C  A425               	btfss	i1CANsendMessage@identifier+2,2,c
  8411  00190E  D002               	goto	i1l384
  8412                           
  8413                           ; BSR set to: 15
  8414                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  8415  001910  010F               	movlb	15	; () banked
  8416  001912  8B22               	bsf	34,5,b	;volatile
  8417  001914                     i1l384:
  8418                           
  8419                           ; BSR set to: 15
  8420                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  8421  001914  A625               	btfss	i1CANsendMessage@identifier+2,3,c
  8422  001916  D002               	goto	i1l385
  8423                           
  8424                           ; BSR set to: 15
  8425                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  8426  001918  010F               	movlb	15	; () banked
  8427  00191A  8D22               	bsf	34,6,b	;volatile
  8428  00191C                     i1l385:
  8429                           
  8430                           ; BSR set to: 15
  8431                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  8432  00191C  A825               	btfss	i1CANsendMessage@identifier+2,4,c
  8433  00191E  D002               	goto	i1l3928
  8434                           
  8435                           ; BSR set to: 15
  8436                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  8437  001920  010F               	movlb	15	; () banked
  8438  001922  8F22               	bsf	34,7,b	;volatile
  8439  001924                     i1l3928:
  8440                           
  8441                           ; BSR set to: 15
  8442                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  8443  001924  C023  F02B         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  8444  001928  C024  F02C         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  8445  00192C  C025  F02D         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  8446  001930  C026  F02E         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  8447  001934  0E16               	movlw	22
  8448  001936  D005               	goto	i1u463_20
  8449  001938                     i1u463_25:
  8450  001938  90D8               	bcf	status,0,c
  8451  00193A  322E               	rrcf	??i1_CANsendMessage+3,f,c
  8452  00193C  322D               	rrcf	??i1_CANsendMessage+2,f,c
  8453  00193E  322C               	rrcf	??i1_CANsendMessage+1,f,c
  8454  001940  322B               	rrcf	??i1_CANsendMessage,f,c
  8455  001942                     i1u463_20:
  8456  001942  2EE8               	decfsz	wreg,f,c
  8457  001944  D7F9               	goto	i1u463_25
  8458  001946  C02B  F02F         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8459  00194A  C02C  F030         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8460  00194E  C02D  F031         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8461  001952  C02E  F032         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8462                           
  8463                           ; BSR set to: 15
  8464                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  8465  001956  502F               	movf	i1CANsendMessage@tamp,w,c
  8466  001958  6E2F               	movwf	i1CANsendMessage@tamp,c
  8467  00195A  6A30               	clrf	i1CANsendMessage@tamp+1,c
  8468  00195C  6A31               	clrf	i1CANsendMessage@tamp+2,c
  8469  00195E  6A32               	clrf	i1CANsendMessage@tamp+3,c
  8470                           
  8471                           ; BSR set to: 15
  8472                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  8473  001960  C02F  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
  8474                           
  8475                           ;inc\CANlib.h: 484: }
  8476  001964  D04D               	goto	i1l3948
  8477  001966                     i1l381:
  8478                           
  8479                           ; BSR set to: 15
  8480                           ;inc\CANlib.h: 486: else
  8481                           ;inc\CANlib.h: 488: {
  8482                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  8483  001966  010F               	movlb	15	; () banked
  8484  001968  9722               	bcf	34,3,b	;volatile
  8485                           
  8486                           ; BSR set to: 15
  8487                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  8488  00196A  C023  F02B         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  8489  00196E  C024  F02C         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  8490  001972  C025  F02D         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  8491  001976  C026  F02E         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  8492  00197A  0E04               	movlw	4
  8493  00197C  D005               	goto	i1u464_20
  8494  00197E                     i1u464_25:
  8495  00197E  90D8               	bcf	status,0,c
  8496  001980  322E               	rrcf	??i1_CANsendMessage+3,f,c
  8497  001982  322D               	rrcf	??i1_CANsendMessage+2,f,c
  8498  001984  322C               	rrcf	??i1_CANsendMessage+1,f,c
  8499  001986  322B               	rrcf	??i1_CANsendMessage,f,c
  8500  001988                     i1u464_20:
  8501  001988  2EE8               	decfsz	wreg,f,c
  8502  00198A  D7F9               	goto	i1u464_25
  8503  00198C  C02B  F02F         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8504  001990  C02C  F030         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8505  001994  C02D  F031         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8506  001998  C02E  F032         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8507                           
  8508                           ; BSR set to: 15
  8509                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  8510  00199C  502F               	movf	i1CANsendMessage@tamp,w,c
  8511  00199E  6E2F               	movwf	i1CANsendMessage@tamp,c
  8512  0019A0  6A30               	clrf	i1CANsendMessage@tamp+1,c
  8513  0019A2  6A31               	clrf	i1CANsendMessage@tamp+2,c
  8514  0019A4  6A32               	clrf	i1CANsendMessage@tamp+3,c
  8515                           
  8516                           ; BSR set to: 15
  8517                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  8518  0019A6  C02F  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
  8519                           
  8520                           ; BSR set to: 15
  8521                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  8522  0019AA  0E07               	movlw	7
  8523  0019AC  1423               	andwf	i1CANsendMessage@identifier,w,c
  8524  0019AE  6E2F               	movwf	i1CANsendMessage@tamp,c
  8525  0019B0  0E00               	movlw	0
  8526  0019B2  1424               	andwf	i1CANsendMessage@identifier+1,w,c
  8527  0019B4  6E30               	movwf	i1CANsendMessage@tamp+1,c
  8528  0019B6  0E00               	movlw	0
  8529  0019B8  1425               	andwf	i1CANsendMessage@identifier+2,w,c
  8530  0019BA  6E31               	movwf	i1CANsendMessage@tamp+2,c
  8531  0019BC  0E00               	movlw	0
  8532  0019BE  1426               	andwf	i1CANsendMessage@identifier+3,w,c
  8533  0019C0  6E32               	movwf	i1CANsendMessage@tamp+3,c
  8534                           
  8535                           ; BSR set to: 15
  8536                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  8537  0019C2  C02F  F02B         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  8538  0019C6  C030  F02C         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  8539  0019CA  C031  F02D         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  8540  0019CE  C032  F02E         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  8541  0019D2  0E05               	movlw	5
  8542  0019D4                     i1u465_25:
  8543  0019D4  90D8               	bcf	status,0,c
  8544  0019D6  362B               	rlcf	??i1_CANsendMessage,f,c
  8545  0019D8  362C               	rlcf	??i1_CANsendMessage+1,f,c
  8546  0019DA  362D               	rlcf	??i1_CANsendMessage+2,f,c
  8547  0019DC  362E               	rlcf	??i1_CANsendMessage+3,f,c
  8548  0019DE  2EE8               	decfsz	wreg,f,c
  8549  0019E0  D7F9               	goto	i1u465_25
  8550  0019E2  C02B  F02F         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8551  0019E6  C02C  F030         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8552  0019EA  C02D  F031         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8553  0019EE  C02E  F032         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8554                           
  8555                           ; BSR set to: 15
  8556                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  8557  0019F2  010F               	movlb	15	; () banked
  8558  0019F4  5122               	movf	34,w,b	;volatile
  8559  0019F6  0B1F               	andlw	31
  8560  0019F8  010F               	movlb	15	; () banked
  8561  0019FA  6F22               	movwf	34,b	;volatile
  8562                           
  8563                           ; BSR set to: 15
  8564                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  8565  0019FC  C02F  FF22         	movff	i1CANsendMessage@tamp,3874	;volatile
  8566  001A00                     i1l3948:
  8567                           
  8568                           ; BSR set to: 15
  8569                           ;inc\CANlib.h: 499: }
  8570                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  8571  001A00  A02A               	btfss	i1CANsendMessage@flags,0,c
  8572  001A02  D003               	goto	i1l388
  8573                           
  8574                           ; BSR set to: 15
  8575                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  8576  001A04  010F               	movlb	15	; () banked
  8577  001A06  8120               	bsf	32,0,b	;volatile
  8578  001A08  D002               	goto	i1l389
  8579  001A0A                     i1l388:
  8580                           
  8581                           ; BSR set to: 15
  8582                           ;inc\CANlib.h: 503: else
  8583                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  8584  001A0A  010F               	movlb	15	; () banked
  8585  001A0C  9120               	bcf	32,0,b	;volatile
  8586  001A0E                     i1l389:
  8587                           
  8588                           ; BSR set to: 15
  8589                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  8590  001A0E  A22A               	btfss	i1CANsendMessage@flags,1,c
  8591  001A10  D003               	goto	i1l390
  8592                           
  8593                           ; BSR set to: 15
  8594                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  8595  001A12  010F               	movlb	15	; () banked
  8596  001A14  8320               	bsf	32,1,b	;volatile
  8597  001A16  D002               	goto	i1l3954
  8598  001A18                     i1l390:
  8599                           
  8600                           ; BSR set to: 15
  8601                           ;inc\CANlib.h: 507: else
  8602                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  8603  001A18  010F               	movlb	15	; () banked
  8604  001A1A  9320               	bcf	32,1,b	;volatile
  8605  001A1C                     i1l3954:
  8606                           
  8607                           ; BSR set to: 15
  8608                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  8609  001A1C  C027  FFD9         	movff	i1CANsendMessage@data,fsr2l
  8610  001A20  C028  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
  8611  001A24  50DF               	movf	indf2,w,c
  8612  001A26  010F               	movlb	15	; () banked
  8613  001A28  6F26               	movwf	38,b	;volatile
  8614                           
  8615                           ; BSR set to: 15
  8616                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  8617  001A2A  EE20 F001          	lfsr	2,1
  8618  001A2E  5027               	movf	i1CANsendMessage@data,w,c
  8619  001A30  26D9               	addwf	fsr2l,f,c
  8620  001A32  5028               	movf	i1CANsendMessage@data+1,w,c
  8621  001A34  22DA               	addwfc	fsr2h,f,c
  8622  001A36  50DF               	movf	indf2,w,c
  8623  001A38  010F               	movlb	15	; () banked
  8624  001A3A  6F27               	movwf	39,b	;volatile
  8625                           
  8626                           ; BSR set to: 15
  8627                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  8628  001A3C  EE20 F002          	lfsr	2,2
  8629  001A40  5027               	movf	i1CANsendMessage@data,w,c
  8630  001A42  26D9               	addwf	fsr2l,f,c
  8631  001A44  5028               	movf	i1CANsendMessage@data+1,w,c
  8632  001A46  22DA               	addwfc	fsr2h,f,c
  8633  001A48  50DF               	movf	indf2,w,c
  8634  001A4A  010F               	movlb	15	; () banked
  8635  001A4C  6F28               	movwf	40,b	;volatile
  8636                           
  8637                           ; BSR set to: 15
  8638                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  8639  001A4E  EE20 F003          	lfsr	2,3
  8640  001A52  5027               	movf	i1CANsendMessage@data,w,c
  8641  001A54  26D9               	addwf	fsr2l,f,c
  8642  001A56  5028               	movf	i1CANsendMessage@data+1,w,c
  8643  001A58  22DA               	addwfc	fsr2h,f,c
  8644  001A5A  50DF               	movf	indf2,w,c
  8645  001A5C  010F               	movlb	15	; () banked
  8646  001A5E  6F29               	movwf	41,b	;volatile
  8647                           
  8648                           ; BSR set to: 15
  8649                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  8650  001A60  EE20 F004          	lfsr	2,4
  8651  001A64  5027               	movf	i1CANsendMessage@data,w,c
  8652  001A66  26D9               	addwf	fsr2l,f,c
  8653  001A68  5028               	movf	i1CANsendMessage@data+1,w,c
  8654  001A6A  22DA               	addwfc	fsr2h,f,c
  8655  001A6C  50DF               	movf	indf2,w,c
  8656  001A6E  010F               	movlb	15	; () banked
  8657  001A70  6F2A               	movwf	42,b	;volatile
  8658                           
  8659                           ; BSR set to: 15
  8660                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  8661  001A72  EE20 F005          	lfsr	2,5
  8662  001A76  5027               	movf	i1CANsendMessage@data,w,c
  8663  001A78  26D9               	addwf	fsr2l,f,c
  8664  001A7A  5028               	movf	i1CANsendMessage@data+1,w,c
  8665  001A7C  22DA               	addwfc	fsr2h,f,c
  8666  001A7E  50DF               	movf	indf2,w,c
  8667  001A80  010F               	movlb	15	; () banked
  8668  001A82  6F2B               	movwf	43,b	;volatile
  8669                           
  8670                           ; BSR set to: 15
  8671                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  8672  001A84  EE20 F006          	lfsr	2,6
  8673  001A88  5027               	movf	i1CANsendMessage@data,w,c
  8674  001A8A  26D9               	addwf	fsr2l,f,c
  8675  001A8C  5028               	movf	i1CANsendMessage@data+1,w,c
  8676  001A8E  22DA               	addwfc	fsr2h,f,c
  8677  001A90  50DF               	movf	indf2,w,c
  8678  001A92  010F               	movlb	15	; () banked
  8679  001A94  6F2C               	movwf	44,b	;volatile
  8680                           
  8681                           ; BSR set to: 15
  8682                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  8683  001A96  EE20 F007          	lfsr	2,7
  8684  001A9A  5027               	movf	i1CANsendMessage@data,w,c
  8685  001A9C  26D9               	addwf	fsr2l,f,c
  8686  001A9E  5028               	movf	i1CANsendMessage@data+1,w,c
  8687  001AA0  22DA               	addwfc	fsr2h,f,c
  8688  001AA2  50DF               	movf	indf2,w,c
  8689  001AA4  010F               	movlb	15	; () banked
  8690  001AA6  6F2D               	movwf	45,b	;volatile
  8691                           
  8692                           ; BSR set to: 15
  8693                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  8694  001AA8  010F               	movlb	15	; () banked
  8695  001AAA  8720               	bsf	32,3,b	;volatile
  8696                           
  8697                           ; BSR set to: 15
  8698                           ;inc\CANlib.h: 521: return;
  8699  001AAC  0012               	return	
  8700  001AAE                     __end_ofi1_CANsendMessage:
  8701                           	opt stack 0
  8702                           pclatu	equ	0xFFB
  8703                           pclath	equ	0xFFA
  8704                           tblptru	equ	0xFF8
  8705                           tblptrh	equ	0xFF7
  8706                           tblptrl	equ	0xFF6
  8707                           tablat	equ	0xFF5
  8708                           prodh	equ	0xFF4
  8709                           prodl	equ	0xFF3
  8710                           intcon	equ	0xFF2
  8711                           intcon2	equ	0xFF1
  8712                           postinc0	equ	0xFEE
  8713                           fsr0h	equ	0xFEA
  8714                           fsr0l	equ	0xFE9
  8715                           wreg	equ	0xFE8
  8716                           postdec1	equ	0xFE5
  8717                           fsr1h	equ	0xFE2
  8718                           fsr1l	equ	0xFE1
  8719                           bsr	equ	0xFE0
  8720                           indf2	equ	0xFDF
  8721                           fsr2h	equ	0xFDA
  8722                           fsr2l	equ	0xFD9
  8723                           status	equ	0xFD8
  8724                           
  8725 ;; *************** function _CANreceiveMessage *****************
  8726 ;; Defined at:
  8727 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;  msg             2    0[COMRAM] PTR struct .
  8730 ;;		 -> msg(15), 
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;  tamp            1   11[COMRAM] unsigned char 
  8733 ;;  error           1   10[COMRAM] unsigned char 
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  1    wreg      unsigned char 
  8736 ;; Registers used:
  8737 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8738 ;; Tracked objects:
  8739 ;;		On entry : 0/0
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8743 ;;      Params:         2       0       0       0
  8744 ;;      Locals:         2       0       0       0
  8745 ;;      Temps:          8       0       0       0
  8746 ;;      Totals:        12       0       0       0
  8747 ;;Total ram usage:       12 bytes
  8748 ;; Hardware stack levels used:    1
  8749 ;; Hardware stack levels required when called:    2
  8750 ;; This function calls:
  8751 ;;		Nothing
  8752 ;; This function is called by:
  8753 ;;		_ISR_bassa
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757                           	psect	text25
  8758  001AAE                     __ptext25:
  8759                           	opt stack 0
  8760  001AAE                     _CANreceiveMessage:
  8761                           	opt stack 24
  8762                           
  8763                           ;inc\CANlib.h: 531: BYTE tamp;
  8764                           ;inc\CANlib.h: 532: BYTE error = 0;
  8765                           
  8766                           ; BSR set to: 15
  8767                           ;incstack = 0
  8768  001AAE  0E00               	movlw	0
  8769  001AB0  6E2D               	movwf	CANreceiveMessage@error,c
  8770                           
  8771                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
  8772  001AB2  BE74               	btfsc	3956,7,c	;volatile
  8773                           
  8774                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
  8775  001AB4  802D               	bsf	CANreceiveMessage@error,0,c
  8776                           
  8777                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
  8778  001AB6  BC74               	btfsc	3956,6,c	;volatile
  8779                           
  8780                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
  8781  001AB8  822D               	bsf	CANreceiveMessage@error,1,c
  8782                           
  8783                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
  8784  001ABA  010F               	movlb	15	; () banked
  8785  001ABC  AF50               	btfss	80,7,b	;volatile
  8786  001ABE  D143               	goto	i1l396
  8787                           
  8788                           ; BSR set to: 15
  8789                           ;inc\CANlib.h: 542: {
  8790                           ;inc\CANlib.h: 543: msg->identifier = 0;
  8791  001AC0  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8792  001AC4  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8793  001AC8  6ADE               	clrf	postinc2,c
  8794  001ACA  6ADE               	clrf	postinc2,c
  8795  001ACC  6ADE               	clrf	postinc2,c
  8796  001ACE  6ADD               	clrf	postdec2,c
  8797                           
  8798                           ; BSR set to: 15
  8799                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
  8800  001AD0  EE20 F004          	lfsr	2,4
  8801  001AD4  5023               	movf	CANreceiveMessage@msg,w,c
  8802  001AD6  26D9               	addwf	fsr2l,f,c
  8803  001AD8  5024               	movf	CANreceiveMessage@msg+1,w,c
  8804  001ADA  22DA               	addwfc	fsr2h,f,c
  8805  001ADC  CF56 FFDF          	movff	3926,indf2	;volatile
  8806                           
  8807                           ; BSR set to: 15
  8808                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
  8809  001AE0  EE20 F005          	lfsr	2,5
  8810  001AE4  5023               	movf	CANreceiveMessage@msg,w,c
  8811  001AE6  26D9               	addwf	fsr2l,f,c
  8812  001AE8  5024               	movf	CANreceiveMessage@msg+1,w,c
  8813  001AEA  22DA               	addwfc	fsr2h,f,c
  8814  001AEC  CF57 FFDF          	movff	3927,indf2	;volatile
  8815                           
  8816                           ; BSR set to: 15
  8817                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
  8818  001AF0  EE20 F006          	lfsr	2,6
  8819  001AF4  5023               	movf	CANreceiveMessage@msg,w,c
  8820  001AF6  26D9               	addwf	fsr2l,f,c
  8821  001AF8  5024               	movf	CANreceiveMessage@msg+1,w,c
  8822  001AFA  22DA               	addwfc	fsr2h,f,c
  8823  001AFC  CF58 FFDF          	movff	3928,indf2	;volatile
  8824                           
  8825                           ; BSR set to: 15
  8826                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
  8827  001B00  EE20 F007          	lfsr	2,7
  8828  001B04  5023               	movf	CANreceiveMessage@msg,w,c
  8829  001B06  26D9               	addwf	fsr2l,f,c
  8830  001B08  5024               	movf	CANreceiveMessage@msg+1,w,c
  8831  001B0A  22DA               	addwfc	fsr2h,f,c
  8832  001B0C  CF59 FFDF          	movff	3929,indf2	;volatile
  8833                           
  8834                           ; BSR set to: 15
  8835                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
  8836  001B10  EE20 F008          	lfsr	2,8
  8837  001B14  5023               	movf	CANreceiveMessage@msg,w,c
  8838  001B16  26D9               	addwf	fsr2l,f,c
  8839  001B18  5024               	movf	CANreceiveMessage@msg+1,w,c
  8840  001B1A  22DA               	addwfc	fsr2h,f,c
  8841  001B1C  CF5A FFDF          	movff	3930,indf2	;volatile
  8842                           
  8843                           ; BSR set to: 15
  8844                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
  8845  001B20  EE20 F009          	lfsr	2,9
  8846  001B24  5023               	movf	CANreceiveMessage@msg,w,c
  8847  001B26  26D9               	addwf	fsr2l,f,c
  8848  001B28  5024               	movf	CANreceiveMessage@msg+1,w,c
  8849  001B2A  22DA               	addwfc	fsr2h,f,c
  8850  001B2C  CF5B FFDF          	movff	3931,indf2	;volatile
  8851                           
  8852                           ; BSR set to: 15
  8853                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
  8854  001B30  EE20 F00A          	lfsr	2,10
  8855  001B34  5023               	movf	CANreceiveMessage@msg,w,c
  8856  001B36  26D9               	addwf	fsr2l,f,c
  8857  001B38  5024               	movf	CANreceiveMessage@msg+1,w,c
  8858  001B3A  22DA               	addwfc	fsr2h,f,c
  8859  001B3C  CF5C FFDF          	movff	3932,indf2	;volatile
  8860                           
  8861                           ; BSR set to: 15
  8862                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
  8863  001B40  EE20 F00B          	lfsr	2,11
  8864  001B44  5023               	movf	CANreceiveMessage@msg,w,c
  8865  001B46  26D9               	addwf	fsr2l,f,c
  8866  001B48  5024               	movf	CANreceiveMessage@msg+1,w,c
  8867  001B4A  22DA               	addwfc	fsr2h,f,c
  8868  001B4C  CF5D FFDF          	movff	3933,indf2	;volatile
  8869                           
  8870                           ; BSR set to: 15
  8871                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
  8872  001B50  EE20 F00E          	lfsr	2,14
  8873  001B54  5023               	movf	CANreceiveMessage@msg,w,c
  8874  001B56  26D9               	addwf	fsr2l,f,c
  8875  001B58  5024               	movf	CANreceiveMessage@msg+1,w,c
  8876  001B5A  22DA               	addwfc	fsr2h,f,c
  8877  001B5C  010F               	movlb	15	; () banked
  8878  001B5E  AD55               	btfss	85,6,b	;volatile
  8879  001B60  D002               	goto	i1u395_20
  8880  001B62  0E01               	movlw	1
  8881  001B64  D001               	goto	i1u395_26
  8882  001B66                     i1u395_20:
  8883  001B66  0E00               	movlw	0
  8884  001B68                     i1u395_26:
  8885  001B68  6EDF               	movwf	indf2,c
  8886                           
  8887                           ; BSR set to: 15
  8888                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
  8889  001B6A  EE20 F00D          	lfsr	2,13
  8890  001B6E  5023               	movf	CANreceiveMessage@msg,w,c
  8891  001B70  26D9               	addwf	fsr2l,f,c
  8892  001B72  5024               	movf	CANreceiveMessage@msg+1,w,c
  8893  001B74  22DA               	addwfc	fsr2h,f,c
  8894  001B76  010F               	movlb	15	; () banked
  8895  001B78  5155               	movf	85,w,b	;volatile
  8896  001B7A  0B0F               	andlw	15
  8897  001B7C  6EDF               	movwf	indf2,c
  8898                           
  8899                           ; BSR set to: 15
  8900                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
  8901  001B7E  EE20 F00C          	lfsr	2,12
  8902  001B82  5023               	movf	CANreceiveMessage@msg,w,c
  8903  001B84  26D9               	addwf	fsr2l,f,c
  8904  001B86  5024               	movf	CANreceiveMessage@msg+1,w,c
  8905  001B88  22DA               	addwfc	fsr2h,f,c
  8906  001B8A  010F               	movlb	15	; () banked
  8907  001B8C  A752               	btfss	82,3,b	;volatile
  8908  001B8E  D002               	goto	i1u396_20
  8909  001B90  0E01               	movlw	1
  8910  001B92  D001               	goto	i1u396_26
  8911  001B94                     i1u396_20:
  8912  001B94  0E00               	movlw	0
  8913  001B96                     i1u396_26:
  8914  001B96  6EDF               	movwf	indf2,c
  8915                           
  8916                           ; BSR set to: 15
  8917                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
  8918  001B98  010F               	movlb	15	; () banked
  8919  001B9A  B752               	btfsc	82,3,b	;volatile
  8920  001B9C  D044               	goto	i1l3524
  8921                           
  8922                           ; BSR set to: 15
  8923                           ;inc\CANlib.h: 560: {
  8924                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  8925  001B9E  CF51 F025          	movff	3921,??_CANreceiveMessage	;volatile
  8926  001BA2  6A26               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8927  001BA4  6A27               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8928  001BA6  6A28               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8929  001BA8  0E03               	movlw	3
  8930  001BAA                     i1u398_25:
  8931  001BAA  90D8               	bcf	status,0,c
  8932  001BAC  3625               	rlcf	??_CANreceiveMessage,f,c
  8933  001BAE  3626               	rlcf	??_CANreceiveMessage+1,f,c
  8934  001BB0  3627               	rlcf	??_CANreceiveMessage+2,f,c
  8935  001BB2  3628               	rlcf	??_CANreceiveMessage+3,f,c
  8936  001BB4  2EE8               	decfsz	wreg,f,c
  8937  001BB6  D7F9               	goto	i1u398_25
  8938  001BB8  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8939  001BBC  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8940  001BC0  C025  FFDE         	movff	??_CANreceiveMessage,postinc2
  8941  001BC4  C026  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8942  001BC8  C027  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8943  001BCC  C028  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8944                           
  8945                           ; BSR set to: 15
  8946                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
  8947  001BD0  010F               	movlb	15	; () banked
  8948  001BD2  3952               	swapf	82,w,b	;volatile
  8949  001BD4  42E8               	rrncf	wreg,f,c
  8950  001BD6  0B07               	andlw	7
  8951  001BD8  0B07               	andlw	7
  8952  001BDA  6E2E               	movwf	CANreceiveMessage@tamp,c
  8953                           
  8954                           ; BSR set to: 15
  8955                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
  8956  001BDC  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8957  001BE0  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8958  001BE4  CFDE F025          	movff	postinc2,??_CANreceiveMessage
  8959  001BE8  CFDE F026          	movff	postinc2,??_CANreceiveMessage+1
  8960  001BEC  CFDE F027          	movff	postinc2,??_CANreceiveMessage+2
  8961  001BF0  CFDE F028          	movff	postinc2,??_CANreceiveMessage+3
  8962  001BF4  502E               	movf	CANreceiveMessage@tamp,w,c
  8963  001BF6  2425               	addwf	??_CANreceiveMessage,w,c
  8964  001BF8  6E29               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8965  001BFA  0E00               	movlw	0
  8966  001BFC  2026               	addwfc	??_CANreceiveMessage+1,w,c
  8967  001BFE  6E2A               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8968  001C00  0E00               	movlw	0
  8969  001C02  2027               	addwfc	??_CANreceiveMessage+2,w,c
  8970  001C04  6E2B               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8971  001C06  0E00               	movlw	0
  8972  001C08  2028               	addwfc	??_CANreceiveMessage+3,w,c
  8973  001C0A  6E2C               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8974  001C0C  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8975  001C10  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8976  001C14  C029  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8977  001C18  C02A  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8978  001C1C  C02B  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8979  001C20  C02C  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8980                           
  8981                           ;inc\CANlib.h: 564: }
  8982  001C24  D08D               	goto	i1l3550
  8983  001C26                     i1l3524:
  8984                           
  8985                           ; BSR set to: 15
  8986                           ;inc\CANlib.h: 565: else
  8987                           ;inc\CANlib.h: 566: {
  8988                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
  8989  001C26  CF54 F025          	movff	3924,??_CANreceiveMessage	;volatile
  8990  001C2A  6A26               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8991  001C2C  6A27               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8992  001C2E  6A28               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8993  001C30  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8994  001C34  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8995  001C38  C025  FFDE         	movff	??_CANreceiveMessage,postinc2
  8996  001C3C  C026  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8997  001C40  C027  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8998  001C44  C028  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8999                           
  9000                           ; BSR set to: 15
  9001                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  9002  001C48  CF53 F025          	movff	3923,??_CANreceiveMessage	;volatile
  9003  001C4C  6A26               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9004  001C4E  6A27               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9005  001C50  6A28               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9006  001C52  C027  F028         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  9007  001C56  C026  F027         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  9008  001C5A  C025  F026         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  9009  001C5E  6A25               	clrf	??_CANreceiveMessage,c
  9010  001C60  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9011  001C64  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9012  001C68  5025               	movf	??_CANreceiveMessage,w,c
  9013  001C6A  26DE               	addwf	postinc2,f,c
  9014  001C6C  5026               	movf	??_CANreceiveMessage+1,w,c
  9015  001C6E  22DE               	addwfc	postinc2,f,c
  9016  001C70  5027               	movf	??_CANreceiveMessage+2,w,c
  9017  001C72  22DE               	addwfc	postinc2,f,c
  9018  001C74  5028               	movf	??_CANreceiveMessage+3,w,c
  9019  001C76  22DE               	addwfc	postinc2,f,c
  9020                           
  9021                           ; BSR set to: 15
  9022                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
  9023  001C78  010F               	movlb	15	; () banked
  9024  001C7A  A152               	btfss	82,0,b	;volatile
  9025  001C7C  D00C               	goto	i1l3532
  9026                           
  9027                           ; BSR set to: 15
  9028                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
  9029  001C7E  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9030  001C82  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9031  001C86  0E00               	movlw	0
  9032  001C88  12DE               	iorwf	postinc2,f,c
  9033  001C8A  0E00               	movlw	0
  9034  001C8C  12DE               	iorwf	postinc2,f,c
  9035  001C8E  0E01               	movlw	1
  9036  001C90  12DE               	iorwf	postinc2,f,c
  9037  001C92  0E00               	movlw	0
  9038  001C94  12DE               	iorwf	postinc2,f,c
  9039  001C96                     i1l3532:
  9040                           
  9041                           ; BSR set to: 15
  9042                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
  9043  001C96  010F               	movlb	15	; () banked
  9044  001C98  A352               	btfss	82,1,b	;volatile
  9045  001C9A  D00C               	goto	i1l3536
  9046                           
  9047                           ; BSR set to: 15
  9048                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
  9049  001C9C  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9050  001CA0  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9051  001CA4  0E00               	movlw	0
  9052  001CA6  12DE               	iorwf	postinc2,f,c
  9053  001CA8  0E00               	movlw	0
  9054  001CAA  12DE               	iorwf	postinc2,f,c
  9055  001CAC  0E02               	movlw	2
  9056  001CAE  12DE               	iorwf	postinc2,f,c
  9057  001CB0  0E00               	movlw	0
  9058  001CB2  12DE               	iorwf	postinc2,f,c
  9059  001CB4                     i1l3536:
  9060                           
  9061                           ; BSR set to: 15
  9062                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
  9063  001CB4  010F               	movlb	15	; () banked
  9064  001CB6  AB52               	btfss	82,5,b	;volatile
  9065  001CB8  D00C               	goto	i1l3540
  9066                           
  9067                           ; BSR set to: 15
  9068                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
  9069  001CBA  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9070  001CBE  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9071  001CC2  0E00               	movlw	0
  9072  001CC4  12DE               	iorwf	postinc2,f,c
  9073  001CC6  0E00               	movlw	0
  9074  001CC8  12DE               	iorwf	postinc2,f,c
  9075  001CCA  0E04               	movlw	4
  9076  001CCC  12DE               	iorwf	postinc2,f,c
  9077  001CCE  0E00               	movlw	0
  9078  001CD0  12DE               	iorwf	postinc2,f,c
  9079  001CD2                     i1l3540:
  9080                           
  9081                           ; BSR set to: 15
  9082                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
  9083  001CD2  010F               	movlb	15	; () banked
  9084  001CD4  AD52               	btfss	82,6,b	;volatile
  9085  001CD6  D00C               	goto	i1l3544
  9086                           
  9087                           ; BSR set to: 15
  9088                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
  9089  001CD8  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9090  001CDC  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9091  001CE0  0E00               	movlw	0
  9092  001CE2  12DE               	iorwf	postinc2,f,c
  9093  001CE4  0E00               	movlw	0
  9094  001CE6  12DE               	iorwf	postinc2,f,c
  9095  001CE8  0E08               	movlw	8
  9096  001CEA  12DE               	iorwf	postinc2,f,c
  9097  001CEC  0E00               	movlw	0
  9098  001CEE  12DE               	iorwf	postinc2,f,c
  9099  001CF0                     i1l3544:
  9100                           
  9101                           ; BSR set to: 15
  9102                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
  9103  001CF0  010F               	movlb	15	; () banked
  9104  001CF2  AF52               	btfss	82,7,b	;volatile
  9105  001CF4  D00C               	goto	i1l3548
  9106                           
  9107                           ; BSR set to: 15
  9108                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
  9109  001CF6  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9110  001CFA  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9111  001CFE  0E00               	movlw	0
  9112  001D00  12DE               	iorwf	postinc2,f,c
  9113  001D02  0E00               	movlw	0
  9114  001D04  12DE               	iorwf	postinc2,f,c
  9115  001D06  0E10               	movlw	16
  9116  001D08  12DE               	iorwf	postinc2,f,c
  9117  001D0A  0E00               	movlw	0
  9118  001D0C  12DE               	iorwf	postinc2,f,c
  9119  001D0E                     i1l3548:
  9120                           
  9121                           ; BSR set to: 15
  9122                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  9123  001D0E  CF51 F025          	movff	3921,??_CANreceiveMessage	;volatile
  9124  001D12  6A26               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9125  001D14  6A27               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9126  001D16  6A28               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9127  001D18  0E15               	movlw	21
  9128  001D1A                     i1u404_25:
  9129  001D1A  90D8               	bcf	status,0,c
  9130  001D1C  3625               	rlcf	??_CANreceiveMessage,f,c
  9131  001D1E  3626               	rlcf	??_CANreceiveMessage+1,f,c
  9132  001D20  3627               	rlcf	??_CANreceiveMessage+2,f,c
  9133  001D22  3628               	rlcf	??_CANreceiveMessage+3,f,c
  9134  001D24  2EE8               	decfsz	wreg,f,c
  9135  001D26  D7F9               	goto	i1u404_25
  9136  001D28  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9137  001D2C  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9138  001D30  5025               	movf	??_CANreceiveMessage,w,c
  9139  001D32  12DE               	iorwf	postinc2,f,c
  9140  001D34  5026               	movf	??_CANreceiveMessage+1,w,c
  9141  001D36  12DE               	iorwf	postinc2,f,c
  9142  001D38  5027               	movf	??_CANreceiveMessage+2,w,c
  9143  001D3A  12DE               	iorwf	postinc2,f,c
  9144  001D3C  5028               	movf	??_CANreceiveMessage+3,w,c
  9145  001D3E  12DE               	iorwf	postinc2,f,c
  9146  001D40                     i1l3550:
  9147                           
  9148                           ; BSR set to: 15
  9149                           ;inc\CANlib.h: 582: }
  9150                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
  9151  001D40  010F               	movlb	15	; () banked
  9152  001D42  9F50               	bcf	80,7,b	;volatile
  9153                           
  9154                           ; BSR set to: 15
  9155                           ;inc\CANlib.h: 585: return (error);
  9156                           ;	Return value of _CANreceiveMessage is never used
  9157  001D44  0012               	return	
  9158  001D46                     i1l396:
  9159                           
  9160                           ; BSR set to: 15
  9161                           ;inc\CANlib.h: 586: }
  9162                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
  9163  001D46  AE60               	btfss	3936,7,c	;volatile
  9164  001D48  0012               	return	
  9165                           
  9166                           ; BSR set to: 15
  9167                           ;inc\CANlib.h: 589: {
  9168                           ;inc\CANlib.h: 590: msg->identifier = 0;
  9169  001D4A  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9170  001D4E  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9171  001D52  6ADE               	clrf	postinc2,c
  9172  001D54  6ADE               	clrf	postinc2,c
  9173  001D56  6ADE               	clrf	postinc2,c
  9174  001D58  6ADD               	clrf	postdec2,c
  9175                           
  9176                           ; BSR set to: 15
  9177                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
  9178  001D5A  EE20 F004          	lfsr	2,4
  9179  001D5E  5023               	movf	CANreceiveMessage@msg,w,c
  9180  001D60  26D9               	addwf	fsr2l,f,c
  9181  001D62  5024               	movf	CANreceiveMessage@msg+1,w,c
  9182  001D64  22DA               	addwfc	fsr2h,f,c
  9183  001D66  CF66 FFDF          	movff	3942,indf2	;volatile
  9184                           
  9185                           ; BSR set to: 15
  9186                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
  9187  001D6A  EE20 F005          	lfsr	2,5
  9188  001D6E  5023               	movf	CANreceiveMessage@msg,w,c
  9189  001D70  26D9               	addwf	fsr2l,f,c
  9190  001D72  5024               	movf	CANreceiveMessage@msg+1,w,c
  9191  001D74  22DA               	addwfc	fsr2h,f,c
  9192  001D76  CF67 FFDF          	movff	3943,indf2	;volatile
  9193                           
  9194                           ; BSR set to: 15
  9195                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
  9196  001D7A  EE20 F006          	lfsr	2,6
  9197  001D7E  5023               	movf	CANreceiveMessage@msg,w,c
  9198  001D80  26D9               	addwf	fsr2l,f,c
  9199  001D82  5024               	movf	CANreceiveMessage@msg+1,w,c
  9200  001D84  22DA               	addwfc	fsr2h,f,c
  9201  001D86  CF68 FFDF          	movff	3944,indf2	;volatile
  9202                           
  9203                           ; BSR set to: 15
  9204                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
  9205  001D8A  EE20 F007          	lfsr	2,7
  9206  001D8E  5023               	movf	CANreceiveMessage@msg,w,c
  9207  001D90  26D9               	addwf	fsr2l,f,c
  9208  001D92  5024               	movf	CANreceiveMessage@msg+1,w,c
  9209  001D94  22DA               	addwfc	fsr2h,f,c
  9210  001D96  CF69 FFDF          	movff	3945,indf2	;volatile
  9211                           
  9212                           ; BSR set to: 15
  9213                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
  9214  001D9A  EE20 F008          	lfsr	2,8
  9215  001D9E  5023               	movf	CANreceiveMessage@msg,w,c
  9216  001DA0  26D9               	addwf	fsr2l,f,c
  9217  001DA2  5024               	movf	CANreceiveMessage@msg+1,w,c
  9218  001DA4  22DA               	addwfc	fsr2h,f,c
  9219  001DA6  CF6A FFDF          	movff	3946,indf2	;volatile
  9220                           
  9221                           ; BSR set to: 15
  9222                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
  9223  001DAA  EE20 F009          	lfsr	2,9
  9224  001DAE  5023               	movf	CANreceiveMessage@msg,w,c
  9225  001DB0  26D9               	addwf	fsr2l,f,c
  9226  001DB2  5024               	movf	CANreceiveMessage@msg+1,w,c
  9227  001DB4  22DA               	addwfc	fsr2h,f,c
  9228  001DB6  CF6B FFDF          	movff	3947,indf2	;volatile
  9229                           
  9230                           ; BSR set to: 15
  9231                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
  9232  001DBA  EE20 F00A          	lfsr	2,10
  9233  001DBE  5023               	movf	CANreceiveMessage@msg,w,c
  9234  001DC0  26D9               	addwf	fsr2l,f,c
  9235  001DC2  5024               	movf	CANreceiveMessage@msg+1,w,c
  9236  001DC4  22DA               	addwfc	fsr2h,f,c
  9237  001DC6  CF6C FFDF          	movff	3948,indf2	;volatile
  9238                           
  9239                           ; BSR set to: 15
  9240                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
  9241  001DCA  EE20 F00B          	lfsr	2,11
  9242  001DCE  5023               	movf	CANreceiveMessage@msg,w,c
  9243  001DD0  26D9               	addwf	fsr2l,f,c
  9244  001DD2  5024               	movf	CANreceiveMessage@msg+1,w,c
  9245  001DD4  22DA               	addwfc	fsr2h,f,c
  9246  001DD6  CF6D FFDF          	movff	3949,indf2	;volatile
  9247                           
  9248                           ; BSR set to: 15
  9249                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
  9250  001DDA  EE20 F00E          	lfsr	2,14
  9251  001DDE  5023               	movf	CANreceiveMessage@msg,w,c
  9252  001DE0  26D9               	addwf	fsr2l,f,c
  9253  001DE2  5024               	movf	CANreceiveMessage@msg+1,w,c
  9254  001DE4  22DA               	addwfc	fsr2h,f,c
  9255  001DE6  AC65               	btfss	3941,6,c	;volatile
  9256  001DE8  D002               	goto	i1u406_20
  9257  001DEA  0E01               	movlw	1
  9258  001DEC  D001               	goto	i1u406_26
  9259  001DEE                     i1u406_20:
  9260  001DEE  0E00               	movlw	0
  9261  001DF0                     i1u406_26:
  9262  001DF0  6EDF               	movwf	indf2,c
  9263                           
  9264                           ; BSR set to: 15
  9265                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
  9266  001DF2  EE20 F00D          	lfsr	2,13
  9267  001DF6  5023               	movf	CANreceiveMessage@msg,w,c
  9268  001DF8  26D9               	addwf	fsr2l,f,c
  9269  001DFA  5024               	movf	CANreceiveMessage@msg+1,w,c
  9270  001DFC  22DA               	addwfc	fsr2h,f,c
  9271  001DFE  5065               	movf	3941,w,c	;volatile
  9272  001E00  0B0F               	andlw	15
  9273  001E02  6EDF               	movwf	indf2,c
  9274                           
  9275                           ; BSR set to: 15
  9276                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
  9277  001E04  EE20 F00C          	lfsr	2,12
  9278  001E08  5023               	movf	CANreceiveMessage@msg,w,c
  9279  001E0A  26D9               	addwf	fsr2l,f,c
  9280  001E0C  5024               	movf	CANreceiveMessage@msg+1,w,c
  9281  001E0E  22DA               	addwfc	fsr2h,f,c
  9282  001E10  A662               	btfss	3938,3,c	;volatile
  9283  001E12  D002               	goto	i1u407_20
  9284  001E14  0E01               	movlw	1
  9285  001E16  D001               	goto	i1u407_26
  9286  001E18                     i1u407_20:
  9287  001E18  0E00               	movlw	0
  9288  001E1A                     i1u407_26:
  9289  001E1A  6EDF               	movwf	indf2,c
  9290                           
  9291                           ; BSR set to: 15
  9292                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
  9293  001E1C  B662               	btfsc	3938,3,c	;volatile
  9294  001E1E  D043               	goto	i1l3586
  9295                           
  9296                           ; BSR set to: 15
  9297                           ;inc\CANlib.h: 607: {
  9298                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  9299  001E20  CF61 F025          	movff	3937,??_CANreceiveMessage	;volatile
  9300  001E24  6A26               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9301  001E26  6A27               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9302  001E28  6A28               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9303  001E2A  0E03               	movlw	3
  9304  001E2C                     i1u409_25:
  9305  001E2C  90D8               	bcf	status,0,c
  9306  001E2E  3625               	rlcf	??_CANreceiveMessage,f,c
  9307  001E30  3626               	rlcf	??_CANreceiveMessage+1,f,c
  9308  001E32  3627               	rlcf	??_CANreceiveMessage+2,f,c
  9309  001E34  3628               	rlcf	??_CANreceiveMessage+3,f,c
  9310  001E36  2EE8               	decfsz	wreg,f,c
  9311  001E38  D7F9               	goto	i1u409_25
  9312  001E3A  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9313  001E3E  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9314  001E42  C025  FFDE         	movff	??_CANreceiveMessage,postinc2
  9315  001E46  C026  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9316  001E4A  C027  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9317  001E4E  C028  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9318                           
  9319                           ; BSR set to: 15
  9320                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
  9321  001E52  3862               	swapf	3938,w,c	;volatile
  9322  001E54  42E8               	rrncf	wreg,f,c
  9323  001E56  0B07               	andlw	7
  9324  001E58  0B07               	andlw	7
  9325  001E5A  6E2E               	movwf	CANreceiveMessage@tamp,c
  9326                           
  9327                           ; BSR set to: 15
  9328                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
  9329  001E5C  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9330  001E60  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9331  001E64  CFDE F025          	movff	postinc2,??_CANreceiveMessage
  9332  001E68  CFDE F026          	movff	postinc2,??_CANreceiveMessage+1
  9333  001E6C  CFDE F027          	movff	postinc2,??_CANreceiveMessage+2
  9334  001E70  CFDE F028          	movff	postinc2,??_CANreceiveMessage+3
  9335  001E74  502E               	movf	CANreceiveMessage@tamp,w,c
  9336  001E76  2425               	addwf	??_CANreceiveMessage,w,c
  9337  001E78  6E29               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  9338  001E7A  0E00               	movlw	0
  9339  001E7C  2026               	addwfc	??_CANreceiveMessage+1,w,c
  9340  001E7E  6E2A               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  9341  001E80  0E00               	movlw	0
  9342  001E82  2027               	addwfc	??_CANreceiveMessage+2,w,c
  9343  001E84  6E2B               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  9344  001E86  0E00               	movlw	0
  9345  001E88  2028               	addwfc	??_CANreceiveMessage+3,w,c
  9346  001E8A  6E2C               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  9347  001E8C  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9348  001E90  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9349  001E94  C029  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  9350  001E98  C02A  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  9351  001E9C  C02B  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  9352  001EA0  C02C  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  9353                           
  9354                           ;inc\CANlib.h: 611: }
  9355  001EA4  D088               	goto	i1l3612
  9356  001EA6                     i1l3586:
  9357                           
  9358                           ; BSR set to: 15
  9359                           ;inc\CANlib.h: 612: else
  9360                           ;inc\CANlib.h: 613: {
  9361                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
  9362  001EA6  CF64 F025          	movff	3940,??_CANreceiveMessage	;volatile
  9363  001EAA  6A26               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9364  001EAC  6A27               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9365  001EAE  6A28               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9366  001EB0  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9367  001EB4  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9368  001EB8  C025  FFDE         	movff	??_CANreceiveMessage,postinc2
  9369  001EBC  C026  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9370  001EC0  C027  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9371  001EC4  C028  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9372                           
  9373                           ; BSR set to: 15
  9374                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  9375  001EC8  CF63 F025          	movff	3939,??_CANreceiveMessage	;volatile
  9376  001ECC  6A26               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9377  001ECE  6A27               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9378  001ED0  6A28               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9379  001ED2  C027  F028         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  9380  001ED6  C026  F027         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  9381  001EDA  C025  F026         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  9382  001EDE  6A25               	clrf	??_CANreceiveMessage,c
  9383  001EE0  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9384  001EE4  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9385  001EE8  5025               	movf	??_CANreceiveMessage,w,c
  9386  001EEA  26DE               	addwf	postinc2,f,c
  9387  001EEC  5026               	movf	??_CANreceiveMessage+1,w,c
  9388  001EEE  22DE               	addwfc	postinc2,f,c
  9389  001EF0  5027               	movf	??_CANreceiveMessage+2,w,c
  9390  001EF2  22DE               	addwfc	postinc2,f,c
  9391  001EF4  5028               	movf	??_CANreceiveMessage+3,w,c
  9392  001EF6  22DE               	addwfc	postinc2,f,c
  9393                           
  9394                           ; BSR set to: 15
  9395                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
  9396  001EF8  A062               	btfss	3938,0,c	;volatile
  9397  001EFA  D00C               	goto	i1l3594
  9398                           
  9399                           ; BSR set to: 15
  9400                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
  9401  001EFC  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9402  001F00  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9403  001F04  0E00               	movlw	0
  9404  001F06  12DE               	iorwf	postinc2,f,c
  9405  001F08  0E00               	movlw	0
  9406  001F0A  12DE               	iorwf	postinc2,f,c
  9407  001F0C  0E01               	movlw	1
  9408  001F0E  12DE               	iorwf	postinc2,f,c
  9409  001F10  0E00               	movlw	0
  9410  001F12  12DE               	iorwf	postinc2,f,c
  9411  001F14                     i1l3594:
  9412                           
  9413                           ; BSR set to: 15
  9414                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
  9415  001F14  A262               	btfss	3938,1,c	;volatile
  9416  001F16  D00C               	goto	i1l3598
  9417                           
  9418                           ; BSR set to: 15
  9419                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
  9420  001F18  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9421  001F1C  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9422  001F20  0E00               	movlw	0
  9423  001F22  12DE               	iorwf	postinc2,f,c
  9424  001F24  0E00               	movlw	0
  9425  001F26  12DE               	iorwf	postinc2,f,c
  9426  001F28  0E02               	movlw	2
  9427  001F2A  12DE               	iorwf	postinc2,f,c
  9428  001F2C  0E00               	movlw	0
  9429  001F2E  12DE               	iorwf	postinc2,f,c
  9430  001F30                     i1l3598:
  9431                           
  9432                           ; BSR set to: 15
  9433                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
  9434  001F30  AA62               	btfss	3938,5,c	;volatile
  9435  001F32  D00C               	goto	i1l3602
  9436                           
  9437                           ; BSR set to: 15
  9438                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
  9439  001F34  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9440  001F38  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9441  001F3C  0E00               	movlw	0
  9442  001F3E  12DE               	iorwf	postinc2,f,c
  9443  001F40  0E00               	movlw	0
  9444  001F42  12DE               	iorwf	postinc2,f,c
  9445  001F44  0E04               	movlw	4
  9446  001F46  12DE               	iorwf	postinc2,f,c
  9447  001F48  0E00               	movlw	0
  9448  001F4A  12DE               	iorwf	postinc2,f,c
  9449  001F4C                     i1l3602:
  9450                           
  9451                           ; BSR set to: 15
  9452                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
  9453  001F4C  AC62               	btfss	3938,6,c	;volatile
  9454  001F4E  D00C               	goto	i1l3606
  9455                           
  9456                           ; BSR set to: 15
  9457                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
  9458  001F50  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9459  001F54  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9460  001F58  0E00               	movlw	0
  9461  001F5A  12DE               	iorwf	postinc2,f,c
  9462  001F5C  0E00               	movlw	0
  9463  001F5E  12DE               	iorwf	postinc2,f,c
  9464  001F60  0E08               	movlw	8
  9465  001F62  12DE               	iorwf	postinc2,f,c
  9466  001F64  0E00               	movlw	0
  9467  001F66  12DE               	iorwf	postinc2,f,c
  9468  001F68                     i1l3606:
  9469                           
  9470                           ; BSR set to: 15
  9471                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
  9472  001F68  AE62               	btfss	3938,7,c	;volatile
  9473  001F6A  D00C               	goto	i1l3610
  9474                           
  9475                           ; BSR set to: 15
  9476                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
  9477  001F6C  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9478  001F70  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9479  001F74  0E00               	movlw	0
  9480  001F76  12DE               	iorwf	postinc2,f,c
  9481  001F78  0E00               	movlw	0
  9482  001F7A  12DE               	iorwf	postinc2,f,c
  9483  001F7C  0E10               	movlw	16
  9484  001F7E  12DE               	iorwf	postinc2,f,c
  9485  001F80  0E00               	movlw	0
  9486  001F82  12DE               	iorwf	postinc2,f,c
  9487  001F84                     i1l3610:
  9488                           
  9489                           ; BSR set to: 15
  9490                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  9491  001F84  CF61 F025          	movff	3937,??_CANreceiveMessage	;volatile
  9492  001F88  6A26               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9493  001F8A  6A27               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9494  001F8C  6A28               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9495  001F8E  0E15               	movlw	21
  9496  001F90                     i1u415_25:
  9497  001F90  90D8               	bcf	status,0,c
  9498  001F92  3625               	rlcf	??_CANreceiveMessage,f,c
  9499  001F94  3626               	rlcf	??_CANreceiveMessage+1,f,c
  9500  001F96  3627               	rlcf	??_CANreceiveMessage+2,f,c
  9501  001F98  3628               	rlcf	??_CANreceiveMessage+3,f,c
  9502  001F9A  2EE8               	decfsz	wreg,f,c
  9503  001F9C  D7F9               	goto	i1u415_25
  9504  001F9E  C023  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9505  001FA2  C024  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9506  001FA6  5025               	movf	??_CANreceiveMessage,w,c
  9507  001FA8  12DE               	iorwf	postinc2,f,c
  9508  001FAA  5026               	movf	??_CANreceiveMessage+1,w,c
  9509  001FAC  12DE               	iorwf	postinc2,f,c
  9510  001FAE  5027               	movf	??_CANreceiveMessage+2,w,c
  9511  001FB0  12DE               	iorwf	postinc2,f,c
  9512  001FB2  5028               	movf	??_CANreceiveMessage+3,w,c
  9513  001FB4  12DE               	iorwf	postinc2,f,c
  9514  001FB6                     i1l3612:
  9515                           
  9516                           ; BSR set to: 15
  9517                           ;inc\CANlib.h: 630: }
  9518                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
  9519  001FB6  9E60               	bcf	3936,7,c	;volatile
  9520                           
  9521                           ; BSR set to: 15
  9522                           ;inc\CANlib.h: 633: return (error);
  9523                           ;	Return value of _CANreceiveMessage is never used
  9524  001FB8  0012               	return	
  9525  001FBA                     __end_of_CANreceiveMessage:
  9526                           	opt stack 0
  9527                           pclatu	equ	0xFFB
  9528                           pclath	equ	0xFFA
  9529                           tblptru	equ	0xFF8
  9530                           tblptrh	equ	0xFF7
  9531                           tblptrl	equ	0xFF6
  9532                           tablat	equ	0xFF5
  9533                           prodh	equ	0xFF4
  9534                           prodl	equ	0xFF3
  9535                           intcon	equ	0xFF2
  9536                           intcon2	equ	0xFF1
  9537                           postinc0	equ	0xFEE
  9538                           fsr0h	equ	0xFEA
  9539                           fsr0l	equ	0xFE9
  9540                           wreg	equ	0xFE8
  9541                           postdec1	equ	0xFE5
  9542                           fsr1h	equ	0xFE2
  9543                           fsr1l	equ	0xFE1
  9544                           bsr	equ	0xFE0
  9545                           indf2	equ	0xFDF
  9546                           postinc2	equ	0xFDE
  9547                           postdec2	equ	0xFDD
  9548                           fsr2h	equ	0xFDA
  9549                           fsr2l	equ	0xFD9
  9550                           status	equ	0xFD8
  9551                           
  9552 ;; *************** function _CANisRxReady *****************
  9553 ;; Defined at:
  9554 ;;		line 1164 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;		None
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      unsigned char 
  9561 ;; Registers used:
  9562 ;;		wreg, status,2
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9568 ;;      Params:         0       0       0       0
  9569 ;;      Locals:         1       0       0       0
  9570 ;;      Temps:          0       0       0       0
  9571 ;;      Totals:         1       0       0       0
  9572 ;;Total ram usage:        1 bytes
  9573 ;; Hardware stack levels used:    1
  9574 ;; Hardware stack levels required when called:    2
  9575 ;; This function calls:
  9576 ;;		Nothing
  9577 ;; This function is called by:
  9578 ;;		_ISR_bassa
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           
  9582                           	psect	text26
  9583  002BCE                     __ptext26:
  9584                           	opt stack 0
  9585  002BCE                     _CANisRxReady:
  9586                           	opt stack 24
  9587                           
  9588                           ;inc\CANlib.h: 1166: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  9589                           
  9590                           ; BSR set to: 15
  9591                           ;incstack = 0
  9592  002BCE  0E01               	movlw	1
  9593  002BD0  6E23               	movwf	_CANisRxReady$2825,c
  9594  002BD2  BE60               	btfsc	3936,7,c	;volatile
  9595  002BD4  D005               	goto	i1l547
  9596  002BD6  010F               	movlb	15	; () banked
  9597  002BD8  BF50               	btfsc	80,7,b	;volatile
  9598  002BDA  D002               	goto	i1l547
  9599                           
  9600                           ; BSR set to: 15
  9601  002BDC  0E00               	movlw	0
  9602  002BDE  6E23               	movwf	_CANisRxReady$2825,c
  9603  002BE0                     i1l547:
  9604  002BE0  5023               	movf	_CANisRxReady$2825,w,c
  9605  002BE2  0012               	return	
  9606  002BE4                     __end_of_CANisRxReady:
  9607                           	opt stack 0
  9608                           pclatu	equ	0xFFB
  9609                           pclath	equ	0xFFA
  9610                           tblptru	equ	0xFF8
  9611                           tblptrh	equ	0xFF7
  9612                           tblptrl	equ	0xFF6
  9613                           tablat	equ	0xFF5
  9614                           prodh	equ	0xFF4
  9615                           prodl	equ	0xFF3
  9616                           intcon	equ	0xFF2
  9617                           intcon2	equ	0xFF1
  9618                           postinc0	equ	0xFEE
  9619                           fsr0h	equ	0xFEA
  9620                           fsr0l	equ	0xFE9
  9621                           wreg	equ	0xFE8
  9622                           postdec1	equ	0xFE5
  9623                           fsr1h	equ	0xFE2
  9624                           fsr1l	equ	0xFE1
  9625                           bsr	equ	0xFE0
  9626                           indf2	equ	0xFDF
  9627                           postinc2	equ	0xFDE
  9628                           postdec2	equ	0xFDD
  9629                           fsr2h	equ	0xFDA
  9630                           fsr2l	equ	0xFD9
  9631                           status	equ	0xFD8
  9632                           
  9633 ;; *************** function _ISR_alta *****************
  9634 ;; Defined at:
  9635 ;;		line 65 in file "newmain.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;		None
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;		None
  9640 ;; Return value:  Size  Location     Type
  9641 ;;		None               void
  9642 ;; Registers used:
  9643 ;;		wreg, status,2, status,0, cstack
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9649 ;;      Params:         0       0       0       0
  9650 ;;      Locals:         0       0       0       0
  9651 ;;      Temps:          0      15       0       0
  9652 ;;      Totals:         0      15       0       0
  9653 ;;Total ram usage:       15 bytes
  9654 ;; Hardware stack levels used:    1
  9655 ;; Hardware stack levels required when called:    1
  9656 ;; This function calls:
  9657 ;;		_WriteTimer0
  9658 ;; This function is called by:
  9659 ;;		Interrupt level 2
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           
  9663                           	psect	intcode
  9664  000008                     __pintcode:
  9665                           	opt stack 0
  9666  000008                     _ISR_alta:
  9667                           	opt stack 24
  9668                           
  9669                           ;incstack = 0
  9670  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9671  00000A  CFFA F065          	movff	pclath,??_ISR_alta+1
  9672  00000E  CFFB F066          	movff	pclatu,??_ISR_alta+2
  9673  000012  ED97  F013         	call	int_func,f	;refresh shadow registers
  9674                           pclatu	equ	0xFFB
  9675                           pclath	equ	0xFFA
  9676                           tblptru	equ	0xFF8
  9677                           tblptrh	equ	0xFF7
  9678                           tblptrl	equ	0xFF6
  9679                           tablat	equ	0xFF5
  9680                           prodh	equ	0xFF4
  9681                           prodl	equ	0xFF3
  9682                           intcon	equ	0xFF2
  9683                           intcon2	equ	0xFF1
  9684                           postinc0	equ	0xFEE
  9685                           fsr0h	equ	0xFEA
  9686                           fsr0l	equ	0xFE9
  9687                           wreg	equ	0xFE8
  9688                           postdec1	equ	0xFE5
  9689                           fsr1h	equ	0xFE2
  9690                           fsr1l	equ	0xFE1
  9691                           bsr	equ	0xFE0
  9692                           indf2	equ	0xFDF
  9693                           postinc2	equ	0xFDE
  9694                           postdec2	equ	0xFDD
  9695                           fsr2h	equ	0xFDA
  9696                           fsr2l	equ	0xFD9
  9697                           status	equ	0xFD8
  9698                           
  9699                           	psect	intcode_body
  9700  00272E                     __pintcode_body:
  9701                           	opt stack 24
  9702  00272E                     int_func:
  9703                           	opt stack 24
  9704  00272E  0006               	pop		; remove dummy address from shadow register refresh
  9705  002730  CFE9 F067          	movff	fsr0l,??_ISR_alta+3
  9706  002734  CFEA F068          	movff	fsr0h,??_ISR_alta+4
  9707  002738  CFE1 F069          	movff	fsr1l,??_ISR_alta+5
  9708  00273C  CFE2 F06A          	movff	fsr1h,??_ISR_alta+6
  9709  002740  CFD9 F06B          	movff	fsr2l,??_ISR_alta+7
  9710  002744  CFDA F06C          	movff	fsr2h,??_ISR_alta+8
  9711  002748  CFF3 F06D          	movff	prodl,??_ISR_alta+9
  9712  00274C  CFF4 F06E          	movff	prodh,??_ISR_alta+10
  9713  002750  CFF6 F06F          	movff	tblptrl,??_ISR_alta+11
  9714  002754  CFF7 F070          	movff	tblptrh,??_ISR_alta+12
  9715  002758  CFF8 F071          	movff	tblptru,??_ISR_alta+13
  9716  00275C  CFF5 F072          	movff	tablat,??_ISR_alta+14
  9717                           
  9718                           ;newmain.c: 66: if (noChange == 1) {
  9719  002760  A04B               	btfss	_noChange/(0+8),_noChange& (0+7),c
  9720  002762  D021               	goto	i2l4140
  9721                           
  9722                           ;newmain.c: 67: PORTCbits.RC0 = ~PORTCbits.RC0;
  9723  002764  A082               	btfss	3970,0,c	;volatile
  9724  002766  D002               	goto	i2u488_40
  9725  002768  0E01               	movlw	1
  9726  00276A  D001               	goto	i2u488_46
  9727  00276C                     i2u488_40:
  9728  00276C  0E00               	movlw	0
  9729  00276E                     i2u488_46:
  9730  00276E  0AFF               	xorlw	255
  9731  002770  0100               	movlb	0	; () banked
  9732  002772  6F64               	movwf	??_ISR_alta& (0+255),b
  9733  002774  5082               	movf	3970,w,c	;volatile
  9734  002776  0100               	movlb	0	; () banked
  9735  002778  1964               	xorwf	??_ISR_alta& (0+255),w,b
  9736  00277A  0BFE               	andlw	-2
  9737  00277C  1964               	xorwf	??_ISR_alta& (0+255),w,b
  9738  00277E  6E82               	movwf	3970,c	;volatile
  9739                           
  9740                           ; BSR set to: 0
  9741                           ;newmain.c: 68: T0CONbits.TMR0ON = 0;
  9742  002780  9ED5               	bcf	4053,7,c	;volatile
  9743                           
  9744                           ; BSR set to: 0
  9745                           ;newmain.c: 69: if (PORTCbits.RC0 == 1) {
  9746  002782  A082               	btfss	3970,0,c	;volatile
  9747  002784  D007               	goto	i2l4134
  9748                           
  9749                           ; BSR set to: 0
  9750                           ;newmain.c: 70: WriteTimer0(Ton);
  9751  002786  C00B  F060         	movff	_Ton,WriteTimer0@timer0
  9752  00278A  C00C  F061         	movff	_Ton+1,WriteTimer0@timer0+1
  9753  00278E  ECFB  F015         	call	_WriteTimer0	;wreg free
  9754                           
  9755                           ;newmain.c: 71: T0CONbits.TMR0ON = 1;
  9756  002792  8ED5               	bsf	4053,7,c	;volatile
  9757  002794                     i2l4134:
  9758                           
  9759                           ;newmain.c: 72: }
  9760                           ;newmain.c: 73: if (PORTCbits.RC0 == 0) {
  9761  002794  B082               	btfsc	3970,0,c	;volatile
  9762  002796  D007               	goto	i2l4140
  9763                           
  9764                           ;newmain.c: 74: WriteTimer0(Toff);
  9765  002798  C009  F060         	movff	_Toff,WriteTimer0@timer0
  9766  00279C  C00A  F061         	movff	_Toff+1,WriteTimer0@timer0+1
  9767  0027A0  ECFB  F015         	call	_WriteTimer0	;wreg free
  9768                           
  9769                           ;newmain.c: 75: T0CONbits.TMR0ON = 1;
  9770  0027A4  8ED5               	bsf	4053,7,c	;volatile
  9771  0027A6                     i2l4140:
  9772                           
  9773                           ;newmain.c: 76: }
  9774                           ;newmain.c: 77: }
  9775                           ;newmain.c: 78: INTCONbits.TMR0IF = 0;
  9776  0027A6  94F2               	bcf	intcon,2,c	;volatile
  9777  0027A8  C072  FFF5         	movff	??_ISR_alta+14,tablat
  9778  0027AC  C071  FFF8         	movff	??_ISR_alta+13,tblptru
  9779  0027B0  C070  FFF7         	movff	??_ISR_alta+12,tblptrh
  9780  0027B4  C06F  FFF6         	movff	??_ISR_alta+11,tblptrl
  9781  0027B8  C06E  FFF4         	movff	??_ISR_alta+10,prodh
  9782  0027BC  C06D  FFF3         	movff	??_ISR_alta+9,prodl
  9783  0027C0  C06C  FFDA         	movff	??_ISR_alta+8,fsr2h
  9784  0027C4  C06B  FFD9         	movff	??_ISR_alta+7,fsr2l
  9785  0027C8  C06A  FFE2         	movff	??_ISR_alta+6,fsr1h
  9786  0027CC  C069  FFE1         	movff	??_ISR_alta+5,fsr1l
  9787  0027D0  C068  FFEA         	movff	??_ISR_alta+4,fsr0h
  9788  0027D4  C067  FFE9         	movff	??_ISR_alta+3,fsr0l
  9789  0027D8  C066  FFFB         	movff	??_ISR_alta+2,pclatu
  9790  0027DC  C065  FFFA         	movff	??_ISR_alta+1,pclath
  9791  0027E0  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9792  0027E2  0011               	retfie		f
  9793  0027E4                     __end_of_ISR_alta:
  9794                           	opt stack 0
  9795                           pclatu	equ	0xFFB
  9796                           pclath	equ	0xFFA
  9797                           tblptru	equ	0xFF8
  9798                           tblptrh	equ	0xFF7
  9799                           tblptrl	equ	0xFF6
  9800                           tablat	equ	0xFF5
  9801                           prodh	equ	0xFF4
  9802                           prodl	equ	0xFF3
  9803                           intcon	equ	0xFF2
  9804                           intcon2	equ	0xFF1
  9805                           postinc0	equ	0xFEE
  9806                           fsr0h	equ	0xFEA
  9807                           fsr0l	equ	0xFE9
  9808                           wreg	equ	0xFE8
  9809                           postdec1	equ	0xFE5
  9810                           fsr1h	equ	0xFE2
  9811                           fsr1l	equ	0xFE1
  9812                           bsr	equ	0xFE0
  9813                           indf2	equ	0xFDF
  9814                           postinc2	equ	0xFDE
  9815                           postdec2	equ	0xFDD
  9816                           fsr2h	equ	0xFDA
  9817                           fsr2l	equ	0xFD9
  9818                           status	equ	0xFD8
  9819                           
  9820 ;; *************** function _WriteTimer0 *****************
  9821 ;; Defined at:
  9822 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  9823 ;; Parameters:    Size  Location     Type
  9824 ;;  timer0          2    0[BANK0 ] unsigned int 
  9825 ;; Auto vars:     Size  Location     Type
  9826 ;;  timer           2    2[BANK0 ] struct Timers
  9827 ;; Return value:  Size  Location     Type
  9828 ;;		None               void
  9829 ;; Registers used:
  9830 ;;		None
  9831 ;; Tracked objects:
  9832 ;;		On entry : 0/0
  9833 ;;		On exit  : 0/0
  9834 ;;		Unchanged: 0/0
  9835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9836 ;;      Params:         0       2       0       0
  9837 ;;      Locals:         0       2       0       0
  9838 ;;      Temps:          0       0       0       0
  9839 ;;      Totals:         0       4       0       0
  9840 ;;Total ram usage:        4 bytes
  9841 ;; Hardware stack levels used:    1
  9842 ;; This function calls:
  9843 ;;		Nothing
  9844 ;; This function is called by:
  9845 ;;		_ISR_alta
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849                           	psect	text28
  9850  002BF6                     __ptext28:
  9851                           	opt stack 0
  9852  002BF6                     _WriteTimer0:
  9853                           	opt stack 24
  9854                           
  9855                           ;incstack = 0
  9856  002BF6  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9857  002BFA  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9858  002BFE  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9859  002C02  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9860  002C06  0012               	return		;funcret
  9861  002C08                     __end_of_WriteTimer0:
  9862                           	opt stack 0
  9863  0000                     pclatu	equ	0xFFB
  9864                           pclath	equ	0xFFA
  9865                           tblptru	equ	0xFF8
  9866                           tblptrh	equ	0xFF7
  9867                           tblptrl	equ	0xFF6
  9868                           tablat	equ	0xFF5
  9869                           prodh	equ	0xFF4
  9870                           prodl	equ	0xFF3
  9871                           intcon	equ	0xFF2
  9872                           intcon2	equ	0xFF1
  9873                           postinc0	equ	0xFEE
  9874                           fsr0h	equ	0xFEA
  9875                           fsr0l	equ	0xFE9
  9876                           wreg	equ	0xFE8
  9877                           postdec1	equ	0xFE5
  9878                           fsr1h	equ	0xFE2
  9879                           fsr1l	equ	0xFE1
  9880                           bsr	equ	0xFE0
  9881                           indf2	equ	0xFDF
  9882                           postinc2	equ	0xFDE
  9883                           postdec2	equ	0xFDD
  9884                           fsr2h	equ	0xFDA
  9885                           fsr2l	equ	0xFD9
  9886                           status	equ	0xFD8
  9887                           pclatu	equ	0xFFB
  9888                           pclath	equ	0xFFA
  9889                           tblptru	equ	0xFF8
  9890                           tblptrh	equ	0xFF7
  9891                           tblptrl	equ	0xFF6
  9892                           tablat	equ	0xFF5
  9893                           prodh	equ	0xFF4
  9894                           prodl	equ	0xFF3
  9895                           intcon	equ	0xFF2
  9896                           intcon2	equ	0xFF1
  9897                           postinc0	equ	0xFEE
  9898                           fsr0h	equ	0xFEA
  9899                           fsr0l	equ	0xFE9
  9900                           wreg	equ	0xFE8
  9901                           postdec1	equ	0xFE5
  9902                           fsr1h	equ	0xFE2
  9903                           fsr1l	equ	0xFE1
  9904                           bsr	equ	0xFE0
  9905                           indf2	equ	0xFDF
  9906                           postinc2	equ	0xFDE
  9907                           postdec2	equ	0xFDD
  9908                           fsr2h	equ	0xFDA
  9909                           fsr2l	equ	0xFD9
  9910                           status	equ	0xFD8
  9911                           
  9912                           	psect	param0
  9913  0000                     pclatu	equ	0xFFB
  9914                           pclath	equ	0xFFA
  9915                           tblptru	equ	0xFF8
  9916                           tblptrh	equ	0xFF7
  9917                           tblptrl	equ	0xFF6
  9918                           tablat	equ	0xFF5
  9919                           prodh	equ	0xFF4
  9920                           prodl	equ	0xFF3
  9921                           intcon	equ	0xFF2
  9922                           intcon2	equ	0xFF1
  9923                           postinc0	equ	0xFEE
  9924                           fsr0h	equ	0xFEA
  9925                           fsr0l	equ	0xFE9
  9926                           wreg	equ	0xFE8
  9927                           postdec1	equ	0xFE5
  9928                           fsr1h	equ	0xFE2
  9929                           fsr1l	equ	0xFE1
  9930                           bsr	equ	0xFE0
  9931                           indf2	equ	0xFDF
  9932                           postinc2	equ	0xFDE
  9933                           postdec2	equ	0xFDD
  9934                           fsr2h	equ	0xFDA
  9935                           fsr2l	equ	0xFD9
  9936                           status	equ	0xFD8
  9937                           
  9938                           	psect	temp
  9939  00004C                     btemp:
  9940                           	opt stack 0
  9941  00004C                     	ds	1
  9942  0000                     int$flags	set	btemp
  9943                           pclatu	equ	0xFFB
  9944                           pclath	equ	0xFFA
  9945                           tblptru	equ	0xFF8
  9946                           tblptrh	equ	0xFF7
  9947                           tblptrl	equ	0xFF6
  9948                           tablat	equ	0xFF5
  9949                           prodh	equ	0xFF4
  9950                           prodl	equ	0xFF3
  9951                           intcon	equ	0xFF2
  9952                           intcon2	equ	0xFF1
  9953                           postinc0	equ	0xFEE
  9954                           fsr0h	equ	0xFEA
  9955                           fsr0l	equ	0xFE9
  9956                           wreg	equ	0xFE8
  9957                           postdec1	equ	0xFE5
  9958                           fsr1h	equ	0xFE2
  9959                           fsr1l	equ	0xFE1
  9960                           bsr	equ	0xFE0
  9961                           indf2	equ	0xFDF
  9962                           postinc2	equ	0xFDE
  9963                           postdec2	equ	0xFDD
  9964                           fsr2h	equ	0xFDA
  9965                           fsr2l	equ	0xFD9
  9966                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      75
    BANK0           160     49      94
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->i1_CANsendMessage
    i1___lwdiv->i1___wmul

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _delay_ms->___wmul
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _calibrazione->___lwdiv
    ___lldiv->___lmul

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->_WriteTimer0

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10408
                                             45 BANK0      4     4      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___lldiv
                             ___lmul
                       _calibrazione
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    2571
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2547
                                             19 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     643
                                             25 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     365
                                             19 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    6216
                      _CANInitialize
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             19 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             33 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibrazione                                         0     0      0     366
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     366
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     322
                                             19 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     290
                                             31 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           18    18      0    3827
                                             16 COMRAM    18    18      0
                       _CANisRxReady
                  _CANreceiveMessage
                   i1_CANsendMessage
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) i1___lwdiv                                            7     3      4     214
                                              6 COMRAM     7     3      4
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) i1_CANsendMessage                                    16     8      8    2243
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            15    15      0     253
                                              4 BANK0     15    15      0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     253
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _calibrazione
     _BusyADC
     _ConvertADC
     _ReadADC
     ___lwdiv
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenADC
   _delay_ms
     ___wmul
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i1_CANsendMessage
   i1___lwdiv
     i1___wmul (ARG)
   i1___wmul

 _ISR_alta (ROOT)
   _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     31      5E       4       58.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     22      4B       1       79.8%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A9       9        0.0%
DATA                 0      0      A9      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Feb 06 20:44:14 2016

              ??_CANisTXwarningON 0073              __end_of_CANSetFilter 0C92  
                              _id 0005                                bsr 000FE0  
             ___wmul@multiplicand 0075                       __CFG_BORV$3 000000  
                i1___wmul@product 0027                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                       __CFG_OSC$HS 000000  
                             l500 0B1E                               l420 21C4  
                             l501 0B2A                               l421 21C8  
                             l510 0C36                               l430 22D0  
                             l422 21D4                               l350 0CA8  
                             l511 0C3A                               l431 22DC  
                             l423 21D8                               l351 0CAC  
                             l512 0C46                               l504 0C06  
                             l432 22E0                               l424 21E4  
                             l344 2414                               l360 0E66  
                             l352 0DA4                               l505 0C0A  
                             l433 22EC                               l425 21E8  
                             l345 241E                               l361 0E72  
                             l353 0D34                               l506 0C16  
                             l450 0680                               l434 22F0  
                             l426 21F4                               l418 21B4  
                             l370 0FCC                               l354 0D3E  
                             l507 0C1A                               l451 068C  
                             l435 22FC                               l419 21B8  
                             l371 0FD6                               l355 0D48  
                             l508 0C26                               l460 0796  
                             l452 0690                               l436 2300  
                             l380 11B4                               l364 119A  
                             l356 0D52                               l509 0C2A  
                             l461 079A                               l453 069C  
                             l437 230C                               l429 22CC  
                             l381 12AC                               l365 0F2C  
                             l349 0F16                               l462 07A6  
                             l454 06A0                               l542 2BB2  
                             l390 137A                               l382 123C  
                             l374 10E6                               l366 0F30  
                             l471 08B2                               l463 07AA  
                             l455 06AC                               l383 1246  
                             l375 10EA                               l367 1028  
                             l359 0E62                               l472 08B6  
                             l464 07B6                               l456 06B0  
                             l384 1250                               l376 10F6  
                             l368 0FB8                               l473 08C2  
                             l465 07BA                               l457 06BC  
                             l449 067C                               l385 125A  
                             l369 0FC2                               l490 0A0E  
                             l482 09CE                               l474 08C6  
                             l466 07C6                               l483 09D2  
                             l475 08D2                               l467 07CA  
                             l555 2B2A                               l379 11B0  
                             l484 09DE                               l476 08D6  
                             l468 07D6                               l388 136A  
                             l493 0AEA                               l485 09E2  
                             l477 08E2                               l389 136E  
                             l494 0AEE                               l486 09EE  
                             l478 08E6                               l495 0AFA  
                             l487 09F2                               l479 08F2  
                             l496 0AFE                               l488 09FE  
                             l497 0B0A                               l489 0A02  
                             l498 0B0E                               l499 0B1A  
                             l677 28DC                      __CFG_CPB$OFF 000000  
                    __CFG_CPD$OFF 000000                               _Ton 000B  
            __size_of_WriteTimer0 0012                               _msg 0014  
                             wreg 000FE8             _currentSteering_array 0099  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            l1042 271C                              l3000 0820  
                            l3102 0B74                              l1095 294E  
                            l3130 0C4A                              l3034 093C  
                            l3028 08F6                              l3220 0D5C  
                            l3062 0A12                              l3240 0E56  
                            l3322 10FA                              l3068 0A58  
                            l3180 242A                              l3316 10DA  
                            l3182 246E                              l3174 240C  
                            l3246 0E76                              l3096 0B2E  
                            l3176 2422                              l3372 1264  
                            l2726 2BC0                              l3710 2AFA  
                            l4078 2546                              l3464 28FE  
                            l2760 2128                              l2744 2072  
                            l3392 135E                              l3296 0FE0  
                            l3730 26B0                              l3714 296A  
                            l3466 290A                              l2914 0530  
                            l2842 024A                              l2818 2310  
                            l3740 270A                              l3732 26B6  
                            l3476 2940                              l3468 2910  
                            l2932 05EA                              l2860 0302  
                            l3636 2B1C                              l3718 2990  
                            l3398 137E                              l3728 26A0  
                            l2960 06C0                              l2792 223E  
                            l2786 21F8                              l2966 0706  
                            l2878 03BC                              l2896 0476  
                            l3698 2A7E                              l2994 07DA  
                            u3000 06E0                              u3005 06D4  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u2510 20A4  
                            u3400 0C6A                              u3320 0B4E  
                            u3240 0A32                              u3160 0916  
                            u3080 07FA                              u2600 2218  
                            u2515 2098                              u3405 0C5E  
                            u3325 0B42                              u3245 0A26  
                            u3165 090A                              u3085 07EE  
                            u2605 220C                              u2525 2104  
                            u2710 01C6                              u2470 1FEE  
                            u4160 2C1C                              u4170 2C28  
                            u3530 0D7C                              u2715 01BA  
                            u2475 1FE2                              u3540 0DC8  
                            u2805 0398                              u2725 0226  
                            u2485 204E                              u2910 0566  
                            u2830 03F2                              u2750 027E  
                            u3535 0D70                              u2680 2330  
                            u3800 12D0                              u3545 0DBC  
                            u2915 055A                              u2835 03E6  
                            u2755 0272                              u3555 0E28  
                            u3660 1000                              u2925 05C6  
                            u2845 0452                              u2765 02DE  
                            u2685 2324                              u3805 12C4  
                            u2870 04AC                              u2790 0338  
                            u3670 104C                              u3815 1330  
                            u3665 0FF4                              u2875 04A0  
                            u2795 032C                              u3675 1040  
                            u2885 050C                              u3685 10AC  
                            u3870 2C10                              u3790 1284  
                            u3795 1278                              u4917 2B1E  
        __end_ofi1_CANsendMessage 1AAE               __size_of_CANSetMask 039E  
                            _Toff 0009                              _main 251E  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 004C  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 0188  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                   __end_of_BusyADC 2C14  
                 __end_of_ReadADC 2BF6                  _CANOperationMode 2BB8  
                 __end_of_OpenADC 28E0        __size_of_CANreceiveMessage 050C  
                           ?_main 0023                   __end_of___lldiv 272E  
                           _T0CON 000FD5                   __end_of___lwdiv 2958  
                           i1l350 1432                             i1l351 1436  
                           i1l360 15AE                             i1l352 1506  
                           i1l361 15B8                             i1l353 14A4  
                           i1l370 16E4                             i1l354 14AC  
                           i1l371 16EC                             i1l355 14B4  
                           i1l380 1896                             i1l364 187E  
                           i1l356 14BC                             i1l381 1966  
                           i1l365 1662                             i1l349 164E  
                           i1l390 1A18                             i1l382 1904  
                           i1l374 17DA                             i1l366 1666  
                           i1l383 190C                             i1l375 17DE  
                           i1l367 1736                             i1l359 15AA  
                           i1l384 1914                             i1l376 17E8  
                           i1l368 16D4                             i1l385 191C  
                           i1l369 16DC                             i1l547 2BE0  
                           i1l379 1892                             i1l396 1D46  
                           i1l388 1A0A                             i1l389 1A0E  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
               _CANisRxReady$2825 0023                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000               ___lmul@multiplicand 0077  
              __size_of_ISR_bassa 0170                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 0085                  __end_of_ISR_alta 27E4  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _timer 00AD                        _ConvertADC 2C32  
                  __pbitbssCOMRAM 0258              __end_of_CANisRxReady 2BE4  
                           tablat 000FF5              __end_of_CANisTxReady 2BB8  
                __end_ofi1___wmul 2B94                             status 000FD8  
             i1___wmul@multiplier 0023                __size_ofi1___lwdiv 0052  
                  __CFG_PBADEN$ON 000000                   __initialization 29CE  
                    __end_of_main 2672                            ??_main 008D  
                   __activetblptr 000002                 _CANisTxReady$2823 0073  
                   _counter_array 0091                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                          _ADRESL 000FC3             __size_of_calibrazione 0046  
                 __CFG_BBSIZ$1024 000000                            i1l1095 2A70  
                          i1l4060 013C                            i1l4046 00D2  
                          i1l3610 1F84                            i1l3602 1F4C  
                          i1l3612 1FB6                            i1l3540 1CD2  
                          i1l3532 1C96                            i1l3524 1C26  
                          i1l3606 1F68                            i1l3550 1D40  
                          i1l3544 1CF0                            i1l3536 1CB4  
                          i1l3802 15BC                            i1l3548 1D0E  
                          i1l3594 1F14                            i1l3586 1EA6  
                          i1l3852 16F4                            i1l3598 1F30  
                          i1l3928 1924                            i1l3872 17D0  
                          i1l3776 14C4                            i1l3954 1A1C  
                          i2l4140 27A6                            i1l3948 1A00  
                          i1l3796 15A0                            i2l4134 2794  
                          i1l3878 17EC                            i1l3990 2A4A  
                          i1l3986 2A3E                            i1l3988 2A46  
                          i1l3998 2A66                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F56                            _RXB0D5 000F6B  
                          _RXB1D1 000F57                            _RXB0D6 000F6C  
                          _RXB1D2 000F58                            _RXB0D7 000F6D  
                          _RXB1D3 000F59                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _TXB1D2 000F38  
                          _TXB0D6 000F4C                            _TXB1D3 000F39  
                          _TXB0D7 000F4D                            _TXB2D0 000F26  
                          _TXB1D4 000F3A                            _TXB2D1 000F27  
                          _TXB1D5 000F3B                            _TXB2D2 000F28  
                          _TXB1D6 000F3C                            _TXB2D3 000F29  
                          _TXB1D7 000F3D                            _TXB2D4 000F2A  
                          _TXB2D5 000F2B                            _TXB2D6 000F2C  
                          _TXB2D7 000F2D                CANsendMessage@data 0077  
              CANsendMessage@tamp 007F                         ??_BusyADC 0073  
                       ??_ReadADC 0075                  __end_of_delay_ms 2B38  
           __size_of_CANSetFilter 0B06                         ??_OpenADC 0075  
                  __CFG_XINST$OFF 000000                 __end_of_ISR_bassa 0188  
                          ___lmul 2958                            ___wmul 2B38  
                  __CFG_STVREN$ON 000000                         ??___lldiv 0087  
                       ??___lwdiv 0077                      ??_CANSetMask 0078  
                          _errore 0011                            clear_0 29D4  
                          clear_1 29E2          ?_configurazione_iniziale 0023  
                 __CFG_BOREN$BOHW 000000                      _calibrazione 2A7A  
               __end_ofi1___lwdiv 2A7A                      __pdataCOMRAM 0045  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                   _currentSteering 0049  
                    _CANSetFilter 018C                       ?_ConvertADC 0023  
                      __accesstop 0060           __end_of__initialization 2A1A  
              __end_of_CANSetMask 2358                     ___rparam_used 000000  
       __size_of_CANisRXwarningON 000C                    __pcstackCOMRAM 0023  
                    __pidataBANK0 2C36                         ?_ISR_alta 0023  
                       ?i1___wmul 0023             CANSetFilter@numBuffer 007C  
       __size_of_CANisTXwarningON 000C             __size_of_CANisRxReady 0016  
           __size_of_CANisTxReady 0024          __end_of_CANOperationMode 2BCE  
                      __pbssBANK0 0091                 ?i1_CANsendMessage 0023  
                      _data_array 00B5           __size_of_CANsendMessage 078C  
              ??i1_CANsendMessage 002B                           ?___lmul 0073  
                         ?___wmul 0073                        ??_ISR_alta 0064  
              __size_of_send_data 003E                  WriteTimer0@timer 0062  
                   ??_WriteTimer0 0062                    ___lmul@product 007B  
                    _CANisRxReady 2BCE               __size_of_ConvertADC 0004  
                         _CANSTAT 000F6E                      _CANisTxReady 2B94  
                         _BRGCON1 000F70                           _BRGCON2 000F71  
                         _BRGCON3 000F72                        ??i1___wmul 0027  
          __size_of_CANInitialize 01C6                         ?_delay_ms 0079  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60                           _RXB1CON 000F50  
                         _TXB0DLC 000F45                           _TXB1DLC 000F35  
                         _TXB2DLC 000F25               CANsendMessage@flags 007A  
                         _BusyADC 2C08                           _ReadADC 2BE4  
                      _correzione 000F                         _ADCResult 00B1  
                         _OpenADC 2864                           __Hparam 0000  
                         __Lparam 0000                  delay_ms@value_ms 0079  
                 __size_of___lmul 0076                           ___lldiv 2672  
                 __size_of___wmul 0036                           ___lwdiv 28E0  
            CANInitialize@propSeg 008A                           __pcinit 29CE  
                         __ramtop 0300                           __ptext0 251E  
                         __ptext1 2AC0                           __ptext2 0C92  
                         __ptext3 2B94                           __ptext4 2AFE  
                         __ptext5 2B38                           __ptext6 27E4  
                         __ptext7 2864                           __ptext8 2358  
                         __ptext9 1FBA                         _T0CONbits 000FD5  
                         _counter 0001                 i1___lwdiv@divisor 002B  
               i1___lwdiv@counter 002F                        _duty_cycle 00A1  
             __end_of_WriteTimer0 2C08                        ??_delay_ms 007B  
          CANreceiveMessage@error 002D                           _potenza 0047  
                  OpenADC@config2 0073                    __pintcode_body 272E  
            end_of_initialization 2A1A                 __end_of_send_data 2AFE  
                   __Lmediumconst 0000                           int_func 272E  
                _CANisRXwarningON 2C20                     _CANInitialize 2358  
                 ___lldiv@divisor 0083                   ___lldiv@counter 008B  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
           i1___wmul@multiplicand 0025                         _ISR_bassa 0018  
                       _PORTAbits 000F80                    CANSetMask@mask 0073  
                       _PORTCbits 000F82                    CANSetMask@tamp 007D  
                  CANSetMask@type 0077                  _CANisTXwarningON 2C14  
                       i1___lwdiv 2A28                      ??_ConvertADC 0073  
__size_of_configurazione_iniziale 0080               _previousTimeCounter 00A5  
         _clock_counter_reference 00B3                    _CANsendMessage 0C92  
                CANInitialize@BRP 0084                  CANInitialize@SJW 0083  
                  ?_CANInitialize 0081                    __end_of___lmul 29CE  
                      ?_ISR_bassa 0023                    __end_of___wmul 2B6E  
                   __pidataCOMRAM 2C2C                 __size_of_ISR_alta 27DC  
                     _WriteTimer0 2BF6                __end_of_ConvertADC 2C36  
             start_initialization 29CE                 __size_ofi1___wmul 0026  
                      ?i1___lwdiv 0029               CANSetMask@numBuffer 007C  
          __end_of_CANsendMessage 141E                 ?_CANOperationMode 0023  
              ??_CANOperationMode 0073        CANInitialize@FilterConfig1 008B  
      CANInitialize@FilterConfig2 008C                          ??___lmul 007B  
                        ??___wmul 0077                       __pdataBANK0 00BD  
                     _calibration 000D                  __CFG_LPT1OSC$OFF 000000  
       __size_ofi1_CANsendMessage 0690            CANInitialize@phaseSeg1 0081  
          CANInitialize@phaseSeg2 0082                       __pbssCOMRAM 0001  
                   __pcstackBANK0 0060                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72                 __size_of_delay_ms 003A  
                 ?_CANsendMessage 0073                   ??_CANInitialize 0086  
                        ?_BusyADC 0023                          ?_ReadADC 0073  
              CANSetFilter@filter 0073                 OpenADC@portconfig 0074  
                        ?_OpenADC 0073                    _theorySteering 0013  
                ___lwdiv@dividend 0073                         __pintcode 0008  
                        ?___lldiv 007F                          ?___lwdiv 0073  
                     ??_ISR_bassa 0033                       __pintcodelo 0018  
               WriteTimer0@timer0 0060          __end_of_CANisRXwarningON 2C2C  
                     _COMSTATbits 000F74                  ___lwdiv@quotient 0077  
         _configurazione_iniziale 27E4                       ??i1___lwdiv 002D  
           CANreceiveMessage@tamp 002E                    ___wmul@product 0077  
                   OpenADC@config 0077      _delay_quartz_frequency_value 00BD  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                       _send_data 2AC0                          _PIE3bits 000FA3  
        __end_of_CANisTXwarningON 2C20                          i1u404_25 1D1A  
                        i1u406_20 1DEE                          i1u406_26 1DF0  
                        i1u407_20 1E18                          i1u415_25 1F90  
                        i1u407_26 1E1A                          i1u409_25 1E2C  
                        i1u450_20 1712                          i1u450_25 1708  
                        i1u451_20 1758                          i1u451_25 174E  
                        i1u452_25 17A4                          i1u437_20 14E2  
                        i1u437_25 14D8                          i1u438_20 1528  
                        i1u438_25 151E                          i1u463_20 1942  
                        i1u463_25 1938                          i1u439_25 1574  
                        i1u464_20 1988                          i1u464_25 197E  
                        i1u465_25 19D4                          i1u482_20 00EE  
                        i1u482_26 00F0                          i1u395_20 1B66  
                        i1u395_26 1B68                          i1u396_20 1B94  
                        i1u396_26 1B96                          i1u478_20 009A  
                        i1u398_25 1BAA                          i1u479_25 009C  
                        _PIR1bits 000F9E                          _PIR3bits 000FA4  
                        i2u488_40 276C                          i2u488_46 276E  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                          _RXB0SIDL 000F62  
                        _RXF0EIDH 000F02                          _RXB1SIDH 000F51  
                        _RXF0EIDL 000F03                          _RXB1SIDL 000F52  
                        _RXF1EIDH 000F06                          _RXF1EIDL 000F07  
                        _RXF2EIDH 000F0A                      _pastSteering 004A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _ISR_alta 0008  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                 ___wmul@multiplier 0073  
                        i1___wmul 2B6E                     ?_calibrazione 0023  
                   ?_CANSetFilter 0073                 ___lmul@multiplier 0073  
                     _INTCON2bits 000FF1                         copy_data0 2A0E  
                      _CANCONbits 000F6F                          __Hparam0 0000  
                      ?_send_data 0023                  __size_of_BusyADC 000C  
                __size_of_ReadADC 0012                          __Lparam0 0000  
                    _RXB0SIDLbits 000F62                  __size_of_OpenADC 007C  
                    _RXB1SIDLbits 000F52                        _CANSetMask 1FBA  
                __size_of___lldiv 00BC                  i1_CANsendMessage 141E  
                __size_of___lwdiv 0078                      ?_WriteTimer0 0060  
                  ??_calibrazione 007A         ??_configurazione_iniziale 008D  
                    _RXF0SIDLbits 000F01                          _delay_ms 2AFE  
                 ___lwdiv@divisor 0075                      _RXF1SIDLbits 000F05  
                 ___lwdiv@counter 0079             i1CANsendMessage@flags 002A  
                  ??_CANSetFilter 0078                          __ptext10 018C  
                        __ptext11 2BB8                          __ptext20 2C20  
                        __ptext12 2A7A                          __ptext13 28E0  
                        __ptext22 2B6E                          __ptext14 2BE4  
                        __ptext23 2A28                          __ptext15 2C32  
                        __ptext24 141E                          __ptext16 2C08  
                        __ptext25 1AAE                          __ptext17 2958  
                        __ptext26 2BCE                          __ptext18 2672  
                        __ptext19 2C14                          __ptext28 2BF6  
                    _RXF2SIDLbits 000F09                          _noChange 0258  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
              i1___lwdiv@dividend 0029                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 0079                      _remote_frame 0259  
                   __size_of_main 0154                          _limiteDx 0045  
            CANreceiveMessage@msg 0023                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 004C         __size_of_CANOperationMode 0016  
                   ?_CANisRxReady 0023                     ?_CANisTxReady 0023  
                     _RXB0DLCbits 000F65                i1___lwdiv@quotient 002D  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 1AAE                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                  ??_CANsendMessage 007B  
      i1CANsendMessage@dataLength 0029                ?_CANreceiveMessage 0023  
        CANsendMessage@identifier 0073                          intlevel1 0000  
                        intlevel2 0000                  CANSetFilter@tamp 007D  
                CANSetFilter@type 0077               ??_CANreceiveMessage 0025  
            i1CANsendMessage@data 0027                  ___lldiv@dividend 007F  
            i1CANsendMessage@tamp 002F                       _TXB0DLCbits 000F45  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 0083                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 2864                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 00A9  
            CANOperationMode@mode 0073                    ??_CANisRxReady 0023  
                     ?_CANSetMask 0073                    ??_CANisTxReady 0073  
       __end_of_CANreceiveMessage 1FBA        i1CANsendMessage@identifier 0023  
                ___lldiv@quotient 0087                 ?_CANisRXwarningON 0023  
              ??_CANisRXwarningON 0073              __end_of_calibrazione 2AC0  
           __end_of_CANInitialize 251E                 ?_CANisTXwarningON 0023  
