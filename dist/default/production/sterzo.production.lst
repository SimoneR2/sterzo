

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat May 07 21:38:08 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	param0,global,class=BANK0,space=1,delta=1
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	idataCOMRAM
    50  002D38                     __pidataCOMRAM:
    51                           	opt stack 0
    52                           
    53                           ;initializer for _currentSteering
    54  002D38  005A               	dw	90
    55                           
    56                           ;initializer for _limiteDx
    57  002D3A  0078               	dw	120
    58                           
    59                           	psect	idataBANK0
    60  002D40                     __pidataBANK0:
    61                           	opt stack 0
    62                           
    63                           ;initializer for _delay_quartz_frequency_value
    64  002D40  10                 	db	16
    65  0000                     _RXB1CON	set	3920
    66  0000                     _RXB1CONbits	set	3920
    67  0000                     _RXB1D0	set	3926
    68  0000                     _RXB1D1	set	3927
    69  0000                     _RXB1D2	set	3928
    70  0000                     _RXB1D3	set	3929
    71  0000                     _RXB1D4	set	3930
    72  0000                     _RXB1D5	set	3931
    73  0000                     _RXB1D6	set	3932
    74  0000                     _RXB1D7	set	3933
    75  0000                     _RXB1DLC	set	3925
    76  0000                     _RXB1DLCbits	set	3925
    77  0000                     _RXB1EIDH	set	3923
    78  0000                     _RXB1EIDL	set	3924
    79  0000                     _RXB1SIDH	set	3921
    80  0000                     _RXB1SIDL	set	3922
    81  0000                     _RXB1SIDLbits	set	3922
    82  0000                     _RXF0EIDH	set	3842
    83  0000                     _RXF0EIDL	set	3843
    84  0000                     _RXF0SIDH	set	3840
    85  0000                     _RXF0SIDL	set	3841
    86  0000                     _RXF0SIDLbits	set	3841
    87  0000                     _RXF1EIDH	set	3846
    88  0000                     _RXF1EIDL	set	3847
    89  0000                     _RXF1SIDH	set	3844
    90  0000                     _RXF1SIDL	set	3845
    91  0000                     _RXF1SIDLbits	set	3845
    92  0000                     _RXF2EIDH	set	3850
    93  0000                     _RXF2EIDL	set	3851
    94  0000                     _RXF2SIDH	set	3848
    95  0000                     _RXF2SIDL	set	3849
    96  0000                     _RXF2SIDLbits	set	3849
    97  0000                     _RXF3EIDH	set	3854
    98  0000                     _RXF3EIDL	set	3855
    99  0000                     _RXF3SIDH	set	3852
   100  0000                     _RXF3SIDL	set	3853
   101  0000                     _RXF3SIDLbits	set	3853
   102  0000                     _RXF4EIDH	set	3858
   103  0000                     _RXF4EIDL	set	3859
   104  0000                     _RXF4SIDH	set	3856
   105  0000                     _RXF4SIDL	set	3857
   106  0000                     _RXF4SIDLbits	set	3857
   107  0000                     _RXF5EIDH	set	3862
   108  0000                     _RXF5EIDL	set	3863
   109  0000                     _RXF5SIDH	set	3860
   110  0000                     _RXF5SIDL	set	3861
   111  0000                     _RXF5SIDLbits	set	3861
   112  0000                     _RXM0EIDH	set	3866
   113  0000                     _RXM0EIDL	set	3867
   114  0000                     _RXM0SIDH	set	3864
   115  0000                     _RXM0SIDL	set	3865
   116  0000                     _RXM0SIDLbits	set	3865
   117  0000                     _RXM1EIDH	set	3870
   118  0000                     _RXM1EIDL	set	3871
   119  0000                     _RXM1SIDH	set	3868
   120  0000                     _RXM1SIDL	set	3869
   121  0000                     _RXM1SIDLbits	set	3869
   122  0000                     _TXB0CONbits	set	3904
   123  0000                     _TXB0D0	set	3910
   124  0000                     _TXB0D1	set	3911
   125  0000                     _TXB0D2	set	3912
   126  0000                     _TXB0D3	set	3913
   127  0000                     _TXB0D4	set	3914
   128  0000                     _TXB0D5	set	3915
   129  0000                     _TXB0D6	set	3916
   130  0000                     _TXB0D7	set	3917
   131  0000                     _TXB0DLC	set	3909
   132  0000                     _TXB0DLCbits	set	3909
   133  0000                     _TXB0EIDH	set	3907
   134  0000                     _TXB0EIDL	set	3908
   135  0000                     _TXB0SIDH	set	3905
   136  0000                     _TXB0SIDL	set	3906
   137  0000                     _TXB0SIDLbits	set	3906
   138  0000                     _TXB1CONbits	set	3888
   139  0000                     _TXB1D0	set	3894
   140  0000                     _TXB1D1	set	3895
   141  0000                     _TXB1D2	set	3896
   142  0000                     _TXB1D3	set	3897
   143  0000                     _TXB1D4	set	3898
   144  0000                     _TXB1D5	set	3899
   145  0000                     _TXB1D6	set	3900
   146  0000                     _TXB1D7	set	3901
   147  0000                     _TXB1DLC	set	3893
   148  0000                     _TXB1DLCbits	set	3893
   149  0000                     _TXB1EIDH	set	3891
   150  0000                     _TXB1EIDL	set	3892
   151  0000                     _TXB1SIDH	set	3889
   152  0000                     _TXB1SIDL	set	3890
   153  0000                     _TXB1SIDLbits	set	3890
   154  0000                     _TXB2CONbits	set	3872
   155  0000                     _TXB2D0	set	3878
   156  0000                     _TXB2D1	set	3879
   157  0000                     _TXB2D2	set	3880
   158  0000                     _TXB2D3	set	3881
   159  0000                     _TXB2D4	set	3882
   160  0000                     _TXB2D5	set	3883
   161  0000                     _TXB2D6	set	3884
   162  0000                     _TXB2D7	set	3885
   163  0000                     _TXB2DLC	set	3877
   164  0000                     _TXB2DLCbits	set	3877
   165  0000                     _TXB2EIDH	set	3875
   166  0000                     _TXB2EIDL	set	3876
   167  0000                     _TXB2SIDH	set	3873
   168  0000                     _TXB2SIDL	set	3874
   169  0000                     _TXB2SIDLbits	set	3874
   170  0000                     _ADCON0	set	4034
   171  0000                     _ADCON0bits	set	4034
   172  0000                     _ADCON1	set	4033
   173  0000                     _ADCON2	set	4032
   174  0000                     _ADRESH	set	4036
   175  0000                     _ADRESL	set	4035
   176  0000                     _BRGCON1	set	3952
   177  0000                     _BRGCON2	set	3953
   178  0000                     _BRGCON2bits	set	3953
   179  0000                     _BRGCON3	set	3954
   180  0000                     _BRGCON3bits	set	3954
   181  0000                     _CANCON	set	3951
   182  0000                     _CANCONbits	set	3951
   183  0000                     _CANSTAT	set	3950
   184  0000                     _COMSTATbits	set	3956
   185  0000                     _INTCON2bits	set	4081
   186  0000                     _INTCONbits	set	4082
   187  0000                     _IPR3bits	set	4005
   188  0000                     _LATA	set	3977
   189  0000                     _LATB	set	3978
   190  0000                     _LATC	set	3979
   191  0000                     _LATD	set	3980
   192  0000                     _LATE	set	3981
   193  0000                     _PIE1bits	set	3997
   194  0000                     _PIE3bits	set	4003
   195  0000                     _PIR1bits	set	3998
   196  0000                     _PIR3bits	set	4004
   197  0000                     _PORTAbits	set	3968
   198  0000                     _PORTCbits	set	3970
   199  0000                     _RCONbits	set	4048
   200  0000                     _RXB0CON	set	3936
   201  0000                     _RXB0CONbits	set	3936
   202  0000                     _RXB0D0	set	3942
   203  0000                     _RXB0D1	set	3943
   204  0000                     _RXB0D2	set	3944
   205  0000                     _RXB0D3	set	3945
   206  0000                     _RXB0D4	set	3946
   207  0000                     _RXB0D5	set	3947
   208  0000                     _RXB0D6	set	3948
   209  0000                     _RXB0D7	set	3949
   210  0000                     _RXB0DLC	set	3941
   211  0000                     _RXB0DLCbits	set	3941
   212  0000                     _RXB0EIDH	set	3939
   213  0000                     _RXB0EIDL	set	3940
   214  0000                     _RXB0SIDH	set	3937
   215  0000                     _RXB0SIDL	set	3938
   216  0000                     _RXB0SIDLbits	set	3938
   217  0000                     _RXERRCNT	set	3957
   218  0000                     _T0CON	set	4053
   219  0000                     _T0CONbits	set	4053
   220  0000                     _TMR0H	set	4055
   221  0000                     _TMR0L	set	4054
   222  0000                     _TRISA	set	3986
   223  0000                     _TRISB	set	3987
   224  0000                     _TRISC	set	3988
   225  0000                     _TRISD	set	3989
   226  0000                     _TRISE	set	3990
   227  0000                     _TXERRCNT	set	3958
   228                           
   229                           ; #config settings
   230  0000                     
   231                           	psect	cinit
   232  002B20                     __pcinit:
   233                           	opt stack 0
   234  002B20                     start_initialization:
   235                           	opt stack 0
   236  002B20                     __initialization:
   237                           	opt stack 0
   238                           
   239                           ; Clear objects allocated to BANK0 (14 bytes)
   240  002B20  EE00  F091         	lfsr	0,__pbssBANK0
   241  002B24  0E0E               	movlw	14
   242  002B26                     clear_0:
   243  002B26  6AEE               	clrf	postinc0,c
   244  002B28  06E8               	decf	wreg,f,c
   245  002B2A  E1FD               	bnz	clear_0
   246                           
   247                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   248  002B2C  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   249                           
   250                           ; Clear objects allocated to COMRAM (34 bytes)
   251  002B2E  EE00  F025         	lfsr	0,__pbssCOMRAM
   252  002B32  0E22               	movlw	34
   253  002B34                     clear_1:
   254  002B34  6AEE               	clrf	postinc0,c
   255  002B36  06E8               	decf	wreg,f,c
   256  002B38  E1FD               	bnz	clear_1
   257                           
   258                           ; Initialize objects allocated to BANK0 (1 bytes)
   259                           ; load TBLPTR registers with __pidataBANK0
   260  002B3A  0E40               	movlw	low __pidataBANK0
   261  002B3C  6EF6               	movwf	tblptrl,c
   262  002B3E  0E2D               	movlw	high __pidataBANK0
   263  002B40  6EF7               	movwf	tblptrh,c
   264  002B42  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   265  002B44  6EF8               	movwf	tblptru,c
   266  002B46  0009               	tblrd		*+	;fetch initializer
   267  002B48  CFF5 F09F          	movff	tablat,__pdataBANK0
   268                           
   269                           ; Initialize objects allocated to COMRAM (4 bytes)
   270                           ; load TBLPTR registers with __pidataCOMRAM
   271  002B4C  0E38               	movlw	low __pidataCOMRAM
   272  002B4E  6EF6               	movwf	tblptrl,c
   273  002B50  0E2D               	movlw	high __pidataCOMRAM
   274  002B52  6EF7               	movwf	tblptrh,c
   275  002B54  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   276  002B56  6EF8               	movwf	tblptru,c
   277  002B58  EE00  F047         	lfsr	0,__pdataCOMRAM
   278  002B5C  EE10 F004          	lfsr	1,4
   279  002B60                     copy_data0:
   280  002B60  0009               	tblrd		*+
   281  002B62  CFF5 FFEE          	movff	tablat,postinc0
   282  002B66  50E5               	movf	postdec1,w,c
   283  002B68  50E1               	movf	fsr1l,w,c
   284  002B6A  E1FA               	bnz	copy_data0
   285  002B6C                     end_of_initialization:
   286                           	opt stack 0
   287  002B6C                     __end_of__initialization:
   288                           	opt stack 0
   289  002B6C  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   290  002B6E  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   291  002B70  0E00               	movlw	low (__Lmediumconst shr (0+16))
   292  002B72  6EF8               	movwf	tblptru,c
   293  002B74  0100               	movlb	0
   294  002B76  EFBC  F012         	goto	_main	;jump to C main() function
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           postdec1	equ	0xFE5
   302                           fsr1l	equ	0xFE1
   303                           
   304                           	psect	bitbssCOMRAM
   305  000258                     __pbitbssCOMRAM:
   306                           	opt stack 0
   307  000258                     _noChange:
   308                           	opt stack 0
   309  000258                     	ds	1
   310  000259                     _remote_frame:
   311                           	opt stack 0
   312  000259                     	ds	1
   313                           tblptru	equ	0xFF8
   314                           tblptrh	equ	0xFF7
   315                           tblptrl	equ	0xFF6
   316                           tablat	equ	0xFF5
   317                           postinc0	equ	0xFEE
   318                           wreg	equ	0xFE8
   319                           postdec1	equ	0xFE5
   320                           fsr1l	equ	0xFE1
   321                           
   322                           	psect	bssCOMRAM
   323  000025                     __pbssCOMRAM:
   324                           	opt stack 0
   325  000025                     _id:
   326                           	opt stack 0
   327  000025                     	ds	4
   328  000029                     _Toff:
   329                           	opt stack 0
   330  000029                     	ds	2
   331  00002B                     _Ton:
   332                           	opt stack 0
   333  00002B                     	ds	2
   334  00002D                     _calibration:
   335                           	opt stack 0
   336  00002D                     	ds	2
   337  00002F                     _theorySteering:
   338                           	opt stack 0
   339  00002F                     	ds	1
   340  000030                     _msg:
   341                           	opt stack 0
   342  000030                     	ds	15
   343  00003F                     _data_array:
   344                           	opt stack 0
   345  00003F                     	ds	8
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           postdec1	equ	0xFE5
   353                           fsr1l	equ	0xFE1
   354                           
   355                           	psect	dataCOMRAM
   356  000047                     __pdataCOMRAM:
   357                           	opt stack 0
   358  000047                     _currentSteering:
   359                           	opt stack 0
   360  000047                     	ds	2
   361  000049                     _limiteDx:
   362                           	opt stack 0
   363  000049                     	ds	2
   364                           tblptru	equ	0xFF8
   365                           tblptrh	equ	0xFF7
   366                           tblptrl	equ	0xFF6
   367                           tablat	equ	0xFF5
   368                           postinc0	equ	0xFEE
   369                           wreg	equ	0xFE8
   370                           postdec1	equ	0xFE5
   371                           fsr1l	equ	0xFE1
   372                           
   373                           	psect	bssBANK0
   374  000091                     __pbssBANK0:
   375                           	opt stack 0
   376  000091                     _ADCResult:
   377                           	opt stack 0
   378  000091                     	ds	4
   379  000095                     _duty_cycle:
   380                           	opt stack 0
   381  000095                     	ds	4
   382  000099                     _timer:
   383                           	opt stack 0
   384  000099                     	ds	4
   385  00009D                     _clock_counter_reference:
   386                           	opt stack 0
   387  00009D                     	ds	2
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           postinc0	equ	0xFEE
   393                           wreg	equ	0xFE8
   394                           postdec1	equ	0xFE5
   395                           fsr1l	equ	0xFE1
   396                           
   397                           	psect	dataBANK0
   398  00009F                     __pdataBANK0:
   399                           	opt stack 0
   400  00009F                     _delay_quartz_frequency_value:
   401                           	opt stack 0
   402  00009F                     	ds	1
   403                           tblptru	equ	0xFF8
   404                           tblptrh	equ	0xFF7
   405                           tblptrl	equ	0xFF6
   406                           tablat	equ	0xFF5
   407                           postinc0	equ	0xFEE
   408                           wreg	equ	0xFE8
   409                           postdec1	equ	0xFE5
   410                           fsr1l	equ	0xFE1
   411                           
   412                           	psect	cstackBANK0
   413  000060                     __pcstackBANK0:
   414                           	opt stack 0
   415  000060                     WriteTimer0@timer0:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x0
   419  000060                     	ds	2
   420  000062                     WriteTimer0@timer:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x2
   424  000062                     	ds	2
   425  000064                     ??_ISR_alta:
   426                           
   427                           ; 0 bytes @ 0x4
   428  000064                     	ds	15
   429  000073                     ?_ReadADC:
   430                           	opt stack 0
   431  000073                     ?___wmul:
   432                           	opt stack 0
   433  000073                     ?___lmul:
   434                           	opt stack 0
   435  000073                     ?___aldiv:
   436                           	opt stack 0
   437  000073                     CANOperationMode@mode:
   438                           	opt stack 0
   439  000073                     _CANisTxReady$2823:
   440                           	opt stack 0
   441  000073                     OpenADC@config2:
   442                           	opt stack 0
   443  000073                     ___wmul@multiplier:
   444                           	opt stack 0
   445  000073                     CANsendMessage@identifier:
   446                           	opt stack 0
   447  000073                     CANSetMask@mask:
   448                           	opt stack 0
   449  000073                     CANSetFilter@filter:
   450                           	opt stack 0
   451  000073                     ___lmul@multiplier:
   452                           	opt stack 0
   453  000073                     ___aldiv@dividend:
   454                           	opt stack 0
   455                           
   456                           ; 4 bytes @ 0x13
   457  000073                     	ds	1
   458  000074                     OpenADC@portconfig:
   459                           	opt stack 0
   460                           
   461                           ; 1 bytes @ 0x14
   462  000074                     	ds	1
   463  000075                     ??_ReadADC:
   464  000075                     ??_OpenADC:
   465  000075                     ___wmul@multiplicand:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x15
   469  000075                     	ds	2
   470  000077                     CANSetMask@type:
   471                           	opt stack 0
   472  000077                     CANSetFilter@type:
   473                           	opt stack 0
   474  000077                     OpenADC@config:
   475                           	opt stack 0
   476  000077                     CANsendMessage@data:
   477                           	opt stack 0
   478  000077                     ___wmul@product:
   479                           	opt stack 0
   480  000077                     ___lmul@multiplicand:
   481                           	opt stack 0
   482  000077                     ___aldiv@divisor:
   483                           	opt stack 0
   484                           
   485                           ; 4 bytes @ 0x17
   486  000077                     	ds	1
   487  000078                     ??_CANSetMask:
   488  000078                     ??_CANSetFilter:
   489                           
   490                           ; 0 bytes @ 0x18
   491  000078                     	ds	1
   492  000079                     CANsendMessage@dataLength:
   493                           	opt stack 0
   494  000079                     delay_ms@value_ms:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x19
   498  000079                     	ds	1
   499  00007A                     CANsendMessage@flags:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x1A
   503  00007A                     	ds	1
   504  00007B                     ??_CANsendMessage:
   505  00007B                     ___aldiv@counter:
   506                           	opt stack 0
   507  00007B                     ___lmul@product:
   508                           	opt stack 0
   509                           
   510                           ; 4 bytes @ 0x1B
   511  00007B                     	ds	1
   512  00007C                     CANSetMask@numBuffer:
   513                           	opt stack 0
   514  00007C                     CANSetFilter@numBuffer:
   515                           	opt stack 0
   516  00007C                     ___aldiv@sign:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x1C
   520  00007C                     	ds	1
   521  00007D                     CANSetMask@tamp:
   522                           	opt stack 0
   523  00007D                     CANSetFilter@tamp:
   524                           	opt stack 0
   525  00007D                     ___aldiv@quotient:
   526                           	opt stack 0
   527                           
   528                           ; 4 bytes @ 0x1D
   529  00007D                     	ds	2
   530  00007F                     ?___lldiv:
   531                           	opt stack 0
   532  00007F                     CANsendMessage@tamp:
   533                           	opt stack 0
   534  00007F                     ___lldiv@dividend:
   535                           	opt stack 0
   536                           
   537                           ; 4 bytes @ 0x1F
   538  00007F                     	ds	2
   539  000081                     CANInitialize@phaseSeg1:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x21
   543  000081                     	ds	1
   544  000082                     CANInitialize@phaseSeg2:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x22
   548  000082                     	ds	1
   549  000083                     CANInitialize@SJW:
   550                           	opt stack 0
   551  000083                     ___lldiv@divisor:
   552                           	opt stack 0
   553                           
   554                           ; 4 bytes @ 0x23
   555  000083                     	ds	1
   556  000084                     CANInitialize@BRP:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x24
   560  000084                     	ds	1
   561  000085                     CANInitialize@flags:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x25
   565  000085                     	ds	1
   566  000086                     ??_CANInitialize:
   567                           
   568                           ; 0 bytes @ 0x26
   569  000086                     	ds	1
   570  000087                     ___lldiv@quotient:
   571                           	opt stack 0
   572                           
   573                           ; 4 bytes @ 0x27
   574  000087                     	ds	3
   575  00008A                     CANInitialize@propSeg:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x2A
   579  00008A                     	ds	1
   580  00008B                     CANInitialize@FilterConfig1:
   581                           	opt stack 0
   582  00008B                     ___lldiv@counter:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x2B
   586  00008B                     	ds	1
   587  00008C                     CANInitialize@FilterConfig2:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x2C
   591  00008C                     	ds	1
   592  00008D                     ??_main:
   593                           
   594                           ; 0 bytes @ 0x2D
   595  00008D                     	ds	4
   596                           tblptru	equ	0xFF8
   597                           tblptrh	equ	0xFF7
   598                           tblptrl	equ	0xFF6
   599                           tablat	equ	0xFF5
   600                           postinc0	equ	0xFEE
   601                           wreg	equ	0xFE8
   602                           postdec1	equ	0xFE5
   603                           fsr1l	equ	0xFE1
   604                           
   605                           	psect	cstackCOMRAM
   606  000001                     __pcstackCOMRAM:
   607                           	opt stack 0
   608  000001                     ?i1___wmul:
   609                           	opt stack 0
   610  000001                     _CANisRxReady$2825:
   611                           	opt stack 0
   612  000001                     CANreceiveMessage@msg:
   613                           	opt stack 0
   614  000001                     i1___wmul@multiplier:
   615                           	opt stack 0
   616  000001                     i1CANsendMessage@identifier:
   617                           	opt stack 0
   618                           
   619                           ; 4 bytes @ 0x0
   620  000001                     	ds	2
   621  000003                     ??_CANreceiveMessage:
   622  000003                     i1___wmul@multiplicand:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x2
   626  000003                     	ds	2
   627  000005                     i1CANsendMessage@data:
   628                           	opt stack 0
   629  000005                     i1___wmul@product:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x4
   633  000005                     	ds	2
   634  000007                     ?___lwdiv:
   635                           	opt stack 0
   636  000007                     i1CANsendMessage@dataLength:
   637                           	opt stack 0
   638  000007                     ___lwdiv@dividend:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x6
   642  000007                     	ds	1
   643  000008                     i1CANsendMessage@flags:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x7
   647  000008                     	ds	1
   648  000009                     ??i1_CANsendMessage:
   649  000009                     ___lwdiv@divisor:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x8
   653  000009                     	ds	2
   654  00000B                     CANreceiveMessage@error:
   655                           	opt stack 0
   656  00000B                     ___lwdiv@quotient:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0xA
   660  00000B                     	ds	1
   661  00000C                     CANreceiveMessage@tamp:
   662                           	opt stack 0
   663                           
   664                           ; 1 bytes @ 0xB
   665  00000C                     	ds	1
   666  00000D                     ___lwdiv@counter:
   667                           	opt stack 0
   668  00000D                     i1CANsendMessage@tamp:
   669                           	opt stack 0
   670                           
   671                           ; 4 bytes @ 0xC
   672  00000D                     	ds	4
   673  000011                     ??_ISR_bassa:
   674                           
   675                           ; 0 bytes @ 0x10
   676  000011                     	ds	20
   677                           tblptru	equ	0xFF8
   678                           tblptrh	equ	0xFF7
   679                           tblptrl	equ	0xFF6
   680                           tablat	equ	0xFF5
   681                           postinc0	equ	0xFEE
   682                           wreg	equ	0xFE8
   683                           postdec1	equ	0xFE5
   684                           fsr1l	equ	0xFE1
   685                           
   686 ;;
   687 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   688 ;;
   689 ;; *************** function _main *****************
   690 ;; Defined at:
   691 ;;		line 126 in file "sterzo.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  2  612[None  ] int 
   698 ;; Registers used:
   699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   705 ;;      Params:         0       0       0       0
   706 ;;      Locals:         0       0       0       0
   707 ;;      Temps:          0       4       0       0
   708 ;;      Totals:         0       4       0       0
   709 ;;Total ram usage:        4 bytes
   710 ;; Hardware stack levels required when called:    7
   711 ;; This function calls:
   712 ;;		_CANisRXwarningON
   713 ;;		_CANisTXwarningON
   714 ;;		___lldiv
   715 ;;		___lmul
   716 ;;		_calibrazione
   717 ;;		_configurazione_iniziale
   718 ;;		_delay_ms
   719 ;;		_send_data
   720 ;; This function is called by:
   721 ;;		Startup code after reset
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text0
   726  002578                     __ptext0:
   727                           	opt stack 0
   728  002578                     _main:
   729                           	opt stack 24
   730                           
   731                           ;sterzo.c: 127: configurazione_iniziale();
   732                           
   733                           ;incstack = 0
   734  002578  EC9E  F014         	call	_configurazione_iniziale	;wreg free
   735  00257C                     l4107:
   736                           
   737                           ;sterzo.c: 135: delay_ms(10);
   738  00257C  0E00               	movlw	0
   739  00257E  0100               	movlb	0	; () banked
   740  002580  6F7A               	movwf	(delay_ms@value_ms+1)& (0+255),b
   741  002582  0E0A               	movlw	10
   742  002584  6F79               	movwf	delay_ms@value_ms& (0+255),b
   743  002586  EC05  F016         	call	_delay_ms	;wreg free
   744                           
   745                           ;sterzo.c: 136: calibrazione();
   746  00258A  EC57  F015         	call	_calibrazione	;wreg free
   747                           
   748                           ;sterzo.c: 137: duty_cycle = currentSteering;
   749  00258E  C047  F095         	movff	_currentSteering,_duty_cycle
   750  002592  C048  F096         	movff	_currentSteering+1,_duty_cycle+1
   751  002596  0100               	movlb	0	; () banked
   752  002598  0E00               	movlw	0
   753  00259A  BF96               	btfsc	(_duty_cycle+1)& (0+255),7,b
   754  00259C  0EFF               	movlw	-1
   755  00259E  6F97               	movwf	(_duty_cycle+2)& (0+255),b
   756  0025A0  6F98               	movwf	(_duty_cycle+3)& (0+255),b
   757                           
   758                           ; BSR set to: 0
   759                           ;sterzo.c: 138: if (PORTCbits.RC0 == 0) {
   760  0025A2  B082               	btfsc	3970,0,c	;volatile
   761  0025A4  D7EB               	goto	l4107
   762                           
   763                           ; BSR set to: 0
   764                           ;sterzo.c: 139: timer = (((duty_cycle * 700) / 90) + 800) *2;
   765  0025A6  C095  F073         	movff	_duty_cycle,___lmul@multiplier
   766  0025AA  C096  F074         	movff	_duty_cycle+1,___lmul@multiplier+1
   767  0025AE  C097  F075         	movff	_duty_cycle+2,___lmul@multiplier+2
   768  0025B2  C098  F076         	movff	_duty_cycle+3,___lmul@multiplier+3
   769  0025B6  0EBC               	movlw	188
   770  0025B8  0100               	movlb	0	; () banked
   771  0025BA  6F77               	movwf	___lmul@multiplicand& (0+255),b
   772  0025BC  0E02               	movlw	2
   773  0025BE  6F78               	movwf	(___lmul@multiplicand+1)& (0+255),b
   774  0025C0  0E00               	movlw	0
   775  0025C2  6F79               	movwf	(___lmul@multiplicand+2)& (0+255),b
   776  0025C4  0E00               	movlw	0
   777  0025C6  6F7A               	movwf	(___lmul@multiplicand+3)& (0+255),b
   778  0025C8  EC1C  F015         	call	___lmul	;wreg free
   779  0025CC  C073  F07F         	movff	?___lmul,___lldiv@dividend
   780  0025D0  C074  F080         	movff	?___lmul+1,___lldiv@dividend+1
   781  0025D4  C075  F081         	movff	?___lmul+2,___lldiv@dividend+2
   782  0025D8  C076  F082         	movff	?___lmul+3,___lldiv@dividend+3
   783  0025DC  0E5A               	movlw	90
   784  0025DE  0100               	movlb	0	; () banked
   785  0025E0  6F83               	movwf	___lldiv@divisor& (0+255),b
   786  0025E2  0E00               	movlw	0
   787  0025E4  6F84               	movwf	(___lldiv@divisor+1)& (0+255),b
   788  0025E6  0E00               	movlw	0
   789  0025E8  6F85               	movwf	(___lldiv@divisor+2)& (0+255),b
   790  0025EA  0E00               	movlw	0
   791  0025EC  6F86               	movwf	(___lldiv@divisor+3)& (0+255),b
   792  0025EE  ECE5  F013         	call	___lldiv	;wreg free
   793  0025F2  90D8               	bcf	status,0,c
   794  0025F4  0100               	movlb	0	; () banked
   795  0025F6  357F               	rlcf	?___lldiv& (0+255),w,b
   796  0025F8  0100               	movlb	0	; () banked
   797  0025FA  6F8D               	movwf	??_main& (0+255),b
   798  0025FC  0100               	movlb	0	; () banked
   799  0025FE  3580               	rlcf	(?___lldiv+1)& (0+255),w,b
   800  002600  0100               	movlb	0	; () banked
   801  002602  6F8E               	movwf	(??_main+1)& (0+255),b
   802  002604  0100               	movlb	0	; () banked
   803  002606  3581               	rlcf	(?___lldiv+2)& (0+255),w,b
   804  002608  0100               	movlb	0	; () banked
   805  00260A  6F8F               	movwf	(??_main+2)& (0+255),b
   806  00260C  0100               	movlb	0	; () banked
   807  00260E  3582               	rlcf	(?___lldiv+3)& (0+255),w,b
   808  002610  0100               	movlb	0	; () banked
   809  002612  6F90               	movwf	(??_main+3)& (0+255),b
   810  002614  0E40               	movlw	64
   811  002616  0100               	movlb	0	; () banked
   812  002618  258D               	addwf	??_main& (0+255),w,b
   813  00261A  0100               	movlb	0	; () banked
   814  00261C  6F99               	movwf	_timer& (0+255),b
   815  00261E  0E06               	movlw	6
   816  002620  0100               	movlb	0	; () banked
   817  002622  218E               	addwfc	(??_main+1)& (0+255),w,b
   818  002624  0100               	movlb	0	; () banked
   819  002626  6F9A               	movwf	(_timer+1)& (0+255),b
   820  002628  0E00               	movlw	0
   821  00262A  0100               	movlb	0	; () banked
   822  00262C  218F               	addwfc	(??_main+2)& (0+255),w,b
   823  00262E  0100               	movlb	0	; () banked
   824  002630  6F9B               	movwf	(_timer+2)& (0+255),b
   825  002632  0E00               	movlw	0
   826  002634  0100               	movlb	0	; () banked
   827  002636  2190               	addwfc	(??_main+3)& (0+255),w,b
   828  002638  0100               	movlb	0	; () banked
   829  00263A  6F9C               	movwf	(_timer+3)& (0+255),b
   830                           
   831                           ; BSR set to: 0
   832                           ;sterzo.c: 140: Ton = 65536 - timer;
   833  00263C  C099  F08D         	movff	_timer,??_main
   834  002640  C09A  F08E         	movff	_timer+1,??_main+1
   835  002644  0100               	movlb	0	; () banked
   836  002646  1F8D               	comf	??_main& (0+255),f,b
   837  002648  1F8E               	comf	(??_main+1)& (0+255),f,b
   838  00264A  4B8D               	infsnz	??_main& (0+255),f,b
   839  00264C  2B8E               	incf	(??_main+1)& (0+255),f,b
   840  00264E  C08D  F02B         	movff	??_main,_Ton
   841  002652  C08E  F02C         	movff	??_main+1,_Ton+1
   842                           
   843                           ; BSR set to: 0
   844                           ;sterzo.c: 141: Toff = 20000 - (timer / 2);
   845  002656  C099  F08D         	movff	_timer,??_main
   846  00265A  C09A  F08E         	movff	_timer+1,??_main+1
   847  00265E  C09B  F08F         	movff	_timer+2,??_main+2
   848  002662  C09C  F090         	movff	_timer+3,??_main+3
   849  002666  0100               	movlb	0	; () banked
   850  002668  90D8               	bcf	status,0,c
   851  00266A  3390               	rrcf	(??_main+3)& (0+255),f,b
   852  00266C  338F               	rrcf	(??_main+2)& (0+255),f,b
   853  00266E  338E               	rrcf	(??_main+1)& (0+255),f,b
   854  002670  338D               	rrcf	??_main& (0+255),f,b
   855  002672  0100               	movlb	0	; () banked
   856  002674  1F8D               	comf	??_main& (0+255),f,b
   857  002676  1F8E               	comf	(??_main+1)& (0+255),f,b
   858  002678  4B8D               	infsnz	??_main& (0+255),f,b
   859  00267A  2B8E               	incf	(??_main+1)& (0+255),f,b
   860  00267C  0E20               	movlw	32
   861  00267E  0100               	movlb	0	; () banked
   862  002680  258D               	addwf	??_main& (0+255),w,b
   863  002682  6E29               	movwf	_Toff,c
   864  002684  0E4E               	movlw	78
   865  002686  0100               	movlb	0	; () banked
   866  002688  218E               	addwfc	(??_main+1)& (0+255),w,b
   867  00268A  6E2A               	movwf	_Toff+1,c
   868                           
   869                           ; BSR set to: 0
   870                           ;sterzo.c: 142: Toff = (65536 - (Toff * 2));
   871  00268C  C029  F08D         	movff	_Toff,??_main
   872  002690  C02A  F08E         	movff	_Toff+1,??_main+1
   873  002694  90D8               	bcf	status,0,c
   874  002696  0100               	movlb	0	; () banked
   875  002698  378D               	rlcf	??_main& (0+255),f,b
   876  00269A  378E               	rlcf	(??_main+1)& (0+255),f,b
   877  00269C  0100               	movlb	0	; () banked
   878  00269E  1F8D               	comf	??_main& (0+255),f,b
   879  0026A0  1F8E               	comf	(??_main+1)& (0+255),f,b
   880  0026A2  4B8D               	infsnz	??_main& (0+255),f,b
   881  0026A4  2B8E               	incf	(??_main+1)& (0+255),f,b
   882  0026A6  C08D  F029         	movff	??_main,_Toff
   883  0026AA  C08E  F02A         	movff	??_main+1,_Toff+1
   884                           
   885                           ; BSR set to: 0
   886                           
   887                           ; BSR set to: 0
   888  0026AE  D766               	goto	l4107
   889  0026B0                     __end_of_main:
   890                           	opt stack 0
   891                           tblptru	equ	0xFF8
   892                           tblptrh	equ	0xFF7
   893                           tblptrl	equ	0xFF6
   894                           tablat	equ	0xFF5
   895                           postinc0	equ	0xFEE
   896                           wreg	equ	0xFE8
   897                           postdec1	equ	0xFE5
   898                           fsr1l	equ	0xFE1
   899                           status	equ	0xFD8
   900                           
   901 ;; *************** function _send_data *****************
   902 ;; Defined at:
   903 ;;		line 157 in file "sterzo.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;		None
   908 ;; Return value:  Size  Location     Type
   909 ;;		None               void
   910 ;; Registers used:
   911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   917 ;;      Params:         0       0       0       0
   918 ;;      Locals:         0       0       0       0
   919 ;;      Temps:          0       0       0       0
   920 ;;      Totals:         0       0       0       0
   921 ;;Total ram usage:        0 bytes
   922 ;; Hardware stack levels used:    1
   923 ;; Hardware stack levels required when called:    5
   924 ;; This function calls:
   925 ;;		_CANisTxReady
   926 ;;		_CANsendMessage
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text1
   933  002BCC                     __ptext1:
   934                           	opt stack 0
   935  002BCC                     _send_data:
   936                           	opt stack 25
   937                           
   938                           ;sterzo.c: 158: if (CANisTxReady()) {
   939                           
   940                           ;incstack = 0
   941  002BCC  EC50  F016         	call	_CANisTxReady	;wreg free
   942  002BD0  0900               	iorlw	0
   943  002BD2  B4D8               	btfsc	status,2,c
   944  002BD4  0012               	return	
   945                           
   946                           ;sterzo.c: 159: if (remote_frame == 1) {
   947  002BD6  A24B               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
   948  002BD8  D016               	goto	l3739
   949                           
   950                           ;sterzo.c: 161: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG &
   951                           ;sterzo.c: 162: CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   952  002BDA  C025  F073         	movff	_id,CANsendMessage@identifier
   953  002BDE  C026  F074         	movff	_id+1,CANsendMessage@identifier+1
   954  002BE2  C027  F075         	movff	_id+2,CANsendMessage@identifier+2
   955  002BE6  C028  F076         	movff	_id+3,CANsendMessage@identifier+3
   956  002BEA  0E3F               	movlw	low _data_array
   957  002BEC  0100               	movlb	0	; () banked
   958  002BEE  6F77               	movwf	CANsendMessage@data& (0+255),b
   959  002BF0  0E00               	movlw	high _data_array
   960  002BF2  0100               	movlb	0	; () banked
   961  002BF4  6F78               	movwf	(CANsendMessage@data+1)& (0+255),b
   962  002BF6  0E08               	movlw	8
   963  002BF8  0100               	movlb	0	; () banked
   964  002BFA  6F79               	movwf	CANsendMessage@dataLength& (0+255),b
   965  002BFC  0EBC               	movlw	188
   966  002BFE  0100               	movlb	0	; () banked
   967  002C00  6F7A               	movwf	CANsendMessage@flags& (0+255),b
   968  002C02  EC76  F006         	call	_CANsendMessage	;wreg free
   969  002C06                     l3739:
   970                           
   971                           ;sterzo.c: 163: }
   972                           ;sterzo.c: 164: remote_frame = 0;
   973  002C06  924B               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
   974  002C08  0012               	return	
   975  002C0A                     __end_of_send_data:
   976                           	opt stack 0
   977                           tblptru	equ	0xFF8
   978                           tblptrh	equ	0xFF7
   979                           tblptrl	equ	0xFF6
   980                           tablat	equ	0xFF5
   981                           postinc0	equ	0xFEE
   982                           wreg	equ	0xFE8
   983                           postdec1	equ	0xFE5
   984                           fsr1l	equ	0xFE1
   985                           status	equ	0xFD8
   986                           
   987 ;; *************** function _CANsendMessage *****************
   988 ;; Defined at:
   989 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  identifier      4   19[BANK0 ] unsigned long 
   992 ;;  data            2   23[BANK0 ] PTR unsigned char 
   993 ;;		 -> data_array(8), 
   994 ;;  dataLength      1   25[BANK0 ] unsigned char 
   995 ;;  flags           1   26[BANK0 ] enum E16866
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  tamp            4   31[BANK0 ] unsigned long 
   998 ;; Return value:  Size  Location     Type
   999 ;;		None               void
  1000 ;; Registers used:
  1001 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1007 ;;      Params:         0       8       0       0
  1008 ;;      Locals:         0       4       0       0
  1009 ;;      Temps:          0       4       0       0
  1010 ;;      Totals:         0      16       0       0
  1011 ;;Total ram usage:       16 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    4
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		_send_data
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text2
  1022  000CEC                     __ptext2:
  1023                           	opt stack 0
  1024  000CEC                     _CANsendMessage:
  1025                           	opt stack 25
  1026                           
  1027                           ;inc\CANlib.h: 297: unsigned long tamp;
  1028                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  1029                           
  1030                           ;incstack = 0
  1031  000CEC  010F               	movlb	15	; () banked
  1032  000CEE  B740               	btfsc	64,3,b	;volatile
  1033  000CF0  D13F               	goto	l349
  1034                           
  1035                           ; BSR set to: 15
  1036                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  1037  000CF2  C079  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1038                           
  1039                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  1040  000CF6  0100               	movlb	0	; () banked
  1041  000CF8  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1042  000CFA  D003               	goto	l350
  1043                           
  1044                           ; BSR set to: 0
  1045                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  1046  000CFC  010F               	movlb	15	; () banked
  1047  000CFE  8D45               	bsf	69,6,b	;volatile
  1048  000D00  D002               	goto	l351
  1049  000D02                     l350:
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;inc\CANlib.h: 303: else
  1053                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  1054  000D02  010F               	movlb	15	; () banked
  1055  000D04  9D45               	bcf	69,6,b	;volatile
  1056  000D06                     l351:
  1057                           
  1058                           ; BSR set to: 15
  1059                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  1060  000D06  0100               	movlb	0	; () banked
  1061  000D08  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1062  000D0A  D079               	goto	l352
  1063                           
  1064                           ; BSR set to: 0
  1065                           ;inc\CANlib.h: 307: {
  1066                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  1067  000D0C  0100               	movlb	0	; () banked
  1068  000D0E  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1069  000D10  0100               	movlb	0	; () banked
  1070  000D12  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1071  000D14  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1072  000D16  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1073  000D18  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  1077  000D1A  C07F  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  1081  000D1E  0E00               	movlw	0
  1082  000D20  0100               	movlb	0	; () banked
  1083  000D22  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1084  000D24  0100               	movlb	0	; () banked
  1085  000D26  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1086  000D28  0EFF               	movlw	255
  1087  000D2A  0100               	movlb	0	; () banked
  1088  000D2C  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1089  000D2E  0100               	movlb	0	; () banked
  1090  000D30  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1091  000D32  0E00               	movlw	0
  1092  000D34  0100               	movlb	0	; () banked
  1093  000D36  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1094  000D38  0100               	movlb	0	; () banked
  1095  000D3A  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1096  000D3C  0E00               	movlw	0
  1097  000D3E  0100               	movlb	0	; () banked
  1098  000D40  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1099  000D42  0100               	movlb	0	; () banked
  1100  000D44  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  1104  000D46  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1105  000D4A  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1106  000D4E  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1107  000D52  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1108  000D56  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1109  000D5A  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1110  000D5E  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1111  000D62  0100               	movlb	0	; () banked
  1112  000D64  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1113  000D66  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1114  000D6A  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1115  000D6E  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1116  000D72  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  1120  000D76  C07F  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  1124  000D7A  0E00               	movlw	0
  1125  000D7C  010F               	movlb	15	; () banked
  1126  000D7E  6F42               	movwf	66,b	;volatile
  1127                           
  1128                           ; BSR set to: 15
  1129                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  1130  000D80  010F               	movlb	15	; () banked
  1131  000D82  8742               	bsf	66,3,b	;volatile
  1132                           
  1133                           ; BSR set to: 15
  1134                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  1135  000D84  0100               	movlb	0	; () banked
  1136  000D86  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1137  000D88  D002               	goto	l353
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  1141  000D8A  010F               	movlb	15	; () banked
  1142  000D8C  8142               	bsf	66,0,b	;volatile
  1143  000D8E                     l353:
  1144                           
  1145                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  1146  000D8E  0100               	movlb	0	; () banked
  1147  000D90  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1148  000D92  D002               	goto	l354
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  1152  000D94  010F               	movlb	15	; () banked
  1153  000D96  8342               	bsf	66,1,b	;volatile
  1154  000D98                     l354:
  1155                           
  1156                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  1157  000D98  0100               	movlb	0	; () banked
  1158  000D9A  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1159  000D9C  D002               	goto	l355
  1160                           
  1161                           ; BSR set to: 0
  1162                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  1163  000D9E  010F               	movlb	15	; () banked
  1164  000DA0  8B42               	bsf	66,5,b	;volatile
  1165  000DA2                     l355:
  1166                           
  1167                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  1168  000DA2  0100               	movlb	0	; () banked
  1169  000DA4  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1170  000DA6  D002               	goto	l356
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  1174  000DA8  010F               	movlb	15	; () banked
  1175  000DAA  8D42               	bsf	66,6,b	;volatile
  1176  000DAC                     l356:
  1177                           
  1178                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  1179  000DAC  0100               	movlb	0	; () banked
  1180  000DAE  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1181  000DB0  D002               	goto	l3227
  1182                           
  1183                           ; BSR set to: 0
  1184                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  1185  000DB2  010F               	movlb	15	; () banked
  1186  000DB4  8F42               	bsf	66,7,b	;volatile
  1187  000DB6                     l3227:
  1188                           
  1189                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  1190  000DB6  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1191  000DBA  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1192  000DBE  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1193  000DC2  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1194  000DC6  0E16               	movlw	22
  1195  000DC8  D006               	goto	u3590
  1196  000DCA                     u3595:
  1197  000DCA  0100               	movlb	0	; () banked
  1198  000DCC  90D8               	bcf	status,0,c
  1199  000DCE  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1200  000DD0  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1201  000DD2  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1202  000DD4  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1203  000DD6                     u3590:
  1204  000DD6  2EE8               	decfsz	wreg,f,c
  1205  000DD8  D7F8               	goto	u3595
  1206  000DDA  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1207  000DDE  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1208  000DE2  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1209  000DE6  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  1213  000DEA  0100               	movlb	0	; () banked
  1214  000DEC  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1215  000DEE  0100               	movlb	0	; () banked
  1216  000DF0  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1217  000DF2  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1218  000DF4  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1219  000DF6  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  1223  000DF8  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1224                           
  1225                           ;inc\CANlib.h: 333: }
  1226  000DFC  D059               	goto	l3247
  1227  000DFE                     l352:
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;inc\CANlib.h: 335: else
  1231                           ;inc\CANlib.h: 337: {
  1232                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  1233  000DFE  010F               	movlb	15	; () banked
  1234  000E00  9742               	bcf	66,3,b	;volatile
  1235                           
  1236                           ; BSR set to: 15
  1237                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  1238  000E02  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1239  000E06  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1240  000E0A  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1241  000E0E  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1242  000E12  0E04               	movlw	4
  1243  000E14  D006               	goto	u3600
  1244  000E16                     u3605:
  1245  000E16  0100               	movlb	0	; () banked
  1246  000E18  90D8               	bcf	status,0,c
  1247  000E1A  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1248  000E1C  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1249  000E1E  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1250  000E20  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1251  000E22                     u3600:
  1252  000E22  2EE8               	decfsz	wreg,f,c
  1253  000E24  D7F8               	goto	u3605
  1254  000E26  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1255  000E2A  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1256  000E2E  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1257  000E32  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  1261  000E36  0100               	movlb	0	; () banked
  1262  000E38  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1263  000E3A  0100               	movlb	0	; () banked
  1264  000E3C  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1265  000E3E  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1266  000E40  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1267  000E42  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1268                           
  1269                           ; BSR set to: 0
  1270                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  1271  000E44  C07F  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  1275  000E48  0E07               	movlw	7
  1276  000E4A  0100               	movlb	0	; () banked
  1277  000E4C  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1278  000E4E  0100               	movlb	0	; () banked
  1279  000E50  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1280  000E52  0E00               	movlw	0
  1281  000E54  0100               	movlb	0	; () banked
  1282  000E56  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1283  000E58  0100               	movlb	0	; () banked
  1284  000E5A  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1285  000E5C  0E00               	movlw	0
  1286  000E5E  0100               	movlb	0	; () banked
  1287  000E60  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1288  000E62  0100               	movlb	0	; () banked
  1289  000E64  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1290  000E66  0E00               	movlw	0
  1291  000E68  0100               	movlb	0	; () banked
  1292  000E6A  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1293  000E6C  0100               	movlb	0	; () banked
  1294  000E6E  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  1298  000E70  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1299  000E74  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1300  000E78  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1301  000E7C  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1302  000E80  0E05               	movlw	5
  1303  000E82                     u3615:
  1304  000E82  90D8               	bcf	status,0,c
  1305  000E84  0100               	movlb	0	; () banked
  1306  000E86  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1307  000E88  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1308  000E8A  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1309  000E8C  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1310  000E8E  2EE8               	decfsz	wreg,f,c
  1311  000E90  D7F8               	goto	u3615
  1312  000E92  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1313  000E96  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1314  000E9A  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1315  000E9E  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  1319  000EA2  010F               	movlb	15	; () banked
  1320  000EA4  5142               	movf	66,w,b	;volatile
  1321  000EA6  0B1F               	andlw	31
  1322  000EA8  010F               	movlb	15	; () banked
  1323  000EAA  6F42               	movwf	66,b	;volatile
  1324                           
  1325                           ; BSR set to: 15
  1326                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  1327  000EAC  C07F  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1328  000EB0                     l3247:
  1329                           
  1330                           ;inc\CANlib.h: 348: }
  1331                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  1332  000EB0  0100               	movlb	0	; () banked
  1333  000EB2  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1334  000EB4  D003               	goto	l359
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  1338  000EB6  010F               	movlb	15	; () banked
  1339  000EB8  8140               	bsf	64,0,b	;volatile
  1340  000EBA  D002               	goto	l360
  1341  000EBC                     l359:
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;inc\CANlib.h: 352: else
  1345                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  1346  000EBC  010F               	movlb	15	; () banked
  1347  000EBE  9140               	bcf	64,0,b	;volatile
  1348  000EC0                     l360:
  1349                           
  1350                           ; BSR set to: 15
  1351                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  1352  000EC0  0100               	movlb	0	; () banked
  1353  000EC2  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1354  000EC4  D003               	goto	l361
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  1358  000EC6  010F               	movlb	15	; () banked
  1359  000EC8  8340               	bsf	64,1,b	;volatile
  1360  000ECA  D002               	goto	l3253
  1361  000ECC                     l361:
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;inc\CANlib.h: 356: else
  1365                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  1366  000ECC  010F               	movlb	15	; () banked
  1367  000ECE  9340               	bcf	64,1,b	;volatile
  1368  000ED0                     l3253:
  1369                           
  1370                           ; BSR set to: 15
  1371                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  1372  000ED0  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1373  000ED4  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1374  000ED8  50DF               	movf	indf2,w,c
  1375  000EDA  010F               	movlb	15	; () banked
  1376  000EDC  6F46               	movwf	70,b	;volatile
  1377                           
  1378                           ; BSR set to: 15
  1379                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  1380  000EDE  0100               	movlb	0	; () banked
  1381  000EE0  EE20 F001          	lfsr	2,1
  1382  000EE4  5177               	movf	CANsendMessage@data& (0+255),w,b
  1383  000EE6  26D9               	addwf	fsr2l,f,c
  1384  000EE8  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1385  000EEA  22DA               	addwfc	fsr2h,f,c
  1386  000EEC  50DF               	movf	indf2,w,c
  1387  000EEE  010F               	movlb	15	; () banked
  1388  000EF0  6F47               	movwf	71,b	;volatile
  1389                           
  1390                           ; BSR set to: 15
  1391                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  1392  000EF2  0100               	movlb	0	; () banked
  1393  000EF4  EE20 F002          	lfsr	2,2
  1394  000EF8  5177               	movf	CANsendMessage@data& (0+255),w,b
  1395  000EFA  26D9               	addwf	fsr2l,f,c
  1396  000EFC  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1397  000EFE  22DA               	addwfc	fsr2h,f,c
  1398  000F00  50DF               	movf	indf2,w,c
  1399  000F02  010F               	movlb	15	; () banked
  1400  000F04  6F48               	movwf	72,b	;volatile
  1401                           
  1402                           ; BSR set to: 15
  1403                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  1404  000F06  0100               	movlb	0	; () banked
  1405  000F08  EE20 F003          	lfsr	2,3
  1406  000F0C  5177               	movf	CANsendMessage@data& (0+255),w,b
  1407  000F0E  26D9               	addwf	fsr2l,f,c
  1408  000F10  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1409  000F12  22DA               	addwfc	fsr2h,f,c
  1410  000F14  50DF               	movf	indf2,w,c
  1411  000F16  010F               	movlb	15	; () banked
  1412  000F18  6F49               	movwf	73,b	;volatile
  1413                           
  1414                           ; BSR set to: 15
  1415                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  1416  000F1A  0100               	movlb	0	; () banked
  1417  000F1C  EE20 F004          	lfsr	2,4
  1418  000F20  5177               	movf	CANsendMessage@data& (0+255),w,b
  1419  000F22  26D9               	addwf	fsr2l,f,c
  1420  000F24  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1421  000F26  22DA               	addwfc	fsr2h,f,c
  1422  000F28  50DF               	movf	indf2,w,c
  1423  000F2A  010F               	movlb	15	; () banked
  1424  000F2C  6F4A               	movwf	74,b	;volatile
  1425                           
  1426                           ; BSR set to: 15
  1427                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  1428  000F2E  0100               	movlb	0	; () banked
  1429  000F30  EE20 F005          	lfsr	2,5
  1430  000F34  5177               	movf	CANsendMessage@data& (0+255),w,b
  1431  000F36  26D9               	addwf	fsr2l,f,c
  1432  000F38  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1433  000F3A  22DA               	addwfc	fsr2h,f,c
  1434  000F3C  50DF               	movf	indf2,w,c
  1435  000F3E  010F               	movlb	15	; () banked
  1436  000F40  6F4B               	movwf	75,b	;volatile
  1437                           
  1438                           ; BSR set to: 15
  1439                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  1440  000F42  0100               	movlb	0	; () banked
  1441  000F44  EE20 F006          	lfsr	2,6
  1442  000F48  5177               	movf	CANsendMessage@data& (0+255),w,b
  1443  000F4A  26D9               	addwf	fsr2l,f,c
  1444  000F4C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1445  000F4E  22DA               	addwfc	fsr2h,f,c
  1446  000F50  50DF               	movf	indf2,w,c
  1447  000F52  010F               	movlb	15	; () banked
  1448  000F54  6F4C               	movwf	76,b	;volatile
  1449                           
  1450                           ; BSR set to: 15
  1451                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  1452  000F56  0100               	movlb	0	; () banked
  1453  000F58  EE20 F007          	lfsr	2,7
  1454  000F5C  5177               	movf	CANsendMessage@data& (0+255),w,b
  1455  000F5E  26D9               	addwf	fsr2l,f,c
  1456  000F60  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1457  000F62  22DA               	addwfc	fsr2h,f,c
  1458  000F64  50DF               	movf	indf2,w,c
  1459  000F66  010F               	movlb	15	; () banked
  1460  000F68  6F4D               	movwf	77,b	;volatile
  1461                           
  1462                           ; BSR set to: 15
  1463                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  1464  000F6A  010F               	movlb	15	; () banked
  1465  000F6C  8740               	bsf	64,3,b	;volatile
  1466                           
  1467                           ; BSR set to: 15
  1468                           ;inc\CANlib.h: 369: return;
  1469  000F6E  0012               	return	
  1470  000F70                     l349:
  1471                           
  1472                           ; BSR set to: 15
  1473                           ;inc\CANlib.h: 370: }
  1474                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  1475  000F70  010F               	movlb	15	; () banked
  1476  000F72  B730               	btfsc	48,3,b	;volatile
  1477  000F74  D13F               	goto	l364
  1478                           
  1479                           ; BSR set to: 15
  1480                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  1481  000F76  C079  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  1482                           
  1483                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  1484  000F7A  0100               	movlb	0	; () banked
  1485  000F7C  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1486  000F7E  D003               	goto	l365
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  1490  000F80  010F               	movlb	15	; () banked
  1491  000F82  8D35               	bsf	53,6,b	;volatile
  1492  000F84  D002               	goto	l366
  1493  000F86                     l365:
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;inc\CANlib.h: 379: else
  1497                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  1498  000F86  010F               	movlb	15	; () banked
  1499  000F88  9D35               	bcf	53,6,b	;volatile
  1500  000F8A                     l366:
  1501                           
  1502                           ; BSR set to: 15
  1503                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  1504  000F8A  0100               	movlb	0	; () banked
  1505  000F8C  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1506  000F8E  D079               	goto	l367
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;inc\CANlib.h: 383: {
  1510                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  1511  000F90  0100               	movlb	0	; () banked
  1512  000F92  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1513  000F94  0100               	movlb	0	; () banked
  1514  000F96  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1515  000F98  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1516  000F9A  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1517  000F9C  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  1521  000F9E  C07F  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  1525  000FA2  0E00               	movlw	0
  1526  000FA4  0100               	movlb	0	; () banked
  1527  000FA6  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1528  000FA8  0100               	movlb	0	; () banked
  1529  000FAA  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1530  000FAC  0EFF               	movlw	255
  1531  000FAE  0100               	movlb	0	; () banked
  1532  000FB0  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1533  000FB2  0100               	movlb	0	; () banked
  1534  000FB4  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1535  000FB6  0E00               	movlw	0
  1536  000FB8  0100               	movlb	0	; () banked
  1537  000FBA  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1538  000FBC  0100               	movlb	0	; () banked
  1539  000FBE  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1540  000FC0  0E00               	movlw	0
  1541  000FC2  0100               	movlb	0	; () banked
  1542  000FC4  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1543  000FC6  0100               	movlb	0	; () banked
  1544  000FC8  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  1548  000FCA  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1549  000FCE  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1550  000FD2  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1551  000FD6  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1552  000FDA  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1553  000FDE  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1554  000FE2  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1555  000FE6  0100               	movlb	0	; () banked
  1556  000FE8  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  1557  000FEA  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1558  000FEE  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1559  000FF2  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1560  000FF6  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  1564  000FFA  C07F  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  1568  000FFE  0E00               	movlw	0
  1569  001000  010F               	movlb	15	; () banked
  1570  001002  6F32               	movwf	50,b	;volatile
  1571                           
  1572                           ; BSR set to: 15
  1573                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  1574  001004  010F               	movlb	15	; () banked
  1575  001006  8732               	bsf	50,3,b	;volatile
  1576                           
  1577                           ; BSR set to: 15
  1578                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  1579  001008  0100               	movlb	0	; () banked
  1580  00100A  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1581  00100C  D002               	goto	l368
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  1585  00100E  010F               	movlb	15	; () banked
  1586  001010  8132               	bsf	50,0,b	;volatile
  1587  001012                     l368:
  1588                           
  1589                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  1590  001012  0100               	movlb	0	; () banked
  1591  001014  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1592  001016  D002               	goto	l369
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  1596  001018  010F               	movlb	15	; () banked
  1597  00101A  8332               	bsf	50,1,b	;volatile
  1598  00101C                     l369:
  1599                           
  1600                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  1601  00101C  0100               	movlb	0	; () banked
  1602  00101E  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1603  001020  D002               	goto	l370
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  1607  001022  010F               	movlb	15	; () banked
  1608  001024  8B32               	bsf	50,5,b	;volatile
  1609  001026                     l370:
  1610                           
  1611                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  1612  001026  0100               	movlb	0	; () banked
  1613  001028  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1614  00102A  D002               	goto	l371
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  1618  00102C  010F               	movlb	15	; () banked
  1619  00102E  8D32               	bsf	50,6,b	;volatile
  1620  001030                     l371:
  1621                           
  1622                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  1623  001030  0100               	movlb	0	; () banked
  1624  001032  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1625  001034  D002               	goto	l3303
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  1629  001036  010F               	movlb	15	; () banked
  1630  001038  8F32               	bsf	50,7,b	;volatile
  1631  00103A                     l3303:
  1632                           
  1633                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  1634  00103A  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1635  00103E  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1636  001042  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1637  001046  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1638  00104A  0E16               	movlw	22
  1639  00104C  D006               	goto	u3720
  1640  00104E                     u3725:
  1641  00104E  0100               	movlb	0	; () banked
  1642  001050  90D8               	bcf	status,0,c
  1643  001052  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1644  001054  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1645  001056  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1646  001058  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1647  00105A                     u3720:
  1648  00105A  2EE8               	decfsz	wreg,f,c
  1649  00105C  D7F8               	goto	u3725
  1650  00105E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1651  001062  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1652  001066  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1653  00106A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  1657  00106E  0100               	movlb	0	; () banked
  1658  001070  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1659  001072  0100               	movlb	0	; () banked
  1660  001074  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1661  001076  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1662  001078  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1663  00107A  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1664                           
  1665                           ; BSR set to: 0
  1666                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  1667  00107C  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1668                           
  1669                           ;inc\CANlib.h: 408: }
  1670  001080  D059               	goto	l3323
  1671  001082                     l367:
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;inc\CANlib.h: 410: else
  1675                           ;inc\CANlib.h: 412: {
  1676                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  1677  001082  010F               	movlb	15	; () banked
  1678  001084  9732               	bcf	50,3,b	;volatile
  1679                           
  1680                           ; BSR set to: 15
  1681                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  1682  001086  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  1683  00108A  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1684  00108E  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1685  001092  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1686  001096  0E04               	movlw	4
  1687  001098  D006               	goto	u3730
  1688  00109A                     u3735:
  1689  00109A  0100               	movlb	0	; () banked
  1690  00109C  90D8               	bcf	status,0,c
  1691  00109E  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1692  0010A0  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1693  0010A2  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1694  0010A4  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  1695  0010A6                     u3730:
  1696  0010A6  2EE8               	decfsz	wreg,f,c
  1697  0010A8  D7F8               	goto	u3735
  1698  0010AA  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1699  0010AE  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1700  0010B2  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1701  0010B6  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  1705  0010BA  0100               	movlb	0	; () banked
  1706  0010BC  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  1707  0010BE  0100               	movlb	0	; () banked
  1708  0010C0  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1709  0010C2  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1710  0010C4  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1711  0010C6  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  1715  0010C8  C07F  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  1719  0010CC  0E07               	movlw	7
  1720  0010CE  0100               	movlb	0	; () banked
  1721  0010D0  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1722  0010D2  0100               	movlb	0	; () banked
  1723  0010D4  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1724  0010D6  0E00               	movlw	0
  1725  0010D8  0100               	movlb	0	; () banked
  1726  0010DA  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1727  0010DC  0100               	movlb	0	; () banked
  1728  0010DE  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1729  0010E0  0E00               	movlw	0
  1730  0010E2  0100               	movlb	0	; () banked
  1731  0010E4  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1732  0010E6  0100               	movlb	0	; () banked
  1733  0010E8  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1734  0010EA  0E00               	movlw	0
  1735  0010EC  0100               	movlb	0	; () banked
  1736  0010EE  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1737  0010F0  0100               	movlb	0	; () banked
  1738  0010F2  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  1742  0010F4  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1743  0010F8  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1744  0010FC  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1745  001100  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1746  001104  0E05               	movlw	5
  1747  001106                     u3745:
  1748  001106  90D8               	bcf	status,0,c
  1749  001108  0100               	movlb	0	; () banked
  1750  00110A  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  1751  00110C  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1752  00110E  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1753  001110  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1754  001112  2EE8               	decfsz	wreg,f,c
  1755  001114  D7F8               	goto	u3745
  1756  001116  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  1757  00111A  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1758  00111E  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1759  001122  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  1763  001126  010F               	movlb	15	; () banked
  1764  001128  5132               	movf	50,w,b	;volatile
  1765  00112A  0B1F               	andlw	31
  1766  00112C  010F               	movlb	15	; () banked
  1767  00112E  6F32               	movwf	50,b	;volatile
  1768                           
  1769                           ; BSR set to: 15
  1770                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  1771  001130  C07F  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  1772  001134                     l3323:
  1773                           
  1774                           ;inc\CANlib.h: 423: }
  1775                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  1776  001134  0100               	movlb	0	; () banked
  1777  001136  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  1778  001138  D003               	goto	l374
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  1782  00113A  010F               	movlb	15	; () banked
  1783  00113C  8130               	bsf	48,0,b	;volatile
  1784  00113E  D002               	goto	l375
  1785  001140                     l374:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;inc\CANlib.h: 427: else
  1789                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  1790  001140  010F               	movlb	15	; () banked
  1791  001142  9130               	bcf	48,0,b	;volatile
  1792  001144                     l375:
  1793                           
  1794                           ; BSR set to: 15
  1795                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  1796  001144  0100               	movlb	0	; () banked
  1797  001146  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  1798  001148  D003               	goto	l376
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  1802  00114A  010F               	movlb	15	; () banked
  1803  00114C  8330               	bsf	48,1,b	;volatile
  1804  00114E  D002               	goto	l3329
  1805  001150                     l376:
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;inc\CANlib.h: 431: else
  1809                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  1810  001150  010F               	movlb	15	; () banked
  1811  001152  9330               	bcf	48,1,b	;volatile
  1812  001154                     l3329:
  1813                           
  1814                           ; BSR set to: 15
  1815                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  1816  001154  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  1817  001158  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1818  00115C  50DF               	movf	indf2,w,c
  1819  00115E  010F               	movlb	15	; () banked
  1820  001160  6F36               	movwf	54,b	;volatile
  1821                           
  1822                           ; BSR set to: 15
  1823                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  1824  001162  0100               	movlb	0	; () banked
  1825  001164  EE20 F001          	lfsr	2,1
  1826  001168  5177               	movf	CANsendMessage@data& (0+255),w,b
  1827  00116A  26D9               	addwf	fsr2l,f,c
  1828  00116C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1829  00116E  22DA               	addwfc	fsr2h,f,c
  1830  001170  50DF               	movf	indf2,w,c
  1831  001172  010F               	movlb	15	; () banked
  1832  001174  6F37               	movwf	55,b	;volatile
  1833                           
  1834                           ; BSR set to: 15
  1835                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  1836  001176  0100               	movlb	0	; () banked
  1837  001178  EE20 F002          	lfsr	2,2
  1838  00117C  5177               	movf	CANsendMessage@data& (0+255),w,b
  1839  00117E  26D9               	addwf	fsr2l,f,c
  1840  001180  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1841  001182  22DA               	addwfc	fsr2h,f,c
  1842  001184  50DF               	movf	indf2,w,c
  1843  001186  010F               	movlb	15	; () banked
  1844  001188  6F38               	movwf	56,b	;volatile
  1845                           
  1846                           ; BSR set to: 15
  1847                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  1848  00118A  0100               	movlb	0	; () banked
  1849  00118C  EE20 F003          	lfsr	2,3
  1850  001190  5177               	movf	CANsendMessage@data& (0+255),w,b
  1851  001192  26D9               	addwf	fsr2l,f,c
  1852  001194  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1853  001196  22DA               	addwfc	fsr2h,f,c
  1854  001198  50DF               	movf	indf2,w,c
  1855  00119A  010F               	movlb	15	; () banked
  1856  00119C  6F39               	movwf	57,b	;volatile
  1857                           
  1858                           ; BSR set to: 15
  1859                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  1860  00119E  0100               	movlb	0	; () banked
  1861  0011A0  EE20 F004          	lfsr	2,4
  1862  0011A4  5177               	movf	CANsendMessage@data& (0+255),w,b
  1863  0011A6  26D9               	addwf	fsr2l,f,c
  1864  0011A8  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1865  0011AA  22DA               	addwfc	fsr2h,f,c
  1866  0011AC  50DF               	movf	indf2,w,c
  1867  0011AE  010F               	movlb	15	; () banked
  1868  0011B0  6F3A               	movwf	58,b	;volatile
  1869                           
  1870                           ; BSR set to: 15
  1871                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  1872  0011B2  0100               	movlb	0	; () banked
  1873  0011B4  EE20 F005          	lfsr	2,5
  1874  0011B8  5177               	movf	CANsendMessage@data& (0+255),w,b
  1875  0011BA  26D9               	addwf	fsr2l,f,c
  1876  0011BC  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1877  0011BE  22DA               	addwfc	fsr2h,f,c
  1878  0011C0  50DF               	movf	indf2,w,c
  1879  0011C2  010F               	movlb	15	; () banked
  1880  0011C4  6F3B               	movwf	59,b	;volatile
  1881                           
  1882                           ; BSR set to: 15
  1883                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  1884  0011C6  0100               	movlb	0	; () banked
  1885  0011C8  EE20 F006          	lfsr	2,6
  1886  0011CC  5177               	movf	CANsendMessage@data& (0+255),w,b
  1887  0011CE  26D9               	addwf	fsr2l,f,c
  1888  0011D0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1889  0011D2  22DA               	addwfc	fsr2h,f,c
  1890  0011D4  50DF               	movf	indf2,w,c
  1891  0011D6  010F               	movlb	15	; () banked
  1892  0011D8  6F3C               	movwf	60,b	;volatile
  1893                           
  1894                           ; BSR set to: 15
  1895                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  1896  0011DA  0100               	movlb	0	; () banked
  1897  0011DC  EE20 F007          	lfsr	2,7
  1898  0011E0  5177               	movf	CANsendMessage@data& (0+255),w,b
  1899  0011E2  26D9               	addwf	fsr2l,f,c
  1900  0011E4  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1901  0011E6  22DA               	addwfc	fsr2h,f,c
  1902  0011E8  50DF               	movf	indf2,w,c
  1903  0011EA  010F               	movlb	15	; () banked
  1904  0011EC  6F3D               	movwf	61,b	;volatile
  1905                           
  1906                           ; BSR set to: 15
  1907                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  1908  0011EE  010F               	movlb	15	; () banked
  1909  0011F0  8730               	bsf	48,3,b	;volatile
  1910                           
  1911                           ; BSR set to: 15
  1912                           ;inc\CANlib.h: 445: return;
  1913  0011F2  0012               	return	
  1914  0011F4                     l364:
  1915                           
  1916                           ; BSR set to: 15
  1917                           ;inc\CANlib.h: 446: }
  1918                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  1919  0011F4  010F               	movlb	15	; () banked
  1920  0011F6  B720               	btfsc	32,3,b	;volatile
  1921  0011F8  0012               	return	
  1922                           
  1923                           ; BSR set to: 15
  1924                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  1925  0011FA  C079  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  1926                           
  1927                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  1928  0011FE  0100               	movlb	0	; () banked
  1929  001200  AD7A               	btfss	CANsendMessage@flags& (0+255),6,b
  1930  001202  D003               	goto	l379
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  1934  001204  010F               	movlb	15	; () banked
  1935  001206  8D25               	bsf	37,6,b	;volatile
  1936  001208  D002               	goto	l380
  1937  00120A                     l379:
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;inc\CANlib.h: 455: else
  1941                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  1942  00120A  010F               	movlb	15	; () banked
  1943  00120C  9D25               	bcf	37,6,b	;volatile
  1944  00120E                     l380:
  1945                           
  1946                           ; BSR set to: 15
  1947                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  1948  00120E  0100               	movlb	0	; () banked
  1949  001210  A77A               	btfss	CANsendMessage@flags& (0+255),3,b
  1950  001212  D079               	goto	l381
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;inc\CANlib.h: 459: {
  1954                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  1955  001214  0100               	movlb	0	; () banked
  1956  001216  5173               	movf	CANsendMessage@identifier& (0+255),w,b
  1957  001218  0100               	movlb	0	; () banked
  1958  00121A  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1959  00121C  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1960  00121E  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1961  001220  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  1965  001222  C07F  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  1969  001226  0E00               	movlw	0
  1970  001228  0100               	movlb	0	; () banked
  1971  00122A  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  1972  00122C  0100               	movlb	0	; () banked
  1973  00122E  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  1974  001230  0EFF               	movlw	255
  1975  001232  0100               	movlb	0	; () banked
  1976  001234  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1977  001236  0100               	movlb	0	; () banked
  1978  001238  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1979  00123A  0E00               	movlw	0
  1980  00123C  0100               	movlb	0	; () banked
  1981  00123E  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1982  001240  0100               	movlb	0	; () banked
  1983  001242  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1984  001244  0E00               	movlw	0
  1985  001246  0100               	movlb	0	; () banked
  1986  001248  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1987  00124A  0100               	movlb	0	; () banked
  1988  00124C  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  1992  00124E  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  1993  001252  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1994  001256  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1995  00125A  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1996  00125E  C07C  F07B         	movff	??_CANsendMessage+1,??_CANsendMessage
  1997  001262  C07D  F07C         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1998  001266  C07E  F07D         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1999  00126A  0100               	movlb	0	; () banked
  2000  00126C  6B7E               	clrf	(??_CANsendMessage+3)& (0+255),b
  2001  00126E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2002  001272  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2003  001276  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2004  00127A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  2008  00127E  C07F  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  2012  001282  0E00               	movlw	0
  2013  001284  010F               	movlb	15	; () banked
  2014  001286  6F22               	movwf	34,b	;volatile
  2015                           
  2016                           ; BSR set to: 15
  2017                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  2018  001288  010F               	movlb	15	; () banked
  2019  00128A  8722               	bsf	34,3,b	;volatile
  2020                           
  2021                           ; BSR set to: 15
  2022                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  2023  00128C  0100               	movlb	0	; () banked
  2024  00128E  A175               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2025  001290  D002               	goto	l382
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  2029  001292  010F               	movlb	15	; () banked
  2030  001294  8122               	bsf	34,0,b	;volatile
  2031  001296                     l382:
  2032                           
  2033                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  2034  001296  0100               	movlb	0	; () banked
  2035  001298  A375               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2036  00129A  D002               	goto	l383
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  2040  00129C  010F               	movlb	15	; () banked
  2041  00129E  8322               	bsf	34,1,b	;volatile
  2042  0012A0                     l383:
  2043                           
  2044                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  2045  0012A0  0100               	movlb	0	; () banked
  2046  0012A2  A575               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2047  0012A4  D002               	goto	l384
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  2051  0012A6  010F               	movlb	15	; () banked
  2052  0012A8  8B22               	bsf	34,5,b	;volatile
  2053  0012AA                     l384:
  2054                           
  2055                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  2056  0012AA  0100               	movlb	0	; () banked
  2057  0012AC  A775               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2058  0012AE  D002               	goto	l385
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  2062  0012B0  010F               	movlb	15	; () banked
  2063  0012B2  8D22               	bsf	34,6,b	;volatile
  2064  0012B4                     l385:
  2065                           
  2066                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  2067  0012B4  0100               	movlb	0	; () banked
  2068  0012B6  A975               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2069  0012B8  D002               	goto	l3379
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  2073  0012BA  010F               	movlb	15	; () banked
  2074  0012BC  8F22               	bsf	34,7,b	;volatile
  2075  0012BE                     l3379:
  2076                           
  2077                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  2078  0012BE  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2079  0012C2  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2080  0012C6  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2081  0012CA  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2082  0012CE  0E16               	movlw	22
  2083  0012D0  D006               	goto	u3850
  2084  0012D2                     u3855:
  2085  0012D2  0100               	movlb	0	; () banked
  2086  0012D4  90D8               	bcf	status,0,c
  2087  0012D6  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2088  0012D8  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2089  0012DA  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2090  0012DC  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2091  0012DE                     u3850:
  2092  0012DE  2EE8               	decfsz	wreg,f,c
  2093  0012E0  D7F8               	goto	u3855
  2094  0012E2  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2095  0012E6  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2096  0012EA  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2097  0012EE  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  2101  0012F2  0100               	movlb	0	; () banked
  2102  0012F4  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2103  0012F6  0100               	movlb	0	; () banked
  2104  0012F8  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2105  0012FA  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2106  0012FC  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2107  0012FE  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  2111  001300  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2112                           
  2113                           ;inc\CANlib.h: 484: }
  2114  001304  D059               	goto	l3399
  2115  001306                     l381:
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;inc\CANlib.h: 486: else
  2119                           ;inc\CANlib.h: 488: {
  2120                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  2121  001306  010F               	movlb	15	; () banked
  2122  001308  9722               	bcf	34,3,b	;volatile
  2123                           
  2124                           ; BSR set to: 15
  2125                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  2126  00130A  C073  F07B         	movff	CANsendMessage@identifier,??_CANsendMessage
  2127  00130E  C074  F07C         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2128  001312  C075  F07D         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2129  001316  C076  F07E         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2130  00131A  0E04               	movlw	4
  2131  00131C  D006               	goto	u3860
  2132  00131E                     u3865:
  2133  00131E  0100               	movlb	0	; () banked
  2134  001320  90D8               	bcf	status,0,c
  2135  001322  337E               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2136  001324  337D               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2137  001326  337C               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2138  001328  337B               	rrcf	??_CANsendMessage& (0+255),f,b
  2139  00132A                     u3860:
  2140  00132A  2EE8               	decfsz	wreg,f,c
  2141  00132C  D7F8               	goto	u3865
  2142  00132E  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2143  001332  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2144  001336  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2145  00133A  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  2149  00133E  0100               	movlb	0	; () banked
  2150  001340  517F               	movf	CANsendMessage@tamp& (0+255),w,b
  2151  001342  0100               	movlb	0	; () banked
  2152  001344  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2153  001346  6B80               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2154  001348  6B81               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2155  00134A  6B82               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  2159  00134C  C07F  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  2163  001350  0E07               	movlw	7
  2164  001352  0100               	movlb	0	; () banked
  2165  001354  1573               	andwf	CANsendMessage@identifier& (0+255),w,b
  2166  001356  0100               	movlb	0	; () banked
  2167  001358  6F7F               	movwf	CANsendMessage@tamp& (0+255),b
  2168  00135A  0E00               	movlw	0
  2169  00135C  0100               	movlb	0	; () banked
  2170  00135E  1574               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2171  001360  0100               	movlb	0	; () banked
  2172  001362  6F80               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2173  001364  0E00               	movlw	0
  2174  001366  0100               	movlb	0	; () banked
  2175  001368  1575               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2176  00136A  0100               	movlb	0	; () banked
  2177  00136C  6F81               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2178  00136E  0E00               	movlw	0
  2179  001370  0100               	movlb	0	; () banked
  2180  001372  1576               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2181  001374  0100               	movlb	0	; () banked
  2182  001376  6F82               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  2186  001378  C07F  F07B         	movff	CANsendMessage@tamp,??_CANsendMessage
  2187  00137C  C080  F07C         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2188  001380  C081  F07D         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2189  001384  C082  F07E         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2190  001388  0E05               	movlw	5
  2191  00138A                     u3875:
  2192  00138A  90D8               	bcf	status,0,c
  2193  00138C  0100               	movlb	0	; () banked
  2194  00138E  377B               	rlcf	??_CANsendMessage& (0+255),f,b
  2195  001390  377C               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2196  001392  377D               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2197  001394  377E               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2198  001396  2EE8               	decfsz	wreg,f,c
  2199  001398  D7F8               	goto	u3875
  2200  00139A  C07B  F07F         	movff	??_CANsendMessage,CANsendMessage@tamp
  2201  00139E  C07C  F080         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2202  0013A2  C07D  F081         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2203  0013A6  C07E  F082         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  2207  0013AA  010F               	movlb	15	; () banked
  2208  0013AC  5122               	movf	34,w,b	;volatile
  2209  0013AE  0B1F               	andlw	31
  2210  0013B0  010F               	movlb	15	; () banked
  2211  0013B2  6F22               	movwf	34,b	;volatile
  2212                           
  2213                           ; BSR set to: 15
  2214                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  2215  0013B4  C07F  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2216  0013B8                     l3399:
  2217                           
  2218                           ;inc\CANlib.h: 499: }
  2219                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  2220  0013B8  0100               	movlb	0	; () banked
  2221  0013BA  A17A               	btfss	CANsendMessage@flags& (0+255),0,b
  2222  0013BC  D003               	goto	l388
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  2226  0013BE  010F               	movlb	15	; () banked
  2227  0013C0  8120               	bsf	32,0,b	;volatile
  2228  0013C2  D002               	goto	l389
  2229  0013C4                     l388:
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;inc\CANlib.h: 503: else
  2233                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  2234  0013C4  010F               	movlb	15	; () banked
  2235  0013C6  9120               	bcf	32,0,b	;volatile
  2236  0013C8                     l389:
  2237                           
  2238                           ; BSR set to: 15
  2239                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  2240  0013C8  0100               	movlb	0	; () banked
  2241  0013CA  A37A               	btfss	CANsendMessage@flags& (0+255),1,b
  2242  0013CC  D003               	goto	l390
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  2246  0013CE  010F               	movlb	15	; () banked
  2247  0013D0  8320               	bsf	32,1,b	;volatile
  2248  0013D2  D002               	goto	l3405
  2249  0013D4                     l390:
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;inc\CANlib.h: 507: else
  2253                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  2254  0013D4  010F               	movlb	15	; () banked
  2255  0013D6  9320               	bcf	32,1,b	;volatile
  2256  0013D8                     l3405:
  2257                           
  2258                           ; BSR set to: 15
  2259                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  2260  0013D8  C077  FFD9         	movff	CANsendMessage@data,fsr2l
  2261  0013DC  C078  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2262  0013E0  50DF               	movf	indf2,w,c
  2263  0013E2  010F               	movlb	15	; () banked
  2264  0013E4  6F26               	movwf	38,b	;volatile
  2265                           
  2266                           ; BSR set to: 15
  2267                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  2268  0013E6  0100               	movlb	0	; () banked
  2269  0013E8  EE20 F001          	lfsr	2,1
  2270  0013EC  5177               	movf	CANsendMessage@data& (0+255),w,b
  2271  0013EE  26D9               	addwf	fsr2l,f,c
  2272  0013F0  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2273  0013F2  22DA               	addwfc	fsr2h,f,c
  2274  0013F4  50DF               	movf	indf2,w,c
  2275  0013F6  010F               	movlb	15	; () banked
  2276  0013F8  6F27               	movwf	39,b	;volatile
  2277                           
  2278                           ; BSR set to: 15
  2279                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  2280  0013FA  0100               	movlb	0	; () banked
  2281  0013FC  EE20 F002          	lfsr	2,2
  2282  001400  5177               	movf	CANsendMessage@data& (0+255),w,b
  2283  001402  26D9               	addwf	fsr2l,f,c
  2284  001404  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2285  001406  22DA               	addwfc	fsr2h,f,c
  2286  001408  50DF               	movf	indf2,w,c
  2287  00140A  010F               	movlb	15	; () banked
  2288  00140C  6F28               	movwf	40,b	;volatile
  2289                           
  2290                           ; BSR set to: 15
  2291                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  2292  00140E  0100               	movlb	0	; () banked
  2293  001410  EE20 F003          	lfsr	2,3
  2294  001414  5177               	movf	CANsendMessage@data& (0+255),w,b
  2295  001416  26D9               	addwf	fsr2l,f,c
  2296  001418  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2297  00141A  22DA               	addwfc	fsr2h,f,c
  2298  00141C  50DF               	movf	indf2,w,c
  2299  00141E  010F               	movlb	15	; () banked
  2300  001420  6F29               	movwf	41,b	;volatile
  2301                           
  2302                           ; BSR set to: 15
  2303                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  2304  001422  0100               	movlb	0	; () banked
  2305  001424  EE20 F004          	lfsr	2,4
  2306  001428  5177               	movf	CANsendMessage@data& (0+255),w,b
  2307  00142A  26D9               	addwf	fsr2l,f,c
  2308  00142C  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2309  00142E  22DA               	addwfc	fsr2h,f,c
  2310  001430  50DF               	movf	indf2,w,c
  2311  001432  010F               	movlb	15	; () banked
  2312  001434  6F2A               	movwf	42,b	;volatile
  2313                           
  2314                           ; BSR set to: 15
  2315                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  2316  001436  0100               	movlb	0	; () banked
  2317  001438  EE20 F005          	lfsr	2,5
  2318  00143C  5177               	movf	CANsendMessage@data& (0+255),w,b
  2319  00143E  26D9               	addwf	fsr2l,f,c
  2320  001440  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2321  001442  22DA               	addwfc	fsr2h,f,c
  2322  001444  50DF               	movf	indf2,w,c
  2323  001446  010F               	movlb	15	; () banked
  2324  001448  6F2B               	movwf	43,b	;volatile
  2325                           
  2326                           ; BSR set to: 15
  2327                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  2328  00144A  0100               	movlb	0	; () banked
  2329  00144C  EE20 F006          	lfsr	2,6
  2330  001450  5177               	movf	CANsendMessage@data& (0+255),w,b
  2331  001452  26D9               	addwf	fsr2l,f,c
  2332  001454  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2333  001456  22DA               	addwfc	fsr2h,f,c
  2334  001458  50DF               	movf	indf2,w,c
  2335  00145A  010F               	movlb	15	; () banked
  2336  00145C  6F2C               	movwf	44,b	;volatile
  2337                           
  2338                           ; BSR set to: 15
  2339                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  2340  00145E  0100               	movlb	0	; () banked
  2341  001460  EE20 F007          	lfsr	2,7
  2342  001464  5177               	movf	CANsendMessage@data& (0+255),w,b
  2343  001466  26D9               	addwf	fsr2l,f,c
  2344  001468  5178               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2345  00146A  22DA               	addwfc	fsr2h,f,c
  2346  00146C  50DF               	movf	indf2,w,c
  2347  00146E  010F               	movlb	15	; () banked
  2348  001470  6F2D               	movwf	45,b	;volatile
  2349                           
  2350                           ; BSR set to: 15
  2351                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  2352  001472  010F               	movlb	15	; () banked
  2353  001474  8720               	bsf	32,3,b	;volatile
  2354                           
  2355                           ; BSR set to: 15
  2356                           ;inc\CANlib.h: 521: return;
  2357  001476  0012               	return	
  2358  001478                     __end_of_CANsendMessage:
  2359                           	opt stack 0
  2360                           tblptru	equ	0xFF8
  2361                           tblptrh	equ	0xFF7
  2362                           tblptrl	equ	0xFF6
  2363                           tablat	equ	0xFF5
  2364                           postinc0	equ	0xFEE
  2365                           wreg	equ	0xFE8
  2366                           postdec1	equ	0xFE5
  2367                           fsr1l	equ	0xFE1
  2368                           indf2	equ	0xFDF
  2369                           fsr2h	equ	0xFDA
  2370                           fsr2l	equ	0xFD9
  2371                           status	equ	0xFD8
  2372                           
  2373 ;; *************** function _CANisTxReady *****************
  2374 ;; Defined at:
  2375 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      unsigned char 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2389 ;;      Params:         0       0       0       0
  2390 ;;      Locals:         0       1       0       0
  2391 ;;      Temps:          0       0       0       0
  2392 ;;      Totals:         0       1       0       0
  2393 ;;Total ram usage:        1 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    4
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_send_data
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text3
  2404  002CA0                     __ptext3:
  2405                           	opt stack 0
  2406  002CA0                     _CANisTxReady:
  2407                           	opt stack 25
  2408                           
  2409                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  2410                           
  2411                           ; BSR set to: 15
  2412                           ;incstack = 0
  2413  002CA0  0E01               	movlw	1
  2414  002CA2  0100               	movlb	0	; () banked
  2415  002CA4  6F73               	movwf	_CANisTxReady$2823& (0+255),b
  2416                           
  2417                           ; BSR set to: 0
  2418  002CA6  010F               	movlb	15	; () banked
  2419  002CA8  A740               	btfss	64,3,b	;volatile
  2420  002CAA  D009               	goto	l542
  2421                           
  2422                           ; BSR set to: 15
  2423  002CAC  010F               	movlb	15	; () banked
  2424  002CAE  A730               	btfss	48,3,b	;volatile
  2425  002CB0  D006               	goto	l542
  2426                           
  2427                           ; BSR set to: 15
  2428  002CB2  010F               	movlb	15	; () banked
  2429  002CB4  A720               	btfss	32,3,b	;volatile
  2430  002CB6  D003               	goto	l542
  2431                           
  2432                           ; BSR set to: 15
  2433  002CB8  0E00               	movlw	0
  2434  002CBA  0100               	movlb	0	; () banked
  2435  002CBC  6F73               	movwf	_CANisTxReady$2823& (0+255),b
  2436  002CBE                     l542:
  2437  002CBE  0100               	movlb	0	; () banked
  2438  002CC0  5173               	movf	_CANisTxReady$2823& (0+255),w,b
  2439  002CC2  0012               	return	
  2440  002CC4                     __end_of_CANisTxReady:
  2441                           	opt stack 0
  2442                           tblptru	equ	0xFF8
  2443                           tblptrh	equ	0xFF7
  2444                           tblptrl	equ	0xFF6
  2445                           tablat	equ	0xFF5
  2446                           postinc0	equ	0xFEE
  2447                           wreg	equ	0xFE8
  2448                           postdec1	equ	0xFE5
  2449                           fsr1l	equ	0xFE1
  2450                           indf2	equ	0xFDF
  2451                           fsr2h	equ	0xFDA
  2452                           fsr2l	equ	0xFD9
  2453                           status	equ	0xFD8
  2454                           
  2455 ;; *************** function _delay_ms *****************
  2456 ;; Defined at:
  2457 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  value_ms        2   25[BANK0 ] unsigned int 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;		None               void
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2471 ;;      Params:         0       2       0       0
  2472 ;;      Locals:         0       0       0       0
  2473 ;;      Temps:          0       0       0       0
  2474 ;;      Totals:         0       2       0       0
  2475 ;;Total ram usage:        2 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    5
  2478 ;; This function calls:
  2479 ;;		___wmul
  2480 ;; This function is called by:
  2481 ;;		_main
  2482 ;;		_delay_s
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text4
  2487  002C0A                     __ptext4:
  2488                           	opt stack 0
  2489  002C0A                     _delay_ms:
  2490                           	opt stack 25
  2491                           
  2492                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;incstack = 0
  2496  002C0A  C09F  F073         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  2497  002C0E  0100               	movlb	0	; () banked
  2498  002C10  6B74               	clrf	(___wmul@multiplier+1)& (0+255),b
  2499  002C12  C079  F075         	movff	delay_ms@value_ms,___wmul@multiplicand
  2500  002C16  C07A  F076         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  2501  002C1A  EC22  F016         	call	___wmul	;wreg free
  2502  002C1E  C073  F09D         	movff	?___wmul,_clock_counter_reference	;volatile
  2503  002C22  C074  F09E         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  2504                           
  2505                           ;src\delay.c: 75: while (clock_counter_reference) {
  2506  002C26  D007               	goto	l555
  2507  002C28                     l3665:
  2508                           
  2509                           ;src\delay.c: 85: _delay(240);
  2510  002C28  0E50               	movlw	80
  2511  002C2A                     u5037:
  2512  002C2A  2EE8               	decfsz	wreg,f,c
  2513  002C2C  D7FE               	goto	u5037
  2514                           
  2515                           ;src\delay.c: 88: clock_counter_reference--;
  2516  002C2E  0100               	movlb	0	; () banked
  2517  002C30  079D               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  2518  002C32  A0D8               	btfss	status,0,c
  2519  002C34  079E               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  2520  002C36                     l555:
  2521  002C36  0100               	movlb	0	; () banked
  2522  002C38  519D               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  2523  002C3A  0100               	movlb	0	; () banked
  2524  002C3C  119E               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  2525  002C3E  B4D8               	btfsc	status,2,c
  2526  002C40  0012               	return	
  2527  002C42  D7F2               	goto	l3665
  2528  002C44                     __end_of_delay_ms:
  2529                           	opt stack 0
  2530                           tblptru	equ	0xFF8
  2531                           tblptrh	equ	0xFF7
  2532                           tblptrl	equ	0xFF6
  2533                           tablat	equ	0xFF5
  2534                           postinc0	equ	0xFEE
  2535                           wreg	equ	0xFE8
  2536                           postdec1	equ	0xFE5
  2537                           fsr1l	equ	0xFE1
  2538                           indf2	equ	0xFDF
  2539                           fsr2h	equ	0xFDA
  2540                           fsr2l	equ	0xFD9
  2541                           status	equ	0xFD8
  2542                           
  2543 ;; *************** function ___wmul *****************
  2544 ;; Defined at:
  2545 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  multiplier      2   19[BANK0 ] unsigned int 
  2548 ;;  multiplicand    2   21[BANK0 ] unsigned int 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  product         2   23[BANK0 ] unsigned int 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  2   19[BANK0 ] unsigned int 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0, prodl, prodh
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2560 ;;      Params:         0       4       0       0
  2561 ;;      Locals:         0       2       0       0
  2562 ;;      Temps:          0       0       0       0
  2563 ;;      Totals:         0       6       0       0
  2564 ;;Total ram usage:        6 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    4
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_delay_ms
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           	psect	text5
  2575  002C44                     __ptext5:
  2576                           	opt stack 0
  2577  002C44                     ___wmul:
  2578                           	opt stack 25
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;incstack = 0
  2582  002C44  0100               	movlb	0	; () banked
  2583  002C46  5173               	movf	___wmul@multiplier& (0+255),w,b
  2584  002C48  0100               	movlb	0	; () banked
  2585  002C4A  0375               	mulwf	___wmul@multiplicand& (0+255),b
  2586  002C4C  CFF3 F077          	movff	prodl,___wmul@product
  2587  002C50  CFF4 F078          	movff	prodh,___wmul@product+1
  2588  002C54  0100               	movlb	0	; () banked
  2589  002C56  5173               	movf	___wmul@multiplier& (0+255),w,b
  2590  002C58  0100               	movlb	0	; () banked
  2591  002C5A  0376               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2592  002C5C  50F3               	movf	prodl,w,c
  2593  002C5E  0100               	movlb	0	; () banked
  2594  002C60  2778               	addwf	(___wmul@product+1)& (0+255),f,b
  2595  002C62  0100               	movlb	0	; () banked
  2596  002C64  5174               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2597  002C66  0100               	movlb	0	; () banked
  2598  002C68  0375               	mulwf	___wmul@multiplicand& (0+255),b
  2599  002C6A  50F3               	movf	prodl,w,c
  2600  002C6C  0100               	movlb	0	; () banked
  2601  002C6E  2778               	addwf	(___wmul@product+1)& (0+255),f,b
  2602                           
  2603                           ; BSR set to: 0
  2604  002C70  C077  F073         	movff	___wmul@product,?___wmul
  2605  002C74  C078  F074         	movff	___wmul@product+1,?___wmul+1
  2606  002C78  0012               	return	
  2607  002C7A                     __end_of___wmul:
  2608                           	opt stack 0
  2609                           tblptru	equ	0xFF8
  2610                           tblptrh	equ	0xFF7
  2611                           tblptrl	equ	0xFF6
  2612                           tablat	equ	0xFF5
  2613                           prodh	equ	0xFF4
  2614                           prodl	equ	0xFF3
  2615                           postinc0	equ	0xFEE
  2616                           wreg	equ	0xFE8
  2617                           postdec1	equ	0xFE5
  2618                           fsr1l	equ	0xFE1
  2619                           indf2	equ	0xFDF
  2620                           fsr2h	equ	0xFDA
  2621                           fsr2l	equ	0xFD9
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _configurazione_iniziale *****************
  2625 ;; Defined at:
  2626 ;;		line 183 in file "sterzo.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;		None               void
  2633 ;; Registers used:
  2634 ;;		wreg, status,2, status,0, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2640 ;;      Params:         0       0       0       0
  2641 ;;      Locals:         0       0       0       0
  2642 ;;      Temps:          0       0       0       0
  2643 ;;      Totals:         0       0       0       0
  2644 ;;Total ram usage:        0 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    6
  2647 ;; This function calls:
  2648 ;;		_CANInitialize
  2649 ;;		_OpenADC
  2650 ;; This function is called by:
  2651 ;;		_main
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text6
  2656  00293C                     __ptext6:
  2657                           	opt stack 0
  2658  00293C                     _configurazione_iniziale:
  2659                           	opt stack 24
  2660                           
  2661                           ;sterzo.c: 188: RCONbits.IPEN = 1;
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;incstack = 0
  2665  00293C  8ED0               	bsf	4048,7,c	;volatile
  2666                           
  2667                           ;sterzo.c: 189: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  2668  00293E  0E06               	movlw	6
  2669  002940  0100               	movlb	0	; () banked
  2670  002942  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2671  002944  0E05               	movlw	5
  2672  002946  0100               	movlb	0	; () banked
  2673  002948  6F82               	movwf	CANInitialize@phaseSeg2& (0+255),b
  2674  00294A  0E01               	movlw	1
  2675  00294C  0100               	movlb	0	; () banked
  2676  00294E  6F83               	movwf	CANInitialize@SJW& (0+255),b
  2677  002950  0E03               	movlw	3
  2678  002952  0100               	movlb	0	; () banked
  2679  002954  6F84               	movwf	CANInitialize@BRP& (0+255),b
  2680  002956  0E9D               	movlw	157
  2681  002958  0100               	movlb	0	; () banked
  2682  00295A  6F85               	movwf	CANInitialize@flags& (0+255),b
  2683  00295C  0E04               	movlw	4
  2684  00295E  ECD9  F011         	call	_CANInitialize
  2685                           
  2686                           ;sterzo.c: 194: PIR3bits.RXB1IF = 0;
  2687  002962  92A4               	bcf	4004,1,c	;volatile
  2688                           
  2689                           ;sterzo.c: 195: PIR3bits.RXB0IF = 0;
  2690  002964  90A4               	bcf	4004,0,c	;volatile
  2691                           
  2692                           ;sterzo.c: 196: INTCONbits.TMR0IF = 0;
  2693  002966  94F2               	bcf	intcon,2,c	;volatile
  2694                           
  2695                           ;sterzo.c: 202: IPR3bits.RXB1IP = 0;
  2696  002968  92A5               	bcf	4005,1,c	;volatile
  2697                           
  2698                           ;sterzo.c: 203: IPR3bits.RXB0IP = 0;
  2699  00296A  90A5               	bcf	4005,0,c	;volatile
  2700                           
  2701                           ;sterzo.c: 204: INTCON2bits.TMR0IP = 1;
  2702  00296C  84F1               	bsf	intcon2,2,c	;volatile
  2703                           
  2704                           ;sterzo.c: 210: RCONbits.IPEN = 1;
  2705  00296E  8ED0               	bsf	4048,7,c	;volatile
  2706                           
  2707                           ;sterzo.c: 211: PIE3bits.RXB1IE = 1;
  2708  002970  82A3               	bsf	4003,1,c	;volatile
  2709                           
  2710                           ;sterzo.c: 212: PIE3bits.RXB0IE = 1;
  2711  002972  80A3               	bsf	4003,0,c	;volatile
  2712                           
  2713                           ;sterzo.c: 213: INTCONbits.TMR0IE = 1;
  2714  002974  8AF2               	bsf	intcon,5,c	;volatile
  2715                           
  2716                           ;sterzo.c: 215: INTCONbits.GIEH = 1;
  2717  002976  8EF2               	bsf	intcon,7,c	;volatile
  2718                           
  2719                           ;sterzo.c: 216: INTCONbits.GIEL = 1;
  2720  002978  8CF2               	bsf	intcon,6,c	;volatile
  2721                           
  2722                           ;sterzo.c: 222: OpenADC(0b11011111 & 0b11111111 & 0b11111101, 0b10000111 & 0b11111100 & 
      +                          0b01111111, 0b11111110);
  2723  00297A  0E04               	movlw	4
  2724  00297C  0100               	movlb	0	; () banked
  2725  00297E  6F73               	movwf	OpenADC@config2& (0+255),b
  2726  002980  0EFE               	movlw	254
  2727  002982  0100               	movlb	0	; () banked
  2728  002984  6F74               	movwf	OpenADC@portconfig& (0+255),b
  2729  002986  0EDD               	movlw	221
  2730  002988  ECDE  F014         	call	_OpenADC
  2731                           
  2732                           ;sterzo.c: 228: T0CONbits.TMR0ON = 1;
  2733  00298C  8ED5               	bsf	4053,7,c	;volatile
  2734                           
  2735                           ;sterzo.c: 229: PORTCbits.RC0 = 0;
  2736  00298E  9082               	bcf	3970,0,c	;volatile
  2737                           
  2738                           ;sterzo.c: 233: LATA = 0x00;
  2739  002990  0E00               	movlw	0
  2740  002992  6E89               	movwf	3977,c	;volatile
  2741                           
  2742                           ;sterzo.c: 234: TRISA = 0b11111101;
  2743  002994  0EFD               	movlw	253
  2744  002996  6E92               	movwf	3986,c	;volatile
  2745                           
  2746                           ;sterzo.c: 236: LATB = 0x00;
  2747  002998  0E00               	movlw	0
  2748  00299A  6E8A               	movwf	3978,c	;volatile
  2749                           
  2750                           ;sterzo.c: 237: TRISB = 0b11111011;
  2751  00299C  0EFB               	movlw	251
  2752  00299E  6E93               	movwf	3987,c	;volatile
  2753                           
  2754                           ;sterzo.c: 239: LATC = 0x00;
  2755  0029A0  0E00               	movlw	0
  2756  0029A2  6E8B               	movwf	3979,c	;volatile
  2757                           
  2758                           ;sterzo.c: 240: TRISC = 0x00;
  2759  0029A4  0E00               	movlw	0
  2760  0029A6  6E94               	movwf	3988,c	;volatile
  2761                           
  2762                           ;sterzo.c: 242: LATD = 0x00;
  2763  0029A8  0E00               	movlw	0
  2764  0029AA  6E8C               	movwf	3980,c	;volatile
  2765                           
  2766                           ;sterzo.c: 243: TRISD = 0x00;
  2767  0029AC  0E00               	movlw	0
  2768  0029AE  6E95               	movwf	3989,c	;volatile
  2769                           
  2770                           ;sterzo.c: 245: LATE = 0x00;
  2771  0029B0  0E00               	movlw	0
  2772  0029B2  6E8D               	movwf	3981,c	;volatile
  2773                           
  2774                           ;sterzo.c: 246: TRISE = 0xFF;
  2775  0029B4  6896               	setf	3990,c	;volatile
  2776                           
  2777                           ;sterzo.c: 247: T0CON = 0x80;
  2778  0029B6  0E80               	movlw	128
  2779  0029B8  6ED5               	movwf	4053,c	;volatile
  2780  0029BA  0012               	return		;funcret
  2781  0029BC                     __end_of_configurazione_iniziale:
  2782                           	opt stack 0
  2783                           tblptru	equ	0xFF8
  2784                           tblptrh	equ	0xFF7
  2785                           tblptrl	equ	0xFF6
  2786                           tablat	equ	0xFF5
  2787                           prodh	equ	0xFF4
  2788                           prodl	equ	0xFF3
  2789                           intcon	equ	0xFF2
  2790                           intcon2	equ	0xFF1
  2791                           postinc0	equ	0xFEE
  2792                           wreg	equ	0xFE8
  2793                           postdec1	equ	0xFE5
  2794                           fsr1l	equ	0xFE1
  2795                           indf2	equ	0xFDF
  2796                           fsr2h	equ	0xFDA
  2797                           fsr2l	equ	0xFD9
  2798                           status	equ	0xFD8
  2799                           
  2800 ;; *************** function _OpenADC *****************
  2801 ;; Defined at:
  2802 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcopen.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  config          1    wreg     unsigned char 
  2805 ;;  config2         1   19[BANK0 ] unsigned char 
  2806 ;;  portconfig      1   20[BANK0 ] unsigned char 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  config          1   23[BANK0 ] unsigned char 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;		None               void
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2818 ;;      Params:         0       2       0       0
  2819 ;;      Locals:         0       1       0       0
  2820 ;;      Temps:          0       2       0       0
  2821 ;;      Totals:         0       5       0       0
  2822 ;;Total ram usage:        5 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    4
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_configurazione_iniziale
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text7
  2833  0029BC                     __ptext7:
  2834                           	opt stack 0
  2835  0029BC                     _OpenADC:
  2836                           	opt stack 25
  2837                           
  2838                           ;incstack = 0
  2839                           ;OpenADC@config stored from wreg
  2840  0029BC  0100               	movlb	0	; () banked
  2841  0029BE  6F77               	movwf	OpenADC@config& (0+255),b
  2842  0029C0  0E00               	movlw	0
  2843  0029C2  6EC2               	movwf	4034,c	;volatile
  2844  0029C4  0E00               	movlw	0
  2845  0029C6  6EC0               	movwf	4032,c	;volatile
  2846  0029C8  0100               	movlb	0	; () banked
  2847  0029CA  90D8               	bcf	status,0,c
  2848  0029CC  3173               	rrcf	OpenADC@config2& (0+255),w,b
  2849  0029CE  0B3C               	andlw	60
  2850  0029D0  6EC2               	movwf	4034,c	;volatile
  2851                           
  2852                           ; BSR set to: 0
  2853  0029D2  C073  F075         	movff	OpenADC@config2,??_OpenADC
  2854  0029D6  0100               	movlb	0	; () banked
  2855  0029D8  3B75               	swapf	??_OpenADC& (0+255),f,b
  2856  0029DA  0EF0               	movlw	240
  2857  0029DC  1775               	andwf	??_OpenADC& (0+255),f,b
  2858  0029DE  0E30               	movlw	48
  2859  0029E0  0100               	movlb	0	; () banked
  2860  0029E2  1775               	andwf	??_OpenADC& (0+255),f,b
  2861  0029E4  0100               	movlb	0	; () banked
  2862  0029E6  5174               	movf	OpenADC@portconfig& (0+255),w,b
  2863  0029E8  0B0F               	andlw	15
  2864  0029EA  0100               	movlb	0	; () banked
  2865  0029EC  1175               	iorwf	??_OpenADC& (0+255),w,b
  2866  0029EE  6EC1               	movwf	4033,c	;volatile
  2867                           
  2868                           ; BSR set to: 0
  2869  0029F0  C077  F075         	movff	OpenADC@config,??_OpenADC
  2870  0029F4  0100               	movlb	0	; () banked
  2871  0029F6  90D8               	bcf	status,0,c
  2872  0029F8  3775               	rlcf	??_OpenADC& (0+255),f,b
  2873  0029FA  0100               	movlb	0	; () banked
  2874  0029FC  90D8               	bcf	status,0,c
  2875  0029FE  3775               	rlcf	??_OpenADC& (0+255),f,b
  2876  002A00  0E38               	movlw	56
  2877  002A02  0100               	movlb	0	; () banked
  2878  002A04  1775               	andwf	??_OpenADC& (0+255),f,b
  2879  002A06  C077  F076         	movff	OpenADC@config,??_OpenADC+1
  2880  002A0A  0100               	movlb	0	; () banked
  2881  002A0C  3B76               	swapf	(??_OpenADC+1)& (0+255),f,b
  2882  002A0E  0E0F               	movlw	15
  2883  002A10  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  2884  002A12  0E07               	movlw	7
  2885  002A14  0100               	movlb	0	; () banked
  2886  002A16  1776               	andwf	(??_OpenADC+1)& (0+255),f,b
  2887  002A18  0100               	movlb	0	; () banked
  2888  002A1A  5177               	movf	OpenADC@config& (0+255),w,b
  2889  002A1C  0B80               	andlw	128
  2890  002A1E  0100               	movlb	0	; () banked
  2891  002A20  1176               	iorwf	(??_OpenADC+1)& (0+255),w,b
  2892  002A22  0100               	movlb	0	; () banked
  2893  002A24  1175               	iorwf	??_OpenADC& (0+255),w,b
  2894  002A26  6EC0               	movwf	4032,c	;volatile
  2895                           
  2896                           ; BSR set to: 0
  2897  002A28  0100               	movlb	0	; () banked
  2898  002A2A  AF73               	btfss	OpenADC@config2& (0+255),7,b
  2899  002A2C  D003               	goto	l662
  2900                           
  2901                           ; BSR set to: 0
  2902  002A2E  9C9E               	bcf	3998,6,c	;volatile
  2903  002A30  8C9D               	bsf	3997,6,c	;volatile
  2904  002A32  8CF2               	bsf	intcon,6,c	;volatile
  2905  002A34                     l662:
  2906                           
  2907                           ; BSR set to: 0
  2908  002A34  80C2               	bsf	4034,0,c	;volatile
  2909                           
  2910                           ; BSR set to: 0
  2911  002A36  0012               	return		;funcret
  2912  002A38                     __end_of_OpenADC:
  2913                           	opt stack 0
  2914                           tblptru	equ	0xFF8
  2915                           tblptrh	equ	0xFF7
  2916                           tblptrl	equ	0xFF6
  2917                           tablat	equ	0xFF5
  2918                           prodh	equ	0xFF4
  2919                           prodl	equ	0xFF3
  2920                           intcon	equ	0xFF2
  2921                           intcon2	equ	0xFF1
  2922                           postinc0	equ	0xFEE
  2923                           wreg	equ	0xFE8
  2924                           postdec1	equ	0xFE5
  2925                           fsr1l	equ	0xFE1
  2926                           indf2	equ	0xFDF
  2927                           fsr2h	equ	0xFDA
  2928                           fsr2l	equ	0xFD9
  2929                           status	equ	0xFD8
  2930                           
  2931 ;; *************** function _CANInitialize *****************
  2932 ;; Defined at:
  2933 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  propSeg         1    wreg     unsigned char 
  2936 ;;  phaseSeg1       1   33[BANK0 ] unsigned char 
  2937 ;;  phaseSeg2       1   34[BANK0 ] unsigned char 
  2938 ;;  SJW             1   35[BANK0 ] unsigned char 
  2939 ;;  BRP             1   36[BANK0 ] unsigned char 
  2940 ;;  flags           1   37[BANK0 ] enum E16844
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  propSeg         1   42[BANK0 ] unsigned char 
  2943 ;;  FilterConfig    1   44[BANK0 ] unsigned char 
  2944 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;		None               void
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2954 ;;      Params:         0       5       0       0
  2955 ;;      Locals:         0       3       0       0
  2956 ;;      Temps:          0       4       0       0
  2957 ;;      Totals:         0      12       0       0
  2958 ;;Total ram usage:       12 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    5
  2961 ;; This function calls:
  2962 ;;		_CANOperationMode
  2963 ;;		_CANSetFilter
  2964 ;;		_CANSetMask
  2965 ;; This function is called by:
  2966 ;;		_configurazione_iniziale
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           	psect	text8
  2971  0023B2                     __ptext8:
  2972                           	opt stack 0
  2973  0023B2                     _CANInitialize:
  2974                           	opt stack 24
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;incstack = 0
  2978                           ;CANInitialize@propSeg stored from wreg
  2979  0023B2  0100               	movlb	0	; () banked
  2980  0023B4  6F8A               	movwf	CANInitialize@propSeg& (0+255),b
  2981                           
  2982                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
  2983                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
  2984                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
  2985  0023B6  0E80               	movlw	128
  2986  0023B8  EC62  F016         	call	_CANOperationMode
  2987                           
  2988                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
  2989  0023BC  0E00               	movlw	0
  2990  0023BE  6E70               	movwf	3952,c	;volatile
  2991                           
  2992                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
  2993  0023C0  0E00               	movlw	0
  2994  0023C2  6E71               	movwf	3953,c	;volatile
  2995                           
  2996                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
  2997  0023C4  0E00               	movlw	0
  2998  0023C6  6E72               	movwf	3954,c	;volatile
  2999                           
  3000                           ;inc\CANlib.h: 230: SJW= SJW << 6;
  3001  0023C8  0100               	movlb	0	; () banked
  3002  0023CA  4183               	rrncf	CANInitialize@SJW& (0+255),w,b
  3003  0023CC  42E8               	rrncf	wreg,f,c
  3004  0023CE  0BC0               	andlw	192
  3005  0023D0  0100               	movlb	0	; () banked
  3006  0023D2  6F83               	movwf	CANInitialize@SJW& (0+255),b
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
  3010  0023D4  0100               	movlb	0	; () banked
  3011  0023D6  5183               	movf	CANInitialize@SJW& (0+255),w,b
  3012  0023D8  1270               	iorwf	3952,f,c	;volatile
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
  3016  0023DA  0100               	movlb	0	; () banked
  3017  0023DC  5184               	movf	CANInitialize@BRP& (0+255),w,b
  3018  0023DE  1270               	iorwf	3952,f,c	;volatile
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
  3022  0023E0  0100               	movlb	0	; () banked
  3023  0023E2  518A               	movf	CANInitialize@propSeg& (0+255),w,b
  3024  0023E4  1271               	iorwf	3953,f,c	;volatile
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
  3028  0023E6  0100               	movlb	0	; () banked
  3029  0023E8  3981               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3030  0023EA  42E8               	rrncf	wreg,f,c
  3031  0023EC  0BF8               	andlw	248
  3032  0023EE  0100               	movlb	0	; () banked
  3033  0023F0  6F81               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
  3037  0023F2  0100               	movlb	0	; () banked
  3038  0023F4  5181               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3039  0023F6  1271               	iorwf	3953,f,c	;volatile
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3043  0023F8  0100               	movlb	0	; () banked
  3044  0023FA  A585               	btfss	CANInitialize@flags& (0+255),2,b
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
  3048  0023FC  8C71               	bsf	3953,6,c	;volatile
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3052  0023FE  0100               	movlb	0	; () banked
  3053  002400  B185               	btfsc	CANInitialize@flags& (0+255),0,b
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
  3057  002402  8E71               	bsf	3953,7,c	;volatile
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
  3061                           
  3062                           ; BSR set to: 0
  3063  002404  0100               	movlb	0	; () banked
  3064  002406  5182               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3065  002408  1272               	iorwf	3954,f,c	;volatile
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3069  00240A  0100               	movlb	0	; () banked
  3070  00240C  B385               	btfsc	CANInitialize@flags& (0+255),1,b
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
  3074  00240E  8C72               	bsf	3954,6,c	;volatile
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3078                           
  3079                           ; BSR set to: 0
  3080  002410  0100               	movlb	0	; () banked
  3081  002412  5185               	movf	CANInitialize@flags& (0+255),w,b
  3082  002414  0B60               	andlw	96
  3083  002416  6E60               	movwf	3936,c	;volatile
  3084                           
  3085                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3086  002418  0100               	movlb	0	; () banked
  3087  00241A  5185               	movf	CANInitialize@flags& (0+255),w,b
  3088  00241C  0B10               	andlw	16
  3089  00241E  0AFF               	xorlw	255
  3090  002420  B4D8               	btfsc	status,2,c
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
  3094  002422  8460               	bsf	3936,2,c	;volatile
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
  3098  002424  CF60 FF50          	movff	3936,3920	;volatile
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3102  002428  0E00               	movlw	0
  3103  00242A  0100               	movlb	0	; () banked
  3104  00242C  6F73               	movwf	CANSetMask@mask& (0+255),b
  3105  00242E  0E00               	movlw	0
  3106  002430  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  3107  002432  0E00               	movlw	0
  3108  002434  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3109  002436  0E00               	movlw	0
  3110  002438  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3111  00243A  0EF7               	movlw	247
  3112  00243C  0100               	movlb	0	; () banked
  3113  00243E  6F77               	movwf	CANSetMask@type& (0+255),b
  3114  002440  0E01               	movlw	1
  3115  002442  EC0A  F010         	call	_CANSetMask
  3116                           
  3117                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3118  002446  0E00               	movlw	0
  3119  002448  0100               	movlb	0	; () banked
  3120  00244A  6F73               	movwf	CANSetMask@mask& (0+255),b
  3121  00244C  0E00               	movlw	0
  3122  00244E  6F74               	movwf	(CANSetMask@mask+1)& (0+255),b
  3123  002450  0E00               	movlw	0
  3124  002452  6F75               	movwf	(CANSetMask@mask+2)& (0+255),b
  3125  002454  0E00               	movlw	0
  3126  002456  6F76               	movwf	(CANSetMask@mask+3)& (0+255),b
  3127  002458  0EF7               	movlw	247
  3128  00245A  0100               	movlb	0	; () banked
  3129  00245C  6F77               	movwf	CANSetMask@type& (0+255),b
  3130  00245E  0E02               	movlw	2
  3131  002460  EC0A  F010         	call	_CANSetMask
  3132                           
  3133                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3134  002464  D00F               	goto	l3187
  3135  002466                     l3181:
  3136                           
  3137                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3138  002466  0EF7               	movlw	247
  3139  002468  0100               	movlb	0	; () banked
  3140  00246A  6F8B               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3141  00246C  D007               	goto	l3183
  3142  00246E                     l344:
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3146  00246E  0100               	movlb	0	; () banked
  3147  002470  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3148                           
  3149                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3150  002472  0100               	movlb	0	; () banked
  3151  002474  698C               	setf	CANInitialize@FilterConfig2& (0+255),b
  3152                           
  3153                           ;inc\CANlib.h: 274: break;
  3154  002476  D028               	goto	l3189
  3155  002478                     l345:
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3159  002478  0100               	movlb	0	; () banked
  3160  00247A  698B               	setf	CANInitialize@FilterConfig1& (0+255),b
  3161  00247C                     l3183:
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3165  00247C  0EF7               	movlw	247
  3166  00247E  0100               	movlb	0	; () banked
  3167  002480  6F8C               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;inc\CANlib.h: 279: }
  3171                           
  3172                           ;inc\CANlib.h: 278: break;
  3173  002482  D022               	goto	l3189
  3174  002484                     l3187:
  3175  002484  0E9F               	movlw	159
  3176  002486  0100               	movlb	0	; () banked
  3177  002488  6F86               	movwf	??_CANInitialize& (0+255),b
  3178  00248A  0EFF               	movlw	255
  3179  00248C  0100               	movlb	0	; () banked
  3180  00248E  6F87               	movwf	(??_CANInitialize+1)& (0+255),b
  3181  002490  0100               	movlb	0	; () banked
  3182  002492  5185               	movf	CANInitialize@flags& (0+255),w,b
  3183  002494  0B60               	andlw	96
  3184  002496  0100               	movlb	0	; () banked
  3185  002498  6F88               	movwf	(??_CANInitialize+2)& (0+255),b
  3186  00249A  6B89               	clrf	(??_CANInitialize+3)& (0+255),b
  3187  00249C  0100               	movlb	0	; () banked
  3188  00249E  5186               	movf	??_CANInitialize& (0+255),w,b
  3189  0024A0  0100               	movlb	0	; () banked
  3190  0024A2  1388               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3191  0024A4  0100               	movlb	0	; () banked
  3192  0024A6  5187               	movf	(??_CANInitialize+1)& (0+255),w,b
  3193  0024A8  0100               	movlb	0	; () banked
  3194  0024AA  1389               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3195                           
  3196                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3197                           ; Switch size 1, requested type "space"
  3198                           ; Number of cases is 1, Range of values is 0 to 0
  3199                           ; switch strategies available:
  3200                           ; Name         Instructions Cycles
  3201                           ; simple_byte            4     3 (average)
  3202                           ;	Chosen strategy is simple_byte
  3203  0024AC  0100               	movlb	0	; () banked
  3204  0024AE  5189               	movf	(??_CANInitialize+3)& (0+255),w,b
  3205  0024B0  0A00               	xorlw	0	; case 0
  3206  0024B2  A4D8               	btfss	status,2,c
  3207  0024B4  D7E1               	goto	l345
  3208                           
  3209                           ; BSR set to: 0
  3210                           ; Switch size 1, requested type "space"
  3211                           ; Number of cases is 2, Range of values is 191 to 223
  3212                           ; switch strategies available:
  3213                           ; Name         Instructions Cycles
  3214                           ; simple_byte            7     4 (average)
  3215                           ;	Chosen strategy is simple_byte
  3216  0024B6  0100               	movlb	0	; () banked
  3217  0024B8  5188               	movf	(??_CANInitialize+2)& (0+255),w,b
  3218  0024BA  0ABF               	xorlw	191	; case 191
  3219  0024BC  B4D8               	btfsc	status,2,c
  3220  0024BE  D7D7               	goto	l344
  3221  0024C0  0A60               	xorlw	96	; case 223
  3222  0024C2  B4D8               	btfsc	status,2,c
  3223  0024C4  D7D0               	goto	l3181
  3224  0024C6  D7D8               	goto	l345
  3225  0024C8                     l3189:
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3229  0024C8  0E00               	movlw	0
  3230  0024CA  0100               	movlb	0	; () banked
  3231  0024CC  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3232  0024CE  0E00               	movlw	0
  3233  0024D0  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3234  0024D2  0E00               	movlw	0
  3235  0024D4  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3236  0024D6  0E00               	movlw	0
  3237  0024D8  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3238  0024DA  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3239  0024DE  0E00               	movlw	0
  3240  0024E0  ECF3  F000         	call	_CANSetFilter
  3241                           
  3242                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3243  0024E4  0E00               	movlw	0
  3244  0024E6  0100               	movlb	0	; () banked
  3245  0024E8  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3246  0024EA  0E00               	movlw	0
  3247  0024EC  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3248  0024EE  0E00               	movlw	0
  3249  0024F0  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3250  0024F2  0E00               	movlw	0
  3251  0024F4  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3252  0024F6  C08B  F077         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3253  0024FA  0E01               	movlw	1
  3254  0024FC  ECF3  F000         	call	_CANSetFilter
  3255                           
  3256                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3257  002500  0E00               	movlw	0
  3258  002502  0100               	movlb	0	; () banked
  3259  002504  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3260  002506  0E00               	movlw	0
  3261  002508  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3262  00250A  0E00               	movlw	0
  3263  00250C  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3264  00250E  0E00               	movlw	0
  3265  002510  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3266  002512  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3267  002516  0E02               	movlw	2
  3268  002518  ECF3  F000         	call	_CANSetFilter
  3269                           
  3270                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3271  00251C  0E00               	movlw	0
  3272  00251E  0100               	movlb	0	; () banked
  3273  002520  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3274  002522  0E00               	movlw	0
  3275  002524  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3276  002526  0E00               	movlw	0
  3277  002528  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3278  00252A  0E00               	movlw	0
  3279  00252C  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3280  00252E  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3281  002532  0E03               	movlw	3
  3282  002534  ECF3  F000         	call	_CANSetFilter
  3283                           
  3284                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3285  002538  0E00               	movlw	0
  3286  00253A  0100               	movlb	0	; () banked
  3287  00253C  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3288  00253E  0E00               	movlw	0
  3289  002540  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3290  002542  0E00               	movlw	0
  3291  002544  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3292  002546  0E00               	movlw	0
  3293  002548  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3294  00254A  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3295  00254E  0E04               	movlw	4
  3296  002550  ECF3  F000         	call	_CANSetFilter
  3297                           
  3298                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3299  002554  0E00               	movlw	0
  3300  002556  0100               	movlb	0	; () banked
  3301  002558  6F73               	movwf	CANSetFilter@filter& (0+255),b
  3302  00255A  0E00               	movlw	0
  3303  00255C  6F74               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3304  00255E  0E00               	movlw	0
  3305  002560  6F75               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3306  002562  0E00               	movlw	0
  3307  002564  6F76               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3308  002566  C08C  F077         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3309  00256A  0E05               	movlw	5
  3310  00256C  ECF3  F000         	call	_CANSetFilter
  3311                           
  3312                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
  3313  002570  0E00               	movlw	0
  3314  002572  EC62  F016         	call	_CANOperationMode
  3315  002576  0012               	return		;funcret
  3316  002578                     __end_of_CANInitialize:
  3317                           	opt stack 0
  3318                           tblptru	equ	0xFF8
  3319                           tblptrh	equ	0xFF7
  3320                           tblptrl	equ	0xFF6
  3321                           tablat	equ	0xFF5
  3322                           prodh	equ	0xFF4
  3323                           prodl	equ	0xFF3
  3324                           intcon	equ	0xFF2
  3325                           intcon2	equ	0xFF1
  3326                           postinc0	equ	0xFEE
  3327                           wreg	equ	0xFE8
  3328                           postdec1	equ	0xFE5
  3329                           fsr1l	equ	0xFE1
  3330                           indf2	equ	0xFDF
  3331                           fsr2h	equ	0xFDA
  3332                           fsr2l	equ	0xFD9
  3333                           status	equ	0xFD8
  3334                           
  3335 ;; *************** function _CANSetMask *****************
  3336 ;; Defined at:
  3337 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  numBuffer       1    wreg     enum E16878
  3340 ;;  mask            4   19[BANK0 ] unsigned long 
  3341 ;;  type            1   23[BANK0 ] enum E16844
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  numBuffer       1   28[BANK0 ] enum E16878
  3344 ;;  tamp            4   29[BANK0 ] unsigned long 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;		None               void
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3354 ;;      Params:         0       5       0       0
  3355 ;;      Locals:         0       5       0       0
  3356 ;;      Temps:          0       4       0       0
  3357 ;;      Totals:         0      14       0       0
  3358 ;;Total ram usage:       14 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    4
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_CANInitialize
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text9
  3369  002014                     __ptext9:
  3370                           	opt stack 0
  3371  002014                     _CANSetMask:
  3372                           	opt stack 24
  3373                           
  3374                           ;incstack = 0
  3375                           ;CANSetMask@numBuffer stored from wreg
  3376  002014  0100               	movlb	0	; () banked
  3377  002016  6F7C               	movwf	CANSetMask@numBuffer& (0+255),b
  3378                           
  3379                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3380  002018  0100               	movlb	0	; () banked
  3381  00201A  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  3382  00201C  A4D8               	btfss	status,2,c
  3383  00201E  D056               	goto	l2751
  3384                           
  3385                           ; BSR set to: 0
  3386  002020  0100               	movlb	0	; () banked
  3387  002022  2977               	incf	CANSetMask@type& (0+255),w,b
  3388  002024  A4D8               	btfss	status,2,c
  3389  002026  D052               	goto	l2751
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;inc\CANlib.h: 645: {
  3393                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
  3394  002028  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3395  00202C  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3396  002030  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3397  002034  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3398  002038  0E04               	movlw	4
  3399  00203A  D006               	goto	u2530
  3400  00203C                     u2535:
  3401  00203C  0100               	movlb	0	; () banked
  3402  00203E  90D8               	bcf	status,0,c
  3403  002040  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3404  002042  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3405  002044  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3406  002046  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3407  002048                     u2530:
  3408  002048  2EE8               	decfsz	wreg,f,c
  3409  00204A  D7F8               	goto	u2535
  3410  00204C  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3411  002050  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3412  002054  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3413  002058  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
  3417  00205C  0100               	movlb	0	; () banked
  3418  00205E  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3419  002060  0100               	movlb	0	; () banked
  3420  002062  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3421  002064  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3422  002066  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3423  002068  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
  3427  00206A  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
  3431  00206E  0E07               	movlw	7
  3432  002070  0100               	movlb	0	; () banked
  3433  002072  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3434  002074  0100               	movlb	0	; () banked
  3435  002076  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3436  002078  0E00               	movlw	0
  3437  00207A  0100               	movlb	0	; () banked
  3438  00207C  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3439  00207E  0100               	movlb	0	; () banked
  3440  002080  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3441  002082  0E00               	movlw	0
  3442  002084  0100               	movlb	0	; () banked
  3443  002086  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3444  002088  0100               	movlb	0	; () banked
  3445  00208A  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3446  00208C  0E00               	movlw	0
  3447  00208E  0100               	movlb	0	; () banked
  3448  002090  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3449  002092  0100               	movlb	0	; () banked
  3450  002094  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;inc\CANlib.h: 651: tamp = tamp << 5;
  3454  002096  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3455  00209A  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3456  00209E  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3457  0020A2  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3458  0020A6  0E05               	movlw	5
  3459  0020A8                     u2545:
  3460  0020A8  90D8               	bcf	status,0,c
  3461  0020AA  0100               	movlb	0	; () banked
  3462  0020AC  3778               	rlcf	??_CANSetMask& (0+255),f,b
  3463  0020AE  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3464  0020B0  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3465  0020B2  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3466  0020B4  2EE8               	decfsz	wreg,f,c
  3467  0020B6  D7F8               	goto	u2545
  3468  0020B8  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3469  0020BC  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3470  0020C0  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3471  0020C4  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
  3475  0020C8  C07D  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3476  0020CC                     l2751:
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;inc\CANlib.h: 653: }
  3480                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3481  0020CC  0E02               	movlw	2
  3482  0020CE  0100               	movlb	0	; () banked
  3483  0020D0  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3484  0020D2  A4D8               	btfss	status,2,c
  3485  0020D4  D056               	goto	l2767
  3486                           
  3487                           ; BSR set to: 0
  3488  0020D6  0100               	movlb	0	; () banked
  3489  0020D8  2977               	incf	CANSetMask@type& (0+255),w,b
  3490  0020DA  A4D8               	btfss	status,2,c
  3491  0020DC  D052               	goto	l2767
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;inc\CANlib.h: 656: {
  3495                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
  3496  0020DE  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3497  0020E2  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3498  0020E6  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3499  0020EA  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3500  0020EE  0E04               	movlw	4
  3501  0020F0  D006               	goto	u2570
  3502  0020F2                     u2575:
  3503  0020F2  0100               	movlb	0	; () banked
  3504  0020F4  90D8               	bcf	status,0,c
  3505  0020F6  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3506  0020F8  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3507  0020FA  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3508  0020FC  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3509  0020FE                     u2570:
  3510  0020FE  2EE8               	decfsz	wreg,f,c
  3511  002100  D7F8               	goto	u2575
  3512  002102  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3513  002106  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3514  00210A  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3515  00210E  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
  3519  002112  0100               	movlb	0	; () banked
  3520  002114  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3521  002116  0100               	movlb	0	; () banked
  3522  002118  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3523  00211A  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3524  00211C  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3525  00211E  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
  3529  002120  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
  3533  002124  0E07               	movlw	7
  3534  002126  0100               	movlb	0	; () banked
  3535  002128  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3536  00212A  0100               	movlb	0	; () banked
  3537  00212C  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3538  00212E  0E00               	movlw	0
  3539  002130  0100               	movlb	0	; () banked
  3540  002132  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3541  002134  0100               	movlb	0	; () banked
  3542  002136  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3543  002138  0E00               	movlw	0
  3544  00213A  0100               	movlb	0	; () banked
  3545  00213C  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3546  00213E  0100               	movlb	0	; () banked
  3547  002140  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3548  002142  0E00               	movlw	0
  3549  002144  0100               	movlb	0	; () banked
  3550  002146  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3551  002148  0100               	movlb	0	; () banked
  3552  00214A  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;inc\CANlib.h: 662: tamp = tamp << 5;
  3556  00214C  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3557  002150  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3558  002154  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3559  002158  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3560  00215C  0E05               	movlw	5
  3561  00215E                     u2585:
  3562  00215E  90D8               	bcf	status,0,c
  3563  002160  0100               	movlb	0	; () banked
  3564  002162  3778               	rlcf	??_CANSetMask& (0+255),f,b
  3565  002164  3779               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3566  002166  377A               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3567  002168  377B               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3568  00216A  2EE8               	decfsz	wreg,f,c
  3569  00216C  D7F8               	goto	u2585
  3570  00216E  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3571  002172  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3572  002176  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3573  00217A  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
  3577  00217E  C07D  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3578  002182                     l2767:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;inc\CANlib.h: 664: }
  3582                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3583  002182  0100               	movlb	0	; () banked
  3584  002184  057C               	decf	CANSetMask@numBuffer& (0+255),w,b
  3585  002186  A4D8               	btfss	status,2,c
  3586  002188  D087               	goto	l2799
  3587                           
  3588                           ; BSR set to: 0
  3589  00218A  0EF7               	movlw	247
  3590  00218C  0100               	movlb	0	; () banked
  3591  00218E  1977               	xorwf	CANSetMask@type& (0+255),w,b
  3592  002190  A4D8               	btfss	status,2,c
  3593  002192  D082               	goto	l2799
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;inc\CANlib.h: 667: {
  3597                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
  3598  002194  0100               	movlb	0	; () banked
  3599  002196  5173               	movf	CANSetMask@mask& (0+255),w,b
  3600  002198  0100               	movlb	0	; () banked
  3601  00219A  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3602  00219C  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3603  00219E  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3604  0021A0  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
  3608  0021A2  C07D  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
  3612  0021A6  0E00               	movlw	0
  3613  0021A8  0100               	movlb	0	; () banked
  3614  0021AA  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3615  0021AC  0100               	movlb	0	; () banked
  3616  0021AE  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3617  0021B0  0EFF               	movlw	255
  3618  0021B2  0100               	movlb	0	; () banked
  3619  0021B4  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3620  0021B6  0100               	movlb	0	; () banked
  3621  0021B8  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3622  0021BA  0E00               	movlw	0
  3623  0021BC  0100               	movlb	0	; () banked
  3624  0021BE  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3625  0021C0  0100               	movlb	0	; () banked
  3626  0021C2  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3627  0021C4  0E00               	movlw	0
  3628  0021C6  0100               	movlb	0	; () banked
  3629  0021C8  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3630  0021CA  0100               	movlb	0	; () banked
  3631  0021CC  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
  3635  0021CE  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3636  0021D2  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3637  0021D6  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3638  0021DA  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3639  0021DE  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  3640  0021E2  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  3641  0021E6  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  3642  0021EA  0100               	movlb	0	; () banked
  3643  0021EC  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  3644  0021EE  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3645  0021F2  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3646  0021F6  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3647  0021FA  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
  3651  0021FE  C07D  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
  3655  002202  0100               	movlb	0	; () banked
  3656  002204  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3657  002206  D003               	goto	l418
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
  3661  002208  010F               	movlb	15	; () banked
  3662  00220A  8119               	bsf	25,0,b	;volatile
  3663  00220C  D002               	goto	l419
  3664  00220E                     l418:
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;inc\CANlib.h: 677: else
  3668                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
  3669  00220E  010F               	movlb	15	; () banked
  3670  002210  9119               	bcf	25,0,b	;volatile
  3671  002212                     l419:
  3672                           
  3673                           ; BSR set to: 15
  3674                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
  3675  002212  0100               	movlb	0	; () banked
  3676  002214  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3677  002216  D003               	goto	l420
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
  3681  002218  010F               	movlb	15	; () banked
  3682  00221A  8319               	bsf	25,1,b	;volatile
  3683  00221C  D002               	goto	l421
  3684  00221E                     l420:
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;inc\CANlib.h: 682: else
  3688                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
  3689  00221E  010F               	movlb	15	; () banked
  3690  002220  9319               	bcf	25,1,b	;volatile
  3691  002222                     l421:
  3692                           
  3693                           ; BSR set to: 15
  3694                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
  3695  002222  0100               	movlb	0	; () banked
  3696  002224  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3697  002226  D003               	goto	l422
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
  3701  002228  010F               	movlb	15	; () banked
  3702  00222A  8B19               	bsf	25,5,b	;volatile
  3703  00222C  D002               	goto	l423
  3704  00222E                     l422:
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;inc\CANlib.h: 687: else
  3708                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
  3709  00222E  010F               	movlb	15	; () banked
  3710  002230  9B19               	bcf	25,5,b	;volatile
  3711  002232                     l423:
  3712                           
  3713                           ; BSR set to: 15
  3714                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
  3715  002232  0100               	movlb	0	; () banked
  3716  002234  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3717  002236  D003               	goto	l424
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
  3721  002238  010F               	movlb	15	; () banked
  3722  00223A  8D19               	bsf	25,6,b	;volatile
  3723  00223C  D002               	goto	l425
  3724  00223E                     l424:
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;inc\CANlib.h: 692: else
  3728                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
  3729  00223E  010F               	movlb	15	; () banked
  3730  002240  9D19               	bcf	25,6,b	;volatile
  3731  002242                     l425:
  3732                           
  3733                           ; BSR set to: 15
  3734                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
  3735  002242  0100               	movlb	0	; () banked
  3736  002244  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3737  002246  D003               	goto	l426
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
  3741  002248  010F               	movlb	15	; () banked
  3742  00224A  8F19               	bsf	25,7,b	;volatile
  3743  00224C  D002               	goto	l2793
  3744  00224E                     l426:
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;inc\CANlib.h: 697: else
  3748                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
  3749  00224E  010F               	movlb	15	; () banked
  3750  002250  9F19               	bcf	25,7,b	;volatile
  3751  002252                     l2793:
  3752                           
  3753                           ; BSR set to: 15
  3754                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
  3755  002252  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3756  002256  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3757  00225A  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3758  00225E  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3759  002262  0E16               	movlw	22
  3760  002264  D006               	goto	u2660
  3761  002266                     u2665:
  3762  002266  0100               	movlb	0	; () banked
  3763  002268  90D8               	bcf	status,0,c
  3764  00226A  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3765  00226C  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3766  00226E  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3767  002270  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3768  002272                     u2660:
  3769  002272  2EE8               	decfsz	wreg,f,c
  3770  002274  D7F8               	goto	u2665
  3771  002276  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3772  00227A  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3773  00227E  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3774  002282  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
  3778  002286  0100               	movlb	0	; () banked
  3779  002288  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3780  00228A  0100               	movlb	0	; () banked
  3781  00228C  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3782  00228E  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3783  002290  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3784  002292  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
  3788  002294  C07D  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3789  002298                     l2799:
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;inc\CANlib.h: 703: }
  3793                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3794  002298  0E02               	movlw	2
  3795  00229A  0100               	movlb	0	; () banked
  3796  00229C  197C               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3797  00229E  A4D8               	btfss	status,2,c
  3798  0022A0  0012               	return	
  3799                           
  3800                           ; BSR set to: 0
  3801  0022A2  0EF7               	movlw	247
  3802  0022A4  0100               	movlb	0	; () banked
  3803  0022A6  1977               	xorwf	CANSetMask@type& (0+255),w,b
  3804  0022A8  A4D8               	btfss	status,2,c
  3805  0022AA  0012               	return	
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;inc\CANlib.h: 706: {
  3809                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
  3810  0022AC  0100               	movlb	0	; () banked
  3811  0022AE  5173               	movf	CANSetMask@mask& (0+255),w,b
  3812  0022B0  0100               	movlb	0	; () banked
  3813  0022B2  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3814  0022B4  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3815  0022B6  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3816  0022B8  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
  3820  0022BA  C07D  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
  3824  0022BE  0E00               	movlw	0
  3825  0022C0  0100               	movlb	0	; () banked
  3826  0022C2  1573               	andwf	CANSetMask@mask& (0+255),w,b
  3827  0022C4  0100               	movlb	0	; () banked
  3828  0022C6  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3829  0022C8  0EFF               	movlw	255
  3830  0022CA  0100               	movlb	0	; () banked
  3831  0022CC  1574               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3832  0022CE  0100               	movlb	0	; () banked
  3833  0022D0  6F7E               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3834  0022D2  0E00               	movlw	0
  3835  0022D4  0100               	movlb	0	; () banked
  3836  0022D6  1575               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3837  0022D8  0100               	movlb	0	; () banked
  3838  0022DA  6F7F               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3839  0022DC  0E00               	movlw	0
  3840  0022DE  0100               	movlb	0	; () banked
  3841  0022E0  1576               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3842  0022E2  0100               	movlb	0	; () banked
  3843  0022E4  6F80               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
  3847  0022E6  C07D  F078         	movff	CANSetMask@tamp,??_CANSetMask
  3848  0022EA  C07E  F079         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3849  0022EE  C07F  F07A         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3850  0022F2  C080  F07B         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3851  0022F6  C079  F078         	movff	??_CANSetMask+1,??_CANSetMask
  3852  0022FA  C07A  F079         	movff	??_CANSetMask+2,??_CANSetMask+1
  3853  0022FE  C07B  F07A         	movff	??_CANSetMask+3,??_CANSetMask+2
  3854  002302  0100               	movlb	0	; () banked
  3855  002304  6B7B               	clrf	(??_CANSetMask+3)& (0+255),b
  3856  002306  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3857  00230A  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3858  00230E  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3859  002312  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
  3863  002316  C07D  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
  3867  00231A  0100               	movlb	0	; () banked
  3868  00231C  A175               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3869  00231E  D003               	goto	l429
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
  3873  002320  010F               	movlb	15	; () banked
  3874  002322  811D               	bsf	29,0,b	;volatile
  3875  002324  D002               	goto	l430
  3876  002326                     l429:
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;inc\CANlib.h: 716: else
  3880                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
  3881  002326  010F               	movlb	15	; () banked
  3882  002328  911D               	bcf	29,0,b	;volatile
  3883  00232A                     l430:
  3884                           
  3885                           ; BSR set to: 15
  3886                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
  3887  00232A  0100               	movlb	0	; () banked
  3888  00232C  A375               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3889  00232E  D003               	goto	l431
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
  3893  002330  010F               	movlb	15	; () banked
  3894  002332  831D               	bsf	29,1,b	;volatile
  3895  002334  D002               	goto	l432
  3896  002336                     l431:
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;inc\CANlib.h: 721: else
  3900                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
  3901  002336  010F               	movlb	15	; () banked
  3902  002338  931D               	bcf	29,1,b	;volatile
  3903  00233A                     l432:
  3904                           
  3905                           ; BSR set to: 15
  3906                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
  3907  00233A  0100               	movlb	0	; () banked
  3908  00233C  A575               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3909  00233E  D003               	goto	l433
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
  3913  002340  010F               	movlb	15	; () banked
  3914  002342  8B1D               	bsf	29,5,b	;volatile
  3915  002344  D002               	goto	l434
  3916  002346                     l433:
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;inc\CANlib.h: 726: else
  3920                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
  3921  002346  010F               	movlb	15	; () banked
  3922  002348  9B1D               	bcf	29,5,b	;volatile
  3923  00234A                     l434:
  3924                           
  3925                           ; BSR set to: 15
  3926                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
  3927  00234A  0100               	movlb	0	; () banked
  3928  00234C  A775               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3929  00234E  D003               	goto	l435
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
  3933  002350  010F               	movlb	15	; () banked
  3934  002352  8D1D               	bsf	29,6,b	;volatile
  3935  002354  D002               	goto	l436
  3936  002356                     l435:
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;inc\CANlib.h: 731: else
  3940                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
  3941  002356  010F               	movlb	15	; () banked
  3942  002358  9D1D               	bcf	29,6,b	;volatile
  3943  00235A                     l436:
  3944                           
  3945                           ; BSR set to: 15
  3946                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
  3947  00235A  0100               	movlb	0	; () banked
  3948  00235C  A975               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3949  00235E  D003               	goto	l437
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
  3953  002360  010F               	movlb	15	; () banked
  3954  002362  8F1D               	bsf	29,7,b	;volatile
  3955  002364  D002               	goto	l2825
  3956  002366                     l437:
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;inc\CANlib.h: 736: else
  3960                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
  3961  002366  010F               	movlb	15	; () banked
  3962  002368  9F1D               	bcf	29,7,b	;volatile
  3963  00236A                     l2825:
  3964                           
  3965                           ; BSR set to: 15
  3966                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
  3967  00236A  C073  F078         	movff	CANSetMask@mask,??_CANSetMask
  3968  00236E  C074  F079         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3969  002372  C075  F07A         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3970  002376  C076  F07B         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3971  00237A  0E16               	movlw	22
  3972  00237C  D006               	goto	u2740
  3973  00237E                     u2745:
  3974  00237E  0100               	movlb	0	; () banked
  3975  002380  90D8               	bcf	status,0,c
  3976  002382  337B               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3977  002384  337A               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3978  002386  3379               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3979  002388  3378               	rrcf	??_CANSetMask& (0+255),f,b
  3980  00238A                     u2740:
  3981  00238A  2EE8               	decfsz	wreg,f,c
  3982  00238C  D7F8               	goto	u2745
  3983  00238E  C078  F07D         	movff	??_CANSetMask,CANSetMask@tamp
  3984  002392  C079  F07E         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3985  002396  C07A  F07F         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3986  00239A  C07B  F080         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
  3990  00239E  0100               	movlb	0	; () banked
  3991  0023A0  517D               	movf	CANSetMask@tamp& (0+255),w,b
  3992  0023A2  0100               	movlb	0	; () banked
  3993  0023A4  6F7D               	movwf	CANSetMask@tamp& (0+255),b
  3994  0023A6  6B7E               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3995  0023A8  6B7F               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3996  0023AA  6B80               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
  4000  0023AC  C07D  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4001  0023B0  0012               	return	
  4002  0023B2                     __end_of_CANSetMask:
  4003                           	opt stack 0
  4004                           tblptru	equ	0xFF8
  4005                           tblptrh	equ	0xFF7
  4006                           tblptrl	equ	0xFF6
  4007                           tablat	equ	0xFF5
  4008                           prodh	equ	0xFF4
  4009                           prodl	equ	0xFF3
  4010                           intcon	equ	0xFF2
  4011                           intcon2	equ	0xFF1
  4012                           postinc0	equ	0xFEE
  4013                           wreg	equ	0xFE8
  4014                           postdec1	equ	0xFE5
  4015                           fsr1l	equ	0xFE1
  4016                           indf2	equ	0xFDF
  4017                           fsr2h	equ	0xFDA
  4018                           fsr2l	equ	0xFD9
  4019                           status	equ	0xFD8
  4020                           
  4021 ;; *************** function _CANSetFilter *****************
  4022 ;; Defined at:
  4023 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  numBuffer       1    wreg     enum E16881
  4026 ;;  filter          4   19[BANK0 ] unsigned long 
  4027 ;;  type            1   23[BANK0 ] enum E16844
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  numBuffer       1   28[BANK0 ] enum E16881
  4030 ;;  tamp            4   29[BANK0 ] unsigned long 
  4031 ;; Return value:  Size  Location     Type
  4032 ;;		None               void
  4033 ;; Registers used:
  4034 ;;		wreg, status,2, status,0
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4040 ;;      Params:         0       5       0       0
  4041 ;;      Locals:         0       5       0       0
  4042 ;;      Temps:          0       4       0       0
  4043 ;;      Totals:         0      14       0       0
  4044 ;;Total ram usage:       14 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:    4
  4047 ;; This function calls:
  4048 ;;		Nothing
  4049 ;; This function is called by:
  4050 ;;		_CANInitialize
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text10
  4055  0001E6                     __ptext10:
  4056                           	opt stack 0
  4057  0001E6                     _CANSetFilter:
  4058                           	opt stack 24
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;incstack = 0
  4062                           ;CANSetFilter@numBuffer stored from wreg
  4063  0001E6  0100               	movlb	0	; () banked
  4064  0001E8  6F7C               	movwf	CANSetFilter@numBuffer& (0+255),b
  4065                           
  4066                           ;inc\CANlib.h: 751: unsigned long tamp;
  4067                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4068  0001EA  0100               	movlb	0	; () banked
  4069  0001EC  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4070  0001EE  0100               	movlb	0	; () banked
  4071  0001F0  A4D8               	btfss	status,2,c
  4072  0001F2  D058               	goto	l2849
  4073                           
  4074                           ; BSR set to: 0
  4075  0001F4  0100               	movlb	0	; () banked
  4076  0001F6  2977               	incf	CANSetFilter@type& (0+255),w,b
  4077  0001F8  A4D8               	btfss	status,2,c
  4078  0001FA  D054               	goto	l2849
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;inc\CANlib.h: 754: {
  4082                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
  4083  0001FC  010F               	movlb	15	; () banked
  4084  0001FE  9701               	bcf	1,3,b	;volatile
  4085                           
  4086                           ; BSR set to: 15
  4087                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
  4088  000200  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4089  000204  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4090  000208  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4091  00020C  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4092  000210  0E04               	movlw	4
  4093  000212  D006               	goto	u2770
  4094  000214                     u2775:
  4095  000214  0100               	movlb	0	; () banked
  4096  000216  90D8               	bcf	status,0,c
  4097  000218  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4098  00021A  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4099  00021C  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4100  00021E  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4101  000220                     u2770:
  4102  000220  2EE8               	decfsz	wreg,f,c
  4103  000222  D7F8               	goto	u2775
  4104  000224  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4105  000228  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4106  00022C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4107  000230  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
  4111  000234  0100               	movlb	0	; () banked
  4112  000236  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4113  000238  0100               	movlb	0	; () banked
  4114  00023A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4115  00023C  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4116  00023E  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4117  000240  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
  4121  000242  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
  4125  000246  0E07               	movlw	7
  4126  000248  0100               	movlb	0	; () banked
  4127  00024A  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4128  00024C  0100               	movlb	0	; () banked
  4129  00024E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4130  000250  0E00               	movlw	0
  4131  000252  0100               	movlb	0	; () banked
  4132  000254  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4133  000256  0100               	movlb	0	; () banked
  4134  000258  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4135  00025A  0E00               	movlw	0
  4136  00025C  0100               	movlb	0	; () banked
  4137  00025E  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4138  000260  0100               	movlb	0	; () banked
  4139  000262  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4140  000264  0E00               	movlw	0
  4141  000266  0100               	movlb	0	; () banked
  4142  000268  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4143  00026A  0100               	movlb	0	; () banked
  4144  00026C  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;inc\CANlib.h: 762: tamp = tamp << 5;
  4148  00026E  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4149  000272  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4150  000276  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4151  00027A  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4152  00027E  0E05               	movlw	5
  4153  000280                     u2785:
  4154  000280  90D8               	bcf	status,0,c
  4155  000282  0100               	movlb	0	; () banked
  4156  000284  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4157  000286  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4158  000288  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4159  00028A  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4160  00028C  2EE8               	decfsz	wreg,f,c
  4161  00028E  D7F8               	goto	u2785
  4162  000290  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4163  000294  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4164  000298  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4165  00029C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
  4169  0002A0  C07D  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4170  0002A4                     l2849:
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;inc\CANlib.h: 764: }
  4174                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4175  0002A4  0100               	movlb	0	; () banked
  4176  0002A6  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4177  0002A8  A4D8               	btfss	status,2,c
  4178  0002AA  D058               	goto	l2867
  4179                           
  4180                           ; BSR set to: 0
  4181  0002AC  0100               	movlb	0	; () banked
  4182  0002AE  2977               	incf	CANSetFilter@type& (0+255),w,b
  4183  0002B0  A4D8               	btfss	status,2,c
  4184  0002B2  D054               	goto	l2867
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;inc\CANlib.h: 767: {
  4188                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
  4189  0002B4  010F               	movlb	15	; () banked
  4190  0002B6  9705               	bcf	5,3,b	;volatile
  4191                           
  4192                           ; BSR set to: 15
  4193                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
  4194  0002B8  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4195  0002BC  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4196  0002C0  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4197  0002C4  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4198  0002C8  0E04               	movlw	4
  4199  0002CA  D006               	goto	u2810
  4200  0002CC                     u2815:
  4201  0002CC  0100               	movlb	0	; () banked
  4202  0002CE  90D8               	bcf	status,0,c
  4203  0002D0  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4204  0002D2  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4205  0002D4  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4206  0002D6  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4207  0002D8                     u2810:
  4208  0002D8  2EE8               	decfsz	wreg,f,c
  4209  0002DA  D7F8               	goto	u2815
  4210  0002DC  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4211  0002E0  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4212  0002E4  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4213  0002E8  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
  4217  0002EC  0100               	movlb	0	; () banked
  4218  0002EE  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4219  0002F0  0100               	movlb	0	; () banked
  4220  0002F2  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4221  0002F4  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4222  0002F6  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4223  0002F8  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
  4227  0002FA  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
  4231  0002FE  0E07               	movlw	7
  4232  000300  0100               	movlb	0	; () banked
  4233  000302  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4234  000304  0100               	movlb	0	; () banked
  4235  000306  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4236  000308  0E00               	movlw	0
  4237  00030A  0100               	movlb	0	; () banked
  4238  00030C  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4239  00030E  0100               	movlb	0	; () banked
  4240  000310  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4241  000312  0E00               	movlw	0
  4242  000314  0100               	movlb	0	; () banked
  4243  000316  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4244  000318  0100               	movlb	0	; () banked
  4245  00031A  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4246  00031C  0E00               	movlw	0
  4247  00031E  0100               	movlb	0	; () banked
  4248  000320  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4249  000322  0100               	movlb	0	; () banked
  4250  000324  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;inc\CANlib.h: 775: tamp = tamp << 5;
  4254  000326  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4255  00032A  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4256  00032E  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4257  000332  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4258  000336  0E05               	movlw	5
  4259  000338                     u2825:
  4260  000338  90D8               	bcf	status,0,c
  4261  00033A  0100               	movlb	0	; () banked
  4262  00033C  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4263  00033E  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4264  000340  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4265  000342  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4266  000344  2EE8               	decfsz	wreg,f,c
  4267  000346  D7F8               	goto	u2825
  4268  000348  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4269  00034C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4270  000350  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4271  000354  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
  4275  000358  C07D  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4276  00035C                     l2867:
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;inc\CANlib.h: 777: }
  4280                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4281  00035C  0E02               	movlw	2
  4282  00035E  0100               	movlb	0	; () banked
  4283  000360  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4284  000362  A4D8               	btfss	status,2,c
  4285  000364  D058               	goto	l2885
  4286                           
  4287                           ; BSR set to: 0
  4288  000366  0100               	movlb	0	; () banked
  4289  000368  2977               	incf	CANSetFilter@type& (0+255),w,b
  4290  00036A  A4D8               	btfss	status,2,c
  4291  00036C  D054               	goto	l2885
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;inc\CANlib.h: 780: {
  4295                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
  4296  00036E  010F               	movlb	15	; () banked
  4297  000370  9709               	bcf	9,3,b	;volatile
  4298                           
  4299                           ; BSR set to: 15
  4300                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
  4301  000372  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4302  000376  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4303  00037A  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4304  00037E  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4305  000382  0E04               	movlw	4
  4306  000384  D006               	goto	u2850
  4307  000386                     u2855:
  4308  000386  0100               	movlb	0	; () banked
  4309  000388  90D8               	bcf	status,0,c
  4310  00038A  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4311  00038C  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4312  00038E  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4313  000390  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4314  000392                     u2850:
  4315  000392  2EE8               	decfsz	wreg,f,c
  4316  000394  D7F8               	goto	u2855
  4317  000396  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4318  00039A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4319  00039E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4320  0003A2  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
  4324  0003A6  0100               	movlb	0	; () banked
  4325  0003A8  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4326  0003AA  0100               	movlb	0	; () banked
  4327  0003AC  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4328  0003AE  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4329  0003B0  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4330  0003B2  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
  4334  0003B4  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
  4338  0003B8  0E07               	movlw	7
  4339  0003BA  0100               	movlb	0	; () banked
  4340  0003BC  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4341  0003BE  0100               	movlb	0	; () banked
  4342  0003C0  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4343  0003C2  0E00               	movlw	0
  4344  0003C4  0100               	movlb	0	; () banked
  4345  0003C6  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4346  0003C8  0100               	movlb	0	; () banked
  4347  0003CA  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4348  0003CC  0E00               	movlw	0
  4349  0003CE  0100               	movlb	0	; () banked
  4350  0003D0  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4351  0003D2  0100               	movlb	0	; () banked
  4352  0003D4  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4353  0003D6  0E00               	movlw	0
  4354  0003D8  0100               	movlb	0	; () banked
  4355  0003DA  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4356  0003DC  0100               	movlb	0	; () banked
  4357  0003DE  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;inc\CANlib.h: 788: tamp = tamp << 5;
  4361  0003E0  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4362  0003E4  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4363  0003E8  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4364  0003EC  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4365  0003F0  0E05               	movlw	5
  4366  0003F2                     u2865:
  4367  0003F2  90D8               	bcf	status,0,c
  4368  0003F4  0100               	movlb	0	; () banked
  4369  0003F6  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4370  0003F8  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4371  0003FA  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4372  0003FC  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4373  0003FE  2EE8               	decfsz	wreg,f,c
  4374  000400  D7F8               	goto	u2865
  4375  000402  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4376  000406  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4377  00040A  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4378  00040E  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
  4382  000412  C07D  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4383  000416                     l2885:
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;inc\CANlib.h: 790: }
  4387                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4388  000416  0E03               	movlw	3
  4389  000418  0100               	movlb	0	; () banked
  4390  00041A  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4391  00041C  A4D8               	btfss	status,2,c
  4392  00041E  D058               	goto	l2903
  4393                           
  4394                           ; BSR set to: 0
  4395  000420  0100               	movlb	0	; () banked
  4396  000422  2977               	incf	CANSetFilter@type& (0+255),w,b
  4397  000424  A4D8               	btfss	status,2,c
  4398  000426  D054               	goto	l2903
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;inc\CANlib.h: 793: {
  4402                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
  4403  000428  010F               	movlb	15	; () banked
  4404  00042A  970D               	bcf	13,3,b	;volatile
  4405                           
  4406                           ; BSR set to: 15
  4407                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
  4408  00042C  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4409  000430  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4410  000434  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4411  000438  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4412  00043C  0E04               	movlw	4
  4413  00043E  D006               	goto	u2890
  4414  000440                     u2895:
  4415  000440  0100               	movlb	0	; () banked
  4416  000442  90D8               	bcf	status,0,c
  4417  000444  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4418  000446  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4419  000448  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4420  00044A  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4421  00044C                     u2890:
  4422  00044C  2EE8               	decfsz	wreg,f,c
  4423  00044E  D7F8               	goto	u2895
  4424  000450  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4425  000454  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4426  000458  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4427  00045C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
  4431  000460  0100               	movlb	0	; () banked
  4432  000462  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4433  000464  0100               	movlb	0	; () banked
  4434  000466  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4435  000468  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4436  00046A  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4437  00046C  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
  4441  00046E  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
  4445  000472  0E07               	movlw	7
  4446  000474  0100               	movlb	0	; () banked
  4447  000476  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4448  000478  0100               	movlb	0	; () banked
  4449  00047A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4450  00047C  0E00               	movlw	0
  4451  00047E  0100               	movlb	0	; () banked
  4452  000480  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4453  000482  0100               	movlb	0	; () banked
  4454  000484  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4455  000486  0E00               	movlw	0
  4456  000488  0100               	movlb	0	; () banked
  4457  00048A  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4458  00048C  0100               	movlb	0	; () banked
  4459  00048E  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4460  000490  0E00               	movlw	0
  4461  000492  0100               	movlb	0	; () banked
  4462  000494  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4463  000496  0100               	movlb	0	; () banked
  4464  000498  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;inc\CANlib.h: 801: tamp = tamp << 5;
  4468  00049A  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4469  00049E  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4470  0004A2  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4471  0004A6  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4472  0004AA  0E05               	movlw	5
  4473  0004AC                     u2905:
  4474  0004AC  90D8               	bcf	status,0,c
  4475  0004AE  0100               	movlb	0	; () banked
  4476  0004B0  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4477  0004B2  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4478  0004B4  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4479  0004B6  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4480  0004B8  2EE8               	decfsz	wreg,f,c
  4481  0004BA  D7F8               	goto	u2905
  4482  0004BC  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4483  0004C0  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4484  0004C4  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4485  0004C8  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
  4489  0004CC  C07D  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4490  0004D0                     l2903:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;inc\CANlib.h: 803: }
  4494                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4495  0004D0  0E04               	movlw	4
  4496  0004D2  0100               	movlb	0	; () banked
  4497  0004D4  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4498  0004D6  A4D8               	btfss	status,2,c
  4499  0004D8  D058               	goto	l2921
  4500                           
  4501                           ; BSR set to: 0
  4502  0004DA  0100               	movlb	0	; () banked
  4503  0004DC  2977               	incf	CANSetFilter@type& (0+255),w,b
  4504  0004DE  A4D8               	btfss	status,2,c
  4505  0004E0  D054               	goto	l2921
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;inc\CANlib.h: 806: {
  4509                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
  4510  0004E2  010F               	movlb	15	; () banked
  4511  0004E4  9711               	bcf	17,3,b	;volatile
  4512                           
  4513                           ; BSR set to: 15
  4514                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
  4515  0004E6  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4516  0004EA  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4517  0004EE  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4518  0004F2  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4519  0004F6  0E04               	movlw	4
  4520  0004F8  D006               	goto	u2930
  4521  0004FA                     u2935:
  4522  0004FA  0100               	movlb	0	; () banked
  4523  0004FC  90D8               	bcf	status,0,c
  4524  0004FE  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4525  000500  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4526  000502  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4527  000504  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4528  000506                     u2930:
  4529  000506  2EE8               	decfsz	wreg,f,c
  4530  000508  D7F8               	goto	u2935
  4531  00050A  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4532  00050E  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4533  000512  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4534  000516  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
  4538  00051A  0100               	movlb	0	; () banked
  4539  00051C  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4540  00051E  0100               	movlb	0	; () banked
  4541  000520  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4542  000522  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4543  000524  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4544  000526  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
  4548  000528  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
  4552  00052C  0E07               	movlw	7
  4553  00052E  0100               	movlb	0	; () banked
  4554  000530  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4555  000532  0100               	movlb	0	; () banked
  4556  000534  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4557  000536  0E00               	movlw	0
  4558  000538  0100               	movlb	0	; () banked
  4559  00053A  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4560  00053C  0100               	movlb	0	; () banked
  4561  00053E  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4562  000540  0E00               	movlw	0
  4563  000542  0100               	movlb	0	; () banked
  4564  000544  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4565  000546  0100               	movlb	0	; () banked
  4566  000548  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4567  00054A  0E00               	movlw	0
  4568  00054C  0100               	movlb	0	; () banked
  4569  00054E  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4570  000550  0100               	movlb	0	; () banked
  4571  000552  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;inc\CANlib.h: 814: tamp = tamp << 5;
  4575  000554  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4576  000558  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4577  00055C  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4578  000560  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4579  000564  0E05               	movlw	5
  4580  000566                     u2945:
  4581  000566  90D8               	bcf	status,0,c
  4582  000568  0100               	movlb	0	; () banked
  4583  00056A  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4584  00056C  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4585  00056E  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4586  000570  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4587  000572  2EE8               	decfsz	wreg,f,c
  4588  000574  D7F8               	goto	u2945
  4589  000576  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4590  00057A  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4591  00057E  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4592  000582  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
  4596  000586  C07D  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4597  00058A                     l2921:
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;inc\CANlib.h: 816: }
  4601                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4602  00058A  0E05               	movlw	5
  4603  00058C  0100               	movlb	0	; () banked
  4604  00058E  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4605  000590  A4D8               	btfss	status,2,c
  4606  000592  D058               	goto	l2939
  4607                           
  4608                           ; BSR set to: 0
  4609  000594  0100               	movlb	0	; () banked
  4610  000596  2977               	incf	CANSetFilter@type& (0+255),w,b
  4611  000598  A4D8               	btfss	status,2,c
  4612  00059A  D054               	goto	l2939
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;inc\CANlib.h: 819: {
  4616                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
  4617  00059C  010F               	movlb	15	; () banked
  4618  00059E  9715               	bcf	21,3,b	;volatile
  4619                           
  4620                           ; BSR set to: 15
  4621                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
  4622  0005A0  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4623  0005A4  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4624  0005A8  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4625  0005AC  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4626  0005B0  0E04               	movlw	4
  4627  0005B2  D006               	goto	u2970
  4628  0005B4                     u2975:
  4629  0005B4  0100               	movlb	0	; () banked
  4630  0005B6  90D8               	bcf	status,0,c
  4631  0005B8  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4632  0005BA  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4633  0005BC  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4634  0005BE  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4635  0005C0                     u2970:
  4636  0005C0  2EE8               	decfsz	wreg,f,c
  4637  0005C2  D7F8               	goto	u2975
  4638  0005C4  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4639  0005C8  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4640  0005CC  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4641  0005D0  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
  4645  0005D4  0100               	movlb	0	; () banked
  4646  0005D6  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4647  0005D8  0100               	movlb	0	; () banked
  4648  0005DA  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4649  0005DC  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4650  0005DE  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4651  0005E0  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
  4655  0005E2  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
  4659  0005E6  0E07               	movlw	7
  4660  0005E8  0100               	movlb	0	; () banked
  4661  0005EA  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4662  0005EC  0100               	movlb	0	; () banked
  4663  0005EE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4664  0005F0  0E00               	movlw	0
  4665  0005F2  0100               	movlb	0	; () banked
  4666  0005F4  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4667  0005F6  0100               	movlb	0	; () banked
  4668  0005F8  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4669  0005FA  0E00               	movlw	0
  4670  0005FC  0100               	movlb	0	; () banked
  4671  0005FE  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4672  000600  0100               	movlb	0	; () banked
  4673  000602  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4674  000604  0E00               	movlw	0
  4675  000606  0100               	movlb	0	; () banked
  4676  000608  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4677  00060A  0100               	movlb	0	; () banked
  4678  00060C  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;inc\CANlib.h: 827: tamp = tamp << 5;
  4682  00060E  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4683  000612  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4684  000616  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4685  00061A  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4686  00061E  0E05               	movlw	5
  4687  000620                     u2985:
  4688  000620  90D8               	bcf	status,0,c
  4689  000622  0100               	movlb	0	; () banked
  4690  000624  3778               	rlcf	??_CANSetFilter& (0+255),f,b
  4691  000626  3779               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4692  000628  377A               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4693  00062A  377B               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4694  00062C  2EE8               	decfsz	wreg,f,c
  4695  00062E  D7F8               	goto	u2985
  4696  000630  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4697  000634  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4698  000638  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4699  00063C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
  4703  000640  C07D  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4704  000644                     l2939:
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;inc\CANlib.h: 829: }
  4708                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4709  000644  0100               	movlb	0	; () banked
  4710  000646  517C               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4711  000648  0100               	movlb	0	; () banked
  4712  00064A  A4D8               	btfss	status,2,c
  4713  00064C  D089               	goto	l2973
  4714                           
  4715                           ; BSR set to: 0
  4716  00064E  0EF7               	movlw	247
  4717  000650  0100               	movlb	0	; () banked
  4718  000652  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  4719  000654  A4D8               	btfss	status,2,c
  4720  000656  D084               	goto	l2973
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;inc\CANlib.h: 833: {
  4724                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
  4725  000658  010F               	movlb	15	; () banked
  4726  00065A  8701               	bsf	1,3,b	;volatile
  4727                           
  4728                           ; BSR set to: 15
  4729                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
  4730  00065C  0100               	movlb	0	; () banked
  4731  00065E  5173               	movf	CANSetFilter@filter& (0+255),w,b
  4732  000660  0100               	movlb	0	; () banked
  4733  000662  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4734  000664  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4735  000666  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4736  000668  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
  4740  00066A  C07D  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
  4744  00066E  0E00               	movlw	0
  4745  000670  0100               	movlb	0	; () banked
  4746  000672  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4747  000674  0100               	movlb	0	; () banked
  4748  000676  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4749  000678  0EFF               	movlw	255
  4750  00067A  0100               	movlb	0	; () banked
  4751  00067C  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4752  00067E  0100               	movlb	0	; () banked
  4753  000680  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4754  000682  0E00               	movlw	0
  4755  000684  0100               	movlb	0	; () banked
  4756  000686  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4757  000688  0100               	movlb	0	; () banked
  4758  00068A  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4759  00068C  0E00               	movlw	0
  4760  00068E  0100               	movlb	0	; () banked
  4761  000690  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4762  000692  0100               	movlb	0	; () banked
  4763  000694  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
  4767  000696  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4768  00069A  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4769  00069E  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4770  0006A2  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4771  0006A6  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  4772  0006AA  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4773  0006AE  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4774  0006B2  0100               	movlb	0	; () banked
  4775  0006B4  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  4776  0006B6  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4777  0006BA  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4778  0006BE  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4779  0006C2  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
  4783  0006C6  C07D  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
  4787  0006CA  0100               	movlb	0	; () banked
  4788  0006CC  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4789  0006CE  D003               	goto	l449
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
  4793  0006D0  010F               	movlb	15	; () banked
  4794  0006D2  8101               	bsf	1,0,b	;volatile
  4795  0006D4  D002               	goto	l450
  4796  0006D6                     l449:
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;inc\CANlib.h: 845: else
  4800                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
  4801  0006D6  010F               	movlb	15	; () banked
  4802  0006D8  9101               	bcf	1,0,b	;volatile
  4803  0006DA                     l450:
  4804                           
  4805                           ; BSR set to: 15
  4806                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
  4807  0006DA  0100               	movlb	0	; () banked
  4808  0006DC  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4809  0006DE  D003               	goto	l451
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
  4813  0006E0  010F               	movlb	15	; () banked
  4814  0006E2  8301               	bsf	1,1,b	;volatile
  4815  0006E4  D002               	goto	l452
  4816  0006E6                     l451:
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;inc\CANlib.h: 850: else
  4820                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
  4821  0006E6  010F               	movlb	15	; () banked
  4822  0006E8  9301               	bcf	1,1,b	;volatile
  4823  0006EA                     l452:
  4824                           
  4825                           ; BSR set to: 15
  4826                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
  4827  0006EA  0100               	movlb	0	; () banked
  4828  0006EC  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4829  0006EE  D003               	goto	l453
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
  4833  0006F0  010F               	movlb	15	; () banked
  4834  0006F2  8B01               	bsf	1,5,b	;volatile
  4835  0006F4  D002               	goto	l454
  4836  0006F6                     l453:
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;inc\CANlib.h: 855: else
  4840                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
  4841  0006F6  010F               	movlb	15	; () banked
  4842  0006F8  9B01               	bcf	1,5,b	;volatile
  4843  0006FA                     l454:
  4844                           
  4845                           ; BSR set to: 15
  4846                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
  4847  0006FA  0100               	movlb	0	; () banked
  4848  0006FC  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4849  0006FE  D003               	goto	l455
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
  4853  000700  010F               	movlb	15	; () banked
  4854  000702  8D01               	bsf	1,6,b	;volatile
  4855  000704  D002               	goto	l456
  4856  000706                     l455:
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;inc\CANlib.h: 860: else
  4860                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
  4861  000706  010F               	movlb	15	; () banked
  4862  000708  9D01               	bcf	1,6,b	;volatile
  4863  00070A                     l456:
  4864                           
  4865                           ; BSR set to: 15
  4866                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
  4867  00070A  0100               	movlb	0	; () banked
  4868  00070C  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4869  00070E  D003               	goto	l457
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
  4873  000710  010F               	movlb	15	; () banked
  4874  000712  8F01               	bsf	1,7,b	;volatile
  4875  000714  D002               	goto	l2967
  4876  000716                     l457:
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;inc\CANlib.h: 865: else
  4880                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
  4881  000716  010F               	movlb	15	; () banked
  4882  000718  9F01               	bcf	1,7,b	;volatile
  4883  00071A                     l2967:
  4884                           
  4885                           ; BSR set to: 15
  4886                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
  4887  00071A  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  4888  00071E  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4889  000722  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4890  000726  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4891  00072A  0E16               	movlw	22
  4892  00072C  D006               	goto	u3060
  4893  00072E                     u3065:
  4894  00072E  0100               	movlb	0	; () banked
  4895  000730  90D8               	bcf	status,0,c
  4896  000732  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4897  000734  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4898  000736  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4899  000738  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  4900  00073A                     u3060:
  4901  00073A  2EE8               	decfsz	wreg,f,c
  4902  00073C  D7F8               	goto	u3065
  4903  00073E  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4904  000742  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4905  000746  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4906  00074A  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
  4910  00074E  0100               	movlb	0	; () banked
  4911  000750  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  4912  000752  0100               	movlb	0	; () banked
  4913  000754  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4914  000756  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4915  000758  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4916  00075A  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
  4920  00075C  C07D  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4921  000760                     l2973:
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;inc\CANlib.h: 871: }
  4925                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4926  000760  0100               	movlb	0	; () banked
  4927  000762  057C               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4928  000764  A4D8               	btfss	status,2,c
  4929  000766  D089               	goto	l3007
  4930                           
  4931                           ; BSR set to: 0
  4932  000768  0EF7               	movlw	247
  4933  00076A  0100               	movlb	0	; () banked
  4934  00076C  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  4935  00076E  A4D8               	btfss	status,2,c
  4936  000770  D084               	goto	l3007
  4937                           
  4938                           ; BSR set to: 0
  4939                           ;inc\CANlib.h: 874: {
  4940                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
  4941  000772  010F               	movlb	15	; () banked
  4942  000774  8705               	bsf	5,3,b	;volatile
  4943                           
  4944                           ; BSR set to: 15
  4945                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
  4946  000776  0100               	movlb	0	; () banked
  4947  000778  5173               	movf	CANSetFilter@filter& (0+255),w,b
  4948  00077A  0100               	movlb	0	; () banked
  4949  00077C  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4950  00077E  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4951  000780  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4952  000782  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
  4956  000784  C07D  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
  4960  000788  0E00               	movlw	0
  4961  00078A  0100               	movlb	0	; () banked
  4962  00078C  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  4963  00078E  0100               	movlb	0	; () banked
  4964  000790  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  4965  000792  0EFF               	movlw	255
  4966  000794  0100               	movlb	0	; () banked
  4967  000796  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4968  000798  0100               	movlb	0	; () banked
  4969  00079A  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4970  00079C  0E00               	movlw	0
  4971  00079E  0100               	movlb	0	; () banked
  4972  0007A0  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4973  0007A2  0100               	movlb	0	; () banked
  4974  0007A4  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4975  0007A6  0E00               	movlw	0
  4976  0007A8  0100               	movlb	0	; () banked
  4977  0007AA  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4978  0007AC  0100               	movlb	0	; () banked
  4979  0007AE  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
  4983  0007B0  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  4984  0007B4  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4985  0007B8  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4986  0007BC  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4987  0007C0  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  4988  0007C4  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4989  0007C8  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4990  0007CC  0100               	movlb	0	; () banked
  4991  0007CE  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  4992  0007D0  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  4993  0007D4  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4994  0007D8  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4995  0007DC  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
  4999  0007E0  C07D  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
  5003  0007E4  0100               	movlb	0	; () banked
  5004  0007E6  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5005  0007E8  D003               	goto	l460
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
  5009  0007EA  010F               	movlb	15	; () banked
  5010  0007EC  8105               	bsf	5,0,b	;volatile
  5011  0007EE  D002               	goto	l461
  5012  0007F0                     l460:
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;inc\CANlib.h: 886: else
  5016                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
  5017  0007F0  010F               	movlb	15	; () banked
  5018  0007F2  9105               	bcf	5,0,b	;volatile
  5019  0007F4                     l461:
  5020                           
  5021                           ; BSR set to: 15
  5022                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
  5023  0007F4  0100               	movlb	0	; () banked
  5024  0007F6  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5025  0007F8  D003               	goto	l462
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
  5029  0007FA  010F               	movlb	15	; () banked
  5030  0007FC  8305               	bsf	5,1,b	;volatile
  5031  0007FE  D002               	goto	l463
  5032  000800                     l462:
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;inc\CANlib.h: 891: else
  5036                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
  5037  000800  010F               	movlb	15	; () banked
  5038  000802  9305               	bcf	5,1,b	;volatile
  5039  000804                     l463:
  5040                           
  5041                           ; BSR set to: 15
  5042                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
  5043  000804  0100               	movlb	0	; () banked
  5044  000806  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5045  000808  D003               	goto	l464
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
  5049  00080A  010F               	movlb	15	; () banked
  5050  00080C  8B05               	bsf	5,5,b	;volatile
  5051  00080E  D002               	goto	l465
  5052  000810                     l464:
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;inc\CANlib.h: 896: else
  5056                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
  5057  000810  010F               	movlb	15	; () banked
  5058  000812  9B05               	bcf	5,5,b	;volatile
  5059  000814                     l465:
  5060                           
  5061                           ; BSR set to: 15
  5062                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
  5063  000814  0100               	movlb	0	; () banked
  5064  000816  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5065  000818  D003               	goto	l466
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
  5069  00081A  010F               	movlb	15	; () banked
  5070  00081C  8D05               	bsf	5,6,b	;volatile
  5071  00081E  D002               	goto	l467
  5072  000820                     l466:
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;inc\CANlib.h: 901: else
  5076                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
  5077  000820  010F               	movlb	15	; () banked
  5078  000822  9D05               	bcf	5,6,b	;volatile
  5079  000824                     l467:
  5080                           
  5081                           ; BSR set to: 15
  5082                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
  5083  000824  0100               	movlb	0	; () banked
  5084  000826  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5085  000828  D003               	goto	l468
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
  5089  00082A  010F               	movlb	15	; () banked
  5090  00082C  8F05               	bsf	5,7,b	;volatile
  5091  00082E  D002               	goto	l3001
  5092  000830                     l468:
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;inc\CANlib.h: 906: else
  5096                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
  5097  000830  010F               	movlb	15	; () banked
  5098  000832  9F05               	bcf	5,7,b	;volatile
  5099  000834                     l3001:
  5100                           
  5101                           ; BSR set to: 15
  5102                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
  5103  000834  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5104  000838  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5105  00083C  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5106  000840  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5107  000844  0E16               	movlw	22
  5108  000846  D006               	goto	u3140
  5109  000848                     u3145:
  5110  000848  0100               	movlb	0	; () banked
  5111  00084A  90D8               	bcf	status,0,c
  5112  00084C  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5113  00084E  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5114  000850  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5115  000852  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5116  000854                     u3140:
  5117  000854  2EE8               	decfsz	wreg,f,c
  5118  000856  D7F8               	goto	u3145
  5119  000858  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5120  00085C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5121  000860  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5122  000864  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
  5126  000868  0100               	movlb	0	; () banked
  5127  00086A  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5128  00086C  0100               	movlb	0	; () banked
  5129  00086E  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5130  000870  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5131  000872  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5132  000874  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
  5136  000876  C07D  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5137  00087A                     l3007:
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;inc\CANlib.h: 912: }
  5141                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5142  00087A  0E02               	movlw	2
  5143  00087C  0100               	movlb	0	; () banked
  5144  00087E  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5145  000880  A4D8               	btfss	status,2,c
  5146  000882  D089               	goto	l3041
  5147                           
  5148                           ; BSR set to: 0
  5149  000884  0EF7               	movlw	247
  5150  000886  0100               	movlb	0	; () banked
  5151  000888  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5152  00088A  A4D8               	btfss	status,2,c
  5153  00088C  D084               	goto	l3041
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;inc\CANlib.h: 916: {
  5157                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
  5158  00088E  010F               	movlb	15	; () banked
  5159  000890  8709               	bsf	9,3,b	;volatile
  5160                           
  5161                           ; BSR set to: 15
  5162                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
  5163  000892  0100               	movlb	0	; () banked
  5164  000894  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5165  000896  0100               	movlb	0	; () banked
  5166  000898  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5167  00089A  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5168  00089C  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5169  00089E  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
  5173  0008A0  C07D  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
  5177  0008A4  0E00               	movlw	0
  5178  0008A6  0100               	movlb	0	; () banked
  5179  0008A8  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5180  0008AA  0100               	movlb	0	; () banked
  5181  0008AC  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5182  0008AE  0EFF               	movlw	255
  5183  0008B0  0100               	movlb	0	; () banked
  5184  0008B2  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5185  0008B4  0100               	movlb	0	; () banked
  5186  0008B6  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5187  0008B8  0E00               	movlw	0
  5188  0008BA  0100               	movlb	0	; () banked
  5189  0008BC  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5190  0008BE  0100               	movlb	0	; () banked
  5191  0008C0  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5192  0008C2  0E00               	movlw	0
  5193  0008C4  0100               	movlb	0	; () banked
  5194  0008C6  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5195  0008C8  0100               	movlb	0	; () banked
  5196  0008CA  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
  5200  0008CC  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5201  0008D0  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5202  0008D4  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5203  0008D8  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5204  0008DC  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5205  0008E0  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5206  0008E4  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5207  0008E8  0100               	movlb	0	; () banked
  5208  0008EA  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5209  0008EC  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5210  0008F0  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5211  0008F4  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5212  0008F8  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
  5216  0008FC  C07D  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
  5220  000900  0100               	movlb	0	; () banked
  5221  000902  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5222  000904  D003               	goto	l471
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
  5226  000906  010F               	movlb	15	; () banked
  5227  000908  8109               	bsf	9,0,b	;volatile
  5228  00090A  D002               	goto	l472
  5229  00090C                     l471:
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;inc\CANlib.h: 928: else
  5233                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
  5234  00090C  010F               	movlb	15	; () banked
  5235  00090E  9109               	bcf	9,0,b	;volatile
  5236  000910                     l472:
  5237                           
  5238                           ; BSR set to: 15
  5239                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
  5240  000910  0100               	movlb	0	; () banked
  5241  000912  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5242  000914  D003               	goto	l473
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
  5246  000916  010F               	movlb	15	; () banked
  5247  000918  8309               	bsf	9,1,b	;volatile
  5248  00091A  D002               	goto	l474
  5249  00091C                     l473:
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;inc\CANlib.h: 933: else
  5253                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
  5254  00091C  010F               	movlb	15	; () banked
  5255  00091E  9309               	bcf	9,1,b	;volatile
  5256  000920                     l474:
  5257                           
  5258                           ; BSR set to: 15
  5259                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
  5260  000920  0100               	movlb	0	; () banked
  5261  000922  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5262  000924  D003               	goto	l475
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
  5266  000926  010F               	movlb	15	; () banked
  5267  000928  8B09               	bsf	9,5,b	;volatile
  5268  00092A  D002               	goto	l476
  5269  00092C                     l475:
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;inc\CANlib.h: 938: else
  5273                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
  5274  00092C  010F               	movlb	15	; () banked
  5275  00092E  9B09               	bcf	9,5,b	;volatile
  5276  000930                     l476:
  5277                           
  5278                           ; BSR set to: 15
  5279                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
  5280  000930  0100               	movlb	0	; () banked
  5281  000932  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5282  000934  D003               	goto	l477
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
  5286  000936  010F               	movlb	15	; () banked
  5287  000938  8D09               	bsf	9,6,b	;volatile
  5288  00093A  D002               	goto	l478
  5289  00093C                     l477:
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;inc\CANlib.h: 943: else
  5293                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
  5294  00093C  010F               	movlb	15	; () banked
  5295  00093E  9D09               	bcf	9,6,b	;volatile
  5296  000940                     l478:
  5297                           
  5298                           ; BSR set to: 15
  5299                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
  5300  000940  0100               	movlb	0	; () banked
  5301  000942  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5302  000944  D003               	goto	l479
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
  5306  000946  010F               	movlb	15	; () banked
  5307  000948  8F09               	bsf	9,7,b	;volatile
  5308  00094A  D002               	goto	l3035
  5309  00094C                     l479:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;inc\CANlib.h: 948: else
  5313                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
  5314  00094C  010F               	movlb	15	; () banked
  5315  00094E  9F09               	bcf	9,7,b	;volatile
  5316  000950                     l3035:
  5317                           
  5318                           ; BSR set to: 15
  5319                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
  5320  000950  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5321  000954  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5322  000958  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5323  00095C  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5324  000960  0E16               	movlw	22
  5325  000962  D006               	goto	u3220
  5326  000964                     u3225:
  5327  000964  0100               	movlb	0	; () banked
  5328  000966  90D8               	bcf	status,0,c
  5329  000968  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5330  00096A  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5331  00096C  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5332  00096E  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5333  000970                     u3220:
  5334  000970  2EE8               	decfsz	wreg,f,c
  5335  000972  D7F8               	goto	u3225
  5336  000974  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5337  000978  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5338  00097C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5339  000980  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
  5343  000984  0100               	movlb	0	; () banked
  5344  000986  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5345  000988  0100               	movlb	0	; () banked
  5346  00098A  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5347  00098C  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5348  00098E  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5349  000990  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
  5353  000992  C07D  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5354  000996                     l3041:
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;inc\CANlib.h: 954: }
  5358                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5359  000996  0E03               	movlw	3
  5360  000998  0100               	movlb	0	; () banked
  5361  00099A  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5362  00099C  A4D8               	btfss	status,2,c
  5363  00099E  D089               	goto	l3075
  5364                           
  5365                           ; BSR set to: 0
  5366  0009A0  0EF7               	movlw	247
  5367  0009A2  0100               	movlb	0	; () banked
  5368  0009A4  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5369  0009A6  A4D8               	btfss	status,2,c
  5370  0009A8  D084               	goto	l3075
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;inc\CANlib.h: 957: {
  5374                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
  5375  0009AA  010F               	movlb	15	; () banked
  5376  0009AC  870D               	bsf	13,3,b	;volatile
  5377                           
  5378                           ; BSR set to: 15
  5379                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
  5380  0009AE  0100               	movlb	0	; () banked
  5381  0009B0  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5382  0009B2  0100               	movlb	0	; () banked
  5383  0009B4  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5384  0009B6  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5385  0009B8  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5386  0009BA  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
  5390  0009BC  C07D  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
  5394  0009C0  0E00               	movlw	0
  5395  0009C2  0100               	movlb	0	; () banked
  5396  0009C4  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5397  0009C6  0100               	movlb	0	; () banked
  5398  0009C8  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5399  0009CA  0EFF               	movlw	255
  5400  0009CC  0100               	movlb	0	; () banked
  5401  0009CE  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5402  0009D0  0100               	movlb	0	; () banked
  5403  0009D2  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5404  0009D4  0E00               	movlw	0
  5405  0009D6  0100               	movlb	0	; () banked
  5406  0009D8  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5407  0009DA  0100               	movlb	0	; () banked
  5408  0009DC  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5409  0009DE  0E00               	movlw	0
  5410  0009E0  0100               	movlb	0	; () banked
  5411  0009E2  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5412  0009E4  0100               	movlb	0	; () banked
  5413  0009E6  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
  5417  0009E8  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5418  0009EC  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5419  0009F0  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5420  0009F4  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5421  0009F8  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5422  0009FC  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5423  000A00  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5424  000A04  0100               	movlb	0	; () banked
  5425  000A06  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5426  000A08  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5427  000A0C  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5428  000A10  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5429  000A14  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5430                           
  5431                           ; BSR set to: 0
  5432                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
  5433  000A18  C07D  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
  5437  000A1C  0100               	movlb	0	; () banked
  5438  000A1E  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5439  000A20  D003               	goto	l482
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
  5443  000A22  010F               	movlb	15	; () banked
  5444  000A24  810D               	bsf	13,0,b	;volatile
  5445  000A26  D002               	goto	l483
  5446  000A28                     l482:
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;inc\CANlib.h: 969: else
  5450                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
  5451  000A28  010F               	movlb	15	; () banked
  5452  000A2A  910D               	bcf	13,0,b	;volatile
  5453  000A2C                     l483:
  5454                           
  5455                           ; BSR set to: 15
  5456                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
  5457  000A2C  0100               	movlb	0	; () banked
  5458  000A2E  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5459  000A30  D003               	goto	l484
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
  5463  000A32  010F               	movlb	15	; () banked
  5464  000A34  830D               	bsf	13,1,b	;volatile
  5465  000A36  D002               	goto	l485
  5466  000A38                     l484:
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;inc\CANlib.h: 974: else
  5470                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
  5471  000A38  010F               	movlb	15	; () banked
  5472  000A3A  930D               	bcf	13,1,b	;volatile
  5473  000A3C                     l485:
  5474                           
  5475                           ; BSR set to: 15
  5476                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
  5477  000A3C  0100               	movlb	0	; () banked
  5478  000A3E  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5479  000A40  D003               	goto	l486
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
  5483  000A42  010F               	movlb	15	; () banked
  5484  000A44  8B0D               	bsf	13,5,b	;volatile
  5485  000A46  D002               	goto	l487
  5486  000A48                     l486:
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;inc\CANlib.h: 979: else
  5490                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
  5491  000A48  010F               	movlb	15	; () banked
  5492  000A4A  9B0D               	bcf	13,5,b	;volatile
  5493  000A4C                     l487:
  5494                           
  5495                           ; BSR set to: 15
  5496                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
  5497  000A4C  0100               	movlb	0	; () banked
  5498  000A4E  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5499  000A50  D003               	goto	l488
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
  5503  000A52  010F               	movlb	15	; () banked
  5504  000A54  8D0D               	bsf	13,6,b	;volatile
  5505  000A56  D002               	goto	l489
  5506  000A58                     l488:
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;inc\CANlib.h: 984: else
  5510                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
  5511  000A58  010F               	movlb	15	; () banked
  5512  000A5A  9D0D               	bcf	13,6,b	;volatile
  5513  000A5C                     l489:
  5514                           
  5515                           ; BSR set to: 15
  5516                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
  5517  000A5C  0100               	movlb	0	; () banked
  5518  000A5E  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5519  000A60  D003               	goto	l490
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
  5523  000A62  010F               	movlb	15	; () banked
  5524  000A64  8F0D               	bsf	13,7,b	;volatile
  5525  000A66  D002               	goto	l3069
  5526  000A68                     l490:
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;inc\CANlib.h: 989: else
  5530                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
  5531  000A68  010F               	movlb	15	; () banked
  5532  000A6A  9F0D               	bcf	13,7,b	;volatile
  5533  000A6C                     l3069:
  5534                           
  5535                           ; BSR set to: 15
  5536                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
  5537  000A6C  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5538  000A70  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5539  000A74  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5540  000A78  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5541  000A7C  0E16               	movlw	22
  5542  000A7E  D006               	goto	u3300
  5543  000A80                     u3305:
  5544  000A80  0100               	movlb	0	; () banked
  5545  000A82  90D8               	bcf	status,0,c
  5546  000A84  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5547  000A86  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5548  000A88  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5549  000A8A  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5550  000A8C                     u3300:
  5551  000A8C  2EE8               	decfsz	wreg,f,c
  5552  000A8E  D7F8               	goto	u3305
  5553  000A90  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5554  000A94  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5555  000A98  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5556  000A9C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
  5560  000AA0  0100               	movlb	0	; () banked
  5561  000AA2  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5562  000AA4  0100               	movlb	0	; () banked
  5563  000AA6  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5564  000AA8  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5565  000AAA  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5566  000AAC  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
  5570  000AAE  C07D  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5571  000AB2                     l3075:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;inc\CANlib.h: 995: }
  5575                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5576  000AB2  0E04               	movlw	4
  5577  000AB4  0100               	movlb	0	; () banked
  5578  000AB6  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5579  000AB8  A4D8               	btfss	status,2,c
  5580  000ABA  D089               	goto	l3109
  5581                           
  5582                           ; BSR set to: 0
  5583  000ABC  0EF7               	movlw	247
  5584  000ABE  0100               	movlb	0	; () banked
  5585  000AC0  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5586  000AC2  A4D8               	btfss	status,2,c
  5587  000AC4  D084               	goto	l3109
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;inc\CANlib.h: 998: {
  5591                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
  5592  000AC6  010F               	movlb	15	; () banked
  5593  000AC8  8711               	bsf	17,3,b	;volatile
  5594                           
  5595                           ; BSR set to: 15
  5596                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
  5597  000ACA  0100               	movlb	0	; () banked
  5598  000ACC  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5599  000ACE  0100               	movlb	0	; () banked
  5600  000AD0  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5601  000AD2  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5602  000AD4  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5603  000AD6  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
  5607  000AD8  C07D  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
  5611  000ADC  0E00               	movlw	0
  5612  000ADE  0100               	movlb	0	; () banked
  5613  000AE0  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5614  000AE2  0100               	movlb	0	; () banked
  5615  000AE4  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5616  000AE6  0EFF               	movlw	255
  5617  000AE8  0100               	movlb	0	; () banked
  5618  000AEA  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5619  000AEC  0100               	movlb	0	; () banked
  5620  000AEE  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5621  000AF0  0E00               	movlw	0
  5622  000AF2  0100               	movlb	0	; () banked
  5623  000AF4  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5624  000AF6  0100               	movlb	0	; () banked
  5625  000AF8  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5626  000AFA  0E00               	movlw	0
  5627  000AFC  0100               	movlb	0	; () banked
  5628  000AFE  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5629  000B00  0100               	movlb	0	; () banked
  5630  000B02  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
  5634  000B04  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5635  000B08  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5636  000B0C  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5637  000B10  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5638  000B14  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5639  000B18  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5640  000B1C  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5641  000B20  0100               	movlb	0	; () banked
  5642  000B22  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5643  000B24  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5644  000B28  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5645  000B2C  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5646  000B30  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
  5650  000B34  C07D  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
  5654  000B38  0100               	movlb	0	; () banked
  5655  000B3A  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5656  000B3C  D003               	goto	l493
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
  5660  000B3E  010F               	movlb	15	; () banked
  5661  000B40  8111               	bsf	17,0,b	;volatile
  5662  000B42  D002               	goto	l494
  5663  000B44                     l493:
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;inc\CANlib.h: 1010: else
  5667                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
  5668  000B44  010F               	movlb	15	; () banked
  5669  000B46  9111               	bcf	17,0,b	;volatile
  5670  000B48                     l494:
  5671                           
  5672                           ; BSR set to: 15
  5673                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
  5674  000B48  0100               	movlb	0	; () banked
  5675  000B4A  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5676  000B4C  D003               	goto	l495
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
  5680  000B4E  010F               	movlb	15	; () banked
  5681  000B50  8311               	bsf	17,1,b	;volatile
  5682  000B52  D002               	goto	l496
  5683  000B54                     l495:
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;inc\CANlib.h: 1015: else
  5687                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
  5688  000B54  010F               	movlb	15	; () banked
  5689  000B56  9311               	bcf	17,1,b	;volatile
  5690  000B58                     l496:
  5691                           
  5692                           ; BSR set to: 15
  5693                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
  5694  000B58  0100               	movlb	0	; () banked
  5695  000B5A  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5696  000B5C  D003               	goto	l497
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
  5700  000B5E  010F               	movlb	15	; () banked
  5701  000B60  8B11               	bsf	17,5,b	;volatile
  5702  000B62  D002               	goto	l498
  5703  000B64                     l497:
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;inc\CANlib.h: 1020: else
  5707                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
  5708  000B64  010F               	movlb	15	; () banked
  5709  000B66  9B11               	bcf	17,5,b	;volatile
  5710  000B68                     l498:
  5711                           
  5712                           ; BSR set to: 15
  5713                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
  5714  000B68  0100               	movlb	0	; () banked
  5715  000B6A  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5716  000B6C  D003               	goto	l499
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
  5720  000B6E  010F               	movlb	15	; () banked
  5721  000B70  8D11               	bsf	17,6,b	;volatile
  5722  000B72  D002               	goto	l500
  5723  000B74                     l499:
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;inc\CANlib.h: 1025: else
  5727                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
  5728  000B74  010F               	movlb	15	; () banked
  5729  000B76  9D11               	bcf	17,6,b	;volatile
  5730  000B78                     l500:
  5731                           
  5732                           ; BSR set to: 15
  5733                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
  5734  000B78  0100               	movlb	0	; () banked
  5735  000B7A  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5736  000B7C  D003               	goto	l501
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
  5740  000B7E  010F               	movlb	15	; () banked
  5741  000B80  8F11               	bsf	17,7,b	;volatile
  5742  000B82  D002               	goto	l3103
  5743  000B84                     l501:
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;inc\CANlib.h: 1030: else
  5747                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
  5748  000B84  010F               	movlb	15	; () banked
  5749  000B86  9F11               	bcf	17,7,b	;volatile
  5750  000B88                     l3103:
  5751                           
  5752                           ; BSR set to: 15
  5753                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
  5754  000B88  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5755  000B8C  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5756  000B90  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5757  000B94  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5758  000B98  0E16               	movlw	22
  5759  000B9A  D006               	goto	u3380
  5760  000B9C                     u3385:
  5761  000B9C  0100               	movlb	0	; () banked
  5762  000B9E  90D8               	bcf	status,0,c
  5763  000BA0  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5764  000BA2  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5765  000BA4  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5766  000BA6  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5767  000BA8                     u3380:
  5768  000BA8  2EE8               	decfsz	wreg,f,c
  5769  000BAA  D7F8               	goto	u3385
  5770  000BAC  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5771  000BB0  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5772  000BB4  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5773  000BB8  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
  5777  000BBC  0100               	movlb	0	; () banked
  5778  000BBE  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5779  000BC0  0100               	movlb	0	; () banked
  5780  000BC2  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5781  000BC4  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5782  000BC6  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5783  000BC8  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
  5787  000BCA  C07D  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5788  000BCE                     l3109:
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;inc\CANlib.h: 1036: }
  5792                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5793  000BCE  0E05               	movlw	5
  5794  000BD0  0100               	movlb	0	; () banked
  5795  000BD2  197C               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5796  000BD4  A4D8               	btfss	status,2,c
  5797  000BD6  0012               	return	
  5798                           
  5799                           ; BSR set to: 0
  5800  000BD8  0EF7               	movlw	247
  5801  000BDA  0100               	movlb	0	; () banked
  5802  000BDC  1977               	xorwf	CANSetFilter@type& (0+255),w,b
  5803  000BDE  A4D8               	btfss	status,2,c
  5804  000BE0  0012               	return	
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;inc\CANlib.h: 1039: {
  5808                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
  5809  000BE2  010F               	movlb	15	; () banked
  5810  000BE4  8715               	bsf	21,3,b	;volatile
  5811                           
  5812                           ; BSR set to: 15
  5813                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
  5814  000BE6  0100               	movlb	0	; () banked
  5815  000BE8  5173               	movf	CANSetFilter@filter& (0+255),w,b
  5816  000BEA  0100               	movlb	0	; () banked
  5817  000BEC  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5818  000BEE  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5819  000BF0  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5820  000BF2  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
  5824  000BF4  C07D  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
  5828  000BF8  0E00               	movlw	0
  5829  000BFA  0100               	movlb	0	; () banked
  5830  000BFC  1573               	andwf	CANSetFilter@filter& (0+255),w,b
  5831  000BFE  0100               	movlb	0	; () banked
  5832  000C00  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5833  000C02  0EFF               	movlw	255
  5834  000C04  0100               	movlb	0	; () banked
  5835  000C06  1574               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5836  000C08  0100               	movlb	0	; () banked
  5837  000C0A  6F7E               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5838  000C0C  0E00               	movlw	0
  5839  000C0E  0100               	movlb	0	; () banked
  5840  000C10  1575               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5841  000C12  0100               	movlb	0	; () banked
  5842  000C14  6F7F               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5843  000C16  0E00               	movlw	0
  5844  000C18  0100               	movlb	0	; () banked
  5845  000C1A  1576               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5846  000C1C  0100               	movlb	0	; () banked
  5847  000C1E  6F80               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
  5851  000C20  C07D  F078         	movff	CANSetFilter@tamp,??_CANSetFilter
  5852  000C24  C07E  F079         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5853  000C28  C07F  F07A         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5854  000C2C  C080  F07B         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5855  000C30  C079  F078         	movff	??_CANSetFilter+1,??_CANSetFilter
  5856  000C34  C07A  F079         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5857  000C38  C07B  F07A         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5858  000C3C  0100               	movlb	0	; () banked
  5859  000C3E  6B7B               	clrf	(??_CANSetFilter+3)& (0+255),b
  5860  000C40  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5861  000C44  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5862  000C48  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5863  000C4C  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
  5867  000C50  C07D  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
  5871  000C54  0100               	movlb	0	; () banked
  5872  000C56  A175               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5873  000C58  D003               	goto	l504
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
  5877  000C5A  010F               	movlb	15	; () banked
  5878  000C5C  8115               	bsf	21,0,b	;volatile
  5879  000C5E  D002               	goto	l505
  5880  000C60                     l504:
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;inc\CANlib.h: 1051: else
  5884                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
  5885  000C60  010F               	movlb	15	; () banked
  5886  000C62  9115               	bcf	21,0,b	;volatile
  5887  000C64                     l505:
  5888                           
  5889                           ; BSR set to: 15
  5890                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
  5891  000C64  0100               	movlb	0	; () banked
  5892  000C66  A375               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5893  000C68  D003               	goto	l506
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
  5897  000C6A  010F               	movlb	15	; () banked
  5898  000C6C  8315               	bsf	21,1,b	;volatile
  5899  000C6E  D002               	goto	l507
  5900  000C70                     l506:
  5901                           
  5902                           ; BSR set to: 0
  5903                           ;inc\CANlib.h: 1056: else
  5904                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
  5905  000C70  010F               	movlb	15	; () banked
  5906  000C72  9315               	bcf	21,1,b	;volatile
  5907  000C74                     l507:
  5908                           
  5909                           ; BSR set to: 15
  5910                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
  5911  000C74  0100               	movlb	0	; () banked
  5912  000C76  A575               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5913  000C78  D003               	goto	l508
  5914                           
  5915                           ; BSR set to: 0
  5916                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
  5917  000C7A  010F               	movlb	15	; () banked
  5918  000C7C  8B15               	bsf	21,5,b	;volatile
  5919  000C7E  D002               	goto	l509
  5920  000C80                     l508:
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;inc\CANlib.h: 1061: else
  5924                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
  5925  000C80  010F               	movlb	15	; () banked
  5926  000C82  9B15               	bcf	21,5,b	;volatile
  5927  000C84                     l509:
  5928                           
  5929                           ; BSR set to: 15
  5930                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
  5931  000C84  0100               	movlb	0	; () banked
  5932  000C86  A775               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5933  000C88  D003               	goto	l510
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
  5937  000C8A  010F               	movlb	15	; () banked
  5938  000C8C  8D15               	bsf	21,6,b	;volatile
  5939  000C8E  D002               	goto	l511
  5940  000C90                     l510:
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;inc\CANlib.h: 1066: else
  5944                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
  5945  000C90  010F               	movlb	15	; () banked
  5946  000C92  9D15               	bcf	21,6,b	;volatile
  5947  000C94                     l511:
  5948                           
  5949                           ; BSR set to: 15
  5950                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
  5951  000C94  0100               	movlb	0	; () banked
  5952  000C96  A975               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5953  000C98  D003               	goto	l512
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
  5957  000C9A  010F               	movlb	15	; () banked
  5958  000C9C  8F15               	bsf	21,7,b	;volatile
  5959  000C9E  D002               	goto	l3137
  5960  000CA0                     l512:
  5961                           
  5962                           ; BSR set to: 0
  5963                           ;inc\CANlib.h: 1071: else
  5964                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
  5965  000CA0  010F               	movlb	15	; () banked
  5966  000CA2  9F15               	bcf	21,7,b	;volatile
  5967  000CA4                     l3137:
  5968                           
  5969                           ; BSR set to: 15
  5970                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
  5971  000CA4  C073  F078         	movff	CANSetFilter@filter,??_CANSetFilter
  5972  000CA8  C074  F079         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5973  000CAC  C075  F07A         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5974  000CB0  C076  F07B         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5975  000CB4  0E16               	movlw	22
  5976  000CB6  D006               	goto	u3460
  5977  000CB8                     u3465:
  5978  000CB8  0100               	movlb	0	; () banked
  5979  000CBA  90D8               	bcf	status,0,c
  5980  000CBC  337B               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5981  000CBE  337A               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5982  000CC0  3379               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5983  000CC2  3378               	rrcf	??_CANSetFilter& (0+255),f,b
  5984  000CC4                     u3460:
  5985  000CC4  2EE8               	decfsz	wreg,f,c
  5986  000CC6  D7F8               	goto	u3465
  5987  000CC8  C078  F07D         	movff	??_CANSetFilter,CANSetFilter@tamp
  5988  000CCC  C079  F07E         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5989  000CD0  C07A  F07F         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5990  000CD4  C07B  F080         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
  5994  000CD8  0100               	movlb	0	; () banked
  5995  000CDA  517D               	movf	CANSetFilter@tamp& (0+255),w,b
  5996  000CDC  0100               	movlb	0	; () banked
  5997  000CDE  6F7D               	movwf	CANSetFilter@tamp& (0+255),b
  5998  000CE0  6B7E               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5999  000CE2  6B7F               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6000  000CE4  6B80               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
  6004  000CE6  C07D  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6005  000CEA  0012               	return	
  6006  000CEC                     __end_of_CANSetFilter:
  6007                           	opt stack 0
  6008                           tblptru	equ	0xFF8
  6009                           tblptrh	equ	0xFF7
  6010                           tblptrl	equ	0xFF6
  6011                           tablat	equ	0xFF5
  6012                           prodh	equ	0xFF4
  6013                           prodl	equ	0xFF3
  6014                           intcon	equ	0xFF2
  6015                           intcon2	equ	0xFF1
  6016                           postinc0	equ	0xFEE
  6017                           wreg	equ	0xFE8
  6018                           postdec1	equ	0xFE5
  6019                           fsr1l	equ	0xFE1
  6020                           indf2	equ	0xFDF
  6021                           fsr2h	equ	0xFDA
  6022                           fsr2l	equ	0xFD9
  6023                           status	equ	0xFD8
  6024                           
  6025 ;; *************** function _CANOperationMode *****************
  6026 ;; Defined at:
  6027 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  mode            1    wreg     enum E16838
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;  mode            1   19[BANK0 ] enum E16838
  6032 ;; Return value:  Size  Location     Type
  6033 ;;		None               void
  6034 ;; Registers used:
  6035 ;;		wreg, status,2, status,0
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6041 ;;      Params:         0       0       0       0
  6042 ;;      Locals:         0       1       0       0
  6043 ;;      Temps:          0       0       0       0
  6044 ;;      Totals:         0       1       0       0
  6045 ;;Total ram usage:        1 bytes
  6046 ;; Hardware stack levels used:    1
  6047 ;; Hardware stack levels required when called:    4
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_CANInitialize
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text11
  6056  002CC4                     __ptext11:
  6057                           	opt stack 0
  6058  002CC4                     _CANOperationMode:
  6059                           	opt stack 24
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;incstack = 0
  6063                           ;CANOperationMode@mode stored from wreg
  6064  002CC4  0100               	movlb	0	; () banked
  6065  002CC6  6F73               	movwf	CANOperationMode@mode& (0+255),b
  6066                           
  6067                           ;inc\CANlib.h: 209: CANCON = mode;
  6068  002CC8  C073  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6069  002CCC                     l2733:
  6070  002CCC  506E               	movf	3950,w,c	;volatile
  6071  002CCE  0BE0               	andlw	224
  6072  002CD0  0100               	movlb	0	; () banked
  6073  002CD2  1973               	xorwf	CANOperationMode@mode& (0+255),w,b
  6074  002CD4  B4D8               	btfsc	status,2,c
  6075  002CD6  0012               	return	
  6076  002CD8  D7F9               	goto	l2733
  6077  002CDA                     __end_of_CANOperationMode:
  6078                           	opt stack 0
  6079                           tblptru	equ	0xFF8
  6080                           tblptrh	equ	0xFF7
  6081                           tblptrl	equ	0xFF6
  6082                           tablat	equ	0xFF5
  6083                           prodh	equ	0xFF4
  6084                           prodl	equ	0xFF3
  6085                           intcon	equ	0xFF2
  6086                           intcon2	equ	0xFF1
  6087                           postinc0	equ	0xFEE
  6088                           wreg	equ	0xFE8
  6089                           postdec1	equ	0xFE5
  6090                           fsr1l	equ	0xFE1
  6091                           indf2	equ	0xFDF
  6092                           fsr2h	equ	0xFDA
  6093                           fsr2l	equ	0xFD9
  6094                           status	equ	0xFD8
  6095                           
  6096 ;; *************** function _calibrazione *****************
  6097 ;; Defined at:
  6098 ;;		line 172 in file "sterzo.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;		None
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;		None
  6103 ;; Return value:  Size  Location     Type
  6104 ;;		None               void
  6105 ;; Registers used:
  6106 ;;		wreg, status,2, status,0, cstack
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6112 ;;      Params:         0       0       0       0
  6113 ;;      Locals:         0       0       0       0
  6114 ;;      Temps:          0       0       0       0
  6115 ;;      Totals:         0       0       0       0
  6116 ;;Total ram usage:        0 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    5
  6119 ;; This function calls:
  6120 ;;		_BusyADC
  6121 ;;		_ConvertADC
  6122 ;;		_ReadADC
  6123 ;;		___aldiv
  6124 ;; This function is called by:
  6125 ;;		_main
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           	psect	text12
  6130  002AAE                     __ptext12:
  6131                           	opt stack 0
  6132  002AAE                     _calibrazione:
  6133                           	opt stack 25
  6134                           
  6135                           ;sterzo.c: 173: ConvertADC();
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;incstack = 0
  6139  002AAE  EC9E  F016         	call	_ConvertADC	;wreg free
  6140  002AB2                     l3727:
  6141  002AB2  EC8A  F016         	call	_BusyADC	;wreg free
  6142  002AB6  0900               	iorlw	0
  6143  002AB8  A4D8               	btfss	status,2,c
  6144  002ABA  D7FB               	goto	l3727
  6145                           
  6146                           ;sterzo.c: 175: ADCResult = ReadADC();
  6147  002ABC  EC78  F016         	call	_ReadADC	;wreg free
  6148  002AC0  0100               	movlb	0	; () banked
  6149  002AC2  C073  F091         	movff	?_ReadADC,_ADCResult
  6150  002AC6  0100               	movlb	0	; () banked
  6151  002AC8  C074  F092         	movff	?_ReadADC+1,_ADCResult+1
  6152  002ACC  0100               	movlb	0	; () banked
  6153  002ACE  0E00               	movlw	0
  6154  002AD0  BF92               	btfsc	(_ADCResult+1)& (0+255),7,b
  6155  002AD2  0EFF               	movlw	-1
  6156  002AD4  6F93               	movwf	(_ADCResult+2)& (0+255),b
  6157  002AD6  6F94               	movwf	(_ADCResult+3)& (0+255),b
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;sterzo.c: 176: calibration = (ADCResult - 511) / 30;
  6161  002AD8  0E01               	movlw	1
  6162  002ADA  0100               	movlb	0	; () banked
  6163  002ADC  2591               	addwf	_ADCResult& (0+255),w,b
  6164  002ADE  0100               	movlb	0	; () banked
  6165  002AE0  6F73               	movwf	___aldiv@dividend& (0+255),b
  6166  002AE2  0EFE               	movlw	254
  6167  002AE4  0100               	movlb	0	; () banked
  6168  002AE6  2192               	addwfc	(_ADCResult+1)& (0+255),w,b
  6169  002AE8  0100               	movlb	0	; () banked
  6170  002AEA  6F74               	movwf	(___aldiv@dividend+1)& (0+255),b
  6171  002AEC  0EFF               	movlw	255
  6172  002AEE  0100               	movlb	0	; () banked
  6173  002AF0  2193               	addwfc	(_ADCResult+2)& (0+255),w,b
  6174  002AF2  0100               	movlb	0	; () banked
  6175  002AF4  6F75               	movwf	(___aldiv@dividend+2)& (0+255),b
  6176  002AF6  0EFF               	movlw	255
  6177  002AF8  0100               	movlb	0	; () banked
  6178  002AFA  2194               	addwfc	(_ADCResult+3)& (0+255),w,b
  6179  002AFC  0100               	movlb	0	; () banked
  6180  002AFE  6F76               	movwf	(___aldiv@dividend+3)& (0+255),b
  6181  002B00  0E1E               	movlw	30
  6182  002B02  0100               	movlb	0	; () banked
  6183  002B04  6F77               	movwf	___aldiv@divisor& (0+255),b
  6184  002B06  0E00               	movlw	0
  6185  002B08  6F78               	movwf	(___aldiv@divisor+1)& (0+255),b
  6186  002B0A  0E00               	movlw	0
  6187  002B0C  6F79               	movwf	(___aldiv@divisor+2)& (0+255),b
  6188  002B0E  0E00               	movlw	0
  6189  002B10  6F7A               	movwf	(___aldiv@divisor+3)& (0+255),b
  6190  002B12  EC58  F013         	call	___aldiv	;wreg free
  6191  002B16  C073  F02D         	movff	?___aldiv,_calibration
  6192  002B1A  C074  F02E         	movff	?___aldiv+1,_calibration+1
  6193  002B1E  0012               	return		;funcret
  6194  002B20                     __end_of_calibrazione:
  6195                           	opt stack 0
  6196                           tblptru	equ	0xFF8
  6197                           tblptrh	equ	0xFF7
  6198                           tblptrl	equ	0xFF6
  6199                           tablat	equ	0xFF5
  6200                           prodh	equ	0xFF4
  6201                           prodl	equ	0xFF3
  6202                           intcon	equ	0xFF2
  6203                           intcon2	equ	0xFF1
  6204                           postinc0	equ	0xFEE
  6205                           wreg	equ	0xFE8
  6206                           postdec1	equ	0xFE5
  6207                           fsr1l	equ	0xFE1
  6208                           indf2	equ	0xFDF
  6209                           fsr2h	equ	0xFDA
  6210                           fsr2l	equ	0xFD9
  6211                           status	equ	0xFD8
  6212                           
  6213 ;; *************** function ___aldiv *****************
  6214 ;; Defined at:
  6215 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\aldiv.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  dividend        4   19[BANK0 ] long 
  6218 ;;  divisor         4   23[BANK0 ] long 
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;  quotient        4   29[BANK0 ] long 
  6221 ;;  sign            1   28[BANK0 ] unsigned char 
  6222 ;;  counter         1   27[BANK0 ] unsigned char 
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  4   19[BANK0 ] long 
  6225 ;; Registers used:
  6226 ;;		wreg, status,2, status,0
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6232 ;;      Params:         0       8       0       0
  6233 ;;      Locals:         0       6       0       0
  6234 ;;      Temps:          0       0       0       0
  6235 ;;      Totals:         0      14       0       0
  6236 ;;Total ram usage:       14 bytes
  6237 ;; Hardware stack levels used:    1
  6238 ;; Hardware stack levels required when called:    4
  6239 ;; This function calls:
  6240 ;;		Nothing
  6241 ;; This function is called by:
  6242 ;;		_calibrazione
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           	psect	text13
  6247  0026B0                     __ptext13:
  6248                           	opt stack 0
  6249  0026B0                     ___aldiv:
  6250                           	opt stack 25
  6251                           
  6252                           ;incstack = 0
  6253  0026B0  0E00               	movlw	0
  6254  0026B2  0100               	movlb	0	; () banked
  6255  0026B4  6F7C               	movwf	___aldiv@sign& (0+255),b
  6256                           
  6257                           ; BSR set to: 0
  6258  0026B6  0100               	movlb	0	; () banked
  6259  0026B8  AF7A               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6260  0026BA  D00C               	goto	l3473
  6261                           
  6262                           ; BSR set to: 0
  6263  0026BC  0100               	movlb	0	; () banked
  6264  0026BE  1F7A               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6265  0026C0  1F79               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6266  0026C2  1F78               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6267  0026C4  6D77               	negf	___aldiv@divisor& (0+255),b
  6268  0026C6  0E00               	movlw	0
  6269  0026C8  2378               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6270  0026CA  2379               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6271  0026CC  237A               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6272                           
  6273                           ; BSR set to: 0
  6274  0026CE  0E01               	movlw	1
  6275  0026D0  0100               	movlb	0	; () banked
  6276  0026D2  6F7C               	movwf	___aldiv@sign& (0+255),b
  6277  0026D4                     l3473:
  6278                           
  6279                           ; BSR set to: 0
  6280  0026D4  0100               	movlb	0	; () banked
  6281  0026D6  AF76               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  6282  0026D8  D00C               	goto	l3479
  6283                           
  6284                           ; BSR set to: 0
  6285  0026DA  0100               	movlb	0	; () banked
  6286  0026DC  1F76               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6287  0026DE  1F75               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6288  0026E0  1F74               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6289  0026E2  6D73               	negf	___aldiv@dividend& (0+255),b
  6290  0026E4  0E00               	movlw	0
  6291  0026E6  2374               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6292  0026E8  2375               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6293  0026EA  2376               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6294                           
  6295                           ; BSR set to: 0
  6296  0026EC  0E01               	movlw	1
  6297  0026EE  0100               	movlb	0	; () banked
  6298  0026F0  1B7C               	xorwf	___aldiv@sign& (0+255),f,b
  6299  0026F2                     l3479:
  6300                           
  6301                           ; BSR set to: 0
  6302  0026F2  0E00               	movlw	0
  6303  0026F4  0100               	movlb	0	; () banked
  6304  0026F6  6F7D               	movwf	___aldiv@quotient& (0+255),b
  6305  0026F8  0E00               	movlw	0
  6306  0026FA  6F7E               	movwf	(___aldiv@quotient+1)& (0+255),b
  6307  0026FC  0E00               	movlw	0
  6308  0026FE  6F7F               	movwf	(___aldiv@quotient+2)& (0+255),b
  6309  002700  0E00               	movlw	0
  6310  002702  6F80               	movwf	(___aldiv@quotient+3)& (0+255),b
  6311                           
  6312                           ; BSR set to: 0
  6313  002704  0100               	movlb	0	; () banked
  6314  002706  5177               	movf	___aldiv@divisor& (0+255),w,b
  6315  002708  0100               	movlb	0	; () banked
  6316  00270A  1178               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6317  00270C  0100               	movlb	0	; () banked
  6318  00270E  1179               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6319  002710  0100               	movlb	0	; () banked
  6320  002712  117A               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6321  002714  B4D8               	btfsc	status,2,c
  6322  002716  D042               	goto	l3501
  6323                           
  6324                           ; BSR set to: 0
  6325  002718  0E01               	movlw	1
  6326  00271A  0100               	movlb	0	; () banked
  6327  00271C  6F7B               	movwf	___aldiv@counter& (0+255),b
  6328  00271E  D008               	goto	l3487
  6329  002720                     l3485:
  6330                           
  6331                           ; BSR set to: 0
  6332  002720  0100               	movlb	0	; () banked
  6333  002722  90D8               	bcf	status,0,c
  6334  002724  3777               	rlcf	___aldiv@divisor& (0+255),f,b
  6335  002726  3778               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6336  002728  3779               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6337  00272A  377A               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6338  00272C  0100               	movlb	0	; () banked
  6339  00272E  2B7B               	incf	___aldiv@counter& (0+255),f,b
  6340  002730                     l3487:
  6341                           
  6342                           ; BSR set to: 0
  6343  002730  0100               	movlb	0	; () banked
  6344  002732  AF7A               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6345  002734  D7F5               	goto	l3485
  6346  002736                     l3489:
  6347                           
  6348                           ; BSR set to: 0
  6349  002736  0100               	movlb	0	; () banked
  6350  002738  90D8               	bcf	status,0,c
  6351  00273A  377D               	rlcf	___aldiv@quotient& (0+255),f,b
  6352  00273C  377E               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6353  00273E  377F               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6354  002740  3780               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6355                           
  6356                           ; BSR set to: 0
  6357  002742  0100               	movlb	0	; () banked
  6358  002744  5177               	movf	___aldiv@divisor& (0+255),w,b
  6359  002746  0100               	movlb	0	; () banked
  6360  002748  5D73               	subwf	___aldiv@dividend& (0+255),w,b
  6361  00274A  0100               	movlb	0	; () banked
  6362  00274C  5178               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6363  00274E  0100               	movlb	0	; () banked
  6364  002750  5974               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6365  002752  0100               	movlb	0	; () banked
  6366  002754  5179               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6367  002756  0100               	movlb	0	; () banked
  6368  002758  5975               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6369  00275A  0100               	movlb	0	; () banked
  6370  00275C  517A               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6371  00275E  0100               	movlb	0	; () banked
  6372  002760  5976               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6373  002762  A0D8               	btfss	status,0,c
  6374  002764  D012               	goto	l3497
  6375                           
  6376                           ; BSR set to: 0
  6377  002766  0100               	movlb	0	; () banked
  6378  002768  5177               	movf	___aldiv@divisor& (0+255),w,b
  6379  00276A  0100               	movlb	0	; () banked
  6380  00276C  5F73               	subwf	___aldiv@dividend& (0+255),f,b
  6381  00276E  0100               	movlb	0	; () banked
  6382  002770  5178               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6383  002772  0100               	movlb	0	; () banked
  6384  002774  5B74               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  6385  002776  0100               	movlb	0	; () banked
  6386  002778  5179               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6387  00277A  0100               	movlb	0	; () banked
  6388  00277C  5B75               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  6389  00277E  0100               	movlb	0	; () banked
  6390  002780  517A               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6391  002782  0100               	movlb	0	; () banked
  6392  002784  5B76               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  6393                           
  6394                           ; BSR set to: 0
  6395  002786  0100               	movlb	0	; () banked
  6396  002788  817D               	bsf	___aldiv@quotient& (0+255),0,b
  6397  00278A                     l3497:
  6398                           
  6399                           ; BSR set to: 0
  6400  00278A  0100               	movlb	0	; () banked
  6401  00278C  90D8               	bcf	status,0,c
  6402  00278E  337A               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  6403  002790  3379               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  6404  002792  3378               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  6405  002794  3377               	rrcf	___aldiv@divisor& (0+255),f,b
  6406                           
  6407                           ; BSR set to: 0
  6408  002796  0100               	movlb	0	; () banked
  6409  002798  2F7B               	decfsz	___aldiv@counter& (0+255),f,b
  6410  00279A  D7CD               	goto	l3489
  6411  00279C                     l3501:
  6412                           
  6413                           ; BSR set to: 0
  6414  00279C  0100               	movlb	0	; () banked
  6415  00279E  517C               	movf	___aldiv@sign& (0+255),w,b
  6416  0027A0  0100               	movlb	0	; () banked
  6417  0027A2  B4D8               	btfsc	status,2,c
  6418  0027A4  D009               	goto	l3505
  6419                           
  6420                           ; BSR set to: 0
  6421  0027A6  0100               	movlb	0	; () banked
  6422  0027A8  1F80               	comf	(___aldiv@quotient+3)& (0+255),f,b
  6423  0027AA  1F7F               	comf	(___aldiv@quotient+2)& (0+255),f,b
  6424  0027AC  1F7E               	comf	(___aldiv@quotient+1)& (0+255),f,b
  6425  0027AE  6D7D               	negf	___aldiv@quotient& (0+255),b
  6426  0027B0  0E00               	movlw	0
  6427  0027B2  237E               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  6428  0027B4  237F               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  6429  0027B6  2380               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  6430  0027B8                     l3505:
  6431                           
  6432                           ; BSR set to: 0
  6433  0027B8  C07D  F073         	movff	___aldiv@quotient,?___aldiv
  6434  0027BC  C07E  F074         	movff	___aldiv@quotient+1,?___aldiv+1
  6435  0027C0  C07F  F075         	movff	___aldiv@quotient+2,?___aldiv+2
  6436  0027C4  C080  F076         	movff	___aldiv@quotient+3,?___aldiv+3
  6437  0027C8  0012               	return	
  6438  0027CA                     __end_of___aldiv:
  6439                           	opt stack 0
  6440                           tblptru	equ	0xFF8
  6441                           tblptrh	equ	0xFF7
  6442                           tblptrl	equ	0xFF6
  6443                           tablat	equ	0xFF5
  6444                           prodh	equ	0xFF4
  6445                           prodl	equ	0xFF3
  6446                           intcon	equ	0xFF2
  6447                           intcon2	equ	0xFF1
  6448                           postinc0	equ	0xFEE
  6449                           wreg	equ	0xFE8
  6450                           postdec1	equ	0xFE5
  6451                           fsr1l	equ	0xFE1
  6452                           indf2	equ	0xFDF
  6453                           fsr2h	equ	0xFDA
  6454                           fsr2l	equ	0xFD9
  6455                           status	equ	0xFD8
  6456                           
  6457 ;; *************** function _ReadADC *****************
  6458 ;; Defined at:
  6459 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcread.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;		None
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;		None
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  2   19[BANK0 ] int 
  6466 ;; Registers used:
  6467 ;;		wreg, status,2
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6473 ;;      Params:         0       2       0       0
  6474 ;;      Locals:         0       0       0       0
  6475 ;;      Temps:          0       2       0       0
  6476 ;;      Totals:         0       4       0       0
  6477 ;;Total ram usage:        4 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:    4
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_calibrazione
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text14
  6488  002CF0                     __ptext14:
  6489                           	opt stack 0
  6490  002CF0                     _ReadADC:
  6491                           	opt stack 25
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;incstack = 0
  6495  002CF0  50C4               	movf	4036,w,c	;volatile
  6496  002CF2  0100               	movlb	0	; () banked
  6497  002CF4  6F75               	movwf	??_ReadADC& (0+255),b
  6498  002CF6  50C3               	movf	4035,w,c	;volatile
  6499  002CF8  0100               	movlb	0	; () banked
  6500  002CFA  6F73               	movwf	?_ReadADC& (0+255),b
  6501  002CFC  C075  F074         	movff	??_ReadADC,?_ReadADC+1
  6502  002D00  0012               	return	
  6503  002D02                     __end_of_ReadADC:
  6504                           	opt stack 0
  6505                           tblptru	equ	0xFF8
  6506                           tblptrh	equ	0xFF7
  6507                           tblptrl	equ	0xFF6
  6508                           tablat	equ	0xFF5
  6509                           prodh	equ	0xFF4
  6510                           prodl	equ	0xFF3
  6511                           intcon	equ	0xFF2
  6512                           intcon2	equ	0xFF1
  6513                           postinc0	equ	0xFEE
  6514                           wreg	equ	0xFE8
  6515                           postdec1	equ	0xFE5
  6516                           fsr1l	equ	0xFE1
  6517                           indf2	equ	0xFDF
  6518                           fsr2h	equ	0xFDA
  6519                           fsr2l	equ	0xFD9
  6520                           status	equ	0xFD8
  6521                           
  6522 ;; *************** function _ConvertADC *****************
  6523 ;; Defined at:
  6524 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcconv.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;		None
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;		None
  6529 ;; Return value:  Size  Location     Type
  6530 ;;		None               void
  6531 ;; Registers used:
  6532 ;;		None
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6538 ;;      Params:         0       0       0       0
  6539 ;;      Locals:         0       0       0       0
  6540 ;;      Temps:          0       0       0       0
  6541 ;;      Totals:         0       0       0       0
  6542 ;;Total ram usage:        0 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; Hardware stack levels required when called:    4
  6545 ;; This function calls:
  6546 ;;		Nothing
  6547 ;; This function is called by:
  6548 ;;		_calibrazione
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text15
  6553  002D3C                     __ptext15:
  6554                           	opt stack 0
  6555  002D3C                     _ConvertADC:
  6556                           	opt stack 25
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;incstack = 0
  6560  002D3C  82C2               	bsf	4034,1,c	;volatile
  6561  002D3E  0012               	return		;funcret
  6562  002D40                     __end_of_ConvertADC:
  6563                           	opt stack 0
  6564                           tblptru	equ	0xFF8
  6565                           tblptrh	equ	0xFF7
  6566                           tblptrl	equ	0xFF6
  6567                           tablat	equ	0xFF5
  6568                           prodh	equ	0xFF4
  6569                           prodl	equ	0xFF3
  6570                           intcon	equ	0xFF2
  6571                           intcon2	equ	0xFF1
  6572                           postinc0	equ	0xFEE
  6573                           wreg	equ	0xFE8
  6574                           postdec1	equ	0xFE5
  6575                           fsr1l	equ	0xFE1
  6576                           indf2	equ	0xFDF
  6577                           fsr2h	equ	0xFDA
  6578                           fsr2l	equ	0xFD9
  6579                           status	equ	0xFD8
  6580                           
  6581 ;; *************** function _BusyADC *****************
  6582 ;; Defined at:
  6583 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\ADC\adcbusy.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;		None
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      unsigned char 
  6590 ;; Registers used:
  6591 ;;		wreg
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6597 ;;      Params:         0       0       0       0
  6598 ;;      Locals:         0       0       0       0
  6599 ;;      Temps:          0       0       0       0
  6600 ;;      Totals:         0       0       0       0
  6601 ;;Total ram usage:        0 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:    4
  6604 ;; This function calls:
  6605 ;;		Nothing
  6606 ;; This function is called by:
  6607 ;;		_calibrazione
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611                           	psect	text16
  6612  002D14                     __ptext16:
  6613                           	opt stack 0
  6614  002D14                     _BusyADC:
  6615                           	opt stack 25
  6616                           
  6617                           ;incstack = 0
  6618  002D14  A2C2               	btfss	4034,1,c	;volatile
  6619  002D16  D002               	goto	u3930
  6620  002D18  0E01               	movlw	1
  6621  002D1A  0012               	return	
  6622  002D1C                     u3930:
  6623  002D1C  0E00               	movlw	0
  6624  002D1E  0012               	return	
  6625  002D20                     __end_of_BusyADC:
  6626                           	opt stack 0
  6627                           tblptru	equ	0xFF8
  6628                           tblptrh	equ	0xFF7
  6629                           tblptrl	equ	0xFF6
  6630                           tablat	equ	0xFF5
  6631                           prodh	equ	0xFF4
  6632                           prodl	equ	0xFF3
  6633                           intcon	equ	0xFF2
  6634                           intcon2	equ	0xFF1
  6635                           postinc0	equ	0xFEE
  6636                           wreg	equ	0xFE8
  6637                           postdec1	equ	0xFE5
  6638                           fsr1l	equ	0xFE1
  6639                           indf2	equ	0xFDF
  6640                           fsr2h	equ	0xFDA
  6641                           fsr2l	equ	0xFD9
  6642                           status	equ	0xFD8
  6643                           
  6644 ;; *************** function ___lmul *****************
  6645 ;; Defined at:
  6646 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul32.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  multiplier      4   19[BANK0 ] unsigned long 
  6649 ;;  multiplicand    4   23[BANK0 ] unsigned long 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;  product         4   27[BANK0 ] unsigned long 
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  4   19[BANK0 ] unsigned long 
  6654 ;; Registers used:
  6655 ;;		wreg, status,2, status,0
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6661 ;;      Params:         0       8       0       0
  6662 ;;      Locals:         0       4       0       0
  6663 ;;      Temps:          0       0       0       0
  6664 ;;      Totals:         0      12       0       0
  6665 ;;Total ram usage:       12 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; Hardware stack levels required when called:    4
  6668 ;; This function calls:
  6669 ;;		Nothing
  6670 ;; This function is called by:
  6671 ;;		_main
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           	psect	text17
  6676  002A38                     __ptext17:
  6677                           	opt stack 0
  6678  002A38                     ___lmul:
  6679                           	opt stack 26
  6680                           
  6681                           ;incstack = 0
  6682  002A38  0E00               	movlw	0
  6683  002A3A  0100               	movlb	0	; () banked
  6684  002A3C  6F7B               	movwf	___lmul@product& (0+255),b
  6685  002A3E  0E00               	movlw	0
  6686  002A40  6F7C               	movwf	(___lmul@product+1)& (0+255),b
  6687  002A42  0E00               	movlw	0
  6688  002A44  6F7D               	movwf	(___lmul@product+2)& (0+255),b
  6689  002A46  0E00               	movlw	0
  6690  002A48  6F7E               	movwf	(___lmul@product+3)& (0+255),b
  6691  002A4A                     l3743:
  6692                           
  6693                           ; BSR set to: 0
  6694  002A4A  0100               	movlb	0	; () banked
  6695  002A4C  A173               	btfss	___lmul@multiplier& (0+255),0,b
  6696  002A4E  D010               	goto	l3747
  6697                           
  6698                           ; BSR set to: 0
  6699  002A50  0100               	movlb	0	; () banked
  6700  002A52  5177               	movf	___lmul@multiplicand& (0+255),w,b
  6701  002A54  0100               	movlb	0	; () banked
  6702  002A56  277B               	addwf	___lmul@product& (0+255),f,b
  6703  002A58  0100               	movlb	0	; () banked
  6704  002A5A  5178               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6705  002A5C  0100               	movlb	0	; () banked
  6706  002A5E  237C               	addwfc	(___lmul@product+1)& (0+255),f,b
  6707  002A60  0100               	movlb	0	; () banked
  6708  002A62  5179               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6709  002A64  0100               	movlb	0	; () banked
  6710  002A66  237D               	addwfc	(___lmul@product+2)& (0+255),f,b
  6711  002A68  0100               	movlb	0	; () banked
  6712  002A6A  517A               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6713  002A6C  0100               	movlb	0	; () banked
  6714  002A6E  237E               	addwfc	(___lmul@product+3)& (0+255),f,b
  6715  002A70                     l3747:
  6716                           
  6717                           ; BSR set to: 0
  6718  002A70  0100               	movlb	0	; () banked
  6719  002A72  90D8               	bcf	status,0,c
  6720  002A74  3777               	rlcf	___lmul@multiplicand& (0+255),f,b
  6721  002A76  3778               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6722  002A78  3779               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6723  002A7A  377A               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6724                           
  6725                           ; BSR set to: 0
  6726  002A7C  0100               	movlb	0	; () banked
  6727  002A7E  90D8               	bcf	status,0,c
  6728  002A80  3376               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6729  002A82  3375               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6730  002A84  3374               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6731  002A86  3373               	rrcf	___lmul@multiplier& (0+255),f,b
  6732  002A88  0100               	movlb	0	; () banked
  6733  002A8A  5173               	movf	___lmul@multiplier& (0+255),w,b
  6734  002A8C  0100               	movlb	0	; () banked
  6735  002A8E  1174               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6736  002A90  0100               	movlb	0	; () banked
  6737  002A92  1175               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6738  002A94  0100               	movlb	0	; () banked
  6739  002A96  1176               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6740  002A98  A4D8               	btfss	status,2,c
  6741  002A9A  D7D7               	goto	l3743
  6742                           
  6743                           ; BSR set to: 0
  6744  002A9C  C07B  F073         	movff	___lmul@product,?___lmul
  6745  002AA0  C07C  F074         	movff	___lmul@product+1,?___lmul+1
  6746  002AA4  C07D  F075         	movff	___lmul@product+2,?___lmul+2
  6747  002AA8  C07E  F076         	movff	___lmul@product+3,?___lmul+3
  6748                           
  6749                           ; BSR set to: 0
  6750  002AAC  0012               	return		;funcret
  6751  002AAE                     __end_of___lmul:
  6752                           	opt stack 0
  6753                           tblptru	equ	0xFF8
  6754                           tblptrh	equ	0xFF7
  6755                           tblptrl	equ	0xFF6
  6756                           tablat	equ	0xFF5
  6757                           prodh	equ	0xFF4
  6758                           prodl	equ	0xFF3
  6759                           intcon	equ	0xFF2
  6760                           intcon2	equ	0xFF1
  6761                           postinc0	equ	0xFEE
  6762                           wreg	equ	0xFE8
  6763                           postdec1	equ	0xFE5
  6764                           fsr1l	equ	0xFE1
  6765                           indf2	equ	0xFDF
  6766                           fsr2h	equ	0xFDA
  6767                           fsr2l	equ	0xFD9
  6768                           status	equ	0xFD8
  6769                           
  6770 ;; *************** function ___lldiv *****************
  6771 ;; Defined at:
  6772 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;  dividend        4   31[BANK0 ] unsigned long 
  6775 ;;  divisor         4   35[BANK0 ] unsigned long 
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;  quotient        4   39[BANK0 ] unsigned long 
  6778 ;;  counter         1   43[BANK0 ] unsigned char 
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  4   31[BANK0 ] unsigned long 
  6781 ;; Registers used:
  6782 ;;		wreg, status,2, status,0
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6788 ;;      Params:         0       8       0       0
  6789 ;;      Locals:         0       5       0       0
  6790 ;;      Temps:          0       0       0       0
  6791 ;;      Totals:         0      13       0       0
  6792 ;;Total ram usage:       13 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    4
  6795 ;; This function calls:
  6796 ;;		Nothing
  6797 ;; This function is called by:
  6798 ;;		_main
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802                           	psect	text18
  6803  0027CA                     __ptext18:
  6804                           	opt stack 0
  6805  0027CA                     ___lldiv:
  6806                           	opt stack 26
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;incstack = 0
  6810  0027CA  0E00               	movlw	0
  6811  0027CC  0100               	movlb	0	; () banked
  6812  0027CE  6F87               	movwf	___lldiv@quotient& (0+255),b
  6813  0027D0  0E00               	movlw	0
  6814  0027D2  6F88               	movwf	(___lldiv@quotient+1)& (0+255),b
  6815  0027D4  0E00               	movlw	0
  6816  0027D6  6F89               	movwf	(___lldiv@quotient+2)& (0+255),b
  6817  0027D8  0E00               	movlw	0
  6818  0027DA  6F8A               	movwf	(___lldiv@quotient+3)& (0+255),b
  6819                           
  6820                           ; BSR set to: 0
  6821  0027DC  0100               	movlb	0	; () banked
  6822  0027DE  5183               	movf	___lldiv@divisor& (0+255),w,b
  6823  0027E0  0100               	movlb	0	; () banked
  6824  0027E2  1184               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  6825  0027E4  0100               	movlb	0	; () banked
  6826  0027E6  1185               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  6827  0027E8  0100               	movlb	0	; () banked
  6828  0027EA  1186               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  6829  0027EC  B4D8               	btfsc	status,2,c
  6830  0027EE  D042               	goto	l1027
  6831                           
  6832                           ; BSR set to: 0
  6833  0027F0  0E01               	movlw	1
  6834  0027F2  0100               	movlb	0	; () banked
  6835  0027F4  6F8B               	movwf	___lldiv@counter& (0+255),b
  6836  0027F6  D008               	goto	l3759
  6837  0027F8                     l3757:
  6838                           
  6839                           ; BSR set to: 0
  6840  0027F8  0100               	movlb	0	; () banked
  6841  0027FA  90D8               	bcf	status,0,c
  6842  0027FC  3783               	rlcf	___lldiv@divisor& (0+255),f,b
  6843  0027FE  3784               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  6844  002800  3785               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  6845  002802  3786               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  6846  002804  0100               	movlb	0	; () banked
  6847  002806  2B8B               	incf	___lldiv@counter& (0+255),f,b
  6848  002808                     l3759:
  6849                           
  6850                           ; BSR set to: 0
  6851  002808  0100               	movlb	0	; () banked
  6852  00280A  AF86               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  6853  00280C  D7F5               	goto	l3757
  6854  00280E                     l3761:
  6855                           
  6856                           ; BSR set to: 0
  6857  00280E  0100               	movlb	0	; () banked
  6858  002810  90D8               	bcf	status,0,c
  6859  002812  3787               	rlcf	___lldiv@quotient& (0+255),f,b
  6860  002814  3788               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  6861  002816  3789               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  6862  002818  378A               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  6863                           
  6864                           ; BSR set to: 0
  6865  00281A  0100               	movlb	0	; () banked
  6866  00281C  5183               	movf	___lldiv@divisor& (0+255),w,b
  6867  00281E  0100               	movlb	0	; () banked
  6868  002820  5D7F               	subwf	___lldiv@dividend& (0+255),w,b
  6869  002822  0100               	movlb	0	; () banked
  6870  002824  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6871  002826  0100               	movlb	0	; () banked
  6872  002828  5980               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  6873  00282A  0100               	movlb	0	; () banked
  6874  00282C  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6875  00282E  0100               	movlb	0	; () banked
  6876  002830  5981               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  6877  002832  0100               	movlb	0	; () banked
  6878  002834  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6879  002836  0100               	movlb	0	; () banked
  6880  002838  5982               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  6881  00283A  A0D8               	btfss	status,0,c
  6882  00283C  D012               	goto	l3769
  6883                           
  6884                           ; BSR set to: 0
  6885  00283E  0100               	movlb	0	; () banked
  6886  002840  5183               	movf	___lldiv@divisor& (0+255),w,b
  6887  002842  0100               	movlb	0	; () banked
  6888  002844  5F7F               	subwf	___lldiv@dividend& (0+255),f,b
  6889  002846  0100               	movlb	0	; () banked
  6890  002848  5184               	movf	(___lldiv@divisor+1)& (0+255),w,b
  6891  00284A  0100               	movlb	0	; () banked
  6892  00284C  5B80               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  6893  00284E  0100               	movlb	0	; () banked
  6894  002850  5185               	movf	(___lldiv@divisor+2)& (0+255),w,b
  6895  002852  0100               	movlb	0	; () banked
  6896  002854  5B81               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  6897  002856  0100               	movlb	0	; () banked
  6898  002858  5186               	movf	(___lldiv@divisor+3)& (0+255),w,b
  6899  00285A  0100               	movlb	0	; () banked
  6900  00285C  5B82               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  6901                           
  6902                           ; BSR set to: 0
  6903  00285E  0100               	movlb	0	; () banked
  6904  002860  8187               	bsf	___lldiv@quotient& (0+255),0,b
  6905  002862                     l3769:
  6906                           
  6907                           ; BSR set to: 0
  6908  002862  0100               	movlb	0	; () banked
  6909  002864  90D8               	bcf	status,0,c
  6910  002866  3386               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  6911  002868  3385               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  6912  00286A  3384               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  6913  00286C  3383               	rrcf	___lldiv@divisor& (0+255),f,b
  6914                           
  6915                           ; BSR set to: 0
  6916  00286E  0100               	movlb	0	; () banked
  6917  002870  2F8B               	decfsz	___lldiv@counter& (0+255),f,b
  6918  002872  D7CD               	goto	l3761
  6919  002874                     l1027:
  6920                           
  6921                           ; BSR set to: 0
  6922  002874  C087  F07F         	movff	___lldiv@quotient,?___lldiv
  6923  002878  C088  F080         	movff	___lldiv@quotient+1,?___lldiv+1
  6924  00287C  C089  F081         	movff	___lldiv@quotient+2,?___lldiv+2
  6925  002880  C08A  F082         	movff	___lldiv@quotient+3,?___lldiv+3
  6926                           
  6927                           ; BSR set to: 0
  6928  002884  0012               	return		;funcret
  6929  002886                     __end_of___lldiv:
  6930                           	opt stack 0
  6931                           tblptru	equ	0xFF8
  6932                           tblptrh	equ	0xFF7
  6933                           tblptrl	equ	0xFF6
  6934                           tablat	equ	0xFF5
  6935                           prodh	equ	0xFF4
  6936                           prodl	equ	0xFF3
  6937                           intcon	equ	0xFF2
  6938                           intcon2	equ	0xFF1
  6939                           postinc0	equ	0xFEE
  6940                           wreg	equ	0xFE8
  6941                           postdec1	equ	0xFE5
  6942                           fsr1l	equ	0xFE1
  6943                           indf2	equ	0xFDF
  6944                           fsr2h	equ	0xFDA
  6945                           fsr2l	equ	0xFD9
  6946                           status	equ	0xFD8
  6947                           
  6948 ;; *************** function _CANisTXwarningON *****************
  6949 ;; Defined at:
  6950 ;;		line 1120 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;		None
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;		None
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  1    wreg      unsigned char 
  6957 ;; Registers used:
  6958 ;;		wreg
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6964 ;;      Params:         0       0       0       0
  6965 ;;      Locals:         0       0       0       0
  6966 ;;      Temps:          0       0       0       0
  6967 ;;      Totals:         0       0       0       0
  6968 ;;Total ram usage:        0 bytes
  6969 ;; Hardware stack levels used:    1
  6970 ;; Hardware stack levels required when called:    4
  6971 ;; This function calls:
  6972 ;;		Nothing
  6973 ;; This function is called by:
  6974 ;;		_main
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           	psect	text19
  6979  002D20                     __ptext19:
  6980                           	opt stack 0
  6981  002D20                     _CANisTXwarningON:
  6982                           	opt stack 26
  6983                           
  6984                           ;inc\CANlib.h: 1122: return (COMSTATbits.TXWARN);
  6985                           
  6986                           ; BSR set to: 0
  6987                           ;incstack = 0
  6988  002D20  A474               	btfss	3956,2,c	;volatile
  6989  002D22  D002               	goto	u4250
  6990  002D24  0E01               	movlw	1
  6991  002D26  0012               	return	
  6992  002D28                     u4250:
  6993  002D28  0E00               	movlw	0
  6994  002D2A  0012               	return	
  6995  002D2C                     __end_of_CANisTXwarningON:
  6996                           	opt stack 0
  6997                           tblptru	equ	0xFF8
  6998                           tblptrh	equ	0xFF7
  6999                           tblptrl	equ	0xFF6
  7000                           tablat	equ	0xFF5
  7001                           prodh	equ	0xFF4
  7002                           prodl	equ	0xFF3
  7003                           intcon	equ	0xFF2
  7004                           intcon2	equ	0xFF1
  7005                           postinc0	equ	0xFEE
  7006                           wreg	equ	0xFE8
  7007                           postdec1	equ	0xFE5
  7008                           fsr1l	equ	0xFE1
  7009                           indf2	equ	0xFDF
  7010                           fsr2h	equ	0xFDA
  7011                           fsr2l	equ	0xFD9
  7012                           status	equ	0xFD8
  7013                           
  7014 ;; *************** function _CANisRXwarningON *****************
  7015 ;; Defined at:
  7016 ;;		line 1128 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;		None
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;		None
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  1    wreg      unsigned char 
  7023 ;; Registers used:
  7024 ;;		wreg
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7030 ;;      Params:         0       0       0       0
  7031 ;;      Locals:         0       0       0       0
  7032 ;;      Temps:          0       0       0       0
  7033 ;;      Totals:         0       0       0       0
  7034 ;;Total ram usage:        0 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    4
  7037 ;; This function calls:
  7038 ;;		Nothing
  7039 ;; This function is called by:
  7040 ;;		_main
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           	psect	text20
  7045  002D2C                     __ptext20:
  7046                           	opt stack 0
  7047  002D2C                     _CANisRXwarningON:
  7048                           	opt stack 26
  7049                           
  7050                           ;inc\CANlib.h: 1130: return (COMSTATbits.RXWARN);
  7051                           
  7052                           ;incstack = 0
  7053  002D2C  A274               	btfss	3956,1,c	;volatile
  7054  002D2E  D002               	goto	u4260
  7055  002D30  0E01               	movlw	1
  7056  002D32  0012               	return	
  7057  002D34                     u4260:
  7058  002D34  0E00               	movlw	0
  7059  002D36  0012               	return	
  7060  002D38                     __end_of_CANisRXwarningON:
  7061                           	opt stack 0
  7062                           tblptru	equ	0xFF8
  7063                           tblptrh	equ	0xFF7
  7064                           tblptrl	equ	0xFF6
  7065                           tablat	equ	0xFF5
  7066                           prodh	equ	0xFF4
  7067                           prodl	equ	0xFF3
  7068                           intcon	equ	0xFF2
  7069                           intcon2	equ	0xFF1
  7070                           postinc0	equ	0xFEE
  7071                           wreg	equ	0xFE8
  7072                           postdec1	equ	0xFE5
  7073                           fsr1l	equ	0xFE1
  7074                           indf2	equ	0xFDF
  7075                           fsr2h	equ	0xFDA
  7076                           fsr2l	equ	0xFD9
  7077                           status	equ	0xFD8
  7078                           
  7079 ;; *************** function _ISR_bassa *****************
  7080 ;; Defined at:
  7081 ;;		line 85 in file "sterzo.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;		None
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;		None
  7086 ;; Return value:  Size  Location     Type
  7087 ;;		None               void
  7088 ;; Registers used:
  7089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: 0/0
  7094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7095 ;;      Params:         0       0       0       0
  7096 ;;      Locals:         0       0       0       0
  7097 ;;      Temps:         20       0       0       0
  7098 ;;      Totals:        20       0       0       0
  7099 ;;Total ram usage:       20 bytes
  7100 ;; Hardware stack levels used:    1
  7101 ;; Hardware stack levels required when called:    3
  7102 ;; This function calls:
  7103 ;;		_CANisRxReady
  7104 ;;		_CANreceiveMessage
  7105 ;;		___lwdiv
  7106 ;;		i1_CANsendMessage
  7107 ;;		i1___wmul
  7108 ;; This function is called by:
  7109 ;;		Interrupt level 1
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           	psect	intcodelo
  7114  000018                     __pintcodelo:
  7115                           	opt stack 0
  7116  000018                     _ISR_bassa:
  7117                           	opt stack 24
  7118                           
  7119                           ;incstack = 0
  7120  000018  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7121  00001A  CFD8 F014          	movff	status,??_ISR_bassa+3
  7122  00001E  CFE8 F015          	movff	wreg,??_ISR_bassa+4
  7123  000022  CFE0 F016          	movff	bsr,??_ISR_bassa+5
  7124  000026  CFFA F017          	movff	pclath,??_ISR_bassa+6
  7125  00002A  CFFB F018          	movff	pclatu,??_ISR_bassa+7
  7126  00002E  CFE9 F019          	movff	fsr0l,??_ISR_bassa+8
  7127  000032  CFEA F01A          	movff	fsr0h,??_ISR_bassa+9
  7128  000036  CFE1 F01B          	movff	fsr1l,??_ISR_bassa+10
  7129  00003A  CFE2 F01C          	movff	fsr1h,??_ISR_bassa+11
  7130  00003E  CFD9 F01D          	movff	fsr2l,??_ISR_bassa+12
  7131  000042  CFDA F01E          	movff	fsr2h,??_ISR_bassa+13
  7132  000046  CFF3 F01F          	movff	prodl,??_ISR_bassa+14
  7133  00004A  CFF4 F020          	movff	prodh,??_ISR_bassa+15
  7134  00004E  CFF6 F021          	movff	tblptrl,??_ISR_bassa+16
  7135  000052  CFF7 F022          	movff	tblptrh,??_ISR_bassa+17
  7136  000056  CFF8 F023          	movff	tblptru,??_ISR_bassa+18
  7137  00005A  CFF5 F024          	movff	tablat,??_ISR_bassa+19
  7138                           
  7139                           ;sterzo.c: 86: if (CANisRxReady()) {
  7140  00005E  EC6D  F016         	call	_CANisRxReady	;wreg free
  7141  000062  0900               	iorlw	0
  7142  000064  B4D8               	btfsc	status,2,c
  7143  000066  D099               	goto	i1l610
  7144                           
  7145                           ;sterzo.c: 87: CANreceiveMessage(&msg);
  7146  000068  0E30               	movlw	low _msg
  7147  00006A  6E01               	movwf	CANreceiveMessage@msg,c
  7148  00006C  0E00               	movlw	high _msg
  7149  00006E  6E02               	movwf	CANreceiveMessage@msg+1,c
  7150  000070  EC84  F00D         	call	_CANreceiveMessage	;wreg free
  7151                           
  7152                           ;sterzo.c: 88: if (msg.identifier == 0b00000000000000000000000000101) {
  7153  000074  0E05               	movlw	5
  7154  000076  1830               	xorwf	_msg,w,c
  7155  000078  1031               	iorwf	_msg+1,w,c
  7156  00007A  1032               	iorwf	_msg+2,w,c
  7157  00007C  1033               	iorwf	_msg+3,w,c
  7158  00007E  A4D8               	btfss	status,2,c
  7159  000080  D056               	goto	i1l4087
  7160                           
  7161                           ;sterzo.c: 89: id = msg.identifier;
  7162  000082  C030  F025         	movff	_msg,_id
  7163  000086  C031  F026         	movff	_msg+1,_id+1
  7164  00008A  C032  F027         	movff	_msg+2,_id+2
  7165  00008E  C033  F028         	movff	_msg+3,_id+3
  7166                           
  7167                           ;sterzo.c: 90: remote_frame = msg.RTR;
  7168  000092  A03E               	btfss	_msg+14,0,c
  7169  000094  D002               	goto	i1u487_20
  7170  000096  824B               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7171  000098  D001               	goto	i1u488_25
  7172  00009A                     i1u487_20:
  7173  00009A  924B               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7174  00009C                     i1u488_25:
  7175                           
  7176                           ;sterzo.c: 91: theorySteering = msg.data[0];
  7177  00009C  C034  F02F         	movff	_msg+4,_theorySteering
  7178                           
  7179                           ;sterzo.c: 92: if (theorySteering < calibration) {
  7180  0000A0  502F               	movf	_theorySteering,w,c
  7181  0000A2  6E11               	movwf	??_ISR_bassa& (0+255),c
  7182  0000A4  6A12               	clrf	(??_ISR_bassa+1)& (0+255),c
  7183  0000A6  502D               	movf	_calibration,w,c
  7184  0000A8  5C11               	subwf	??_ISR_bassa,w,c
  7185  0000AA  5012               	movf	??_ISR_bassa+1,w,c
  7186  0000AC  0A80               	xorlw	128
  7187  0000AE  6E13               	movwf	(??_ISR_bassa+2)& (0+255),c
  7188  0000B0  502E               	movf	_calibration+1,w,c
  7189  0000B2  0A80               	xorlw	128
  7190  0000B4  5813               	subwfb	(??_ISR_bassa+2)& (0+255),w,c
  7191  0000B6  B0D8               	btfsc	status,0,c
  7192  0000B8  D004               	goto	i1l4073
  7193                           
  7194                           ;sterzo.c: 93: currentSteering = 0;
  7195  0000BA  0E00               	movlw	0
  7196  0000BC  6E48               	movwf	_currentSteering+1,c
  7197  0000BE  0E00               	movlw	0
  7198  0000C0  6E47               	movwf	_currentSteering,c
  7199  0000C2                     i1l4073:
  7200                           
  7201                           ;sterzo.c: 94: }
  7202                           ;sterzo.c: 95: currentSteering = theorySteering + calibration;
  7203  0000C2  502F               	movf	_theorySteering,w,c
  7204  0000C4  242D               	addwf	_calibration,w,c
  7205  0000C6  6E47               	movwf	_currentSteering,c
  7206  0000C8  0E00               	movlw	0
  7207  0000CA  202E               	addwfc	_calibration+1,w,c
  7208  0000CC  6E48               	movwf	_currentSteering+1,c
  7209                           
  7210                           ;sterzo.c: 96: if (currentSteering > 180) {
  7211  0000CE  BE48               	btfsc	_currentSteering+1,7,c
  7212  0000D0  D00A               	goto	i1l4079
  7213  0000D2  5048               	movf	_currentSteering+1,w,c
  7214  0000D4  E104               	bnz	i1u490_20
  7215  0000D6  0EB5               	movlw	181
  7216  0000D8  5C47               	subwf	_currentSteering,w,c
  7217  0000DA  A0D8               	btfss	status,0,c
  7218  0000DC  D004               	goto	i1l4079
  7219  0000DE                     i1u490_20:
  7220                           
  7221                           ;sterzo.c: 97: currentSteering = 180;
  7222  0000DE  0E00               	movlw	0
  7223  0000E0  6E48               	movwf	_currentSteering+1,c
  7224  0000E2  0EB4               	movlw	180
  7225  0000E4  6E47               	movwf	_currentSteering,c
  7226  0000E6                     i1l4079:
  7227                           
  7228                           ;sterzo.c: 98: }
  7229                           ;sterzo.c: 99: if (currentSteering < 1) {
  7230  0000E6  BE48               	btfsc	_currentSteering+1,7,c
  7231  0000E8  D005               	goto	i1l4081
  7232  0000EA  5048               	movf	_currentSteering+1,w,c
  7233  0000EC  E107               	bnz	i1l4083
  7234  0000EE  0447               	decf	_currentSteering,w,c
  7235  0000F0  B0D8               	btfsc	status,0,c
  7236  0000F2  D004               	goto	i1l4083
  7237  0000F4                     i1l4081:
  7238                           
  7239                           ;sterzo.c: 100: currentSteering = 0;
  7240  0000F4  0E00               	movlw	0
  7241  0000F6  6E48               	movwf	_currentSteering+1,c
  7242  0000F8  0E00               	movlw	0
  7243  0000FA  6E47               	movwf	_currentSteering,c
  7244  0000FC                     i1l4083:
  7245                           
  7246                           ;sterzo.c: 101: }
  7247                           ;sterzo.c: 102: currentSteering = (limiteDx * currentSteering) / 180;
  7248  0000FC  C047  F001         	movff	_currentSteering,i1___wmul@multiplier
  7249  000100  C048  F002         	movff	_currentSteering+1,i1___wmul@multiplier+1
  7250  000104  C049  F003         	movff	_limiteDx,i1___wmul@multiplicand
  7251  000108  C04A  F004         	movff	_limiteDx+1,i1___wmul@multiplicand+1
  7252  00010C  EC3D  F016         	call	i1___wmul	;wreg free
  7253  000110  C001  F007         	movff	?i1___wmul,___lwdiv@dividend
  7254  000114  C002  F008         	movff	?i1___wmul+1,___lwdiv@dividend+1
  7255  000118  0E00               	movlw	0
  7256  00011A  6E0A               	movwf	___lwdiv@divisor+1,c
  7257  00011C  0EB4               	movlw	180
  7258  00011E  6E09               	movwf	___lwdiv@divisor,c
  7259  000120  ECBD  F015         	call	___lwdiv	;wreg free
  7260  000124  C007  F047         	movff	?___lwdiv,_currentSteering
  7261  000128  C008  F048         	movff	?___lwdiv+1,_currentSteering+1
  7262                           
  7263                           ;sterzo.c: 106: noChange = 1;
  7264  00012C  804B               	bsf	_noChange/(0+8),_noChange& (0+7),c
  7265  00012E                     i1l4087:
  7266                           
  7267                           ;sterzo.c: 107: }
  7268                           ;sterzo.c: 108: if ((msg.identifier == 0b00000000000000000000000000010)&&(msg.RTR == 1))
      +                           {
  7269  00012E  0E02               	movlw	2
  7270  000130  1830               	xorwf	_msg,w,c
  7271  000132  1031               	iorwf	_msg+1,w,c
  7272  000134  1032               	iorwf	_msg+2,w,c
  7273  000136  1033               	iorwf	_msg+3,w,c
  7274  000138  A4D8               	btfss	status,2,c
  7275  00013A  D02D               	goto	i1l4101
  7276  00013C  043E               	decf	_msg+14,w,c
  7277  00013E  A4D8               	btfss	status,2,c
  7278  000140  D02A               	goto	i1l4101
  7279                           
  7280                           ;sterzo.c: 109: PORTCbits.RC1 = ~PORTCbits.RC1;
  7281  000142  A282               	btfss	3970,1,c	;volatile
  7282  000144  D002               	goto	i1u494_20
  7283  000146  0E01               	movlw	1
  7284  000148  D001               	goto	i1u494_26
  7285  00014A                     i1u494_20:
  7286  00014A  0E00               	movlw	0
  7287  00014C                     i1u494_26:
  7288  00014C  0AFF               	xorlw	255
  7289  00014E  6E11               	movwf	??_ISR_bassa& (0+255),c
  7290  000150  4611               	rlncf	??_ISR_bassa,f,c
  7291  000152  5082               	movf	3970,w,c	;volatile
  7292  000154  1811               	xorwf	??_ISR_bassa,w,c
  7293  000156  0BFD               	andlw	-3
  7294  000158  1811               	xorwf	??_ISR_bassa,w,c
  7295  00015A  6E82               	movwf	3970,c	;volatile
  7296                           
  7297                           ;sterzo.c: 110: id = msg.identifier;
  7298  00015C  C030  F025         	movff	_msg,_id
  7299  000160  C031  F026         	movff	_msg+1,_id+1
  7300  000164  C032  F027         	movff	_msg+2,_id+2
  7301  000168  C033  F028         	movff	_msg+3,_id+3
  7302                           
  7303                           ;sterzo.c: 111: remote_frame = 1;
  7304  00016C  824B               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7305                           
  7306                           ;sterzo.c: 112: data_array [0] = 0x02;
  7307  00016E  0E02               	movlw	2
  7308  000170  6E3F               	movwf	_data_array,c
  7309                           
  7310                           ;sterzo.c: 113: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  7311  000172  C025  F001         	movff	_id,i1CANsendMessage@identifier
  7312  000176  C026  F002         	movff	_id+1,i1CANsendMessage@identifier+1
  7313  00017A  C027  F003         	movff	_id+2,i1CANsendMessage@identifier+2
  7314  00017E  C028  F004         	movff	_id+3,i1CANsendMessage@identifier+3
  7315  000182  0E3F               	movlw	low _data_array
  7316  000184  6E05               	movwf	i1CANsendMessage@data,c
  7317  000186  0E00               	movlw	high _data_array
  7318  000188  6E06               	movwf	i1CANsendMessage@data+1,c
  7319  00018A  0E08               	movlw	8
  7320  00018C  6E07               	movwf	i1CANsendMessage@dataLength,c
  7321  00018E  0EBC               	movlw	188
  7322  000190  6E08               	movwf	i1CANsendMessage@flags,c
  7323  000192  EC3C  F00A         	call	i1_CANsendMessage	;wreg free
  7324  000196                     i1l4101:
  7325                           
  7326                           ;sterzo.c: 114: }
  7327                           ;sterzo.c: 115: PIR3bits.RXB0IF = 0;
  7328  000196  90A4               	bcf	4004,0,c	;volatile
  7329                           
  7330                           ;sterzo.c: 116: PIR3bits.RXB1IF = 0;
  7331  000198  92A4               	bcf	4004,1,c	;volatile
  7332  00019A                     i1l610:
  7333  00019A  C024  FFF5         	movff	??_ISR_bassa+19,tablat
  7334  00019E  C023  FFF8         	movff	??_ISR_bassa+18,tblptru
  7335  0001A2  C022  FFF7         	movff	??_ISR_bassa+17,tblptrh
  7336  0001A6  C021  FFF6         	movff	??_ISR_bassa+16,tblptrl
  7337  0001AA  C020  FFF4         	movff	??_ISR_bassa+15,prodh
  7338  0001AE  C01F  FFF3         	movff	??_ISR_bassa+14,prodl
  7339  0001B2  C01E  FFDA         	movff	??_ISR_bassa+13,fsr2h
  7340  0001B6  C01D  FFD9         	movff	??_ISR_bassa+12,fsr2l
  7341  0001BA  C01C  FFE2         	movff	??_ISR_bassa+11,fsr1h
  7342  0001BE  C01B  FFE1         	movff	??_ISR_bassa+10,fsr1l
  7343  0001C2  C01A  FFEA         	movff	??_ISR_bassa+9,fsr0h
  7344  0001C6  C019  FFE9         	movff	??_ISR_bassa+8,fsr0l
  7345  0001CA  C018  FFFB         	movff	??_ISR_bassa+7,pclatu
  7346  0001CE  C017  FFFA         	movff	??_ISR_bassa+6,pclath
  7347  0001D2  C016  FFE0         	movff	??_ISR_bassa+5,bsr
  7348  0001D6  C015  FFE8         	movff	??_ISR_bassa+4,wreg
  7349  0001DA  C014  FFD8         	movff	??_ISR_bassa+3,status
  7350  0001DE  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7351  0001E0  0010               	retfie	
  7352  0001E2                     __end_of_ISR_bassa:
  7353                           	opt stack 0
  7354                           pclatu	equ	0xFFB
  7355                           pclath	equ	0xFFA
  7356                           tblptru	equ	0xFF8
  7357                           tblptrh	equ	0xFF7
  7358                           tblptrl	equ	0xFF6
  7359                           tablat	equ	0xFF5
  7360                           prodh	equ	0xFF4
  7361                           prodl	equ	0xFF3
  7362                           intcon	equ	0xFF2
  7363                           intcon2	equ	0xFF1
  7364                           postinc0	equ	0xFEE
  7365                           fsr0h	equ	0xFEA
  7366                           fsr0l	equ	0xFE9
  7367                           wreg	equ	0xFE8
  7368                           postdec1	equ	0xFE5
  7369                           fsr1h	equ	0xFE2
  7370                           fsr1l	equ	0xFE1
  7371                           bsr	equ	0xFE0
  7372                           indf2	equ	0xFDF
  7373                           fsr2h	equ	0xFDA
  7374                           fsr2l	equ	0xFD9
  7375                           status	equ	0xFD8
  7376                           
  7377 ;; *************** function i1___wmul *****************
  7378 ;; Defined at:
  7379 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  multiplier      2    0[COMRAM] unsigned int 
  7382 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;  __wmul          2    4[COMRAM] unsigned int 
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  2    0[COMRAM] unsigned int 
  7387 ;; Registers used:
  7388 ;;		wreg, status,2, status,0, prodl, prodh
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7394 ;;      Params:         4       0       0       0
  7395 ;;      Locals:         2       0       0       0
  7396 ;;      Temps:          0       0       0       0
  7397 ;;      Totals:         6       0       0       0
  7398 ;;Total ram usage:        6 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; Hardware stack levels required when called:    2
  7401 ;; This function calls:
  7402 ;;		Nothing
  7403 ;; This function is called by:
  7404 ;;		_ISR_bassa
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           	psect	text22
  7409  002C7A                     __ptext22:
  7410                           	opt stack 0
  7411  002C7A                     i1___wmul:
  7412                           	opt stack 24
  7413                           
  7414                           ;incstack = 0
  7415  002C7A  5001               	movf	i1___wmul@multiplier,w,c
  7416  002C7C  0203               	mulwf	i1___wmul@multiplicand,c
  7417  002C7E  CFF3 F005          	movff	prodl,i1___wmul@product
  7418  002C82  CFF4 F006          	movff	prodh,i1___wmul@product+1
  7419  002C86  5001               	movf	i1___wmul@multiplier,w,c
  7420  002C88  0204               	mulwf	i1___wmul@multiplicand+1,c
  7421  002C8A  50F3               	movf	prodl,w,c
  7422  002C8C  2606               	addwf	i1___wmul@product+1,f,c
  7423  002C8E  5002               	movf	i1___wmul@multiplier+1,w,c
  7424  002C90  0203               	mulwf	i1___wmul@multiplicand,c
  7425  002C92  50F3               	movf	prodl,w,c
  7426  002C94  2606               	addwf	i1___wmul@product+1,f,c
  7427  002C96  C005  F001         	movff	i1___wmul@product,?i1___wmul
  7428  002C9A  C006  F002         	movff	i1___wmul@product+1,?i1___wmul+1
  7429  002C9E  0012               	return	
  7430  002CA0                     __end_ofi1___wmul:
  7431                           	opt stack 0
  7432                           pclatu	equ	0xFFB
  7433                           pclath	equ	0xFFA
  7434                           tblptru	equ	0xFF8
  7435                           tblptrh	equ	0xFF7
  7436                           tblptrl	equ	0xFF6
  7437                           tablat	equ	0xFF5
  7438                           prodh	equ	0xFF4
  7439                           prodl	equ	0xFF3
  7440                           intcon	equ	0xFF2
  7441                           intcon2	equ	0xFF1
  7442                           postinc0	equ	0xFEE
  7443                           fsr0h	equ	0xFEA
  7444                           fsr0l	equ	0xFE9
  7445                           wreg	equ	0xFE8
  7446                           postdec1	equ	0xFE5
  7447                           fsr1h	equ	0xFE2
  7448                           fsr1l	equ	0xFE1
  7449                           bsr	equ	0xFE0
  7450                           indf2	equ	0xFDF
  7451                           fsr2h	equ	0xFDA
  7452                           fsr2l	equ	0xFD9
  7453                           status	equ	0xFD8
  7454                           
  7455 ;; *************** function i1_CANsendMessage *****************
  7456 ;; Defined at:
  7457 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;  identifier      4    0[COMRAM] unsigned long 
  7460 ;;  data            2    4[COMRAM] PTR unsigned char 
  7461 ;;		 -> data_array(8), 
  7462 ;;  dataLength      1    6[COMRAM] unsigned char 
  7463 ;;  flags           1    7[COMRAM] enum E16866
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;  CANsendMessa    4   12[COMRAM] unsigned long 
  7466 ;; Return value:  Size  Location     Type
  7467 ;;		None               void
  7468 ;; Registers used:
  7469 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7475 ;;      Params:         8       0       0       0
  7476 ;;      Locals:         4       0       0       0
  7477 ;;      Temps:          4       0       0       0
  7478 ;;      Totals:        16       0       0       0
  7479 ;;Total ram usage:       16 bytes
  7480 ;; Hardware stack levels used:    1
  7481 ;; Hardware stack levels required when called:    2
  7482 ;; This function calls:
  7483 ;;		Nothing
  7484 ;; This function is called by:
  7485 ;;		_ISR_bassa
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488                           
  7489                           	psect	text23
  7490  001478                     __ptext23:
  7491                           	opt stack 0
  7492  001478                     i1_CANsendMessage:
  7493                           	opt stack 24
  7494                           
  7495                           ;inc\CANlib.h: 297: unsigned long tamp;
  7496                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  7497                           
  7498                           ;incstack = 0
  7499  001478  010F               	movlb	15	; () banked
  7500  00147A  B740               	btfsc	64,3,b	;volatile
  7501  00147C  D115               	goto	i1l349
  7502                           
  7503                           ; BSR set to: 15
  7504                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  7505  00147E  C007  FF45         	movff	i1CANsendMessage@dataLength,3909	;volatile
  7506                           
  7507                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  7508  001482  AC08               	btfss	i1CANsendMessage@flags,6,c
  7509  001484  D003               	goto	i1l350
  7510                           
  7511                           ; BSR set to: 15
  7512                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  7513  001486  010F               	movlb	15	; () banked
  7514  001488  8D45               	bsf	69,6,b	;volatile
  7515  00148A  D002               	goto	i1l351
  7516  00148C                     i1l350:
  7517                           
  7518                           ; BSR set to: 15
  7519                           ;inc\CANlib.h: 303: else
  7520                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  7521  00148C  010F               	movlb	15	; () banked
  7522  00148E  9D45               	bcf	69,6,b	;volatile
  7523  001490                     i1l351:
  7524                           
  7525                           ; BSR set to: 15
  7526                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  7527  001490  A608               	btfss	i1CANsendMessage@flags,3,c
  7528  001492  D066               	goto	i1l352
  7529                           
  7530                           ; BSR set to: 15
  7531                           ;inc\CANlib.h: 307: {
  7532                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  7533  001494  5001               	movf	i1CANsendMessage@identifier,w,c
  7534  001496  6E0D               	movwf	i1CANsendMessage@tamp,c
  7535  001498  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  7536  00149A  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  7537  00149C  6A10               	clrf	i1CANsendMessage@tamp+3,c
  7538                           
  7539                           ; BSR set to: 15
  7540                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  7541  00149E  C00D  FF44         	movff	i1CANsendMessage@tamp,3908	;volatile
  7542                           
  7543                           ; BSR set to: 15
  7544                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  7545  0014A2  0E00               	movlw	0
  7546  0014A4  1401               	andwf	i1CANsendMessage@identifier,w,c
  7547  0014A6  6E0D               	movwf	i1CANsendMessage@tamp,c
  7548  0014A8  0EFF               	movlw	255
  7549  0014AA  1402               	andwf	i1CANsendMessage@identifier+1,w,c
  7550  0014AC  6E0E               	movwf	i1CANsendMessage@tamp+1,c
  7551  0014AE  0E00               	movlw	0
  7552  0014B0  1403               	andwf	i1CANsendMessage@identifier+2,w,c
  7553  0014B2  6E0F               	movwf	i1CANsendMessage@tamp+2,c
  7554  0014B4  0E00               	movlw	0
  7555  0014B6  1404               	andwf	i1CANsendMessage@identifier+3,w,c
  7556  0014B8  6E10               	movwf	i1CANsendMessage@tamp+3,c
  7557                           
  7558                           ; BSR set to: 15
  7559                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  7560  0014BA  C00D  F009         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  7561  0014BE  C00E  F00A         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  7562  0014C2  C00F  F00B         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  7563  0014C6  C010  F00C         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  7564  0014CA  C00A  F009         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
  7565  0014CE  C00B  F00A         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
  7566  0014D2  C00C  F00B         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
  7567  0014D6  6A0C               	clrf	??i1_CANsendMessage+3,c
  7568  0014D8  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  7569  0014DC  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  7570  0014E0  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  7571  0014E4  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  7572                           
  7573                           ; BSR set to: 15
  7574                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  7575  0014E8  C00D  FF43         	movff	i1CANsendMessage@tamp,3907	;volatile
  7576                           
  7577                           ; BSR set to: 15
  7578                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  7579  0014EC  0E00               	movlw	0
  7580  0014EE  010F               	movlb	15	; () banked
  7581  0014F0  6F42               	movwf	66,b	;volatile
  7582                           
  7583                           ; BSR set to: 15
  7584                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  7585  0014F2  010F               	movlb	15	; () banked
  7586  0014F4  8742               	bsf	66,3,b	;volatile
  7587                           
  7588                           ; BSR set to: 15
  7589                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  7590  0014F6  A003               	btfss	i1CANsendMessage@identifier+2,0,c
  7591  0014F8  D002               	goto	i1l353
  7592                           
  7593                           ; BSR set to: 15
  7594                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  7595  0014FA  010F               	movlb	15	; () banked
  7596  0014FC  8142               	bsf	66,0,b	;volatile
  7597  0014FE                     i1l353:
  7598                           
  7599                           ; BSR set to: 15
  7600                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  7601  0014FE  A203               	btfss	i1CANsendMessage@identifier+2,1,c
  7602  001500  D002               	goto	i1l354
  7603                           
  7604                           ; BSR set to: 15
  7605                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  7606  001502  010F               	movlb	15	; () banked
  7607  001504  8342               	bsf	66,1,b	;volatile
  7608  001506                     i1l354:
  7609                           
  7610                           ; BSR set to: 15
  7611                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  7612  001506  A403               	btfss	i1CANsendMessage@identifier+2,2,c
  7613  001508  D002               	goto	i1l355
  7614                           
  7615                           ; BSR set to: 15
  7616                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  7617  00150A  010F               	movlb	15	; () banked
  7618  00150C  8B42               	bsf	66,5,b	;volatile
  7619  00150E                     i1l355:
  7620                           
  7621                           ; BSR set to: 15
  7622                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  7623  00150E  A603               	btfss	i1CANsendMessage@identifier+2,3,c
  7624  001510  D002               	goto	i1l356
  7625                           
  7626                           ; BSR set to: 15
  7627                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  7628  001512  010F               	movlb	15	; () banked
  7629  001514  8D42               	bsf	66,6,b	;volatile
  7630  001516                     i1l356:
  7631                           
  7632                           ; BSR set to: 15
  7633                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  7634  001516  A803               	btfss	i1CANsendMessage@identifier+2,4,c
  7635  001518  D002               	goto	i1l3827
  7636                           
  7637                           ; BSR set to: 15
  7638                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  7639  00151A  010F               	movlb	15	; () banked
  7640  00151C  8F42               	bsf	66,7,b	;volatile
  7641  00151E                     i1l3827:
  7642                           
  7643                           ; BSR set to: 15
  7644                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  7645  00151E  C001  F009         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  7646  001522  C002  F00A         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  7647  001526  C003  F00B         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  7648  00152A  C004  F00C         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  7649  00152E  0E16               	movlw	22
  7650  001530  D005               	goto	i1u449_20
  7651  001532                     i1u449_25:
  7652  001532  90D8               	bcf	status,0,c
  7653  001534  320C               	rrcf	??i1_CANsendMessage+3,f,c
  7654  001536  320B               	rrcf	??i1_CANsendMessage+2,f,c
  7655  001538  320A               	rrcf	??i1_CANsendMessage+1,f,c
  7656  00153A  3209               	rrcf	??i1_CANsendMessage,f,c
  7657  00153C                     i1u449_20:
  7658  00153C  2EE8               	decfsz	wreg,f,c
  7659  00153E  D7F9               	goto	i1u449_25
  7660  001540  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  7661  001544  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  7662  001548  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  7663  00154C  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  7664                           
  7665                           ; BSR set to: 15
  7666                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  7667  001550  500D               	movf	i1CANsendMessage@tamp,w,c
  7668  001552  6E0D               	movwf	i1CANsendMessage@tamp,c
  7669  001554  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  7670  001556  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  7671  001558  6A10               	clrf	i1CANsendMessage@tamp+3,c
  7672                           
  7673                           ; BSR set to: 15
  7674                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  7675  00155A  C00D  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
  7676                           
  7677                           ;inc\CANlib.h: 333: }
  7678  00155E  D04D               	goto	i1l3847
  7679  001560                     i1l352:
  7680                           
  7681                           ; BSR set to: 15
  7682                           ;inc\CANlib.h: 335: else
  7683                           ;inc\CANlib.h: 337: {
  7684                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  7685  001560  010F               	movlb	15	; () banked
  7686  001562  9742               	bcf	66,3,b	;volatile
  7687                           
  7688                           ; BSR set to: 15
  7689                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  7690  001564  C001  F009         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  7691  001568  C002  F00A         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  7692  00156C  C003  F00B         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  7693  001570  C004  F00C         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  7694  001574  0E04               	movlw	4
  7695  001576  D005               	goto	i1u450_20
  7696  001578                     i1u450_25:
  7697  001578  90D8               	bcf	status,0,c
  7698  00157A  320C               	rrcf	??i1_CANsendMessage+3,f,c
  7699  00157C  320B               	rrcf	??i1_CANsendMessage+2,f,c
  7700  00157E  320A               	rrcf	??i1_CANsendMessage+1,f,c
  7701  001580  3209               	rrcf	??i1_CANsendMessage,f,c
  7702  001582                     i1u450_20:
  7703  001582  2EE8               	decfsz	wreg,f,c
  7704  001584  D7F9               	goto	i1u450_25
  7705  001586  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  7706  00158A  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  7707  00158E  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  7708  001592  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  7709                           
  7710                           ; BSR set to: 15
  7711                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  7712  001596  500D               	movf	i1CANsendMessage@tamp,w,c
  7713  001598  6E0D               	movwf	i1CANsendMessage@tamp,c
  7714  00159A  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  7715  00159C  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  7716  00159E  6A10               	clrf	i1CANsendMessage@tamp+3,c
  7717                           
  7718                           ; BSR set to: 15
  7719                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  7720  0015A0  C00D  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
  7721                           
  7722                           ; BSR set to: 15
  7723                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  7724  0015A4  0E07               	movlw	7
  7725  0015A6  1401               	andwf	i1CANsendMessage@identifier,w,c
  7726  0015A8  6E0D               	movwf	i1CANsendMessage@tamp,c
  7727  0015AA  0E00               	movlw	0
  7728  0015AC  1402               	andwf	i1CANsendMessage@identifier+1,w,c
  7729  0015AE  6E0E               	movwf	i1CANsendMessage@tamp+1,c
  7730  0015B0  0E00               	movlw	0
  7731  0015B2  1403               	andwf	i1CANsendMessage@identifier+2,w,c
  7732  0015B4  6E0F               	movwf	i1CANsendMessage@tamp+2,c
  7733  0015B6  0E00               	movlw	0
  7734  0015B8  1404               	andwf	i1CANsendMessage@identifier+3,w,c
  7735  0015BA  6E10               	movwf	i1CANsendMessage@tamp+3,c
  7736                           
  7737                           ; BSR set to: 15
  7738                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  7739  0015BC  C00D  F009         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  7740  0015C0  C00E  F00A         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  7741  0015C4  C00F  F00B         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  7742  0015C8  C010  F00C         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  7743  0015CC  0E05               	movlw	5
  7744  0015CE                     i1u451_25:
  7745  0015CE  90D8               	bcf	status,0,c
  7746  0015D0  3609               	rlcf	??i1_CANsendMessage,f,c
  7747  0015D2  360A               	rlcf	??i1_CANsendMessage+1,f,c
  7748  0015D4  360B               	rlcf	??i1_CANsendMessage+2,f,c
  7749  0015D6  360C               	rlcf	??i1_CANsendMessage+3,f,c
  7750  0015D8  2EE8               	decfsz	wreg,f,c
  7751  0015DA  D7F9               	goto	i1u451_25
  7752  0015DC  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  7753  0015E0  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  7754  0015E4  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  7755  0015E8  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  7756                           
  7757                           ; BSR set to: 15
  7758                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  7759  0015EC  010F               	movlb	15	; () banked
  7760  0015EE  5142               	movf	66,w,b	;volatile
  7761  0015F0  0B1F               	andlw	31
  7762  0015F2  010F               	movlb	15	; () banked
  7763  0015F4  6F42               	movwf	66,b	;volatile
  7764                           
  7765                           ; BSR set to: 15
  7766                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  7767  0015F6  C00D  FF42         	movff	i1CANsendMessage@tamp,3906	;volatile
  7768  0015FA                     i1l3847:
  7769                           
  7770                           ; BSR set to: 15
  7771                           ;inc\CANlib.h: 348: }
  7772                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  7773  0015FA  A008               	btfss	i1CANsendMessage@flags,0,c
  7774  0015FC  D003               	goto	i1l359
  7775                           
  7776                           ; BSR set to: 15
  7777                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  7778  0015FE  010F               	movlb	15	; () banked
  7779  001600  8140               	bsf	64,0,b	;volatile
  7780  001602  D002               	goto	i1l360
  7781  001604                     i1l359:
  7782                           
  7783                           ; BSR set to: 15
  7784                           ;inc\CANlib.h: 352: else
  7785                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  7786  001604  010F               	movlb	15	; () banked
  7787  001606  9140               	bcf	64,0,b	;volatile
  7788  001608                     i1l360:
  7789                           
  7790                           ; BSR set to: 15
  7791                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  7792  001608  A208               	btfss	i1CANsendMessage@flags,1,c
  7793  00160A  D003               	goto	i1l361
  7794                           
  7795                           ; BSR set to: 15
  7796                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  7797  00160C  010F               	movlb	15	; () banked
  7798  00160E  8340               	bsf	64,1,b	;volatile
  7799  001610  D002               	goto	i1l3853
  7800  001612                     i1l361:
  7801                           
  7802                           ; BSR set to: 15
  7803                           ;inc\CANlib.h: 356: else
  7804                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  7805  001612  010F               	movlb	15	; () banked
  7806  001614  9340               	bcf	64,1,b	;volatile
  7807  001616                     i1l3853:
  7808                           
  7809                           ; BSR set to: 15
  7810                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  7811  001616  C005  FFD9         	movff	i1CANsendMessage@data,fsr2l
  7812  00161A  C006  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
  7813  00161E  50DF               	movf	indf2,w,c
  7814  001620  010F               	movlb	15	; () banked
  7815  001622  6F46               	movwf	70,b	;volatile
  7816                           
  7817                           ; BSR set to: 15
  7818                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  7819  001624  EE20 F001          	lfsr	2,1
  7820  001628  5005               	movf	i1CANsendMessage@data,w,c
  7821  00162A  26D9               	addwf	fsr2l,f,c
  7822  00162C  5006               	movf	i1CANsendMessage@data+1,w,c
  7823  00162E  22DA               	addwfc	fsr2h,f,c
  7824  001630  50DF               	movf	indf2,w,c
  7825  001632  010F               	movlb	15	; () banked
  7826  001634  6F47               	movwf	71,b	;volatile
  7827                           
  7828                           ; BSR set to: 15
  7829                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  7830  001636  EE20 F002          	lfsr	2,2
  7831  00163A  5005               	movf	i1CANsendMessage@data,w,c
  7832  00163C  26D9               	addwf	fsr2l,f,c
  7833  00163E  5006               	movf	i1CANsendMessage@data+1,w,c
  7834  001640  22DA               	addwfc	fsr2h,f,c
  7835  001642  50DF               	movf	indf2,w,c
  7836  001644  010F               	movlb	15	; () banked
  7837  001646  6F48               	movwf	72,b	;volatile
  7838                           
  7839                           ; BSR set to: 15
  7840                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  7841  001648  EE20 F003          	lfsr	2,3
  7842  00164C  5005               	movf	i1CANsendMessage@data,w,c
  7843  00164E  26D9               	addwf	fsr2l,f,c
  7844  001650  5006               	movf	i1CANsendMessage@data+1,w,c
  7845  001652  22DA               	addwfc	fsr2h,f,c
  7846  001654  50DF               	movf	indf2,w,c
  7847  001656  010F               	movlb	15	; () banked
  7848  001658  6F49               	movwf	73,b	;volatile
  7849                           
  7850                           ; BSR set to: 15
  7851                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  7852  00165A  EE20 F004          	lfsr	2,4
  7853  00165E  5005               	movf	i1CANsendMessage@data,w,c
  7854  001660  26D9               	addwf	fsr2l,f,c
  7855  001662  5006               	movf	i1CANsendMessage@data+1,w,c
  7856  001664  22DA               	addwfc	fsr2h,f,c
  7857  001666  50DF               	movf	indf2,w,c
  7858  001668  010F               	movlb	15	; () banked
  7859  00166A  6F4A               	movwf	74,b	;volatile
  7860                           
  7861                           ; BSR set to: 15
  7862                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  7863  00166C  EE20 F005          	lfsr	2,5
  7864  001670  5005               	movf	i1CANsendMessage@data,w,c
  7865  001672  26D9               	addwf	fsr2l,f,c
  7866  001674  5006               	movf	i1CANsendMessage@data+1,w,c
  7867  001676  22DA               	addwfc	fsr2h,f,c
  7868  001678  50DF               	movf	indf2,w,c
  7869  00167A  010F               	movlb	15	; () banked
  7870  00167C  6F4B               	movwf	75,b	;volatile
  7871                           
  7872                           ; BSR set to: 15
  7873                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  7874  00167E  EE20 F006          	lfsr	2,6
  7875  001682  5005               	movf	i1CANsendMessage@data,w,c
  7876  001684  26D9               	addwf	fsr2l,f,c
  7877  001686  5006               	movf	i1CANsendMessage@data+1,w,c
  7878  001688  22DA               	addwfc	fsr2h,f,c
  7879  00168A  50DF               	movf	indf2,w,c
  7880  00168C  010F               	movlb	15	; () banked
  7881  00168E  6F4C               	movwf	76,b	;volatile
  7882                           
  7883                           ; BSR set to: 15
  7884                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  7885  001690  EE20 F007          	lfsr	2,7
  7886  001694  5005               	movf	i1CANsendMessage@data,w,c
  7887  001696  26D9               	addwf	fsr2l,f,c
  7888  001698  5006               	movf	i1CANsendMessage@data+1,w,c
  7889  00169A  22DA               	addwfc	fsr2h,f,c
  7890  00169C  50DF               	movf	indf2,w,c
  7891  00169E  010F               	movlb	15	; () banked
  7892  0016A0  6F4D               	movwf	77,b	;volatile
  7893                           
  7894                           ; BSR set to: 15
  7895                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  7896  0016A2  010F               	movlb	15	; () banked
  7897  0016A4  8740               	bsf	64,3,b	;volatile
  7898                           
  7899                           ; BSR set to: 15
  7900                           ;inc\CANlib.h: 369: return;
  7901  0016A6  0012               	return	
  7902  0016A8                     i1l349:
  7903                           
  7904                           ; BSR set to: 15
  7905                           ;inc\CANlib.h: 370: }
  7906                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  7907  0016A8  010F               	movlb	15	; () banked
  7908  0016AA  B730               	btfsc	48,3,b	;volatile
  7909  0016AC  D115               	goto	i1l364
  7910                           
  7911                           ; BSR set to: 15
  7912                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  7913  0016AE  C007  FF35         	movff	i1CANsendMessage@dataLength,3893	;volatile
  7914                           
  7915                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  7916  0016B2  AC08               	btfss	i1CANsendMessage@flags,6,c
  7917  0016B4  D003               	goto	i1l365
  7918                           
  7919                           ; BSR set to: 15
  7920                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  7921  0016B6  010F               	movlb	15	; () banked
  7922  0016B8  8D35               	bsf	53,6,b	;volatile
  7923  0016BA  D002               	goto	i1l366
  7924  0016BC                     i1l365:
  7925                           
  7926                           ; BSR set to: 15
  7927                           ;inc\CANlib.h: 379: else
  7928                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  7929  0016BC  010F               	movlb	15	; () banked
  7930  0016BE  9D35               	bcf	53,6,b	;volatile
  7931  0016C0                     i1l366:
  7932                           
  7933                           ; BSR set to: 15
  7934                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  7935  0016C0  A608               	btfss	i1CANsendMessage@flags,3,c
  7936  0016C2  D066               	goto	i1l367
  7937                           
  7938                           ; BSR set to: 15
  7939                           ;inc\CANlib.h: 383: {
  7940                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  7941  0016C4  5001               	movf	i1CANsendMessage@identifier,w,c
  7942  0016C6  6E0D               	movwf	i1CANsendMessage@tamp,c
  7943  0016C8  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  7944  0016CA  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  7945  0016CC  6A10               	clrf	i1CANsendMessage@tamp+3,c
  7946                           
  7947                           ; BSR set to: 15
  7948                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  7949  0016CE  C00D  FF34         	movff	i1CANsendMessage@tamp,3892	;volatile
  7950                           
  7951                           ; BSR set to: 15
  7952                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  7953  0016D2  0E00               	movlw	0
  7954  0016D4  1401               	andwf	i1CANsendMessage@identifier,w,c
  7955  0016D6  6E0D               	movwf	i1CANsendMessage@tamp,c
  7956  0016D8  0EFF               	movlw	255
  7957  0016DA  1402               	andwf	i1CANsendMessage@identifier+1,w,c
  7958  0016DC  6E0E               	movwf	i1CANsendMessage@tamp+1,c
  7959  0016DE  0E00               	movlw	0
  7960  0016E0  1403               	andwf	i1CANsendMessage@identifier+2,w,c
  7961  0016E2  6E0F               	movwf	i1CANsendMessage@tamp+2,c
  7962  0016E4  0E00               	movlw	0
  7963  0016E6  1404               	andwf	i1CANsendMessage@identifier+3,w,c
  7964  0016E8  6E10               	movwf	i1CANsendMessage@tamp+3,c
  7965                           
  7966                           ; BSR set to: 15
  7967                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  7968  0016EA  C00D  F009         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  7969  0016EE  C00E  F00A         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  7970  0016F2  C00F  F00B         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  7971  0016F6  C010  F00C         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  7972  0016FA  C00A  F009         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
  7973  0016FE  C00B  F00A         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
  7974  001702  C00C  F00B         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
  7975  001706  6A0C               	clrf	??i1_CANsendMessage+3,c
  7976  001708  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  7977  00170C  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  7978  001710  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  7979  001714  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  7980                           
  7981                           ; BSR set to: 15
  7982                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  7983  001718  C00D  FF33         	movff	i1CANsendMessage@tamp,3891	;volatile
  7984                           
  7985                           ; BSR set to: 15
  7986                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  7987  00171C  0E00               	movlw	0
  7988  00171E  010F               	movlb	15	; () banked
  7989  001720  6F32               	movwf	50,b	;volatile
  7990                           
  7991                           ; BSR set to: 15
  7992                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  7993  001722  010F               	movlb	15	; () banked
  7994  001724  8732               	bsf	50,3,b	;volatile
  7995                           
  7996                           ; BSR set to: 15
  7997                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  7998  001726  A003               	btfss	i1CANsendMessage@identifier+2,0,c
  7999  001728  D002               	goto	i1l368
  8000                           
  8001                           ; BSR set to: 15
  8002                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  8003  00172A  010F               	movlb	15	; () banked
  8004  00172C  8132               	bsf	50,0,b	;volatile
  8005  00172E                     i1l368:
  8006                           
  8007                           ; BSR set to: 15
  8008                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  8009  00172E  A203               	btfss	i1CANsendMessage@identifier+2,1,c
  8010  001730  D002               	goto	i1l369
  8011                           
  8012                           ; BSR set to: 15
  8013                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  8014  001732  010F               	movlb	15	; () banked
  8015  001734  8332               	bsf	50,1,b	;volatile
  8016  001736                     i1l369:
  8017                           
  8018                           ; BSR set to: 15
  8019                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  8020  001736  A403               	btfss	i1CANsendMessage@identifier+2,2,c
  8021  001738  D002               	goto	i1l370
  8022                           
  8023                           ; BSR set to: 15
  8024                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  8025  00173A  010F               	movlb	15	; () banked
  8026  00173C  8B32               	bsf	50,5,b	;volatile
  8027  00173E                     i1l370:
  8028                           
  8029                           ; BSR set to: 15
  8030                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  8031  00173E  A603               	btfss	i1CANsendMessage@identifier+2,3,c
  8032  001740  D002               	goto	i1l371
  8033                           
  8034                           ; BSR set to: 15
  8035                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  8036  001742  010F               	movlb	15	; () banked
  8037  001744  8D32               	bsf	50,6,b	;volatile
  8038  001746                     i1l371:
  8039                           
  8040                           ; BSR set to: 15
  8041                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  8042  001746  A803               	btfss	i1CANsendMessage@identifier+2,4,c
  8043  001748  D002               	goto	i1l3903
  8044                           
  8045                           ; BSR set to: 15
  8046                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  8047  00174A  010F               	movlb	15	; () banked
  8048  00174C  8F32               	bsf	50,7,b	;volatile
  8049  00174E                     i1l3903:
  8050                           
  8051                           ; BSR set to: 15
  8052                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  8053  00174E  C001  F009         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  8054  001752  C002  F00A         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  8055  001756  C003  F00B         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  8056  00175A  C004  F00C         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  8057  00175E  0E16               	movlw	22
  8058  001760  D005               	goto	i1u462_20
  8059  001762                     i1u462_25:
  8060  001762  90D8               	bcf	status,0,c
  8061  001764  320C               	rrcf	??i1_CANsendMessage+3,f,c
  8062  001766  320B               	rrcf	??i1_CANsendMessage+2,f,c
  8063  001768  320A               	rrcf	??i1_CANsendMessage+1,f,c
  8064  00176A  3209               	rrcf	??i1_CANsendMessage,f,c
  8065  00176C                     i1u462_20:
  8066  00176C  2EE8               	decfsz	wreg,f,c
  8067  00176E  D7F9               	goto	i1u462_25
  8068  001770  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8069  001774  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8070  001778  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8071  00177C  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8072                           
  8073                           ; BSR set to: 15
  8074                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  8075  001780  500D               	movf	i1CANsendMessage@tamp,w,c
  8076  001782  6E0D               	movwf	i1CANsendMessage@tamp,c
  8077  001784  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  8078  001786  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  8079  001788  6A10               	clrf	i1CANsendMessage@tamp+3,c
  8080                           
  8081                           ; BSR set to: 15
  8082                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  8083  00178A  C00D  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
  8084                           
  8085                           ;inc\CANlib.h: 408: }
  8086  00178E  D04D               	goto	i1l3923
  8087  001790                     i1l367:
  8088                           
  8089                           ; BSR set to: 15
  8090                           ;inc\CANlib.h: 410: else
  8091                           ;inc\CANlib.h: 412: {
  8092                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  8093  001790  010F               	movlb	15	; () banked
  8094  001792  9732               	bcf	50,3,b	;volatile
  8095                           
  8096                           ; BSR set to: 15
  8097                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  8098  001794  C001  F009         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  8099  001798  C002  F00A         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  8100  00179C  C003  F00B         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  8101  0017A0  C004  F00C         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  8102  0017A4  0E04               	movlw	4
  8103  0017A6  D005               	goto	i1u463_20
  8104  0017A8                     i1u463_25:
  8105  0017A8  90D8               	bcf	status,0,c
  8106  0017AA  320C               	rrcf	??i1_CANsendMessage+3,f,c
  8107  0017AC  320B               	rrcf	??i1_CANsendMessage+2,f,c
  8108  0017AE  320A               	rrcf	??i1_CANsendMessage+1,f,c
  8109  0017B0  3209               	rrcf	??i1_CANsendMessage,f,c
  8110  0017B2                     i1u463_20:
  8111  0017B2  2EE8               	decfsz	wreg,f,c
  8112  0017B4  D7F9               	goto	i1u463_25
  8113  0017B6  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8114  0017BA  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8115  0017BE  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8116  0017C2  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8117                           
  8118                           ; BSR set to: 15
  8119                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  8120  0017C6  500D               	movf	i1CANsendMessage@tamp,w,c
  8121  0017C8  6E0D               	movwf	i1CANsendMessage@tamp,c
  8122  0017CA  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  8123  0017CC  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  8124  0017CE  6A10               	clrf	i1CANsendMessage@tamp+3,c
  8125                           
  8126                           ; BSR set to: 15
  8127                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  8128  0017D0  C00D  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
  8129                           
  8130                           ; BSR set to: 15
  8131                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  8132  0017D4  0E07               	movlw	7
  8133  0017D6  1401               	andwf	i1CANsendMessage@identifier,w,c
  8134  0017D8  6E0D               	movwf	i1CANsendMessage@tamp,c
  8135  0017DA  0E00               	movlw	0
  8136  0017DC  1402               	andwf	i1CANsendMessage@identifier+1,w,c
  8137  0017DE  6E0E               	movwf	i1CANsendMessage@tamp+1,c
  8138  0017E0  0E00               	movlw	0
  8139  0017E2  1403               	andwf	i1CANsendMessage@identifier+2,w,c
  8140  0017E4  6E0F               	movwf	i1CANsendMessage@tamp+2,c
  8141  0017E6  0E00               	movlw	0
  8142  0017E8  1404               	andwf	i1CANsendMessage@identifier+3,w,c
  8143  0017EA  6E10               	movwf	i1CANsendMessage@tamp+3,c
  8144                           
  8145                           ; BSR set to: 15
  8146                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  8147  0017EC  C00D  F009         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  8148  0017F0  C00E  F00A         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  8149  0017F4  C00F  F00B         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  8150  0017F8  C010  F00C         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  8151  0017FC  0E05               	movlw	5
  8152  0017FE                     i1u464_25:
  8153  0017FE  90D8               	bcf	status,0,c
  8154  001800  3609               	rlcf	??i1_CANsendMessage,f,c
  8155  001802  360A               	rlcf	??i1_CANsendMessage+1,f,c
  8156  001804  360B               	rlcf	??i1_CANsendMessage+2,f,c
  8157  001806  360C               	rlcf	??i1_CANsendMessage+3,f,c
  8158  001808  2EE8               	decfsz	wreg,f,c
  8159  00180A  D7F9               	goto	i1u464_25
  8160  00180C  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8161  001810  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8162  001814  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8163  001818  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8164                           
  8165                           ; BSR set to: 15
  8166                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  8167  00181C  010F               	movlb	15	; () banked
  8168  00181E  5132               	movf	50,w,b	;volatile
  8169  001820  0B1F               	andlw	31
  8170  001822  010F               	movlb	15	; () banked
  8171  001824  6F32               	movwf	50,b	;volatile
  8172                           
  8173                           ; BSR set to: 15
  8174                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  8175  001826  C00D  FF32         	movff	i1CANsendMessage@tamp,3890	;volatile
  8176  00182A                     i1l3923:
  8177                           
  8178                           ; BSR set to: 15
  8179                           ;inc\CANlib.h: 423: }
  8180                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  8181  00182A  A008               	btfss	i1CANsendMessage@flags,0,c
  8182  00182C  D003               	goto	i1l374
  8183                           
  8184                           ; BSR set to: 15
  8185                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  8186  00182E  010F               	movlb	15	; () banked
  8187  001830  8130               	bsf	48,0,b	;volatile
  8188  001832  D002               	goto	i1l375
  8189  001834                     i1l374:
  8190                           
  8191                           ; BSR set to: 15
  8192                           ;inc\CANlib.h: 427: else
  8193                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  8194  001834  010F               	movlb	15	; () banked
  8195  001836  9130               	bcf	48,0,b	;volatile
  8196  001838                     i1l375:
  8197                           
  8198                           ; BSR set to: 15
  8199                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  8200  001838  A208               	btfss	i1CANsendMessage@flags,1,c
  8201  00183A  D003               	goto	i1l376
  8202                           
  8203                           ; BSR set to: 15
  8204                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  8205  00183C  010F               	movlb	15	; () banked
  8206  00183E  8330               	bsf	48,1,b	;volatile
  8207  001840  D002               	goto	i1l3929
  8208  001842                     i1l376:
  8209                           
  8210                           ; BSR set to: 15
  8211                           ;inc\CANlib.h: 431: else
  8212                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  8213  001842  010F               	movlb	15	; () banked
  8214  001844  9330               	bcf	48,1,b	;volatile
  8215  001846                     i1l3929:
  8216                           
  8217                           ; BSR set to: 15
  8218                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  8219  001846  C005  FFD9         	movff	i1CANsendMessage@data,fsr2l
  8220  00184A  C006  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
  8221  00184E  50DF               	movf	indf2,w,c
  8222  001850  010F               	movlb	15	; () banked
  8223  001852  6F36               	movwf	54,b	;volatile
  8224                           
  8225                           ; BSR set to: 15
  8226                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  8227  001854  EE20 F001          	lfsr	2,1
  8228  001858  5005               	movf	i1CANsendMessage@data,w,c
  8229  00185A  26D9               	addwf	fsr2l,f,c
  8230  00185C  5006               	movf	i1CANsendMessage@data+1,w,c
  8231  00185E  22DA               	addwfc	fsr2h,f,c
  8232  001860  50DF               	movf	indf2,w,c
  8233  001862  010F               	movlb	15	; () banked
  8234  001864  6F37               	movwf	55,b	;volatile
  8235                           
  8236                           ; BSR set to: 15
  8237                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  8238  001866  EE20 F002          	lfsr	2,2
  8239  00186A  5005               	movf	i1CANsendMessage@data,w,c
  8240  00186C  26D9               	addwf	fsr2l,f,c
  8241  00186E  5006               	movf	i1CANsendMessage@data+1,w,c
  8242  001870  22DA               	addwfc	fsr2h,f,c
  8243  001872  50DF               	movf	indf2,w,c
  8244  001874  010F               	movlb	15	; () banked
  8245  001876  6F38               	movwf	56,b	;volatile
  8246                           
  8247                           ; BSR set to: 15
  8248                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  8249  001878  EE20 F003          	lfsr	2,3
  8250  00187C  5005               	movf	i1CANsendMessage@data,w,c
  8251  00187E  26D9               	addwf	fsr2l,f,c
  8252  001880  5006               	movf	i1CANsendMessage@data+1,w,c
  8253  001882  22DA               	addwfc	fsr2h,f,c
  8254  001884  50DF               	movf	indf2,w,c
  8255  001886  010F               	movlb	15	; () banked
  8256  001888  6F39               	movwf	57,b	;volatile
  8257                           
  8258                           ; BSR set to: 15
  8259                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  8260  00188A  EE20 F004          	lfsr	2,4
  8261  00188E  5005               	movf	i1CANsendMessage@data,w,c
  8262  001890  26D9               	addwf	fsr2l,f,c
  8263  001892  5006               	movf	i1CANsendMessage@data+1,w,c
  8264  001894  22DA               	addwfc	fsr2h,f,c
  8265  001896  50DF               	movf	indf2,w,c
  8266  001898  010F               	movlb	15	; () banked
  8267  00189A  6F3A               	movwf	58,b	;volatile
  8268                           
  8269                           ; BSR set to: 15
  8270                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  8271  00189C  EE20 F005          	lfsr	2,5
  8272  0018A0  5005               	movf	i1CANsendMessage@data,w,c
  8273  0018A2  26D9               	addwf	fsr2l,f,c
  8274  0018A4  5006               	movf	i1CANsendMessage@data+1,w,c
  8275  0018A6  22DA               	addwfc	fsr2h,f,c
  8276  0018A8  50DF               	movf	indf2,w,c
  8277  0018AA  010F               	movlb	15	; () banked
  8278  0018AC  6F3B               	movwf	59,b	;volatile
  8279                           
  8280                           ; BSR set to: 15
  8281                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  8282  0018AE  EE20 F006          	lfsr	2,6
  8283  0018B2  5005               	movf	i1CANsendMessage@data,w,c
  8284  0018B4  26D9               	addwf	fsr2l,f,c
  8285  0018B6  5006               	movf	i1CANsendMessage@data+1,w,c
  8286  0018B8  22DA               	addwfc	fsr2h,f,c
  8287  0018BA  50DF               	movf	indf2,w,c
  8288  0018BC  010F               	movlb	15	; () banked
  8289  0018BE  6F3C               	movwf	60,b	;volatile
  8290                           
  8291                           ; BSR set to: 15
  8292                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  8293  0018C0  EE20 F007          	lfsr	2,7
  8294  0018C4  5005               	movf	i1CANsendMessage@data,w,c
  8295  0018C6  26D9               	addwf	fsr2l,f,c
  8296  0018C8  5006               	movf	i1CANsendMessage@data+1,w,c
  8297  0018CA  22DA               	addwfc	fsr2h,f,c
  8298  0018CC  50DF               	movf	indf2,w,c
  8299  0018CE  010F               	movlb	15	; () banked
  8300  0018D0  6F3D               	movwf	61,b	;volatile
  8301                           
  8302                           ; BSR set to: 15
  8303                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  8304  0018D2  010F               	movlb	15	; () banked
  8305  0018D4  8730               	bsf	48,3,b	;volatile
  8306                           
  8307                           ; BSR set to: 15
  8308                           ;inc\CANlib.h: 445: return;
  8309  0018D6  0012               	return	
  8310  0018D8                     i1l364:
  8311                           
  8312                           ; BSR set to: 15
  8313                           ;inc\CANlib.h: 446: }
  8314                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  8315  0018D8  010F               	movlb	15	; () banked
  8316  0018DA  B720               	btfsc	32,3,b	;volatile
  8317  0018DC  0012               	return	
  8318                           
  8319                           ; BSR set to: 15
  8320                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  8321  0018DE  C007  FF25         	movff	i1CANsendMessage@dataLength,3877	;volatile
  8322                           
  8323                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  8324  0018E2  AC08               	btfss	i1CANsendMessage@flags,6,c
  8325  0018E4  D003               	goto	i1l379
  8326                           
  8327                           ; BSR set to: 15
  8328                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  8329  0018E6  010F               	movlb	15	; () banked
  8330  0018E8  8D25               	bsf	37,6,b	;volatile
  8331  0018EA  D002               	goto	i1l380
  8332  0018EC                     i1l379:
  8333                           
  8334                           ; BSR set to: 15
  8335                           ;inc\CANlib.h: 455: else
  8336                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  8337  0018EC  010F               	movlb	15	; () banked
  8338  0018EE  9D25               	bcf	37,6,b	;volatile
  8339  0018F0                     i1l380:
  8340                           
  8341                           ; BSR set to: 15
  8342                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  8343  0018F0  A608               	btfss	i1CANsendMessage@flags,3,c
  8344  0018F2  D066               	goto	i1l381
  8345                           
  8346                           ; BSR set to: 15
  8347                           ;inc\CANlib.h: 459: {
  8348                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  8349  0018F4  5001               	movf	i1CANsendMessage@identifier,w,c
  8350  0018F6  6E0D               	movwf	i1CANsendMessage@tamp,c
  8351  0018F8  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  8352  0018FA  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  8353  0018FC  6A10               	clrf	i1CANsendMessage@tamp+3,c
  8354                           
  8355                           ; BSR set to: 15
  8356                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  8357  0018FE  C00D  FF24         	movff	i1CANsendMessage@tamp,3876	;volatile
  8358                           
  8359                           ; BSR set to: 15
  8360                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  8361  001902  0E00               	movlw	0
  8362  001904  1401               	andwf	i1CANsendMessage@identifier,w,c
  8363  001906  6E0D               	movwf	i1CANsendMessage@tamp,c
  8364  001908  0EFF               	movlw	255
  8365  00190A  1402               	andwf	i1CANsendMessage@identifier+1,w,c
  8366  00190C  6E0E               	movwf	i1CANsendMessage@tamp+1,c
  8367  00190E  0E00               	movlw	0
  8368  001910  1403               	andwf	i1CANsendMessage@identifier+2,w,c
  8369  001912  6E0F               	movwf	i1CANsendMessage@tamp+2,c
  8370  001914  0E00               	movlw	0
  8371  001916  1404               	andwf	i1CANsendMessage@identifier+3,w,c
  8372  001918  6E10               	movwf	i1CANsendMessage@tamp+3,c
  8373                           
  8374                           ; BSR set to: 15
  8375                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  8376  00191A  C00D  F009         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  8377  00191E  C00E  F00A         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  8378  001922  C00F  F00B         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  8379  001926  C010  F00C         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  8380  00192A  C00A  F009         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
  8381  00192E  C00B  F00A         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
  8382  001932  C00C  F00B         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
  8383  001936  6A0C               	clrf	??i1_CANsendMessage+3,c
  8384  001938  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8385  00193C  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8386  001940  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8387  001944  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8388                           
  8389                           ; BSR set to: 15
  8390                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  8391  001948  C00D  FF23         	movff	i1CANsendMessage@tamp,3875	;volatile
  8392                           
  8393                           ; BSR set to: 15
  8394                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  8395  00194C  0E00               	movlw	0
  8396  00194E  010F               	movlb	15	; () banked
  8397  001950  6F22               	movwf	34,b	;volatile
  8398                           
  8399                           ; BSR set to: 15
  8400                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  8401  001952  010F               	movlb	15	; () banked
  8402  001954  8722               	bsf	34,3,b	;volatile
  8403                           
  8404                           ; BSR set to: 15
  8405                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  8406  001956  A003               	btfss	i1CANsendMessage@identifier+2,0,c
  8407  001958  D002               	goto	i1l382
  8408                           
  8409                           ; BSR set to: 15
  8410                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  8411  00195A  010F               	movlb	15	; () banked
  8412  00195C  8122               	bsf	34,0,b	;volatile
  8413  00195E                     i1l382:
  8414                           
  8415                           ; BSR set to: 15
  8416                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  8417  00195E  A203               	btfss	i1CANsendMessage@identifier+2,1,c
  8418  001960  D002               	goto	i1l383
  8419                           
  8420                           ; BSR set to: 15
  8421                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  8422  001962  010F               	movlb	15	; () banked
  8423  001964  8322               	bsf	34,1,b	;volatile
  8424  001966                     i1l383:
  8425                           
  8426                           ; BSR set to: 15
  8427                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  8428  001966  A403               	btfss	i1CANsendMessage@identifier+2,2,c
  8429  001968  D002               	goto	i1l384
  8430                           
  8431                           ; BSR set to: 15
  8432                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  8433  00196A  010F               	movlb	15	; () banked
  8434  00196C  8B22               	bsf	34,5,b	;volatile
  8435  00196E                     i1l384:
  8436                           
  8437                           ; BSR set to: 15
  8438                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  8439  00196E  A603               	btfss	i1CANsendMessage@identifier+2,3,c
  8440  001970  D002               	goto	i1l385
  8441                           
  8442                           ; BSR set to: 15
  8443                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  8444  001972  010F               	movlb	15	; () banked
  8445  001974  8D22               	bsf	34,6,b	;volatile
  8446  001976                     i1l385:
  8447                           
  8448                           ; BSR set to: 15
  8449                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  8450  001976  A803               	btfss	i1CANsendMessage@identifier+2,4,c
  8451  001978  D002               	goto	i1l3979
  8452                           
  8453                           ; BSR set to: 15
  8454                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  8455  00197A  010F               	movlb	15	; () banked
  8456  00197C  8F22               	bsf	34,7,b	;volatile
  8457  00197E                     i1l3979:
  8458                           
  8459                           ; BSR set to: 15
  8460                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  8461  00197E  C001  F009         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  8462  001982  C002  F00A         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  8463  001986  C003  F00B         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  8464  00198A  C004  F00C         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  8465  00198E  0E16               	movlw	22
  8466  001990  D005               	goto	i1u475_20
  8467  001992                     i1u475_25:
  8468  001992  90D8               	bcf	status,0,c
  8469  001994  320C               	rrcf	??i1_CANsendMessage+3,f,c
  8470  001996  320B               	rrcf	??i1_CANsendMessage+2,f,c
  8471  001998  320A               	rrcf	??i1_CANsendMessage+1,f,c
  8472  00199A  3209               	rrcf	??i1_CANsendMessage,f,c
  8473  00199C                     i1u475_20:
  8474  00199C  2EE8               	decfsz	wreg,f,c
  8475  00199E  D7F9               	goto	i1u475_25
  8476  0019A0  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8477  0019A4  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8478  0019A8  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8479  0019AC  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8480                           
  8481                           ; BSR set to: 15
  8482                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  8483  0019B0  500D               	movf	i1CANsendMessage@tamp,w,c
  8484  0019B2  6E0D               	movwf	i1CANsendMessage@tamp,c
  8485  0019B4  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  8486  0019B6  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  8487  0019B8  6A10               	clrf	i1CANsendMessage@tamp+3,c
  8488                           
  8489                           ; BSR set to: 15
  8490                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  8491  0019BA  C00D  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
  8492                           
  8493                           ;inc\CANlib.h: 484: }
  8494  0019BE  D04D               	goto	i1l3999
  8495  0019C0                     i1l381:
  8496                           
  8497                           ; BSR set to: 15
  8498                           ;inc\CANlib.h: 486: else
  8499                           ;inc\CANlib.h: 488: {
  8500                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  8501  0019C0  010F               	movlb	15	; () banked
  8502  0019C2  9722               	bcf	34,3,b	;volatile
  8503                           
  8504                           ; BSR set to: 15
  8505                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  8506  0019C4  C001  F009         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
  8507  0019C8  C002  F00A         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
  8508  0019CC  C003  F00B         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
  8509  0019D0  C004  F00C         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
  8510  0019D4  0E04               	movlw	4
  8511  0019D6  D005               	goto	i1u476_20
  8512  0019D8                     i1u476_25:
  8513  0019D8  90D8               	bcf	status,0,c
  8514  0019DA  320C               	rrcf	??i1_CANsendMessage+3,f,c
  8515  0019DC  320B               	rrcf	??i1_CANsendMessage+2,f,c
  8516  0019DE  320A               	rrcf	??i1_CANsendMessage+1,f,c
  8517  0019E0  3209               	rrcf	??i1_CANsendMessage,f,c
  8518  0019E2                     i1u476_20:
  8519  0019E2  2EE8               	decfsz	wreg,f,c
  8520  0019E4  D7F9               	goto	i1u476_25
  8521  0019E6  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8522  0019EA  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8523  0019EE  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8524  0019F2  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8525                           
  8526                           ; BSR set to: 15
  8527                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  8528  0019F6  500D               	movf	i1CANsendMessage@tamp,w,c
  8529  0019F8  6E0D               	movwf	i1CANsendMessage@tamp,c
  8530  0019FA  6A0E               	clrf	i1CANsendMessage@tamp+1,c
  8531  0019FC  6A0F               	clrf	i1CANsendMessage@tamp+2,c
  8532  0019FE  6A10               	clrf	i1CANsendMessage@tamp+3,c
  8533                           
  8534                           ; BSR set to: 15
  8535                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  8536  001A00  C00D  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
  8537                           
  8538                           ; BSR set to: 15
  8539                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  8540  001A04  0E07               	movlw	7
  8541  001A06  1401               	andwf	i1CANsendMessage@identifier,w,c
  8542  001A08  6E0D               	movwf	i1CANsendMessage@tamp,c
  8543  001A0A  0E00               	movlw	0
  8544  001A0C  1402               	andwf	i1CANsendMessage@identifier+1,w,c
  8545  001A0E  6E0E               	movwf	i1CANsendMessage@tamp+1,c
  8546  001A10  0E00               	movlw	0
  8547  001A12  1403               	andwf	i1CANsendMessage@identifier+2,w,c
  8548  001A14  6E0F               	movwf	i1CANsendMessage@tamp+2,c
  8549  001A16  0E00               	movlw	0
  8550  001A18  1404               	andwf	i1CANsendMessage@identifier+3,w,c
  8551  001A1A  6E10               	movwf	i1CANsendMessage@tamp+3,c
  8552                           
  8553                           ; BSR set to: 15
  8554                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  8555  001A1C  C00D  F009         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
  8556  001A20  C00E  F00A         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
  8557  001A24  C00F  F00B         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
  8558  001A28  C010  F00C         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
  8559  001A2C  0E05               	movlw	5
  8560  001A2E                     i1u477_25:
  8561  001A2E  90D8               	bcf	status,0,c
  8562  001A30  3609               	rlcf	??i1_CANsendMessage,f,c
  8563  001A32  360A               	rlcf	??i1_CANsendMessage+1,f,c
  8564  001A34  360B               	rlcf	??i1_CANsendMessage+2,f,c
  8565  001A36  360C               	rlcf	??i1_CANsendMessage+3,f,c
  8566  001A38  2EE8               	decfsz	wreg,f,c
  8567  001A3A  D7F9               	goto	i1u477_25
  8568  001A3C  C009  F00D         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
  8569  001A40  C00A  F00E         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
  8570  001A44  C00B  F00F         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
  8571  001A48  C00C  F010         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
  8572                           
  8573                           ; BSR set to: 15
  8574                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  8575  001A4C  010F               	movlb	15	; () banked
  8576  001A4E  5122               	movf	34,w,b	;volatile
  8577  001A50  0B1F               	andlw	31
  8578  001A52  010F               	movlb	15	; () banked
  8579  001A54  6F22               	movwf	34,b	;volatile
  8580                           
  8581                           ; BSR set to: 15
  8582                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  8583  001A56  C00D  FF22         	movff	i1CANsendMessage@tamp,3874	;volatile
  8584  001A5A                     i1l3999:
  8585                           
  8586                           ; BSR set to: 15
  8587                           ;inc\CANlib.h: 499: }
  8588                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  8589  001A5A  A008               	btfss	i1CANsendMessage@flags,0,c
  8590  001A5C  D003               	goto	i1l388
  8591                           
  8592                           ; BSR set to: 15
  8593                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  8594  001A5E  010F               	movlb	15	; () banked
  8595  001A60  8120               	bsf	32,0,b	;volatile
  8596  001A62  D002               	goto	i1l389
  8597  001A64                     i1l388:
  8598                           
  8599                           ; BSR set to: 15
  8600                           ;inc\CANlib.h: 503: else
  8601                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  8602  001A64  010F               	movlb	15	; () banked
  8603  001A66  9120               	bcf	32,0,b	;volatile
  8604  001A68                     i1l389:
  8605                           
  8606                           ; BSR set to: 15
  8607                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  8608  001A68  A208               	btfss	i1CANsendMessage@flags,1,c
  8609  001A6A  D003               	goto	i1l390
  8610                           
  8611                           ; BSR set to: 15
  8612                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  8613  001A6C  010F               	movlb	15	; () banked
  8614  001A6E  8320               	bsf	32,1,b	;volatile
  8615  001A70  D002               	goto	i1l4005
  8616  001A72                     i1l390:
  8617                           
  8618                           ; BSR set to: 15
  8619                           ;inc\CANlib.h: 507: else
  8620                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  8621  001A72  010F               	movlb	15	; () banked
  8622  001A74  9320               	bcf	32,1,b	;volatile
  8623  001A76                     i1l4005:
  8624                           
  8625                           ; BSR set to: 15
  8626                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  8627  001A76  C005  FFD9         	movff	i1CANsendMessage@data,fsr2l
  8628  001A7A  C006  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
  8629  001A7E  50DF               	movf	indf2,w,c
  8630  001A80  010F               	movlb	15	; () banked
  8631  001A82  6F26               	movwf	38,b	;volatile
  8632                           
  8633                           ; BSR set to: 15
  8634                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  8635  001A84  EE20 F001          	lfsr	2,1
  8636  001A88  5005               	movf	i1CANsendMessage@data,w,c
  8637  001A8A  26D9               	addwf	fsr2l,f,c
  8638  001A8C  5006               	movf	i1CANsendMessage@data+1,w,c
  8639  001A8E  22DA               	addwfc	fsr2h,f,c
  8640  001A90  50DF               	movf	indf2,w,c
  8641  001A92  010F               	movlb	15	; () banked
  8642  001A94  6F27               	movwf	39,b	;volatile
  8643                           
  8644                           ; BSR set to: 15
  8645                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  8646  001A96  EE20 F002          	lfsr	2,2
  8647  001A9A  5005               	movf	i1CANsendMessage@data,w,c
  8648  001A9C  26D9               	addwf	fsr2l,f,c
  8649  001A9E  5006               	movf	i1CANsendMessage@data+1,w,c
  8650  001AA0  22DA               	addwfc	fsr2h,f,c
  8651  001AA2  50DF               	movf	indf2,w,c
  8652  001AA4  010F               	movlb	15	; () banked
  8653  001AA6  6F28               	movwf	40,b	;volatile
  8654                           
  8655                           ; BSR set to: 15
  8656                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  8657  001AA8  EE20 F003          	lfsr	2,3
  8658  001AAC  5005               	movf	i1CANsendMessage@data,w,c
  8659  001AAE  26D9               	addwf	fsr2l,f,c
  8660  001AB0  5006               	movf	i1CANsendMessage@data+1,w,c
  8661  001AB2  22DA               	addwfc	fsr2h,f,c
  8662  001AB4  50DF               	movf	indf2,w,c
  8663  001AB6  010F               	movlb	15	; () banked
  8664  001AB8  6F29               	movwf	41,b	;volatile
  8665                           
  8666                           ; BSR set to: 15
  8667                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  8668  001ABA  EE20 F004          	lfsr	2,4
  8669  001ABE  5005               	movf	i1CANsendMessage@data,w,c
  8670  001AC0  26D9               	addwf	fsr2l,f,c
  8671  001AC2  5006               	movf	i1CANsendMessage@data+1,w,c
  8672  001AC4  22DA               	addwfc	fsr2h,f,c
  8673  001AC6  50DF               	movf	indf2,w,c
  8674  001AC8  010F               	movlb	15	; () banked
  8675  001ACA  6F2A               	movwf	42,b	;volatile
  8676                           
  8677                           ; BSR set to: 15
  8678                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  8679  001ACC  EE20 F005          	lfsr	2,5
  8680  001AD0  5005               	movf	i1CANsendMessage@data,w,c
  8681  001AD2  26D9               	addwf	fsr2l,f,c
  8682  001AD4  5006               	movf	i1CANsendMessage@data+1,w,c
  8683  001AD6  22DA               	addwfc	fsr2h,f,c
  8684  001AD8  50DF               	movf	indf2,w,c
  8685  001ADA  010F               	movlb	15	; () banked
  8686  001ADC  6F2B               	movwf	43,b	;volatile
  8687                           
  8688                           ; BSR set to: 15
  8689                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  8690  001ADE  EE20 F006          	lfsr	2,6
  8691  001AE2  5005               	movf	i1CANsendMessage@data,w,c
  8692  001AE4  26D9               	addwf	fsr2l,f,c
  8693  001AE6  5006               	movf	i1CANsendMessage@data+1,w,c
  8694  001AE8  22DA               	addwfc	fsr2h,f,c
  8695  001AEA  50DF               	movf	indf2,w,c
  8696  001AEC  010F               	movlb	15	; () banked
  8697  001AEE  6F2C               	movwf	44,b	;volatile
  8698                           
  8699                           ; BSR set to: 15
  8700                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  8701  001AF0  EE20 F007          	lfsr	2,7
  8702  001AF4  5005               	movf	i1CANsendMessage@data,w,c
  8703  001AF6  26D9               	addwf	fsr2l,f,c
  8704  001AF8  5006               	movf	i1CANsendMessage@data+1,w,c
  8705  001AFA  22DA               	addwfc	fsr2h,f,c
  8706  001AFC  50DF               	movf	indf2,w,c
  8707  001AFE  010F               	movlb	15	; () banked
  8708  001B00  6F2D               	movwf	45,b	;volatile
  8709                           
  8710                           ; BSR set to: 15
  8711                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  8712  001B02  010F               	movlb	15	; () banked
  8713  001B04  8720               	bsf	32,3,b	;volatile
  8714                           
  8715                           ; BSR set to: 15
  8716                           ;inc\CANlib.h: 521: return;
  8717  001B06  0012               	return	
  8718  001B08                     __end_ofi1_CANsendMessage:
  8719                           	opt stack 0
  8720                           pclatu	equ	0xFFB
  8721                           pclath	equ	0xFFA
  8722                           tblptru	equ	0xFF8
  8723                           tblptrh	equ	0xFF7
  8724                           tblptrl	equ	0xFF6
  8725                           tablat	equ	0xFF5
  8726                           prodh	equ	0xFF4
  8727                           prodl	equ	0xFF3
  8728                           intcon	equ	0xFF2
  8729                           intcon2	equ	0xFF1
  8730                           postinc0	equ	0xFEE
  8731                           fsr0h	equ	0xFEA
  8732                           fsr0l	equ	0xFE9
  8733                           wreg	equ	0xFE8
  8734                           postdec1	equ	0xFE5
  8735                           fsr1h	equ	0xFE2
  8736                           fsr1l	equ	0xFE1
  8737                           bsr	equ	0xFE0
  8738                           indf2	equ	0xFDF
  8739                           fsr2h	equ	0xFDA
  8740                           fsr2l	equ	0xFD9
  8741                           status	equ	0xFD8
  8742                           
  8743 ;; *************** function ___lwdiv *****************
  8744 ;; Defined at:
  8745 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;  dividend        2    6[COMRAM] unsigned int 
  8748 ;;  divisor         2    8[COMRAM] unsigned int 
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;  quotient        2   10[COMRAM] unsigned int 
  8751 ;;  counter         1   12[COMRAM] unsigned char 
  8752 ;; Return value:  Size  Location     Type
  8753 ;;                  2    6[COMRAM] unsigned int 
  8754 ;; Registers used:
  8755 ;;		wreg, status,2, status,0
  8756 ;; Tracked objects:
  8757 ;;		On entry : 0/0
  8758 ;;		On exit  : 0/0
  8759 ;;		Unchanged: 0/0
  8760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8761 ;;      Params:         4       0       0       0
  8762 ;;      Locals:         3       0       0       0
  8763 ;;      Temps:          0       0       0       0
  8764 ;;      Totals:         7       0       0       0
  8765 ;;Total ram usage:        7 bytes
  8766 ;; Hardware stack levels used:    1
  8767 ;; Hardware stack levels required when called:    2
  8768 ;; This function calls:
  8769 ;;		Nothing
  8770 ;; This function is called by:
  8771 ;;		_ISR_bassa
  8772 ;; This function uses a non-reentrant model
  8773 ;;
  8774                           
  8775                           	psect	text24
  8776  002B7A                     __ptext24:
  8777                           	opt stack 0
  8778  002B7A                     ___lwdiv:
  8779                           	opt stack 24
  8780                           
  8781                           ; BSR set to: 15
  8782                           ;incstack = 0
  8783  002B7A  0E00               	movlw	0
  8784  002B7C  6E0C               	movwf	___lwdiv@quotient+1,c
  8785  002B7E  0E00               	movlw	0
  8786  002B80  6E0B               	movwf	___lwdiv@quotient,c
  8787  002B82  5009               	movf	___lwdiv@divisor,w,c
  8788  002B84  100A               	iorwf	___lwdiv@divisor+1,w,c
  8789  002B86  B4D8               	btfsc	status,2,c
  8790  002B88  D01C               	goto	i1l1080
  8791  002B8A  0E01               	movlw	1
  8792  002B8C  6E0D               	movwf	___lwdiv@counter,c
  8793  002B8E  D004               	goto	i1l3781
  8794  002B90                     i1l3779:
  8795  002B90  90D8               	bcf	status,0,c
  8796  002B92  3609               	rlcf	___lwdiv@divisor,f,c
  8797  002B94  360A               	rlcf	___lwdiv@divisor+1,f,c
  8798  002B96  2A0D               	incf	___lwdiv@counter,f,c
  8799  002B98                     i1l3781:
  8800  002B98  AE0A               	btfss	___lwdiv@divisor+1,7,c
  8801  002B9A  D7FA               	goto	i1l3779
  8802  002B9C                     i1l3783:
  8803  002B9C  90D8               	bcf	status,0,c
  8804  002B9E  360B               	rlcf	___lwdiv@quotient,f,c
  8805  002BA0  360C               	rlcf	___lwdiv@quotient+1,f,c
  8806  002BA2  5009               	movf	___lwdiv@divisor,w,c
  8807  002BA4  5C07               	subwf	___lwdiv@dividend,w,c
  8808  002BA6  500A               	movf	___lwdiv@divisor+1,w,c
  8809  002BA8  5808               	subwfb	___lwdiv@dividend+1,w,c
  8810  002BAA  A0D8               	btfss	status,0,c
  8811  002BAC  D005               	goto	i1l3791
  8812  002BAE  5009               	movf	___lwdiv@divisor,w,c
  8813  002BB0  5E07               	subwf	___lwdiv@dividend,f,c
  8814  002BB2  500A               	movf	___lwdiv@divisor+1,w,c
  8815  002BB4  5A08               	subwfb	___lwdiv@dividend+1,f,c
  8816  002BB6  800B               	bsf	___lwdiv@quotient,0,c
  8817  002BB8                     i1l3791:
  8818  002BB8  90D8               	bcf	status,0,c
  8819  002BBA  320A               	rrcf	___lwdiv@divisor+1,f,c
  8820  002BBC  3209               	rrcf	___lwdiv@divisor,f,c
  8821  002BBE  2E0D               	decfsz	___lwdiv@counter,f,c
  8822  002BC0  D7ED               	goto	i1l3783
  8823  002BC2                     i1l1080:
  8824  002BC2  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8825  002BC6  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8826  002BCA  0012               	return		;funcret
  8827  002BCC                     __end_of___lwdiv:
  8828                           	opt stack 0
  8829                           pclatu	equ	0xFFB
  8830                           pclath	equ	0xFFA
  8831                           tblptru	equ	0xFF8
  8832                           tblptrh	equ	0xFF7
  8833                           tblptrl	equ	0xFF6
  8834                           tablat	equ	0xFF5
  8835                           prodh	equ	0xFF4
  8836                           prodl	equ	0xFF3
  8837                           intcon	equ	0xFF2
  8838                           intcon2	equ	0xFF1
  8839                           postinc0	equ	0xFEE
  8840                           fsr0h	equ	0xFEA
  8841                           fsr0l	equ	0xFE9
  8842                           wreg	equ	0xFE8
  8843                           postdec1	equ	0xFE5
  8844                           fsr1h	equ	0xFE2
  8845                           fsr1l	equ	0xFE1
  8846                           bsr	equ	0xFE0
  8847                           indf2	equ	0xFDF
  8848                           fsr2h	equ	0xFDA
  8849                           fsr2l	equ	0xFD9
  8850                           status	equ	0xFD8
  8851                           
  8852 ;; *************** function _CANreceiveMessage *****************
  8853 ;; Defined at:
  8854 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;  msg             2    0[COMRAM] PTR struct .
  8857 ;;		 -> msg(15), 
  8858 ;; Auto vars:     Size  Location     Type
  8859 ;;  tamp            1   11[COMRAM] unsigned char 
  8860 ;;  error           1   10[COMRAM] unsigned char 
  8861 ;; Return value:  Size  Location     Type
  8862 ;;                  1    wreg      unsigned char 
  8863 ;; Registers used:
  8864 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8865 ;; Tracked objects:
  8866 ;;		On entry : 0/0
  8867 ;;		On exit  : 0/0
  8868 ;;		Unchanged: 0/0
  8869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8870 ;;      Params:         2       0       0       0
  8871 ;;      Locals:         2       0       0       0
  8872 ;;      Temps:          8       0       0       0
  8873 ;;      Totals:        12       0       0       0
  8874 ;;Total ram usage:       12 bytes
  8875 ;; Hardware stack levels used:    1
  8876 ;; Hardware stack levels required when called:    2
  8877 ;; This function calls:
  8878 ;;		Nothing
  8879 ;; This function is called by:
  8880 ;;		_ISR_bassa
  8881 ;; This function uses a non-reentrant model
  8882 ;;
  8883                           
  8884                           	psect	text25
  8885  001B08                     __ptext25:
  8886                           	opt stack 0
  8887  001B08                     _CANreceiveMessage:
  8888                           	opt stack 24
  8889                           
  8890                           ;inc\CANlib.h: 531: BYTE tamp;
  8891                           ;inc\CANlib.h: 532: BYTE error = 0;
  8892                           
  8893                           ;incstack = 0
  8894  001B08  0E00               	movlw	0
  8895  001B0A  6E0B               	movwf	CANreceiveMessage@error,c
  8896                           
  8897                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
  8898  001B0C  BE74               	btfsc	3956,7,c	;volatile
  8899                           
  8900                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
  8901  001B0E  800B               	bsf	CANreceiveMessage@error,0,c
  8902                           
  8903                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
  8904  001B10  BC74               	btfsc	3956,6,c	;volatile
  8905                           
  8906                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
  8907  001B12  820B               	bsf	CANreceiveMessage@error,1,c
  8908                           
  8909                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
  8910  001B14  010F               	movlb	15	; () banked
  8911  001B16  AF50               	btfss	80,7,b	;volatile
  8912  001B18  D143               	goto	i1l396
  8913                           
  8914                           ; BSR set to: 15
  8915                           ;inc\CANlib.h: 542: {
  8916                           ;inc\CANlib.h: 543: msg->identifier = 0;
  8917  001B1A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8918  001B1E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8919  001B22  6ADE               	clrf	postinc2,c
  8920  001B24  6ADE               	clrf	postinc2,c
  8921  001B26  6ADE               	clrf	postinc2,c
  8922  001B28  6ADD               	clrf	postdec2,c
  8923                           
  8924                           ; BSR set to: 15
  8925                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
  8926  001B2A  EE20 F004          	lfsr	2,4
  8927  001B2E  5001               	movf	CANreceiveMessage@msg,w,c
  8928  001B30  26D9               	addwf	fsr2l,f,c
  8929  001B32  5002               	movf	CANreceiveMessage@msg+1,w,c
  8930  001B34  22DA               	addwfc	fsr2h,f,c
  8931  001B36  CF56 FFDF          	movff	3926,indf2	;volatile
  8932                           
  8933                           ; BSR set to: 15
  8934                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
  8935  001B3A  EE20 F005          	lfsr	2,5
  8936  001B3E  5001               	movf	CANreceiveMessage@msg,w,c
  8937  001B40  26D9               	addwf	fsr2l,f,c
  8938  001B42  5002               	movf	CANreceiveMessage@msg+1,w,c
  8939  001B44  22DA               	addwfc	fsr2h,f,c
  8940  001B46  CF57 FFDF          	movff	3927,indf2	;volatile
  8941                           
  8942                           ; BSR set to: 15
  8943                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
  8944  001B4A  EE20 F006          	lfsr	2,6
  8945  001B4E  5001               	movf	CANreceiveMessage@msg,w,c
  8946  001B50  26D9               	addwf	fsr2l,f,c
  8947  001B52  5002               	movf	CANreceiveMessage@msg+1,w,c
  8948  001B54  22DA               	addwfc	fsr2h,f,c
  8949  001B56  CF58 FFDF          	movff	3928,indf2	;volatile
  8950                           
  8951                           ; BSR set to: 15
  8952                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
  8953  001B5A  EE20 F007          	lfsr	2,7
  8954  001B5E  5001               	movf	CANreceiveMessage@msg,w,c
  8955  001B60  26D9               	addwf	fsr2l,f,c
  8956  001B62  5002               	movf	CANreceiveMessage@msg+1,w,c
  8957  001B64  22DA               	addwfc	fsr2h,f,c
  8958  001B66  CF59 FFDF          	movff	3929,indf2	;volatile
  8959                           
  8960                           ; BSR set to: 15
  8961                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
  8962  001B6A  EE20 F008          	lfsr	2,8
  8963  001B6E  5001               	movf	CANreceiveMessage@msg,w,c
  8964  001B70  26D9               	addwf	fsr2l,f,c
  8965  001B72  5002               	movf	CANreceiveMessage@msg+1,w,c
  8966  001B74  22DA               	addwfc	fsr2h,f,c
  8967  001B76  CF5A FFDF          	movff	3930,indf2	;volatile
  8968                           
  8969                           ; BSR set to: 15
  8970                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
  8971  001B7A  EE20 F009          	lfsr	2,9
  8972  001B7E  5001               	movf	CANreceiveMessage@msg,w,c
  8973  001B80  26D9               	addwf	fsr2l,f,c
  8974  001B82  5002               	movf	CANreceiveMessage@msg+1,w,c
  8975  001B84  22DA               	addwfc	fsr2h,f,c
  8976  001B86  CF5B FFDF          	movff	3931,indf2	;volatile
  8977                           
  8978                           ; BSR set to: 15
  8979                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
  8980  001B8A  EE20 F00A          	lfsr	2,10
  8981  001B8E  5001               	movf	CANreceiveMessage@msg,w,c
  8982  001B90  26D9               	addwf	fsr2l,f,c
  8983  001B92  5002               	movf	CANreceiveMessage@msg+1,w,c
  8984  001B94  22DA               	addwfc	fsr2h,f,c
  8985  001B96  CF5C FFDF          	movff	3932,indf2	;volatile
  8986                           
  8987                           ; BSR set to: 15
  8988                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
  8989  001B9A  EE20 F00B          	lfsr	2,11
  8990  001B9E  5001               	movf	CANreceiveMessage@msg,w,c
  8991  001BA0  26D9               	addwf	fsr2l,f,c
  8992  001BA2  5002               	movf	CANreceiveMessage@msg+1,w,c
  8993  001BA4  22DA               	addwfc	fsr2h,f,c
  8994  001BA6  CF5D FFDF          	movff	3933,indf2	;volatile
  8995                           
  8996                           ; BSR set to: 15
  8997                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
  8998  001BAA  EE20 F00E          	lfsr	2,14
  8999  001BAE  5001               	movf	CANreceiveMessage@msg,w,c
  9000  001BB0  26D9               	addwf	fsr2l,f,c
  9001  001BB2  5002               	movf	CANreceiveMessage@msg+1,w,c
  9002  001BB4  22DA               	addwfc	fsr2h,f,c
  9003  001BB6  010F               	movlb	15	; () banked
  9004  001BB8  AD55               	btfss	85,6,b	;volatile
  9005  001BBA  D002               	goto	i1u404_20
  9006  001BBC  0E01               	movlw	1
  9007  001BBE  D001               	goto	i1u404_26
  9008  001BC0                     i1u404_20:
  9009  001BC0  0E00               	movlw	0
  9010  001BC2                     i1u404_26:
  9011  001BC2  6EDF               	movwf	indf2,c
  9012                           
  9013                           ; BSR set to: 15
  9014                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
  9015  001BC4  EE20 F00D          	lfsr	2,13
  9016  001BC8  5001               	movf	CANreceiveMessage@msg,w,c
  9017  001BCA  26D9               	addwf	fsr2l,f,c
  9018  001BCC  5002               	movf	CANreceiveMessage@msg+1,w,c
  9019  001BCE  22DA               	addwfc	fsr2h,f,c
  9020  001BD0  010F               	movlb	15	; () banked
  9021  001BD2  5155               	movf	85,w,b	;volatile
  9022  001BD4  0B0F               	andlw	15
  9023  001BD6  6EDF               	movwf	indf2,c
  9024                           
  9025                           ; BSR set to: 15
  9026                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
  9027  001BD8  EE20 F00C          	lfsr	2,12
  9028  001BDC  5001               	movf	CANreceiveMessage@msg,w,c
  9029  001BDE  26D9               	addwf	fsr2l,f,c
  9030  001BE0  5002               	movf	CANreceiveMessage@msg+1,w,c
  9031  001BE2  22DA               	addwfc	fsr2h,f,c
  9032  001BE4  010F               	movlb	15	; () banked
  9033  001BE6  A752               	btfss	82,3,b	;volatile
  9034  001BE8  D002               	goto	i1u405_20
  9035  001BEA  0E01               	movlw	1
  9036  001BEC  D001               	goto	i1u405_26
  9037  001BEE                     i1u405_20:
  9038  001BEE  0E00               	movlw	0
  9039  001BF0                     i1u405_26:
  9040  001BF0  6EDF               	movwf	indf2,c
  9041                           
  9042                           ; BSR set to: 15
  9043                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
  9044  001BF2  010F               	movlb	15	; () banked
  9045  001BF4  B752               	btfsc	82,3,b	;volatile
  9046  001BF6  D044               	goto	i1l3553
  9047                           
  9048                           ; BSR set to: 15
  9049                           ;inc\CANlib.h: 560: {
  9050                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  9051  001BF8  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  9052  001BFC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9053  001BFE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9054  001C00  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9055  001C02  0E03               	movlw	3
  9056  001C04                     i1u407_25:
  9057  001C04  90D8               	bcf	status,0,c
  9058  001C06  3603               	rlcf	??_CANreceiveMessage,f,c
  9059  001C08  3604               	rlcf	??_CANreceiveMessage+1,f,c
  9060  001C0A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  9061  001C0C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  9062  001C0E  2EE8               	decfsz	wreg,f,c
  9063  001C10  D7F9               	goto	i1u407_25
  9064  001C12  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9065  001C16  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9066  001C1A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  9067  001C1E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9068  001C22  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9069  001C26  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9070                           
  9071                           ; BSR set to: 15
  9072                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
  9073  001C2A  010F               	movlb	15	; () banked
  9074  001C2C  3952               	swapf	82,w,b	;volatile
  9075  001C2E  42E8               	rrncf	wreg,f,c
  9076  001C30  0B07               	andlw	7
  9077  001C32  0B07               	andlw	7
  9078  001C34  6E0C               	movwf	CANreceiveMessage@tamp,c
  9079                           
  9080                           ; BSR set to: 15
  9081                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
  9082  001C36  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9083  001C3A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9084  001C3E  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  9085  001C42  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  9086  001C46  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  9087  001C4A  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  9088  001C4E  500C               	movf	CANreceiveMessage@tamp,w,c
  9089  001C50  2403               	addwf	??_CANreceiveMessage,w,c
  9090  001C52  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  9091  001C54  0E00               	movlw	0
  9092  001C56  2004               	addwfc	??_CANreceiveMessage+1,w,c
  9093  001C58  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  9094  001C5A  0E00               	movlw	0
  9095  001C5C  2005               	addwfc	??_CANreceiveMessage+2,w,c
  9096  001C5E  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  9097  001C60  0E00               	movlw	0
  9098  001C62  2006               	addwfc	??_CANreceiveMessage+3,w,c
  9099  001C64  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  9100  001C66  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9101  001C6A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9102  001C6E  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  9103  001C72  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  9104  001C76  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  9105  001C7A  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  9106                           
  9107                           ;inc\CANlib.h: 564: }
  9108  001C7E  D08D               	goto	i1l3579
  9109  001C80                     i1l3553:
  9110                           
  9111                           ; BSR set to: 15
  9112                           ;inc\CANlib.h: 565: else
  9113                           ;inc\CANlib.h: 566: {
  9114                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
  9115  001C80  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  9116  001C84  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9117  001C86  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9118  001C88  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9119  001C8A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9120  001C8E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9121  001C92  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  9122  001C96  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9123  001C9A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9124  001C9E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9125                           
  9126                           ; BSR set to: 15
  9127                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  9128  001CA2  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  9129  001CA6  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9130  001CA8  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9131  001CAA  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9132  001CAC  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  9133  001CB0  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  9134  001CB4  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  9135  001CB8  6A03               	clrf	??_CANreceiveMessage,c
  9136  001CBA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9137  001CBE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9138  001CC2  5003               	movf	??_CANreceiveMessage,w,c
  9139  001CC4  26DE               	addwf	postinc2,f,c
  9140  001CC6  5004               	movf	??_CANreceiveMessage+1,w,c
  9141  001CC8  22DE               	addwfc	postinc2,f,c
  9142  001CCA  5005               	movf	??_CANreceiveMessage+2,w,c
  9143  001CCC  22DE               	addwfc	postinc2,f,c
  9144  001CCE  5006               	movf	??_CANreceiveMessage+3,w,c
  9145  001CD0  22DE               	addwfc	postinc2,f,c
  9146                           
  9147                           ; BSR set to: 15
  9148                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
  9149  001CD2  010F               	movlb	15	; () banked
  9150  001CD4  A152               	btfss	82,0,b	;volatile
  9151  001CD6  D00C               	goto	i1l3561
  9152                           
  9153                           ; BSR set to: 15
  9154                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
  9155  001CD8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9156  001CDC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9157  001CE0  0E00               	movlw	0
  9158  001CE2  12DE               	iorwf	postinc2,f,c
  9159  001CE4  0E00               	movlw	0
  9160  001CE6  12DE               	iorwf	postinc2,f,c
  9161  001CE8  0E01               	movlw	1
  9162  001CEA  12DE               	iorwf	postinc2,f,c
  9163  001CEC  0E00               	movlw	0
  9164  001CEE  12DE               	iorwf	postinc2,f,c
  9165  001CF0                     i1l3561:
  9166                           
  9167                           ; BSR set to: 15
  9168                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
  9169  001CF0  010F               	movlb	15	; () banked
  9170  001CF2  A352               	btfss	82,1,b	;volatile
  9171  001CF4  D00C               	goto	i1l3565
  9172                           
  9173                           ; BSR set to: 15
  9174                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
  9175  001CF6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9176  001CFA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9177  001CFE  0E00               	movlw	0
  9178  001D00  12DE               	iorwf	postinc2,f,c
  9179  001D02  0E00               	movlw	0
  9180  001D04  12DE               	iorwf	postinc2,f,c
  9181  001D06  0E02               	movlw	2
  9182  001D08  12DE               	iorwf	postinc2,f,c
  9183  001D0A  0E00               	movlw	0
  9184  001D0C  12DE               	iorwf	postinc2,f,c
  9185  001D0E                     i1l3565:
  9186                           
  9187                           ; BSR set to: 15
  9188                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
  9189  001D0E  010F               	movlb	15	; () banked
  9190  001D10  AB52               	btfss	82,5,b	;volatile
  9191  001D12  D00C               	goto	i1l3569
  9192                           
  9193                           ; BSR set to: 15
  9194                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
  9195  001D14  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9196  001D18  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9197  001D1C  0E00               	movlw	0
  9198  001D1E  12DE               	iorwf	postinc2,f,c
  9199  001D20  0E00               	movlw	0
  9200  001D22  12DE               	iorwf	postinc2,f,c
  9201  001D24  0E04               	movlw	4
  9202  001D26  12DE               	iorwf	postinc2,f,c
  9203  001D28  0E00               	movlw	0
  9204  001D2A  12DE               	iorwf	postinc2,f,c
  9205  001D2C                     i1l3569:
  9206                           
  9207                           ; BSR set to: 15
  9208                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
  9209  001D2C  010F               	movlb	15	; () banked
  9210  001D2E  AD52               	btfss	82,6,b	;volatile
  9211  001D30  D00C               	goto	i1l3573
  9212                           
  9213                           ; BSR set to: 15
  9214                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
  9215  001D32  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9216  001D36  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9217  001D3A  0E00               	movlw	0
  9218  001D3C  12DE               	iorwf	postinc2,f,c
  9219  001D3E  0E00               	movlw	0
  9220  001D40  12DE               	iorwf	postinc2,f,c
  9221  001D42  0E08               	movlw	8
  9222  001D44  12DE               	iorwf	postinc2,f,c
  9223  001D46  0E00               	movlw	0
  9224  001D48  12DE               	iorwf	postinc2,f,c
  9225  001D4A                     i1l3573:
  9226                           
  9227                           ; BSR set to: 15
  9228                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
  9229  001D4A  010F               	movlb	15	; () banked
  9230  001D4C  AF52               	btfss	82,7,b	;volatile
  9231  001D4E  D00C               	goto	i1l3577
  9232                           
  9233                           ; BSR set to: 15
  9234                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
  9235  001D50  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9236  001D54  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9237  001D58  0E00               	movlw	0
  9238  001D5A  12DE               	iorwf	postinc2,f,c
  9239  001D5C  0E00               	movlw	0
  9240  001D5E  12DE               	iorwf	postinc2,f,c
  9241  001D60  0E10               	movlw	16
  9242  001D62  12DE               	iorwf	postinc2,f,c
  9243  001D64  0E00               	movlw	0
  9244  001D66  12DE               	iorwf	postinc2,f,c
  9245  001D68                     i1l3577:
  9246                           
  9247                           ; BSR set to: 15
  9248                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  9249  001D68  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  9250  001D6C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9251  001D6E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9252  001D70  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9253  001D72  0E15               	movlw	21
  9254  001D74                     i1u413_25:
  9255  001D74  90D8               	bcf	status,0,c
  9256  001D76  3603               	rlcf	??_CANreceiveMessage,f,c
  9257  001D78  3604               	rlcf	??_CANreceiveMessage+1,f,c
  9258  001D7A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  9259  001D7C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  9260  001D7E  2EE8               	decfsz	wreg,f,c
  9261  001D80  D7F9               	goto	i1u413_25
  9262  001D82  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9263  001D86  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9264  001D8A  5003               	movf	??_CANreceiveMessage,w,c
  9265  001D8C  12DE               	iorwf	postinc2,f,c
  9266  001D8E  5004               	movf	??_CANreceiveMessage+1,w,c
  9267  001D90  12DE               	iorwf	postinc2,f,c
  9268  001D92  5005               	movf	??_CANreceiveMessage+2,w,c
  9269  001D94  12DE               	iorwf	postinc2,f,c
  9270  001D96  5006               	movf	??_CANreceiveMessage+3,w,c
  9271  001D98  12DE               	iorwf	postinc2,f,c
  9272  001D9A                     i1l3579:
  9273                           
  9274                           ; BSR set to: 15
  9275                           ;inc\CANlib.h: 582: }
  9276                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
  9277  001D9A  010F               	movlb	15	; () banked
  9278  001D9C  9F50               	bcf	80,7,b	;volatile
  9279                           
  9280                           ; BSR set to: 15
  9281                           ;inc\CANlib.h: 585: return (error);
  9282                           ;	Return value of _CANreceiveMessage is never used
  9283  001D9E  0012               	return	
  9284  001DA0                     i1l396:
  9285                           
  9286                           ; BSR set to: 15
  9287                           ;inc\CANlib.h: 586: }
  9288                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
  9289  001DA0  AE60               	btfss	3936,7,c	;volatile
  9290  001DA2  0012               	return	
  9291                           
  9292                           ; BSR set to: 15
  9293                           ;inc\CANlib.h: 589: {
  9294                           ;inc\CANlib.h: 590: msg->identifier = 0;
  9295  001DA4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9296  001DA8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9297  001DAC  6ADE               	clrf	postinc2,c
  9298  001DAE  6ADE               	clrf	postinc2,c
  9299  001DB0  6ADE               	clrf	postinc2,c
  9300  001DB2  6ADD               	clrf	postdec2,c
  9301                           
  9302                           ; BSR set to: 15
  9303                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
  9304  001DB4  EE20 F004          	lfsr	2,4
  9305  001DB8  5001               	movf	CANreceiveMessage@msg,w,c
  9306  001DBA  26D9               	addwf	fsr2l,f,c
  9307  001DBC  5002               	movf	CANreceiveMessage@msg+1,w,c
  9308  001DBE  22DA               	addwfc	fsr2h,f,c
  9309  001DC0  CF66 FFDF          	movff	3942,indf2	;volatile
  9310                           
  9311                           ; BSR set to: 15
  9312                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
  9313  001DC4  EE20 F005          	lfsr	2,5
  9314  001DC8  5001               	movf	CANreceiveMessage@msg,w,c
  9315  001DCA  26D9               	addwf	fsr2l,f,c
  9316  001DCC  5002               	movf	CANreceiveMessage@msg+1,w,c
  9317  001DCE  22DA               	addwfc	fsr2h,f,c
  9318  001DD0  CF67 FFDF          	movff	3943,indf2	;volatile
  9319                           
  9320                           ; BSR set to: 15
  9321                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
  9322  001DD4  EE20 F006          	lfsr	2,6
  9323  001DD8  5001               	movf	CANreceiveMessage@msg,w,c
  9324  001DDA  26D9               	addwf	fsr2l,f,c
  9325  001DDC  5002               	movf	CANreceiveMessage@msg+1,w,c
  9326  001DDE  22DA               	addwfc	fsr2h,f,c
  9327  001DE0  CF68 FFDF          	movff	3944,indf2	;volatile
  9328                           
  9329                           ; BSR set to: 15
  9330                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
  9331  001DE4  EE20 F007          	lfsr	2,7
  9332  001DE8  5001               	movf	CANreceiveMessage@msg,w,c
  9333  001DEA  26D9               	addwf	fsr2l,f,c
  9334  001DEC  5002               	movf	CANreceiveMessage@msg+1,w,c
  9335  001DEE  22DA               	addwfc	fsr2h,f,c
  9336  001DF0  CF69 FFDF          	movff	3945,indf2	;volatile
  9337                           
  9338                           ; BSR set to: 15
  9339                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
  9340  001DF4  EE20 F008          	lfsr	2,8
  9341  001DF8  5001               	movf	CANreceiveMessage@msg,w,c
  9342  001DFA  26D9               	addwf	fsr2l,f,c
  9343  001DFC  5002               	movf	CANreceiveMessage@msg+1,w,c
  9344  001DFE  22DA               	addwfc	fsr2h,f,c
  9345  001E00  CF6A FFDF          	movff	3946,indf2	;volatile
  9346                           
  9347                           ; BSR set to: 15
  9348                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
  9349  001E04  EE20 F009          	lfsr	2,9
  9350  001E08  5001               	movf	CANreceiveMessage@msg,w,c
  9351  001E0A  26D9               	addwf	fsr2l,f,c
  9352  001E0C  5002               	movf	CANreceiveMessage@msg+1,w,c
  9353  001E0E  22DA               	addwfc	fsr2h,f,c
  9354  001E10  CF6B FFDF          	movff	3947,indf2	;volatile
  9355                           
  9356                           ; BSR set to: 15
  9357                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
  9358  001E14  EE20 F00A          	lfsr	2,10
  9359  001E18  5001               	movf	CANreceiveMessage@msg,w,c
  9360  001E1A  26D9               	addwf	fsr2l,f,c
  9361  001E1C  5002               	movf	CANreceiveMessage@msg+1,w,c
  9362  001E1E  22DA               	addwfc	fsr2h,f,c
  9363  001E20  CF6C FFDF          	movff	3948,indf2	;volatile
  9364                           
  9365                           ; BSR set to: 15
  9366                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
  9367  001E24  EE20 F00B          	lfsr	2,11
  9368  001E28  5001               	movf	CANreceiveMessage@msg,w,c
  9369  001E2A  26D9               	addwf	fsr2l,f,c
  9370  001E2C  5002               	movf	CANreceiveMessage@msg+1,w,c
  9371  001E2E  22DA               	addwfc	fsr2h,f,c
  9372  001E30  CF6D FFDF          	movff	3949,indf2	;volatile
  9373                           
  9374                           ; BSR set to: 15
  9375                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
  9376  001E34  EE20 F00E          	lfsr	2,14
  9377  001E38  5001               	movf	CANreceiveMessage@msg,w,c
  9378  001E3A  26D9               	addwf	fsr2l,f,c
  9379  001E3C  5002               	movf	CANreceiveMessage@msg+1,w,c
  9380  001E3E  22DA               	addwfc	fsr2h,f,c
  9381  001E40  AC65               	btfss	3941,6,c	;volatile
  9382  001E42  D002               	goto	i1u415_20
  9383  001E44  0E01               	movlw	1
  9384  001E46  D001               	goto	i1u415_26
  9385  001E48                     i1u415_20:
  9386  001E48  0E00               	movlw	0
  9387  001E4A                     i1u415_26:
  9388  001E4A  6EDF               	movwf	indf2,c
  9389                           
  9390                           ; BSR set to: 15
  9391                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
  9392  001E4C  EE20 F00D          	lfsr	2,13
  9393  001E50  5001               	movf	CANreceiveMessage@msg,w,c
  9394  001E52  26D9               	addwf	fsr2l,f,c
  9395  001E54  5002               	movf	CANreceiveMessage@msg+1,w,c
  9396  001E56  22DA               	addwfc	fsr2h,f,c
  9397  001E58  5065               	movf	3941,w,c	;volatile
  9398  001E5A  0B0F               	andlw	15
  9399  001E5C  6EDF               	movwf	indf2,c
  9400                           
  9401                           ; BSR set to: 15
  9402                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
  9403  001E5E  EE20 F00C          	lfsr	2,12
  9404  001E62  5001               	movf	CANreceiveMessage@msg,w,c
  9405  001E64  26D9               	addwf	fsr2l,f,c
  9406  001E66  5002               	movf	CANreceiveMessage@msg+1,w,c
  9407  001E68  22DA               	addwfc	fsr2h,f,c
  9408  001E6A  A662               	btfss	3938,3,c	;volatile
  9409  001E6C  D002               	goto	i1u416_20
  9410  001E6E  0E01               	movlw	1
  9411  001E70  D001               	goto	i1u416_26
  9412  001E72                     i1u416_20:
  9413  001E72  0E00               	movlw	0
  9414  001E74                     i1u416_26:
  9415  001E74  6EDF               	movwf	indf2,c
  9416                           
  9417                           ; BSR set to: 15
  9418                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
  9419  001E76  B662               	btfsc	3938,3,c	;volatile
  9420  001E78  D043               	goto	i1l3615
  9421                           
  9422                           ; BSR set to: 15
  9423                           ;inc\CANlib.h: 607: {
  9424                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  9425  001E7A  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  9426  001E7E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9427  001E80  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9428  001E82  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9429  001E84  0E03               	movlw	3
  9430  001E86                     i1u418_25:
  9431  001E86  90D8               	bcf	status,0,c
  9432  001E88  3603               	rlcf	??_CANreceiveMessage,f,c
  9433  001E8A  3604               	rlcf	??_CANreceiveMessage+1,f,c
  9434  001E8C  3605               	rlcf	??_CANreceiveMessage+2,f,c
  9435  001E8E  3606               	rlcf	??_CANreceiveMessage+3,f,c
  9436  001E90  2EE8               	decfsz	wreg,f,c
  9437  001E92  D7F9               	goto	i1u418_25
  9438  001E94  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9439  001E98  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9440  001E9C  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  9441  001EA0  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9442  001EA4  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9443  001EA8  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9444                           
  9445                           ; BSR set to: 15
  9446                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
  9447  001EAC  3862               	swapf	3938,w,c	;volatile
  9448  001EAE  42E8               	rrncf	wreg,f,c
  9449  001EB0  0B07               	andlw	7
  9450  001EB2  0B07               	andlw	7
  9451  001EB4  6E0C               	movwf	CANreceiveMessage@tamp,c
  9452                           
  9453                           ; BSR set to: 15
  9454                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
  9455  001EB6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9456  001EBA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9457  001EBE  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  9458  001EC2  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  9459  001EC6  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  9460  001ECA  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  9461  001ECE  500C               	movf	CANreceiveMessage@tamp,w,c
  9462  001ED0  2403               	addwf	??_CANreceiveMessage,w,c
  9463  001ED2  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  9464  001ED4  0E00               	movlw	0
  9465  001ED6  2004               	addwfc	??_CANreceiveMessage+1,w,c
  9466  001ED8  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  9467  001EDA  0E00               	movlw	0
  9468  001EDC  2005               	addwfc	??_CANreceiveMessage+2,w,c
  9469  001EDE  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  9470  001EE0  0E00               	movlw	0
  9471  001EE2  2006               	addwfc	??_CANreceiveMessage+3,w,c
  9472  001EE4  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  9473  001EE6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9474  001EEA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9475  001EEE  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  9476  001EF2  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  9477  001EF6  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  9478  001EFA  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  9479                           
  9480                           ;inc\CANlib.h: 611: }
  9481  001EFE  D088               	goto	i1l3641
  9482  001F00                     i1l3615:
  9483                           
  9484                           ; BSR set to: 15
  9485                           ;inc\CANlib.h: 612: else
  9486                           ;inc\CANlib.h: 613: {
  9487                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
  9488  001F00  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  9489  001F04  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9490  001F06  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9491  001F08  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9492  001F0A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9493  001F0E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9494  001F12  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  9495  001F16  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9496  001F1A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9497  001F1E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9498                           
  9499                           ; BSR set to: 15
  9500                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  9501  001F22  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  9502  001F26  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9503  001F28  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9504  001F2A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9505  001F2C  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  9506  001F30  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  9507  001F34  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  9508  001F38  6A03               	clrf	??_CANreceiveMessage,c
  9509  001F3A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9510  001F3E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9511  001F42  5003               	movf	??_CANreceiveMessage,w,c
  9512  001F44  26DE               	addwf	postinc2,f,c
  9513  001F46  5004               	movf	??_CANreceiveMessage+1,w,c
  9514  001F48  22DE               	addwfc	postinc2,f,c
  9515  001F4A  5005               	movf	??_CANreceiveMessage+2,w,c
  9516  001F4C  22DE               	addwfc	postinc2,f,c
  9517  001F4E  5006               	movf	??_CANreceiveMessage+3,w,c
  9518  001F50  22DE               	addwfc	postinc2,f,c
  9519                           
  9520                           ; BSR set to: 15
  9521                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
  9522  001F52  A062               	btfss	3938,0,c	;volatile
  9523  001F54  D00C               	goto	i1l3623
  9524                           
  9525                           ; BSR set to: 15
  9526                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
  9527  001F56  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9528  001F5A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9529  001F5E  0E00               	movlw	0
  9530  001F60  12DE               	iorwf	postinc2,f,c
  9531  001F62  0E00               	movlw	0
  9532  001F64  12DE               	iorwf	postinc2,f,c
  9533  001F66  0E01               	movlw	1
  9534  001F68  12DE               	iorwf	postinc2,f,c
  9535  001F6A  0E00               	movlw	0
  9536  001F6C  12DE               	iorwf	postinc2,f,c
  9537  001F6E                     i1l3623:
  9538                           
  9539                           ; BSR set to: 15
  9540                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
  9541  001F6E  A262               	btfss	3938,1,c	;volatile
  9542  001F70  D00C               	goto	i1l3627
  9543                           
  9544                           ; BSR set to: 15
  9545                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
  9546  001F72  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9547  001F76  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9548  001F7A  0E00               	movlw	0
  9549  001F7C  12DE               	iorwf	postinc2,f,c
  9550  001F7E  0E00               	movlw	0
  9551  001F80  12DE               	iorwf	postinc2,f,c
  9552  001F82  0E02               	movlw	2
  9553  001F84  12DE               	iorwf	postinc2,f,c
  9554  001F86  0E00               	movlw	0
  9555  001F88  12DE               	iorwf	postinc2,f,c
  9556  001F8A                     i1l3627:
  9557                           
  9558                           ; BSR set to: 15
  9559                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
  9560  001F8A  AA62               	btfss	3938,5,c	;volatile
  9561  001F8C  D00C               	goto	i1l3631
  9562                           
  9563                           ; BSR set to: 15
  9564                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
  9565  001F8E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9566  001F92  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9567  001F96  0E00               	movlw	0
  9568  001F98  12DE               	iorwf	postinc2,f,c
  9569  001F9A  0E00               	movlw	0
  9570  001F9C  12DE               	iorwf	postinc2,f,c
  9571  001F9E  0E04               	movlw	4
  9572  001FA0  12DE               	iorwf	postinc2,f,c
  9573  001FA2  0E00               	movlw	0
  9574  001FA4  12DE               	iorwf	postinc2,f,c
  9575  001FA6                     i1l3631:
  9576                           
  9577                           ; BSR set to: 15
  9578                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
  9579  001FA6  AC62               	btfss	3938,6,c	;volatile
  9580  001FA8  D00C               	goto	i1l3635
  9581                           
  9582                           ; BSR set to: 15
  9583                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
  9584  001FAA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9585  001FAE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9586  001FB2  0E00               	movlw	0
  9587  001FB4  12DE               	iorwf	postinc2,f,c
  9588  001FB6  0E00               	movlw	0
  9589  001FB8  12DE               	iorwf	postinc2,f,c
  9590  001FBA  0E08               	movlw	8
  9591  001FBC  12DE               	iorwf	postinc2,f,c
  9592  001FBE  0E00               	movlw	0
  9593  001FC0  12DE               	iorwf	postinc2,f,c
  9594  001FC2                     i1l3635:
  9595                           
  9596                           ; BSR set to: 15
  9597                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
  9598  001FC2  AE62               	btfss	3938,7,c	;volatile
  9599  001FC4  D00C               	goto	i1l3639
  9600                           
  9601                           ; BSR set to: 15
  9602                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
  9603  001FC6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9604  001FCA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9605  001FCE  0E00               	movlw	0
  9606  001FD0  12DE               	iorwf	postinc2,f,c
  9607  001FD2  0E00               	movlw	0
  9608  001FD4  12DE               	iorwf	postinc2,f,c
  9609  001FD6  0E10               	movlw	16
  9610  001FD8  12DE               	iorwf	postinc2,f,c
  9611  001FDA  0E00               	movlw	0
  9612  001FDC  12DE               	iorwf	postinc2,f,c
  9613  001FDE                     i1l3639:
  9614                           
  9615                           ; BSR set to: 15
  9616                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  9617  001FDE  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  9618  001FE2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9619  001FE4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9620  001FE6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9621  001FE8  0E15               	movlw	21
  9622  001FEA                     i1u424_25:
  9623  001FEA  90D8               	bcf	status,0,c
  9624  001FEC  3603               	rlcf	??_CANreceiveMessage,f,c
  9625  001FEE  3604               	rlcf	??_CANreceiveMessage+1,f,c
  9626  001FF0  3605               	rlcf	??_CANreceiveMessage+2,f,c
  9627  001FF2  3606               	rlcf	??_CANreceiveMessage+3,f,c
  9628  001FF4  2EE8               	decfsz	wreg,f,c
  9629  001FF6  D7F9               	goto	i1u424_25
  9630  001FF8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9631  001FFC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9632  002000  5003               	movf	??_CANreceiveMessage,w,c
  9633  002002  12DE               	iorwf	postinc2,f,c
  9634  002004  5004               	movf	??_CANreceiveMessage+1,w,c
  9635  002006  12DE               	iorwf	postinc2,f,c
  9636  002008  5005               	movf	??_CANreceiveMessage+2,w,c
  9637  00200A  12DE               	iorwf	postinc2,f,c
  9638  00200C  5006               	movf	??_CANreceiveMessage+3,w,c
  9639  00200E  12DE               	iorwf	postinc2,f,c
  9640  002010                     i1l3641:
  9641                           
  9642                           ; BSR set to: 15
  9643                           ;inc\CANlib.h: 630: }
  9644                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
  9645  002010  9E60               	bcf	3936,7,c	;volatile
  9646                           
  9647                           ; BSR set to: 15
  9648                           ;inc\CANlib.h: 633: return (error);
  9649                           ;	Return value of _CANreceiveMessage is never used
  9650  002012  0012               	return	
  9651  002014                     __end_of_CANreceiveMessage:
  9652                           	opt stack 0
  9653                           pclatu	equ	0xFFB
  9654                           pclath	equ	0xFFA
  9655                           tblptru	equ	0xFF8
  9656                           tblptrh	equ	0xFF7
  9657                           tblptrl	equ	0xFF6
  9658                           tablat	equ	0xFF5
  9659                           prodh	equ	0xFF4
  9660                           prodl	equ	0xFF3
  9661                           intcon	equ	0xFF2
  9662                           intcon2	equ	0xFF1
  9663                           postinc0	equ	0xFEE
  9664                           fsr0h	equ	0xFEA
  9665                           fsr0l	equ	0xFE9
  9666                           wreg	equ	0xFE8
  9667                           postdec1	equ	0xFE5
  9668                           fsr1h	equ	0xFE2
  9669                           fsr1l	equ	0xFE1
  9670                           bsr	equ	0xFE0
  9671                           indf2	equ	0xFDF
  9672                           postinc2	equ	0xFDE
  9673                           postdec2	equ	0xFDD
  9674                           fsr2h	equ	0xFDA
  9675                           fsr2l	equ	0xFD9
  9676                           status	equ	0xFD8
  9677                           
  9678 ;; *************** function _CANisRxReady *****************
  9679 ;; Defined at:
  9680 ;;		line 1164 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  9681 ;; Parameters:    Size  Location     Type
  9682 ;;		None
  9683 ;; Auto vars:     Size  Location     Type
  9684 ;;		None
  9685 ;; Return value:  Size  Location     Type
  9686 ;;                  1    wreg      unsigned char 
  9687 ;; Registers used:
  9688 ;;		wreg, status,2
  9689 ;; Tracked objects:
  9690 ;;		On entry : 0/0
  9691 ;;		On exit  : 0/0
  9692 ;;		Unchanged: 0/0
  9693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9694 ;;      Params:         0       0       0       0
  9695 ;;      Locals:         1       0       0       0
  9696 ;;      Temps:          0       0       0       0
  9697 ;;      Totals:         1       0       0       0
  9698 ;;Total ram usage:        1 bytes
  9699 ;; Hardware stack levels used:    1
  9700 ;; Hardware stack levels required when called:    2
  9701 ;; This function calls:
  9702 ;;		Nothing
  9703 ;; This function is called by:
  9704 ;;		_ISR_bassa
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           	psect	text26
  9709  002CDA                     __ptext26:
  9710                           	opt stack 0
  9711  002CDA                     _CANisRxReady:
  9712                           	opt stack 24
  9713                           
  9714                           ;inc\CANlib.h: 1166: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  9715                           
  9716                           ; BSR set to: 15
  9717                           ;incstack = 0
  9718  002CDA  0E01               	movlw	1
  9719  002CDC  6E01               	movwf	_CANisRxReady$2825,c
  9720  002CDE  BE60               	btfsc	3936,7,c	;volatile
  9721  002CE0  D005               	goto	i1l547
  9722  002CE2  010F               	movlb	15	; () banked
  9723  002CE4  BF50               	btfsc	80,7,b	;volatile
  9724  002CE6  D002               	goto	i1l547
  9725                           
  9726                           ; BSR set to: 15
  9727  002CE8  0E00               	movlw	0
  9728  002CEA  6E01               	movwf	_CANisRxReady$2825,c
  9729  002CEC                     i1l547:
  9730  002CEC  5001               	movf	_CANisRxReady$2825,w,c
  9731  002CEE  0012               	return	
  9732  002CF0                     __end_of_CANisRxReady:
  9733                           	opt stack 0
  9734                           pclatu	equ	0xFFB
  9735                           pclath	equ	0xFFA
  9736                           tblptru	equ	0xFF8
  9737                           tblptrh	equ	0xFF7
  9738                           tblptrl	equ	0xFF6
  9739                           tablat	equ	0xFF5
  9740                           prodh	equ	0xFF4
  9741                           prodl	equ	0xFF3
  9742                           intcon	equ	0xFF2
  9743                           intcon2	equ	0xFF1
  9744                           postinc0	equ	0xFEE
  9745                           fsr0h	equ	0xFEA
  9746                           fsr0l	equ	0xFE9
  9747                           wreg	equ	0xFE8
  9748                           postdec1	equ	0xFE5
  9749                           fsr1h	equ	0xFE2
  9750                           fsr1l	equ	0xFE1
  9751                           bsr	equ	0xFE0
  9752                           indf2	equ	0xFDF
  9753                           postinc2	equ	0xFDE
  9754                           postdec2	equ	0xFDD
  9755                           fsr2h	equ	0xFDA
  9756                           fsr2l	equ	0xFD9
  9757                           status	equ	0xFD8
  9758                           
  9759 ;; *************** function _ISR_alta *****************
  9760 ;; Defined at:
  9761 ;;		line 65 in file "sterzo.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;		None
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;		None
  9766 ;; Return value:  Size  Location     Type
  9767 ;;		None               void
  9768 ;; Registers used:
  9769 ;;		wreg, status,2, status,0, cstack
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9775 ;;      Params:         0       0       0       0
  9776 ;;      Locals:         0       0       0       0
  9777 ;;      Temps:          0      15       0       0
  9778 ;;      Totals:         0      15       0       0
  9779 ;;Total ram usage:       15 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; Hardware stack levels required when called:    1
  9782 ;; This function calls:
  9783 ;;		_WriteTimer0
  9784 ;; This function is called by:
  9785 ;;		Interrupt level 2
  9786 ;; This function uses a non-reentrant model
  9787 ;;
  9788                           
  9789                           	psect	intcode
  9790  000008                     __pintcode:
  9791                           	opt stack 0
  9792  000008                     _ISR_alta:
  9793                           	opt stack 24
  9794                           
  9795                           ;incstack = 0
  9796  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9797  00000A  CFFA F065          	movff	pclath,??_ISR_alta+1
  9798  00000E  CFFB F066          	movff	pclatu,??_ISR_alta+2
  9799  000012  ED43  F014         	call	int_func,f	;refresh shadow registers
  9800                           pclatu	equ	0xFFB
  9801                           pclath	equ	0xFFA
  9802                           tblptru	equ	0xFF8
  9803                           tblptrh	equ	0xFF7
  9804                           tblptrl	equ	0xFF6
  9805                           tablat	equ	0xFF5
  9806                           prodh	equ	0xFF4
  9807                           prodl	equ	0xFF3
  9808                           intcon	equ	0xFF2
  9809                           intcon2	equ	0xFF1
  9810                           postinc0	equ	0xFEE
  9811                           fsr0h	equ	0xFEA
  9812                           fsr0l	equ	0xFE9
  9813                           wreg	equ	0xFE8
  9814                           postdec1	equ	0xFE5
  9815                           fsr1h	equ	0xFE2
  9816                           fsr1l	equ	0xFE1
  9817                           bsr	equ	0xFE0
  9818                           indf2	equ	0xFDF
  9819                           postinc2	equ	0xFDE
  9820                           postdec2	equ	0xFDD
  9821                           fsr2h	equ	0xFDA
  9822                           fsr2l	equ	0xFD9
  9823                           status	equ	0xFD8
  9824                           
  9825                           	psect	intcode_body
  9826  002886                     __pintcode_body:
  9827                           	opt stack 24
  9828  002886                     int_func:
  9829                           	opt stack 24
  9830  002886  0006               	pop		; remove dummy address from shadow register refresh
  9831  002888  CFE9 F067          	movff	fsr0l,??_ISR_alta+3
  9832  00288C  CFEA F068          	movff	fsr0h,??_ISR_alta+4
  9833  002890  CFE1 F069          	movff	fsr1l,??_ISR_alta+5
  9834  002894  CFE2 F06A          	movff	fsr1h,??_ISR_alta+6
  9835  002898  CFD9 F06B          	movff	fsr2l,??_ISR_alta+7
  9836  00289C  CFDA F06C          	movff	fsr2h,??_ISR_alta+8
  9837  0028A0  CFF3 F06D          	movff	prodl,??_ISR_alta+9
  9838  0028A4  CFF4 F06E          	movff	prodh,??_ISR_alta+10
  9839  0028A8  CFF6 F06F          	movff	tblptrl,??_ISR_alta+11
  9840  0028AC  CFF7 F070          	movff	tblptrh,??_ISR_alta+12
  9841  0028B0  CFF8 F071          	movff	tblptru,??_ISR_alta+13
  9842  0028B4  CFF5 F072          	movff	tablat,??_ISR_alta+14
  9843                           
  9844                           ;sterzo.c: 66: if (noChange == 1) {
  9845  0028B8  A04B               	btfss	_noChange/(0+8),_noChange& (0+7),c
  9846  0028BA  D021               	goto	i2l4169
  9847                           
  9848                           ;sterzo.c: 67: PORTCbits.RC0 = ~PORTCbits.RC0;
  9849  0028BC  A082               	btfss	3970,0,c	;volatile
  9850  0028BE  D002               	goto	i2u500_40
  9851  0028C0  0E01               	movlw	1
  9852  0028C2  D001               	goto	i2u500_46
  9853  0028C4                     i2u500_40:
  9854  0028C4  0E00               	movlw	0
  9855  0028C6                     i2u500_46:
  9856  0028C6  0AFF               	xorlw	255
  9857  0028C8  0100               	movlb	0	; () banked
  9858  0028CA  6F64               	movwf	??_ISR_alta& (0+255),b
  9859  0028CC  5082               	movf	3970,w,c	;volatile
  9860  0028CE  0100               	movlb	0	; () banked
  9861  0028D0  1964               	xorwf	??_ISR_alta& (0+255),w,b
  9862  0028D2  0BFE               	andlw	-2
  9863  0028D4  1964               	xorwf	??_ISR_alta& (0+255),w,b
  9864  0028D6  6E82               	movwf	3970,c	;volatile
  9865                           
  9866                           ; BSR set to: 0
  9867                           ;sterzo.c: 68: T0CONbits.TMR0ON = 0;
  9868  0028D8  9ED5               	bcf	4053,7,c	;volatile
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;sterzo.c: 69: if (PORTCbits.RC0 == 1) {
  9872  0028DA  A082               	btfss	3970,0,c	;volatile
  9873  0028DC  D007               	goto	i2l4163
  9874                           
  9875                           ; BSR set to: 0
  9876                           ;sterzo.c: 70: WriteTimer0(Ton);
  9877  0028DE  C02B  F060         	movff	_Ton,WriteTimer0@timer0
  9878  0028E2  C02C  F061         	movff	_Ton+1,WriteTimer0@timer0+1
  9879  0028E6  EC81  F016         	call	_WriteTimer0	;wreg free
  9880                           
  9881                           ;sterzo.c: 71: T0CONbits.TMR0ON = 1;
  9882  0028EA  8ED5               	bsf	4053,7,c	;volatile
  9883  0028EC                     i2l4163:
  9884                           
  9885                           ;sterzo.c: 72: }
  9886                           ;sterzo.c: 73: if (PORTCbits.RC0 == 0) {
  9887  0028EC  B082               	btfsc	3970,0,c	;volatile
  9888  0028EE  D007               	goto	i2l4169
  9889                           
  9890                           ;sterzo.c: 74: WriteTimer0(Toff);
  9891  0028F0  C029  F060         	movff	_Toff,WriteTimer0@timer0
  9892  0028F4  C02A  F061         	movff	_Toff+1,WriteTimer0@timer0+1
  9893  0028F8  EC81  F016         	call	_WriteTimer0	;wreg free
  9894                           
  9895                           ;sterzo.c: 75: T0CONbits.TMR0ON = 1;
  9896  0028FC  8ED5               	bsf	4053,7,c	;volatile
  9897  0028FE                     i2l4169:
  9898                           
  9899                           ;sterzo.c: 76: }
  9900                           ;sterzo.c: 77: }
  9901                           ;sterzo.c: 78: INTCONbits.TMR0IF = 0;
  9902  0028FE  94F2               	bcf	intcon,2,c	;volatile
  9903  002900  C072  FFF5         	movff	??_ISR_alta+14,tablat
  9904  002904  C071  FFF8         	movff	??_ISR_alta+13,tblptru
  9905  002908  C070  FFF7         	movff	??_ISR_alta+12,tblptrh
  9906  00290C  C06F  FFF6         	movff	??_ISR_alta+11,tblptrl
  9907  002910  C06E  FFF4         	movff	??_ISR_alta+10,prodh
  9908  002914  C06D  FFF3         	movff	??_ISR_alta+9,prodl
  9909  002918  C06C  FFDA         	movff	??_ISR_alta+8,fsr2h
  9910  00291C  C06B  FFD9         	movff	??_ISR_alta+7,fsr2l
  9911  002920  C06A  FFE2         	movff	??_ISR_alta+6,fsr1h
  9912  002924  C069  FFE1         	movff	??_ISR_alta+5,fsr1l
  9913  002928  C068  FFEA         	movff	??_ISR_alta+4,fsr0h
  9914  00292C  C067  FFE9         	movff	??_ISR_alta+3,fsr0l
  9915  002930  C066  FFFB         	movff	??_ISR_alta+2,pclatu
  9916  002934  C065  FFFA         	movff	??_ISR_alta+1,pclath
  9917  002938  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9918  00293A  0011               	retfie		f
  9919  00293C                     __end_of_ISR_alta:
  9920                           	opt stack 0
  9921                           pclatu	equ	0xFFB
  9922                           pclath	equ	0xFFA
  9923                           tblptru	equ	0xFF8
  9924                           tblptrh	equ	0xFF7
  9925                           tblptrl	equ	0xFF6
  9926                           tablat	equ	0xFF5
  9927                           prodh	equ	0xFF4
  9928                           prodl	equ	0xFF3
  9929                           intcon	equ	0xFF2
  9930                           intcon2	equ	0xFF1
  9931                           postinc0	equ	0xFEE
  9932                           fsr0h	equ	0xFEA
  9933                           fsr0l	equ	0xFE9
  9934                           wreg	equ	0xFE8
  9935                           postdec1	equ	0xFE5
  9936                           fsr1h	equ	0xFE2
  9937                           fsr1l	equ	0xFE1
  9938                           bsr	equ	0xFE0
  9939                           indf2	equ	0xFDF
  9940                           postinc2	equ	0xFDE
  9941                           postdec2	equ	0xFDD
  9942                           fsr2h	equ	0xFDA
  9943                           fsr2l	equ	0xFD9
  9944                           status	equ	0xFD8
  9945                           
  9946 ;; *************** function _WriteTimer0 *****************
  9947 ;; Defined at:
  9948 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t0write.c"
  9949 ;; Parameters:    Size  Location     Type
  9950 ;;  timer0          2    0[BANK0 ] unsigned int 
  9951 ;; Auto vars:     Size  Location     Type
  9952 ;;  timer           2    2[BANK0 ] struct Timers
  9953 ;; Return value:  Size  Location     Type
  9954 ;;		None               void
  9955 ;; Registers used:
  9956 ;;		None
  9957 ;; Tracked objects:
  9958 ;;		On entry : 0/0
  9959 ;;		On exit  : 0/0
  9960 ;;		Unchanged: 0/0
  9961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9962 ;;      Params:         0       2       0       0
  9963 ;;      Locals:         0       2       0       0
  9964 ;;      Temps:          0       0       0       0
  9965 ;;      Totals:         0       4       0       0
  9966 ;;Total ram usage:        4 bytes
  9967 ;; Hardware stack levels used:    1
  9968 ;; This function calls:
  9969 ;;		Nothing
  9970 ;; This function is called by:
  9971 ;;		_ISR_alta
  9972 ;; This function uses a non-reentrant model
  9973 ;;
  9974                           
  9975                           	psect	text28
  9976  002D02                     __ptext28:
  9977                           	opt stack 0
  9978  002D02                     _WriteTimer0:
  9979                           	opt stack 24
  9980                           
  9981                           ;incstack = 0
  9982  002D02  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9983  002D06  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9984  002D0A  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9985  002D0E  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9986  002D12  0012               	return		;funcret
  9987  002D14                     __end_of_WriteTimer0:
  9988                           	opt stack 0
  9989  0000                     pclatu	equ	0xFFB
  9990                           pclath	equ	0xFFA
  9991                           tblptru	equ	0xFF8
  9992                           tblptrh	equ	0xFF7
  9993                           tblptrl	equ	0xFF6
  9994                           tablat	equ	0xFF5
  9995                           prodh	equ	0xFF4
  9996                           prodl	equ	0xFF3
  9997                           intcon	equ	0xFF2
  9998                           intcon2	equ	0xFF1
  9999                           postinc0	equ	0xFEE
 10000                           fsr0h	equ	0xFEA
 10001                           fsr0l	equ	0xFE9
 10002                           wreg	equ	0xFE8
 10003                           postdec1	equ	0xFE5
 10004                           fsr1h	equ	0xFE2
 10005                           fsr1l	equ	0xFE1
 10006                           bsr	equ	0xFE0
 10007                           indf2	equ	0xFDF
 10008                           postinc2	equ	0xFDE
 10009                           postdec2	equ	0xFDD
 10010                           fsr2h	equ	0xFDA
 10011                           fsr2l	equ	0xFD9
 10012                           status	equ	0xFD8
 10013                           pclatu	equ	0xFFB
 10014                           pclath	equ	0xFFA
 10015                           tblptru	equ	0xFF8
 10016                           tblptrh	equ	0xFF7
 10017                           tblptrl	equ	0xFF6
 10018                           tablat	equ	0xFF5
 10019                           prodh	equ	0xFF4
 10020                           prodl	equ	0xFF3
 10021                           intcon	equ	0xFF2
 10022                           intcon2	equ	0xFF1
 10023                           postinc0	equ	0xFEE
 10024                           fsr0h	equ	0xFEA
 10025                           fsr0l	equ	0xFE9
 10026                           wreg	equ	0xFE8
 10027                           postdec1	equ	0xFE5
 10028                           fsr1h	equ	0xFE2
 10029                           fsr1l	equ	0xFE1
 10030                           bsr	equ	0xFE0
 10031                           indf2	equ	0xFDF
 10032                           postinc2	equ	0xFDE
 10033                           postdec2	equ	0xFDD
 10034                           fsr2h	equ	0xFDA
 10035                           fsr2l	equ	0xFD9
 10036                           status	equ	0xFD8
 10037                           
 10038                           	psect	param0
 10039  0000                     pclatu	equ	0xFFB
 10040                           pclath	equ	0xFFA
 10041                           tblptru	equ	0xFF8
 10042                           tblptrh	equ	0xFF7
 10043                           tblptrl	equ	0xFF6
 10044                           tablat	equ	0xFF5
 10045                           prodh	equ	0xFF4
 10046                           prodl	equ	0xFF3
 10047                           intcon	equ	0xFF2
 10048                           intcon2	equ	0xFF1
 10049                           postinc0	equ	0xFEE
 10050                           fsr0h	equ	0xFEA
 10051                           fsr0l	equ	0xFE9
 10052                           wreg	equ	0xFE8
 10053                           postdec1	equ	0xFE5
 10054                           fsr1h	equ	0xFE2
 10055                           fsr1l	equ	0xFE1
 10056                           bsr	equ	0xFE0
 10057                           indf2	equ	0xFDF
 10058                           postinc2	equ	0xFDE
 10059                           postdec2	equ	0xFDD
 10060                           fsr2h	equ	0xFDA
 10061                           fsr2l	equ	0xFD9
 10062                           status	equ	0xFD8
 10063                           
 10064                           	psect	temp
 10065  00004C                     btemp:
 10066                           	opt stack 0
 10067  00004C                     	ds	1
 10068  0000                     int$flags	set	btemp
 10069                           pclatu	equ	0xFFB
 10070                           pclath	equ	0xFFA
 10071                           tblptru	equ	0xFF8
 10072                           tblptrh	equ	0xFF7
 10073                           tblptrl	equ	0xFF6
 10074                           tablat	equ	0xFF5
 10075                           prodh	equ	0xFF4
 10076                           prodl	equ	0xFF3
 10077                           intcon	equ	0xFF2
 10078                           intcon2	equ	0xFF1
 10079                           postinc0	equ	0xFEE
 10080                           fsr0h	equ	0xFEA
 10081                           fsr0l	equ	0xFE9
 10082                           wreg	equ	0xFE8
 10083                           postdec1	equ	0xFE5
 10084                           fsr1h	equ	0xFE2
 10085                           fsr1l	equ	0xFE1
 10086                           bsr	equ	0xFE0
 10087                           indf2	equ	0xFDF
 10088                           postinc2	equ	0xFDE
 10089                           postdec2	equ	0xFDD
 10090                           fsr2h	equ	0xFDA
 10091                           fsr2l	equ	0xFD9
 10092                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      75
    BANK0           160     49      64
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->i1_CANsendMessage
    ___lwdiv->i1___wmul

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _delay_ms->___wmul
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _calibrazione->___aldiv
    ___lldiv->___lmul

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->_WriteTimer0

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10342
                                             45 BANK0      4     4      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___lldiv
                             ___lmul
                       _calibrazione
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    2571
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2547
                                             19 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     515
                                             25 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     365
                                             19 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    6216
                      _CANInitialize
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             19 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             33 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             19 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibrazione                                         0     0      0     428
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                             19 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     322
                                             19 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     290
                                             31 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           20    20      0    3903
                                             16 COMRAM    20    20      0
                       _CANisRxReady
                  _CANreceiveMessage
                            ___lwdiv
                   i1_CANsendMessage
                           i1___wmul
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) i1_CANsendMessage                                    16     8      8    2243
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     290
                                              6 COMRAM     7     3      4
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            15    15      0     253
                                              4 BANK0     15    15      0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     253
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _calibrazione
     _BusyADC
     _ConvertADC
     _ReadADC
     ___aldiv
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenADC
   _delay_ms
     ___wmul
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   ___lwdiv
     i1___wmul (ARG)
   i1_CANsendMessage
   i1___wmul

 _ISR_alta (ROOT)
   _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     31      40       4       40.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     24      4B       1       79.8%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8B       9        0.0%
DATA                 0      0      8B      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat May 07 21:38:08 2016

              ??_CANisTXwarningON 0073              __end_of_CANSetFilter 0CEC  
                              _id 0025                                bsr 000FE0  
             ___wmul@multiplicand 0075                       __CFG_BORV$3 000000  
                i1___wmul@product 0005                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                       __CFG_OSC$HS 000000  
                             l500 0B78                               l420 221E  
                             l501 0B84                               l421 2222  
                             l510 0C90                               l430 232A  
                             l422 222E                               l350 0D02  
                             l511 0C94                               l431 2336  
                             l423 2232                               l351 0D06  
                             l512 0CA0                               l504 0C60  
                             l432 233A                               l424 223E  
                             l344 246E                               l360 0EC0  
                             l352 0DFE                               l505 0C64  
                             l433 2346                               l425 2242  
                             l345 2478                               l361 0ECC  
                             l353 0D8E                               l506 0C70  
                             l450 06DA                               l434 234A  
                             l426 224E                               l418 220E  
                             l370 1026                               l354 0D98  
                             l507 0C74                               l451 06E6  
                             l435 2356                               l419 2212  
                             l371 1030                               l355 0DA2  
                             l508 0C80                               l460 07F0  
                             l452 06EA                               l436 235A  
                             l380 120E                               l364 11F4  
                             l356 0DAC                               l509 0C84  
                             l461 07F4                               l453 06F6  
                             l437 2366                               l429 2326  
                             l381 1306                               l365 0F86  
                             l349 0F70                               l462 0800  
                             l454 06FA                               l542 2CBE  
                             l390 13D4                               l382 1296  
                             l374 1140                               l366 0F8A  
                             l471 090C                               l463 0804  
                             l455 0706                               l383 12A0  
                             l375 1144                               l367 1082  
                             l359 0EBC                               l472 0910  
                             l464 0810                               l456 070A  
                             l384 12AA                               l376 1150  
                             l368 1012                               l473 091C  
                             l465 0814                               l457 0716  
                             l449 06D6                               l385 12B4  
                             l369 101C                               l490 0A68  
                             l482 0A28                               l474 0920  
                             l466 0820                               l483 0A2C  
                             l475 092C                               l467 0824  
                             l555 2C36                               l379 120A  
                             l484 0A38                               l476 0930  
                             l468 0830                               l388 13C4  
                             l493 0B44                               l485 0A3C  
                             l477 093C                               l389 13C8  
                             l494 0B48                               l486 0A48  
                             l478 0940                               l662 2A34  
                             l495 0B54                               l487 0A4C  
                             l479 094C                               l496 0B58  
                             l488 0A58                               l497 0B64  
                             l489 0A5C                               l498 0B68  
                             l499 0B74                      __CFG_CPB$OFF 000000  
                    __CFG_CPD$OFF 000000                               _Ton 002B  
            __size_of_WriteTimer0 0012                               _msg 0030  
                             wreg 000FE8                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              l1027 2874  
                            l3001 0834                              l3103 0B88  
                            l3007 087A                              l3041 0996  
                            l3035 0950                              l3109 0BCE  
                            l3303 103A                              l3137 0CA4  
                            l3075 0AB2                              l3323 1134  
                            l3227 0DB6                              l4107 257C  
                            l3501 279C                              l3069 0A6C  
                            l3181 2466                              l3405 13D8  
                            l3253 0ED0                              l3183 247C  
                            l3247 0EB0                              l3505 27B8  
                            l3329 1154                              l3187 2484  
                            l2733 2CCC                              l3189 24C8  
                            l2903 04D0                              l2751 20CC  
                            l3473 26D4                              l2921 058A  
                            l2825 236A                              l3379 12BE  
                            l3485 2720                              l3743 2A4A  
                            l3487 2730                              l3479 26F2  
                            l3727 2AB2                              l2767 2182  
                            l3399 13B8                              l3761 280E  
                            l3497 278A                              l3489 2736  
                            l2849 02A4                              l2793 2252  
                            l3665 2C28                              l3747 2A70  
                            l2939 0644                              l2867 035C  
                            l3739 2C06                              l3757 27F8  
                            l2973 0760                              l2885 0416  
                            l3759 2808                              l2967 071A  
                            l2799 2298                              l3769 2862  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u3300 0A8C  
                            u3220 0970                              u3140 0854  
                            u3060 073A                              u3305 0A80  
                            u3225 0964                              u3145 0848  
                            u3065 072E                              u2530 2048  
                            u2535 203C                              u3600 0E22  
                            u2545 20A8                              u4250 2D28  
                            u2810 02D8                              u2570 20FE  
                            u4260 2D34                              u3460 0CC4  
                            u3380 0BA8                              u2740 238A  
                            u2660 2272                              u5037 2C2A  
                            u3605 0E16                              u2815 02CC  
                            u2575 20F2                              u3615 0E82  
                            u3720 105A                              u3465 0CB8  
                            u3385 0B9C                              u2905 04AC  
                            u2825 0338                              u2745 237E  
                            u2665 2266                              u2585 215E  
                            u2930 0506                              u2850 0392  
                            u2770 0220                              u3730 10A6  
                            u3725 104E                              u3590 0DD6  
                            u2935 04FA                              u2855 0386  
                            u2775 0214                              u3735 109A  
                            u2945 0566                              u2865 03F2  
                            u2785 0280                              u3745 1106  
                            u3930 2D1C                              u2970 05C0  
                            u2890 044C                              u3850 12DE  
                            u3595 0DCA                              u3860 132A  
                            u2975 05B4                              u2895 0440  
                            u3855 12D2                              u2985 0620  
                            u3865 131E                              u3875 138A  
        __end_ofi1_CANsendMessage 1B08               __size_of_CANSetMask 039E  
                            _Toff 0029                              _main 2578  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 004C  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 01E2  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                   __end_of_BusyADC 2D20  
                 __end_of_ReadADC 2D02                  _CANOperationMode 2CC4  
                 __end_of_OpenADC 2A38        __size_of_CANreceiveMessage 050C  
                 __end_of___aldiv 27CA                             ?_main 0001  
                 __end_of___lldiv 2886                             _T0CON 000FD5  
                 __end_of___lwdiv 2BCC                             i1l350 148C  
                           i1l351 1490                             i1l360 1608  
                           i1l352 1560                             i1l361 1612  
                           i1l353 14FE                             i1l370 173E  
                           i1l354 1506                             i1l610 019A  
                           i1l371 1746                             i1l355 150E  
                           i1l380 18F0                             i1l364 18D8  
                           i1l356 1516                             i1l381 19C0  
                           i1l365 16BC                             i1l349 16A8  
                           i1l390 1A72                             i1l382 195E  
                           i1l374 1834                             i1l366 16C0  
                           i1l383 1966                             i1l375 1838  
                           i1l367 1790                             i1l359 1604  
                           i1l384 196E                             i1l376 1842  
                           i1l368 172E                             i1l385 1976  
                           i1l369 1736                             i1l547 2CEC  
                           i1l379 18EC                             i1l396 1DA0  
                           i1l388 1A64                             i1l389 1A68  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
               _CANisRxReady$2825 0001                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000               ___lmul@multiplicand 0077  
              __size_of_ISR_bassa 01CA                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 0085                  __end_of_ISR_alta 293C  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _timer 0099                        _ConvertADC 2D3C  
                  __pbitbssCOMRAM 0258              __end_of_CANisRxReady 2CF0  
                           tablat 000FF5              __end_of_CANisTxReady 2CC4  
                __end_ofi1___wmul 2CA0                             status 000FD8  
             i1___wmul@multiplier 0001                    __CFG_PBADEN$ON 000000  
                 __initialization 2B20                      __end_of_main 26B0  
                          ??_main 008D                     __activetblptr 000002  
               _CANisTxReady$2823 0073                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                          _ADRESL 000FC3             __size_of_calibrazione 0072  
                 __CFG_BBSIZ$1024 000000                            i1l1080 2BC2  
                          i1l4005 1A76                            i1l4101 0196  
                          i1l4081 00F4                            i1l4073 00C2  
                          i1l4083 00FC                            i1l3631 1FA6  
                          i1l3623 1F6E                            i1l3615 1F00  
                          i1l4079 00E6                            i1l4087 012E  
                          i1l3641 2010                            i1l3561 1CF0  
                          i1l3553 1C80                            i1l3635 1FC2  
                          i1l3627 1F8A                            i1l3573 1D4A  
                          i1l3565 1D0E                            i1l3639 1FDE  
                          i1l3903 174E                            i1l3577 1D68  
                          i1l3569 1D2C                            i1l3579 1D9A  
                          i1l3923 182A                            i1l3827 151E  
                          i1l3781 2B98                            i1l3853 1616  
                          i1l3791 2BB8                            i1l3783 2B9C  
                          i1l3847 15FA                            i1l3929 1846  
                          i1l3779 2B90                            i2l4163 28EC  
                          i1l3979 197E                            i1l3999 1A5A  
                          i2l4169 28FE                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F56                            _RXB0D5 000F6B  
                          _RXB1D1 000F57                            _RXB0D6 000F6C  
                          _RXB1D2 000F58                            _RXB0D7 000F6D  
                          _RXB1D3 000F59                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _TXB1D2 000F38  
                          _TXB0D6 000F4C                            _TXB1D3 000F39  
                          _TXB0D7 000F4D                            _TXB2D0 000F26  
                          _TXB1D4 000F3A                            _TXB2D1 000F27  
                          _TXB1D5 000F3B                            _TXB2D2 000F28  
                          _TXB1D6 000F3C                            _TXB2D3 000F29  
                          _TXB1D7 000F3D                            _TXB2D4 000F2A  
                          _TXB2D5 000F2B                            _TXB2D6 000F2C  
                          _TXB2D7 000F2D                CANsendMessage@data 0077  
              CANsendMessage@tamp 007F                         ??_BusyADC 0073  
                       ??_ReadADC 0075                  __end_of_delay_ms 2C44  
           __size_of_CANSetFilter 0B06                         ??_OpenADC 0075  
                  __CFG_XINST$OFF 000000                 __end_of_ISR_bassa 01E2  
                          ___lmul 2A38                         ??___aldiv 007B  
                          ___wmul 2C44                    __CFG_STVREN$ON 000000  
                       ??___lldiv 0087                         ??___lwdiv 000B  
                    ??_CANSetMask 0078                            clear_0 2B26  
                          clear_1 2B34          ?_configurazione_iniziale 0001  
                 __CFG_BOREN$BOHW 000000                      _calibrazione 2AAE  
                    __pdataCOMRAM 0047                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                 _currentSteering 0047                      _CANSetFilter 01E6  
                     ?_ConvertADC 0001                        __accesstop 0060  
         __end_of__initialization 2B6C                __end_of_CANSetMask 23B2  
                   ___rparam_used 000000         __size_of_CANisRXwarningON 000C  
                  __pcstackCOMRAM 0001                      __pidataBANK0 2D40  
                       ?_ISR_alta 0001                         ?i1___wmul 0001  
           CANSetFilter@numBuffer 007C         __size_of_CANisTXwarningON 000C  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 0024  
        __end_of_CANOperationMode 2CDA                        __pbssBANK0 0091  
               ?i1_CANsendMessage 0001                        _data_array 003F  
         __size_of_CANsendMessage 078C                ??i1_CANsendMessage 0009  
                         ?___lmul 0073                           ?___wmul 0073  
                      ??_ISR_alta 0064                __size_of_send_data 003E  
                WriteTimer0@timer 0062                     ??_WriteTimer0 0062  
                  ___lmul@product 007B                      _CANisRxReady 2CDA  
             __size_of_ConvertADC 0004                           _CANSTAT 000F6E  
                    _CANisTxReady 2CA0                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
                      ??i1___wmul 0005            __size_of_CANInitialize 01C6  
                       ?_delay_ms 0079                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 007A                           _BusyADC 2D14  
                         _ReadADC 2CF0                         _ADCResult 0091  
                         _OpenADC 29BC                           __Hparam 0000  
                         __Lparam 0000                  delay_ms@value_ms 0079  
                         ___aldiv 26B0                   __size_of___lmul 0076  
                         ___lldiv 27CA                   __size_of___wmul 0036  
                         ___lwdiv 2B7A              CANInitialize@propSeg 008A  
                         __pcinit 2B20                           __ramtop 0300  
                         __ptext0 2578                           __ptext1 2BCC  
                         __ptext2 0CEC                           __ptext3 2CA0  
                         __ptext4 2C0A                           __ptext5 2C44  
                         __ptext6 293C                           __ptext7 29BC  
                         __ptext8 23B2                           __ptext9 2014  
                       _T0CONbits 000FD5                        _duty_cycle 0095  
                ___aldiv@dividend 0073               __end_of_WriteTimer0 2D14  
                      ??_delay_ms 007B            CANreceiveMessage@error 000B  
                  OpenADC@config2 0073                    __pintcode_body 2886  
            end_of_initialization 2B6C                 __end_of_send_data 2C0A  
                   __Lmediumconst 0000                           int_func 2886  
                _CANisRXwarningON 2D2C                     _CANInitialize 23B2  
                 ___lldiv@divisor 0083                   ___lldiv@counter 008B  
                ___aldiv@quotient 007D                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE             i1___wmul@multiplicand 0003  
                       _ISR_bassa 0018                         _PORTAbits 000F80  
                  CANSetMask@mask 0073                         _PORTCbits 000F82  
                  CANSetMask@tamp 007D                    CANSetMask@type 0077  
                _CANisTXwarningON 2D20                      ??_ConvertADC 0073  
__size_of_configurazione_iniziale 0080           _clock_counter_reference 009D  
                  _CANsendMessage 0CEC                  CANInitialize@BRP 0084  
                CANInitialize@SJW 0083                    ?_CANInitialize 0081  
                  __end_of___lmul 2AAE                        ?_ISR_bassa 0001  
                  __end_of___wmul 2C7A                     __pidataCOMRAM 2D38  
               __size_of_ISR_alta 2934                       _WriteTimer0 2D02  
              __end_of_ConvertADC 2D40               start_initialization 2B20  
               __size_ofi1___wmul 0026               CANSetMask@numBuffer 007C  
          __end_of_CANsendMessage 1478                 ?_CANOperationMode 0001  
              ??_CANOperationMode 0073        CANInitialize@FilterConfig1 008B  
      CANInitialize@FilterConfig2 008C                          ??___lmul 007B  
                        ??___wmul 0077                       __pdataBANK0 009F  
                     _calibration 002D                  __CFG_LPT1OSC$OFF 000000  
       __size_ofi1_CANsendMessage 0690            CANInitialize@phaseSeg1 0081  
          CANInitialize@phaseSeg2 0082                       __pbssCOMRAM 0025  
                   __pcstackBANK0 0060                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72                 __size_of_delay_ms 003A  
                 ?_CANsendMessage 0073                   ??_CANInitialize 0086  
                        ?_BusyADC 0001                          ?_ReadADC 0073  
              CANSetFilter@filter 0073                 OpenADC@portconfig 0074  
                        ?_OpenADC 0073                    _theorySteering 002F  
                ___lwdiv@dividend 0007                         __pintcode 0008  
                        ?___aldiv 0073                          ?___lldiv 007F  
                        ?___lwdiv 0007                       ??_ISR_bassa 0011  
                     __pintcodelo 0018                 WriteTimer0@timer0 0060  
        __end_of_CANisRXwarningON 2D38                       _COMSTATbits 000F74  
                ___lwdiv@quotient 000B           _configurazione_iniziale 293C  
                 ___aldiv@divisor 0077             CANreceiveMessage@tamp 000C  
                 ___aldiv@counter 007B                    ___wmul@product 0077  
                   OpenADC@config 0077      _delay_quartz_frequency_value 009F  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                       _send_data 2BCC                          _PIE3bits 000FA3  
        __end_of_CANisTXwarningON 2D2C                          i1u404_20 1BC0  
                        i1u404_26 1BC2                          i1u405_20 1BEE  
                        i1u413_25 1D74                          i1u405_26 1BF0  
                        i1u415_20 1E48                          i1u407_25 1C04  
                        i1u415_26 1E4A                          i1u416_20 1E72  
                        i1u424_25 1FEA                          i1u416_26 1E74  
                        i1u450_20 1582                          i1u418_25 1E86  
                        i1u450_25 1578                          i1u451_25 15CE  
                        i1u462_20 176C                          i1u462_25 1762  
                        i1u463_20 17B2                          i1u463_25 17A8  
                        i1u464_25 17FE                          i1u449_20 153C  
                        i1u449_25 1532                          i1u490_20 00DE  
                        i1u475_20 199C                          i1u475_25 1992  
                        i1u476_20 19E2                          i2u500_40 28C4  
                        i1u476_25 19D8                          i2u500_46 28C6  
                        i1u477_25 1A2E                          i1u494_20 014A  
                        i1u494_26 014C                          i1u487_20 009A  
                        i1u488_25 009C                          _PIR1bits 000F9E  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _ISR_alta 0008  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                 ___wmul@multiplier 0073  
                        i1___wmul 2C7A                     ?_calibrazione 0001  
                   ?_CANSetFilter 0073                 ___lmul@multiplier 0073  
                     _INTCON2bits 000FF1                         copy_data0 2B60  
                      _CANCONbits 000F6F                          __Hparam0 0000  
                      ?_send_data 0001                  __size_of_BusyADC 000C  
                __size_of_ReadADC 0012                          __Lparam0 0000  
                    _RXB0SIDLbits 000F62                  __size_of_OpenADC 007C  
                    _RXB1SIDLbits 000F52                  __size_of___aldiv 011A  
                      _CANSetMask 2014                  __size_of___lldiv 00BC  
                i1_CANsendMessage 1478                  __size_of___lwdiv 0052  
                    ?_WriteTimer0 0060                    ??_calibrazione 0081  
       ??_configurazione_iniziale 008D                      _RXF0SIDLbits 000F01  
                        _delay_ms 2C0A                   ___lwdiv@divisor 0009  
                    _RXF1SIDLbits 000F05                   ___lwdiv@counter 000D  
           i1CANsendMessage@flags 0008                    ??_CANSetFilter 0078  
                        __ptext10 01E6                          __ptext11 2CC4  
                        __ptext20 2D2C                          __ptext12 2AAE  
                        __ptext13 26B0                          __ptext22 2C7A  
                        __ptext14 2CF0                          __ptext23 1478  
                        __ptext15 2D3C                          __ptext24 2B7A  
                        __ptext16 2D14                          __ptext25 1B08  
                        __ptext17 2A38                          __ptext26 2CDA  
                        __ptext18 27CA                          __ptext19 2D20  
                        __ptext28 2D02                      _RXF2SIDLbits 000F09  
                        _noChange 0258                      _RXF3SIDLbits 000F0D  
                    _RXF4SIDLbits 000F11                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 0079                      _remote_frame 0259  
                   __size_of_main 0138                          _limiteDx 0049  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 004C         __size_of_CANOperationMode 0016  
                   ?_CANisRxReady 0001                     ?_CANisTxReady 0001  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 1B08  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 007B        i1CANsendMessage@dataLength 0007  
              ?_CANreceiveMessage 0001          CANsendMessage@identifier 0073  
                        intlevel1 0000                          intlevel2 0000  
                CANSetFilter@tamp 007D                  CANSetFilter@type 0077  
             ??_CANreceiveMessage 0003              i1CANsendMessage@data 0005  
                ___lldiv@dividend 007F              i1CANsendMessage@tamp 000D  
                     _TXB0DLCbits 000F45                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       ??_send_data 0083  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 29BC  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
            CANOperationMode@mode 0073                    ??_CANisRxReady 0001  
                     ?_CANSetMask 0073                    ??_CANisTxReady 0073  
       __end_of_CANreceiveMessage 2014        i1CANsendMessage@identifier 0001  
                ___lldiv@quotient 0087                 ?_CANisRXwarningON 0001  
                    ___aldiv@sign 007C                ??_CANisRXwarningON 0073  
            __end_of_calibrazione 2B20             __end_of_CANInitialize 2578  
               ?_CANisTXwarningON 0001  
