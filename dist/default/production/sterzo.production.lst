

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Jun 07 19:25:17 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	param0,global,class=BANK0,space=1,delta=1
    44  0000                     
    45                           	psect	idataCOMRAM
    46  0025C4                     __pidataCOMRAM:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _currentSteering
    50  0025C4  005A               	dw	90
    51                           
    52                           ;initializer for _limiteDx
    53  0025C6  006E               	dw	110
    54                           
    55                           	psect	idataBANK0
    56  0025CC                     __pidataBANK0:
    57                           	opt stack 0
    58                           
    59                           ;initializer for _delay_quartz_frequency_value
    60  0025CC  10                 	db	16
    61  0000                     _RXB1CON	set	3920
    62  0000                     _RXB1CONbits	set	3920
    63  0000                     _RXB1D0	set	3926
    64  0000                     _RXB1D1	set	3927
    65  0000                     _RXB1D2	set	3928
    66  0000                     _RXB1D3	set	3929
    67  0000                     _RXB1D4	set	3930
    68  0000                     _RXB1D5	set	3931
    69  0000                     _RXB1D6	set	3932
    70  0000                     _RXB1D7	set	3933
    71  0000                     _RXB1DLC	set	3925
    72  0000                     _RXB1DLCbits	set	3925
    73  0000                     _RXB1EIDH	set	3923
    74  0000                     _RXB1EIDL	set	3924
    75  0000                     _RXB1SIDH	set	3921
    76  0000                     _RXB1SIDL	set	3922
    77  0000                     _RXB1SIDLbits	set	3922
    78  0000                     _RXF0EIDH	set	3842
    79  0000                     _RXF0EIDL	set	3843
    80  0000                     _RXF0SIDH	set	3840
    81  0000                     _RXF0SIDL	set	3841
    82  0000                     _RXF0SIDLbits	set	3841
    83  0000                     _RXF1EIDH	set	3846
    84  0000                     _RXF1EIDL	set	3847
    85  0000                     _RXF1SIDH	set	3844
    86  0000                     _RXF1SIDL	set	3845
    87  0000                     _RXF1SIDLbits	set	3845
    88  0000                     _RXF2EIDH	set	3850
    89  0000                     _RXF2EIDL	set	3851
    90  0000                     _RXF2SIDH	set	3848
    91  0000                     _RXF2SIDL	set	3849
    92  0000                     _RXF2SIDLbits	set	3849
    93  0000                     _RXF3EIDH	set	3854
    94  0000                     _RXF3EIDL	set	3855
    95  0000                     _RXF3SIDH	set	3852
    96  0000                     _RXF3SIDL	set	3853
    97  0000                     _RXF3SIDLbits	set	3853
    98  0000                     _RXF4EIDH	set	3858
    99  0000                     _RXF4EIDL	set	3859
   100  0000                     _RXF4SIDH	set	3856
   101  0000                     _RXF4SIDL	set	3857
   102  0000                     _RXF4SIDLbits	set	3857
   103  0000                     _RXF5EIDH	set	3862
   104  0000                     _RXF5EIDL	set	3863
   105  0000                     _RXF5SIDH	set	3860
   106  0000                     _RXF5SIDL	set	3861
   107  0000                     _RXF5SIDLbits	set	3861
   108  0000                     _RXM0EIDH	set	3866
   109  0000                     _RXM0EIDL	set	3867
   110  0000                     _RXM0SIDH	set	3864
   111  0000                     _RXM0SIDL	set	3865
   112  0000                     _RXM0SIDLbits	set	3865
   113  0000                     _RXM1EIDH	set	3870
   114  0000                     _RXM1EIDL	set	3871
   115  0000                     _RXM1SIDH	set	3868
   116  0000                     _RXM1SIDL	set	3869
   117  0000                     _RXM1SIDLbits	set	3869
   118  0000                     _TXB0CONbits	set	3904
   119  0000                     _TXB0D0	set	3910
   120  0000                     _TXB0D1	set	3911
   121  0000                     _TXB0D2	set	3912
   122  0000                     _TXB0D3	set	3913
   123  0000                     _TXB0D4	set	3914
   124  0000                     _TXB0D5	set	3915
   125  0000                     _TXB0D6	set	3916
   126  0000                     _TXB0D7	set	3917
   127  0000                     _TXB0DLC	set	3909
   128  0000                     _TXB0DLCbits	set	3909
   129  0000                     _TXB0EIDH	set	3907
   130  0000                     _TXB0EIDL	set	3908
   131  0000                     _TXB0SIDH	set	3905
   132  0000                     _TXB0SIDL	set	3906
   133  0000                     _TXB0SIDLbits	set	3906
   134  0000                     _TXB1CONbits	set	3888
   135  0000                     _TXB1D0	set	3894
   136  0000                     _TXB1D1	set	3895
   137  0000                     _TXB1D2	set	3896
   138  0000                     _TXB1D3	set	3897
   139  0000                     _TXB1D4	set	3898
   140  0000                     _TXB1D5	set	3899
   141  0000                     _TXB1D6	set	3900
   142  0000                     _TXB1D7	set	3901
   143  0000                     _TXB1DLC	set	3893
   144  0000                     _TXB1DLCbits	set	3893
   145  0000                     _TXB1EIDH	set	3891
   146  0000                     _TXB1EIDL	set	3892
   147  0000                     _TXB1SIDH	set	3889
   148  0000                     _TXB1SIDL	set	3890
   149  0000                     _TXB1SIDLbits	set	3890
   150  0000                     _TXB2CONbits	set	3872
   151  0000                     _TXB2D0	set	3878
   152  0000                     _TXB2D1	set	3879
   153  0000                     _TXB2D2	set	3880
   154  0000                     _TXB2D3	set	3881
   155  0000                     _TXB2D4	set	3882
   156  0000                     _TXB2D5	set	3883
   157  0000                     _TXB2D6	set	3884
   158  0000                     _TXB2D7	set	3885
   159  0000                     _TXB2DLC	set	3877
   160  0000                     _TXB2DLCbits	set	3877
   161  0000                     _TXB2EIDH	set	3875
   162  0000                     _TXB2EIDL	set	3876
   163  0000                     _TXB2SIDH	set	3873
   164  0000                     _TXB2SIDL	set	3874
   165  0000                     _TXB2SIDLbits	set	3874
   166  0000                     _ADCON0	set	4034
   167  0000                     _ADCON0bits	set	4034
   168  0000                     _ADCON1	set	4033
   169  0000                     _ADCON2	set	4032
   170  0000                     _ADRESH	set	4036
   171  0000                     _ADRESL	set	4035
   172  0000                     _BRGCON1	set	3952
   173  0000                     _BRGCON2	set	3953
   174  0000                     _BRGCON2bits	set	3953
   175  0000                     _BRGCON3	set	3954
   176  0000                     _BRGCON3bits	set	3954
   177  0000                     _CANCON	set	3951
   178  0000                     _CANCONbits	set	3951
   179  0000                     _CANSTAT	set	3950
   180  0000                     _COMSTATbits	set	3956
   181  0000                     _INTCON2bits	set	4081
   182  0000                     _INTCONbits	set	4082
   183  0000                     _IPR3bits	set	4005
   184  0000                     _LATA	set	3977
   185  0000                     _LATB	set	3978
   186  0000                     _LATC	set	3979
   187  0000                     _LATD	set	3980
   188  0000                     _LATE	set	3981
   189  0000                     _PIE1bits	set	3997
   190  0000                     _PIE3bits	set	4003
   191  0000                     _PIR1bits	set	3998
   192  0000                     _PIR3bits	set	4004
   193  0000                     _PORTAbits	set	3968
   194  0000                     _PORTCbits	set	3970
   195  0000                     _RCONbits	set	4048
   196  0000                     _RXB0CON	set	3936
   197  0000                     _RXB0CONbits	set	3936
   198  0000                     _RXB0D0	set	3942
   199  0000                     _RXB0D1	set	3943
   200  0000                     _RXB0D2	set	3944
   201  0000                     _RXB0D3	set	3945
   202  0000                     _RXB0D4	set	3946
   203  0000                     _RXB0D5	set	3947
   204  0000                     _RXB0D6	set	3948
   205  0000                     _RXB0D7	set	3949
   206  0000                     _RXB0DLC	set	3941
   207  0000                     _RXB0DLCbits	set	3941
   208  0000                     _RXB0EIDH	set	3939
   209  0000                     _RXB0EIDL	set	3940
   210  0000                     _RXB0SIDH	set	3937
   211  0000                     _RXB0SIDL	set	3938
   212  0000                     _RXB0SIDLbits	set	3938
   213  0000                     _RXERRCNT	set	3957
   214  0000                     _T0CON	set	4053
   215  0000                     _T0CONbits	set	4053
   216  0000                     _TMR0H	set	4055
   217  0000                     _TMR0L	set	4054
   218  0000                     _TRISA	set	3986
   219  0000                     _TRISB	set	3987
   220  0000                     _TRISC	set	3988
   221  0000                     _TRISD	set	3989
   222  0000                     _TRISE	set	3990
   223  0000                     _TXERRCNT	set	3958
   224                           
   225                           ; #config settings
   226  0000                     
   227                           	psect	cinit
   228  002454                     __pcinit:
   229                           	opt stack 0
   230  002454                     start_initialization:
   231                           	opt stack 0
   232  002454                     __initialization:
   233                           	opt stack 0
   234                           
   235                           ; Clear objects allocated to BANK0 (14 bytes)
   236  002454  EE00  F090         	lfsr	0,__pbssBANK0
   237  002458  0E0E               	movlw	14
   238  00245A                     clear_0:
   239  00245A  6AEE               	clrf	postinc0,c
   240  00245C  06E8               	decf	wreg,f,c
   241  00245E  E1FD               	bnz	clear_0
   242                           
   243                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   244  002460  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   245                           
   246                           ; Clear objects allocated to COMRAM (34 bytes)
   247  002462  EE00  F025         	lfsr	0,__pbssCOMRAM
   248  002466  0E22               	movlw	34
   249  002468                     clear_1:
   250  002468  6AEE               	clrf	postinc0,c
   251  00246A  06E8               	decf	wreg,f,c
   252  00246C  E1FD               	bnz	clear_1
   253                           
   254                           ; Initialize objects allocated to BANK0 (1 bytes)
   255                           ; load TBLPTR registers with __pidataBANK0
   256  00246E  0ECC               	movlw	low __pidataBANK0
   257  002470  6EF6               	movwf	tblptrl,c
   258  002472  0E25               	movlw	high __pidataBANK0
   259  002474  6EF7               	movwf	tblptrh,c
   260  002476  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   261  002478  6EF8               	movwf	tblptru,c
   262  00247A  0009               	tblrd		*+	;fetch initializer
   263  00247C  CFF5 F09E          	movff	tablat,__pdataBANK0
   264                           
   265                           ; Initialize objects allocated to COMRAM (4 bytes)
   266                           ; load TBLPTR registers with __pidataCOMRAM
   267  002480  0EC4               	movlw	low __pidataCOMRAM
   268  002482  6EF6               	movwf	tblptrl,c
   269  002484  0E25               	movlw	high __pidataCOMRAM
   270  002486  6EF7               	movwf	tblptrh,c
   271  002488  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   272  00248A  6EF8               	movwf	tblptru,c
   273  00248C  EE00  F047         	lfsr	0,__pdataCOMRAM
   274  002490  EE10 F004          	lfsr	1,4
   275  002494                     copy_data0:
   276  002494  0009               	tblrd		*+
   277  002496  CFF5 FFEE          	movff	tablat,postinc0
   278  00249A  50E5               	movf	postdec1,w,c
   279  00249C  50E1               	movf	fsr1l,w,c
   280  00249E  E1FA               	bnz	copy_data0
   281  0024A0                     end_of_initialization:
   282                           	opt stack 0
   283  0024A0                     __end_of__initialization:
   284                           	opt stack 0
   285  0024A0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   286  0024A2  6EF8               	movwf	tblptru,c
   287  0024A4  0100               	movlb	0
   288  0024A6  EF16  F00F         	goto	_main	;jump to C main() function
   289                           tblptru	equ	0xFF8
   290                           tblptrh	equ	0xFF7
   291                           tblptrl	equ	0xFF6
   292                           tablat	equ	0xFF5
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           postdec1	equ	0xFE5
   296                           fsr1l	equ	0xFE1
   297                           
   298                           	psect	bitbssCOMRAM
   299  000258                     __pbitbssCOMRAM:
   300                           	opt stack 0
   301  000258                     _noChange:
   302                           	opt stack 0
   303  000258                     	ds	1
   304  000259                     _remote_frame:
   305                           	opt stack 0
   306  000259                     	ds	1
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	bssCOMRAM
   317  000025                     __pbssCOMRAM:
   318                           	opt stack 0
   319  000025                     _id:
   320                           	opt stack 0
   321  000025                     	ds	4
   322  000029                     _Toff:
   323                           	opt stack 0
   324  000029                     	ds	2
   325  00002B                     _Ton:
   326                           	opt stack 0
   327  00002B                     	ds	2
   328  00002D                     _calibration:
   329                           	opt stack 0
   330  00002D                     	ds	2
   331  00002F                     _theorySteering:
   332                           	opt stack 0
   333  00002F                     	ds	1
   334  000030                     _msg:
   335                           	opt stack 0
   336  000030                     	ds	15
   337  00003F                     _data_array:
   338                           	opt stack 0
   339  00003F                     	ds	8
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           tblptrl	equ	0xFF6
   343                           tablat	equ	0xFF5
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           postdec1	equ	0xFE5
   347                           fsr1l	equ	0xFE1
   348                           
   349                           	psect	dataCOMRAM
   350  000047                     __pdataCOMRAM:
   351                           	opt stack 0
   352  000047                     _currentSteering:
   353                           	opt stack 0
   354  000047                     	ds	2
   355  000049                     _limiteDx:
   356                           	opt stack 0
   357  000049                     	ds	2
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           postdec1	equ	0xFE5
   365                           fsr1l	equ	0xFE1
   366                           
   367                           	psect	bssBANK0
   368  000090                     __pbssBANK0:
   369                           	opt stack 0
   370  000090                     _ADCResult:
   371                           	opt stack 0
   372  000090                     	ds	4
   373  000094                     _duty_cycle:
   374                           	opt stack 0
   375  000094                     	ds	4
   376  000098                     _timer:
   377                           	opt stack 0
   378  000098                     	ds	4
   379  00009C                     _clock_counter_reference:
   380                           	opt stack 0
   381  00009C                     	ds	2
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           tblptrl	equ	0xFF6
   385                           tablat	equ	0xFF5
   386                           postinc0	equ	0xFEE
   387                           wreg	equ	0xFE8
   388                           postdec1	equ	0xFE5
   389                           fsr1l	equ	0xFE1
   390                           
   391                           	psect	dataBANK0
   392  00009E                     __pdataBANK0:
   393                           	opt stack 0
   394  00009E                     _delay_quartz_frequency_value:
   395                           	opt stack 0
   396  00009E                     	ds	1
   397                           tblptru	equ	0xFF8
   398                           tblptrh	equ	0xFF7
   399                           tblptrl	equ	0xFF6
   400                           tablat	equ	0xFF5
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           postdec1	equ	0xFE5
   404                           fsr1l	equ	0xFE1
   405                           
   406                           	psect	cstackBANK0
   407  000060                     __pcstackBANK0:
   408                           	opt stack 0
   409  000060                     WriteTimer0@timer0:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0x0
   413  000060                     	ds	2
   414  000062                     WriteTimer0@timer:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x2
   418  000062                     	ds	2
   419  000064                     ??_ISR_alta:
   420                           
   421                           ; 0 bytes @ 0x4
   422  000064                     	ds	14
   423  000072                     ?_ReadADC:
   424                           	opt stack 0
   425  000072                     ?___wmul:
   426                           	opt stack 0
   427  000072                     ?___lmul:
   428                           	opt stack 0
   429  000072                     ?___aldiv:
   430                           	opt stack 0
   431  000072                     CANOperationMode@mode:
   432                           	opt stack 0
   433  000072                     OpenADC@config2:
   434                           	opt stack 0
   435  000072                     ___wmul@multiplier:
   436                           	opt stack 0
   437  000072                     CANSetMask@mask:
   438                           	opt stack 0
   439  000072                     CANSetFilter@filter:
   440                           	opt stack 0
   441  000072                     ___lmul@multiplier:
   442                           	opt stack 0
   443  000072                     ___aldiv@dividend:
   444                           	opt stack 0
   445                           
   446                           ; 4 bytes @ 0x12
   447  000072                     	ds	1
   448  000073                     OpenADC@portconfig:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0x13
   452  000073                     	ds	1
   453  000074                     ??_ReadADC:
   454  000074                     ??_OpenADC:
   455  000074                     ___wmul@multiplicand:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x14
   459  000074                     	ds	2
   460  000076                     CANSetMask@type:
   461                           	opt stack 0
   462  000076                     CANSetFilter@type:
   463                           	opt stack 0
   464  000076                     OpenADC@config:
   465                           	opt stack 0
   466  000076                     ___wmul@product:
   467                           	opt stack 0
   468  000076                     ___lmul@multiplicand:
   469                           	opt stack 0
   470  000076                     ___aldiv@divisor:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x16
   474  000076                     	ds	1
   475  000077                     ??_CANSetMask:
   476  000077                     ??_CANSetFilter:
   477                           
   478                           ; 0 bytes @ 0x17
   479  000077                     	ds	1
   480  000078                     delay_ms@value_ms:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x18
   484  000078                     	ds	2
   485  00007A                     ___aldiv@counter:
   486                           	opt stack 0
   487  00007A                     ___lmul@product:
   488                           	opt stack 0
   489                           
   490                           ; 4 bytes @ 0x1A
   491  00007A                     	ds	1
   492  00007B                     CANSetMask@numBuffer:
   493                           	opt stack 0
   494  00007B                     CANSetFilter@numBuffer:
   495                           	opt stack 0
   496  00007B                     ___aldiv@sign:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x1B
   500  00007B                     	ds	1
   501  00007C                     CANSetMask@tamp:
   502                           	opt stack 0
   503  00007C                     CANSetFilter@tamp:
   504                           	opt stack 0
   505  00007C                     ___aldiv@quotient:
   506                           	opt stack 0
   507                           
   508                           ; 4 bytes @ 0x1C
   509  00007C                     	ds	2
   510  00007E                     ?___lldiv:
   511                           	opt stack 0
   512  00007E                     ___lldiv@dividend:
   513                           	opt stack 0
   514                           
   515                           ; 4 bytes @ 0x1E
   516  00007E                     	ds	2
   517  000080                     CANInitialize@phaseSeg1:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x20
   521  000080                     	ds	1
   522  000081                     CANInitialize@phaseSeg2:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x21
   526  000081                     	ds	1
   527  000082                     CANInitialize@SJW:
   528                           	opt stack 0
   529  000082                     ___lldiv@divisor:
   530                           	opt stack 0
   531                           
   532                           ; 4 bytes @ 0x22
   533  000082                     	ds	1
   534  000083                     CANInitialize@BRP:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x23
   538  000083                     	ds	1
   539  000084                     CANInitialize@flags:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x24
   543  000084                     	ds	1
   544  000085                     ??_CANInitialize:
   545                           
   546                           ; 0 bytes @ 0x25
   547  000085                     	ds	1
   548  000086                     ___lldiv@quotient:
   549                           	opt stack 0
   550                           
   551                           ; 4 bytes @ 0x26
   552  000086                     	ds	3
   553  000089                     CANInitialize@propSeg:
   554                           	opt stack 0
   555                           
   556                           ; 1 bytes @ 0x29
   557  000089                     	ds	1
   558  00008A                     CANInitialize@FilterConfig1:
   559                           	opt stack 0
   560  00008A                     ___lldiv@counter:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x2A
   564  00008A                     	ds	1
   565  00008B                     CANInitialize@FilterConfig2:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x2B
   569  00008B                     	ds	1
   570  00008C                     ??_main:
   571                           
   572                           ; 0 bytes @ 0x2C
   573  00008C                     	ds	4
   574                           tblptru	equ	0xFF8
   575                           tblptrh	equ	0xFF7
   576                           tblptrl	equ	0xFF6
   577                           tablat	equ	0xFF5
   578                           postinc0	equ	0xFEE
   579                           wreg	equ	0xFE8
   580                           postdec1	equ	0xFE5
   581                           fsr1l	equ	0xFE1
   582                           
   583                           	psect	cstackCOMRAM
   584  000001                     __pcstackCOMRAM:
   585                           	opt stack 0
   586  000001                     ?i1___wmul:
   587                           	opt stack 0
   588  000001                     _CANisRxReady$2821:
   589                           	opt stack 0
   590  000001                     CANreceiveMessage@msg:
   591                           	opt stack 0
   592  000001                     i1___wmul@multiplier:
   593                           	opt stack 0
   594  000001                     CANsendMessage@identifier:
   595                           	opt stack 0
   596                           
   597                           ; 4 bytes @ 0x0
   598  000001                     	ds	2
   599  000003                     ??_CANreceiveMessage:
   600  000003                     i1___wmul@multiplicand:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x2
   604  000003                     	ds	2
   605  000005                     CANsendMessage@data:
   606                           	opt stack 0
   607  000005                     i1___wmul@product:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x4
   611  000005                     	ds	2
   612  000007                     ?___lwdiv:
   613                           	opt stack 0
   614  000007                     CANsendMessage@dataLength:
   615                           	opt stack 0
   616  000007                     ___lwdiv@dividend:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x6
   620  000007                     	ds	1
   621  000008                     CANsendMessage@flags:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0x7
   625  000008                     	ds	1
   626  000009                     ??_CANsendMessage:
   627  000009                     ___lwdiv@divisor:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x8
   631  000009                     	ds	2
   632  00000B                     CANreceiveMessage@error:
   633                           	opt stack 0
   634  00000B                     ___lwdiv@quotient:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0xA
   638  00000B                     	ds	1
   639  00000C                     CANreceiveMessage@tamp:
   640                           	opt stack 0
   641                           
   642                           ; 1 bytes @ 0xB
   643  00000C                     	ds	1
   644  00000D                     ___lwdiv@counter:
   645                           	opt stack 0
   646  00000D                     CANsendMessage@tamp:
   647                           	opt stack 0
   648                           
   649                           ; 4 bytes @ 0xC
   650  00000D                     	ds	4
   651  000011                     ??_ISR_bassa:
   652                           
   653                           ; 0 bytes @ 0x10
   654  000011                     	ds	20
   655                           tblptru	equ	0xFF8
   656                           tblptrh	equ	0xFF7
   657                           tblptrl	equ	0xFF6
   658                           tablat	equ	0xFF5
   659                           postinc0	equ	0xFEE
   660                           wreg	equ	0xFE8
   661                           postdec1	equ	0xFE5
   662                           fsr1l	equ	0xFE1
   663                           
   664 ;;
   665 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   666 ;;
   667 ;; *************** function _main *****************
   668 ;; Defined at:
   669 ;;		line 124 in file "sterzo.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;                  2  610[None  ] int 
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   683 ;;      Params:         0       0       0       0
   684 ;;      Locals:         0       0       0       0
   685 ;;      Temps:          0       4       0       0
   686 ;;      Totals:         0       4       0       0
   687 ;;Total ram usage:        4 bytes
   688 ;; Hardware stack levels required when called:    7
   689 ;; This function calls:
   690 ;;		_CANisRXwarningON
   691 ;;		_CANisTXwarningON
   692 ;;		___lldiv
   693 ;;		___lmul
   694 ;;		_calibrazione
   695 ;;		_configurazione_iniziale
   696 ;;		_delay_ms
   697 ;; This function is called by:
   698 ;;		Startup code after reset
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           	psect	text0
   703  001E2C                     __ptext0:
   704                           	opt stack 0
   705  001E2C                     _main:
   706                           	opt stack 24
   707                           
   708                           ;sterzo.c: 125: configurazione_iniziale();
   709                           
   710                           ;incstack = 0
   711  001E2C  EC07  F011         	call	_configurazione_iniziale	;wreg free
   712  001E30  D000               	goto	l3586
   713  001E32                     l3586:
   714                           
   715                           ;sterzo.c: 133: delay_ms(5);
   716  001E32  0E00               	movlw	0
   717  001E34  0100               	movlb	0	; () banked
   718  001E36  6F79               	movwf	(delay_ms@value_ms+1)& (0+255),b
   719  001E38  0E05               	movlw	5
   720  001E3A  6F78               	movwf	delay_ms@value_ms& (0+255),b
   721  001E3C  EC55  F012         	call	_delay_ms	;wreg free
   722                           
   723                           ;sterzo.c: 134: calibrazione();
   724  001E40  ECC2  F011         	call	_calibrazione	;wreg free
   725                           
   726                           ;sterzo.c: 135: duty_cycle = currentSteering;
   727  001E44  C047  F094         	movff	_currentSteering,_duty_cycle
   728  001E48  C048  F095         	movff	_currentSteering+1,_duty_cycle+1
   729  001E4C  0100               	movlb	0	; () banked
   730  001E4E  0E00               	movlw	0
   731  001E50  BF95               	btfsc	(_duty_cycle+1)& (0+255),7,b
   732  001E52  0EFF               	movlw	-1
   733  001E54  6F96               	movwf	(_duty_cycle+2)& (0+255),b
   734  001E56  6F97               	movwf	(_duty_cycle+3)& (0+255),b
   735                           
   736                           ; BSR set to: 0
   737                           ;sterzo.c: 136: if (PORTCbits.RC0 == 0) {
   738  001E58  B082               	btfsc	3970,0,c	;volatile
   739  001E5A  D085               	goto	l3602
   740                           
   741                           ; BSR set to: 0
   742                           ;sterzo.c: 137: timer = (((duty_cycle * 700) / 90) + 800) *2;
   743  001E5C  C094  F072         	movff	_duty_cycle,___lmul@multiplier
   744  001E60  C095  F073         	movff	_duty_cycle+1,___lmul@multiplier+1
   745  001E64  C096  F074         	movff	_duty_cycle+2,___lmul@multiplier+2
   746  001E68  C097  F075         	movff	_duty_cycle+3,___lmul@multiplier+3
   747  001E6C  0EBC               	movlw	188
   748  001E6E  0100               	movlb	0	; () banked
   749  001E70  6F76               	movwf	___lmul@multiplicand& (0+255),b
   750  001E72  0E02               	movlw	2
   751  001E74  6F77               	movwf	(___lmul@multiplicand+1)& (0+255),b
   752  001E76  0E00               	movlw	0
   753  001E78  6F78               	movwf	(___lmul@multiplicand+2)& (0+255),b
   754  001E7A  0E00               	movlw	0
   755  001E7C  6F79               	movwf	(___lmul@multiplicand+3)& (0+255),b
   756  001E7E  EC85  F011         	call	___lmul	;wreg free
   757  001E82  C072  F07E         	movff	?___lmul,___lldiv@dividend
   758  001E86  C073  F07F         	movff	?___lmul+1,___lldiv@dividend+1
   759  001E8A  C074  F080         	movff	?___lmul+2,___lldiv@dividend+2
   760  001E8E  C075  F081         	movff	?___lmul+3,___lldiv@dividend+3
   761  001E92  0E5A               	movlw	90
   762  001E94  0100               	movlb	0	; () banked
   763  001E96  6F82               	movwf	___lldiv@divisor& (0+255),b
   764  001E98  0E00               	movlw	0
   765  001E9A  6F83               	movwf	(___lldiv@divisor+1)& (0+255),b
   766  001E9C  0E00               	movlw	0
   767  001E9E  6F84               	movwf	(___lldiv@divisor+2)& (0+255),b
   768  001EA0  0E00               	movlw	0
   769  001EA2  6F85               	movwf	(___lldiv@divisor+3)& (0+255),b
   770  001EA4  EC57  F010         	call	___lldiv	;wreg free
   771  001EA8  90D8               	bcf	status,0,c
   772  001EAA  0100               	movlb	0	; () banked
   773  001EAC  357E               	rlcf	?___lldiv& (0+255),w,b
   774  001EAE  0100               	movlb	0	; () banked
   775  001EB0  6F8C               	movwf	??_main& (0+255),b
   776  001EB2  0100               	movlb	0	; () banked
   777  001EB4  357F               	rlcf	(?___lldiv+1)& (0+255),w,b
   778  001EB6  0100               	movlb	0	; () banked
   779  001EB8  6F8D               	movwf	(??_main+1)& (0+255),b
   780  001EBA  0100               	movlb	0	; () banked
   781  001EBC  3580               	rlcf	(?___lldiv+2)& (0+255),w,b
   782  001EBE  0100               	movlb	0	; () banked
   783  001EC0  6F8E               	movwf	(??_main+2)& (0+255),b
   784  001EC2  0100               	movlb	0	; () banked
   785  001EC4  3581               	rlcf	(?___lldiv+3)& (0+255),w,b
   786  001EC6  0100               	movlb	0	; () banked
   787  001EC8  6F8F               	movwf	(??_main+3)& (0+255),b
   788  001ECA  0E40               	movlw	64
   789  001ECC  0100               	movlb	0	; () banked
   790  001ECE  258C               	addwf	??_main& (0+255),w,b
   791  001ED0  0100               	movlb	0	; () banked
   792  001ED2  6F98               	movwf	_timer& (0+255),b
   793  001ED4  0E06               	movlw	6
   794  001ED6  0100               	movlb	0	; () banked
   795  001ED8  218D               	addwfc	(??_main+1)& (0+255),w,b
   796  001EDA  0100               	movlb	0	; () banked
   797  001EDC  6F99               	movwf	(_timer+1)& (0+255),b
   798  001EDE  0E00               	movlw	0
   799  001EE0  0100               	movlb	0	; () banked
   800  001EE2  218E               	addwfc	(??_main+2)& (0+255),w,b
   801  001EE4  0100               	movlb	0	; () banked
   802  001EE6  6F9A               	movwf	(_timer+2)& (0+255),b
   803  001EE8  0E00               	movlw	0
   804  001EEA  0100               	movlb	0	; () banked
   805  001EEC  218F               	addwfc	(??_main+3)& (0+255),w,b
   806  001EEE  0100               	movlb	0	; () banked
   807  001EF0  6F9B               	movwf	(_timer+3)& (0+255),b
   808                           
   809                           ; BSR set to: 0
   810                           ;sterzo.c: 138: Ton = 65536 - timer;
   811  001EF2  C098  F08C         	movff	_timer,??_main
   812  001EF6  C099  F08D         	movff	_timer+1,??_main+1
   813  001EFA  0100               	movlb	0	; () banked
   814  001EFC  1F8C               	comf	??_main& (0+255),f,b
   815  001EFE  1F8D               	comf	(??_main+1)& (0+255),f,b
   816  001F00  4B8C               	infsnz	??_main& (0+255),f,b
   817  001F02  2B8D               	incf	(??_main+1)& (0+255),f,b
   818  001F04  C08C  F02B         	movff	??_main,_Ton
   819  001F08  C08D  F02C         	movff	??_main+1,_Ton+1
   820                           
   821                           ; BSR set to: 0
   822                           ;sterzo.c: 139: Toff = 20000 - (timer / 2);
   823  001F0C  C098  F08C         	movff	_timer,??_main
   824  001F10  C099  F08D         	movff	_timer+1,??_main+1
   825  001F14  C09A  F08E         	movff	_timer+2,??_main+2
   826  001F18  C09B  F08F         	movff	_timer+3,??_main+3
   827  001F1C  0100               	movlb	0	; () banked
   828  001F1E  90D8               	bcf	status,0,c
   829  001F20  338F               	rrcf	(??_main+3)& (0+255),f,b
   830  001F22  338E               	rrcf	(??_main+2)& (0+255),f,b
   831  001F24  338D               	rrcf	(??_main+1)& (0+255),f,b
   832  001F26  338C               	rrcf	??_main& (0+255),f,b
   833  001F28  0100               	movlb	0	; () banked
   834  001F2A  1F8C               	comf	??_main& (0+255),f,b
   835  001F2C  1F8D               	comf	(??_main+1)& (0+255),f,b
   836  001F2E  4B8C               	infsnz	??_main& (0+255),f,b
   837  001F30  2B8D               	incf	(??_main+1)& (0+255),f,b
   838  001F32  0E20               	movlw	32
   839  001F34  0100               	movlb	0	; () banked
   840  001F36  258C               	addwf	??_main& (0+255),w,b
   841  001F38  6E29               	movwf	_Toff,c
   842  001F3A  0E4E               	movlw	78
   843  001F3C  0100               	movlb	0	; () banked
   844  001F3E  218D               	addwfc	(??_main+1)& (0+255),w,b
   845  001F40  6E2A               	movwf	_Toff+1,c
   846                           
   847                           ; BSR set to: 0
   848                           ;sterzo.c: 140: Toff = (65536 - (Toff * 2));
   849  001F42  C029  F08C         	movff	_Toff,??_main
   850  001F46  C02A  F08D         	movff	_Toff+1,??_main+1
   851  001F4A  90D8               	bcf	status,0,c
   852  001F4C  0100               	movlb	0	; () banked
   853  001F4E  378C               	rlcf	??_main& (0+255),f,b
   854  001F50  378D               	rlcf	(??_main+1)& (0+255),f,b
   855  001F52  0100               	movlb	0	; () banked
   856  001F54  1F8C               	comf	??_main& (0+255),f,b
   857  001F56  1F8D               	comf	(??_main+1)& (0+255),f,b
   858  001F58  4B8C               	infsnz	??_main& (0+255),f,b
   859  001F5A  2B8D               	incf	(??_main+1)& (0+255),f,b
   860  001F5C  C08C  F029         	movff	??_main,_Toff
   861  001F60  C08D  F02A         	movff	??_main+1,_Toff+1
   862  001F64  D000               	goto	l3602
   863  001F66                     l3602:
   864                           
   865                           ; BSR set to: 0
   866                           ;sterzo.c: 141: }
   867                           ;sterzo.c: 142: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   868  001F66  ECD4  F012         	call	_CANisTXwarningON	;wreg free
   869  001F6A  06E8               	decf	wreg,f,c
   870  001F6C  B4D8               	btfsc	status,2,c
   871  001F6E  D005               	goto	l615
   872  001F70  ECDB  F012         	call	_CANisRXwarningON	;wreg free
   873  001F74  06E8               	decf	wreg,f,c
   874  001F76  A4D8               	btfss	status,2,c
   875  001F78  D75C               	goto	l3586
   876  001F7A                     l615:
   877                           
   878                           ;sterzo.c: 143: PORTAbits.RA1 = 1;
   879  001F7A  8280               	bsf	3968,1,c	;volatile
   880  001F7C  D75A               	goto	l3586
   881  001F7E  EFDA  F000         	goto	start
   882  001F82                     __end_of_main:
   883                           	opt stack 0
   884                           tblptru	equ	0xFF8
   885                           tblptrh	equ	0xFF7
   886                           tblptrl	equ	0xFF6
   887                           tablat	equ	0xFF5
   888                           postinc0	equ	0xFEE
   889                           wreg	equ	0xFE8
   890                           postdec1	equ	0xFE5
   891                           fsr1l	equ	0xFE1
   892                           status	equ	0xFD8
   893                           
   894 ;; *************** function _delay_ms *****************
   895 ;; Defined at:
   896 ;;		line 61 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  value_ms        2   24[BANK0 ] unsigned int 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;		None               void
   903 ;; Registers used:
   904 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   910 ;;      Params:         0       2       0       0
   911 ;;      Locals:         0       0       0       0
   912 ;;      Temps:          0       0       0       0
   913 ;;      Totals:         0       2       0       0
   914 ;;Total ram usage:        2 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    5
   917 ;; This function calls:
   918 ;;		___wmul
   919 ;; This function is called by:
   920 ;;		_main
   921 ;;		_delay_s
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text1
   926  0024AA                     __ptext1:
   927                           	opt stack 0
   928  0024AA                     _delay_ms:
   929                           	opt stack 25
   930                           
   931                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
   932                           
   933                           ;incstack = 0
   934  0024AA  C09E  F072         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
   935  0024AE  0100               	movlb	0	; () banked
   936  0024B0  6B73               	clrf	(___wmul@multiplier+1)& (0+255),b
   937  0024B2  C078  F074         	movff	delay_ms@value_ms,___wmul@multiplicand
   938  0024B6  C079  F075         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
   939  0024BA  EC72  F012         	call	___wmul	;wreg free
   940  0024BE  C072  F09C         	movff	?___wmul,_clock_counter_reference	;volatile
   941  0024C2  C073  F09D         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
   942                           
   943                           ;src\delay.c: 75: while (clock_counter_reference) {
   944  0024C6  D007               	goto	l553
   945  0024C8                     l3392:
   946                           
   947                           ;src\delay.c: 85: _delay(240);
   948  0024C8  0E50               	movlw	80
   949  0024CA                     u4117:
   950  0024CA  2EE8               	decfsz	wreg,f,c
   951  0024CC  D7FE               	goto	u4117
   952                           
   953                           ;src\delay.c: 88: clock_counter_reference--;
   954  0024CE  0100               	movlb	0	; () banked
   955  0024D0  079C               	decf	_clock_counter_reference& (0+255),f,b	;volatile
   956  0024D2  A0D8               	btfss	status,0,c
   957  0024D4  079D               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
   958  0024D6                     l553:
   959  0024D6  0100               	movlb	0	; () banked
   960  0024D8  519C               	movf	_clock_counter_reference& (0+255),w,b	;volatile
   961  0024DA  0100               	movlb	0	; () banked
   962  0024DC  119D               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
   963  0024DE  A4D8               	btfss	status,2,c
   964  0024E0  D7F3               	goto	l3392
   965                           
   966                           ; BSR set to: 0
   967                           
   968                           ; BSR set to: 0
   969  0024E2  0012               	return		;funcret
   970  0024E4                     __end_of_delay_ms:
   971                           	opt stack 0
   972                           tblptru	equ	0xFF8
   973                           tblptrh	equ	0xFF7
   974                           tblptrl	equ	0xFF6
   975                           tablat	equ	0xFF5
   976                           postinc0	equ	0xFEE
   977                           wreg	equ	0xFE8
   978                           postdec1	equ	0xFE5
   979                           fsr1l	equ	0xFE1
   980                           status	equ	0xFD8
   981                           
   982 ;; *************** function ___wmul *****************
   983 ;; Defined at:
   984 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  multiplier      2   18[BANK0 ] unsigned int 
   987 ;;  multiplicand    2   20[BANK0 ] unsigned int 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  product         2   22[BANK0 ] unsigned int 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  2   18[BANK0 ] unsigned int 
   992 ;; Registers used:
   993 ;;		wreg, status,2, status,0, prodl, prodh
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   999 ;;      Params:         0       4       0       0
  1000 ;;      Locals:         0       2       0       0
  1001 ;;      Temps:          0       0       0       0
  1002 ;;      Totals:         0       6       0       0
  1003 ;;Total ram usage:        6 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; Hardware stack levels required when called:    4
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_delay_ms
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text2
  1014  0024E4                     __ptext2:
  1015                           	opt stack 0
  1016  0024E4                     ___wmul:
  1017                           	opt stack 25
  1018                           
  1019                           ; BSR set to: 0
  1020                           ;incstack = 0
  1021  0024E4  0100               	movlb	0	; () banked
  1022  0024E6  5172               	movf	___wmul@multiplier& (0+255),w,b
  1023  0024E8  0100               	movlb	0	; () banked
  1024  0024EA  0374               	mulwf	___wmul@multiplicand& (0+255),b
  1025  0024EC  CFF3 F076          	movff	prodl,___wmul@product
  1026  0024F0  CFF4 F077          	movff	prodh,___wmul@product+1
  1027  0024F4  0100               	movlb	0	; () banked
  1028  0024F6  5172               	movf	___wmul@multiplier& (0+255),w,b
  1029  0024F8  0100               	movlb	0	; () banked
  1030  0024FA  0375               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1031  0024FC  50F3               	movf	prodl,w,c
  1032  0024FE  0100               	movlb	0	; () banked
  1033  002500  2777               	addwf	(___wmul@product+1)& (0+255),f,b
  1034  002502  0100               	movlb	0	; () banked
  1035  002504  5173               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1036  002506  0100               	movlb	0	; () banked
  1037  002508  0374               	mulwf	___wmul@multiplicand& (0+255),b
  1038  00250A  50F3               	movf	prodl,w,c
  1039  00250C  0100               	movlb	0	; () banked
  1040  00250E  2777               	addwf	(___wmul@product+1)& (0+255),f,b
  1041                           
  1042                           ; BSR set to: 0
  1043  002510  C076  F072         	movff	___wmul@product,?___wmul
  1044  002514  C077  F073         	movff	___wmul@product+1,?___wmul+1
  1045  002518  D000               	goto	l677
  1046  00251A                     l677:
  1047                           
  1048                           ; BSR set to: 0
  1049  00251A  0012               	return		;funcret
  1050  00251C                     __end_of___wmul:
  1051                           	opt stack 0
  1052                           tblptru	equ	0xFF8
  1053                           tblptrh	equ	0xFF7
  1054                           tblptrl	equ	0xFF6
  1055                           tablat	equ	0xFF5
  1056                           prodh	equ	0xFF4
  1057                           prodl	equ	0xFF3
  1058                           postinc0	equ	0xFEE
  1059                           wreg	equ	0xFE8
  1060                           postdec1	equ	0xFE5
  1061                           fsr1l	equ	0xFE1
  1062                           status	equ	0xFD8
  1063                           
  1064 ;; *************** function _configurazione_iniziale *****************
  1065 ;; Defined at:
  1066 ;;		line 177 in file "sterzo.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;		None
  1071 ;; Return value:  Size  Location     Type
  1072 ;;		None               void
  1073 ;; Registers used:
  1074 ;;		wreg, status,2, status,0, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1080 ;;      Params:         0       0       0       0
  1081 ;;      Locals:         0       0       0       0
  1082 ;;      Temps:          0       0       0       0
  1083 ;;      Totals:         0       0       0       0
  1084 ;;Total ram usage:        0 bytes
  1085 ;; Hardware stack levels used:    1
  1086 ;; Hardware stack levels required when called:    6
  1087 ;; This function calls:
  1088 ;;		_CANInitialize
  1089 ;;		_OpenADC
  1090 ;; This function is called by:
  1091 ;;		_main
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text3
  1096  00220E                     __ptext3:
  1097                           	opt stack 0
  1098  00220E                     _configurazione_iniziale:
  1099                           	opt stack 24
  1100                           
  1101                           ;sterzo.c: 182: RCONbits.IPEN = 1;
  1102                           
  1103                           ; BSR set to: 0
  1104                           ;incstack = 0
  1105  00220E  8ED0               	bsf	4048,7,c	;volatile
  1106                           
  1107                           ;sterzo.c: 183: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1108  002210  0E06               	movlw	6
  1109  002212  0100               	movlb	0	; () banked
  1110  002214  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1111  002216  0E05               	movlw	5
  1112  002218  0100               	movlb	0	; () banked
  1113  00221A  6F81               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1114  00221C  0E01               	movlw	1
  1115  00221E  0100               	movlb	0	; () banked
  1116  002220  6F82               	movwf	CANInitialize@SJW& (0+255),b
  1117  002222  0E03               	movlw	3
  1118  002224  0100               	movlb	0	; () banked
  1119  002226  6F83               	movwf	CANInitialize@BRP& (0+255),b
  1120  002228  0E9D               	movlw	157
  1121  00222A  0100               	movlb	0	; () banked
  1122  00222C  6F84               	movwf	CANInitialize@flags& (0+255),b
  1123  00222E  0E04               	movlw	4
  1124  002230  EC2F  F00E         	call	_CANInitialize
  1125                           
  1126                           ;sterzo.c: 188: PIR3bits.RXB1IF = 0;
  1127  002234  92A4               	bcf	4004,1,c	;volatile
  1128                           
  1129                           ;sterzo.c: 189: PIR3bits.RXB0IF = 0;
  1130  002236  90A4               	bcf	4004,0,c	;volatile
  1131                           
  1132                           ;sterzo.c: 190: INTCONbits.TMR0IF = 0;
  1133  002238  94F2               	bcf	intcon,2,c	;volatile
  1134                           
  1135                           ;sterzo.c: 196: IPR3bits.RXB1IP = 0;
  1136  00223A  92A5               	bcf	4005,1,c	;volatile
  1137                           
  1138                           ;sterzo.c: 197: IPR3bits.RXB0IP = 0;
  1139  00223C  90A5               	bcf	4005,0,c	;volatile
  1140                           
  1141                           ;sterzo.c: 198: INTCON2bits.TMR0IP = 1;
  1142  00223E  84F1               	bsf	intcon2,2,c	;volatile
  1143                           
  1144                           ;sterzo.c: 204: RCONbits.IPEN = 1;
  1145  002240  8ED0               	bsf	4048,7,c	;volatile
  1146                           
  1147                           ;sterzo.c: 205: PIE3bits.RXB1IE = 1;
  1148  002242  82A3               	bsf	4003,1,c	;volatile
  1149                           
  1150                           ;sterzo.c: 206: PIE3bits.RXB0IE = 1;
  1151  002244  80A3               	bsf	4003,0,c	;volatile
  1152                           
  1153                           ;sterzo.c: 207: INTCONbits.TMR0IE = 1;
  1154  002246  8AF2               	bsf	intcon,5,c	;volatile
  1155                           
  1156                           ;sterzo.c: 209: INTCONbits.GIEH = 1;
  1157  002248  8EF2               	bsf	intcon,7,c	;volatile
  1158                           
  1159                           ;sterzo.c: 210: INTCONbits.GIEL = 1;
  1160  00224A  8CF2               	bsf	intcon,6,c	;volatile
  1161                           
  1162                           ;sterzo.c: 216: OpenADC(0b11011111 & 0b11111111 & 0b11111101, 0b10000111 & 0b11111100 & 
      +                          0b01111111, 0b11111110);
  1163  00224C  0E04               	movlw	4
  1164  00224E  0100               	movlb	0	; () banked
  1165  002250  6F72               	movwf	OpenADC@config2& (0+255),b
  1166  002252  0EFE               	movlw	254
  1167  002254  0100               	movlb	0	; () banked
  1168  002256  6F73               	movwf	OpenADC@portconfig& (0+255),b
  1169  002258  0EDD               	movlw	221
  1170  00225A  EC47  F011         	call	_OpenADC
  1171                           
  1172                           ;sterzo.c: 222: T0CONbits.TMR0ON = 1;
  1173  00225E  8ED5               	bsf	4053,7,c	;volatile
  1174                           
  1175                           ;sterzo.c: 223: PORTCbits.RC0 = 0;
  1176  002260  9082               	bcf	3970,0,c	;volatile
  1177                           
  1178                           ;sterzo.c: 227: LATA = 0x00;
  1179  002262  0E00               	movlw	0
  1180  002264  6E89               	movwf	3977,c	;volatile
  1181                           
  1182                           ;sterzo.c: 228: TRISA = 0b11111101;
  1183  002266  0EFD               	movlw	253
  1184  002268  6E92               	movwf	3986,c	;volatile
  1185                           
  1186                           ;sterzo.c: 230: LATB = 0x00;
  1187  00226A  0E00               	movlw	0
  1188  00226C  6E8A               	movwf	3978,c	;volatile
  1189                           
  1190                           ;sterzo.c: 231: TRISB = 0b11111011;
  1191  00226E  0EFB               	movlw	251
  1192  002270  6E93               	movwf	3987,c	;volatile
  1193                           
  1194                           ;sterzo.c: 233: LATC = 0x00;
  1195  002272  0E00               	movlw	0
  1196  002274  6E8B               	movwf	3979,c	;volatile
  1197                           
  1198                           ;sterzo.c: 234: TRISC = 0x00;
  1199  002276  0E00               	movlw	0
  1200  002278  6E94               	movwf	3988,c	;volatile
  1201                           
  1202                           ;sterzo.c: 236: LATD = 0x00;
  1203  00227A  0E00               	movlw	0
  1204  00227C  6E8C               	movwf	3980,c	;volatile
  1205                           
  1206                           ;sterzo.c: 237: TRISD = 0x00;
  1207  00227E  0E00               	movlw	0
  1208  002280  6E95               	movwf	3989,c	;volatile
  1209                           
  1210                           ;sterzo.c: 239: LATE = 0x00;
  1211  002282  0E00               	movlw	0
  1212  002284  6E8D               	movwf	3981,c	;volatile
  1213                           
  1214                           ;sterzo.c: 240: TRISE = 0xFF;
  1215  002286  6896               	setf	3990,c	;volatile
  1216                           
  1217                           ;sterzo.c: 241: T0CON = 0x80;
  1218  002288  0E80               	movlw	128
  1219  00228A  6ED5               	movwf	4053,c	;volatile
  1220  00228C  0012               	return		;funcret
  1221  00228E                     __end_of_configurazione_iniziale:
  1222                           	opt stack 0
  1223                           tblptru	equ	0xFF8
  1224                           tblptrh	equ	0xFF7
  1225                           tblptrl	equ	0xFF6
  1226                           tablat	equ	0xFF5
  1227                           prodh	equ	0xFF4
  1228                           prodl	equ	0xFF3
  1229                           intcon	equ	0xFF2
  1230                           intcon2	equ	0xFF1
  1231                           postinc0	equ	0xFEE
  1232                           wreg	equ	0xFE8
  1233                           postdec1	equ	0xFE5
  1234                           fsr1l	equ	0xFE1
  1235                           status	equ	0xFD8
  1236                           
  1237 ;; *************** function _OpenADC *****************
  1238 ;; Defined at:
  1239 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  config          1    wreg     unsigned char 
  1242 ;;  config2         1   18[BANK0 ] unsigned char 
  1243 ;;  portconfig      1   19[BANK0 ] unsigned char 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  config          1   22[BANK0 ] unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;		None               void
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1255 ;;      Params:         0       2       0       0
  1256 ;;      Locals:         0       1       0       0
  1257 ;;      Temps:          0       2       0       0
  1258 ;;      Totals:         0       5       0       0
  1259 ;;Total ram usage:        5 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    4
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_configurazione_iniziale
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text4
  1270  00228E                     __ptext4:
  1271                           	opt stack 0
  1272  00228E                     _OpenADC:
  1273                           	opt stack 25
  1274                           
  1275                           ;incstack = 0
  1276                           ;OpenADC@config stored from wreg
  1277  00228E  0100               	movlb	0	; () banked
  1278  002290  6F76               	movwf	OpenADC@config& (0+255),b
  1279                           
  1280                           ; BSR set to: 0
  1281  002292  0E00               	movlw	0
  1282  002294  6EC2               	movwf	4034,c	;volatile
  1283  002296  0E00               	movlw	0
  1284  002298  6EC0               	movwf	4032,c	;volatile
  1285                           
  1286                           ; BSR set to: 0
  1287  00229A  0100               	movlb	0	; () banked
  1288  00229C  90D8               	bcf	status,0,c
  1289  00229E  3172               	rrcf	OpenADC@config2& (0+255),w,b
  1290  0022A0  0B3C               	andlw	60
  1291  0022A2  6EC2               	movwf	4034,c	;volatile
  1292                           
  1293                           ; BSR set to: 0
  1294  0022A4  C072  F074         	movff	OpenADC@config2,??_OpenADC
  1295  0022A8  0100               	movlb	0	; () banked
  1296  0022AA  3B74               	swapf	??_OpenADC& (0+255),f,b
  1297  0022AC  0EF0               	movlw	240
  1298  0022AE  1774               	andwf	??_OpenADC& (0+255),f,b
  1299  0022B0  0E30               	movlw	48
  1300  0022B2  0100               	movlb	0	; () banked
  1301  0022B4  1774               	andwf	??_OpenADC& (0+255),f,b
  1302  0022B6  0100               	movlb	0	; () banked
  1303  0022B8  5173               	movf	OpenADC@portconfig& (0+255),w,b
  1304  0022BA  0B0F               	andlw	15
  1305  0022BC  0100               	movlb	0	; () banked
  1306  0022BE  1174               	iorwf	??_OpenADC& (0+255),w,b
  1307  0022C0  6EC1               	movwf	4033,c	;volatile
  1308                           
  1309                           ; BSR set to: 0
  1310  0022C2  C076  F074         	movff	OpenADC@config,??_OpenADC
  1311  0022C6  0100               	movlb	0	; () banked
  1312  0022C8  90D8               	bcf	status,0,c
  1313  0022CA  3774               	rlcf	??_OpenADC& (0+255),f,b
  1314  0022CC  0100               	movlb	0	; () banked
  1315  0022CE  90D8               	bcf	status,0,c
  1316  0022D0  3774               	rlcf	??_OpenADC& (0+255),f,b
  1317  0022D2  0E38               	movlw	56
  1318  0022D4  0100               	movlb	0	; () banked
  1319  0022D6  1774               	andwf	??_OpenADC& (0+255),f,b
  1320  0022D8  C076  F075         	movff	OpenADC@config,??_OpenADC+1
  1321  0022DC  0100               	movlb	0	; () banked
  1322  0022DE  3B75               	swapf	(??_OpenADC+1)& (0+255),f,b
  1323  0022E0  0E0F               	movlw	15
  1324  0022E2  1775               	andwf	(??_OpenADC+1)& (0+255),f,b
  1325  0022E4  0E07               	movlw	7
  1326  0022E6  0100               	movlb	0	; () banked
  1327  0022E8  1775               	andwf	(??_OpenADC+1)& (0+255),f,b
  1328  0022EA  0100               	movlb	0	; () banked
  1329  0022EC  5176               	movf	OpenADC@config& (0+255),w,b
  1330  0022EE  0B80               	andlw	128
  1331  0022F0  0100               	movlb	0	; () banked
  1332  0022F2  1175               	iorwf	(??_OpenADC+1)& (0+255),w,b
  1333  0022F4  0100               	movlb	0	; () banked
  1334  0022F6  1174               	iorwf	??_OpenADC& (0+255),w,b
  1335  0022F8  6EC0               	movwf	4032,c	;volatile
  1336                           
  1337                           ; BSR set to: 0
  1338  0022FA  0100               	movlb	0	; () banked
  1339  0022FC  AF72               	btfss	OpenADC@config2& (0+255),7,b
  1340  0022FE  D003               	goto	l659
  1341                           
  1342                           ; BSR set to: 0
  1343  002300  9C9E               	bcf	3998,6,c	;volatile
  1344  002302  8C9D               	bsf	3997,6,c	;volatile
  1345  002304  8CF2               	bsf	intcon,6,c	;volatile
  1346  002306                     l659:
  1347                           
  1348                           ; BSR set to: 0
  1349  002306  80C2               	bsf	4034,0,c	;volatile
  1350                           
  1351                           ; BSR set to: 0
  1352  002308  0012               	return		;funcret
  1353  00230A                     __end_of_OpenADC:
  1354                           	opt stack 0
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           prodh	equ	0xFF4
  1360                           prodl	equ	0xFF3
  1361                           intcon	equ	0xFF2
  1362                           intcon2	equ	0xFF1
  1363                           postinc0	equ	0xFEE
  1364                           wreg	equ	0xFE8
  1365                           postdec1	equ	0xFE5
  1366                           fsr1l	equ	0xFE1
  1367                           status	equ	0xFD8
  1368                           
  1369 ;; *************** function _CANInitialize *****************
  1370 ;; Defined at:
  1371 ;;		line 218 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  propSeg         1    wreg     unsigned char 
  1374 ;;  phaseSeg1       1   32[BANK0 ] unsigned char 
  1375 ;;  phaseSeg2       1   33[BANK0 ] unsigned char 
  1376 ;;  SJW             1   34[BANK0 ] unsigned char 
  1377 ;;  BRP             1   35[BANK0 ] unsigned char 
  1378 ;;  flags           1   36[BANK0 ] enum E16885
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  propSeg         1   41[BANK0 ] unsigned char 
  1381 ;;  FilterConfig    1   43[BANK0 ] unsigned char 
  1382 ;;  FilterConfig    1   42[BANK0 ] unsigned char 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;		None               void
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, status,0, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1392 ;;      Params:         0       5       0       0
  1393 ;;      Locals:         0       3       0       0
  1394 ;;      Temps:          0       4       0       0
  1395 ;;      Totals:         0      12       0       0
  1396 ;;Total ram usage:       12 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:    5
  1399 ;; This function calls:
  1400 ;;		_CANOperationMode
  1401 ;;		_CANSetFilter
  1402 ;;		_CANSetMask
  1403 ;; This function is called by:
  1404 ;;		_configurazione_iniziale
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text5
  1409  001C5E                     __ptext5:
  1410                           	opt stack 0
  1411  001C5E                     _CANInitialize:
  1412                           	opt stack 24
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;incstack = 0
  1416                           ;CANInitialize@propSeg stored from wreg
  1417  001C5E  0100               	movlb	0	; () banked
  1418  001C60  6F89               	movwf	CANInitialize@propSeg& (0+255),b
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  1422                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  1423                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  1424  001C62  0E80               	movlw	128
  1425  001C64  ECA2  F012         	call	_CANOperationMode
  1426                           
  1427                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  1428  001C68  0E00               	movlw	0
  1429  001C6A  6E70               	movwf	3952,c	;volatile
  1430                           
  1431                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  1432  001C6C  0E00               	movlw	0
  1433  001C6E  6E71               	movwf	3953,c	;volatile
  1434                           
  1435                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  1436  001C70  0E00               	movlw	0
  1437  001C72  6E72               	movwf	3954,c	;volatile
  1438                           
  1439                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  1440  001C74  0100               	movlb	0	; () banked
  1441  001C76  4182               	rrncf	CANInitialize@SJW& (0+255),w,b
  1442  001C78  42E8               	rrncf	wreg,f,c
  1443  001C7A  0BC0               	andlw	192
  1444  001C7C  0100               	movlb	0	; () banked
  1445  001C7E  6F82               	movwf	CANInitialize@SJW& (0+255),b
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  1449  001C80  0100               	movlb	0	; () banked
  1450  001C82  5182               	movf	CANInitialize@SJW& (0+255),w,b
  1451  001C84  1270               	iorwf	3952,f,c	;volatile
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  1455  001C86  0100               	movlb	0	; () banked
  1456  001C88  5183               	movf	CANInitialize@BRP& (0+255),w,b
  1457  001C8A  1270               	iorwf	3952,f,c	;volatile
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  1461  001C8C  0100               	movlb	0	; () banked
  1462  001C8E  5189               	movf	CANInitialize@propSeg& (0+255),w,b
  1463  001C90  1271               	iorwf	3953,f,c	;volatile
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  1467  001C92  0100               	movlb	0	; () banked
  1468  001C94  3980               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  1469  001C96  42E8               	rrncf	wreg,f,c
  1470  001C98  0BF8               	andlw	248
  1471  001C9A  0100               	movlb	0	; () banked
  1472  001C9C  6F80               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  1476  001C9E  0100               	movlb	0	; () banked
  1477  001CA0  5180               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  1478  001CA2  1271               	iorwf	3953,f,c	;volatile
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  1482  001CA4  0100               	movlb	0	; () banked
  1483  001CA6  A584               	btfss	CANInitialize@flags& (0+255),2,b
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  1487  001CA8  8C71               	bsf	3953,6,c	;volatile
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  1491  001CAA  0100               	movlb	0	; () banked
  1492  001CAC  A184               	btfss	CANInitialize@flags& (0+255),0,b
  1493  001CAE  D002               	goto	l2908
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  1497  001CB0  8E71               	bsf	3953,7,c	;volatile
  1498  001CB2  D000               	goto	l2908
  1499  001CB4                     l2908:
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  1503  001CB4  0100               	movlb	0	; () banked
  1504  001CB6  5181               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  1505  001CB8  1272               	iorwf	3954,f,c	;volatile
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  1509  001CBA  0100               	movlb	0	; () banked
  1510  001CBC  A384               	btfss	CANInitialize@flags& (0+255),1,b
  1511  001CBE  D002               	goto	l2914
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  1515  001CC0  8C72               	bsf	3954,6,c	;volatile
  1516  001CC2  D000               	goto	l2914
  1517  001CC4                     l2914:
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  1521  001CC4  0100               	movlb	0	; () banked
  1522  001CC6  5184               	movf	CANInitialize@flags& (0+255),w,b
  1523  001CC8  0B60               	andlw	96
  1524  001CCA  6E60               	movwf	3936,c	;volatile
  1525                           
  1526                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  1527  001CCC  0100               	movlb	0	; () banked
  1528  001CCE  5184               	movf	CANInitialize@flags& (0+255),w,b
  1529  001CD0  0B10               	andlw	16
  1530  001CD2  0AFF               	xorlw	255
  1531  001CD4  B4D8               	btfsc	status,2,c
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  1535  001CD6  8460               	bsf	3936,2,c	;volatile
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  1539  001CD8  CF60 FF50          	movff	3936,3920	;volatile
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  1543  001CDC  0E00               	movlw	0
  1544  001CDE  0100               	movlb	0	; () banked
  1545  001CE0  6F72               	movwf	CANSetMask@mask& (0+255),b
  1546  001CE2  0E00               	movlw	0
  1547  001CE4  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  1548  001CE6  0E00               	movlw	0
  1549  001CE8  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  1550  001CEA  0E00               	movlw	0
  1551  001CEC  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  1552  001CEE  0EF7               	movlw	247
  1553  001CF0  0100               	movlb	0	; () banked
  1554  001CF2  6F76               	movwf	CANSetMask@type& (0+255),b
  1555  001CF4  0E01               	movlw	1
  1556  001CF6  EC5A  F00C         	call	_CANSetMask
  1557                           
  1558                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  1559  001CFA  0E00               	movlw	0
  1560  001CFC  0100               	movlb	0	; () banked
  1561  001CFE  6F72               	movwf	CANSetMask@mask& (0+255),b
  1562  001D00  0E00               	movlw	0
  1563  001D02  6F73               	movwf	(CANSetMask@mask+1)& (0+255),b
  1564  001D04  0E00               	movlw	0
  1565  001D06  6F74               	movwf	(CANSetMask@mask+2)& (0+255),b
  1566  001D08  0E00               	movlw	0
  1567  001D0A  6F75               	movwf	(CANSetMask@mask+3)& (0+255),b
  1568  001D0C  0EF7               	movlw	247
  1569  001D0E  0100               	movlb	0	; () banked
  1570  001D10  6F76               	movwf	CANSetMask@type& (0+255),b
  1571  001D12  0E02               	movlw	2
  1572  001D14  EC5A  F00C         	call	_CANSetMask
  1573                           
  1574                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  1575  001D18  D00F               	goto	l2926
  1576  001D1A                     l2920:
  1577                           
  1578                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  1579  001D1A  0EF7               	movlw	247
  1580  001D1C  0100               	movlb	0	; () banked
  1581  001D1E  6F8A               	movwf	CANInitialize@FilterConfig1& (0+255),b
  1582  001D20  D007               	goto	l2922
  1583  001D22                     l342:
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  1587  001D22  0100               	movlb	0	; () banked
  1588  001D24  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  1589                           
  1590                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  1591  001D26  0100               	movlb	0	; () banked
  1592  001D28  698B               	setf	CANInitialize@FilterConfig2& (0+255),b
  1593                           
  1594                           ;inc\CANlib.h: 273: break;
  1595  001D2A  D028               	goto	l2928
  1596  001D2C                     l343:
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  1600  001D2C  0100               	movlb	0	; () banked
  1601  001D2E  698A               	setf	CANInitialize@FilterConfig1& (0+255),b
  1602  001D30                     l2922:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  1606  001D30  0EF7               	movlw	247
  1607  001D32  0100               	movlb	0	; () banked
  1608  001D34  6F8B               	movwf	CANInitialize@FilterConfig2& (0+255),b
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;inc\CANlib.h: 278: }
  1612                           
  1613                           ;inc\CANlib.h: 277: break;
  1614  001D36  D022               	goto	l2928
  1615  001D38                     l2926:
  1616  001D38  0E9F               	movlw	159
  1617  001D3A  0100               	movlb	0	; () banked
  1618  001D3C  6F85               	movwf	??_CANInitialize& (0+255),b
  1619  001D3E  0EFF               	movlw	255
  1620  001D40  0100               	movlb	0	; () banked
  1621  001D42  6F86               	movwf	(??_CANInitialize+1)& (0+255),b
  1622  001D44  0100               	movlb	0	; () banked
  1623  001D46  5184               	movf	CANInitialize@flags& (0+255),w,b
  1624  001D48  0B60               	andlw	96
  1625  001D4A  0100               	movlb	0	; () banked
  1626  001D4C  6F87               	movwf	(??_CANInitialize+2)& (0+255),b
  1627  001D4E  6B88               	clrf	(??_CANInitialize+3)& (0+255),b
  1628  001D50  0100               	movlb	0	; () banked
  1629  001D52  5185               	movf	??_CANInitialize& (0+255),w,b
  1630  001D54  0100               	movlb	0	; () banked
  1631  001D56  1387               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  1632  001D58  0100               	movlb	0	; () banked
  1633  001D5A  5186               	movf	(??_CANInitialize+1)& (0+255),w,b
  1634  001D5C  0100               	movlb	0	; () banked
  1635  001D5E  1388               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  1636                           
  1637                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1638                           ; Switch size 1, requested type "space"
  1639                           ; Number of cases is 1, Range of values is 0 to 0
  1640                           ; switch strategies available:
  1641                           ; Name         Instructions Cycles
  1642                           ; simple_byte            4     3 (average)
  1643                           ;	Chosen strategy is simple_byte
  1644  001D60  0100               	movlb	0	; () banked
  1645  001D62  5188               	movf	(??_CANInitialize+3)& (0+255),w,b
  1646  001D64  0A00               	xorlw	0	; case 0
  1647  001D66  A4D8               	btfss	status,2,c
  1648  001D68  D7E1               	goto	l343
  1649                           
  1650                           ; BSR set to: 0
  1651                           ; Switch size 1, requested type "space"
  1652                           ; Number of cases is 2, Range of values is 191 to 223
  1653                           ; switch strategies available:
  1654                           ; Name         Instructions Cycles
  1655                           ; simple_byte            7     4 (average)
  1656                           ;	Chosen strategy is simple_byte
  1657  001D6A  0100               	movlb	0	; () banked
  1658  001D6C  5187               	movf	(??_CANInitialize+2)& (0+255),w,b
  1659  001D6E  0ABF               	xorlw	191	; case 191
  1660  001D70  B4D8               	btfsc	status,2,c
  1661  001D72  D7D7               	goto	l342
  1662  001D74  0A60               	xorlw	96	; case 223
  1663  001D76  B4D8               	btfsc	status,2,c
  1664  001D78  D7D0               	goto	l2920
  1665  001D7A  D7D8               	goto	l343
  1666  001D7C                     l2928:
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  1670  001D7C  0E00               	movlw	0
  1671  001D7E  0100               	movlb	0	; () banked
  1672  001D80  6F72               	movwf	CANSetFilter@filter& (0+255),b
  1673  001D82  0E00               	movlw	0
  1674  001D84  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1675  001D86  0E00               	movlw	0
  1676  001D88  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1677  001D8A  0E00               	movlw	0
  1678  001D8C  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1679  001D8E  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  1680  001D92  0E00               	movlw	0
  1681  001D94  ECDC  F000         	call	_CANSetFilter
  1682                           
  1683                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  1684  001D98  0E00               	movlw	0
  1685  001D9A  0100               	movlb	0	; () banked
  1686  001D9C  6F72               	movwf	CANSetFilter@filter& (0+255),b
  1687  001D9E  0E00               	movlw	0
  1688  001DA0  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1689  001DA2  0E00               	movlw	0
  1690  001DA4  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1691  001DA6  0E00               	movlw	0
  1692  001DA8  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1693  001DAA  C08A  F076         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  1694  001DAE  0E01               	movlw	1
  1695  001DB0  ECDC  F000         	call	_CANSetFilter
  1696                           
  1697                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  1698  001DB4  0E00               	movlw	0
  1699  001DB6  0100               	movlb	0	; () banked
  1700  001DB8  6F72               	movwf	CANSetFilter@filter& (0+255),b
  1701  001DBA  0E00               	movlw	0
  1702  001DBC  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1703  001DBE  0E00               	movlw	0
  1704  001DC0  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1705  001DC2  0E00               	movlw	0
  1706  001DC4  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1707  001DC6  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1708  001DCA  0E02               	movlw	2
  1709  001DCC  ECDC  F000         	call	_CANSetFilter
  1710                           
  1711                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  1712  001DD0  0E00               	movlw	0
  1713  001DD2  0100               	movlb	0	; () banked
  1714  001DD4  6F72               	movwf	CANSetFilter@filter& (0+255),b
  1715  001DD6  0E00               	movlw	0
  1716  001DD8  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1717  001DDA  0E00               	movlw	0
  1718  001DDC  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1719  001DDE  0E00               	movlw	0
  1720  001DE0  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1721  001DE2  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1722  001DE6  0E03               	movlw	3
  1723  001DE8  ECDC  F000         	call	_CANSetFilter
  1724                           
  1725                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  1726  001DEC  0E00               	movlw	0
  1727  001DEE  0100               	movlb	0	; () banked
  1728  001DF0  6F72               	movwf	CANSetFilter@filter& (0+255),b
  1729  001DF2  0E00               	movlw	0
  1730  001DF4  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1731  001DF6  0E00               	movlw	0
  1732  001DF8  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1733  001DFA  0E00               	movlw	0
  1734  001DFC  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1735  001DFE  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1736  001E02  0E04               	movlw	4
  1737  001E04  ECDC  F000         	call	_CANSetFilter
  1738                           
  1739                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  1740  001E08  0E00               	movlw	0
  1741  001E0A  0100               	movlb	0	; () banked
  1742  001E0C  6F72               	movwf	CANSetFilter@filter& (0+255),b
  1743  001E0E  0E00               	movlw	0
  1744  001E10  6F73               	movwf	(CANSetFilter@filter+1)& (0+255),b
  1745  001E12  0E00               	movlw	0
  1746  001E14  6F74               	movwf	(CANSetFilter@filter+2)& (0+255),b
  1747  001E16  0E00               	movlw	0
  1748  001E18  6F75               	movwf	(CANSetFilter@filter+3)& (0+255),b
  1749  001E1A  C08B  F076         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  1750  001E1E  0E05               	movlw	5
  1751  001E20  ECDC  F000         	call	_CANSetFilter
  1752                           
  1753                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  1754  001E24  0E00               	movlw	0
  1755  001E26  ECA2  F012         	call	_CANOperationMode
  1756  001E2A  0012               	return		;funcret
  1757  001E2C                     __end_of_CANInitialize:
  1758                           	opt stack 0
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           prodh	equ	0xFF4
  1764                           prodl	equ	0xFF3
  1765                           intcon	equ	0xFF2
  1766                           intcon2	equ	0xFF1
  1767                           postinc0	equ	0xFEE
  1768                           wreg	equ	0xFE8
  1769                           postdec1	equ	0xFE5
  1770                           fsr1l	equ	0xFE1
  1771                           status	equ	0xFD8
  1772                           
  1773 ;; *************** function _CANSetMask *****************
  1774 ;; Defined at:
  1775 ;;		line 640 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;  numBuffer       1    wreg     enum E16919
  1778 ;;  mask            4   18[BANK0 ] unsigned long 
  1779 ;;  type            1   22[BANK0 ] enum E16885
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  numBuffer       1   27[BANK0 ] enum E16919
  1782 ;;  tamp            4   28[BANK0 ] unsigned long 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;		None               void
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1792 ;;      Params:         0       5       0       0
  1793 ;;      Locals:         0       5       0       0
  1794 ;;      Temps:          0       4       0       0
  1795 ;;      Totals:         0      14       0       0
  1796 ;;Total ram usage:       14 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    4
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		_CANInitialize
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text6
  1807  0018B4                     __ptext6:
  1808                           	opt stack 0
  1809  0018B4                     _CANSetMask:
  1810                           	opt stack 24
  1811                           
  1812                           ;incstack = 0
  1813                           ;CANSetMask@numBuffer stored from wreg
  1814  0018B4  0100               	movlb	0	; () banked
  1815  0018B6  6F7B               	movwf	CANSetMask@numBuffer& (0+255),b
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  1819  0018B8  0100               	movlb	0	; () banked
  1820  0018BA  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  1821  0018BC  A4D8               	btfss	status,2,c
  1822  0018BE  D057               	goto	l2490
  1823                           
  1824                           ; BSR set to: 0
  1825  0018C0  0100               	movlb	0	; () banked
  1826  0018C2  2976               	incf	CANSetMask@type& (0+255),w,b
  1827  0018C4  A4D8               	btfss	status,2,c
  1828  0018C6  D053               	goto	l2490
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;inc\CANlib.h: 644: {
  1832                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  1833  0018C8  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  1834  0018CC  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  1835  0018D0  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  1836  0018D4  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  1837  0018D8  0E04               	movlw	4
  1838  0018DA  D006               	goto	u2090
  1839  0018DC                     u2095:
  1840  0018DC  0100               	movlb	0	; () banked
  1841  0018DE  90D8               	bcf	status,0,c
  1842  0018E0  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  1843  0018E2  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  1844  0018E4  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  1845  0018E6  3377               	rrcf	??_CANSetMask& (0+255),f,b
  1846  0018E8                     u2090:
  1847  0018E8  2EE8               	decfsz	wreg,f,c
  1848  0018EA  D7F8               	goto	u2095
  1849  0018EC  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  1850  0018F0  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1851  0018F4  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1852  0018F8  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  1856  0018FC  0100               	movlb	0	; () banked
  1857  0018FE  517C               	movf	CANSetMask@tamp& (0+255),w,b
  1858  001900  0100               	movlb	0	; () banked
  1859  001902  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  1860  001904  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  1861  001906  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  1862  001908  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  1866  00190A  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  1870  00190E  0E07               	movlw	7
  1871  001910  0100               	movlb	0	; () banked
  1872  001912  1572               	andwf	CANSetMask@mask& (0+255),w,b
  1873  001914  0100               	movlb	0	; () banked
  1874  001916  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  1875  001918  0E00               	movlw	0
  1876  00191A  0100               	movlb	0	; () banked
  1877  00191C  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  1878  00191E  0100               	movlb	0	; () banked
  1879  001920  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  1880  001922  0E00               	movlw	0
  1881  001924  0100               	movlb	0	; () banked
  1882  001926  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  1883  001928  0100               	movlb	0	; () banked
  1884  00192A  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  1885  00192C  0E00               	movlw	0
  1886  00192E  0100               	movlb	0	; () banked
  1887  001930  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  1888  001932  0100               	movlb	0	; () banked
  1889  001934  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  1893  001936  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  1894  00193A  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  1895  00193E  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  1896  001942  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  1897  001946  0E05               	movlw	5
  1898  001948                     u2105:
  1899  001948  90D8               	bcf	status,0,c
  1900  00194A  0100               	movlb	0	; () banked
  1901  00194C  3777               	rlcf	??_CANSetMask& (0+255),f,b
  1902  00194E  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  1903  001950  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  1904  001952  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  1905  001954  2EE8               	decfsz	wreg,f,c
  1906  001956  D7F8               	goto	u2105
  1907  001958  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  1908  00195C  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1909  001960  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1910  001964  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  1914  001968  C07C  FF19         	movff	CANSetMask@tamp,3865	;volatile
  1915  00196C  D000               	goto	l2490
  1916  00196E                     l2490:
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;inc\CANlib.h: 652: }
  1920                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  1921  00196E  0E02               	movlw	2
  1922  001970  0100               	movlb	0	; () banked
  1923  001972  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  1924  001974  A4D8               	btfss	status,2,c
  1925  001976  D057               	goto	l2506
  1926                           
  1927                           ; BSR set to: 0
  1928  001978  0100               	movlb	0	; () banked
  1929  00197A  2976               	incf	CANSetMask@type& (0+255),w,b
  1930  00197C  A4D8               	btfss	status,2,c
  1931  00197E  D053               	goto	l2506
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;inc\CANlib.h: 655: {
  1935                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  1936  001980  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  1937  001984  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  1938  001988  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  1939  00198C  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  1940  001990  0E04               	movlw	4
  1941  001992  D006               	goto	u2130
  1942  001994                     u2135:
  1943  001994  0100               	movlb	0	; () banked
  1944  001996  90D8               	bcf	status,0,c
  1945  001998  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  1946  00199A  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  1947  00199C  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  1948  00199E  3377               	rrcf	??_CANSetMask& (0+255),f,b
  1949  0019A0                     u2130:
  1950  0019A0  2EE8               	decfsz	wreg,f,c
  1951  0019A2  D7F8               	goto	u2135
  1952  0019A4  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  1953  0019A8  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  1954  0019AC  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  1955  0019B0  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  1959  0019B4  0100               	movlb	0	; () banked
  1960  0019B6  517C               	movf	CANSetMask@tamp& (0+255),w,b
  1961  0019B8  0100               	movlb	0	; () banked
  1962  0019BA  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  1963  0019BC  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  1964  0019BE  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  1965  0019C0  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  1969  0019C2  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  1973  0019C6  0E07               	movlw	7
  1974  0019C8  0100               	movlb	0	; () banked
  1975  0019CA  1572               	andwf	CANSetMask@mask& (0+255),w,b
  1976  0019CC  0100               	movlb	0	; () banked
  1977  0019CE  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  1978  0019D0  0E00               	movlw	0
  1979  0019D2  0100               	movlb	0	; () banked
  1980  0019D4  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  1981  0019D6  0100               	movlb	0	; () banked
  1982  0019D8  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  1983  0019DA  0E00               	movlw	0
  1984  0019DC  0100               	movlb	0	; () banked
  1985  0019DE  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  1986  0019E0  0100               	movlb	0	; () banked
  1987  0019E2  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  1988  0019E4  0E00               	movlw	0
  1989  0019E6  0100               	movlb	0	; () banked
  1990  0019E8  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  1991  0019EA  0100               	movlb	0	; () banked
  1992  0019EC  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  1996  0019EE  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  1997  0019F2  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  1998  0019F6  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  1999  0019FA  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2000  0019FE  0E05               	movlw	5
  2001  001A00                     u2145:
  2002  001A00  90D8               	bcf	status,0,c
  2003  001A02  0100               	movlb	0	; () banked
  2004  001A04  3777               	rlcf	??_CANSetMask& (0+255),f,b
  2005  001A06  3778               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2006  001A08  3779               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2007  001A0A  377A               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2008  001A0C  2EE8               	decfsz	wreg,f,c
  2009  001A0E  D7F8               	goto	u2145
  2010  001A10  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  2011  001A14  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2012  001A18  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2013  001A1C  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2017  001A20  C07C  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2018  001A24  D000               	goto	l2506
  2019  001A26                     l2506:
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;inc\CANlib.h: 663: }
  2023                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2024  001A26  0100               	movlb	0	; () banked
  2025  001A28  057B               	decf	CANSetMask@numBuffer& (0+255),w,b
  2026  001A2A  A4D8               	btfss	status,2,c
  2027  001A2C  D089               	goto	l2538
  2028                           
  2029                           ; BSR set to: 0
  2030  001A2E  0EF7               	movlw	247
  2031  001A30  0100               	movlb	0	; () banked
  2032  001A32  1976               	xorwf	CANSetMask@type& (0+255),w,b
  2033  001A34  A4D8               	btfss	status,2,c
  2034  001A36  D084               	goto	l2538
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;inc\CANlib.h: 666: {
  2038                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  2039  001A38  0100               	movlb	0	; () banked
  2040  001A3A  5172               	movf	CANSetMask@mask& (0+255),w,b
  2041  001A3C  0100               	movlb	0	; () banked
  2042  001A3E  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  2043  001A40  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2044  001A42  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2045  001A44  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2049  001A46  C07C  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  2053  001A4A  0E00               	movlw	0
  2054  001A4C  0100               	movlb	0	; () banked
  2055  001A4E  1572               	andwf	CANSetMask@mask& (0+255),w,b
  2056  001A50  0100               	movlb	0	; () banked
  2057  001A52  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  2058  001A54  0EFF               	movlw	255
  2059  001A56  0100               	movlb	0	; () banked
  2060  001A58  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2061  001A5A  0100               	movlb	0	; () banked
  2062  001A5C  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2063  001A5E  0E00               	movlw	0
  2064  001A60  0100               	movlb	0	; () banked
  2065  001A62  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2066  001A64  0100               	movlb	0	; () banked
  2067  001A66  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2068  001A68  0E00               	movlw	0
  2069  001A6A  0100               	movlb	0	; () banked
  2070  001A6C  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2071  001A6E  0100               	movlb	0	; () banked
  2072  001A70  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  2076  001A72  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  2077  001A76  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2078  001A7A  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2079  001A7E  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2080  001A82  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  2081  001A86  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  2082  001A8A  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  2083  001A8E  0100               	movlb	0	; () banked
  2084  001A90  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  2085  001A92  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  2086  001A96  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2087  001A9A  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2088  001A9E  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2092  001AA2  C07C  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  2096  001AA6  0100               	movlb	0	; () banked
  2097  001AA8  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2098  001AAA  D003               	goto	l416
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2102  001AAC  010F               	movlb	15	; () banked
  2103  001AAE  8119               	bsf	25,0,b	;volatile
  2104  001AB0  D002               	goto	l417
  2105  001AB2                     l416:
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;inc\CANlib.h: 676: else
  2109                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2110  001AB2  010F               	movlb	15	; () banked
  2111  001AB4  9119               	bcf	25,0,b	;volatile
  2112  001AB6                     l417:
  2113                           
  2114                           ; BSR set to: 15
  2115                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  2116  001AB6  0100               	movlb	0	; () banked
  2117  001AB8  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2118  001ABA  D003               	goto	l418
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2122  001ABC  010F               	movlb	15	; () banked
  2123  001ABE  8319               	bsf	25,1,b	;volatile
  2124  001AC0  D002               	goto	l419
  2125  001AC2                     l418:
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;inc\CANlib.h: 681: else
  2129                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2130  001AC2  010F               	movlb	15	; () banked
  2131  001AC4  9319               	bcf	25,1,b	;volatile
  2132  001AC6                     l419:
  2133                           
  2134                           ; BSR set to: 15
  2135                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  2136  001AC6  0100               	movlb	0	; () banked
  2137  001AC8  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2138  001ACA  D003               	goto	l420
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2142  001ACC  010F               	movlb	15	; () banked
  2143  001ACE  8B19               	bsf	25,5,b	;volatile
  2144  001AD0  D002               	goto	l421
  2145  001AD2                     l420:
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;inc\CANlib.h: 686: else
  2149                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2150  001AD2  010F               	movlb	15	; () banked
  2151  001AD4  9B19               	bcf	25,5,b	;volatile
  2152  001AD6                     l421:
  2153                           
  2154                           ; BSR set to: 15
  2155                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  2156  001AD6  0100               	movlb	0	; () banked
  2157  001AD8  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2158  001ADA  D003               	goto	l422
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  2162  001ADC  010F               	movlb	15	; () banked
  2163  001ADE  8D19               	bsf	25,6,b	;volatile
  2164  001AE0  D002               	goto	l423
  2165  001AE2                     l422:
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;inc\CANlib.h: 691: else
  2169                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  2170  001AE2  010F               	movlb	15	; () banked
  2171  001AE4  9D19               	bcf	25,6,b	;volatile
  2172  001AE6                     l423:
  2173                           
  2174                           ; BSR set to: 15
  2175                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  2176  001AE6  0100               	movlb	0	; () banked
  2177  001AE8  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2178  001AEA  D003               	goto	l424
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  2182  001AEC  010F               	movlb	15	; () banked
  2183  001AEE  8F19               	bsf	25,7,b	;volatile
  2184  001AF0  D003               	goto	l2532
  2185  001AF2                     l424:
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;inc\CANlib.h: 696: else
  2189                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  2190  001AF2  010F               	movlb	15	; () banked
  2191  001AF4  9F19               	bcf	25,7,b	;volatile
  2192  001AF6  D000               	goto	l2532
  2193  001AF8                     l2532:
  2194                           
  2195                           ; BSR set to: 15
  2196                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  2197  001AF8  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  2198  001AFC  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2199  001B00  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2200  001B04  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2201  001B08  0E16               	movlw	22
  2202  001B0A  D006               	goto	u2220
  2203  001B0C                     u2225:
  2204  001B0C  0100               	movlb	0	; () banked
  2205  001B0E  90D8               	bcf	status,0,c
  2206  001B10  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2207  001B12  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2208  001B14  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2209  001B16  3377               	rrcf	??_CANSetMask& (0+255),f,b
  2210  001B18                     u2220:
  2211  001B18  2EE8               	decfsz	wreg,f,c
  2212  001B1A  D7F8               	goto	u2225
  2213  001B1C  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  2214  001B20  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2215  001B24  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2216  001B28  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  2220  001B2C  0100               	movlb	0	; () banked
  2221  001B2E  517C               	movf	CANSetMask@tamp& (0+255),w,b
  2222  001B30  0100               	movlb	0	; () banked
  2223  001B32  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  2224  001B34  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2225  001B36  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2226  001B38  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  2230  001B3A  C07C  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2231  001B3E  D000               	goto	l2538
  2232  001B40                     l2538:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;inc\CANlib.h: 702: }
  2236                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2237  001B40  0E02               	movlw	2
  2238  001B42  0100               	movlb	0	; () banked
  2239  001B44  197B               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2240  001B46  A4D8               	btfss	status,2,c
  2241  001B48  D089               	goto	l437
  2242                           
  2243                           ; BSR set to: 0
  2244  001B4A  0EF7               	movlw	247
  2245  001B4C  0100               	movlb	0	; () banked
  2246  001B4E  1976               	xorwf	CANSetMask@type& (0+255),w,b
  2247  001B50  A4D8               	btfss	status,2,c
  2248  001B52  D084               	goto	l437
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;inc\CANlib.h: 705: {
  2252                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  2253  001B54  0100               	movlb	0	; () banked
  2254  001B56  5172               	movf	CANSetMask@mask& (0+255),w,b
  2255  001B58  0100               	movlb	0	; () banked
  2256  001B5A  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  2257  001B5C  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2258  001B5E  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2259  001B60  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  2263  001B62  C07C  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  2267  001B66  0E00               	movlw	0
  2268  001B68  0100               	movlb	0	; () banked
  2269  001B6A  1572               	andwf	CANSetMask@mask& (0+255),w,b
  2270  001B6C  0100               	movlb	0	; () banked
  2271  001B6E  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  2272  001B70  0EFF               	movlw	255
  2273  001B72  0100               	movlb	0	; () banked
  2274  001B74  1573               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2275  001B76  0100               	movlb	0	; () banked
  2276  001B78  6F7D               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2277  001B7A  0E00               	movlw	0
  2278  001B7C  0100               	movlb	0	; () banked
  2279  001B7E  1574               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2280  001B80  0100               	movlb	0	; () banked
  2281  001B82  6F7E               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2282  001B84  0E00               	movlw	0
  2283  001B86  0100               	movlb	0	; () banked
  2284  001B88  1575               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2285  001B8A  0100               	movlb	0	; () banked
  2286  001B8C  6F7F               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  2290  001B8E  C07C  F077         	movff	CANSetMask@tamp,??_CANSetMask
  2291  001B92  C07D  F078         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2292  001B96  C07E  F079         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2293  001B9A  C07F  F07A         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2294  001B9E  C078  F077         	movff	??_CANSetMask+1,??_CANSetMask
  2295  001BA2  C079  F078         	movff	??_CANSetMask+2,??_CANSetMask+1
  2296  001BA6  C07A  F079         	movff	??_CANSetMask+3,??_CANSetMask+2
  2297  001BAA  0100               	movlb	0	; () banked
  2298  001BAC  6B7A               	clrf	(??_CANSetMask+3)& (0+255),b
  2299  001BAE  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  2300  001BB2  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2301  001BB6  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2302  001BBA  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  2306  001BBE  C07C  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  2310  001BC2  0100               	movlb	0	; () banked
  2311  001BC4  A174               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2312  001BC6  D003               	goto	l427
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  2316  001BC8  010F               	movlb	15	; () banked
  2317  001BCA  811D               	bsf	29,0,b	;volatile
  2318  001BCC  D002               	goto	l428
  2319  001BCE                     l427:
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;inc\CANlib.h: 715: else
  2323                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  2324  001BCE  010F               	movlb	15	; () banked
  2325  001BD0  911D               	bcf	29,0,b	;volatile
  2326  001BD2                     l428:
  2327                           
  2328                           ; BSR set to: 15
  2329                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  2330  001BD2  0100               	movlb	0	; () banked
  2331  001BD4  A374               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2332  001BD6  D003               	goto	l429
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  2336  001BD8  010F               	movlb	15	; () banked
  2337  001BDA  831D               	bsf	29,1,b	;volatile
  2338  001BDC  D002               	goto	l430
  2339  001BDE                     l429:
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;inc\CANlib.h: 720: else
  2343                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  2344  001BDE  010F               	movlb	15	; () banked
  2345  001BE0  931D               	bcf	29,1,b	;volatile
  2346  001BE2                     l430:
  2347                           
  2348                           ; BSR set to: 15
  2349                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  2350  001BE2  0100               	movlb	0	; () banked
  2351  001BE4  A574               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2352  001BE6  D003               	goto	l431
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  2356  001BE8  010F               	movlb	15	; () banked
  2357  001BEA  8B1D               	bsf	29,5,b	;volatile
  2358  001BEC  D002               	goto	l432
  2359  001BEE                     l431:
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;inc\CANlib.h: 725: else
  2363                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  2364  001BEE  010F               	movlb	15	; () banked
  2365  001BF0  9B1D               	bcf	29,5,b	;volatile
  2366  001BF2                     l432:
  2367                           
  2368                           ; BSR set to: 15
  2369                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  2370  001BF2  0100               	movlb	0	; () banked
  2371  001BF4  A774               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2372  001BF6  D003               	goto	l433
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  2376  001BF8  010F               	movlb	15	; () banked
  2377  001BFA  8D1D               	bsf	29,6,b	;volatile
  2378  001BFC  D002               	goto	l434
  2379  001BFE                     l433:
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;inc\CANlib.h: 730: else
  2383                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  2384  001BFE  010F               	movlb	15	; () banked
  2385  001C00  9D1D               	bcf	29,6,b	;volatile
  2386  001C02                     l434:
  2387                           
  2388                           ; BSR set to: 15
  2389                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  2390  001C02  0100               	movlb	0	; () banked
  2391  001C04  A974               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2392  001C06  D003               	goto	l435
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  2396  001C08  010F               	movlb	15	; () banked
  2397  001C0A  8F1D               	bsf	29,7,b	;volatile
  2398  001C0C  D003               	goto	l2564
  2399  001C0E                     l435:
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;inc\CANlib.h: 735: else
  2403                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  2404  001C0E  010F               	movlb	15	; () banked
  2405  001C10  9F1D               	bcf	29,7,b	;volatile
  2406  001C12  D000               	goto	l2564
  2407  001C14                     l2564:
  2408                           
  2409                           ; BSR set to: 15
  2410                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  2411  001C14  C072  F077         	movff	CANSetMask@mask,??_CANSetMask
  2412  001C18  C073  F078         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2413  001C1C  C074  F079         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2414  001C20  C075  F07A         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2415  001C24  0E16               	movlw	22
  2416  001C26  D006               	goto	u2300
  2417  001C28                     u2305:
  2418  001C28  0100               	movlb	0	; () banked
  2419  001C2A  90D8               	bcf	status,0,c
  2420  001C2C  337A               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2421  001C2E  3379               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2422  001C30  3378               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2423  001C32  3377               	rrcf	??_CANSetMask& (0+255),f,b
  2424  001C34                     u2300:
  2425  001C34  2EE8               	decfsz	wreg,f,c
  2426  001C36  D7F8               	goto	u2305
  2427  001C38  C077  F07C         	movff	??_CANSetMask,CANSetMask@tamp
  2428  001C3C  C078  F07D         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2429  001C40  C079  F07E         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2430  001C44  C07A  F07F         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  2434  001C48  0100               	movlb	0	; () banked
  2435  001C4A  517C               	movf	CANSetMask@tamp& (0+255),w,b
  2436  001C4C  0100               	movlb	0	; () banked
  2437  001C4E  6F7C               	movwf	CANSetMask@tamp& (0+255),b
  2438  001C50  6B7D               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2439  001C52  6B7E               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2440  001C54  6B7F               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  2444  001C56  C07C  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2445  001C5A  D000               	goto	l437
  2446  001C5C                     l437:
  2447                           
  2448                           ; BSR set to: 0
  2449  001C5C  0012               	return		;funcret
  2450  001C5E                     __end_of_CANSetMask:
  2451                           	opt stack 0
  2452                           tblptru	equ	0xFF8
  2453                           tblptrh	equ	0xFF7
  2454                           tblptrl	equ	0xFF6
  2455                           tablat	equ	0xFF5
  2456                           prodh	equ	0xFF4
  2457                           prodl	equ	0xFF3
  2458                           intcon	equ	0xFF2
  2459                           intcon2	equ	0xFF1
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           postdec1	equ	0xFE5
  2463                           fsr1l	equ	0xFE1
  2464                           status	equ	0xFD8
  2465                           
  2466 ;; *************** function _CANSetFilter *****************
  2467 ;; Defined at:
  2468 ;;		line 748 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  numBuffer       1    wreg     enum E16922
  2471 ;;  filter          4   18[BANK0 ] unsigned long 
  2472 ;;  type            1   22[BANK0 ] enum E16885
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  numBuffer       1   27[BANK0 ] enum E16922
  2475 ;;  tamp            4   28[BANK0 ] unsigned long 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;		None               void
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2485 ;;      Params:         0       5       0       0
  2486 ;;      Locals:         0       5       0       0
  2487 ;;      Temps:          0       4       0       0
  2488 ;;      Totals:         0      14       0       0
  2489 ;;Total ram usage:       14 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    4
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_CANInitialize
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text7
  2500  0001B8                     __ptext7:
  2501                           	opt stack 0
  2502  0001B8                     _CANSetFilter:
  2503                           	opt stack 24
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;incstack = 0
  2507                           ;CANSetFilter@numBuffer stored from wreg
  2508  0001B8  0100               	movlb	0	; () banked
  2509  0001BA  6F7B               	movwf	CANSetFilter@numBuffer& (0+255),b
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;inc\CANlib.h: 750: unsigned long tamp;
  2513                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  2514  0001BC  0100               	movlb	0	; () banked
  2515  0001BE  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  2516  0001C0  0100               	movlb	0	; () banked
  2517  0001C2  A4D8               	btfss	status,2,c
  2518  0001C4  D059               	goto	l2588
  2519                           
  2520                           ; BSR set to: 0
  2521  0001C6  0100               	movlb	0	; () banked
  2522  0001C8  2976               	incf	CANSetFilter@type& (0+255),w,b
  2523  0001CA  A4D8               	btfss	status,2,c
  2524  0001CC  D055               	goto	l2588
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;inc\CANlib.h: 753: {
  2528                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  2529  0001CE  010F               	movlb	15	; () banked
  2530  0001D0  9701               	bcf	1,3,b	;volatile
  2531                           
  2532                           ; BSR set to: 15
  2533                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  2534  0001D2  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  2535  0001D6  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2536  0001DA  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2537  0001DE  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2538  0001E2  0E04               	movlw	4
  2539  0001E4  D006               	goto	u2330
  2540  0001E6                     u2335:
  2541  0001E6  0100               	movlb	0	; () banked
  2542  0001E8  90D8               	bcf	status,0,c
  2543  0001EA  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2544  0001EC  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2545  0001EE  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2546  0001F0  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  2547  0001F2                     u2330:
  2548  0001F2  2EE8               	decfsz	wreg,f,c
  2549  0001F4  D7F8               	goto	u2335
  2550  0001F6  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2551  0001FA  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2552  0001FE  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2553  000202  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  2557  000206  0100               	movlb	0	; () banked
  2558  000208  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  2559  00020A  0100               	movlb	0	; () banked
  2560  00020C  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  2561  00020E  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2562  000210  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2563  000212  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  2567  000214  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  2571  000218  0E07               	movlw	7
  2572  00021A  0100               	movlb	0	; () banked
  2573  00021C  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  2574  00021E  0100               	movlb	0	; () banked
  2575  000220  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  2576  000222  0E00               	movlw	0
  2577  000224  0100               	movlb	0	; () banked
  2578  000226  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2579  000228  0100               	movlb	0	; () banked
  2580  00022A  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2581  00022C  0E00               	movlw	0
  2582  00022E  0100               	movlb	0	; () banked
  2583  000230  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2584  000232  0100               	movlb	0	; () banked
  2585  000234  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2586  000236  0E00               	movlw	0
  2587  000238  0100               	movlb	0	; () banked
  2588  00023A  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2589  00023C  0100               	movlb	0	; () banked
  2590  00023E  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  2594  000240  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  2595  000244  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2596  000248  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2597  00024C  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2598  000250  0E05               	movlw	5
  2599  000252                     u2345:
  2600  000252  90D8               	bcf	status,0,c
  2601  000254  0100               	movlb	0	; () banked
  2602  000256  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  2603  000258  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2604  00025A  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2605  00025C  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2606  00025E  2EE8               	decfsz	wreg,f,c
  2607  000260  D7F8               	goto	u2345
  2608  000262  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2609  000266  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2610  00026A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2611  00026E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  2615  000272  C07C  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  2616  000276  D000               	goto	l2588
  2617  000278                     l2588:
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;inc\CANlib.h: 763: }
  2621                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  2622  000278  0100               	movlb	0	; () banked
  2623  00027A  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  2624  00027C  A4D8               	btfss	status,2,c
  2625  00027E  D059               	goto	l2606
  2626                           
  2627                           ; BSR set to: 0
  2628  000280  0100               	movlb	0	; () banked
  2629  000282  2976               	incf	CANSetFilter@type& (0+255),w,b
  2630  000284  A4D8               	btfss	status,2,c
  2631  000286  D055               	goto	l2606
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;inc\CANlib.h: 766: {
  2635                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  2636  000288  010F               	movlb	15	; () banked
  2637  00028A  9705               	bcf	5,3,b	;volatile
  2638                           
  2639                           ; BSR set to: 15
  2640                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  2641  00028C  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  2642  000290  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2643  000294  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2644  000298  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2645  00029C  0E04               	movlw	4
  2646  00029E  D006               	goto	u2370
  2647  0002A0                     u2375:
  2648  0002A0  0100               	movlb	0	; () banked
  2649  0002A2  90D8               	bcf	status,0,c
  2650  0002A4  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2651  0002A6  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2652  0002A8  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2653  0002AA  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  2654  0002AC                     u2370:
  2655  0002AC  2EE8               	decfsz	wreg,f,c
  2656  0002AE  D7F8               	goto	u2375
  2657  0002B0  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2658  0002B4  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2659  0002B8  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2660  0002BC  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  2664  0002C0  0100               	movlb	0	; () banked
  2665  0002C2  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  2666  0002C4  0100               	movlb	0	; () banked
  2667  0002C6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  2668  0002C8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2669  0002CA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2670  0002CC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  2674  0002CE  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  2678  0002D2  0E07               	movlw	7
  2679  0002D4  0100               	movlb	0	; () banked
  2680  0002D6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  2681  0002D8  0100               	movlb	0	; () banked
  2682  0002DA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  2683  0002DC  0E00               	movlw	0
  2684  0002DE  0100               	movlb	0	; () banked
  2685  0002E0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2686  0002E2  0100               	movlb	0	; () banked
  2687  0002E4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2688  0002E6  0E00               	movlw	0
  2689  0002E8  0100               	movlb	0	; () banked
  2690  0002EA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2691  0002EC  0100               	movlb	0	; () banked
  2692  0002EE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2693  0002F0  0E00               	movlw	0
  2694  0002F2  0100               	movlb	0	; () banked
  2695  0002F4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2696  0002F6  0100               	movlb	0	; () banked
  2697  0002F8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  2701  0002FA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  2702  0002FE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2703  000302  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2704  000306  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2705  00030A  0E05               	movlw	5
  2706  00030C                     u2385:
  2707  00030C  90D8               	bcf	status,0,c
  2708  00030E  0100               	movlb	0	; () banked
  2709  000310  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  2710  000312  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2711  000314  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2712  000316  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2713  000318  2EE8               	decfsz	wreg,f,c
  2714  00031A  D7F8               	goto	u2385
  2715  00031C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2716  000320  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2717  000324  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2718  000328  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  2722  00032C  C07C  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  2723  000330  D000               	goto	l2606
  2724  000332                     l2606:
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;inc\CANlib.h: 776: }
  2728                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  2729  000332  0E02               	movlw	2
  2730  000334  0100               	movlb	0	; () banked
  2731  000336  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  2732  000338  A4D8               	btfss	status,2,c
  2733  00033A  D059               	goto	l2624
  2734                           
  2735                           ; BSR set to: 0
  2736  00033C  0100               	movlb	0	; () banked
  2737  00033E  2976               	incf	CANSetFilter@type& (0+255),w,b
  2738  000340  A4D8               	btfss	status,2,c
  2739  000342  D055               	goto	l2624
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;inc\CANlib.h: 779: {
  2743                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  2744  000344  010F               	movlb	15	; () banked
  2745  000346  9709               	bcf	9,3,b	;volatile
  2746                           
  2747                           ; BSR set to: 15
  2748                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  2749  000348  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  2750  00034C  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2751  000350  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2752  000354  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2753  000358  0E04               	movlw	4
  2754  00035A  D006               	goto	u2410
  2755  00035C                     u2415:
  2756  00035C  0100               	movlb	0	; () banked
  2757  00035E  90D8               	bcf	status,0,c
  2758  000360  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2759  000362  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2760  000364  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2761  000366  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  2762  000368                     u2410:
  2763  000368  2EE8               	decfsz	wreg,f,c
  2764  00036A  D7F8               	goto	u2415
  2765  00036C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2766  000370  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2767  000374  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2768  000378  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  2772  00037C  0100               	movlb	0	; () banked
  2773  00037E  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  2774  000380  0100               	movlb	0	; () banked
  2775  000382  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  2776  000384  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2777  000386  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2778  000388  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  2782  00038A  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  2786  00038E  0E07               	movlw	7
  2787  000390  0100               	movlb	0	; () banked
  2788  000392  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  2789  000394  0100               	movlb	0	; () banked
  2790  000396  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  2791  000398  0E00               	movlw	0
  2792  00039A  0100               	movlb	0	; () banked
  2793  00039C  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2794  00039E  0100               	movlb	0	; () banked
  2795  0003A0  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2796  0003A2  0E00               	movlw	0
  2797  0003A4  0100               	movlb	0	; () banked
  2798  0003A6  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2799  0003A8  0100               	movlb	0	; () banked
  2800  0003AA  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2801  0003AC  0E00               	movlw	0
  2802  0003AE  0100               	movlb	0	; () banked
  2803  0003B0  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2804  0003B2  0100               	movlb	0	; () banked
  2805  0003B4  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  2809  0003B6  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  2810  0003BA  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2811  0003BE  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2812  0003C2  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2813  0003C6  0E05               	movlw	5
  2814  0003C8                     u2425:
  2815  0003C8  90D8               	bcf	status,0,c
  2816  0003CA  0100               	movlb	0	; () banked
  2817  0003CC  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  2818  0003CE  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2819  0003D0  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2820  0003D2  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2821  0003D4  2EE8               	decfsz	wreg,f,c
  2822  0003D6  D7F8               	goto	u2425
  2823  0003D8  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2824  0003DC  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2825  0003E0  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2826  0003E4  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  2830  0003E8  C07C  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  2831  0003EC  D000               	goto	l2624
  2832  0003EE                     l2624:
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;inc\CANlib.h: 789: }
  2836                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  2837  0003EE  0E03               	movlw	3
  2838  0003F0  0100               	movlb	0	; () banked
  2839  0003F2  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  2840  0003F4  A4D8               	btfss	status,2,c
  2841  0003F6  D059               	goto	l2642
  2842                           
  2843                           ; BSR set to: 0
  2844  0003F8  0100               	movlb	0	; () banked
  2845  0003FA  2976               	incf	CANSetFilter@type& (0+255),w,b
  2846  0003FC  A4D8               	btfss	status,2,c
  2847  0003FE  D055               	goto	l2642
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;inc\CANlib.h: 792: {
  2851                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  2852  000400  010F               	movlb	15	; () banked
  2853  000402  970D               	bcf	13,3,b	;volatile
  2854                           
  2855                           ; BSR set to: 15
  2856                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  2857  000404  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  2858  000408  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2859  00040C  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2860  000410  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2861  000414  0E04               	movlw	4
  2862  000416  D006               	goto	u2450
  2863  000418                     u2455:
  2864  000418  0100               	movlb	0	; () banked
  2865  00041A  90D8               	bcf	status,0,c
  2866  00041C  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2867  00041E  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2868  000420  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2869  000422  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  2870  000424                     u2450:
  2871  000424  2EE8               	decfsz	wreg,f,c
  2872  000426  D7F8               	goto	u2455
  2873  000428  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2874  00042C  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2875  000430  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2876  000434  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  2880  000438  0100               	movlb	0	; () banked
  2881  00043A  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  2882  00043C  0100               	movlb	0	; () banked
  2883  00043E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  2884  000440  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2885  000442  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2886  000444  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  2890  000446  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  2894  00044A  0E07               	movlw	7
  2895  00044C  0100               	movlb	0	; () banked
  2896  00044E  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  2897  000450  0100               	movlb	0	; () banked
  2898  000452  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  2899  000454  0E00               	movlw	0
  2900  000456  0100               	movlb	0	; () banked
  2901  000458  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2902  00045A  0100               	movlb	0	; () banked
  2903  00045C  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2904  00045E  0E00               	movlw	0
  2905  000460  0100               	movlb	0	; () banked
  2906  000462  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2907  000464  0100               	movlb	0	; () banked
  2908  000466  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2909  000468  0E00               	movlw	0
  2910  00046A  0100               	movlb	0	; () banked
  2911  00046C  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2912  00046E  0100               	movlb	0	; () banked
  2913  000470  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  2917  000472  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  2918  000476  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2919  00047A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2920  00047E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2921  000482  0E05               	movlw	5
  2922  000484                     u2465:
  2923  000484  90D8               	bcf	status,0,c
  2924  000486  0100               	movlb	0	; () banked
  2925  000488  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  2926  00048A  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2927  00048C  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2928  00048E  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2929  000490  2EE8               	decfsz	wreg,f,c
  2930  000492  D7F8               	goto	u2465
  2931  000494  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2932  000498  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2933  00049C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2934  0004A0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  2938  0004A4  C07C  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  2939  0004A8  D000               	goto	l2642
  2940  0004AA                     l2642:
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;inc\CANlib.h: 802: }
  2944                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  2945  0004AA  0E04               	movlw	4
  2946  0004AC  0100               	movlb	0	; () banked
  2947  0004AE  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  2948  0004B0  A4D8               	btfss	status,2,c
  2949  0004B2  D059               	goto	l2660
  2950                           
  2951                           ; BSR set to: 0
  2952  0004B4  0100               	movlb	0	; () banked
  2953  0004B6  2976               	incf	CANSetFilter@type& (0+255),w,b
  2954  0004B8  A4D8               	btfss	status,2,c
  2955  0004BA  D055               	goto	l2660
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;inc\CANlib.h: 805: {
  2959                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  2960  0004BC  010F               	movlb	15	; () banked
  2961  0004BE  9711               	bcf	17,3,b	;volatile
  2962                           
  2963                           ; BSR set to: 15
  2964                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  2965  0004C0  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  2966  0004C4  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2967  0004C8  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2968  0004CC  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2969  0004D0  0E04               	movlw	4
  2970  0004D2  D006               	goto	u2490
  2971  0004D4                     u2495:
  2972  0004D4  0100               	movlb	0	; () banked
  2973  0004D6  90D8               	bcf	status,0,c
  2974  0004D8  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2975  0004DA  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2976  0004DC  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2977  0004DE  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  2978  0004E0                     u2490:
  2979  0004E0  2EE8               	decfsz	wreg,f,c
  2980  0004E2  D7F8               	goto	u2495
  2981  0004E4  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  2982  0004E8  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2983  0004EC  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2984  0004F0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  2988  0004F4  0100               	movlb	0	; () banked
  2989  0004F6  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  2990  0004F8  0100               	movlb	0	; () banked
  2991  0004FA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  2992  0004FC  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2993  0004FE  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2994  000500  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  2998  000502  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  3002  000506  0E07               	movlw	7
  3003  000508  0100               	movlb	0	; () banked
  3004  00050A  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3005  00050C  0100               	movlb	0	; () banked
  3006  00050E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3007  000510  0E00               	movlw	0
  3008  000512  0100               	movlb	0	; () banked
  3009  000514  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3010  000516  0100               	movlb	0	; () banked
  3011  000518  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3012  00051A  0E00               	movlw	0
  3013  00051C  0100               	movlb	0	; () banked
  3014  00051E  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3015  000520  0100               	movlb	0	; () banked
  3016  000522  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3017  000524  0E00               	movlw	0
  3018  000526  0100               	movlb	0	; () banked
  3019  000528  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3020  00052A  0100               	movlb	0	; () banked
  3021  00052C  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  3025  00052E  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  3026  000532  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3027  000536  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3028  00053A  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3029  00053E  0E05               	movlw	5
  3030  000540                     u2505:
  3031  000540  90D8               	bcf	status,0,c
  3032  000542  0100               	movlb	0	; () banked
  3033  000544  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  3034  000546  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3035  000548  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3036  00054A  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3037  00054C  2EE8               	decfsz	wreg,f,c
  3038  00054E  D7F8               	goto	u2505
  3039  000550  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3040  000554  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3041  000558  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3042  00055C  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3046  000560  C07C  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3047  000564  D000               	goto	l2660
  3048  000566                     l2660:
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;inc\CANlib.h: 815: }
  3052                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3053  000566  0E05               	movlw	5
  3054  000568  0100               	movlb	0	; () banked
  3055  00056A  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3056  00056C  A4D8               	btfss	status,2,c
  3057  00056E  D059               	goto	l2678
  3058                           
  3059                           ; BSR set to: 0
  3060  000570  0100               	movlb	0	; () banked
  3061  000572  2976               	incf	CANSetFilter@type& (0+255),w,b
  3062  000574  A4D8               	btfss	status,2,c
  3063  000576  D055               	goto	l2678
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;inc\CANlib.h: 818: {
  3067                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3068  000578  010F               	movlb	15	; () banked
  3069  00057A  9715               	bcf	21,3,b	;volatile
  3070                           
  3071                           ; BSR set to: 15
  3072                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  3073  00057C  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3074  000580  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3075  000584  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3076  000588  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3077  00058C  0E04               	movlw	4
  3078  00058E  D006               	goto	u2530
  3079  000590                     u2535:
  3080  000590  0100               	movlb	0	; () banked
  3081  000592  90D8               	bcf	status,0,c
  3082  000594  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3083  000596  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3084  000598  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3085  00059A  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  3086  00059C                     u2530:
  3087  00059C  2EE8               	decfsz	wreg,f,c
  3088  00059E  D7F8               	goto	u2535
  3089  0005A0  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3090  0005A4  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3091  0005A8  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3092  0005AC  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  3096  0005B0  0100               	movlb	0	; () banked
  3097  0005B2  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  3098  0005B4  0100               	movlb	0	; () banked
  3099  0005B6  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3100  0005B8  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3101  0005BA  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3102  0005BC  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3106  0005BE  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  3110  0005C2  0E07               	movlw	7
  3111  0005C4  0100               	movlb	0	; () banked
  3112  0005C6  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3113  0005C8  0100               	movlb	0	; () banked
  3114  0005CA  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3115  0005CC  0E00               	movlw	0
  3116  0005CE  0100               	movlb	0	; () banked
  3117  0005D0  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3118  0005D2  0100               	movlb	0	; () banked
  3119  0005D4  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3120  0005D6  0E00               	movlw	0
  3121  0005D8  0100               	movlb	0	; () banked
  3122  0005DA  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3123  0005DC  0100               	movlb	0	; () banked
  3124  0005DE  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3125  0005E0  0E00               	movlw	0
  3126  0005E2  0100               	movlb	0	; () banked
  3127  0005E4  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3128  0005E6  0100               	movlb	0	; () banked
  3129  0005E8  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  3133  0005EA  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  3134  0005EE  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3135  0005F2  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3136  0005F6  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3137  0005FA  0E05               	movlw	5
  3138  0005FC                     u2545:
  3139  0005FC  90D8               	bcf	status,0,c
  3140  0005FE  0100               	movlb	0	; () banked
  3141  000600  3777               	rlcf	??_CANSetFilter& (0+255),f,b
  3142  000602  3778               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3143  000604  3779               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3144  000606  377A               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3145  000608  2EE8               	decfsz	wreg,f,c
  3146  00060A  D7F8               	goto	u2545
  3147  00060C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3148  000610  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3149  000614  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3150  000618  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3154  00061C  C07C  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3155  000620  D000               	goto	l2678
  3156  000622                     l2678:
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;inc\CANlib.h: 828: }
  3160                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3161  000622  0100               	movlb	0	; () banked
  3162  000624  517B               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3163  000626  0100               	movlb	0	; () banked
  3164  000628  A4D8               	btfss	status,2,c
  3165  00062A  D08B               	goto	l2712
  3166                           
  3167                           ; BSR set to: 0
  3168  00062C  0EF7               	movlw	247
  3169  00062E  0100               	movlb	0	; () banked
  3170  000630  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  3171  000632  A4D8               	btfss	status,2,c
  3172  000634  D086               	goto	l2712
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;inc\CANlib.h: 832: {
  3176                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3177  000636  010F               	movlb	15	; () banked
  3178  000638  8701               	bsf	1,3,b	;volatile
  3179                           
  3180                           ; BSR set to: 15
  3181                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  3182  00063A  0100               	movlb	0	; () banked
  3183  00063C  5172               	movf	CANSetFilter@filter& (0+255),w,b
  3184  00063E  0100               	movlb	0	; () banked
  3185  000640  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3186  000642  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3187  000644  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3188  000646  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3192  000648  C07C  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  3196  00064C  0E00               	movlw	0
  3197  00064E  0100               	movlb	0	; () banked
  3198  000650  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3199  000652  0100               	movlb	0	; () banked
  3200  000654  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3201  000656  0EFF               	movlw	255
  3202  000658  0100               	movlb	0	; () banked
  3203  00065A  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3204  00065C  0100               	movlb	0	; () banked
  3205  00065E  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3206  000660  0E00               	movlw	0
  3207  000662  0100               	movlb	0	; () banked
  3208  000664  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3209  000666  0100               	movlb	0	; () banked
  3210  000668  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3211  00066A  0E00               	movlw	0
  3212  00066C  0100               	movlb	0	; () banked
  3213  00066E  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3214  000670  0100               	movlb	0	; () banked
  3215  000672  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  3219  000674  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  3220  000678  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3221  00067C  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3222  000680  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3223  000684  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  3224  000688  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3225  00068C  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3226  000690  0100               	movlb	0	; () banked
  3227  000692  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  3228  000694  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3229  000698  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3230  00069C  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3231  0006A0  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  3235  0006A4  C07C  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  3239  0006A8  0100               	movlb	0	; () banked
  3240  0006AA  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3241  0006AC  D003               	goto	l447
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  3245  0006AE  010F               	movlb	15	; () banked
  3246  0006B0  8101               	bsf	1,0,b	;volatile
  3247  0006B2  D002               	goto	l448
  3248  0006B4                     l447:
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;inc\CANlib.h: 844: else
  3252                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  3253  0006B4  010F               	movlb	15	; () banked
  3254  0006B6  9101               	bcf	1,0,b	;volatile
  3255  0006B8                     l448:
  3256                           
  3257                           ; BSR set to: 15
  3258                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  3259  0006B8  0100               	movlb	0	; () banked
  3260  0006BA  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3261  0006BC  D003               	goto	l449
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  3265  0006BE  010F               	movlb	15	; () banked
  3266  0006C0  8301               	bsf	1,1,b	;volatile
  3267  0006C2  D002               	goto	l450
  3268  0006C4                     l449:
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;inc\CANlib.h: 849: else
  3272                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  3273  0006C4  010F               	movlb	15	; () banked
  3274  0006C6  9301               	bcf	1,1,b	;volatile
  3275  0006C8                     l450:
  3276                           
  3277                           ; BSR set to: 15
  3278                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  3279  0006C8  0100               	movlb	0	; () banked
  3280  0006CA  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3281  0006CC  D003               	goto	l451
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  3285  0006CE  010F               	movlb	15	; () banked
  3286  0006D0  8B01               	bsf	1,5,b	;volatile
  3287  0006D2  D002               	goto	l452
  3288  0006D4                     l451:
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;inc\CANlib.h: 854: else
  3292                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  3293  0006D4  010F               	movlb	15	; () banked
  3294  0006D6  9B01               	bcf	1,5,b	;volatile
  3295  0006D8                     l452:
  3296                           
  3297                           ; BSR set to: 15
  3298                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  3299  0006D8  0100               	movlb	0	; () banked
  3300  0006DA  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3301  0006DC  D003               	goto	l453
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  3305  0006DE  010F               	movlb	15	; () banked
  3306  0006E0  8D01               	bsf	1,6,b	;volatile
  3307  0006E2  D002               	goto	l454
  3308  0006E4                     l453:
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;inc\CANlib.h: 859: else
  3312                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  3313  0006E4  010F               	movlb	15	; () banked
  3314  0006E6  9D01               	bcf	1,6,b	;volatile
  3315  0006E8                     l454:
  3316                           
  3317                           ; BSR set to: 15
  3318                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  3319  0006E8  0100               	movlb	0	; () banked
  3320  0006EA  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3321  0006EC  D003               	goto	l455
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  3325  0006EE  010F               	movlb	15	; () banked
  3326  0006F0  8F01               	bsf	1,7,b	;volatile
  3327  0006F2  D003               	goto	l2706
  3328  0006F4                     l455:
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;inc\CANlib.h: 864: else
  3332                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  3333  0006F4  010F               	movlb	15	; () banked
  3334  0006F6  9F01               	bcf	1,7,b	;volatile
  3335  0006F8  D000               	goto	l2706
  3336  0006FA                     l2706:
  3337                           
  3338                           ; BSR set to: 15
  3339                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  3340  0006FA  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3341  0006FE  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3342  000702  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3343  000706  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3344  00070A  0E16               	movlw	22
  3345  00070C  D006               	goto	u2620
  3346  00070E                     u2625:
  3347  00070E  0100               	movlb	0	; () banked
  3348  000710  90D8               	bcf	status,0,c
  3349  000712  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3350  000714  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3351  000716  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3352  000718  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  3353  00071A                     u2620:
  3354  00071A  2EE8               	decfsz	wreg,f,c
  3355  00071C  D7F8               	goto	u2625
  3356  00071E  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3357  000722  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3358  000726  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3359  00072A  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  3363  00072E  0100               	movlb	0	; () banked
  3364  000730  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  3365  000732  0100               	movlb	0	; () banked
  3366  000734  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3367  000736  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3368  000738  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3369  00073A  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  3373  00073C  C07C  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3374  000740  D000               	goto	l2712
  3375  000742                     l2712:
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;inc\CANlib.h: 870: }
  3379                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  3380  000742  0100               	movlb	0	; () banked
  3381  000744  057B               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3382  000746  A4D8               	btfss	status,2,c
  3383  000748  D08B               	goto	l2746
  3384                           
  3385                           ; BSR set to: 0
  3386  00074A  0EF7               	movlw	247
  3387  00074C  0100               	movlb	0	; () banked
  3388  00074E  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  3389  000750  A4D8               	btfss	status,2,c
  3390  000752  D086               	goto	l2746
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;inc\CANlib.h: 873: {
  3394                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  3395  000754  010F               	movlb	15	; () banked
  3396  000756  8705               	bsf	5,3,b	;volatile
  3397                           
  3398                           ; BSR set to: 15
  3399                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  3400  000758  0100               	movlb	0	; () banked
  3401  00075A  5172               	movf	CANSetFilter@filter& (0+255),w,b
  3402  00075C  0100               	movlb	0	; () banked
  3403  00075E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3404  000760  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3405  000762  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3406  000764  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  3410  000766  C07C  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  3414  00076A  0E00               	movlw	0
  3415  00076C  0100               	movlb	0	; () banked
  3416  00076E  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3417  000770  0100               	movlb	0	; () banked
  3418  000772  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3419  000774  0EFF               	movlw	255
  3420  000776  0100               	movlb	0	; () banked
  3421  000778  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3422  00077A  0100               	movlb	0	; () banked
  3423  00077C  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3424  00077E  0E00               	movlw	0
  3425  000780  0100               	movlb	0	; () banked
  3426  000782  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3427  000784  0100               	movlb	0	; () banked
  3428  000786  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3429  000788  0E00               	movlw	0
  3430  00078A  0100               	movlb	0	; () banked
  3431  00078C  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3432  00078E  0100               	movlb	0	; () banked
  3433  000790  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  3437  000792  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  3438  000796  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3439  00079A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3440  00079E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3441  0007A2  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  3442  0007A6  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3443  0007AA  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3444  0007AE  0100               	movlb	0	; () banked
  3445  0007B0  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  3446  0007B2  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3447  0007B6  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3448  0007BA  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3449  0007BE  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  3453  0007C2  C07C  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  3457  0007C6  0100               	movlb	0	; () banked
  3458  0007C8  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3459  0007CA  D003               	goto	l458
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  3463  0007CC  010F               	movlb	15	; () banked
  3464  0007CE  8105               	bsf	5,0,b	;volatile
  3465  0007D0  D002               	goto	l459
  3466  0007D2                     l458:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;inc\CANlib.h: 885: else
  3470                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  3471  0007D2  010F               	movlb	15	; () banked
  3472  0007D4  9105               	bcf	5,0,b	;volatile
  3473  0007D6                     l459:
  3474                           
  3475                           ; BSR set to: 15
  3476                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  3477  0007D6  0100               	movlb	0	; () banked
  3478  0007D8  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3479  0007DA  D003               	goto	l460
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  3483  0007DC  010F               	movlb	15	; () banked
  3484  0007DE  8305               	bsf	5,1,b	;volatile
  3485  0007E0  D002               	goto	l461
  3486  0007E2                     l460:
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;inc\CANlib.h: 890: else
  3490                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  3491  0007E2  010F               	movlb	15	; () banked
  3492  0007E4  9305               	bcf	5,1,b	;volatile
  3493  0007E6                     l461:
  3494                           
  3495                           ; BSR set to: 15
  3496                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  3497  0007E6  0100               	movlb	0	; () banked
  3498  0007E8  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3499  0007EA  D003               	goto	l462
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  3503  0007EC  010F               	movlb	15	; () banked
  3504  0007EE  8B05               	bsf	5,5,b	;volatile
  3505  0007F0  D002               	goto	l463
  3506  0007F2                     l462:
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;inc\CANlib.h: 895: else
  3510                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  3511  0007F2  010F               	movlb	15	; () banked
  3512  0007F4  9B05               	bcf	5,5,b	;volatile
  3513  0007F6                     l463:
  3514                           
  3515                           ; BSR set to: 15
  3516                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  3517  0007F6  0100               	movlb	0	; () banked
  3518  0007F8  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3519  0007FA  D003               	goto	l464
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  3523  0007FC  010F               	movlb	15	; () banked
  3524  0007FE  8D05               	bsf	5,6,b	;volatile
  3525  000800  D002               	goto	l465
  3526  000802                     l464:
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;inc\CANlib.h: 900: else
  3530                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  3531  000802  010F               	movlb	15	; () banked
  3532  000804  9D05               	bcf	5,6,b	;volatile
  3533  000806                     l465:
  3534                           
  3535                           ; BSR set to: 15
  3536                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  3537  000806  0100               	movlb	0	; () banked
  3538  000808  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3539  00080A  D003               	goto	l466
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  3543  00080C  010F               	movlb	15	; () banked
  3544  00080E  8F05               	bsf	5,7,b	;volatile
  3545  000810  D003               	goto	l2740
  3546  000812                     l466:
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;inc\CANlib.h: 905: else
  3550                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  3551  000812  010F               	movlb	15	; () banked
  3552  000814  9F05               	bcf	5,7,b	;volatile
  3553  000816  D000               	goto	l2740
  3554  000818                     l2740:
  3555                           
  3556                           ; BSR set to: 15
  3557                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  3558  000818  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3559  00081C  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3560  000820  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3561  000824  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3562  000828  0E16               	movlw	22
  3563  00082A  D006               	goto	u2700
  3564  00082C                     u2705:
  3565  00082C  0100               	movlb	0	; () banked
  3566  00082E  90D8               	bcf	status,0,c
  3567  000830  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3568  000832  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3569  000834  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3570  000836  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  3571  000838                     u2700:
  3572  000838  2EE8               	decfsz	wreg,f,c
  3573  00083A  D7F8               	goto	u2705
  3574  00083C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3575  000840  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3576  000844  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3577  000848  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  3581  00084C  0100               	movlb	0	; () banked
  3582  00084E  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  3583  000850  0100               	movlb	0	; () banked
  3584  000852  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3585  000854  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3586  000856  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3587  000858  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  3591  00085A  C07C  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3592  00085E  D000               	goto	l2746
  3593  000860                     l2746:
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;inc\CANlib.h: 911: }
  3597                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  3598  000860  0E02               	movlw	2
  3599  000862  0100               	movlb	0	; () banked
  3600  000864  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3601  000866  A4D8               	btfss	status,2,c
  3602  000868  D08B               	goto	l2780
  3603                           
  3604                           ; BSR set to: 0
  3605  00086A  0EF7               	movlw	247
  3606  00086C  0100               	movlb	0	; () banked
  3607  00086E  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  3608  000870  A4D8               	btfss	status,2,c
  3609  000872  D086               	goto	l2780
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;inc\CANlib.h: 915: {
  3613                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  3614  000874  010F               	movlb	15	; () banked
  3615  000876  8709               	bsf	9,3,b	;volatile
  3616                           
  3617                           ; BSR set to: 15
  3618                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  3619  000878  0100               	movlb	0	; () banked
  3620  00087A  5172               	movf	CANSetFilter@filter& (0+255),w,b
  3621  00087C  0100               	movlb	0	; () banked
  3622  00087E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3623  000880  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3624  000882  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3625  000884  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  3629  000886  C07C  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  3633  00088A  0E00               	movlw	0
  3634  00088C  0100               	movlb	0	; () banked
  3635  00088E  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3636  000890  0100               	movlb	0	; () banked
  3637  000892  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3638  000894  0EFF               	movlw	255
  3639  000896  0100               	movlb	0	; () banked
  3640  000898  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3641  00089A  0100               	movlb	0	; () banked
  3642  00089C  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3643  00089E  0E00               	movlw	0
  3644  0008A0  0100               	movlb	0	; () banked
  3645  0008A2  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3646  0008A4  0100               	movlb	0	; () banked
  3647  0008A6  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3648  0008A8  0E00               	movlw	0
  3649  0008AA  0100               	movlb	0	; () banked
  3650  0008AC  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3651  0008AE  0100               	movlb	0	; () banked
  3652  0008B0  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  3656  0008B2  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  3657  0008B6  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3658  0008BA  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3659  0008BE  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3660  0008C2  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  3661  0008C6  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3662  0008CA  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3663  0008CE  0100               	movlb	0	; () banked
  3664  0008D0  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  3665  0008D2  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3666  0008D6  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3667  0008DA  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3668  0008DE  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  3672  0008E2  C07C  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  3676  0008E6  0100               	movlb	0	; () banked
  3677  0008E8  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3678  0008EA  D003               	goto	l469
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  3682  0008EC  010F               	movlb	15	; () banked
  3683  0008EE  8109               	bsf	9,0,b	;volatile
  3684  0008F0  D002               	goto	l470
  3685  0008F2                     l469:
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;inc\CANlib.h: 927: else
  3689                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  3690  0008F2  010F               	movlb	15	; () banked
  3691  0008F4  9109               	bcf	9,0,b	;volatile
  3692  0008F6                     l470:
  3693                           
  3694                           ; BSR set to: 15
  3695                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  3696  0008F6  0100               	movlb	0	; () banked
  3697  0008F8  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3698  0008FA  D003               	goto	l471
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  3702  0008FC  010F               	movlb	15	; () banked
  3703  0008FE  8309               	bsf	9,1,b	;volatile
  3704  000900  D002               	goto	l472
  3705  000902                     l471:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;inc\CANlib.h: 932: else
  3709                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  3710  000902  010F               	movlb	15	; () banked
  3711  000904  9309               	bcf	9,1,b	;volatile
  3712  000906                     l472:
  3713                           
  3714                           ; BSR set to: 15
  3715                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  3716  000906  0100               	movlb	0	; () banked
  3717  000908  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3718  00090A  D003               	goto	l473
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  3722  00090C  010F               	movlb	15	; () banked
  3723  00090E  8B09               	bsf	9,5,b	;volatile
  3724  000910  D002               	goto	l474
  3725  000912                     l473:
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;inc\CANlib.h: 937: else
  3729                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  3730  000912  010F               	movlb	15	; () banked
  3731  000914  9B09               	bcf	9,5,b	;volatile
  3732  000916                     l474:
  3733                           
  3734                           ; BSR set to: 15
  3735                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  3736  000916  0100               	movlb	0	; () banked
  3737  000918  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3738  00091A  D003               	goto	l475
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  3742  00091C  010F               	movlb	15	; () banked
  3743  00091E  8D09               	bsf	9,6,b	;volatile
  3744  000920  D002               	goto	l476
  3745  000922                     l475:
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;inc\CANlib.h: 942: else
  3749                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  3750  000922  010F               	movlb	15	; () banked
  3751  000924  9D09               	bcf	9,6,b	;volatile
  3752  000926                     l476:
  3753                           
  3754                           ; BSR set to: 15
  3755                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  3756  000926  0100               	movlb	0	; () banked
  3757  000928  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3758  00092A  D003               	goto	l477
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  3762  00092C  010F               	movlb	15	; () banked
  3763  00092E  8F09               	bsf	9,7,b	;volatile
  3764  000930  D003               	goto	l2774
  3765  000932                     l477:
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;inc\CANlib.h: 947: else
  3769                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  3770  000932  010F               	movlb	15	; () banked
  3771  000934  9F09               	bcf	9,7,b	;volatile
  3772  000936  D000               	goto	l2774
  3773  000938                     l2774:
  3774                           
  3775                           ; BSR set to: 15
  3776                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  3777  000938  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3778  00093C  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3779  000940  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3780  000944  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3781  000948  0E16               	movlw	22
  3782  00094A  D006               	goto	u2780
  3783  00094C                     u2785:
  3784  00094C  0100               	movlb	0	; () banked
  3785  00094E  90D8               	bcf	status,0,c
  3786  000950  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3787  000952  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3788  000954  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3789  000956  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  3790  000958                     u2780:
  3791  000958  2EE8               	decfsz	wreg,f,c
  3792  00095A  D7F8               	goto	u2785
  3793  00095C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3794  000960  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3795  000964  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3796  000968  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  3800  00096C  0100               	movlb	0	; () banked
  3801  00096E  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  3802  000970  0100               	movlb	0	; () banked
  3803  000972  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3804  000974  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3805  000976  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3806  000978  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  3810  00097A  C07C  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3811  00097E  D000               	goto	l2780
  3812  000980                     l2780:
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;inc\CANlib.h: 953: }
  3816                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  3817  000980  0E03               	movlw	3
  3818  000982  0100               	movlb	0	; () banked
  3819  000984  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3820  000986  A4D8               	btfss	status,2,c
  3821  000988  D08B               	goto	l2814
  3822                           
  3823                           ; BSR set to: 0
  3824  00098A  0EF7               	movlw	247
  3825  00098C  0100               	movlb	0	; () banked
  3826  00098E  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  3827  000990  A4D8               	btfss	status,2,c
  3828  000992  D086               	goto	l2814
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;inc\CANlib.h: 956: {
  3832                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  3833  000994  010F               	movlb	15	; () banked
  3834  000996  870D               	bsf	13,3,b	;volatile
  3835                           
  3836                           ; BSR set to: 15
  3837                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  3838  000998  0100               	movlb	0	; () banked
  3839  00099A  5172               	movf	CANSetFilter@filter& (0+255),w,b
  3840  00099C  0100               	movlb	0	; () banked
  3841  00099E  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3842  0009A0  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3843  0009A2  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3844  0009A4  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  3848  0009A6  C07C  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  3852  0009AA  0E00               	movlw	0
  3853  0009AC  0100               	movlb	0	; () banked
  3854  0009AE  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  3855  0009B0  0100               	movlb	0	; () banked
  3856  0009B2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  3857  0009B4  0EFF               	movlw	255
  3858  0009B6  0100               	movlb	0	; () banked
  3859  0009B8  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3860  0009BA  0100               	movlb	0	; () banked
  3861  0009BC  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3862  0009BE  0E00               	movlw	0
  3863  0009C0  0100               	movlb	0	; () banked
  3864  0009C2  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3865  0009C4  0100               	movlb	0	; () banked
  3866  0009C6  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3867  0009C8  0E00               	movlw	0
  3868  0009CA  0100               	movlb	0	; () banked
  3869  0009CC  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3870  0009CE  0100               	movlb	0	; () banked
  3871  0009D0  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  3875  0009D2  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  3876  0009D6  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3877  0009DA  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3878  0009DE  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3879  0009E2  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  3880  0009E6  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3881  0009EA  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3882  0009EE  0100               	movlb	0	; () banked
  3883  0009F0  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  3884  0009F2  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  3885  0009F6  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3886  0009FA  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3887  0009FE  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  3891  000A02  C07C  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  3895  000A06  0100               	movlb	0	; () banked
  3896  000A08  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3897  000A0A  D003               	goto	l480
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  3901  000A0C  010F               	movlb	15	; () banked
  3902  000A0E  810D               	bsf	13,0,b	;volatile
  3903  000A10  D002               	goto	l481
  3904  000A12                     l480:
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;inc\CANlib.h: 968: else
  3908                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  3909  000A12  010F               	movlb	15	; () banked
  3910  000A14  910D               	bcf	13,0,b	;volatile
  3911  000A16                     l481:
  3912                           
  3913                           ; BSR set to: 15
  3914                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  3915  000A16  0100               	movlb	0	; () banked
  3916  000A18  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3917  000A1A  D003               	goto	l482
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  3921  000A1C  010F               	movlb	15	; () banked
  3922  000A1E  830D               	bsf	13,1,b	;volatile
  3923  000A20  D002               	goto	l483
  3924  000A22                     l482:
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;inc\CANlib.h: 973: else
  3928                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  3929  000A22  010F               	movlb	15	; () banked
  3930  000A24  930D               	bcf	13,1,b	;volatile
  3931  000A26                     l483:
  3932                           
  3933                           ; BSR set to: 15
  3934                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  3935  000A26  0100               	movlb	0	; () banked
  3936  000A28  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3937  000A2A  D003               	goto	l484
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  3941  000A2C  010F               	movlb	15	; () banked
  3942  000A2E  8B0D               	bsf	13,5,b	;volatile
  3943  000A30  D002               	goto	l485
  3944  000A32                     l484:
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;inc\CANlib.h: 978: else
  3948                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  3949  000A32  010F               	movlb	15	; () banked
  3950  000A34  9B0D               	bcf	13,5,b	;volatile
  3951  000A36                     l485:
  3952                           
  3953                           ; BSR set to: 15
  3954                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  3955  000A36  0100               	movlb	0	; () banked
  3956  000A38  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3957  000A3A  D003               	goto	l486
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  3961  000A3C  010F               	movlb	15	; () banked
  3962  000A3E  8D0D               	bsf	13,6,b	;volatile
  3963  000A40  D002               	goto	l487
  3964  000A42                     l486:
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;inc\CANlib.h: 983: else
  3968                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  3969  000A42  010F               	movlb	15	; () banked
  3970  000A44  9D0D               	bcf	13,6,b	;volatile
  3971  000A46                     l487:
  3972                           
  3973                           ; BSR set to: 15
  3974                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  3975  000A46  0100               	movlb	0	; () banked
  3976  000A48  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3977  000A4A  D003               	goto	l488
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  3981  000A4C  010F               	movlb	15	; () banked
  3982  000A4E  8F0D               	bsf	13,7,b	;volatile
  3983  000A50  D003               	goto	l2808
  3984  000A52                     l488:
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;inc\CANlib.h: 988: else
  3988                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  3989  000A52  010F               	movlb	15	; () banked
  3990  000A54  9F0D               	bcf	13,7,b	;volatile
  3991  000A56  D000               	goto	l2808
  3992  000A58                     l2808:
  3993                           
  3994                           ; BSR set to: 15
  3995                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  3996  000A58  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  3997  000A5C  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3998  000A60  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3999  000A64  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4000  000A68  0E16               	movlw	22
  4001  000A6A  D006               	goto	u2860
  4002  000A6C                     u2865:
  4003  000A6C  0100               	movlb	0	; () banked
  4004  000A6E  90D8               	bcf	status,0,c
  4005  000A70  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4006  000A72  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4007  000A74  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4008  000A76  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4009  000A78                     u2860:
  4010  000A78  2EE8               	decfsz	wreg,f,c
  4011  000A7A  D7F8               	goto	u2865
  4012  000A7C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4013  000A80  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4014  000A84  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4015  000A88  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  4019  000A8C  0100               	movlb	0	; () banked
  4020  000A8E  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4021  000A90  0100               	movlb	0	; () banked
  4022  000A92  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4023  000A94  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4024  000A96  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4025  000A98  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4029  000A9A  C07C  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4030  000A9E  D000               	goto	l2814
  4031  000AA0                     l2814:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;inc\CANlib.h: 994: }
  4035                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4036  000AA0  0E04               	movlw	4
  4037  000AA2  0100               	movlb	0	; () banked
  4038  000AA4  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4039  000AA6  A4D8               	btfss	status,2,c
  4040  000AA8  D08B               	goto	l2848
  4041                           
  4042                           ; BSR set to: 0
  4043  000AAA  0EF7               	movlw	247
  4044  000AAC  0100               	movlb	0	; () banked
  4045  000AAE  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4046  000AB0  A4D8               	btfss	status,2,c
  4047  000AB2  D086               	goto	l2848
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;inc\CANlib.h: 997: {
  4051                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4052  000AB4  010F               	movlb	15	; () banked
  4053  000AB6  8711               	bsf	17,3,b	;volatile
  4054                           
  4055                           ; BSR set to: 15
  4056                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  4057  000AB8  0100               	movlb	0	; () banked
  4058  000ABA  5172               	movf	CANSetFilter@filter& (0+255),w,b
  4059  000ABC  0100               	movlb	0	; () banked
  4060  000ABE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4061  000AC0  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4062  000AC2  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4063  000AC4  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4067  000AC6  C07C  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4071  000ACA  0E00               	movlw	0
  4072  000ACC  0100               	movlb	0	; () banked
  4073  000ACE  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4074  000AD0  0100               	movlb	0	; () banked
  4075  000AD2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4076  000AD4  0EFF               	movlw	255
  4077  000AD6  0100               	movlb	0	; () banked
  4078  000AD8  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4079  000ADA  0100               	movlb	0	; () banked
  4080  000ADC  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4081  000ADE  0E00               	movlw	0
  4082  000AE0  0100               	movlb	0	; () banked
  4083  000AE2  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4084  000AE4  0100               	movlb	0	; () banked
  4085  000AE6  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4086  000AE8  0E00               	movlw	0
  4087  000AEA  0100               	movlb	0	; () banked
  4088  000AEC  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4089  000AEE  0100               	movlb	0	; () banked
  4090  000AF0  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  4094  000AF2  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4095  000AF6  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4096  000AFA  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4097  000AFE  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4098  000B02  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  4099  000B06  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4100  000B0A  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4101  000B0E  0100               	movlb	0	; () banked
  4102  000B10  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4103  000B12  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4104  000B16  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4105  000B1A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4106  000B1E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4110  000B22  C07C  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  4114  000B26  0100               	movlb	0	; () banked
  4115  000B28  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4116  000B2A  D003               	goto	l491
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4120  000B2C  010F               	movlb	15	; () banked
  4121  000B2E  8111               	bsf	17,0,b	;volatile
  4122  000B30  D002               	goto	l492
  4123  000B32                     l491:
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;inc\CANlib.h: 1009: else
  4127                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4128  000B32  010F               	movlb	15	; () banked
  4129  000B34  9111               	bcf	17,0,b	;volatile
  4130  000B36                     l492:
  4131                           
  4132                           ; BSR set to: 15
  4133                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  4134  000B36  0100               	movlb	0	; () banked
  4135  000B38  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4136  000B3A  D003               	goto	l493
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4140  000B3C  010F               	movlb	15	; () banked
  4141  000B3E  8311               	bsf	17,1,b	;volatile
  4142  000B40  D002               	goto	l494
  4143  000B42                     l493:
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;inc\CANlib.h: 1014: else
  4147                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  4148  000B42  010F               	movlb	15	; () banked
  4149  000B44  9311               	bcf	17,1,b	;volatile
  4150  000B46                     l494:
  4151                           
  4152                           ; BSR set to: 15
  4153                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  4154  000B46  0100               	movlb	0	; () banked
  4155  000B48  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4156  000B4A  D003               	goto	l495
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  4160  000B4C  010F               	movlb	15	; () banked
  4161  000B4E  8B11               	bsf	17,5,b	;volatile
  4162  000B50  D002               	goto	l496
  4163  000B52                     l495:
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;inc\CANlib.h: 1019: else
  4167                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  4168  000B52  010F               	movlb	15	; () banked
  4169  000B54  9B11               	bcf	17,5,b	;volatile
  4170  000B56                     l496:
  4171                           
  4172                           ; BSR set to: 15
  4173                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  4174  000B56  0100               	movlb	0	; () banked
  4175  000B58  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4176  000B5A  D003               	goto	l497
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  4180  000B5C  010F               	movlb	15	; () banked
  4181  000B5E  8D11               	bsf	17,6,b	;volatile
  4182  000B60  D002               	goto	l498
  4183  000B62                     l497:
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;inc\CANlib.h: 1024: else
  4187                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  4188  000B62  010F               	movlb	15	; () banked
  4189  000B64  9D11               	bcf	17,6,b	;volatile
  4190  000B66                     l498:
  4191                           
  4192                           ; BSR set to: 15
  4193                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  4194  000B66  0100               	movlb	0	; () banked
  4195  000B68  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4196  000B6A  D003               	goto	l499
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  4200  000B6C  010F               	movlb	15	; () banked
  4201  000B6E  8F11               	bsf	17,7,b	;volatile
  4202  000B70  D003               	goto	l2842
  4203  000B72                     l499:
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;inc\CANlib.h: 1029: else
  4207                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  4208  000B72  010F               	movlb	15	; () banked
  4209  000B74  9F11               	bcf	17,7,b	;volatile
  4210  000B76  D000               	goto	l2842
  4211  000B78                     l2842:
  4212                           
  4213                           ; BSR set to: 15
  4214                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  4215  000B78  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4216  000B7C  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4217  000B80  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4218  000B84  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4219  000B88  0E16               	movlw	22
  4220  000B8A  D006               	goto	u2940
  4221  000B8C                     u2945:
  4222  000B8C  0100               	movlb	0	; () banked
  4223  000B8E  90D8               	bcf	status,0,c
  4224  000B90  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4225  000B92  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4226  000B94  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4227  000B96  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4228  000B98                     u2940:
  4229  000B98  2EE8               	decfsz	wreg,f,c
  4230  000B9A  D7F8               	goto	u2945
  4231  000B9C  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4232  000BA0  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4233  000BA4  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4234  000BA8  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  4238  000BAC  0100               	movlb	0	; () banked
  4239  000BAE  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4240  000BB0  0100               	movlb	0	; () banked
  4241  000BB2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4242  000BB4  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4243  000BB6  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4244  000BB8  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  4248  000BBA  C07C  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4249  000BBE  D000               	goto	l2848
  4250  000BC0                     l2848:
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;inc\CANlib.h: 1035: }
  4254                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4255  000BC0  0E05               	movlw	5
  4256  000BC2  0100               	movlb	0	; () banked
  4257  000BC4  197B               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4258  000BC6  A4D8               	btfss	status,2,c
  4259  000BC8  D08B               	goto	l512
  4260                           
  4261                           ; BSR set to: 0
  4262  000BCA  0EF7               	movlw	247
  4263  000BCC  0100               	movlb	0	; () banked
  4264  000BCE  1976               	xorwf	CANSetFilter@type& (0+255),w,b
  4265  000BD0  A4D8               	btfss	status,2,c
  4266  000BD2  D086               	goto	l512
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;inc\CANlib.h: 1038: {
  4270                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  4271  000BD4  010F               	movlb	15	; () banked
  4272  000BD6  8715               	bsf	21,3,b	;volatile
  4273                           
  4274                           ; BSR set to: 15
  4275                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  4276  000BD8  0100               	movlb	0	; () banked
  4277  000BDA  5172               	movf	CANSetFilter@filter& (0+255),w,b
  4278  000BDC  0100               	movlb	0	; () banked
  4279  000BDE  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4280  000BE0  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4281  000BE2  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4282  000BE4  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  4286  000BE6  C07C  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  4290  000BEA  0E00               	movlw	0
  4291  000BEC  0100               	movlb	0	; () banked
  4292  000BEE  1572               	andwf	CANSetFilter@filter& (0+255),w,b
  4293  000BF0  0100               	movlb	0	; () banked
  4294  000BF2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4295  000BF4  0EFF               	movlw	255
  4296  000BF6  0100               	movlb	0	; () banked
  4297  000BF8  1573               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4298  000BFA  0100               	movlb	0	; () banked
  4299  000BFC  6F7D               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4300  000BFE  0E00               	movlw	0
  4301  000C00  0100               	movlb	0	; () banked
  4302  000C02  1574               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4303  000C04  0100               	movlb	0	; () banked
  4304  000C06  6F7E               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4305  000C08  0E00               	movlw	0
  4306  000C0A  0100               	movlb	0	; () banked
  4307  000C0C  1575               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4308  000C0E  0100               	movlb	0	; () banked
  4309  000C10  6F7F               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  4313  000C12  C07C  F077         	movff	CANSetFilter@tamp,??_CANSetFilter
  4314  000C16  C07D  F078         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4315  000C1A  C07E  F079         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4316  000C1E  C07F  F07A         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4317  000C22  C078  F077         	movff	??_CANSetFilter+1,??_CANSetFilter
  4318  000C26  C079  F078         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4319  000C2A  C07A  F079         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4320  000C2E  0100               	movlb	0	; () banked
  4321  000C30  6B7A               	clrf	(??_CANSetFilter+3)& (0+255),b
  4322  000C32  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4323  000C36  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4324  000C3A  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4325  000C3E  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  4329  000C42  C07C  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  4333  000C46  0100               	movlb	0	; () banked
  4334  000C48  A174               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4335  000C4A  D003               	goto	l502
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  4339  000C4C  010F               	movlb	15	; () banked
  4340  000C4E  8115               	bsf	21,0,b	;volatile
  4341  000C50  D002               	goto	l503
  4342  000C52                     l502:
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;inc\CANlib.h: 1050: else
  4346                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  4347  000C52  010F               	movlb	15	; () banked
  4348  000C54  9115               	bcf	21,0,b	;volatile
  4349  000C56                     l503:
  4350                           
  4351                           ; BSR set to: 15
  4352                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  4353  000C56  0100               	movlb	0	; () banked
  4354  000C58  A374               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4355  000C5A  D003               	goto	l504
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  4359  000C5C  010F               	movlb	15	; () banked
  4360  000C5E  8315               	bsf	21,1,b	;volatile
  4361  000C60  D002               	goto	l505
  4362  000C62                     l504:
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;inc\CANlib.h: 1055: else
  4366                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  4367  000C62  010F               	movlb	15	; () banked
  4368  000C64  9315               	bcf	21,1,b	;volatile
  4369  000C66                     l505:
  4370                           
  4371                           ; BSR set to: 15
  4372                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  4373  000C66  0100               	movlb	0	; () banked
  4374  000C68  A574               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4375  000C6A  D003               	goto	l506
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  4379  000C6C  010F               	movlb	15	; () banked
  4380  000C6E  8B15               	bsf	21,5,b	;volatile
  4381  000C70  D002               	goto	l507
  4382  000C72                     l506:
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;inc\CANlib.h: 1060: else
  4386                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  4387  000C72  010F               	movlb	15	; () banked
  4388  000C74  9B15               	bcf	21,5,b	;volatile
  4389  000C76                     l507:
  4390                           
  4391                           ; BSR set to: 15
  4392                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  4393  000C76  0100               	movlb	0	; () banked
  4394  000C78  A774               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4395  000C7A  D003               	goto	l508
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  4399  000C7C  010F               	movlb	15	; () banked
  4400  000C7E  8D15               	bsf	21,6,b	;volatile
  4401  000C80  D002               	goto	l509
  4402  000C82                     l508:
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;inc\CANlib.h: 1065: else
  4406                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  4407  000C82  010F               	movlb	15	; () banked
  4408  000C84  9D15               	bcf	21,6,b	;volatile
  4409  000C86                     l509:
  4410                           
  4411                           ; BSR set to: 15
  4412                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  4413  000C86  0100               	movlb	0	; () banked
  4414  000C88  A974               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4415  000C8A  D003               	goto	l510
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  4419  000C8C  010F               	movlb	15	; () banked
  4420  000C8E  8F15               	bsf	21,7,b	;volatile
  4421  000C90  D003               	goto	l2876
  4422  000C92                     l510:
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;inc\CANlib.h: 1070: else
  4426                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  4427  000C92  010F               	movlb	15	; () banked
  4428  000C94  9F15               	bcf	21,7,b	;volatile
  4429  000C96  D000               	goto	l2876
  4430  000C98                     l2876:
  4431                           
  4432                           ; BSR set to: 15
  4433                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  4434  000C98  C072  F077         	movff	CANSetFilter@filter,??_CANSetFilter
  4435  000C9C  C073  F078         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4436  000CA0  C074  F079         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4437  000CA4  C075  F07A         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4438  000CA8  0E16               	movlw	22
  4439  000CAA  D006               	goto	u3020
  4440  000CAC                     u3025:
  4441  000CAC  0100               	movlb	0	; () banked
  4442  000CAE  90D8               	bcf	status,0,c
  4443  000CB0  337A               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4444  000CB2  3379               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4445  000CB4  3378               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4446  000CB6  3377               	rrcf	??_CANSetFilter& (0+255),f,b
  4447  000CB8                     u3020:
  4448  000CB8  2EE8               	decfsz	wreg,f,c
  4449  000CBA  D7F8               	goto	u3025
  4450  000CBC  C077  F07C         	movff	??_CANSetFilter,CANSetFilter@tamp
  4451  000CC0  C078  F07D         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4452  000CC4  C079  F07E         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4453  000CC8  C07A  F07F         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  4457  000CCC  0100               	movlb	0	; () banked
  4458  000CCE  517C               	movf	CANSetFilter@tamp& (0+255),w,b
  4459  000CD0  0100               	movlb	0	; () banked
  4460  000CD2  6F7C               	movwf	CANSetFilter@tamp& (0+255),b
  4461  000CD4  6B7D               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4462  000CD6  6B7E               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4463  000CD8  6B7F               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  4467  000CDA  C07C  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4468  000CDE  D000               	goto	l512
  4469  000CE0                     l512:
  4470                           
  4471                           ; BSR set to: 0
  4472  000CE0  0012               	return		;funcret
  4473  000CE2                     __end_of_CANSetFilter:
  4474                           	opt stack 0
  4475                           tblptru	equ	0xFF8
  4476                           tblptrh	equ	0xFF7
  4477                           tblptrl	equ	0xFF6
  4478                           tablat	equ	0xFF5
  4479                           prodh	equ	0xFF4
  4480                           prodl	equ	0xFF3
  4481                           intcon	equ	0xFF2
  4482                           intcon2	equ	0xFF1
  4483                           postinc0	equ	0xFEE
  4484                           wreg	equ	0xFE8
  4485                           postdec1	equ	0xFE5
  4486                           fsr1l	equ	0xFE1
  4487                           status	equ	0xFD8
  4488                           
  4489 ;; *************** function _CANOperationMode *****************
  4490 ;; Defined at:
  4491 ;;		line 206 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  mode            1    wreg     enum E16879
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  mode            1   18[BANK0 ] enum E16879
  4496 ;; Return value:  Size  Location     Type
  4497 ;;		None               void
  4498 ;; Registers used:
  4499 ;;		wreg, status,2, status,0
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4505 ;;      Params:         0       0       0       0
  4506 ;;      Locals:         0       1       0       0
  4507 ;;      Temps:          0       0       0       0
  4508 ;;      Totals:         0       1       0       0
  4509 ;;Total ram usage:        1 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    4
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_CANInitialize
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text8
  4520  002544                     __ptext8:
  4521                           	opt stack 0
  4522  002544                     _CANOperationMode:
  4523                           	opt stack 24
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;incstack = 0
  4527                           ;CANOperationMode@mode stored from wreg
  4528  002544  0100               	movlb	0	; () banked
  4529  002546  6F72               	movwf	CANOperationMode@mode& (0+255),b
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;inc\CANlib.h: 208: CANCON = mode;
  4533  002548  C072  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  4534                           
  4535                           ; BSR set to: 0
  4536                           
  4537                           ;inc\CANlib.h: 210: while((CANSTAT & 0b11100000) != mode );
  4538  00254C  D000               	goto	l2472
  4539  00254E                     l2472:
  4540                           
  4541                           ; BSR set to: 0
  4542  00254E  506E               	movf	3950,w,c	;volatile
  4543  002550  0BE0               	andlw	224
  4544  002552  0100               	movlb	0	; () banked
  4545  002554  1972               	xorwf	CANOperationMode@mode& (0+255),w,b
  4546  002556  A4D8               	btfss	status,2,c
  4547  002558  D7FA               	goto	l2472
  4548                           
  4549                           ; BSR set to: 0
  4550                           
  4551                           ; BSR set to: 0
  4552  00255A  0012               	return		;funcret
  4553  00255C                     __end_of_CANOperationMode:
  4554                           	opt stack 0
  4555                           tblptru	equ	0xFF8
  4556                           tblptrh	equ	0xFF7
  4557                           tblptrl	equ	0xFF6
  4558                           tablat	equ	0xFF5
  4559                           prodh	equ	0xFF4
  4560                           prodl	equ	0xFF3
  4561                           intcon	equ	0xFF2
  4562                           intcon2	equ	0xFF1
  4563                           postinc0	equ	0xFEE
  4564                           wreg	equ	0xFE8
  4565                           postdec1	equ	0xFE5
  4566                           fsr1l	equ	0xFE1
  4567                           status	equ	0xFD8
  4568                           
  4569 ;; *************** function _calibrazione *****************
  4570 ;; Defined at:
  4571 ;;		line 166 in file "sterzo.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;		None
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;		None               void
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0, cstack
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4585 ;;      Params:         0       0       0       0
  4586 ;;      Locals:         0       0       0       0
  4587 ;;      Temps:          0       0       0       0
  4588 ;;      Totals:         0       0       0       0
  4589 ;;Total ram usage:        0 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    5
  4592 ;; This function calls:
  4593 ;;		_BusyADC
  4594 ;;		_ConvertADC
  4595 ;;		_ReadADC
  4596 ;;		___aldiv
  4597 ;; This function is called by:
  4598 ;;		_main
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text9
  4603  002384                     __ptext9:
  4604                           	opt stack 0
  4605  002384                     _calibrazione:
  4606                           	opt stack 25
  4607                           
  4608                           ;sterzo.c: 167: ConvertADC();
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;incstack = 0
  4612  002384  ECE4  F012         	call	_ConvertADC	;wreg free
  4613                           
  4614                           ;sterzo.c: 168: while (BusyADC());
  4615  002388  D000               	goto	l3454
  4616  00238A                     l3454:
  4617  00238A  ECCD  F012         	call	_BusyADC	;wreg free
  4618  00238E  0900               	iorlw	0
  4619  002390  A4D8               	btfss	status,2,c
  4620  002392  D7FB               	goto	l3454
  4621                           
  4622                           ;sterzo.c: 169: ADCResult = ReadADC();
  4623  002394  ECBA  F012         	call	_ReadADC	;wreg free
  4624  002398  0100               	movlb	0	; () banked
  4625  00239A  C072  F090         	movff	?_ReadADC,_ADCResult
  4626  00239E  0100               	movlb	0	; () banked
  4627  0023A0  C073  F091         	movff	?_ReadADC+1,_ADCResult+1
  4628  0023A4  0100               	movlb	0	; () banked
  4629  0023A6  0E00               	movlw	0
  4630  0023A8  BF91               	btfsc	(_ADCResult+1)& (0+255),7,b
  4631  0023AA  0EFF               	movlw	-1
  4632  0023AC  6F92               	movwf	(_ADCResult+2)& (0+255),b
  4633  0023AE  6F93               	movwf	(_ADCResult+3)& (0+255),b
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;sterzo.c: 170: calibration = (ADCResult - 511) / 30;
  4637  0023B0  0E01               	movlw	1
  4638  0023B2  0100               	movlb	0	; () banked
  4639  0023B4  2590               	addwf	_ADCResult& (0+255),w,b
  4640  0023B6  0100               	movlb	0	; () banked
  4641  0023B8  6F72               	movwf	___aldiv@dividend& (0+255),b
  4642  0023BA  0EFE               	movlw	254
  4643  0023BC  0100               	movlb	0	; () banked
  4644  0023BE  2191               	addwfc	(_ADCResult+1)& (0+255),w,b
  4645  0023C0  0100               	movlb	0	; () banked
  4646  0023C2  6F73               	movwf	(___aldiv@dividend+1)& (0+255),b
  4647  0023C4  0EFF               	movlw	255
  4648  0023C6  0100               	movlb	0	; () banked
  4649  0023C8  2192               	addwfc	(_ADCResult+2)& (0+255),w,b
  4650  0023CA  0100               	movlb	0	; () banked
  4651  0023CC  6F74               	movwf	(___aldiv@dividend+2)& (0+255),b
  4652  0023CE  0EFF               	movlw	255
  4653  0023D0  0100               	movlb	0	; () banked
  4654  0023D2  2193               	addwfc	(_ADCResult+3)& (0+255),w,b
  4655  0023D4  0100               	movlb	0	; () banked
  4656  0023D6  6F75               	movwf	(___aldiv@dividend+3)& (0+255),b
  4657  0023D8  0E1E               	movlw	30
  4658  0023DA  0100               	movlb	0	; () banked
  4659  0023DC  6F76               	movwf	___aldiv@divisor& (0+255),b
  4660  0023DE  0E00               	movlw	0
  4661  0023E0  6F77               	movwf	(___aldiv@divisor+1)& (0+255),b
  4662  0023E2  0E00               	movlw	0
  4663  0023E4  6F78               	movwf	(___aldiv@divisor+2)& (0+255),b
  4664  0023E6  0E00               	movlw	0
  4665  0023E8  6F79               	movwf	(___aldiv@divisor+3)& (0+255),b
  4666  0023EA  ECC1  F00F         	call	___aldiv	;wreg free
  4667  0023EE  C072  F02D         	movff	?___aldiv,_calibration
  4668  0023F2  C073  F02E         	movff	?___aldiv+1,_calibration+1
  4669  0023F6  0012               	return		;funcret
  4670  0023F8                     __end_of_calibrazione:
  4671                           	opt stack 0
  4672                           tblptru	equ	0xFF8
  4673                           tblptrh	equ	0xFF7
  4674                           tblptrl	equ	0xFF6
  4675                           tablat	equ	0xFF5
  4676                           prodh	equ	0xFF4
  4677                           prodl	equ	0xFF3
  4678                           intcon	equ	0xFF2
  4679                           intcon2	equ	0xFF1
  4680                           postinc0	equ	0xFEE
  4681                           wreg	equ	0xFE8
  4682                           postdec1	equ	0xFE5
  4683                           fsr1l	equ	0xFE1
  4684                           status	equ	0xFD8
  4685                           
  4686 ;; *************** function ___aldiv *****************
  4687 ;; Defined at:
  4688 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  dividend        4   18[BANK0 ] long 
  4691 ;;  divisor         4   22[BANK0 ] long 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  quotient        4   28[BANK0 ] long 
  4694 ;;  sign            1   27[BANK0 ] unsigned char 
  4695 ;;  counter         1   26[BANK0 ] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  4   18[BANK0 ] long 
  4698 ;; Registers used:
  4699 ;;		wreg, status,2, status,0
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4705 ;;      Params:         0       8       0       0
  4706 ;;      Locals:         0       6       0       0
  4707 ;;      Temps:          0       0       0       0
  4708 ;;      Totals:         0      14       0       0
  4709 ;;Total ram usage:       14 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    4
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		_calibrazione
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text10
  4720  001F82                     __ptext10:
  4721                           	opt stack 0
  4722  001F82                     ___aldiv:
  4723                           	opt stack 25
  4724                           
  4725                           ;incstack = 0
  4726  001F82  0E00               	movlw	0
  4727  001F84  0100               	movlb	0	; () banked
  4728  001F86  6F7B               	movwf	___aldiv@sign& (0+255),b
  4729                           
  4730                           ; BSR set to: 0
  4731  001F88  0100               	movlb	0	; () banked
  4732  001F8A  AF79               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  4733  001F8C  D00D               	goto	l2970
  4734                           
  4735                           ; BSR set to: 0
  4736  001F8E  0100               	movlb	0	; () banked
  4737  001F90  1F79               	comf	(___aldiv@divisor+3)& (0+255),f,b
  4738  001F92  1F78               	comf	(___aldiv@divisor+2)& (0+255),f,b
  4739  001F94  1F77               	comf	(___aldiv@divisor+1)& (0+255),f,b
  4740  001F96  6D76               	negf	___aldiv@divisor& (0+255),b
  4741  001F98  0E00               	movlw	0
  4742  001F9A  2377               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  4743  001F9C  2378               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  4744  001F9E  2379               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  4745                           
  4746                           ; BSR set to: 0
  4747  001FA0  0E01               	movlw	1
  4748  001FA2  0100               	movlb	0	; () banked
  4749  001FA4  6F7B               	movwf	___aldiv@sign& (0+255),b
  4750  001FA6  D000               	goto	l2970
  4751  001FA8                     l2970:
  4752                           
  4753                           ; BSR set to: 0
  4754  001FA8  0100               	movlb	0	; () banked
  4755  001FAA  AF75               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  4756  001FAC  D00D               	goto	l2976
  4757                           
  4758                           ; BSR set to: 0
  4759  001FAE  0100               	movlb	0	; () banked
  4760  001FB0  1F75               	comf	(___aldiv@dividend+3)& (0+255),f,b
  4761  001FB2  1F74               	comf	(___aldiv@dividend+2)& (0+255),f,b
  4762  001FB4  1F73               	comf	(___aldiv@dividend+1)& (0+255),f,b
  4763  001FB6  6D72               	negf	___aldiv@dividend& (0+255),b
  4764  001FB8  0E00               	movlw	0
  4765  001FBA  2373               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  4766  001FBC  2374               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  4767  001FBE  2375               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  4768                           
  4769                           ; BSR set to: 0
  4770  001FC0  0E01               	movlw	1
  4771  001FC2  0100               	movlb	0	; () banked
  4772  001FC4  1B7B               	xorwf	___aldiv@sign& (0+255),f,b
  4773  001FC6  D000               	goto	l2976
  4774  001FC8                     l2976:
  4775                           
  4776                           ; BSR set to: 0
  4777  001FC8  0E00               	movlw	0
  4778  001FCA  0100               	movlb	0	; () banked
  4779  001FCC  6F7C               	movwf	___aldiv@quotient& (0+255),b
  4780  001FCE  0E00               	movlw	0
  4781  001FD0  6F7D               	movwf	(___aldiv@quotient+1)& (0+255),b
  4782  001FD2  0E00               	movlw	0
  4783  001FD4  6F7E               	movwf	(___aldiv@quotient+2)& (0+255),b
  4784  001FD6  0E00               	movlw	0
  4785  001FD8  6F7F               	movwf	(___aldiv@quotient+3)& (0+255),b
  4786                           
  4787                           ; BSR set to: 0
  4788  001FDA  0100               	movlb	0	; () banked
  4789  001FDC  5176               	movf	___aldiv@divisor& (0+255),w,b
  4790  001FDE  0100               	movlb	0	; () banked
  4791  001FE0  1177               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  4792  001FE2  0100               	movlb	0	; () banked
  4793  001FE4  1178               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  4794  001FE6  0100               	movlb	0	; () banked
  4795  001FE8  1179               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  4796  001FEA  B4D8               	btfsc	status,2,c
  4797  001FEC  D047               	goto	l2998
  4798                           
  4799                           ; BSR set to: 0
  4800  001FEE  0E01               	movlw	1
  4801  001FF0  0100               	movlb	0	; () banked
  4802  001FF2  6F7A               	movwf	___aldiv@counter& (0+255),b
  4803  001FF4  D009               	goto	l2984
  4804  001FF6                     l2982:
  4805                           
  4806                           ; BSR set to: 0
  4807  001FF6  0100               	movlb	0	; () banked
  4808  001FF8  90D8               	bcf	status,0,c
  4809  001FFA  3776               	rlcf	___aldiv@divisor& (0+255),f,b
  4810  001FFC  3777               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  4811  001FFE  3778               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  4812  002000  3779               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  4813  002002  0100               	movlb	0	; () banked
  4814  002004  2B7A               	incf	___aldiv@counter& (0+255),f,b
  4815  002006  D000               	goto	l2984
  4816  002008                     l2984:
  4817                           
  4818                           ; BSR set to: 0
  4819  002008  0100               	movlb	0	; () banked
  4820  00200A  BF79               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  4821  00200C  D002               	goto	l2986
  4822  00200E  D7F3               	goto	l2982
  4823                           
  4824                           ; BSR set to: 0
  4825  002010  D000               	goto	l2986
  4826  002012                     l2986:
  4827                           
  4828                           ; BSR set to: 0
  4829  002012  0100               	movlb	0	; () banked
  4830  002014  90D8               	bcf	status,0,c
  4831  002016  377C               	rlcf	___aldiv@quotient& (0+255),f,b
  4832  002018  377D               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  4833  00201A  377E               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  4834  00201C  377F               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  4835                           
  4836                           ; BSR set to: 0
  4837  00201E  0100               	movlb	0	; () banked
  4838  002020  5176               	movf	___aldiv@divisor& (0+255),w,b
  4839  002022  0100               	movlb	0	; () banked
  4840  002024  5D72               	subwf	___aldiv@dividend& (0+255),w,b
  4841  002026  0100               	movlb	0	; () banked
  4842  002028  5177               	movf	(___aldiv@divisor+1)& (0+255),w,b
  4843  00202A  0100               	movlb	0	; () banked
  4844  00202C  5973               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  4845  00202E  0100               	movlb	0	; () banked
  4846  002030  5178               	movf	(___aldiv@divisor+2)& (0+255),w,b
  4847  002032  0100               	movlb	0	; () banked
  4848  002034  5974               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  4849  002036  0100               	movlb	0	; () banked
  4850  002038  5179               	movf	(___aldiv@divisor+3)& (0+255),w,b
  4851  00203A  0100               	movlb	0	; () banked
  4852  00203C  5975               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  4853  00203E  A0D8               	btfss	status,0,c
  4854  002040  D013               	goto	l2994
  4855                           
  4856                           ; BSR set to: 0
  4857  002042  0100               	movlb	0	; () banked
  4858  002044  5176               	movf	___aldiv@divisor& (0+255),w,b
  4859  002046  0100               	movlb	0	; () banked
  4860  002048  5F72               	subwf	___aldiv@dividend& (0+255),f,b
  4861  00204A  0100               	movlb	0	; () banked
  4862  00204C  5177               	movf	(___aldiv@divisor+1)& (0+255),w,b
  4863  00204E  0100               	movlb	0	; () banked
  4864  002050  5B73               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  4865  002052  0100               	movlb	0	; () banked
  4866  002054  5178               	movf	(___aldiv@divisor+2)& (0+255),w,b
  4867  002056  0100               	movlb	0	; () banked
  4868  002058  5B74               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  4869  00205A  0100               	movlb	0	; () banked
  4870  00205C  5179               	movf	(___aldiv@divisor+3)& (0+255),w,b
  4871  00205E  0100               	movlb	0	; () banked
  4872  002060  5B75               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  4873                           
  4874                           ; BSR set to: 0
  4875  002062  0100               	movlb	0	; () banked
  4876  002064  817C               	bsf	___aldiv@quotient& (0+255),0,b
  4877  002066  D000               	goto	l2994
  4878  002068                     l2994:
  4879                           
  4880                           ; BSR set to: 0
  4881  002068  0100               	movlb	0	; () banked
  4882  00206A  90D8               	bcf	status,0,c
  4883  00206C  3379               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  4884  00206E  3378               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  4885  002070  3377               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  4886  002072  3376               	rrcf	___aldiv@divisor& (0+255),f,b
  4887                           
  4888                           ; BSR set to: 0
  4889  002074  0100               	movlb	0	; () banked
  4890  002076  2F7A               	decfsz	___aldiv@counter& (0+255),f,b
  4891  002078  D7CC               	goto	l2986
  4892                           
  4893                           ; BSR set to: 0
  4894  00207A  D000               	goto	l2998
  4895  00207C                     l2998:
  4896                           
  4897                           ; BSR set to: 0
  4898  00207C  0100               	movlb	0	; () banked
  4899  00207E  517B               	movf	___aldiv@sign& (0+255),w,b
  4900  002080  0100               	movlb	0	; () banked
  4901  002082  B4D8               	btfsc	status,2,c
  4902  002084  D00A               	goto	l3002
  4903                           
  4904                           ; BSR set to: 0
  4905  002086  0100               	movlb	0	; () banked
  4906  002088  1F7F               	comf	(___aldiv@quotient+3)& (0+255),f,b
  4907  00208A  1F7E               	comf	(___aldiv@quotient+2)& (0+255),f,b
  4908  00208C  1F7D               	comf	(___aldiv@quotient+1)& (0+255),f,b
  4909  00208E  6D7C               	negf	___aldiv@quotient& (0+255),b
  4910  002090  0E00               	movlw	0
  4911  002092  237D               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  4912  002094  237E               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  4913  002096  237F               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  4914  002098  D000               	goto	l3002
  4915  00209A                     l3002:
  4916                           
  4917                           ; BSR set to: 0
  4918  00209A  C07C  F072         	movff	___aldiv@quotient,?___aldiv
  4919  00209E  C07D  F073         	movff	___aldiv@quotient+1,?___aldiv+1
  4920  0020A2  C07E  F074         	movff	___aldiv@quotient+2,?___aldiv+2
  4921  0020A6  C07F  F075         	movff	___aldiv@quotient+3,?___aldiv+3
  4922  0020AA  D000               	goto	l746
  4923  0020AC                     l746:
  4924                           
  4925                           ; BSR set to: 0
  4926  0020AC  0012               	return		;funcret
  4927  0020AE                     __end_of___aldiv:
  4928                           	opt stack 0
  4929                           tblptru	equ	0xFF8
  4930                           tblptrh	equ	0xFF7
  4931                           tblptrl	equ	0xFF6
  4932                           tablat	equ	0xFF5
  4933                           prodh	equ	0xFF4
  4934                           prodl	equ	0xFF3
  4935                           intcon	equ	0xFF2
  4936                           intcon2	equ	0xFF1
  4937                           postinc0	equ	0xFEE
  4938                           wreg	equ	0xFE8
  4939                           postdec1	equ	0xFE5
  4940                           fsr1l	equ	0xFE1
  4941                           status	equ	0xFD8
  4942                           
  4943 ;; *************** function _ReadADC *****************
  4944 ;; Defined at:
  4945 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  2   18[BANK0 ] int 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4959 ;;      Params:         0       2       0       0
  4960 ;;      Locals:         0       0       0       0
  4961 ;;      Temps:          0       2       0       0
  4962 ;;      Totals:         0       4       0       0
  4963 ;;Total ram usage:        4 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    4
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_calibrazione
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text11
  4974  002574                     __ptext11:
  4975                           	opt stack 0
  4976  002574                     _ReadADC:
  4977                           	opt stack 25
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;incstack = 0
  4981  002574  50C4               	movf	4036,w,c	;volatile
  4982  002576  0100               	movlb	0	; () banked
  4983  002578  6F74               	movwf	??_ReadADC& (0+255),b
  4984  00257A  50C3               	movf	4035,w,c	;volatile
  4985  00257C  0100               	movlb	0	; () banked
  4986  00257E  6F72               	movwf	?_ReadADC& (0+255),b
  4987  002580  C074  F073         	movff	??_ReadADC,?_ReadADC+1
  4988  002584  D000               	goto	l667
  4989  002586                     l667:
  4990                           
  4991                           ; BSR set to: 0
  4992  002586  0012               	return		;funcret
  4993  002588                     __end_of_ReadADC:
  4994                           	opt stack 0
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           prodh	equ	0xFF4
  5000                           prodl	equ	0xFF3
  5001                           intcon	equ	0xFF2
  5002                           intcon2	equ	0xFF1
  5003                           postinc0	equ	0xFEE
  5004                           wreg	equ	0xFE8
  5005                           postdec1	equ	0xFE5
  5006                           fsr1l	equ	0xFE1
  5007                           status	equ	0xFD8
  5008                           
  5009 ;; *************** function _ConvertADC *****************
  5010 ;; Defined at:
  5011 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;		None
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;		None
  5016 ;; Return value:  Size  Location     Type
  5017 ;;		None               void
  5018 ;; Registers used:
  5019 ;;		None
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5025 ;;      Params:         0       0       0       0
  5026 ;;      Locals:         0       0       0       0
  5027 ;;      Temps:          0       0       0       0
  5028 ;;      Totals:         0       0       0       0
  5029 ;;Total ram usage:        0 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:    4
  5032 ;; This function calls:
  5033 ;;		Nothing
  5034 ;; This function is called by:
  5035 ;;		_calibrazione
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text12
  5040  0025C8                     __ptext12:
  5041                           	opt stack 0
  5042  0025C8                     _ConvertADC:
  5043                           	opt stack 25
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;incstack = 0
  5047  0025C8  82C2               	bsf	4034,1,c	;volatile
  5048  0025CA  0012               	return		;funcret
  5049  0025CC                     __end_of_ConvertADC:
  5050                           	opt stack 0
  5051                           tblptru	equ	0xFF8
  5052                           tblptrh	equ	0xFF7
  5053                           tblptrl	equ	0xFF6
  5054                           tablat	equ	0xFF5
  5055                           prodh	equ	0xFF4
  5056                           prodl	equ	0xFF3
  5057                           intcon	equ	0xFF2
  5058                           intcon2	equ	0xFF1
  5059                           postinc0	equ	0xFEE
  5060                           wreg	equ	0xFE8
  5061                           postdec1	equ	0xFE5
  5062                           fsr1l	equ	0xFE1
  5063                           status	equ	0xFD8
  5064                           
  5065 ;; *************** function _BusyADC *****************
  5066 ;; Defined at:
  5067 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      unsigned char 
  5074 ;; Registers used:
  5075 ;;		wreg
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5081 ;;      Params:         0       0       0       0
  5082 ;;      Locals:         0       0       0       0
  5083 ;;      Temps:          0       0       0       0
  5084 ;;      Totals:         0       0       0       0
  5085 ;;Total ram usage:        0 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    4
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_calibrazione
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text13
  5096  00259A                     __ptext13:
  5097                           	opt stack 0
  5098  00259A                     _BusyADC:
  5099                           	opt stack 25
  5100                           
  5101                           ;incstack = 0
  5102  00259A  A2C2               	btfss	4034,1,c	;volatile
  5103  00259C  D002               	goto	u3070
  5104  00259E  0E01               	movlw	1
  5105  0025A0  D002               	goto	l637
  5106  0025A2                     u3070:
  5107  0025A2  0E00               	movlw	0
  5108  0025A4  D000               	goto	l637
  5109  0025A6                     l637:
  5110  0025A6  0012               	return		;funcret
  5111  0025A8                     __end_of_BusyADC:
  5112                           	opt stack 0
  5113                           tblptru	equ	0xFF8
  5114                           tblptrh	equ	0xFF7
  5115                           tblptrl	equ	0xFF6
  5116                           tablat	equ	0xFF5
  5117                           prodh	equ	0xFF4
  5118                           prodl	equ	0xFF3
  5119                           intcon	equ	0xFF2
  5120                           intcon2	equ	0xFF1
  5121                           postinc0	equ	0xFEE
  5122                           wreg	equ	0xFE8
  5123                           postdec1	equ	0xFE5
  5124                           fsr1l	equ	0xFE1
  5125                           status	equ	0xFD8
  5126                           
  5127 ;; *************** function ___lmul *****************
  5128 ;; Defined at:
  5129 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  multiplier      4   18[BANK0 ] unsigned long 
  5132 ;;  multiplicand    4   22[BANK0 ] unsigned long 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  product         4   26[BANK0 ] unsigned long 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  4   18[BANK0 ] unsigned long 
  5137 ;; Registers used:
  5138 ;;		wreg, status,2, status,0
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5144 ;;      Params:         0       8       0       0
  5145 ;;      Locals:         0       4       0       0
  5146 ;;      Temps:          0       0       0       0
  5147 ;;      Totals:         0      12       0       0
  5148 ;;Total ram usage:       12 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    4
  5151 ;; This function calls:
  5152 ;;		Nothing
  5153 ;; This function is called by:
  5154 ;;		_main
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           	psect	text14
  5159  00230A                     __ptext14:
  5160                           	opt stack 0
  5161  00230A                     ___lmul:
  5162                           	opt stack 26
  5163                           
  5164                           ;incstack = 0
  5165  00230A  0E00               	movlw	0
  5166  00230C  0100               	movlb	0	; () banked
  5167  00230E  6F7A               	movwf	___lmul@product& (0+255),b
  5168  002310  0E00               	movlw	0
  5169  002312  6F7B               	movwf	(___lmul@product+1)& (0+255),b
  5170  002314  0E00               	movlw	0
  5171  002316  6F7C               	movwf	(___lmul@product+2)& (0+255),b
  5172  002318  0E00               	movlw	0
  5173  00231A  6F7D               	movwf	(___lmul@product+3)& (0+255),b
  5174  00231C  D000               	goto	l3462
  5175  00231E                     l3462:
  5176                           
  5177                           ; BSR set to: 0
  5178  00231E  0100               	movlb	0	; () banked
  5179  002320  A172               	btfss	___lmul@multiplier& (0+255),0,b
  5180  002322  D011               	goto	l3466
  5181                           
  5182                           ; BSR set to: 0
  5183  002324  0100               	movlb	0	; () banked
  5184  002326  5176               	movf	___lmul@multiplicand& (0+255),w,b
  5185  002328  0100               	movlb	0	; () banked
  5186  00232A  277A               	addwf	___lmul@product& (0+255),f,b
  5187  00232C  0100               	movlb	0	; () banked
  5188  00232E  5177               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  5189  002330  0100               	movlb	0	; () banked
  5190  002332  237B               	addwfc	(___lmul@product+1)& (0+255),f,b
  5191  002334  0100               	movlb	0	; () banked
  5192  002336  5178               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  5193  002338  0100               	movlb	0	; () banked
  5194  00233A  237C               	addwfc	(___lmul@product+2)& (0+255),f,b
  5195  00233C  0100               	movlb	0	; () banked
  5196  00233E  5179               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  5197  002340  0100               	movlb	0	; () banked
  5198  002342  237D               	addwfc	(___lmul@product+3)& (0+255),f,b
  5199  002344  D000               	goto	l3466
  5200  002346                     l3466:
  5201                           
  5202                           ; BSR set to: 0
  5203  002346  0100               	movlb	0	; () banked
  5204  002348  90D8               	bcf	status,0,c
  5205  00234A  3776               	rlcf	___lmul@multiplicand& (0+255),f,b
  5206  00234C  3777               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  5207  00234E  3778               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  5208  002350  3779               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  5209                           
  5210                           ; BSR set to: 0
  5211  002352  0100               	movlb	0	; () banked
  5212  002354  90D8               	bcf	status,0,c
  5213  002356  3375               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  5214  002358  3374               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  5215  00235A  3373               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  5216  00235C  3372               	rrcf	___lmul@multiplier& (0+255),f,b
  5217  00235E  0100               	movlb	0	; () banked
  5218  002360  5172               	movf	___lmul@multiplier& (0+255),w,b
  5219  002362  0100               	movlb	0	; () banked
  5220  002364  1173               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  5221  002366  0100               	movlb	0	; () banked
  5222  002368  1174               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  5223  00236A  0100               	movlb	0	; () banked
  5224  00236C  1175               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  5225  00236E  A4D8               	btfss	status,2,c
  5226  002370  D7D6               	goto	l3462
  5227                           
  5228                           ; BSR set to: 0
  5229  002372  C07A  F072         	movff	___lmul@product,?___lmul
  5230  002376  C07B  F073         	movff	___lmul@product+1,?___lmul+1
  5231  00237A  C07C  F074         	movff	___lmul@product+2,?___lmul+2
  5232  00237E  C07D  F075         	movff	___lmul@product+3,?___lmul+3
  5233                           
  5234                           ; BSR set to: 0
  5235  002382  0012               	return		;funcret
  5236  002384                     __end_of___lmul:
  5237                           	opt stack 0
  5238                           tblptru	equ	0xFF8
  5239                           tblptrh	equ	0xFF7
  5240                           tblptrl	equ	0xFF6
  5241                           tablat	equ	0xFF5
  5242                           prodh	equ	0xFF4
  5243                           prodl	equ	0xFF3
  5244                           intcon	equ	0xFF2
  5245                           intcon2	equ	0xFF1
  5246                           postinc0	equ	0xFEE
  5247                           wreg	equ	0xFE8
  5248                           postdec1	equ	0xFE5
  5249                           fsr1l	equ	0xFE1
  5250                           status	equ	0xFD8
  5251                           
  5252 ;; *************** function ___lldiv *****************
  5253 ;; Defined at:
  5254 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  dividend        4   30[BANK0 ] unsigned long 
  5257 ;;  divisor         4   34[BANK0 ] unsigned long 
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  quotient        4   38[BANK0 ] unsigned long 
  5260 ;;  counter         1   42[BANK0 ] unsigned char 
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  4   30[BANK0 ] unsigned long 
  5263 ;; Registers used:
  5264 ;;		wreg, status,2, status,0
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5270 ;;      Params:         0       8       0       0
  5271 ;;      Locals:         0       5       0       0
  5272 ;;      Temps:          0       0       0       0
  5273 ;;      Totals:         0      13       0       0
  5274 ;;Total ram usage:       13 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:    4
  5277 ;; This function calls:
  5278 ;;		Nothing
  5279 ;; This function is called by:
  5280 ;;		_main
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text15
  5285  0020AE                     __ptext15:
  5286                           	opt stack 0
  5287  0020AE                     ___lldiv:
  5288                           	opt stack 26
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;incstack = 0
  5292  0020AE  0E00               	movlw	0
  5293  0020B0  0100               	movlb	0	; () banked
  5294  0020B2  6F86               	movwf	___lldiv@quotient& (0+255),b
  5295  0020B4  0E00               	movlw	0
  5296  0020B6  6F87               	movwf	(___lldiv@quotient+1)& (0+255),b
  5297  0020B8  0E00               	movlw	0
  5298  0020BA  6F88               	movwf	(___lldiv@quotient+2)& (0+255),b
  5299  0020BC  0E00               	movlw	0
  5300  0020BE  6F89               	movwf	(___lldiv@quotient+3)& (0+255),b
  5301                           
  5302                           ; BSR set to: 0
  5303  0020C0  0100               	movlb	0	; () banked
  5304  0020C2  5182               	movf	___lldiv@divisor& (0+255),w,b
  5305  0020C4  0100               	movlb	0	; () banked
  5306  0020C6  1183               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  5307  0020C8  0100               	movlb	0	; () banked
  5308  0020CA  1184               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  5309  0020CC  0100               	movlb	0	; () banked
  5310  0020CE  1185               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  5311  0020D0  B4D8               	btfsc	status,2,c
  5312  0020D2  D047               	goto	l1132
  5313                           
  5314                           ; BSR set to: 0
  5315  0020D4  0E01               	movlw	1
  5316  0020D6  0100               	movlb	0	; () banked
  5317  0020D8  6F8A               	movwf	___lldiv@counter& (0+255),b
  5318  0020DA  D009               	goto	l3478
  5319  0020DC                     l3476:
  5320                           
  5321                           ; BSR set to: 0
  5322  0020DC  0100               	movlb	0	; () banked
  5323  0020DE  90D8               	bcf	status,0,c
  5324  0020E0  3782               	rlcf	___lldiv@divisor& (0+255),f,b
  5325  0020E2  3783               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  5326  0020E4  3784               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  5327  0020E6  3785               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  5328  0020E8  0100               	movlb	0	; () banked
  5329  0020EA  2B8A               	incf	___lldiv@counter& (0+255),f,b
  5330  0020EC  D000               	goto	l3478
  5331  0020EE                     l3478:
  5332                           
  5333                           ; BSR set to: 0
  5334  0020EE  0100               	movlb	0	; () banked
  5335  0020F0  BF85               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
  5336  0020F2  D002               	goto	l3480
  5337  0020F4  D7F3               	goto	l3476
  5338                           
  5339                           ; BSR set to: 0
  5340  0020F6  D000               	goto	l3480
  5341  0020F8                     l3480:
  5342                           
  5343                           ; BSR set to: 0
  5344  0020F8  0100               	movlb	0	; () banked
  5345  0020FA  90D8               	bcf	status,0,c
  5346  0020FC  3786               	rlcf	___lldiv@quotient& (0+255),f,b
  5347  0020FE  3787               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  5348  002100  3788               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  5349  002102  3789               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  5350                           
  5351                           ; BSR set to: 0
  5352  002104  0100               	movlb	0	; () banked
  5353  002106  5182               	movf	___lldiv@divisor& (0+255),w,b
  5354  002108  0100               	movlb	0	; () banked
  5355  00210A  5D7E               	subwf	___lldiv@dividend& (0+255),w,b
  5356  00210C  0100               	movlb	0	; () banked
  5357  00210E  5183               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5358  002110  0100               	movlb	0	; () banked
  5359  002112  597F               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  5360  002114  0100               	movlb	0	; () banked
  5361  002116  5184               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5362  002118  0100               	movlb	0	; () banked
  5363  00211A  5980               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  5364  00211C  0100               	movlb	0	; () banked
  5365  00211E  5185               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5366  002120  0100               	movlb	0	; () banked
  5367  002122  5981               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  5368  002124  A0D8               	btfss	status,0,c
  5369  002126  D013               	goto	l3488
  5370                           
  5371                           ; BSR set to: 0
  5372  002128  0100               	movlb	0	; () banked
  5373  00212A  5182               	movf	___lldiv@divisor& (0+255),w,b
  5374  00212C  0100               	movlb	0	; () banked
  5375  00212E  5F7E               	subwf	___lldiv@dividend& (0+255),f,b
  5376  002130  0100               	movlb	0	; () banked
  5377  002132  5183               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5378  002134  0100               	movlb	0	; () banked
  5379  002136  5B7F               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  5380  002138  0100               	movlb	0	; () banked
  5381  00213A  5184               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5382  00213C  0100               	movlb	0	; () banked
  5383  00213E  5B80               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  5384  002140  0100               	movlb	0	; () banked
  5385  002142  5185               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5386  002144  0100               	movlb	0	; () banked
  5387  002146  5B81               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  5388                           
  5389                           ; BSR set to: 0
  5390  002148  0100               	movlb	0	; () banked
  5391  00214A  8186               	bsf	___lldiv@quotient& (0+255),0,b
  5392  00214C  D000               	goto	l3488
  5393  00214E                     l3488:
  5394                           
  5395                           ; BSR set to: 0
  5396  00214E  0100               	movlb	0	; () banked
  5397  002150  90D8               	bcf	status,0,c
  5398  002152  3385               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  5399  002154  3384               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  5400  002156  3383               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  5401  002158  3382               	rrcf	___lldiv@divisor& (0+255),f,b
  5402                           
  5403                           ; BSR set to: 0
  5404  00215A  0100               	movlb	0	; () banked
  5405  00215C  2F8A               	decfsz	___lldiv@counter& (0+255),f,b
  5406  00215E  D7CC               	goto	l3480
  5407  002160  D000               	goto	l1132
  5408  002162                     l1132:
  5409                           
  5410                           ; BSR set to: 0
  5411  002162  C086  F07E         	movff	___lldiv@quotient,?___lldiv
  5412  002166  C087  F07F         	movff	___lldiv@quotient+1,?___lldiv+1
  5413  00216A  C088  F080         	movff	___lldiv@quotient+2,?___lldiv+2
  5414  00216E  C089  F081         	movff	___lldiv@quotient+3,?___lldiv+3
  5415                           
  5416                           ; BSR set to: 0
  5417  002172  0012               	return		;funcret
  5418  002174                     __end_of___lldiv:
  5419                           	opt stack 0
  5420                           tblptru	equ	0xFF8
  5421                           tblptrh	equ	0xFF7
  5422                           tblptrl	equ	0xFF6
  5423                           tablat	equ	0xFF5
  5424                           prodh	equ	0xFF4
  5425                           prodl	equ	0xFF3
  5426                           intcon	equ	0xFF2
  5427                           intcon2	equ	0xFF1
  5428                           postinc0	equ	0xFEE
  5429                           wreg	equ	0xFE8
  5430                           postdec1	equ	0xFE5
  5431                           fsr1l	equ	0xFE1
  5432                           status	equ	0xFD8
  5433                           
  5434 ;; *************** function _CANisTXwarningON *****************
  5435 ;; Defined at:
  5436 ;;		line 1119 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;		None
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;		None
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  1    wreg      unsigned char 
  5443 ;; Registers used:
  5444 ;;		wreg
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5450 ;;      Params:         0       0       0       0
  5451 ;;      Locals:         0       0       0       0
  5452 ;;      Temps:          0       0       0       0
  5453 ;;      Totals:         0       0       0       0
  5454 ;;Total ram usage:        0 bytes
  5455 ;; Hardware stack levels used:    1
  5456 ;; Hardware stack levels required when called:    4
  5457 ;; This function calls:
  5458 ;;		Nothing
  5459 ;; This function is called by:
  5460 ;;		_main
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464                           	psect	text16
  5465  0025A8                     __ptext16:
  5466                           	opt stack 0
  5467  0025A8                     _CANisTXwarningON:
  5468                           	opt stack 26
  5469                           
  5470                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  5471                           
  5472                           ; BSR set to: 0
  5473                           ;incstack = 0
  5474  0025A8  A474               	btfss	3956,2,c	;volatile
  5475  0025AA  D002               	goto	u3780
  5476  0025AC  0E01               	movlw	1
  5477  0025AE  D002               	goto	l527
  5478  0025B0                     u3780:
  5479  0025B0  0E00               	movlw	0
  5480  0025B2  D000               	goto	l527
  5481  0025B4                     l527:
  5482  0025B4  0012               	return		;funcret
  5483  0025B6                     __end_of_CANisTXwarningON:
  5484                           	opt stack 0
  5485                           tblptru	equ	0xFF8
  5486                           tblptrh	equ	0xFF7
  5487                           tblptrl	equ	0xFF6
  5488                           tablat	equ	0xFF5
  5489                           prodh	equ	0xFF4
  5490                           prodl	equ	0xFF3
  5491                           intcon	equ	0xFF2
  5492                           intcon2	equ	0xFF1
  5493                           postinc0	equ	0xFEE
  5494                           wreg	equ	0xFE8
  5495                           postdec1	equ	0xFE5
  5496                           fsr1l	equ	0xFE1
  5497                           status	equ	0xFD8
  5498                           
  5499 ;; *************** function _CANisRXwarningON *****************
  5500 ;; Defined at:
  5501 ;;		line 1127 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      unsigned char 
  5508 ;; Registers used:
  5509 ;;		wreg
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5515 ;;      Params:         0       0       0       0
  5516 ;;      Locals:         0       0       0       0
  5517 ;;      Temps:          0       0       0       0
  5518 ;;      Totals:         0       0       0       0
  5519 ;;Total ram usage:        0 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    4
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_main
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text17
  5530  0025B6                     __ptext17:
  5531                           	opt stack 0
  5532  0025B6                     _CANisRXwarningON:
  5533                           	opt stack 26
  5534                           
  5535                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  5536                           
  5537                           ;incstack = 0
  5538  0025B6  A274               	btfss	3956,1,c	;volatile
  5539  0025B8  D002               	goto	u3790
  5540  0025BA  0E01               	movlw	1
  5541  0025BC  D002               	goto	l530
  5542  0025BE                     u3790:
  5543  0025BE  0E00               	movlw	0
  5544  0025C0  D000               	goto	l530
  5545  0025C2                     l530:
  5546  0025C2  0012               	return		;funcret
  5547  0025C4                     __end_of_CANisRXwarningON:
  5548                           	opt stack 0
  5549                           tblptru	equ	0xFF8
  5550                           tblptrh	equ	0xFF7
  5551                           tblptrl	equ	0xFF6
  5552                           tablat	equ	0xFF5
  5553                           prodh	equ	0xFF4
  5554                           prodl	equ	0xFF3
  5555                           intcon	equ	0xFF2
  5556                           intcon2	equ	0xFF1
  5557                           postinc0	equ	0xFEE
  5558                           wreg	equ	0xFE8
  5559                           postdec1	equ	0xFE5
  5560                           fsr1l	equ	0xFE1
  5561                           status	equ	0xFD8
  5562                           
  5563 ;; *************** function _ISR_bassa *****************
  5564 ;; Defined at:
  5565 ;;		line 85 in file "sterzo.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;		None
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;		None               void
  5572 ;; Registers used:
  5573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5579 ;;      Params:         0       0       0       0
  5580 ;;      Locals:         0       0       0       0
  5581 ;;      Temps:         20       0       0       0
  5582 ;;      Totals:        20       0       0       0
  5583 ;;Total ram usage:       20 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:    3
  5586 ;; This function calls:
  5587 ;;		_CANisRxReady
  5588 ;;		_CANreceiveMessage
  5589 ;;		_CANsendMessage
  5590 ;;		___lwdiv
  5591 ;;		i1___wmul
  5592 ;; This function is called by:
  5593 ;;		Interrupt level 1
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	intcodelo
  5598  000018                     __pintcodelo:
  5599                           	opt stack 0
  5600  000018                     _ISR_bassa:
  5601                           	opt stack 24
  5602                           
  5603                           ;incstack = 0
  5604  000018  CFD8 F014          	movff	status,??_ISR_bassa+3
  5605  00001C  CFE8 F015          	movff	wreg,??_ISR_bassa+4
  5606  000020  CFE0 F016          	movff	bsr,??_ISR_bassa+5
  5607  000024  CFFA F017          	movff	pclath,??_ISR_bassa+6
  5608  000028  CFFB F018          	movff	pclatu,??_ISR_bassa+7
  5609  00002C  CFE9 F019          	movff	fsr0l,??_ISR_bassa+8
  5610  000030  CFEA F01A          	movff	fsr0h,??_ISR_bassa+9
  5611  000034  CFE1 F01B          	movff	fsr1l,??_ISR_bassa+10
  5612  000038  CFE2 F01C          	movff	fsr1h,??_ISR_bassa+11
  5613  00003C  CFD9 F01D          	movff	fsr2l,??_ISR_bassa+12
  5614  000040  CFDA F01E          	movff	fsr2h,??_ISR_bassa+13
  5615  000044  CFF3 F01F          	movff	prodl,??_ISR_bassa+14
  5616  000048  CFF4 F020          	movff	prodh,??_ISR_bassa+15
  5617  00004C  CFF6 F021          	movff	tblptrl,??_ISR_bassa+16
  5618  000050  CFF7 F022          	movff	tblptrh,??_ISR_bassa+17
  5619  000054  CFF8 F023          	movff	tblptru,??_ISR_bassa+18
  5620  000058  CFF5 F024          	movff	tablat,??_ISR_bassa+19
  5621                           
  5622                           ;sterzo.c: 86: if (CANisRxReady()) {
  5623  00005C  ECAE  F012         	call	_CANisRxReady	;wreg free
  5624  000060  0900               	iorlw	0
  5625  000062  B4D8               	btfsc	status,2,c
  5626  000064  D084               	goto	i1l608
  5627                           
  5628                           ;sterzo.c: 87: CANreceiveMessage(&msg);
  5629  000066  0E30               	movlw	low _msg
  5630  000068  6E01               	movwf	CANreceiveMessage@msg,c
  5631  00006A  0E00               	movlw	high _msg
  5632  00006C  6E02               	movwf	CANreceiveMessage@msg+1,c
  5633  00006E  ECC3  F009         	call	_CANreceiveMessage	;wreg free
  5634                           
  5635                           ;sterzo.c: 88: if (msg.identifier == 0b00000000111) {
  5636  000072  0E07               	movlw	7
  5637  000074  1830               	xorwf	_msg,w,c
  5638  000076  1031               	iorwf	_msg+1,w,c
  5639  000078  1032               	iorwf	_msg+2,w,c
  5640  00007A  1033               	iorwf	_msg+3,w,c
  5641  00007C  A4D8               	btfss	status,2,c
  5642  00007E  D057               	goto	i1l3572
  5643                           
  5644                           ;sterzo.c: 89: id = msg.identifier;
  5645  000080  C030  F025         	movff	_msg,_id
  5646  000084  C031  F026         	movff	_msg+1,_id+1
  5647  000088  C032  F027         	movff	_msg+2,_id+2
  5648  00008C  C033  F028         	movff	_msg+3,_id+3
  5649                           
  5650                           ;sterzo.c: 90: remote_frame = msg.RTR;
  5651  000090  924B               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  5652  000092  B03E               	btfsc	_msg+14,0,c
  5653  000094  824B               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  5654                           
  5655                           ;sterzo.c: 91: theorySteering = msg.data[0];
  5656  000096  C034  F02F         	movff	_msg+4,_theorySteering
  5657                           
  5658                           ;sterzo.c: 92: if (theorySteering < calibration) {
  5659  00009A  502F               	movf	_theorySteering,w,c
  5660  00009C  6E11               	movwf	??_ISR_bassa& (0+255),c
  5661  00009E  6A12               	clrf	(??_ISR_bassa+1)& (0+255),c
  5662  0000A0  502D               	movf	_calibration,w,c
  5663  0000A2  5C11               	subwf	??_ISR_bassa,w,c
  5664  0000A4  5012               	movf	??_ISR_bassa+1,w,c
  5665  0000A6  0A80               	xorlw	128
  5666  0000A8  6E13               	movwf	(??_ISR_bassa+2)& (0+255),c
  5667  0000AA  502E               	movf	_calibration+1,w,c
  5668  0000AC  0A80               	xorlw	128
  5669  0000AE  5813               	subwfb	(??_ISR_bassa+2)& (0+255),w,c
  5670  0000B0  B0D8               	btfsc	status,0,c
  5671  0000B2  D005               	goto	i1l3558
  5672                           
  5673                           ;sterzo.c: 93: currentSteering = 0;
  5674  0000B4  0E00               	movlw	0
  5675  0000B6  6E48               	movwf	_currentSteering+1,c
  5676  0000B8  0E00               	movlw	0
  5677  0000BA  6E47               	movwf	_currentSteering,c
  5678  0000BC  D000               	goto	i1l3558
  5679  0000BE                     i1l3558:
  5680                           
  5681                           ;sterzo.c: 94: }
  5682                           ;sterzo.c: 95: currentSteering = theorySteering;
  5683  0000BE  C02F  F047         	movff	_theorySteering,_currentSteering
  5684  0000C2  6A48               	clrf	_currentSteering+1,c
  5685                           
  5686                           ;sterzo.c: 97: currentSteering = ((limiteDx * currentSteering) / 180) + calibration;
  5687  0000C4  C047  F001         	movff	_currentSteering,i1___wmul@multiplier
  5688  0000C8  C048  F002         	movff	_currentSteering+1,i1___wmul@multiplier+1
  5689  0000CC  C049  F003         	movff	_limiteDx,i1___wmul@multiplicand
  5690  0000D0  C04A  F004         	movff	_limiteDx+1,i1___wmul@multiplicand+1
  5691  0000D4  EC8E  F012         	call	i1___wmul	;wreg free
  5692  0000D8  C001  F007         	movff	?i1___wmul,___lwdiv@dividend
  5693  0000DC  C002  F008         	movff	?i1___wmul+1,___lwdiv@dividend+1
  5694  0000E0  0E00               	movlw	0
  5695  0000E2  6E0A               	movwf	___lwdiv@divisor+1,c
  5696  0000E4  0EB4               	movlw	180
  5697  0000E6  6E09               	movwf	___lwdiv@divisor,c
  5698  0000E8  ECFC  F011         	call	___lwdiv	;wreg free
  5699  0000EC  502D               	movf	_calibration,w,c
  5700  0000EE  2407               	addwf	?___lwdiv,w,c
  5701  0000F0  6E47               	movwf	_currentSteering,c
  5702  0000F2  502E               	movf	_calibration+1,w,c
  5703  0000F4  2008               	addwfc	?___lwdiv+1,w,c
  5704  0000F6  6E48               	movwf	_currentSteering+1,c
  5705                           
  5706                           ;sterzo.c: 98: if (currentSteering > 180) {
  5707  0000F8  BE48               	btfsc	_currentSteering+1,7,c
  5708  0000FA  D00B               	goto	i1l3566
  5709  0000FC  5048               	movf	_currentSteering+1,w,c
  5710  0000FE  E104               	bnz	i1u400_20
  5711  000100  0EB5               	movlw	181
  5712  000102  5C47               	subwf	_currentSteering,w,c
  5713  000104  A0D8               	btfss	status,0,c
  5714  000106  D005               	goto	i1l3566
  5715  000108                     i1u400_20:
  5716                           
  5717                           ;sterzo.c: 99: currentSteering = 180;
  5718  000108  0E00               	movlw	0
  5719  00010A  6E48               	movwf	_currentSteering+1,c
  5720  00010C  0EB4               	movlw	180
  5721  00010E  6E47               	movwf	_currentSteering,c
  5722  000110  D000               	goto	i1l3566
  5723  000112                     i1l3566:
  5724                           
  5725                           ;sterzo.c: 100: }
  5726                           ;sterzo.c: 101: if (currentSteering < 1) {
  5727  000112  BE48               	btfsc	_currentSteering+1,7,c
  5728  000114  D005               	goto	i1l3568
  5729  000116  5048               	movf	_currentSteering+1,w,c
  5730  000118  E108               	bnz	i1l3570
  5731  00011A  0447               	decf	_currentSteering,w,c
  5732  00011C  B0D8               	btfsc	status,0,c
  5733  00011E  D005               	goto	i1l3570
  5734  000120                     i1l3568:
  5735                           
  5736                           ;sterzo.c: 102: currentSteering = 0;
  5737  000120  0E00               	movlw	0
  5738  000122  6E48               	movwf	_currentSteering+1,c
  5739  000124  0E00               	movlw	0
  5740  000126  6E47               	movwf	_currentSteering,c
  5741  000128  D000               	goto	i1l3570
  5742  00012A                     i1l3570:
  5743                           
  5744                           ;sterzo.c: 103: }
  5745                           ;sterzo.c: 106: noChange = 1;
  5746  00012A  804B               	bsf	_noChange/(0+8),_noChange& (0+7),c
  5747  00012C  D000               	goto	i1l3572
  5748  00012E                     i1l3572:
  5749                           
  5750                           ;sterzo.c: 107: }
  5751                           ;sterzo.c: 108: if (msg.identifier == 0b00000000011) {
  5752  00012E  0E03               	movlw	3
  5753  000130  1830               	xorwf	_msg,w,c
  5754  000132  1031               	iorwf	_msg+1,w,c
  5755  000134  1032               	iorwf	_msg+2,w,c
  5756  000136  1033               	iorwf	_msg+3,w,c
  5757  000138  A4D8               	btfss	status,2,c
  5758  00013A  D016               	goto	i1l3580
  5759                           
  5760                           ;sterzo.c: 109: PORTCbits.RC1 = ~PORTCbits.RC1;
  5761  00013C  7282               	btg	3970,1,c	;volatile
  5762                           
  5763                           ;sterzo.c: 110: data_array [0] = 0x02;
  5764  00013E  0E02               	movlw	2
  5765  000140  6E3F               	movwf	_data_array,c
  5766                           
  5767                           ;sterzo.c: 111: CANsendMessage(0b00000000011, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NO
      +                          RMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  5768  000142  0E03               	movlw	3
  5769  000144  6E01               	movwf	CANsendMessage@identifier,c
  5770  000146  0E00               	movlw	0
  5771  000148  6E02               	movwf	CANsendMessage@identifier+1,c
  5772  00014A  0E00               	movlw	0
  5773  00014C  6E03               	movwf	CANsendMessage@identifier+2,c
  5774  00014E  0E00               	movlw	0
  5775  000150  6E04               	movwf	CANsendMessage@identifier+3,c
  5776  000152  0E3F               	movlw	low _data_array
  5777  000154  6E05               	movwf	CANsendMessage@data,c
  5778  000156  0E00               	movlw	high _data_array
  5779  000158  6E06               	movwf	CANsendMessage@data+1,c
  5780  00015A  0E08               	movlw	8
  5781  00015C  6E07               	movwf	CANsendMessage@dataLength,c
  5782  00015E  0EBC               	movlw	188
  5783  000160  6E08               	movwf	CANsendMessage@flags,c
  5784  000162  EC71  F006         	call	_CANsendMessage	;wreg free
  5785  000166  D000               	goto	i1l3580
  5786  000168                     i1l3580:
  5787                           
  5788                           ;sterzo.c: 112: }
  5789                           ;sterzo.c: 113: PIR3bits.RXB0IF = 0;
  5790  000168  90A4               	bcf	4004,0,c	;volatile
  5791                           
  5792                           ;sterzo.c: 114: PIR3bits.RXB1IF = 0;
  5793  00016A  92A4               	bcf	4004,1,c	;volatile
  5794  00016C  D000               	goto	i1l608
  5795  00016E                     i1l608:
  5796  00016E  C024  FFF5         	movff	??_ISR_bassa+19,tablat
  5797  000172  C023  FFF8         	movff	??_ISR_bassa+18,tblptru
  5798  000176  C022  FFF7         	movff	??_ISR_bassa+17,tblptrh
  5799  00017A  C021  FFF6         	movff	??_ISR_bassa+16,tblptrl
  5800  00017E  C020  FFF4         	movff	??_ISR_bassa+15,prodh
  5801  000182  C01F  FFF3         	movff	??_ISR_bassa+14,prodl
  5802  000186  C01E  FFDA         	movff	??_ISR_bassa+13,fsr2h
  5803  00018A  C01D  FFD9         	movff	??_ISR_bassa+12,fsr2l
  5804  00018E  C01C  FFE2         	movff	??_ISR_bassa+11,fsr1h
  5805  000192  C01B  FFE1         	movff	??_ISR_bassa+10,fsr1l
  5806  000196  C01A  FFEA         	movff	??_ISR_bassa+9,fsr0h
  5807  00019A  C019  FFE9         	movff	??_ISR_bassa+8,fsr0l
  5808  00019E  C018  FFFB         	movff	??_ISR_bassa+7,pclatu
  5809  0001A2  C017  FFFA         	movff	??_ISR_bassa+6,pclath
  5810  0001A6  C016  FFE0         	movff	??_ISR_bassa+5,bsr
  5811  0001AA  C015  FFE8         	movff	??_ISR_bassa+4,wreg
  5812  0001AE  C014  FFD8         	movff	??_ISR_bassa+3,status
  5813  0001B2  0010               	retfie	
  5814  0001B4                     __end_of_ISR_bassa:
  5815                           	opt stack 0
  5816                           pclatu	equ	0xFFB
  5817                           pclath	equ	0xFFA
  5818                           tblptru	equ	0xFF8
  5819                           tblptrh	equ	0xFF7
  5820                           tblptrl	equ	0xFF6
  5821                           tablat	equ	0xFF5
  5822                           prodh	equ	0xFF4
  5823                           prodl	equ	0xFF3
  5824                           intcon	equ	0xFF2
  5825                           intcon2	equ	0xFF1
  5826                           postinc0	equ	0xFEE
  5827                           fsr0h	equ	0xFEA
  5828                           fsr0l	equ	0xFE9
  5829                           wreg	equ	0xFE8
  5830                           postdec1	equ	0xFE5
  5831                           fsr1h	equ	0xFE2
  5832                           fsr1l	equ	0xFE1
  5833                           bsr	equ	0xFE0
  5834                           fsr2h	equ	0xFDA
  5835                           fsr2l	equ	0xFD9
  5836                           status	equ	0xFD8
  5837                           
  5838 ;; *************** function i1___wmul *****************
  5839 ;; Defined at:
  5840 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  multiplier      2    0[COMRAM] unsigned int 
  5843 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;  __wmul          2    4[COMRAM] unsigned int 
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  2    0[COMRAM] unsigned int 
  5848 ;; Registers used:
  5849 ;;		wreg, status,2, status,0, prodl, prodh
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5855 ;;      Params:         4       0       0       0
  5856 ;;      Locals:         2       0       0       0
  5857 ;;      Temps:          0       0       0       0
  5858 ;;      Totals:         6       0       0       0
  5859 ;;Total ram usage:        6 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; Hardware stack levels required when called:    2
  5862 ;; This function calls:
  5863 ;;		Nothing
  5864 ;; This function is called by:
  5865 ;;		_ISR_bassa
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text19
  5870  00251C                     __ptext19:
  5871                           	opt stack 0
  5872  00251C                     i1___wmul:
  5873                           	opt stack 24
  5874                           
  5875                           ;incstack = 0
  5876  00251C  5001               	movf	i1___wmul@multiplier,w,c
  5877  00251E  0203               	mulwf	i1___wmul@multiplicand,c
  5878  002520  CFF3 F005          	movff	prodl,i1___wmul@product
  5879  002524  CFF4 F006          	movff	prodh,i1___wmul@product+1
  5880  002528  5001               	movf	i1___wmul@multiplier,w,c
  5881  00252A  0204               	mulwf	i1___wmul@multiplicand+1,c
  5882  00252C  50F3               	movf	prodl,w,c
  5883  00252E  2606               	addwf	i1___wmul@product+1,f,c
  5884  002530  5002               	movf	i1___wmul@multiplier+1,w,c
  5885  002532  0203               	mulwf	i1___wmul@multiplicand,c
  5886  002534  50F3               	movf	prodl,w,c
  5887  002536  2606               	addwf	i1___wmul@product+1,f,c
  5888  002538  C005  F001         	movff	i1___wmul@product,?i1___wmul
  5889  00253C  C006  F002         	movff	i1___wmul@product+1,?i1___wmul+1
  5890  002540  D000               	goto	i1l677
  5891  002542                     i1l677:
  5892  002542  0012               	return		;funcret
  5893  002544                     __end_ofi1___wmul:
  5894                           	opt stack 0
  5895                           pclatu	equ	0xFFB
  5896                           pclath	equ	0xFFA
  5897                           tblptru	equ	0xFF8
  5898                           tblptrh	equ	0xFF7
  5899                           tblptrl	equ	0xFF6
  5900                           tablat	equ	0xFF5
  5901                           prodh	equ	0xFF4
  5902                           prodl	equ	0xFF3
  5903                           intcon	equ	0xFF2
  5904                           intcon2	equ	0xFF1
  5905                           postinc0	equ	0xFEE
  5906                           fsr0h	equ	0xFEA
  5907                           fsr0l	equ	0xFE9
  5908                           wreg	equ	0xFE8
  5909                           postdec1	equ	0xFE5
  5910                           fsr1h	equ	0xFE2
  5911                           fsr1l	equ	0xFE1
  5912                           bsr	equ	0xFE0
  5913                           fsr2h	equ	0xFDA
  5914                           fsr2l	equ	0xFD9
  5915                           status	equ	0xFD8
  5916                           
  5917 ;; *************** function ___lwdiv *****************
  5918 ;; Defined at:
  5919 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  dividend        2    6[COMRAM] unsigned int 
  5922 ;;  divisor         2    8[COMRAM] unsigned int 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  quotient        2   10[COMRAM] unsigned int 
  5925 ;;  counter         1   12[COMRAM] unsigned char 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  2    6[COMRAM] unsigned int 
  5928 ;; Registers used:
  5929 ;;		wreg, status,2, status,0
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5935 ;;      Params:         4       0       0       0
  5936 ;;      Locals:         3       0       0       0
  5937 ;;      Temps:          0       0       0       0
  5938 ;;      Totals:         7       0       0       0
  5939 ;;Total ram usage:        7 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    2
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_ISR_bassa
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text20
  5950  0023F8                     __ptext20:
  5951                           	opt stack 0
  5952  0023F8                     ___lwdiv:
  5953                           	opt stack 24
  5954                           
  5955                           ;incstack = 0
  5956  0023F8  0E00               	movlw	0
  5957  0023FA  6E0C               	movwf	___lwdiv@quotient+1,c
  5958  0023FC  0E00               	movlw	0
  5959  0023FE  6E0B               	movwf	___lwdiv@quotient,c
  5960  002400  5009               	movf	___lwdiv@divisor,w,c
  5961  002402  100A               	iorwf	___lwdiv@divisor+1,w,c
  5962  002404  B4D8               	btfsc	status,2,c
  5963  002406  D021               	goto	i1l1195
  5964  002408  0E01               	movlw	1
  5965  00240A  6E0D               	movwf	___lwdiv@counter,c
  5966  00240C  D005               	goto	i1l3500
  5967  00240E                     i1l3498:
  5968  00240E  90D8               	bcf	status,0,c
  5969  002410  3609               	rlcf	___lwdiv@divisor,f,c
  5970  002412  360A               	rlcf	___lwdiv@divisor+1,f,c
  5971  002414  2A0D               	incf	___lwdiv@counter,f,c
  5972  002416  D000               	goto	i1l3500
  5973  002418                     i1l3500:
  5974  002418  BE0A               	btfsc	___lwdiv@divisor+1,7,c
  5975  00241A  D002               	goto	i1l3502
  5976  00241C  D7F8               	goto	i1l3498
  5977  00241E  D000               	goto	i1l3502
  5978  002420                     i1l3502:
  5979  002420  90D8               	bcf	status,0,c
  5980  002422  360B               	rlcf	___lwdiv@quotient,f,c
  5981  002424  360C               	rlcf	___lwdiv@quotient+1,f,c
  5982  002426  5009               	movf	___lwdiv@divisor,w,c
  5983  002428  5C07               	subwf	___lwdiv@dividend,w,c
  5984  00242A  500A               	movf	___lwdiv@divisor+1,w,c
  5985  00242C  5808               	subwfb	___lwdiv@dividend+1,w,c
  5986  00242E  A0D8               	btfss	status,0,c
  5987  002430  D006               	goto	i1l3510
  5988  002432  5009               	movf	___lwdiv@divisor,w,c
  5989  002434  5E07               	subwf	___lwdiv@dividend,f,c
  5990  002436  500A               	movf	___lwdiv@divisor+1,w,c
  5991  002438  5A08               	subwfb	___lwdiv@dividend+1,f,c
  5992  00243A  800B               	bsf	___lwdiv@quotient,0,c
  5993  00243C  D000               	goto	i1l3510
  5994  00243E                     i1l3510:
  5995  00243E  90D8               	bcf	status,0,c
  5996  002440  320A               	rrcf	___lwdiv@divisor+1,f,c
  5997  002442  3209               	rrcf	___lwdiv@divisor,f,c
  5998  002444  2E0D               	decfsz	___lwdiv@counter,f,c
  5999  002446  D7EC               	goto	i1l3502
  6000  002448  D000               	goto	i1l1195
  6001  00244A                     i1l1195:
  6002  00244A  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  6003  00244E  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6004  002452  0012               	return		;funcret
  6005  002454                     __end_of___lwdiv:
  6006                           	opt stack 0
  6007                           pclatu	equ	0xFFB
  6008                           pclath	equ	0xFFA
  6009                           tblptru	equ	0xFF8
  6010                           tblptrh	equ	0xFF7
  6011                           tblptrl	equ	0xFF6
  6012                           tablat	equ	0xFF5
  6013                           prodh	equ	0xFF4
  6014                           prodl	equ	0xFF3
  6015                           intcon	equ	0xFF2
  6016                           intcon2	equ	0xFF1
  6017                           postinc0	equ	0xFEE
  6018                           fsr0h	equ	0xFEA
  6019                           fsr0l	equ	0xFE9
  6020                           wreg	equ	0xFE8
  6021                           postdec1	equ	0xFE5
  6022                           fsr1h	equ	0xFE2
  6023                           fsr1l	equ	0xFE1
  6024                           bsr	equ	0xFE0
  6025                           fsr2h	equ	0xFDA
  6026                           fsr2l	equ	0xFD9
  6027                           status	equ	0xFD8
  6028                           
  6029 ;; *************** function _CANsendMessage *****************
  6030 ;; Defined at:
  6031 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  identifier      4    0[COMRAM] unsigned long 
  6034 ;;  data            2    4[COMRAM] PTR unsigned char 
  6035 ;;		 -> data_array(8), 
  6036 ;;  dataLength      1    6[COMRAM] unsigned char 
  6037 ;;  flags           1    7[COMRAM] enum E16907
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  tamp            4   12[COMRAM] unsigned long 
  6040 ;; Return value:  Size  Location     Type
  6041 ;;		None               void
  6042 ;; Registers used:
  6043 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6049 ;;      Params:         8       0       0       0
  6050 ;;      Locals:         4       0       0       0
  6051 ;;      Temps:          4       0       0       0
  6052 ;;      Totals:        16       0       0       0
  6053 ;;Total ram usage:       16 bytes
  6054 ;; Hardware stack levels used:    1
  6055 ;; Hardware stack levels required when called:    2
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_ISR_bassa
  6060 ;;		_send_data
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text21
  6065  000CE2                     __ptext21:
  6066                           	opt stack 0
  6067  000CE2                     _CANsendMessage:
  6068                           	opt stack 24
  6069                           
  6070                           ;inc\CANlib.h: 296: unsigned long tamp;
  6071                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  6072                           
  6073                           ;incstack = 0
  6074  000CE2  010F               	movlb	15	; () banked
  6075  000CE4  B740               	btfsc	64,3,b	;volatile
  6076  000CE6  D118               	goto	i1l347
  6077                           
  6078                           ; BSR set to: 15
  6079                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  6080  000CE8  C007  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  6081                           
  6082                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  6083  000CEC  AC08               	btfss	CANsendMessage@flags,6,c
  6084  000CEE  D003               	goto	i1l348
  6085                           
  6086                           ; BSR set to: 15
  6087                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  6088  000CF0  010F               	movlb	15	; () banked
  6089  000CF2  8D45               	bsf	69,6,b	;volatile
  6090  000CF4  D002               	goto	i1l349
  6091  000CF6                     i1l348:
  6092                           
  6093                           ; BSR set to: 15
  6094                           ;inc\CANlib.h: 302: else
  6095                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  6096  000CF6  010F               	movlb	15	; () banked
  6097  000CF8  9D45               	bcf	69,6,b	;volatile
  6098  000CFA                     i1l349:
  6099                           
  6100                           ; BSR set to: 15
  6101                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  6102  000CFA  A608               	btfss	CANsendMessage@flags,3,c
  6103  000CFC  D067               	goto	i1l350
  6104                           
  6105                           ; BSR set to: 15
  6106                           ;inc\CANlib.h: 306: {
  6107                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  6108  000CFE  5001               	movf	CANsendMessage@identifier,w,c
  6109  000D00  6E0D               	movwf	CANsendMessage@tamp,c
  6110  000D02  6A0E               	clrf	CANsendMessage@tamp+1,c
  6111  000D04  6A0F               	clrf	CANsendMessage@tamp+2,c
  6112  000D06  6A10               	clrf	CANsendMessage@tamp+3,c
  6113                           
  6114                           ; BSR set to: 15
  6115                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  6116  000D08  C00D  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  6117                           
  6118                           ; BSR set to: 15
  6119                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  6120  000D0C  0E00               	movlw	0
  6121  000D0E  1401               	andwf	CANsendMessage@identifier,w,c
  6122  000D10  6E0D               	movwf	CANsendMessage@tamp,c
  6123  000D12  0EFF               	movlw	255
  6124  000D14  1402               	andwf	CANsendMessage@identifier+1,w,c
  6125  000D16  6E0E               	movwf	CANsendMessage@tamp+1,c
  6126  000D18  0E00               	movlw	0
  6127  000D1A  1403               	andwf	CANsendMessage@identifier+2,w,c
  6128  000D1C  6E0F               	movwf	CANsendMessage@tamp+2,c
  6129  000D1E  0E00               	movlw	0
  6130  000D20  1404               	andwf	CANsendMessage@identifier+3,w,c
  6131  000D22  6E10               	movwf	CANsendMessage@tamp+3,c
  6132                           
  6133                           ; BSR set to: 15
  6134                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  6135  000D24  C00D  F009         	movff	CANsendMessage@tamp,??_CANsendMessage
  6136  000D28  C00E  F00A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6137  000D2C  C00F  F00B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6138  000D30  C010  F00C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6139  000D34  C00A  F009         	movff	??_CANsendMessage+1,??_CANsendMessage
  6140  000D38  C00B  F00A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6141  000D3C  C00C  F00B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6142  000D40  6A0C               	clrf	??_CANsendMessage+3,c
  6143  000D42  C009  F00D         	movff	??_CANsendMessage,CANsendMessage@tamp
  6144  000D46  C00A  F00E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6145  000D4A  C00B  F00F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6146  000D4E  C00C  F010         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6147                           
  6148                           ; BSR set to: 15
  6149                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  6150  000D52  C00D  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  6151                           
  6152                           ; BSR set to: 15
  6153                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  6154  000D56  0E00               	movlw	0
  6155  000D58  010F               	movlb	15	; () banked
  6156  000D5A  6F42               	movwf	66,b	;volatile
  6157                           
  6158                           ; BSR set to: 15
  6159                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  6160  000D5C  010F               	movlb	15	; () banked
  6161  000D5E  8742               	bsf	66,3,b	;volatile
  6162                           
  6163                           ; BSR set to: 15
  6164                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  6165  000D60  A003               	btfss	CANsendMessage@identifier+2,0,c
  6166  000D62  D002               	goto	i1l351
  6167                           
  6168                           ; BSR set to: 15
  6169                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  6170  000D64  010F               	movlb	15	; () banked
  6171  000D66  8142               	bsf	66,0,b	;volatile
  6172  000D68                     i1l351:
  6173                           
  6174                           ; BSR set to: 15
  6175                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  6176  000D68  A203               	btfss	CANsendMessage@identifier+2,1,c
  6177  000D6A  D002               	goto	i1l352
  6178                           
  6179                           ; BSR set to: 15
  6180                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  6181  000D6C  010F               	movlb	15	; () banked
  6182  000D6E  8342               	bsf	66,1,b	;volatile
  6183  000D70                     i1l352:
  6184                           
  6185                           ; BSR set to: 15
  6186                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  6187  000D70  A403               	btfss	CANsendMessage@identifier+2,2,c
  6188  000D72  D002               	goto	i1l353
  6189                           
  6190                           ; BSR set to: 15
  6191                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  6192  000D74  010F               	movlb	15	; () banked
  6193  000D76  8B42               	bsf	66,5,b	;volatile
  6194  000D78                     i1l353:
  6195                           
  6196                           ; BSR set to: 15
  6197                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  6198  000D78  A603               	btfss	CANsendMessage@identifier+2,3,c
  6199  000D7A  D002               	goto	i1l354
  6200                           
  6201                           ; BSR set to: 15
  6202                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  6203  000D7C  010F               	movlb	15	; () banked
  6204  000D7E  8D42               	bsf	66,6,b	;volatile
  6205  000D80                     i1l354:
  6206                           
  6207                           ; BSR set to: 15
  6208                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  6209  000D80  A803               	btfss	CANsendMessage@identifier+2,4,c
  6210  000D82  D003               	goto	i1l3038
  6211                           
  6212                           ; BSR set to: 15
  6213                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  6214  000D84  010F               	movlb	15	; () banked
  6215  000D86  8F42               	bsf	66,7,b	;volatile
  6216  000D88  D000               	goto	i1l3038
  6217  000D8A                     i1l3038:
  6218                           
  6219                           ; BSR set to: 15
  6220                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  6221  000D8A  C001  F009         	movff	CANsendMessage@identifier,??_CANsendMessage
  6222  000D8E  C002  F00A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6223  000D92  C003  F00B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6224  000D96  C004  F00C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6225  000D9A  0E16               	movlw	22
  6226  000D9C  D005               	goto	i1u323_20
  6227  000D9E                     i1u323_25:
  6228  000D9E  90D8               	bcf	status,0,c
  6229  000DA0  320C               	rrcf	??_CANsendMessage+3,f,c
  6230  000DA2  320B               	rrcf	??_CANsendMessage+2,f,c
  6231  000DA4  320A               	rrcf	??_CANsendMessage+1,f,c
  6232  000DA6  3209               	rrcf	??_CANsendMessage,f,c
  6233  000DA8                     i1u323_20:
  6234  000DA8  2EE8               	decfsz	wreg,f,c
  6235  000DAA  D7F9               	goto	i1u323_25
  6236  000DAC  C009  F00D         	movff	??_CANsendMessage,CANsendMessage@tamp
  6237  000DB0  C00A  F00E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6238  000DB4  C00B  F00F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6239  000DB8  C00C  F010         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6240                           
  6241                           ; BSR set to: 15
  6242                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  6243  000DBC  500D               	movf	CANsendMessage@tamp,w,c
  6244  000DBE  6E0D               	movwf	CANsendMessage@tamp,c
  6245  000DC0  6A0E               	clrf	CANsendMessage@tamp+1,c
  6246  000DC2  6A0F               	clrf	CANsendMessage@tamp+2,c
  6247  000DC4  6A10               	clrf	CANsendMessage@tamp+3,c
  6248                           
  6249                           ; BSR set to: 15
  6250                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  6251  000DC6  C00D  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  6252                           
  6253                           ;inc\CANlib.h: 332: }
  6254  000DCA  D04E               	goto	i1l3058
  6255  000DCC                     i1l350:
  6256                           
  6257                           ; BSR set to: 15
  6258                           ;inc\CANlib.h: 334: else
  6259                           ;inc\CANlib.h: 336: {
  6260                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  6261  000DCC  010F               	movlb	15	; () banked
  6262  000DCE  9742               	bcf	66,3,b	;volatile
  6263                           
  6264                           ; BSR set to: 15
  6265                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  6266  000DD0  C001  F009         	movff	CANsendMessage@identifier,??_CANsendMessage
  6267  000DD4  C002  F00A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6268  000DD8  C003  F00B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6269  000DDC  C004  F00C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6270  000DE0  0E04               	movlw	4
  6271  000DE2  D005               	goto	i1u324_20
  6272  000DE4                     i1u324_25:
  6273  000DE4  90D8               	bcf	status,0,c
  6274  000DE6  320C               	rrcf	??_CANsendMessage+3,f,c
  6275  000DE8  320B               	rrcf	??_CANsendMessage+2,f,c
  6276  000DEA  320A               	rrcf	??_CANsendMessage+1,f,c
  6277  000DEC  3209               	rrcf	??_CANsendMessage,f,c
  6278  000DEE                     i1u324_20:
  6279  000DEE  2EE8               	decfsz	wreg,f,c
  6280  000DF0  D7F9               	goto	i1u324_25
  6281  000DF2  C009  F00D         	movff	??_CANsendMessage,CANsendMessage@tamp
  6282  000DF6  C00A  F00E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6283  000DFA  C00B  F00F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6284  000DFE  C00C  F010         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6285                           
  6286                           ; BSR set to: 15
  6287                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  6288  000E02  500D               	movf	CANsendMessage@tamp,w,c
  6289  000E04  6E0D               	movwf	CANsendMessage@tamp,c
  6290  000E06  6A0E               	clrf	CANsendMessage@tamp+1,c
  6291  000E08  6A0F               	clrf	CANsendMessage@tamp+2,c
  6292  000E0A  6A10               	clrf	CANsendMessage@tamp+3,c
  6293                           
  6294                           ; BSR set to: 15
  6295                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  6296  000E0C  C00D  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  6297                           
  6298                           ; BSR set to: 15
  6299                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  6300  000E10  0E07               	movlw	7
  6301  000E12  1401               	andwf	CANsendMessage@identifier,w,c
  6302  000E14  6E0D               	movwf	CANsendMessage@tamp,c
  6303  000E16  0E00               	movlw	0
  6304  000E18  1402               	andwf	CANsendMessage@identifier+1,w,c
  6305  000E1A  6E0E               	movwf	CANsendMessage@tamp+1,c
  6306  000E1C  0E00               	movlw	0
  6307  000E1E  1403               	andwf	CANsendMessage@identifier+2,w,c
  6308  000E20  6E0F               	movwf	CANsendMessage@tamp+2,c
  6309  000E22  0E00               	movlw	0
  6310  000E24  1404               	andwf	CANsendMessage@identifier+3,w,c
  6311  000E26  6E10               	movwf	CANsendMessage@tamp+3,c
  6312                           
  6313                           ; BSR set to: 15
  6314                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  6315  000E28  C00D  F009         	movff	CANsendMessage@tamp,??_CANsendMessage
  6316  000E2C  C00E  F00A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6317  000E30  C00F  F00B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6318  000E34  C010  F00C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6319  000E38  0E05               	movlw	5
  6320  000E3A                     i1u325_25:
  6321  000E3A  90D8               	bcf	status,0,c
  6322  000E3C  3609               	rlcf	??_CANsendMessage,f,c
  6323  000E3E  360A               	rlcf	??_CANsendMessage+1,f,c
  6324  000E40  360B               	rlcf	??_CANsendMessage+2,f,c
  6325  000E42  360C               	rlcf	??_CANsendMessage+3,f,c
  6326  000E44  2EE8               	decfsz	wreg,f,c
  6327  000E46  D7F9               	goto	i1u325_25
  6328  000E48  C009  F00D         	movff	??_CANsendMessage,CANsendMessage@tamp
  6329  000E4C  C00A  F00E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6330  000E50  C00B  F00F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6331  000E54  C00C  F010         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6332                           
  6333                           ; BSR set to: 15
  6334                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  6335  000E58  010F               	movlb	15	; () banked
  6336  000E5A  5142               	movf	66,w,b	;volatile
  6337  000E5C  0B1F               	andlw	31
  6338  000E5E  010F               	movlb	15	; () banked
  6339  000E60  6F42               	movwf	66,b	;volatile
  6340                           
  6341                           ; BSR set to: 15
  6342                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  6343  000E62  C00D  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  6344  000E66  D000               	goto	i1l3058
  6345  000E68                     i1l3058:
  6346                           
  6347                           ; BSR set to: 15
  6348                           ;inc\CANlib.h: 347: }
  6349                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  6350  000E68  A008               	btfss	CANsendMessage@flags,0,c
  6351  000E6A  D003               	goto	i1l357
  6352                           
  6353                           ; BSR set to: 15
  6354                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  6355  000E6C  010F               	movlb	15	; () banked
  6356  000E6E  8140               	bsf	64,0,b	;volatile
  6357  000E70  D002               	goto	i1l358
  6358  000E72                     i1l357:
  6359                           
  6360                           ; BSR set to: 15
  6361                           ;inc\CANlib.h: 351: else
  6362                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  6363  000E72  010F               	movlb	15	; () banked
  6364  000E74  9140               	bcf	64,0,b	;volatile
  6365  000E76                     i1l358:
  6366                           
  6367                           ; BSR set to: 15
  6368                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  6369  000E76  A208               	btfss	CANsendMessage@flags,1,c
  6370  000E78  D003               	goto	i1l359
  6371                           
  6372                           ; BSR set to: 15
  6373                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  6374  000E7A  010F               	movlb	15	; () banked
  6375  000E7C  8340               	bsf	64,1,b	;volatile
  6376  000E7E  D003               	goto	i1l3064
  6377  000E80                     i1l359:
  6378                           
  6379                           ; BSR set to: 15
  6380                           ;inc\CANlib.h: 355: else
  6381                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  6382  000E80  010F               	movlb	15	; () banked
  6383  000E82  9340               	bcf	64,1,b	;volatile
  6384  000E84  D000               	goto	i1l3064
  6385  000E86                     i1l3064:
  6386                           
  6387                           ; BSR set to: 15
  6388                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  6389  000E86  C005  FFD9         	movff	CANsendMessage@data,fsr2l
  6390  000E8A  C006  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6391  000E8E  50DF               	movf	indf2,w,c
  6392  000E90  010F               	movlb	15	; () banked
  6393  000E92  6F46               	movwf	70,b	;volatile
  6394                           
  6395                           ; BSR set to: 15
  6396                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  6397  000E94  EE20 F001          	lfsr	2,1
  6398  000E98  5005               	movf	CANsendMessage@data,w,c
  6399  000E9A  26D9               	addwf	fsr2l,f,c
  6400  000E9C  5006               	movf	CANsendMessage@data+1,w,c
  6401  000E9E  22DA               	addwfc	fsr2h,f,c
  6402  000EA0  50DF               	movf	indf2,w,c
  6403  000EA2  010F               	movlb	15	; () banked
  6404  000EA4  6F47               	movwf	71,b	;volatile
  6405                           
  6406                           ; BSR set to: 15
  6407                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  6408  000EA6  EE20 F002          	lfsr	2,2
  6409  000EAA  5005               	movf	CANsendMessage@data,w,c
  6410  000EAC  26D9               	addwf	fsr2l,f,c
  6411  000EAE  5006               	movf	CANsendMessage@data+1,w,c
  6412  000EB0  22DA               	addwfc	fsr2h,f,c
  6413  000EB2  50DF               	movf	indf2,w,c
  6414  000EB4  010F               	movlb	15	; () banked
  6415  000EB6  6F48               	movwf	72,b	;volatile
  6416                           
  6417                           ; BSR set to: 15
  6418                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  6419  000EB8  EE20 F003          	lfsr	2,3
  6420  000EBC  5005               	movf	CANsendMessage@data,w,c
  6421  000EBE  26D9               	addwf	fsr2l,f,c
  6422  000EC0  5006               	movf	CANsendMessage@data+1,w,c
  6423  000EC2  22DA               	addwfc	fsr2h,f,c
  6424  000EC4  50DF               	movf	indf2,w,c
  6425  000EC6  010F               	movlb	15	; () banked
  6426  000EC8  6F49               	movwf	73,b	;volatile
  6427                           
  6428                           ; BSR set to: 15
  6429                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  6430  000ECA  EE20 F004          	lfsr	2,4
  6431  000ECE  5005               	movf	CANsendMessage@data,w,c
  6432  000ED0  26D9               	addwf	fsr2l,f,c
  6433  000ED2  5006               	movf	CANsendMessage@data+1,w,c
  6434  000ED4  22DA               	addwfc	fsr2h,f,c
  6435  000ED6  50DF               	movf	indf2,w,c
  6436  000ED8  010F               	movlb	15	; () banked
  6437  000EDA  6F4A               	movwf	74,b	;volatile
  6438                           
  6439                           ; BSR set to: 15
  6440                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  6441  000EDC  EE20 F005          	lfsr	2,5
  6442  000EE0  5005               	movf	CANsendMessage@data,w,c
  6443  000EE2  26D9               	addwf	fsr2l,f,c
  6444  000EE4  5006               	movf	CANsendMessage@data+1,w,c
  6445  000EE6  22DA               	addwfc	fsr2h,f,c
  6446  000EE8  50DF               	movf	indf2,w,c
  6447  000EEA  010F               	movlb	15	; () banked
  6448  000EEC  6F4B               	movwf	75,b	;volatile
  6449                           
  6450                           ; BSR set to: 15
  6451                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  6452  000EEE  EE20 F006          	lfsr	2,6
  6453  000EF2  5005               	movf	CANsendMessage@data,w,c
  6454  000EF4  26D9               	addwf	fsr2l,f,c
  6455  000EF6  5006               	movf	CANsendMessage@data+1,w,c
  6456  000EF8  22DA               	addwfc	fsr2h,f,c
  6457  000EFA  50DF               	movf	indf2,w,c
  6458  000EFC  010F               	movlb	15	; () banked
  6459  000EFE  6F4C               	movwf	76,b	;volatile
  6460                           
  6461                           ; BSR set to: 15
  6462                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  6463  000F00  EE20 F007          	lfsr	2,7
  6464  000F04  5005               	movf	CANsendMessage@data,w,c
  6465  000F06  26D9               	addwf	fsr2l,f,c
  6466  000F08  5006               	movf	CANsendMessage@data+1,w,c
  6467  000F0A  22DA               	addwfc	fsr2h,f,c
  6468  000F0C  50DF               	movf	indf2,w,c
  6469  000F0E  010F               	movlb	15	; () banked
  6470  000F10  6F4D               	movwf	77,b	;volatile
  6471                           
  6472                           ; BSR set to: 15
  6473                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  6474  000F12  010F               	movlb	15	; () banked
  6475  000F14  8740               	bsf	64,3,b	;volatile
  6476                           
  6477                           ; BSR set to: 15
  6478                           ;inc\CANlib.h: 368: return;
  6479  000F16  D236               	goto	i1l361
  6480  000F18                     i1l347:
  6481                           
  6482                           ; BSR set to: 15
  6483                           ;inc\CANlib.h: 369: }
  6484                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  6485  000F18  010F               	movlb	15	; () banked
  6486  000F1A  B730               	btfsc	48,3,b	;volatile
  6487  000F1C  D118               	goto	i1l362
  6488                           
  6489                           ; BSR set to: 15
  6490                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  6491  000F1E  C007  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  6492                           
  6493                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  6494  000F22  AC08               	btfss	CANsendMessage@flags,6,c
  6495  000F24  D003               	goto	i1l363
  6496                           
  6497                           ; BSR set to: 15
  6498                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  6499  000F26  010F               	movlb	15	; () banked
  6500  000F28  8D35               	bsf	53,6,b	;volatile
  6501  000F2A  D002               	goto	i1l364
  6502  000F2C                     i1l363:
  6503                           
  6504                           ; BSR set to: 15
  6505                           ;inc\CANlib.h: 378: else
  6506                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  6507  000F2C  010F               	movlb	15	; () banked
  6508  000F2E  9D35               	bcf	53,6,b	;volatile
  6509  000F30                     i1l364:
  6510                           
  6511                           ; BSR set to: 15
  6512                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  6513  000F30  A608               	btfss	CANsendMessage@flags,3,c
  6514  000F32  D067               	goto	i1l365
  6515                           
  6516                           ; BSR set to: 15
  6517                           ;inc\CANlib.h: 382: {
  6518                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  6519  000F34  5001               	movf	CANsendMessage@identifier,w,c
  6520  000F36  6E0D               	movwf	CANsendMessage@tamp,c
  6521  000F38  6A0E               	clrf	CANsendMessage@tamp+1,c
  6522  000F3A  6A0F               	clrf	CANsendMessage@tamp+2,c
  6523  000F3C  6A10               	clrf	CANsendMessage@tamp+3,c
  6524                           
  6525                           ; BSR set to: 15
  6526                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  6527  000F3E  C00D  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  6528                           
  6529                           ; BSR set to: 15
  6530                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  6531  000F42  0E00               	movlw	0
  6532  000F44  1401               	andwf	CANsendMessage@identifier,w,c
  6533  000F46  6E0D               	movwf	CANsendMessage@tamp,c
  6534  000F48  0EFF               	movlw	255
  6535  000F4A  1402               	andwf	CANsendMessage@identifier+1,w,c
  6536  000F4C  6E0E               	movwf	CANsendMessage@tamp+1,c
  6537  000F4E  0E00               	movlw	0
  6538  000F50  1403               	andwf	CANsendMessage@identifier+2,w,c
  6539  000F52  6E0F               	movwf	CANsendMessage@tamp+2,c
  6540  000F54  0E00               	movlw	0
  6541  000F56  1404               	andwf	CANsendMessage@identifier+3,w,c
  6542  000F58  6E10               	movwf	CANsendMessage@tamp+3,c
  6543                           
  6544                           ; BSR set to: 15
  6545                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  6546  000F5A  C00D  F009         	movff	CANsendMessage@tamp,??_CANsendMessage
  6547  000F5E  C00E  F00A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6548  000F62  C00F  F00B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6549  000F66  C010  F00C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6550  000F6A  C00A  F009         	movff	??_CANsendMessage+1,??_CANsendMessage
  6551  000F6E  C00B  F00A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6552  000F72  C00C  F00B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6553  000F76  6A0C               	clrf	??_CANsendMessage+3,c
  6554  000F78  C009  F00D         	movff	??_CANsendMessage,CANsendMessage@tamp
  6555  000F7C  C00A  F00E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6556  000F80  C00B  F00F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6557  000F84  C00C  F010         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6558                           
  6559                           ; BSR set to: 15
  6560                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  6561  000F88  C00D  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  6562                           
  6563                           ; BSR set to: 15
  6564                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  6565  000F8C  0E00               	movlw	0
  6566  000F8E  010F               	movlb	15	; () banked
  6567  000F90  6F32               	movwf	50,b	;volatile
  6568                           
  6569                           ; BSR set to: 15
  6570                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  6571  000F92  010F               	movlb	15	; () banked
  6572  000F94  8732               	bsf	50,3,b	;volatile
  6573                           
  6574                           ; BSR set to: 15
  6575                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  6576  000F96  A003               	btfss	CANsendMessage@identifier+2,0,c
  6577  000F98  D002               	goto	i1l366
  6578                           
  6579                           ; BSR set to: 15
  6580                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  6581  000F9A  010F               	movlb	15	; () banked
  6582  000F9C  8132               	bsf	50,0,b	;volatile
  6583  000F9E                     i1l366:
  6584                           
  6585                           ; BSR set to: 15
  6586                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  6587  000F9E  A203               	btfss	CANsendMessage@identifier+2,1,c
  6588  000FA0  D002               	goto	i1l367
  6589                           
  6590                           ; BSR set to: 15
  6591                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  6592  000FA2  010F               	movlb	15	; () banked
  6593  000FA4  8332               	bsf	50,1,b	;volatile
  6594  000FA6                     i1l367:
  6595                           
  6596                           ; BSR set to: 15
  6597                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  6598  000FA6  A403               	btfss	CANsendMessage@identifier+2,2,c
  6599  000FA8  D002               	goto	i1l368
  6600                           
  6601                           ; BSR set to: 15
  6602                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  6603  000FAA  010F               	movlb	15	; () banked
  6604  000FAC  8B32               	bsf	50,5,b	;volatile
  6605  000FAE                     i1l368:
  6606                           
  6607                           ; BSR set to: 15
  6608                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  6609  000FAE  A603               	btfss	CANsendMessage@identifier+2,3,c
  6610  000FB0  D002               	goto	i1l369
  6611                           
  6612                           ; BSR set to: 15
  6613                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  6614  000FB2  010F               	movlb	15	; () banked
  6615  000FB4  8D32               	bsf	50,6,b	;volatile
  6616  000FB6                     i1l369:
  6617                           
  6618                           ; BSR set to: 15
  6619                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  6620  000FB6  A803               	btfss	CANsendMessage@identifier+2,4,c
  6621  000FB8  D003               	goto	i1l3114
  6622                           
  6623                           ; BSR set to: 15
  6624                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  6625  000FBA  010F               	movlb	15	; () banked
  6626  000FBC  8F32               	bsf	50,7,b	;volatile
  6627  000FBE  D000               	goto	i1l3114
  6628  000FC0                     i1l3114:
  6629                           
  6630                           ; BSR set to: 15
  6631                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  6632  000FC0  C001  F009         	movff	CANsendMessage@identifier,??_CANsendMessage
  6633  000FC4  C002  F00A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6634  000FC8  C003  F00B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6635  000FCC  C004  F00C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6636  000FD0  0E16               	movlw	22
  6637  000FD2  D005               	goto	i1u336_20
  6638  000FD4                     i1u336_25:
  6639  000FD4  90D8               	bcf	status,0,c
  6640  000FD6  320C               	rrcf	??_CANsendMessage+3,f,c
  6641  000FD8  320B               	rrcf	??_CANsendMessage+2,f,c
  6642  000FDA  320A               	rrcf	??_CANsendMessage+1,f,c
  6643  000FDC  3209               	rrcf	??_CANsendMessage,f,c
  6644  000FDE                     i1u336_20:
  6645  000FDE  2EE8               	decfsz	wreg,f,c
  6646  000FE0  D7F9               	goto	i1u336_25
  6647  000FE2  C009  F00D         	movff	??_CANsendMessage,CANsendMessage@tamp
  6648  000FE6  C00A  F00E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6649  000FEA  C00B  F00F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6650  000FEE  C00C  F010         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6651                           
  6652                           ; BSR set to: 15
  6653                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  6654  000FF2  500D               	movf	CANsendMessage@tamp,w,c
  6655  000FF4  6E0D               	movwf	CANsendMessage@tamp,c
  6656  000FF6  6A0E               	clrf	CANsendMessage@tamp+1,c
  6657  000FF8  6A0F               	clrf	CANsendMessage@tamp+2,c
  6658  000FFA  6A10               	clrf	CANsendMessage@tamp+3,c
  6659                           
  6660                           ; BSR set to: 15
  6661                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  6662  000FFC  C00D  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6663                           
  6664                           ;inc\CANlib.h: 407: }
  6665  001000  D04E               	goto	i1l3134
  6666  001002                     i1l365:
  6667                           
  6668                           ; BSR set to: 15
  6669                           ;inc\CANlib.h: 409: else
  6670                           ;inc\CANlib.h: 411: {
  6671                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  6672  001002  010F               	movlb	15	; () banked
  6673  001004  9732               	bcf	50,3,b	;volatile
  6674                           
  6675                           ; BSR set to: 15
  6676                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  6677  001006  C001  F009         	movff	CANsendMessage@identifier,??_CANsendMessage
  6678  00100A  C002  F00A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6679  00100E  C003  F00B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6680  001012  C004  F00C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6681  001016  0E04               	movlw	4
  6682  001018  D005               	goto	i1u337_20
  6683  00101A                     i1u337_25:
  6684  00101A  90D8               	bcf	status,0,c
  6685  00101C  320C               	rrcf	??_CANsendMessage+3,f,c
  6686  00101E  320B               	rrcf	??_CANsendMessage+2,f,c
  6687  001020  320A               	rrcf	??_CANsendMessage+1,f,c
  6688  001022  3209               	rrcf	??_CANsendMessage,f,c
  6689  001024                     i1u337_20:
  6690  001024  2EE8               	decfsz	wreg,f,c
  6691  001026  D7F9               	goto	i1u337_25
  6692  001028  C009  F00D         	movff	??_CANsendMessage,CANsendMessage@tamp
  6693  00102C  C00A  F00E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6694  001030  C00B  F00F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6695  001034  C00C  F010         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6696                           
  6697                           ; BSR set to: 15
  6698                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  6699  001038  500D               	movf	CANsendMessage@tamp,w,c
  6700  00103A  6E0D               	movwf	CANsendMessage@tamp,c
  6701  00103C  6A0E               	clrf	CANsendMessage@tamp+1,c
  6702  00103E  6A0F               	clrf	CANsendMessage@tamp+2,c
  6703  001040  6A10               	clrf	CANsendMessage@tamp+3,c
  6704                           
  6705                           ; BSR set to: 15
  6706                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  6707  001042  C00D  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6708                           
  6709                           ; BSR set to: 15
  6710                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  6711  001046  0E07               	movlw	7
  6712  001048  1401               	andwf	CANsendMessage@identifier,w,c
  6713  00104A  6E0D               	movwf	CANsendMessage@tamp,c
  6714  00104C  0E00               	movlw	0
  6715  00104E  1402               	andwf	CANsendMessage@identifier+1,w,c
  6716  001050  6E0E               	movwf	CANsendMessage@tamp+1,c
  6717  001052  0E00               	movlw	0
  6718  001054  1403               	andwf	CANsendMessage@identifier+2,w,c
  6719  001056  6E0F               	movwf	CANsendMessage@tamp+2,c
  6720  001058  0E00               	movlw	0
  6721  00105A  1404               	andwf	CANsendMessage@identifier+3,w,c
  6722  00105C  6E10               	movwf	CANsendMessage@tamp+3,c
  6723                           
  6724                           ; BSR set to: 15
  6725                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  6726  00105E  C00D  F009         	movff	CANsendMessage@tamp,??_CANsendMessage
  6727  001062  C00E  F00A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6728  001066  C00F  F00B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6729  00106A  C010  F00C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6730  00106E  0E05               	movlw	5
  6731  001070                     i1u338_25:
  6732  001070  90D8               	bcf	status,0,c
  6733  001072  3609               	rlcf	??_CANsendMessage,f,c
  6734  001074  360A               	rlcf	??_CANsendMessage+1,f,c
  6735  001076  360B               	rlcf	??_CANsendMessage+2,f,c
  6736  001078  360C               	rlcf	??_CANsendMessage+3,f,c
  6737  00107A  2EE8               	decfsz	wreg,f,c
  6738  00107C  D7F9               	goto	i1u338_25
  6739  00107E  C009  F00D         	movff	??_CANsendMessage,CANsendMessage@tamp
  6740  001082  C00A  F00E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6741  001086  C00B  F00F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6742  00108A  C00C  F010         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6743                           
  6744                           ; BSR set to: 15
  6745                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  6746  00108E  010F               	movlb	15	; () banked
  6747  001090  5132               	movf	50,w,b	;volatile
  6748  001092  0B1F               	andlw	31
  6749  001094  010F               	movlb	15	; () banked
  6750  001096  6F32               	movwf	50,b	;volatile
  6751                           
  6752                           ; BSR set to: 15
  6753                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  6754  001098  C00D  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6755  00109C  D000               	goto	i1l3134
  6756  00109E                     i1l3134:
  6757                           
  6758                           ; BSR set to: 15
  6759                           ;inc\CANlib.h: 422: }
  6760                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  6761  00109E  A008               	btfss	CANsendMessage@flags,0,c
  6762  0010A0  D003               	goto	i1l372
  6763                           
  6764                           ; BSR set to: 15
  6765                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  6766  0010A2  010F               	movlb	15	; () banked
  6767  0010A4  8130               	bsf	48,0,b	;volatile
  6768  0010A6  D002               	goto	i1l373
  6769  0010A8                     i1l372:
  6770                           
  6771                           ; BSR set to: 15
  6772                           ;inc\CANlib.h: 426: else
  6773                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  6774  0010A8  010F               	movlb	15	; () banked
  6775  0010AA  9130               	bcf	48,0,b	;volatile
  6776  0010AC                     i1l373:
  6777                           
  6778                           ; BSR set to: 15
  6779                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  6780  0010AC  A208               	btfss	CANsendMessage@flags,1,c
  6781  0010AE  D003               	goto	i1l374
  6782                           
  6783                           ; BSR set to: 15
  6784                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  6785  0010B0  010F               	movlb	15	; () banked
  6786  0010B2  8330               	bsf	48,1,b	;volatile
  6787  0010B4  D003               	goto	i1l3140
  6788  0010B6                     i1l374:
  6789                           
  6790                           ; BSR set to: 15
  6791                           ;inc\CANlib.h: 430: else
  6792                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  6793  0010B6  010F               	movlb	15	; () banked
  6794  0010B8  9330               	bcf	48,1,b	;volatile
  6795  0010BA  D000               	goto	i1l3140
  6796  0010BC                     i1l3140:
  6797                           
  6798                           ; BSR set to: 15
  6799                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  6800  0010BC  C005  FFD9         	movff	CANsendMessage@data,fsr2l
  6801  0010C0  C006  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6802  0010C4  50DF               	movf	indf2,w,c
  6803  0010C6  010F               	movlb	15	; () banked
  6804  0010C8  6F36               	movwf	54,b	;volatile
  6805                           
  6806                           ; BSR set to: 15
  6807                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  6808  0010CA  EE20 F001          	lfsr	2,1
  6809  0010CE  5005               	movf	CANsendMessage@data,w,c
  6810  0010D0  26D9               	addwf	fsr2l,f,c
  6811  0010D2  5006               	movf	CANsendMessage@data+1,w,c
  6812  0010D4  22DA               	addwfc	fsr2h,f,c
  6813  0010D6  50DF               	movf	indf2,w,c
  6814  0010D8  010F               	movlb	15	; () banked
  6815  0010DA  6F37               	movwf	55,b	;volatile
  6816                           
  6817                           ; BSR set to: 15
  6818                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  6819  0010DC  EE20 F002          	lfsr	2,2
  6820  0010E0  5005               	movf	CANsendMessage@data,w,c
  6821  0010E2  26D9               	addwf	fsr2l,f,c
  6822  0010E4  5006               	movf	CANsendMessage@data+1,w,c
  6823  0010E6  22DA               	addwfc	fsr2h,f,c
  6824  0010E8  50DF               	movf	indf2,w,c
  6825  0010EA  010F               	movlb	15	; () banked
  6826  0010EC  6F38               	movwf	56,b	;volatile
  6827                           
  6828                           ; BSR set to: 15
  6829                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  6830  0010EE  EE20 F003          	lfsr	2,3
  6831  0010F2  5005               	movf	CANsendMessage@data,w,c
  6832  0010F4  26D9               	addwf	fsr2l,f,c
  6833  0010F6  5006               	movf	CANsendMessage@data+1,w,c
  6834  0010F8  22DA               	addwfc	fsr2h,f,c
  6835  0010FA  50DF               	movf	indf2,w,c
  6836  0010FC  010F               	movlb	15	; () banked
  6837  0010FE  6F39               	movwf	57,b	;volatile
  6838                           
  6839                           ; BSR set to: 15
  6840                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  6841  001100  EE20 F004          	lfsr	2,4
  6842  001104  5005               	movf	CANsendMessage@data,w,c
  6843  001106  26D9               	addwf	fsr2l,f,c
  6844  001108  5006               	movf	CANsendMessage@data+1,w,c
  6845  00110A  22DA               	addwfc	fsr2h,f,c
  6846  00110C  50DF               	movf	indf2,w,c
  6847  00110E  010F               	movlb	15	; () banked
  6848  001110  6F3A               	movwf	58,b	;volatile
  6849                           
  6850                           ; BSR set to: 15
  6851                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  6852  001112  EE20 F005          	lfsr	2,5
  6853  001116  5005               	movf	CANsendMessage@data,w,c
  6854  001118  26D9               	addwf	fsr2l,f,c
  6855  00111A  5006               	movf	CANsendMessage@data+1,w,c
  6856  00111C  22DA               	addwfc	fsr2h,f,c
  6857  00111E  50DF               	movf	indf2,w,c
  6858  001120  010F               	movlb	15	; () banked
  6859  001122  6F3B               	movwf	59,b	;volatile
  6860                           
  6861                           ; BSR set to: 15
  6862                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  6863  001124  EE20 F006          	lfsr	2,6
  6864  001128  5005               	movf	CANsendMessage@data,w,c
  6865  00112A  26D9               	addwf	fsr2l,f,c
  6866  00112C  5006               	movf	CANsendMessage@data+1,w,c
  6867  00112E  22DA               	addwfc	fsr2h,f,c
  6868  001130  50DF               	movf	indf2,w,c
  6869  001132  010F               	movlb	15	; () banked
  6870  001134  6F3C               	movwf	60,b	;volatile
  6871                           
  6872                           ; BSR set to: 15
  6873                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  6874  001136  EE20 F007          	lfsr	2,7
  6875  00113A  5005               	movf	CANsendMessage@data,w,c
  6876  00113C  26D9               	addwf	fsr2l,f,c
  6877  00113E  5006               	movf	CANsendMessage@data+1,w,c
  6878  001140  22DA               	addwfc	fsr2h,f,c
  6879  001142  50DF               	movf	indf2,w,c
  6880  001144  010F               	movlb	15	; () banked
  6881  001146  6F3D               	movwf	61,b	;volatile
  6882                           
  6883                           ; BSR set to: 15
  6884                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  6885  001148  010F               	movlb	15	; () banked
  6886  00114A  8730               	bsf	48,3,b	;volatile
  6887                           
  6888                           ; BSR set to: 15
  6889                           ;inc\CANlib.h: 444: return;
  6890  00114C  D11B               	goto	i1l361
  6891  00114E                     i1l362:
  6892                           
  6893                           ; BSR set to: 15
  6894                           ;inc\CANlib.h: 445: }
  6895                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  6896  00114E  010F               	movlb	15	; () banked
  6897  001150  B720               	btfsc	32,3,b	;volatile
  6898  001152  D118               	goto	i1l361
  6899                           
  6900                           ; BSR set to: 15
  6901                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  6902  001154  C007  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6903                           
  6904                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  6905  001158  AC08               	btfss	CANsendMessage@flags,6,c
  6906  00115A  D003               	goto	i1l377
  6907                           
  6908                           ; BSR set to: 15
  6909                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  6910  00115C  010F               	movlb	15	; () banked
  6911  00115E  8D25               	bsf	37,6,b	;volatile
  6912  001160  D002               	goto	i1l378
  6913  001162                     i1l377:
  6914                           
  6915                           ; BSR set to: 15
  6916                           ;inc\CANlib.h: 454: else
  6917                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  6918  001162  010F               	movlb	15	; () banked
  6919  001164  9D25               	bcf	37,6,b	;volatile
  6920  001166                     i1l378:
  6921                           
  6922                           ; BSR set to: 15
  6923                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  6924  001166  A608               	btfss	CANsendMessage@flags,3,c
  6925  001168  D067               	goto	i1l379
  6926                           
  6927                           ; BSR set to: 15
  6928                           ;inc\CANlib.h: 458: {
  6929                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  6930  00116A  5001               	movf	CANsendMessage@identifier,w,c
  6931  00116C  6E0D               	movwf	CANsendMessage@tamp,c
  6932  00116E  6A0E               	clrf	CANsendMessage@tamp+1,c
  6933  001170  6A0F               	clrf	CANsendMessage@tamp+2,c
  6934  001172  6A10               	clrf	CANsendMessage@tamp+3,c
  6935                           
  6936                           ; BSR set to: 15
  6937                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  6938  001174  C00D  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6939                           
  6940                           ; BSR set to: 15
  6941                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  6942  001178  0E00               	movlw	0
  6943  00117A  1401               	andwf	CANsendMessage@identifier,w,c
  6944  00117C  6E0D               	movwf	CANsendMessage@tamp,c
  6945  00117E  0EFF               	movlw	255
  6946  001180  1402               	andwf	CANsendMessage@identifier+1,w,c
  6947  001182  6E0E               	movwf	CANsendMessage@tamp+1,c
  6948  001184  0E00               	movlw	0
  6949  001186  1403               	andwf	CANsendMessage@identifier+2,w,c
  6950  001188  6E0F               	movwf	CANsendMessage@tamp+2,c
  6951  00118A  0E00               	movlw	0
  6952  00118C  1404               	andwf	CANsendMessage@identifier+3,w,c
  6953  00118E  6E10               	movwf	CANsendMessage@tamp+3,c
  6954                           
  6955                           ; BSR set to: 15
  6956                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  6957  001190  C00D  F009         	movff	CANsendMessage@tamp,??_CANsendMessage
  6958  001194  C00E  F00A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6959  001198  C00F  F00B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6960  00119C  C010  F00C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6961  0011A0  C00A  F009         	movff	??_CANsendMessage+1,??_CANsendMessage
  6962  0011A4  C00B  F00A         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6963  0011A8  C00C  F00B         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6964  0011AC  6A0C               	clrf	??_CANsendMessage+3,c
  6965  0011AE  C009  F00D         	movff	??_CANsendMessage,CANsendMessage@tamp
  6966  0011B2  C00A  F00E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6967  0011B6  C00B  F00F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6968  0011BA  C00C  F010         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6969                           
  6970                           ; BSR set to: 15
  6971                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  6972  0011BE  C00D  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6973                           
  6974                           ; BSR set to: 15
  6975                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  6976  0011C2  0E00               	movlw	0
  6977  0011C4  010F               	movlb	15	; () banked
  6978  0011C6  6F22               	movwf	34,b	;volatile
  6979                           
  6980                           ; BSR set to: 15
  6981                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  6982  0011C8  010F               	movlb	15	; () banked
  6983  0011CA  8722               	bsf	34,3,b	;volatile
  6984                           
  6985                           ; BSR set to: 15
  6986                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  6987  0011CC  A003               	btfss	CANsendMessage@identifier+2,0,c
  6988  0011CE  D002               	goto	i1l380
  6989                           
  6990                           ; BSR set to: 15
  6991                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  6992  0011D0  010F               	movlb	15	; () banked
  6993  0011D2  8122               	bsf	34,0,b	;volatile
  6994  0011D4                     i1l380:
  6995                           
  6996                           ; BSR set to: 15
  6997                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  6998  0011D4  A203               	btfss	CANsendMessage@identifier+2,1,c
  6999  0011D6  D002               	goto	i1l381
  7000                           
  7001                           ; BSR set to: 15
  7002                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  7003  0011D8  010F               	movlb	15	; () banked
  7004  0011DA  8322               	bsf	34,1,b	;volatile
  7005  0011DC                     i1l381:
  7006                           
  7007                           ; BSR set to: 15
  7008                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  7009  0011DC  A403               	btfss	CANsendMessage@identifier+2,2,c
  7010  0011DE  D002               	goto	i1l382
  7011                           
  7012                           ; BSR set to: 15
  7013                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  7014  0011E0  010F               	movlb	15	; () banked
  7015  0011E2  8B22               	bsf	34,5,b	;volatile
  7016  0011E4                     i1l382:
  7017                           
  7018                           ; BSR set to: 15
  7019                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  7020  0011E4  A603               	btfss	CANsendMessage@identifier+2,3,c
  7021  0011E6  D002               	goto	i1l383
  7022                           
  7023                           ; BSR set to: 15
  7024                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  7025  0011E8  010F               	movlb	15	; () banked
  7026  0011EA  8D22               	bsf	34,6,b	;volatile
  7027  0011EC                     i1l383:
  7028                           
  7029                           ; BSR set to: 15
  7030                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  7031  0011EC  A803               	btfss	CANsendMessage@identifier+2,4,c
  7032  0011EE  D003               	goto	i1l3190
  7033                           
  7034                           ; BSR set to: 15
  7035                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  7036  0011F0  010F               	movlb	15	; () banked
  7037  0011F2  8F22               	bsf	34,7,b	;volatile
  7038  0011F4  D000               	goto	i1l3190
  7039  0011F6                     i1l3190:
  7040                           
  7041                           ; BSR set to: 15
  7042                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  7043  0011F6  C001  F009         	movff	CANsendMessage@identifier,??_CANsendMessage
  7044  0011FA  C002  F00A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7045  0011FE  C003  F00B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7046  001202  C004  F00C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7047  001206  0E16               	movlw	22
  7048  001208  D005               	goto	i1u349_20
  7049  00120A                     i1u349_25:
  7050  00120A  90D8               	bcf	status,0,c
  7051  00120C  320C               	rrcf	??_CANsendMessage+3,f,c
  7052  00120E  320B               	rrcf	??_CANsendMessage+2,f,c
  7053  001210  320A               	rrcf	??_CANsendMessage+1,f,c
  7054  001212  3209               	rrcf	??_CANsendMessage,f,c
  7055  001214                     i1u349_20:
  7056  001214  2EE8               	decfsz	wreg,f,c
  7057  001216  D7F9               	goto	i1u349_25
  7058  001218  C009  F00D         	movff	??_CANsendMessage,CANsendMessage@tamp
  7059  00121C  C00A  F00E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7060  001220  C00B  F00F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7061  001224  C00C  F010         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7062                           
  7063                           ; BSR set to: 15
  7064                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  7065  001228  500D               	movf	CANsendMessage@tamp,w,c
  7066  00122A  6E0D               	movwf	CANsendMessage@tamp,c
  7067  00122C  6A0E               	clrf	CANsendMessage@tamp+1,c
  7068  00122E  6A0F               	clrf	CANsendMessage@tamp+2,c
  7069  001230  6A10               	clrf	CANsendMessage@tamp+3,c
  7070                           
  7071                           ; BSR set to: 15
  7072                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  7073  001232  C00D  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  7074                           
  7075                           ;inc\CANlib.h: 483: }
  7076  001236  D04E               	goto	i1l3210
  7077  001238                     i1l379:
  7078                           
  7079                           ; BSR set to: 15
  7080                           ;inc\CANlib.h: 485: else
  7081                           ;inc\CANlib.h: 487: {
  7082                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  7083  001238  010F               	movlb	15	; () banked
  7084  00123A  9722               	bcf	34,3,b	;volatile
  7085                           
  7086                           ; BSR set to: 15
  7087                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  7088  00123C  C001  F009         	movff	CANsendMessage@identifier,??_CANsendMessage
  7089  001240  C002  F00A         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7090  001244  C003  F00B         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7091  001248  C004  F00C         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7092  00124C  0E04               	movlw	4
  7093  00124E  D005               	goto	i1u350_20
  7094  001250                     i1u350_25:
  7095  001250  90D8               	bcf	status,0,c
  7096  001252  320C               	rrcf	??_CANsendMessage+3,f,c
  7097  001254  320B               	rrcf	??_CANsendMessage+2,f,c
  7098  001256  320A               	rrcf	??_CANsendMessage+1,f,c
  7099  001258  3209               	rrcf	??_CANsendMessage,f,c
  7100  00125A                     i1u350_20:
  7101  00125A  2EE8               	decfsz	wreg,f,c
  7102  00125C  D7F9               	goto	i1u350_25
  7103  00125E  C009  F00D         	movff	??_CANsendMessage,CANsendMessage@tamp
  7104  001262  C00A  F00E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7105  001266  C00B  F00F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7106  00126A  C00C  F010         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7107                           
  7108                           ; BSR set to: 15
  7109                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  7110  00126E  500D               	movf	CANsendMessage@tamp,w,c
  7111  001270  6E0D               	movwf	CANsendMessage@tamp,c
  7112  001272  6A0E               	clrf	CANsendMessage@tamp+1,c
  7113  001274  6A0F               	clrf	CANsendMessage@tamp+2,c
  7114  001276  6A10               	clrf	CANsendMessage@tamp+3,c
  7115                           
  7116                           ; BSR set to: 15
  7117                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  7118  001278  C00D  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  7119                           
  7120                           ; BSR set to: 15
  7121                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  7122  00127C  0E07               	movlw	7
  7123  00127E  1401               	andwf	CANsendMessage@identifier,w,c
  7124  001280  6E0D               	movwf	CANsendMessage@tamp,c
  7125  001282  0E00               	movlw	0
  7126  001284  1402               	andwf	CANsendMessage@identifier+1,w,c
  7127  001286  6E0E               	movwf	CANsendMessage@tamp+1,c
  7128  001288  0E00               	movlw	0
  7129  00128A  1403               	andwf	CANsendMessage@identifier+2,w,c
  7130  00128C  6E0F               	movwf	CANsendMessage@tamp+2,c
  7131  00128E  0E00               	movlw	0
  7132  001290  1404               	andwf	CANsendMessage@identifier+3,w,c
  7133  001292  6E10               	movwf	CANsendMessage@tamp+3,c
  7134                           
  7135                           ; BSR set to: 15
  7136                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  7137  001294  C00D  F009         	movff	CANsendMessage@tamp,??_CANsendMessage
  7138  001298  C00E  F00A         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7139  00129C  C00F  F00B         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7140  0012A0  C010  F00C         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7141  0012A4  0E05               	movlw	5
  7142  0012A6                     i1u351_25:
  7143  0012A6  90D8               	bcf	status,0,c
  7144  0012A8  3609               	rlcf	??_CANsendMessage,f,c
  7145  0012AA  360A               	rlcf	??_CANsendMessage+1,f,c
  7146  0012AC  360B               	rlcf	??_CANsendMessage+2,f,c
  7147  0012AE  360C               	rlcf	??_CANsendMessage+3,f,c
  7148  0012B0  2EE8               	decfsz	wreg,f,c
  7149  0012B2  D7F9               	goto	i1u351_25
  7150  0012B4  C009  F00D         	movff	??_CANsendMessage,CANsendMessage@tamp
  7151  0012B8  C00A  F00E         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7152  0012BC  C00B  F00F         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7153  0012C0  C00C  F010         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7154                           
  7155                           ; BSR set to: 15
  7156                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  7157  0012C4  010F               	movlb	15	; () banked
  7158  0012C6  5122               	movf	34,w,b	;volatile
  7159  0012C8  0B1F               	andlw	31
  7160  0012CA  010F               	movlb	15	; () banked
  7161  0012CC  6F22               	movwf	34,b	;volatile
  7162                           
  7163                           ; BSR set to: 15
  7164                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  7165  0012CE  C00D  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  7166  0012D2  D000               	goto	i1l3210
  7167  0012D4                     i1l3210:
  7168                           
  7169                           ; BSR set to: 15
  7170                           ;inc\CANlib.h: 498: }
  7171                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  7172  0012D4  A008               	btfss	CANsendMessage@flags,0,c
  7173  0012D6  D003               	goto	i1l386
  7174                           
  7175                           ; BSR set to: 15
  7176                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  7177  0012D8  010F               	movlb	15	; () banked
  7178  0012DA  8120               	bsf	32,0,b	;volatile
  7179  0012DC  D002               	goto	i1l387
  7180  0012DE                     i1l386:
  7181                           
  7182                           ; BSR set to: 15
  7183                           ;inc\CANlib.h: 502: else
  7184                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  7185  0012DE  010F               	movlb	15	; () banked
  7186  0012E0  9120               	bcf	32,0,b	;volatile
  7187  0012E2                     i1l387:
  7188                           
  7189                           ; BSR set to: 15
  7190                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  7191  0012E2  A208               	btfss	CANsendMessage@flags,1,c
  7192  0012E4  D003               	goto	i1l388
  7193                           
  7194                           ; BSR set to: 15
  7195                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  7196  0012E6  010F               	movlb	15	; () banked
  7197  0012E8  8320               	bsf	32,1,b	;volatile
  7198  0012EA  D003               	goto	i1l3216
  7199  0012EC                     i1l388:
  7200                           
  7201                           ; BSR set to: 15
  7202                           ;inc\CANlib.h: 506: else
  7203                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  7204  0012EC  010F               	movlb	15	; () banked
  7205  0012EE  9320               	bcf	32,1,b	;volatile
  7206  0012F0  D000               	goto	i1l3216
  7207  0012F2                     i1l3216:
  7208                           
  7209                           ; BSR set to: 15
  7210                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  7211  0012F2  C005  FFD9         	movff	CANsendMessage@data,fsr2l
  7212  0012F6  C006  FFDA         	movff	CANsendMessage@data+1,fsr2h
  7213  0012FA  50DF               	movf	indf2,w,c
  7214  0012FC  010F               	movlb	15	; () banked
  7215  0012FE  6F26               	movwf	38,b	;volatile
  7216                           
  7217                           ; BSR set to: 15
  7218                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  7219  001300  EE20 F001          	lfsr	2,1
  7220  001304  5005               	movf	CANsendMessage@data,w,c
  7221  001306  26D9               	addwf	fsr2l,f,c
  7222  001308  5006               	movf	CANsendMessage@data+1,w,c
  7223  00130A  22DA               	addwfc	fsr2h,f,c
  7224  00130C  50DF               	movf	indf2,w,c
  7225  00130E  010F               	movlb	15	; () banked
  7226  001310  6F27               	movwf	39,b	;volatile
  7227                           
  7228                           ; BSR set to: 15
  7229                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  7230  001312  EE20 F002          	lfsr	2,2
  7231  001316  5005               	movf	CANsendMessage@data,w,c
  7232  001318  26D9               	addwf	fsr2l,f,c
  7233  00131A  5006               	movf	CANsendMessage@data+1,w,c
  7234  00131C  22DA               	addwfc	fsr2h,f,c
  7235  00131E  50DF               	movf	indf2,w,c
  7236  001320  010F               	movlb	15	; () banked
  7237  001322  6F28               	movwf	40,b	;volatile
  7238                           
  7239                           ; BSR set to: 15
  7240                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  7241  001324  EE20 F003          	lfsr	2,3
  7242  001328  5005               	movf	CANsendMessage@data,w,c
  7243  00132A  26D9               	addwf	fsr2l,f,c
  7244  00132C  5006               	movf	CANsendMessage@data+1,w,c
  7245  00132E  22DA               	addwfc	fsr2h,f,c
  7246  001330  50DF               	movf	indf2,w,c
  7247  001332  010F               	movlb	15	; () banked
  7248  001334  6F29               	movwf	41,b	;volatile
  7249                           
  7250                           ; BSR set to: 15
  7251                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  7252  001336  EE20 F004          	lfsr	2,4
  7253  00133A  5005               	movf	CANsendMessage@data,w,c
  7254  00133C  26D9               	addwf	fsr2l,f,c
  7255  00133E  5006               	movf	CANsendMessage@data+1,w,c
  7256  001340  22DA               	addwfc	fsr2h,f,c
  7257  001342  50DF               	movf	indf2,w,c
  7258  001344  010F               	movlb	15	; () banked
  7259  001346  6F2A               	movwf	42,b	;volatile
  7260                           
  7261                           ; BSR set to: 15
  7262                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  7263  001348  EE20 F005          	lfsr	2,5
  7264  00134C  5005               	movf	CANsendMessage@data,w,c
  7265  00134E  26D9               	addwf	fsr2l,f,c
  7266  001350  5006               	movf	CANsendMessage@data+1,w,c
  7267  001352  22DA               	addwfc	fsr2h,f,c
  7268  001354  50DF               	movf	indf2,w,c
  7269  001356  010F               	movlb	15	; () banked
  7270  001358  6F2B               	movwf	43,b	;volatile
  7271                           
  7272                           ; BSR set to: 15
  7273                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  7274  00135A  EE20 F006          	lfsr	2,6
  7275  00135E  5005               	movf	CANsendMessage@data,w,c
  7276  001360  26D9               	addwf	fsr2l,f,c
  7277  001362  5006               	movf	CANsendMessage@data+1,w,c
  7278  001364  22DA               	addwfc	fsr2h,f,c
  7279  001366  50DF               	movf	indf2,w,c
  7280  001368  010F               	movlb	15	; () banked
  7281  00136A  6F2C               	movwf	44,b	;volatile
  7282                           
  7283                           ; BSR set to: 15
  7284                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  7285  00136C  EE20 F007          	lfsr	2,7
  7286  001370  5005               	movf	CANsendMessage@data,w,c
  7287  001372  26D9               	addwf	fsr2l,f,c
  7288  001374  5006               	movf	CANsendMessage@data+1,w,c
  7289  001376  22DA               	addwfc	fsr2h,f,c
  7290  001378  50DF               	movf	indf2,w,c
  7291  00137A  010F               	movlb	15	; () banked
  7292  00137C  6F2D               	movwf	45,b	;volatile
  7293                           
  7294                           ; BSR set to: 15
  7295                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  7296  00137E  010F               	movlb	15	; () banked
  7297  001380  8720               	bsf	32,3,b	;volatile
  7298                           
  7299                           ; BSR set to: 15
  7300                           ;inc\CANlib.h: 520: return;
  7301  001382  D000               	goto	i1l361
  7302  001384                     i1l361:
  7303                           
  7304                           ; BSR set to: 15
  7305  001384  0012               	return		;funcret
  7306  001386                     __end_of_CANsendMessage:
  7307                           	opt stack 0
  7308                           pclatu	equ	0xFFB
  7309                           pclath	equ	0xFFA
  7310                           tblptru	equ	0xFF8
  7311                           tblptrh	equ	0xFF7
  7312                           tblptrl	equ	0xFF6
  7313                           tablat	equ	0xFF5
  7314                           prodh	equ	0xFF4
  7315                           prodl	equ	0xFF3
  7316                           intcon	equ	0xFF2
  7317                           intcon2	equ	0xFF1
  7318                           postinc0	equ	0xFEE
  7319                           fsr0h	equ	0xFEA
  7320                           fsr0l	equ	0xFE9
  7321                           wreg	equ	0xFE8
  7322                           postdec1	equ	0xFE5
  7323                           fsr1h	equ	0xFE2
  7324                           fsr1l	equ	0xFE1
  7325                           bsr	equ	0xFE0
  7326                           indf2	equ	0xFDF
  7327                           fsr2h	equ	0xFDA
  7328                           fsr2l	equ	0xFD9
  7329                           status	equ	0xFD8
  7330                           
  7331 ;; *************** function _CANreceiveMessage *****************
  7332 ;; Defined at:
  7333 ;;		line 528 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;  msg             2    0[COMRAM] PTR struct .
  7336 ;;		 -> msg(15), 
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;  tamp            1   11[COMRAM] unsigned char 
  7339 ;;  error           1   10[COMRAM] unsigned char 
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  1    wreg      unsigned char 
  7342 ;; Registers used:
  7343 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7349 ;;      Params:         2       0       0       0
  7350 ;;      Locals:         2       0       0       0
  7351 ;;      Temps:          8       0       0       0
  7352 ;;      Totals:        12       0       0       0
  7353 ;;Total ram usage:       12 bytes
  7354 ;; Hardware stack levels used:    1
  7355 ;; Hardware stack levels required when called:    2
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_ISR_bassa
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           	psect	text22
  7364  001386                     __ptext22:
  7365                           	opt stack 0
  7366  001386                     _CANreceiveMessage:
  7367                           	opt stack 24
  7368                           
  7369                           ;inc\CANlib.h: 530: BYTE tamp;
  7370                           ;inc\CANlib.h: 531: BYTE error = 0;
  7371                           
  7372                           ; BSR set to: 15
  7373                           ;incstack = 0
  7374  001386  0E00               	movlw	0
  7375  001388  6E0B               	movwf	CANreceiveMessage@error,c
  7376                           
  7377                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7378  00138A  AE74               	btfss	3956,7,c	;volatile
  7379  00138C  D002               	goto	i1l3242
  7380                           
  7381                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7382  00138E  800B               	bsf	CANreceiveMessage@error,0,c
  7383  001390  D000               	goto	i1l3242
  7384  001392                     i1l3242:
  7385                           
  7386                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7387  001392  AC74               	btfss	3956,6,c	;volatile
  7388  001394  D002               	goto	i1l3246
  7389                           
  7390                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7391  001396  820B               	bsf	CANreceiveMessage@error,1,c
  7392  001398  D000               	goto	i1l3246
  7393  00139A                     i1l3246:
  7394                           
  7395                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7396  00139A  010F               	movlb	15	; () banked
  7397  00139C  AF50               	btfss	80,7,b	;volatile
  7398  00139E  D149               	goto	i1l394
  7399                           
  7400                           ; BSR set to: 15
  7401                           ;inc\CANlib.h: 541: {
  7402                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7403  0013A0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7404  0013A4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7405  0013A8  6ADE               	clrf	postinc2,c
  7406  0013AA  6ADE               	clrf	postinc2,c
  7407  0013AC  6ADE               	clrf	postinc2,c
  7408  0013AE  6ADD               	clrf	postdec2,c
  7409                           
  7410                           ; BSR set to: 15
  7411                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7412  0013B0  EE20 F004          	lfsr	2,4
  7413  0013B4  5001               	movf	CANreceiveMessage@msg,w,c
  7414  0013B6  26D9               	addwf	fsr2l,f,c
  7415  0013B8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7416  0013BA  22DA               	addwfc	fsr2h,f,c
  7417  0013BC  CF56 FFDF          	movff	3926,indf2	;volatile
  7418                           
  7419                           ; BSR set to: 15
  7420                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7421  0013C0  EE20 F005          	lfsr	2,5
  7422  0013C4  5001               	movf	CANreceiveMessage@msg,w,c
  7423  0013C6  26D9               	addwf	fsr2l,f,c
  7424  0013C8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7425  0013CA  22DA               	addwfc	fsr2h,f,c
  7426  0013CC  CF57 FFDF          	movff	3927,indf2	;volatile
  7427                           
  7428                           ; BSR set to: 15
  7429                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7430  0013D0  EE20 F006          	lfsr	2,6
  7431  0013D4  5001               	movf	CANreceiveMessage@msg,w,c
  7432  0013D6  26D9               	addwf	fsr2l,f,c
  7433  0013D8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7434  0013DA  22DA               	addwfc	fsr2h,f,c
  7435  0013DC  CF58 FFDF          	movff	3928,indf2	;volatile
  7436                           
  7437                           ; BSR set to: 15
  7438                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7439  0013E0  EE20 F007          	lfsr	2,7
  7440  0013E4  5001               	movf	CANreceiveMessage@msg,w,c
  7441  0013E6  26D9               	addwf	fsr2l,f,c
  7442  0013E8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7443  0013EA  22DA               	addwfc	fsr2h,f,c
  7444  0013EC  CF59 FFDF          	movff	3929,indf2	;volatile
  7445                           
  7446                           ; BSR set to: 15
  7447                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7448  0013F0  EE20 F008          	lfsr	2,8
  7449  0013F4  5001               	movf	CANreceiveMessage@msg,w,c
  7450  0013F6  26D9               	addwf	fsr2l,f,c
  7451  0013F8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7452  0013FA  22DA               	addwfc	fsr2h,f,c
  7453  0013FC  CF5A FFDF          	movff	3930,indf2	;volatile
  7454                           
  7455                           ; BSR set to: 15
  7456                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7457  001400  EE20 F009          	lfsr	2,9
  7458  001404  5001               	movf	CANreceiveMessage@msg,w,c
  7459  001406  26D9               	addwf	fsr2l,f,c
  7460  001408  5002               	movf	CANreceiveMessage@msg+1,w,c
  7461  00140A  22DA               	addwfc	fsr2h,f,c
  7462  00140C  CF5B FFDF          	movff	3931,indf2	;volatile
  7463                           
  7464                           ; BSR set to: 15
  7465                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7466  001410  EE20 F00A          	lfsr	2,10
  7467  001414  5001               	movf	CANreceiveMessage@msg,w,c
  7468  001416  26D9               	addwf	fsr2l,f,c
  7469  001418  5002               	movf	CANreceiveMessage@msg+1,w,c
  7470  00141A  22DA               	addwfc	fsr2h,f,c
  7471  00141C  CF5C FFDF          	movff	3932,indf2	;volatile
  7472                           
  7473                           ; BSR set to: 15
  7474                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7475  001420  EE20 F00B          	lfsr	2,11
  7476  001424  5001               	movf	CANreceiveMessage@msg,w,c
  7477  001426  26D9               	addwf	fsr2l,f,c
  7478  001428  5002               	movf	CANreceiveMessage@msg+1,w,c
  7479  00142A  22DA               	addwfc	fsr2h,f,c
  7480  00142C  CF5D FFDF          	movff	3933,indf2	;volatile
  7481                           
  7482                           ; BSR set to: 15
  7483                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7484  001430  EE20 F00E          	lfsr	2,14
  7485  001434  5001               	movf	CANreceiveMessage@msg,w,c
  7486  001436  26D9               	addwf	fsr2l,f,c
  7487  001438  5002               	movf	CANreceiveMessage@msg+1,w,c
  7488  00143A  22DA               	addwfc	fsr2h,f,c
  7489  00143C  010F               	movlb	15	; () banked
  7490  00143E  AD55               	btfss	85,6,b	;volatile
  7491  001440  D002               	goto	i1u357_20
  7492  001442  0E01               	movlw	1
  7493  001444  D001               	goto	i1u357_26
  7494  001446                     i1u357_20:
  7495  001446  0E00               	movlw	0
  7496  001448                     i1u357_26:
  7497  001448  6EDF               	movwf	indf2,c
  7498                           
  7499                           ; BSR set to: 15
  7500                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7501  00144A  EE20 F00D          	lfsr	2,13
  7502  00144E  5001               	movf	CANreceiveMessage@msg,w,c
  7503  001450  26D9               	addwf	fsr2l,f,c
  7504  001452  5002               	movf	CANreceiveMessage@msg+1,w,c
  7505  001454  22DA               	addwfc	fsr2h,f,c
  7506  001456  010F               	movlb	15	; () banked
  7507  001458  5155               	movf	85,w,b	;volatile
  7508  00145A  0B0F               	andlw	15
  7509  00145C  6EDF               	movwf	indf2,c
  7510                           
  7511                           ; BSR set to: 15
  7512                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7513  00145E  EE20 F00C          	lfsr	2,12
  7514  001462  5001               	movf	CANreceiveMessage@msg,w,c
  7515  001464  26D9               	addwf	fsr2l,f,c
  7516  001466  5002               	movf	CANreceiveMessage@msg+1,w,c
  7517  001468  22DA               	addwfc	fsr2h,f,c
  7518  00146A  010F               	movlb	15	; () banked
  7519  00146C  A752               	btfss	82,3,b	;volatile
  7520  00146E  D002               	goto	i1u358_20
  7521  001470  0E01               	movlw	1
  7522  001472  D001               	goto	i1u358_26
  7523  001474                     i1u358_20:
  7524  001474  0E00               	movlw	0
  7525  001476                     i1u358_26:
  7526  001476  6EDF               	movwf	indf2,c
  7527                           
  7528                           ; BSR set to: 15
  7529                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7530  001478  010F               	movlb	15	; () banked
  7531  00147A  B752               	btfsc	82,3,b	;volatile
  7532  00147C  D044               	goto	i1l3280
  7533                           
  7534                           ; BSR set to: 15
  7535                           ;inc\CANlib.h: 559: {
  7536                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7537  00147E  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7538  001482  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7539  001484  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7540  001486  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7541  001488  0E03               	movlw	3
  7542  00148A                     i1u360_25:
  7543  00148A  90D8               	bcf	status,0,c
  7544  00148C  3603               	rlcf	??_CANreceiveMessage,f,c
  7545  00148E  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7546  001490  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7547  001492  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7548  001494  2EE8               	decfsz	wreg,f,c
  7549  001496  D7F9               	goto	i1u360_25
  7550  001498  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7551  00149C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7552  0014A0  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7553  0014A4  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7554  0014A8  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7555  0014AC  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7556                           
  7557                           ; BSR set to: 15
  7558                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7559  0014B0  010F               	movlb	15	; () banked
  7560  0014B2  3952               	swapf	82,w,b	;volatile
  7561  0014B4  42E8               	rrncf	wreg,f,c
  7562  0014B6  0B07               	andlw	7
  7563  0014B8  0B07               	andlw	7
  7564  0014BA  6E0C               	movwf	CANreceiveMessage@tamp,c
  7565                           
  7566                           ; BSR set to: 15
  7567                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7568  0014BC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7569  0014C0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7570  0014C4  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7571  0014C8  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7572  0014CC  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7573  0014D0  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7574  0014D4  500C               	movf	CANreceiveMessage@tamp,w,c
  7575  0014D6  2403               	addwf	??_CANreceiveMessage,w,c
  7576  0014D8  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7577  0014DA  0E00               	movlw	0
  7578  0014DC  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7579  0014DE  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7580  0014E0  0E00               	movlw	0
  7581  0014E2  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7582  0014E4  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7583  0014E6  0E00               	movlw	0
  7584  0014E8  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7585  0014EA  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7586  0014EC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7587  0014F0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7588  0014F4  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7589  0014F8  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7590  0014FC  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7591  001500  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7592                           
  7593                           ;inc\CANlib.h: 563: }
  7594  001504  D093               	goto	i1l3306
  7595  001506                     i1l3280:
  7596                           
  7597                           ; BSR set to: 15
  7598                           ;inc\CANlib.h: 564: else
  7599                           ;inc\CANlib.h: 565: {
  7600                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7601  001506  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7602  00150A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7603  00150C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7604  00150E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7605  001510  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7606  001514  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7607  001518  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7608  00151C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7609  001520  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7610  001524  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7611                           
  7612                           ; BSR set to: 15
  7613                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7614  001528  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7615  00152C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7616  00152E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7617  001530  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7618  001532  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7619  001536  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7620  00153A  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7621  00153E  6A03               	clrf	??_CANreceiveMessage,c
  7622  001540  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7623  001544  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7624  001548  5003               	movf	??_CANreceiveMessage,w,c
  7625  00154A  26DE               	addwf	postinc2,f,c
  7626  00154C  5004               	movf	??_CANreceiveMessage+1,w,c
  7627  00154E  22DE               	addwfc	postinc2,f,c
  7628  001550  5005               	movf	??_CANreceiveMessage+2,w,c
  7629  001552  22DE               	addwfc	postinc2,f,c
  7630  001554  5006               	movf	??_CANreceiveMessage+3,w,c
  7631  001556  22DE               	addwfc	postinc2,f,c
  7632                           
  7633                           ; BSR set to: 15
  7634                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7635  001558  010F               	movlb	15	; () banked
  7636  00155A  A152               	btfss	82,0,b	;volatile
  7637  00155C  D00D               	goto	i1l3288
  7638                           
  7639                           ; BSR set to: 15
  7640                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7641  00155E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7642  001562  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7643  001566  0E00               	movlw	0
  7644  001568  12DE               	iorwf	postinc2,f,c
  7645  00156A  0E00               	movlw	0
  7646  00156C  12DE               	iorwf	postinc2,f,c
  7647  00156E  0E01               	movlw	1
  7648  001570  12DE               	iorwf	postinc2,f,c
  7649  001572  0E00               	movlw	0
  7650  001574  12DE               	iorwf	postinc2,f,c
  7651  001576  D000               	goto	i1l3288
  7652  001578                     i1l3288:
  7653                           
  7654                           ; BSR set to: 15
  7655                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7656  001578  010F               	movlb	15	; () banked
  7657  00157A  A352               	btfss	82,1,b	;volatile
  7658  00157C  D00D               	goto	i1l3292
  7659                           
  7660                           ; BSR set to: 15
  7661                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7662  00157E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7663  001582  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7664  001586  0E00               	movlw	0
  7665  001588  12DE               	iorwf	postinc2,f,c
  7666  00158A  0E00               	movlw	0
  7667  00158C  12DE               	iorwf	postinc2,f,c
  7668  00158E  0E02               	movlw	2
  7669  001590  12DE               	iorwf	postinc2,f,c
  7670  001592  0E00               	movlw	0
  7671  001594  12DE               	iorwf	postinc2,f,c
  7672  001596  D000               	goto	i1l3292
  7673  001598                     i1l3292:
  7674                           
  7675                           ; BSR set to: 15
  7676                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7677  001598  010F               	movlb	15	; () banked
  7678  00159A  AB52               	btfss	82,5,b	;volatile
  7679  00159C  D00D               	goto	i1l3296
  7680                           
  7681                           ; BSR set to: 15
  7682                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7683  00159E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7684  0015A2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7685  0015A6  0E00               	movlw	0
  7686  0015A8  12DE               	iorwf	postinc2,f,c
  7687  0015AA  0E00               	movlw	0
  7688  0015AC  12DE               	iorwf	postinc2,f,c
  7689  0015AE  0E04               	movlw	4
  7690  0015B0  12DE               	iorwf	postinc2,f,c
  7691  0015B2  0E00               	movlw	0
  7692  0015B4  12DE               	iorwf	postinc2,f,c
  7693  0015B6  D000               	goto	i1l3296
  7694  0015B8                     i1l3296:
  7695                           
  7696                           ; BSR set to: 15
  7697                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7698  0015B8  010F               	movlb	15	; () banked
  7699  0015BA  AD52               	btfss	82,6,b	;volatile
  7700  0015BC  D00D               	goto	i1l3300
  7701                           
  7702                           ; BSR set to: 15
  7703                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  7704  0015BE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7705  0015C2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7706  0015C6  0E00               	movlw	0
  7707  0015C8  12DE               	iorwf	postinc2,f,c
  7708  0015CA  0E00               	movlw	0
  7709  0015CC  12DE               	iorwf	postinc2,f,c
  7710  0015CE  0E08               	movlw	8
  7711  0015D0  12DE               	iorwf	postinc2,f,c
  7712  0015D2  0E00               	movlw	0
  7713  0015D4  12DE               	iorwf	postinc2,f,c
  7714  0015D6  D000               	goto	i1l3300
  7715  0015D8                     i1l3300:
  7716                           
  7717                           ; BSR set to: 15
  7718                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7719  0015D8  010F               	movlb	15	; () banked
  7720  0015DA  AF52               	btfss	82,7,b	;volatile
  7721  0015DC  D00D               	goto	i1l3304
  7722                           
  7723                           ; BSR set to: 15
  7724                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  7725  0015DE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7726  0015E2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7727  0015E6  0E00               	movlw	0
  7728  0015E8  12DE               	iorwf	postinc2,f,c
  7729  0015EA  0E00               	movlw	0
  7730  0015EC  12DE               	iorwf	postinc2,f,c
  7731  0015EE  0E10               	movlw	16
  7732  0015F0  12DE               	iorwf	postinc2,f,c
  7733  0015F2  0E00               	movlw	0
  7734  0015F4  12DE               	iorwf	postinc2,f,c
  7735  0015F6  D000               	goto	i1l3304
  7736  0015F8                     i1l3304:
  7737                           
  7738                           ; BSR set to: 15
  7739                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7740  0015F8  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7741  0015FC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7742  0015FE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7743  001600  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7744  001602  0E15               	movlw	21
  7745  001604                     i1u366_25:
  7746  001604  90D8               	bcf	status,0,c
  7747  001606  3603               	rlcf	??_CANreceiveMessage,f,c
  7748  001608  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7749  00160A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7750  00160C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7751  00160E  2EE8               	decfsz	wreg,f,c
  7752  001610  D7F9               	goto	i1u366_25
  7753  001612  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7754  001616  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7755  00161A  5003               	movf	??_CANreceiveMessage,w,c
  7756  00161C  12DE               	iorwf	postinc2,f,c
  7757  00161E  5004               	movf	??_CANreceiveMessage+1,w,c
  7758  001620  12DE               	iorwf	postinc2,f,c
  7759  001622  5005               	movf	??_CANreceiveMessage+2,w,c
  7760  001624  12DE               	iorwf	postinc2,f,c
  7761  001626  5006               	movf	??_CANreceiveMessage+3,w,c
  7762  001628  12DE               	iorwf	postinc2,f,c
  7763  00162A  D000               	goto	i1l3306
  7764  00162C                     i1l3306:
  7765                           
  7766                           ; BSR set to: 15
  7767                           ;inc\CANlib.h: 581: }
  7768                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7769  00162C  010F               	movlb	15	; () banked
  7770  00162E  9F50               	bcf	80,7,b	;volatile
  7771                           
  7772                           ; BSR set to: 15
  7773                           ;inc\CANlib.h: 584: return (error);
  7774                           ;	Return value of _CANreceiveMessage is never used
  7775  001630  D140               	goto	i1l402
  7776  001632                     i1l394:
  7777                           
  7778                           ; BSR set to: 15
  7779                           ;inc\CANlib.h: 585: }
  7780                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7781  001632  AE60               	btfss	3936,7,c	;volatile
  7782  001634  D13E               	goto	i1l402
  7783                           
  7784                           ; BSR set to: 15
  7785                           ;inc\CANlib.h: 588: {
  7786                           ;inc\CANlib.h: 589: msg->identifier = 0;
  7787  001636  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7788  00163A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7789  00163E  6ADE               	clrf	postinc2,c
  7790  001640  6ADE               	clrf	postinc2,c
  7791  001642  6ADE               	clrf	postinc2,c
  7792  001644  6ADD               	clrf	postdec2,c
  7793                           
  7794                           ; BSR set to: 15
  7795                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  7796  001646  EE20 F004          	lfsr	2,4
  7797  00164A  5001               	movf	CANreceiveMessage@msg,w,c
  7798  00164C  26D9               	addwf	fsr2l,f,c
  7799  00164E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7800  001650  22DA               	addwfc	fsr2h,f,c
  7801  001652  CF66 FFDF          	movff	3942,indf2	;volatile
  7802                           
  7803                           ; BSR set to: 15
  7804                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  7805  001656  EE20 F005          	lfsr	2,5
  7806  00165A  5001               	movf	CANreceiveMessage@msg,w,c
  7807  00165C  26D9               	addwf	fsr2l,f,c
  7808  00165E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7809  001660  22DA               	addwfc	fsr2h,f,c
  7810  001662  CF67 FFDF          	movff	3943,indf2	;volatile
  7811                           
  7812                           ; BSR set to: 15
  7813                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  7814  001666  EE20 F006          	lfsr	2,6
  7815  00166A  5001               	movf	CANreceiveMessage@msg,w,c
  7816  00166C  26D9               	addwf	fsr2l,f,c
  7817  00166E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7818  001670  22DA               	addwfc	fsr2h,f,c
  7819  001672  CF68 FFDF          	movff	3944,indf2	;volatile
  7820                           
  7821                           ; BSR set to: 15
  7822                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  7823  001676  EE20 F007          	lfsr	2,7
  7824  00167A  5001               	movf	CANreceiveMessage@msg,w,c
  7825  00167C  26D9               	addwf	fsr2l,f,c
  7826  00167E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7827  001680  22DA               	addwfc	fsr2h,f,c
  7828  001682  CF69 FFDF          	movff	3945,indf2	;volatile
  7829                           
  7830                           ; BSR set to: 15
  7831                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  7832  001686  EE20 F008          	lfsr	2,8
  7833  00168A  5001               	movf	CANreceiveMessage@msg,w,c
  7834  00168C  26D9               	addwf	fsr2l,f,c
  7835  00168E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7836  001690  22DA               	addwfc	fsr2h,f,c
  7837  001692  CF6A FFDF          	movff	3946,indf2	;volatile
  7838                           
  7839                           ; BSR set to: 15
  7840                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  7841  001696  EE20 F009          	lfsr	2,9
  7842  00169A  5001               	movf	CANreceiveMessage@msg,w,c
  7843  00169C  26D9               	addwf	fsr2l,f,c
  7844  00169E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7845  0016A0  22DA               	addwfc	fsr2h,f,c
  7846  0016A2  CF6B FFDF          	movff	3947,indf2	;volatile
  7847                           
  7848                           ; BSR set to: 15
  7849                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  7850  0016A6  EE20 F00A          	lfsr	2,10
  7851  0016AA  5001               	movf	CANreceiveMessage@msg,w,c
  7852  0016AC  26D9               	addwf	fsr2l,f,c
  7853  0016AE  5002               	movf	CANreceiveMessage@msg+1,w,c
  7854  0016B0  22DA               	addwfc	fsr2h,f,c
  7855  0016B2  CF6C FFDF          	movff	3948,indf2	;volatile
  7856                           
  7857                           ; BSR set to: 15
  7858                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  7859  0016B6  EE20 F00B          	lfsr	2,11
  7860  0016BA  5001               	movf	CANreceiveMessage@msg,w,c
  7861  0016BC  26D9               	addwf	fsr2l,f,c
  7862  0016BE  5002               	movf	CANreceiveMessage@msg+1,w,c
  7863  0016C0  22DA               	addwfc	fsr2h,f,c
  7864  0016C2  CF6D FFDF          	movff	3949,indf2	;volatile
  7865                           
  7866                           ; BSR set to: 15
  7867                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7868  0016C6  EE20 F00E          	lfsr	2,14
  7869  0016CA  5001               	movf	CANreceiveMessage@msg,w,c
  7870  0016CC  26D9               	addwf	fsr2l,f,c
  7871  0016CE  5002               	movf	CANreceiveMessage@msg+1,w,c
  7872  0016D0  22DA               	addwfc	fsr2h,f,c
  7873  0016D2  AC65               	btfss	3941,6,c	;volatile
  7874  0016D4  D002               	goto	i1u368_20
  7875  0016D6  0E01               	movlw	1
  7876  0016D8  D001               	goto	i1u368_26
  7877  0016DA                     i1u368_20:
  7878  0016DA  0E00               	movlw	0
  7879  0016DC                     i1u368_26:
  7880  0016DC  6EDF               	movwf	indf2,c
  7881                           
  7882                           ; BSR set to: 15
  7883                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7884  0016DE  EE20 F00D          	lfsr	2,13
  7885  0016E2  5001               	movf	CANreceiveMessage@msg,w,c
  7886  0016E4  26D9               	addwf	fsr2l,f,c
  7887  0016E6  5002               	movf	CANreceiveMessage@msg+1,w,c
  7888  0016E8  22DA               	addwfc	fsr2h,f,c
  7889  0016EA  5065               	movf	3941,w,c	;volatile
  7890  0016EC  0B0F               	andlw	15
  7891  0016EE  6EDF               	movwf	indf2,c
  7892                           
  7893                           ; BSR set to: 15
  7894                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  7895  0016F0  EE20 F00C          	lfsr	2,12
  7896  0016F4  5001               	movf	CANreceiveMessage@msg,w,c
  7897  0016F6  26D9               	addwf	fsr2l,f,c
  7898  0016F8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7899  0016FA  22DA               	addwfc	fsr2h,f,c
  7900  0016FC  A662               	btfss	3938,3,c	;volatile
  7901  0016FE  D002               	goto	i1u369_20
  7902  001700  0E01               	movlw	1
  7903  001702  D001               	goto	i1u369_26
  7904  001704                     i1u369_20:
  7905  001704  0E00               	movlw	0
  7906  001706                     i1u369_26:
  7907  001706  6EDF               	movwf	indf2,c
  7908                           
  7909                           ; BSR set to: 15
  7910                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  7911  001708  B662               	btfsc	3938,3,c	;volatile
  7912  00170A  D043               	goto	i1l3342
  7913                           
  7914                           ; BSR set to: 15
  7915                           ;inc\CANlib.h: 606: {
  7916                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7917  00170C  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  7918  001710  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7919  001712  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7920  001714  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7921  001716  0E03               	movlw	3
  7922  001718                     i1u371_25:
  7923  001718  90D8               	bcf	status,0,c
  7924  00171A  3603               	rlcf	??_CANreceiveMessage,f,c
  7925  00171C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7926  00171E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7927  001720  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7928  001722  2EE8               	decfsz	wreg,f,c
  7929  001724  D7F9               	goto	i1u371_25
  7930  001726  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7931  00172A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7932  00172E  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7933  001732  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7934  001736  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7935  00173A  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7936                           
  7937                           ; BSR set to: 15
  7938                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  7939  00173E  3862               	swapf	3938,w,c	;volatile
  7940  001740  42E8               	rrncf	wreg,f,c
  7941  001742  0B07               	andlw	7
  7942  001744  0B07               	andlw	7
  7943  001746  6E0C               	movwf	CANreceiveMessage@tamp,c
  7944                           
  7945                           ; BSR set to: 15
  7946                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  7947  001748  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7948  00174C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7949  001750  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7950  001754  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7951  001758  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7952  00175C  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7953  001760  500C               	movf	CANreceiveMessage@tamp,w,c
  7954  001762  2403               	addwf	??_CANreceiveMessage,w,c
  7955  001764  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7956  001766  0E00               	movlw	0
  7957  001768  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7958  00176A  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7959  00176C  0E00               	movlw	0
  7960  00176E  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7961  001770  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7962  001772  0E00               	movlw	0
  7963  001774  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7964  001776  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7965  001778  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7966  00177C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7967  001780  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7968  001784  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7969  001788  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7970  00178C  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7971                           
  7972                           ;inc\CANlib.h: 610: }
  7973  001790  D08E               	goto	i1l3368
  7974  001792                     i1l3342:
  7975                           
  7976                           ; BSR set to: 15
  7977                           ;inc\CANlib.h: 611: else
  7978                           ;inc\CANlib.h: 612: {
  7979                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  7980  001792  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  7981  001796  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7982  001798  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7983  00179A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7984  00179C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7985  0017A0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7986  0017A4  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7987  0017A8  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7988  0017AC  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7989  0017B0  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7990                           
  7991                           ; BSR set to: 15
  7992                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  7993  0017B4  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  7994  0017B8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7995  0017BA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7996  0017BC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7997  0017BE  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7998  0017C2  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7999  0017C6  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8000  0017CA  6A03               	clrf	??_CANreceiveMessage,c
  8001  0017CC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8002  0017D0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8003  0017D4  5003               	movf	??_CANreceiveMessage,w,c
  8004  0017D6  26DE               	addwf	postinc2,f,c
  8005  0017D8  5004               	movf	??_CANreceiveMessage+1,w,c
  8006  0017DA  22DE               	addwfc	postinc2,f,c
  8007  0017DC  5005               	movf	??_CANreceiveMessage+2,w,c
  8008  0017DE  22DE               	addwfc	postinc2,f,c
  8009  0017E0  5006               	movf	??_CANreceiveMessage+3,w,c
  8010  0017E2  22DE               	addwfc	postinc2,f,c
  8011                           
  8012                           ; BSR set to: 15
  8013                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8014  0017E4  A062               	btfss	3938,0,c	;volatile
  8015  0017E6  D00D               	goto	i1l3350
  8016                           
  8017                           ; BSR set to: 15
  8018                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8019  0017E8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8020  0017EC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8021  0017F0  0E00               	movlw	0
  8022  0017F2  12DE               	iorwf	postinc2,f,c
  8023  0017F4  0E00               	movlw	0
  8024  0017F6  12DE               	iorwf	postinc2,f,c
  8025  0017F8  0E01               	movlw	1
  8026  0017FA  12DE               	iorwf	postinc2,f,c
  8027  0017FC  0E00               	movlw	0
  8028  0017FE  12DE               	iorwf	postinc2,f,c
  8029  001800  D000               	goto	i1l3350
  8030  001802                     i1l3350:
  8031                           
  8032                           ; BSR set to: 15
  8033                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8034  001802  A262               	btfss	3938,1,c	;volatile
  8035  001804  D00D               	goto	i1l3354
  8036                           
  8037                           ; BSR set to: 15
  8038                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8039  001806  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8040  00180A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8041  00180E  0E00               	movlw	0
  8042  001810  12DE               	iorwf	postinc2,f,c
  8043  001812  0E00               	movlw	0
  8044  001814  12DE               	iorwf	postinc2,f,c
  8045  001816  0E02               	movlw	2
  8046  001818  12DE               	iorwf	postinc2,f,c
  8047  00181A  0E00               	movlw	0
  8048  00181C  12DE               	iorwf	postinc2,f,c
  8049  00181E  D000               	goto	i1l3354
  8050  001820                     i1l3354:
  8051                           
  8052                           ; BSR set to: 15
  8053                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8054  001820  AA62               	btfss	3938,5,c	;volatile
  8055  001822  D00D               	goto	i1l3358
  8056                           
  8057                           ; BSR set to: 15
  8058                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8059  001824  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8060  001828  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8061  00182C  0E00               	movlw	0
  8062  00182E  12DE               	iorwf	postinc2,f,c
  8063  001830  0E00               	movlw	0
  8064  001832  12DE               	iorwf	postinc2,f,c
  8065  001834  0E04               	movlw	4
  8066  001836  12DE               	iorwf	postinc2,f,c
  8067  001838  0E00               	movlw	0
  8068  00183A  12DE               	iorwf	postinc2,f,c
  8069  00183C  D000               	goto	i1l3358
  8070  00183E                     i1l3358:
  8071                           
  8072                           ; BSR set to: 15
  8073                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8074  00183E  AC62               	btfss	3938,6,c	;volatile
  8075  001840  D00D               	goto	i1l3362
  8076                           
  8077                           ; BSR set to: 15
  8078                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8079  001842  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8080  001846  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8081  00184A  0E00               	movlw	0
  8082  00184C  12DE               	iorwf	postinc2,f,c
  8083  00184E  0E00               	movlw	0
  8084  001850  12DE               	iorwf	postinc2,f,c
  8085  001852  0E08               	movlw	8
  8086  001854  12DE               	iorwf	postinc2,f,c
  8087  001856  0E00               	movlw	0
  8088  001858  12DE               	iorwf	postinc2,f,c
  8089  00185A  D000               	goto	i1l3362
  8090  00185C                     i1l3362:
  8091                           
  8092                           ; BSR set to: 15
  8093                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8094  00185C  AE62               	btfss	3938,7,c	;volatile
  8095  00185E  D00D               	goto	i1l3366
  8096                           
  8097                           ; BSR set to: 15
  8098                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8099  001860  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8100  001864  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8101  001868  0E00               	movlw	0
  8102  00186A  12DE               	iorwf	postinc2,f,c
  8103  00186C  0E00               	movlw	0
  8104  00186E  12DE               	iorwf	postinc2,f,c
  8105  001870  0E10               	movlw	16
  8106  001872  12DE               	iorwf	postinc2,f,c
  8107  001874  0E00               	movlw	0
  8108  001876  12DE               	iorwf	postinc2,f,c
  8109  001878  D000               	goto	i1l3366
  8110  00187A                     i1l3366:
  8111                           
  8112                           ; BSR set to: 15
  8113                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8114  00187A  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8115  00187E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8116  001880  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8117  001882  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8118  001884  0E15               	movlw	21
  8119  001886                     i1u377_25:
  8120  001886  90D8               	bcf	status,0,c
  8121  001888  3603               	rlcf	??_CANreceiveMessage,f,c
  8122  00188A  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8123  00188C  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8124  00188E  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8125  001890  2EE8               	decfsz	wreg,f,c
  8126  001892  D7F9               	goto	i1u377_25
  8127  001894  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8128  001898  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8129  00189C  5003               	movf	??_CANreceiveMessage,w,c
  8130  00189E  12DE               	iorwf	postinc2,f,c
  8131  0018A0  5004               	movf	??_CANreceiveMessage+1,w,c
  8132  0018A2  12DE               	iorwf	postinc2,f,c
  8133  0018A4  5005               	movf	??_CANreceiveMessage+2,w,c
  8134  0018A6  12DE               	iorwf	postinc2,f,c
  8135  0018A8  5006               	movf	??_CANreceiveMessage+3,w,c
  8136  0018AA  12DE               	iorwf	postinc2,f,c
  8137  0018AC  D000               	goto	i1l3368
  8138  0018AE                     i1l3368:
  8139                           
  8140                           ; BSR set to: 15
  8141                           ;inc\CANlib.h: 629: }
  8142                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8143  0018AE  9E60               	bcf	3936,7,c	;volatile
  8144                           
  8145                           ; BSR set to: 15
  8146                           ;inc\CANlib.h: 632: return (error);
  8147                           ;	Return value of _CANreceiveMessage is never used
  8148  0018B0  D000               	goto	i1l402
  8149  0018B2                     i1l402:
  8150                           
  8151                           ; BSR set to: 15
  8152  0018B2  0012               	return		;funcret
  8153  0018B4                     __end_of_CANreceiveMessage:
  8154                           	opt stack 0
  8155                           pclatu	equ	0xFFB
  8156                           pclath	equ	0xFFA
  8157                           tblptru	equ	0xFF8
  8158                           tblptrh	equ	0xFF7
  8159                           tblptrl	equ	0xFF6
  8160                           tablat	equ	0xFF5
  8161                           prodh	equ	0xFF4
  8162                           prodl	equ	0xFF3
  8163                           intcon	equ	0xFF2
  8164                           intcon2	equ	0xFF1
  8165                           postinc0	equ	0xFEE
  8166                           fsr0h	equ	0xFEA
  8167                           fsr0l	equ	0xFE9
  8168                           wreg	equ	0xFE8
  8169                           postdec1	equ	0xFE5
  8170                           fsr1h	equ	0xFE2
  8171                           fsr1l	equ	0xFE1
  8172                           bsr	equ	0xFE0
  8173                           indf2	equ	0xFDF
  8174                           postinc2	equ	0xFDE
  8175                           postdec2	equ	0xFDD
  8176                           fsr2h	equ	0xFDA
  8177                           fsr2l	equ	0xFD9
  8178                           status	equ	0xFD8
  8179                           
  8180 ;; *************** function _CANisRxReady *****************
  8181 ;; Defined at:
  8182 ;;		line 1163 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;		None
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;		None
  8187 ;; Return value:  Size  Location     Type
  8188 ;;                  1    wreg      unsigned char 
  8189 ;; Registers used:
  8190 ;;		wreg, status,2
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/0
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8196 ;;      Params:         0       0       0       0
  8197 ;;      Locals:         1       0       0       0
  8198 ;;      Temps:          0       0       0       0
  8199 ;;      Totals:         1       0       0       0
  8200 ;;Total ram usage:        1 bytes
  8201 ;; Hardware stack levels used:    1
  8202 ;; Hardware stack levels required when called:    2
  8203 ;; This function calls:
  8204 ;;		Nothing
  8205 ;; This function is called by:
  8206 ;;		_ISR_bassa
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           
  8210                           	psect	text23
  8211  00255C                     __ptext23:
  8212                           	opt stack 0
  8213  00255C                     _CANisRxReady:
  8214                           	opt stack 24
  8215                           
  8216                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8217                           
  8218                           ; BSR set to: 15
  8219                           ;incstack = 0
  8220  00255C  0E01               	movlw	1
  8221  00255E  6E01               	movwf	_CANisRxReady$2821,c
  8222  002560  BE60               	btfsc	3936,7,c	;volatile
  8223  002562  D005               	goto	i1l545
  8224  002564  010F               	movlb	15	; () banked
  8225  002566  BF50               	btfsc	80,7,b	;volatile
  8226  002568  D002               	goto	i1l545
  8227                           
  8228                           ; BSR set to: 15
  8229  00256A  0E00               	movlw	0
  8230  00256C  6E01               	movwf	_CANisRxReady$2821,c
  8231  00256E                     i1l545:
  8232  00256E  5001               	movf	_CANisRxReady$2821,w,c
  8233  002570  D000               	goto	i1l546
  8234  002572                     i1l546:
  8235  002572  0012               	return		;funcret
  8236  002574                     __end_of_CANisRxReady:
  8237                           	opt stack 0
  8238                           pclatu	equ	0xFFB
  8239                           pclath	equ	0xFFA
  8240                           tblptru	equ	0xFF8
  8241                           tblptrh	equ	0xFF7
  8242                           tblptrl	equ	0xFF6
  8243                           tablat	equ	0xFF5
  8244                           prodh	equ	0xFF4
  8245                           prodl	equ	0xFF3
  8246                           intcon	equ	0xFF2
  8247                           intcon2	equ	0xFF1
  8248                           postinc0	equ	0xFEE
  8249                           fsr0h	equ	0xFEA
  8250                           fsr0l	equ	0xFE9
  8251                           wreg	equ	0xFE8
  8252                           postdec1	equ	0xFE5
  8253                           fsr1h	equ	0xFE2
  8254                           fsr1l	equ	0xFE1
  8255                           bsr	equ	0xFE0
  8256                           indf2	equ	0xFDF
  8257                           postinc2	equ	0xFDE
  8258                           postdec2	equ	0xFDD
  8259                           fsr2h	equ	0xFDA
  8260                           fsr2l	equ	0xFD9
  8261                           status	equ	0xFD8
  8262                           
  8263 ;; *************** function _ISR_alta *****************
  8264 ;; Defined at:
  8265 ;;		line 65 in file "sterzo.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;		None
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;		None               void
  8272 ;; Registers used:
  8273 ;;		cstack
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8279 ;;      Params:         0       0       0       0
  8280 ;;      Locals:         0       0       0       0
  8281 ;;      Temps:          0      14       0       0
  8282 ;;      Totals:         0      14       0       0
  8283 ;;Total ram usage:       14 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:    1
  8286 ;; This function calls:
  8287 ;;		_WriteTimer0
  8288 ;; This function is called by:
  8289 ;;		Interrupt level 2
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           	psect	intcode
  8294  000008                     __pintcode:
  8295                           	opt stack 0
  8296  000008                     _ISR_alta:
  8297                           	opt stack 24
  8298                           
  8299                           ;incstack = 0
  8300  000008  CFFA F064          	movff	pclath,??_ISR_alta
  8301  00000C  CFFB F065          	movff	pclatu,??_ISR_alta+1
  8302  000010  CFE9 F066          	movff	fsr0l,??_ISR_alta+2
  8303  000014  EDBA  F010         	call	int_func,f	;refresh shadow registers
  8304                           pclatu	equ	0xFFB
  8305                           pclath	equ	0xFFA
  8306                           tblptru	equ	0xFF8
  8307                           tblptrh	equ	0xFF7
  8308                           tblptrl	equ	0xFF6
  8309                           tablat	equ	0xFF5
  8310                           prodh	equ	0xFF4
  8311                           prodl	equ	0xFF3
  8312                           intcon	equ	0xFF2
  8313                           intcon2	equ	0xFF1
  8314                           postinc0	equ	0xFEE
  8315                           fsr0h	equ	0xFEA
  8316                           fsr0l	equ	0xFE9
  8317                           wreg	equ	0xFE8
  8318                           postdec1	equ	0xFE5
  8319                           fsr1h	equ	0xFE2
  8320                           fsr1l	equ	0xFE1
  8321                           bsr	equ	0xFE0
  8322                           indf2	equ	0xFDF
  8323                           postinc2	equ	0xFDE
  8324                           postdec2	equ	0xFDD
  8325                           fsr2h	equ	0xFDA
  8326                           fsr2l	equ	0xFD9
  8327                           status	equ	0xFD8
  8328                           
  8329                           	psect	intcode_body
  8330  002174                     __pintcode_body:
  8331                           	opt stack 24
  8332  002174                     int_func:
  8333                           	opt stack 24
  8334  002174  0006               	pop		; remove dummy address from shadow register refresh
  8335  002176  CFEA F067          	movff	fsr0h,??_ISR_alta+3
  8336  00217A  CFE1 F068          	movff	fsr1l,??_ISR_alta+4
  8337  00217E  CFE2 F069          	movff	fsr1h,??_ISR_alta+5
  8338  002182  CFD9 F06A          	movff	fsr2l,??_ISR_alta+6
  8339  002186  CFDA F06B          	movff	fsr2h,??_ISR_alta+7
  8340  00218A  CFF3 F06C          	movff	prodl,??_ISR_alta+8
  8341  00218E  CFF4 F06D          	movff	prodh,??_ISR_alta+9
  8342  002192  CFF6 F06E          	movff	tblptrl,??_ISR_alta+10
  8343  002196  CFF7 F06F          	movff	tblptrh,??_ISR_alta+11
  8344  00219A  CFF8 F070          	movff	tblptru,??_ISR_alta+12
  8345  00219E  CFF5 F071          	movff	tablat,??_ISR_alta+13
  8346                           
  8347                           ;sterzo.c: 66: if (noChange == 1) {
  8348  0021A2  A04B               	btfss	_noChange/(0+8),_noChange& (0+7),c
  8349  0021A4  D016               	goto	i2l3650
  8350                           
  8351                           ;sterzo.c: 67: PORTCbits.RC0 = ~PORTCbits.RC0;
  8352  0021A6  7082               	btg	3970,0,c	;volatile
  8353                           
  8354                           ;sterzo.c: 68: T0CONbits.TMR0ON = 0;
  8355  0021A8  9ED5               	bcf	4053,7,c	;volatile
  8356                           
  8357                           ;sterzo.c: 69: if (PORTCbits.RC0 == 1) {
  8358  0021AA  A082               	btfss	3970,0,c	;volatile
  8359  0021AC  D008               	goto	i2l3644
  8360                           
  8361                           ;sterzo.c: 70: WriteTimer0(Ton);
  8362  0021AE  C02B  F060         	movff	_Ton,WriteTimer0@timer0
  8363  0021B2  C02C  F061         	movff	_Ton+1,WriteTimer0@timer0+1
  8364  0021B6  ECC4  F012         	call	_WriteTimer0	;wreg free
  8365                           
  8366                           ;sterzo.c: 71: T0CONbits.TMR0ON = 1;
  8367  0021BA  8ED5               	bsf	4053,7,c	;volatile
  8368  0021BC  D000               	goto	i2l3644
  8369  0021BE                     i2l3644:
  8370                           
  8371                           ;sterzo.c: 72: }
  8372                           ;sterzo.c: 73: if (PORTCbits.RC0 == 0) {
  8373  0021BE  B082               	btfsc	3970,0,c	;volatile
  8374  0021C0  D008               	goto	i2l3650
  8375                           
  8376                           ;sterzo.c: 74: WriteTimer0(Toff);
  8377  0021C2  C029  F060         	movff	_Toff,WriteTimer0@timer0
  8378  0021C6  C02A  F061         	movff	_Toff+1,WriteTimer0@timer0+1
  8379  0021CA  ECC4  F012         	call	_WriteTimer0	;wreg free
  8380                           
  8381                           ;sterzo.c: 75: T0CONbits.TMR0ON = 1;
  8382  0021CE  8ED5               	bsf	4053,7,c	;volatile
  8383  0021D0  D000               	goto	i2l3650
  8384  0021D2                     i2l3650:
  8385                           
  8386                           ;sterzo.c: 76: }
  8387                           ;sterzo.c: 77: }
  8388                           ;sterzo.c: 78: INTCONbits.TMR0IF = 0;
  8389  0021D2  94F2               	bcf	intcon,2,c	;volatile
  8390  0021D4  C071  FFF5         	movff	??_ISR_alta+13,tablat
  8391  0021D8  C070  FFF8         	movff	??_ISR_alta+12,tblptru
  8392  0021DC  C06F  FFF7         	movff	??_ISR_alta+11,tblptrh
  8393  0021E0  C06E  FFF6         	movff	??_ISR_alta+10,tblptrl
  8394  0021E4  C06D  FFF4         	movff	??_ISR_alta+9,prodh
  8395  0021E8  C06C  FFF3         	movff	??_ISR_alta+8,prodl
  8396  0021EC  C06B  FFDA         	movff	??_ISR_alta+7,fsr2h
  8397  0021F0  C06A  FFD9         	movff	??_ISR_alta+6,fsr2l
  8398  0021F4  C069  FFE2         	movff	??_ISR_alta+5,fsr1h
  8399  0021F8  C068  FFE1         	movff	??_ISR_alta+4,fsr1l
  8400  0021FC  C067  FFEA         	movff	??_ISR_alta+3,fsr0h
  8401  002200  C066  FFE9         	movff	??_ISR_alta+2,fsr0l
  8402  002204  C065  FFFB         	movff	??_ISR_alta+1,pclatu
  8403  002208  C064  FFFA         	movff	??_ISR_alta,pclath
  8404  00220C  0011               	retfie		f
  8405  00220E                     __end_of_ISR_alta:
  8406                           	opt stack 0
  8407                           pclatu	equ	0xFFB
  8408                           pclath	equ	0xFFA
  8409                           tblptru	equ	0xFF8
  8410                           tblptrh	equ	0xFF7
  8411                           tblptrl	equ	0xFF6
  8412                           tablat	equ	0xFF5
  8413                           prodh	equ	0xFF4
  8414                           prodl	equ	0xFF3
  8415                           intcon	equ	0xFF2
  8416                           intcon2	equ	0xFF1
  8417                           postinc0	equ	0xFEE
  8418                           fsr0h	equ	0xFEA
  8419                           fsr0l	equ	0xFE9
  8420                           wreg	equ	0xFE8
  8421                           postdec1	equ	0xFE5
  8422                           fsr1h	equ	0xFE2
  8423                           fsr1l	equ	0xFE1
  8424                           bsr	equ	0xFE0
  8425                           indf2	equ	0xFDF
  8426                           postinc2	equ	0xFDE
  8427                           postdec2	equ	0xFDD
  8428                           fsr2h	equ	0xFDA
  8429                           fsr2l	equ	0xFD9
  8430                           status	equ	0xFD8
  8431                           
  8432 ;; *************** function _WriteTimer0 *****************
  8433 ;; Defined at:
  8434 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;  timer0          2    0[BANK0 ] unsigned int 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;  timer           2    2[BANK0 ] struct Timers
  8439 ;; Return value:  Size  Location     Type
  8440 ;;		None               void
  8441 ;; Registers used:
  8442 ;;		None
  8443 ;; Tracked objects:
  8444 ;;		On entry : 0/0
  8445 ;;		On exit  : 0/0
  8446 ;;		Unchanged: 0/0
  8447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8448 ;;      Params:         0       2       0       0
  8449 ;;      Locals:         0       2       0       0
  8450 ;;      Temps:          0       0       0       0
  8451 ;;      Totals:         0       4       0       0
  8452 ;;Total ram usage:        4 bytes
  8453 ;; Hardware stack levels used:    1
  8454 ;; This function calls:
  8455 ;;		Nothing
  8456 ;; This function is called by:
  8457 ;;		_ISR_alta
  8458 ;; This function uses a non-reentrant model
  8459 ;;
  8460                           
  8461                           	psect	text25
  8462  002588                     __ptext25:
  8463                           	opt stack 0
  8464  002588                     _WriteTimer0:
  8465                           	opt stack 24
  8466                           
  8467                           ;incstack = 0
  8468  002588  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  8469  00258C  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  8470  002590  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  8471  002594  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  8472  002598  0012               	return		;funcret
  8473  00259A                     __end_of_WriteTimer0:
  8474                           	opt stack 0
  8475  0000                     pclatu	equ	0xFFB
  8476                           pclath	equ	0xFFA
  8477                           tblptru	equ	0xFF8
  8478                           tblptrh	equ	0xFF7
  8479                           tblptrl	equ	0xFF6
  8480                           tablat	equ	0xFF5
  8481                           prodh	equ	0xFF4
  8482                           prodl	equ	0xFF3
  8483                           intcon	equ	0xFF2
  8484                           intcon2	equ	0xFF1
  8485                           postinc0	equ	0xFEE
  8486                           fsr0h	equ	0xFEA
  8487                           fsr0l	equ	0xFE9
  8488                           wreg	equ	0xFE8
  8489                           postdec1	equ	0xFE5
  8490                           fsr1h	equ	0xFE2
  8491                           fsr1l	equ	0xFE1
  8492                           bsr	equ	0xFE0
  8493                           indf2	equ	0xFDF
  8494                           postinc2	equ	0xFDE
  8495                           postdec2	equ	0xFDD
  8496                           fsr2h	equ	0xFDA
  8497                           fsr2l	equ	0xFD9
  8498                           status	equ	0xFD8
  8499                           pclatu	equ	0xFFB
  8500                           pclath	equ	0xFFA
  8501                           tblptru	equ	0xFF8
  8502                           tblptrh	equ	0xFF7
  8503                           tblptrl	equ	0xFF6
  8504                           tablat	equ	0xFF5
  8505                           prodh	equ	0xFF4
  8506                           prodl	equ	0xFF3
  8507                           intcon	equ	0xFF2
  8508                           intcon2	equ	0xFF1
  8509                           postinc0	equ	0xFEE
  8510                           fsr0h	equ	0xFEA
  8511                           fsr0l	equ	0xFE9
  8512                           wreg	equ	0xFE8
  8513                           postdec1	equ	0xFE5
  8514                           fsr1h	equ	0xFE2
  8515                           fsr1l	equ	0xFE1
  8516                           bsr	equ	0xFE0
  8517                           indf2	equ	0xFDF
  8518                           postinc2	equ	0xFDE
  8519                           postdec2	equ	0xFDD
  8520                           fsr2h	equ	0xFDA
  8521                           fsr2l	equ	0xFD9
  8522                           status	equ	0xFD8
  8523                           
  8524                           	psect	param0
  8525  0000                     pclatu	equ	0xFFB
  8526                           pclath	equ	0xFFA
  8527                           tblptru	equ	0xFF8
  8528                           tblptrh	equ	0xFF7
  8529                           tblptrl	equ	0xFF6
  8530                           tablat	equ	0xFF5
  8531                           prodh	equ	0xFF4
  8532                           prodl	equ	0xFF3
  8533                           intcon	equ	0xFF2
  8534                           intcon2	equ	0xFF1
  8535                           postinc0	equ	0xFEE
  8536                           fsr0h	equ	0xFEA
  8537                           fsr0l	equ	0xFE9
  8538                           wreg	equ	0xFE8
  8539                           postdec1	equ	0xFE5
  8540                           fsr1h	equ	0xFE2
  8541                           fsr1l	equ	0xFE1
  8542                           bsr	equ	0xFE0
  8543                           indf2	equ	0xFDF
  8544                           postinc2	equ	0xFDE
  8545                           postdec2	equ	0xFDD
  8546                           fsr2h	equ	0xFDA
  8547                           fsr2l	equ	0xFD9
  8548                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      75
    BANK0           160     48      63
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANsendMessage
    ___lwdiv->i1___wmul

Critical Paths under _main in BANK0

    _delay_ms->___wmul
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _calibrazione->___aldiv
    ___lldiv->___lmul

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->_WriteTimer0

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    7771
                                             44 BANK0      4     4      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                            ___lldiv
                             ___lmul
                       _calibrazione
            _configurazione_iniziale
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     515
                                             24 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     365
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    6216
                      _CANInitialize
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     282
                                             18 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             32 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             18 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _calibrazione                                         0     0      0     428
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     428
                                             18 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2       0
                                             18 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     322
                                             18 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     290
                                             30 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           20    20      0    4311
                                             16 COMRAM    20    20      0
                       _CANisRxReady
                  _CANreceiveMessage
                     _CANsendMessage
                            ___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (5) i1___wmul                                             6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     290
                                              6 COMRAM     7     3      4
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _CANsendMessage                                      16     8      8    2651
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            14    14      0     253
                                              4 BANK0     14    14      0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     253
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _calibrazione
     _BusyADC
     _ConvertADC
     _ReadADC
     ___aldiv
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _OpenADC
   _delay_ms
     ___wmul

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   _CANsendMessage
   ___lwdiv
     i1___wmul (ARG)
   i1___wmul

 _ISR_alta (ROOT)
   _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     30      3F       4       39.4%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     24      4B       1       78.9%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8A       9        0.0%
DATA                 0      0      8A      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Jun 07 19:25:17 2016

              ??_CANisTXwarningON 0072              __end_of_CANSetFilter 0CE2  
                              _id 0025                                bsr 000FE0  
             ___wmul@multiplicand 0074                       __CFG_BORV$3 000000  
                i1___wmul@product 0005                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                       __CFG_OSC$HS 000000  
                             l420 1AD2                               l421 1AD6  
                             l510 0C92                               l502 0C52  
                             l430 1BE2                               l422 1AE2  
                             l342 1D22                               l503 0C56  
                             l431 1BEE                               l423 1AE6  
                             l343 1D2C                               l504 0C62  
                             l512 0CE0                               l432 1BF2  
                             l424 1AF2                               l416 1AB2  
                             l505 0C66                               l433 1BFE  
                             l417 1AB6                               l530 25C2  
                             l506 0C72                               l450 06C8  
                             l434 1C02                               l418 1AC2  
                             l507 0C76                               l451 06D4  
                             l435 1C0E                               l427 1BCE  
                             l419 1AC6                               l508 0C82  
                             l460 07E2                               l452 06D8  
                             l428 1BD2                               l509 0C86  
                             l461 07E6                               l453 06E4  
                             l429 1BDE                               l437 1C5C  
                             l470 08F6                               l462 07F2  
                             l454 06E8                               l527 25B4  
                             l471 0902                               l463 07F6  
                             l455 06F4                               l447 06B4  
                             l615 1F7A                               l480 0A12  
                             l472 0906                               l464 0802  
                             l448 06B8                               l481 0A16  
                             l473 0912                               l465 0806  
                             l449 06C4                               l553 24D6  
                             l482 0A22                               l474 0916  
                             l466 0812                               l458 07D2  
                             l491 0B32                               l483 0A26  
                             l475 0922                               l459 07D6  
                             l492 0B36                               l484 0A32  
                             l476 0926                               l637 25A6  
                             l493 0B42                               l485 0A36  
                             l477 0932                               l469 08F2  
                             l494 0B46                               l486 0A42  
                             l495 0B52                               l487 0A46  
                             l496 0B56                               l488 0A52  
                             l497 0B62                               l746 20AC  
                             l498 0B66                               l667 2586  
                             l499 0B72                               l659 2306  
                             l677 251A                      __CFG_CPB$OFF 000000  
                    __CFG_CPD$OFF 000000                               _Ton 002B  
            __size_of_WriteTimer0 0012                               _msg 0030  
                             wreg 000FE8                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              l1132 2162  
                            l3002 209A                              l2506 1A26  
                            l2532 1AF8                              l2606 0332  
                            l2472 254E                              l2712 0742  
                            l2624 03EE                              l2706 06FA  
                            l2642 04AA                              l2538 1B40  
                            l2490 196E                              l3602 1F66  
                            l2740 0818                              l2660 0566  
                            l2564 1C14                              l3462 231E  
                            l3454 238A                              l2814 0AA0  
                            l3480 20F8                              l2808 0A58  
                            l2920 1D1A                              l3392 24C8  
                            l3466 2346                              l2842 0B78  
                            l2746 0860                              l2922 1D30  
                            l2914 1CC4                              l3476 20DC  
                            l2780 0980                              l2588 0278  
                            l2908 1CB4                              l3478 20EE  
                            l2774 0938                              l2678 0622  
                            l2926 1D38                              l3488 214E  
                            l2848 0BC0                              l2928 1D7C  
                            l2970 1FA8                              l3586 1E32  
                            l2876 0C98                              l2982 1FF6  
                            l2984 2008                              l2976 1FC8  
                            l2994 2068                              l2986 2012  
                            l2998 207C                              u2105 1948  
                            u2130 19A0                              u3020 0CB8  
                            u2300 1C34                              u2220 1B18  
                            _LATA 000F89                              _LATB 000F8A  
                            u2135 1994                              _LATC 000F8B  
                            _LATD 000F8C                              u3025 0CAC  
                            u2305 1C28                              u2225 1B0C  
                            u2145 1A00                              _LATE 000F8D  
                            u2410 0368                              u2330 01F2  
                            u2090 18E8                              u3070 25A2  
                            u2415 035C                              u2335 01E6  
                            u2095 18DC                              u2505 0540  
                            u2425 03C8                              u2345 0252  
                            u2530 059C                              u2450 0424  
                            u2370 02AC                              u2700 0838  
                            u2620 071A                              u4117 24CA  
                            u2535 0590                              u2455 0418  
                            u2375 02A0                              u2705 082C  
                            u2625 070E                              u2545 05FC  
                            u2465 0484                              u2385 030C  
                            u2490 04E0                              u2495 04D4  
                            u2940 0B98                              u2860 0A78  
                            u2780 0958                              u2945 0B8C  
                            u2865 0A6C                              u2785 094C  
                            u3780 25B0                              u3790 25BE  
             __size_of_CANSetMask 03AA                              _Toff 0029  
                            _main 1E2C                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 01B4  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                   __end_of_BusyADC 25A8  
                 __end_of_ReadADC 2588                  _CANOperationMode 2544  
                 __end_of_OpenADC 230A        __size_of_CANreceiveMessage 052E  
                 __end_of___aldiv 20AE                             ?_main 0001  
                 __end_of___lldiv 2174                             _T0CON 000FD5  
                 __end_of___lwdiv 2454                             i1l402 18B2  
                           i1l350 0DCC                             i1l351 0D68  
                           i1l352 0D70                             i1l361 1384  
                           i1l353 0D78                             i1l362 114E  
                           i1l354 0D80                             i1l363 0F2C  
                           i1l347 0F18                             i1l380 11D4  
                           i1l372 10A8                             i1l364 0F30  
                           i1l348 0CF6                             i1l381 11DC  
                           i1l373 10AC                             i1l365 1002  
                           i1l357 0E72                             i1l349 0CFA  
                           i1l382 11E4                             i1l374 10B6  
                           i1l366 0F9E                             i1l358 0E76  
                           i1l383 11EC                             i1l367 0FA6  
                           i1l359 0E80                             i1l368 0FAE  
                           i1l608 016E                             i1l545 256E  
                           i1l377 1162                             i1l369 0FB6  
                           i1l546 2572                             i1l394 1632  
                           i1l386 12DE                             i1l378 1166  
                           i1l387 12E2                             i1l379 1238  
                           i1l388 12EC                             i1l677 2542  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
               _CANisRxReady$2821 0001                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000               ___lmul@multiplicand 0076  
              __size_of_ISR_bassa 019C                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 0084                  __end_of_ISR_alta 220E  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _timer 0098                        _ConvertADC 25C8  
                  __pbitbssCOMRAM 0258              __end_of_CANisRxReady 2574  
                           tablat 000FF5                  __end_ofi1___wmul 2544  
                           status 000FD8               i1___wmul@multiplier 0001  
                 __initialization 2454                      __end_of_main 1F82  
                          ??_main 008C                     __activetblptr 000002  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _ADCON2 000FC0                            _CANCON 000F6F  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
           __size_of_calibrazione 0074                   __CFG_BBSIZ$1024 000000  
                          i1l3210 12D4                            i1l3114 0FC0  
                          i1l1195 244A                            i1l3300 15D8  
                          i1l3140 10BC                            i1l3134 109E  
                          i1l3038 0D8A                            i1l3304 15F8  
                          i1l3216 12F2                            i1l3064 0E86  
                          i1l3306 162C                            i1l3242 1392  
                          i1l3058 0E68                            i1l3500 2418  
                          i1l3350 1802                            i1l3342 1792  
                          i1l3246 139A                            i1l3190 11F6  
                          i1l3510 243E                            i1l3502 2420  
                          i1l3280 1506                            i1l3362 185C  
                          i1l3354 1820                            i1l3292 1598  
                          i1l3366 187A                            i1l3358 183E  
                          i1l3368 18AE                            i1l3296 15B8  
                          i1l3288 1578                            i1l3570 012A  
                          i1l3580 0168                            i1l3572 012E  
                          i1l3566 0112                            i1l3558 00BE  
                          i1l3568 0120                            i1l3498 240E  
                          i2l3650 21D2                            i2l3644 21BE  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 0005                CANsendMessage@tamp 000D  
                       ??_BusyADC 0072                         ??_ReadADC 0074  
                __end_of_delay_ms 24E4             __size_of_CANSetFilter 0B2A  
                       ??_OpenADC 0074                    __CFG_XINST$OFF 000000  
               __end_of_ISR_bassa 01B4                            ___lmul 230A  
                       ??___aldiv 007A                            ___wmul 24E4  
                  __CFG_STVREN$ON 000000                         ??___lldiv 0086  
                       ??___lwdiv 000B                      ??_CANSetMask 0077  
                          clear_0 245A                            clear_1 2468  
        ?_configurazione_iniziale 0001                   __CFG_BOREN$BOHW 000000  
                    _calibrazione 2384                      __pdataCOMRAM 0047  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                   _currentSteering 0047  
                    _CANSetFilter 01B8                       ?_ConvertADC 0001  
                      __accesstop 0060           __end_of__initialization 24A0  
              __end_of_CANSetMask 1C5E                   __CFG_PBADEN$OFF 000000  
                   ___rparam_used 000000         __size_of_CANisRXwarningON 000E  
                  __pcstackCOMRAM 0001                      __pidataBANK0 25CC  
                       ?_ISR_alta 0001                         ?i1___wmul 0001  
           CANSetFilter@numBuffer 007B         __size_of_CANisTXwarningON 000E  
           __size_of_CANisRxReady 0018          __end_of_CANOperationMode 255C  
                      __pbssBANK0 0090                        _data_array 003F  
         __size_of_CANsendMessage 06A4                           ?___lmul 0072  
                         ?___wmul 0072                        ??_ISR_alta 0064  
                WriteTimer0@timer 0062                     ??_WriteTimer0 0062  
                  ___lmul@product 007A                      _CANisRxReady 255C  
             __size_of_ConvertADC 0004                           _CANSTAT 000F6E  
                         _BRGCON1 000F70                           _BRGCON2 000F71  
                         _BRGCON3 000F72                        ??i1___wmul 0005  
          __size_of_CANInitialize 01CE                         ?_delay_ms 0078  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60                           _RXB1CON 000F50  
                         _TXB0DLC 000F45                           _TXB1DLC 000F35  
                         _TXB2DLC 000F25               CANsendMessage@flags 0008  
                         _BusyADC 259A                           _ReadADC 2574  
                       _ADCResult 0090                           _OpenADC 228E  
                         __Hparam 0000                           __Lparam 0000  
                delay_ms@value_ms 0078                           ___aldiv 1F82  
                 __size_of___lmul 007A                           ___lldiv 20AE  
                 __size_of___wmul 0038                           ___lwdiv 23F8  
            CANInitialize@propSeg 0089                           __pcinit 2454  
                         __ramtop 0300                           __ptext0 1E2C  
                         __ptext1 24AA                           __ptext2 24E4  
                         __ptext3 220E                           __ptext4 228E  
                         __ptext5 1C5E                           __ptext6 18B4  
                         __ptext7 01B8                           __ptext8 2544  
                         __ptext9 2384                         _T0CONbits 000FD5  
                      _duty_cycle 0094                  ___aldiv@dividend 0072  
             __end_of_WriteTimer0 259A                        ??_delay_ms 007A  
          CANreceiveMessage@error 000B                    OpenADC@config2 0072  
                  __pintcode_body 2174              end_of_initialization 24A0  
                   __Lmediumconst 0000                           int_func 2174  
                _CANisRXwarningON 25B6                     _CANInitialize 1C5E  
                 ___lldiv@divisor 0082                   ___lldiv@counter 008A  
                ___aldiv@quotient 007C                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE             i1___wmul@multiplicand 0003  
                       _ISR_bassa 0018                         _PORTAbits 000F80  
                  CANSetMask@mask 0072                         _PORTCbits 000F82  
                  CANSetMask@tamp 007C                    CANSetMask@type 0076  
                _CANisTXwarningON 25A8                      ??_ConvertADC 0072  
__size_of_configurazione_iniziale 0080           _clock_counter_reference 009C  
                  _CANsendMessage 0CE2                  CANInitialize@BRP 0083  
                CANInitialize@SJW 0082                    ?_CANInitialize 0080  
                  __end_of___lmul 2384                        ?_ISR_bassa 0001  
                  __end_of___wmul 251C                     __pidataCOMRAM 25C4  
               __size_of_ISR_alta 2206                       _WriteTimer0 2588  
              __end_of_ConvertADC 25CC               start_initialization 2454  
               __size_ofi1___wmul 0028               CANSetMask@numBuffer 007B  
          __end_of_CANsendMessage 1386                 ?_CANOperationMode 0001  
              ??_CANOperationMode 0072        CANInitialize@FilterConfig1 008A  
      CANInitialize@FilterConfig2 008B                          ??___lmul 007A  
                        ??___wmul 0076                       __pdataBANK0 009E  
                     _calibration 002D                  __CFG_LPT1OSC$OFF 000000  
          CANInitialize@phaseSeg1 0080            CANInitialize@phaseSeg2 0081  
                     __pbssCOMRAM 0025                     __pcstackBANK0 0060  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
               __size_of_delay_ms 003A                   ?_CANsendMessage 0001  
                 ??_CANInitialize 0085                          ?_BusyADC 0001  
                        ?_ReadADC 0072                CANSetFilter@filter 0072  
               OpenADC@portconfig 0073                          ?_OpenADC 0072  
                  _theorySteering 002F                  ___lwdiv@dividend 0007  
                       __pintcode 0008                          ?___aldiv 0072  
                        ?___lldiv 007E                          ?___lwdiv 0007  
                     ??_ISR_bassa 0011                       __pintcodelo 0018  
               WriteTimer0@timer0 0060          __end_of_CANisRXwarningON 25C4  
                     _COMSTATbits 000F74                  ___lwdiv@quotient 000B  
         _configurazione_iniziale 220E                   ___aldiv@divisor 0076  
           CANreceiveMessage@tamp 000C                   ___aldiv@counter 007A  
                  ___wmul@product 0076                     OpenADC@config 0076  
    _delay_quartz_frequency_value 009E                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE3bits 000FA3  
        __end_of_CANisTXwarningON 25B6                          i1u400_20 0108  
                        i1u323_20 0DA8                          i1u323_25 0D9E  
                        i1u324_20 0DEE                          i1u324_25 0DE4  
                        i1u325_25 0E3A                          i1u350_20 125A  
                        i1u350_25 1250                          i1u351_25 12A6  
                        i1u336_20 0FDE                          i1u360_25 148A  
                        i1u336_25 0FD4                          i1u337_20 1024  
                        i1u337_25 101A                          i1u338_25 1070  
                        i1u371_25 1718                          i1u357_20 1446  
                        i1u349_20 1214                          i1u349_25 120A  
                        i1u357_26 1448                          i1u358_20 1474  
                        i1u366_25 1604                          i1u358_26 1476  
                        i1u368_20 16DA                          i1u368_26 16DC  
                        i1u369_20 1704                          i1u377_25 1886  
                        i1u369_26 1706                          _PIR1bits 000F9E  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _ISR_alta 0008  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                 ___wmul@multiplier 0072  
                        i1___wmul 251C                     ?_calibrazione 0001  
                   ?_CANSetFilter 0072                 ___lmul@multiplier 0072  
                     _INTCON2bits 000FF1                         copy_data0 2494  
                      _CANCONbits 000F6F                          __Hparam0 0000  
                __size_of_BusyADC 000E                  __size_of_ReadADC 0014  
                        __Lparam0 0000                      _RXB0SIDLbits 000F62  
                __size_of_OpenADC 007C                      _RXB1SIDLbits 000F52  
                __size_of___aldiv 012C                        _CANSetMask 18B4  
                __size_of___lldiv 00C6                  __size_of___lwdiv 005C  
                    ?_WriteTimer0 0060                    ??_calibrazione 0080  
       ??_configurazione_iniziale 008C                      _RXF0SIDLbits 000F01  
                        _delay_ms 24AA                   ___lwdiv@divisor 0009  
                    _RXF1SIDLbits 000F05                   ___lwdiv@counter 000D  
                  ??_CANSetFilter 0077                          __ptext10 1F82  
                        __ptext11 2574                          __ptext20 23F8  
                        __ptext12 25C8                          __ptext21 0CE2  
                        __ptext13 259A                          __ptext22 1386  
                        __ptext14 230A                          __ptext23 255C  
                        __ptext15 20AE                          __ptext16 25A8  
                        __ptext25 2588                          __ptext17 25B6  
                        __ptext19 251C                      _RXF2SIDLbits 000F09  
                        _noChange 0258                      _RXF3SIDLbits 000F0D  
                    _RXF4SIDLbits 000F11                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 0007                      _remote_frame 0259  
                   __size_of_main 0156                          _limiteDx 0049  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
       __size_of_CANOperationMode 0018                     ?_CANisRxReady 0001  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 1386  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 0009                ?_CANreceiveMessage 0001  
        CANsendMessage@identifier 0001                          intlevel1 0000  
                        intlevel2 0000                  CANSetFilter@tamp 007C  
                CANSetFilter@type 0076               ??_CANreceiveMessage 0003  
                ___lldiv@dividend 007E                       _TXB0DLCbits 000F45  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 228E  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
            CANOperationMode@mode 0072                    ??_CANisRxReady 0001  
                     ?_CANSetMask 0072         __end_of_CANreceiveMessage 18B4  
                ___lldiv@quotient 0086                 ?_CANisRXwarningON 0001  
                    ___aldiv@sign 007B                ??_CANisRXwarningON 0072  
            __end_of_calibrazione 23F8             __end_of_CANInitialize 1E2C  
               ?_CANisTXwarningON 0001  
